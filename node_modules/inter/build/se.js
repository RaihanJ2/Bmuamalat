function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _l4y31 = {
    "default": "#,##0 %"
}, _l4y32 = {
    am: "i.b.",
    pm: "e.b."
}, _l4y33 = [ "Q1", "Q2", "Q3", "Q4" ], _l4y34 = {
    all: {
        leap: "{0}bis"
    }
}, _l4y35 = {
    a: "h a – h a",
    h: "h–h a"
}, _l4y36 = {
    displayName: "áigeavádat"
}, _l4y37 = [ "Before R.O.C.", "R.O.C." ], _l4y38 = {
    displayName: "váhkkubeaivi"
}, _l4y39 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _l4y310 = [ "S", "V", "M", "G", "D", "B", "L" ], _l4y311 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _l4y312 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _l4y313 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _l4y314 = {
    displayName: "beaivi ráidodássi"
}, _l4y315 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _l4y316 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _l4y317 = {
    am: "iđitbeaivi",
    pm: "eahketbeaivi"
}, _l4y318 = {
    one: "{0}°",
    two: "{0}°",
    other: "{0}°"
}, _l4y319 = {
    one: "{0}′",
    two: "{0}′",
    other: "{0}′"
}, _l4y320 = {
    one: "{0}″",
    two: "{0}″",
    other: "{0}″"
}, _l4y321 = {
    one: "{0}m",
    two: "{0}m",
    other: "{0}m"
}, _l4y322 = {
    one: "0 dt",
    two: "0 dt",
    other: "0 dt"
}, _l4y323 = {
    one: "0 mn",
    two: "0 mn",
    other: "0 mn"
}, _l4y324 = {
    one: "0 md",
    two: "0 md",
    other: "0 md"
}, _l4y325 = {
    one: "0 bn",
    two: "0 bn",
    other: "0 bn"
}, _l4y326 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _l4y327 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _l4y328 = {
    M: "G y MMM–MMM",
    y: "G y MMM – y MMM"
}, _l4y329 = {
    am: "iđitbeaivet",
    pm: "eahketbeaivet"
}, _l4y330 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _l4y331 = {
    one: "{0}°F",
    two: "{0}°F",
    other: "{0}°F"
}, _l4y332 = {
    one: "00 dt",
    two: "00 dt",
    other: "00 dt"
}, _l4y333 = {
    one: "00 mn",
    two: "00 mn",
    other: "00 mn"
}, _l4y334 = {
    one: "00 md",
    two: "00 md",
    other: "00 md"
}, _l4y335 = {
    one: "00 bn",
    two: "00 bn",
    other: "00 bn"
}, _l4y336 = {
    M: "G y MMMM–MMMM",
    y: "G y MMMM – y MMMM"
}, _l4y337 = {
    one: "{0} ac",
    two: "{0} ac",
    other: "{0} ac"
}, _l4y338 = {
    one: "{0} mi",
    two: "{0} mi",
    other: "{0} mi"
}, _l4y339 = {
    one: "{0} yd",
    two: "{0} yd",
    other: "{0} yd"
}, _l4y340 = {
    one: "{0} ly",
    two: "{0} ly",
    other: "{0} ly"
}, _l4y341 = {
    one: "000 dt",
    two: "000 dt",
    other: "000 dt"
}, _l4y342 = {
    one: "000 mn",
    two: "000 mn",
    other: "000 mn"
}, _l4y343 = {
    one: "000 md",
    two: "000 md",
    other: "000 md"
}, _l4y344 = {
    one: "000 bn",
    two: "000 bn",
    other: "000 bn"
}, _l4y345 = {
    one: "0 dt ¤",
    two: "0 dt ¤",
    other: "0 dt ¤"
}, _l4y346 = {
    one: "0 mn ¤",
    two: "0 mn ¤",
    other: "0 mn ¤"
}, _l4y347 = {
    one: "0 md ¤",
    two: "0 md ¤",
    other: "0 md ¤"
}, _l4y348 = {
    one: "0 bn ¤",
    two: "0 bn ¤",
    other: "0 bn ¤"
}, _l4y349 = {
    one: "{0} mi²",
    two: "{0} mi²",
    other: "{0} mi²"
}, _l4y350 = {
    one: "{0} ft²",
    two: "{0} ft²",
    other: "{0} ft²"
}, _l4y351 = {
    one: "{0} mi³",
    two: "{0} mi³",
    other: "{0} mi³"
}, _l4y352 = {
    one: "00 dt ¤",
    two: "00 dt ¤",
    other: "00 dt ¤"
}, _l4y353 = {
    one: "00 mn ¤",
    two: "00 mn ¤",
    other: "00 mn ¤"
}, _l4y354 = {
    one: "00 md ¤",
    two: "00 md ¤",
    other: "00 md ¤"
}, _l4y355 = {
    one: "00 bn ¤",
    two: "00 bn ¤",
    other: "00 bn ¤"
}, _l4y356 = {
    M: "GGGGG y-MM – y-MM",
    y: "GGGGG y-MM – y-MM"
}, _l4y357 = {
    "0": "this year",
    "1": "next year",
    "-1": "last year"
}, _l4y358 = {
    "0": "this week",
    "1": "next week",
    "-1": "last week"
}, _l4y359 = {
    future: {
        other: "+{0} Q"
    },
    past: {
        other: "-{0} Q"
    }
}, _l4y360 = {
    one: "{0} mi/h",
    two: "{0} mi/h",
    other: "{0} mi/h"
}, _l4y361 = {
    one: "000 dt ¤",
    two: "000 dt ¤",
    other: "000 dt ¤"
}, _l4y362 = {
    one: "000 mn ¤",
    two: "000 mn ¤",
    other: "000 mn ¤"
}, _l4y363 = {
    one: "000 md ¤",
    two: "000 md ¤",
    other: "000 md ¤"
}, _l4y364 = {
    one: "000 bn ¤",
    two: "000 bn ¤",
    other: "000 bn ¤"
}, _l4y365 = [ "sotn", "vuos", "maŋ", "gask", "duor", "bear", "láv" ], _l4y366 = {
    one: "0 duhát",
    two: "0 duháhat",
    other: "0 duháhat"
}, _l4y367 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _l4y368 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _l4y369 = [ "O", "G", "N", "C", "M", "G", "S", "B", "Č", "G", "S", "J" ], _l4y370 = {
    "0": "this month",
    "1": "next month",
    "-1": "last month"
}, _l4y371 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _l4y372 = {
    one: "{0} pauna",
    two: "{0} pauna",
    other: "{0} pauna"
}, _l4y373 = {
    one: "{0} unssi",
    two: "{0} unssi",
    other: "{0} unssi"
}, _l4y374 = {
    id: "AQ",
    displayName: "Antárktis",
    hasTimeZones: true
}, _l4y375 = {
    id: "001",
    displayName: "máilbmi",
    hasTimeZones: false
}, _l4y376 = {
    one: "00 duhát",
    two: "00 duháhat",
    other: "00 duháhat"
}, _l4y377 = {
    "0": "this Sunday",
    "1": "next Sunday",
    "-1": "last Sunday"
}, _l4y378 = {
    "0": "this Monday",
    "1": "next Monday",
    "-1": "last Monday"
}, _l4y379 = {
    "0": "this Friday",
    "1": "next Friday",
    "-1": "last Friday"
}, _l4y380 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _l4y381 = {
    id: "AC",
    displayName: "Ascension",
    hasTimeZones: false
}, _l4y382 = {
    one: "0 miljona",
    two: "0 miljonat",
    other: "0 miljonat"
}, _l4y383 = {
    one: "0 biljona",
    two: "0 biljonat",
    other: "0 biljonat"
}, _l4y384 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _l4y385 = {
    one: "{0} juolgi",
    two: "{0} juolgi",
    other: "{0} juolgi"
}, _l4y386 = {
    one: "{0} bealgi",
    two: "{0} bealgi",
    other: "{0} bealgi"
}, _l4y387 = {
    id: "CC",
    displayName: "Cocos-sullot",
    hasTimeZones: true
}, _l4y388 = {
    one: "000 duhát",
    two: "000 duháhat",
    other: "000 duháhat"
}, _l4y389 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _l4y390 = {
    "0": "this Tuesday",
    "1": "next Tuesday",
    "-1": "last Tuesday"
}, _l4y391 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _l4y392 = {
    one: "00 miljona",
    two: "00 miljonat",
    other: "00 miljonat"
}, _l4y393 = {
    one: "0 miljardi",
    two: "0 miljardit",
    other: "0 miljardit"
}, _l4y394 = {
    one: "00 biljona",
    two: "00 biljonat",
    other: "00 biljonat"
}, _l4y395 = {
    id: "BV",
    displayName: "Bouvet-sullot",
    hasTimeZones: false
}, _l4y396 = {
    id: "IC",
    displayName: "Kanáriasullot",
    hasTimeZones: false
}, _l4y397 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _l4y398 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _l4y399 = {
    id: "CX",
    displayName: "Juovllat-sullot",
    hasTimeZones: true
}, _l4y3100 = {
    "0": "this Thursday",
    "1": "next Thursday",
    "-1": "last Thursday"
}, _l4y3101 = {
    "0": "this Saturday",
    "1": "next Saturday",
    "-1": "last Saturday"
}, _l4y3102 = {
    one: "000 miljona",
    two: "000 miljonat",
    other: "000 miljonat"
}, _l4y3103 = {
    one: "00 miljardi",
    two: "00 miljardit",
    other: "00 miljardit"
}, _l4y3104 = {
    one: "000 biljona",
    two: "000 biljonat",
    other: "000 biljonat"
}, _l4y3105 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _l4y3106 = {
    id: "EA",
    displayName: "Ceuta ja Melilla",
    hasTimeZones: false
}, _l4y3107 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _l4y3108 = {
    id: "CP",
    displayName: "Clipperton-sullot",
    hasTimeZones: false
}, _l4y3109 = {
    "0": "this Wednesday",
    "1": "next Wednesday",
    "-1": "last Wednesday"
}, _l4y3110 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _l4y3111 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _l4y3112 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _l4y3113 = {
    id: "CU",
    displayName: "Kuba",
    regionId: "029",
    hasTimeZones: true
}, _l4y3114 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _l4y3115 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _l4y3116 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _l4y3117 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _l4y3118 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _l4y3119 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _l4y3120 = {
    id: "TD",
    displayName: "Tčad",
    regionId: "017",
    hasTimeZones: true
}, _l4y3121 = {
    one: "000 miljardi",
    two: "000 miljardit",
    other: "000 miljardit"
}, _l4y3122 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _l4y3123 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _l4y3124 = {
    id: "MM",
    displayName: "Burma",
    regionId: "035",
    hasTimeZones: true
}, _l4y3125 = {
    id: "TR",
    displayName: "Durka",
    regionId: "145",
    hasTimeZones: true
}, _l4y3126 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _l4y3127 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _l4y3128 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _l4y3129 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _l4y3130 = {
    id: "YE",
    displayName: "Jemen",
    regionId: "145",
    hasTimeZones: true
}, _l4y3131 = {
    id: "KE",
    displayName: "Kenia",
    regionId: "014",
    hasTimeZones: true
}, _l4y3132 = {
    id: "LY",
    displayName: "Libya",
    regionId: "015",
    hasTimeZones: true
}, _l4y3133 = {
    id: "MO",
    displayName: "Makáo",
    regionId: "030",
    hasTimeZones: true
}, _l4y3134 = {
    id: "MT",
    displayName: "Málta",
    regionId: "039",
    hasTimeZones: true
}, _l4y3135 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _l4y3136 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _l4y3137 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _l4y3138 = {
    id: "NO",
    displayName: "Norga",
    regionId: "154",
    hasTimeZones: true
}, _l4y3139 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _l4y3140 = {
    id: "PL",
    displayName: "Polen",
    regionId: "151",
    hasTimeZones: true
}, _l4y3141 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _l4y3142 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _l4y3143 = {
    id: "SY",
    displayName: "Syria",
    regionId: "145",
    hasTimeZones: true
}, _l4y3144 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _l4y3145 = {
    id: "HU",
    displayName: "Ungár",
    regionId: "151",
    hasTimeZones: true
}, _l4y3146 = {
    id: "CL",
    displayName: "Čiile",
    regionId: "005",
    hasTimeZones: true
}, _l4y3147 = {
    one: "{0} bealgi Hg",
    two: "{0} bealgi Hg",
    other: "{0} bealgi Hg"
}, _l4y3148 = {
    d: "G y MMM d–d",
    M: "G y MMM d – MMM d",
    y: "G y MMM d – y MMM d"
}, _l4y3149 = {
    relative: _l4y377
}, _l4y3150 = {
    relative: _l4y378
}, _l4y3151 = {
    relative: _l4y379
}, _l4y3152 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _l4y3153 = {
    id: "BE",
    displayName: "Belgia",
    regionId: "155",
    hasTimeZones: true
}, _l4y3154 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _l4y3155 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _l4y3156 = {
    id: "BR",
    displayName: "Brasil",
    regionId: "005",
    hasTimeZones: true
}, _l4y3157 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _l4y3158 = {
    id: "DE",
    displayName: "Duiska",
    regionId: "155",
    hasTimeZones: true
}, _l4y3159 = {
    id: "EG",
    displayName: "Egypta",
    regionId: "015",
    hasTimeZones: true
}, _l4y3160 = {
    id: "GR",
    displayName: "Greika",
    regionId: "039",
    hasTimeZones: true
}, _l4y3161 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _l4y3162 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _l4y3163 = {
    id: "GM",
    displayName: "Gámbia",
    regionId: "011",
    hasTimeZones: true
}, _l4y3164 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _l4y3165 = {
    id: "IT",
    displayName: "Itália",
    regionId: "039",
    hasTimeZones: true
}, _l4y3166 = {
    id: "JP",
    displayName: "Japána",
    regionId: "030",
    hasTimeZones: true
}, _l4y3167 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _l4y3168 = {
    id: "CA",
    displayName: "Kanáda",
    regionId: "021",
    hasTimeZones: true
}, _l4y3169 = {
    id: "CN",
    displayName: "Kiinná",
    regionId: "030",
    hasTimeZones: true
}, _l4y3170 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _l4y3171 = {
    id: "CY",
    displayName: "Kypros",
    regionId: "145",
    hasTimeZones: true
}, _l4y3172 = {
    id: "LV",
    displayName: "Látvia",
    regionId: "154",
    hasTimeZones: true
}, _l4y3173 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _l4y3174 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _l4y3175 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _l4y3176 = {
    id: "RU",
    displayName: "Ruošša",
    regionId: "151",
    hasTimeZones: true
}, _l4y3177 = {
    id: "SE",
    displayName: "Ruoŧŧa",
    regionId: "154",
    hasTimeZones: true
}, _l4y3178 = {
    id: "RW",
    displayName: "Rwanda",
    regionId: "014",
    hasTimeZones: true
}, _l4y3179 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _l4y3180 = {
    id: "ES",
    displayName: "Spánia",
    regionId: "039",
    hasTimeZones: true
}, _l4y3181 = {
    id: "FI",
    displayName: "Suopma",
    regionId: "154",
    hasTimeZones: true
}, _l4y3182 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _l4y3183 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _l4y3184 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _l4y3185 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _l4y3186 = {
    id: "AX",
    displayName: "Ålánda",
    regionId: "154",
    hasTimeZones: true
}, _l4y3187 = {
    id: "CH",
    displayName: "Šveica",
    regionId: "155",
    hasTimeZones: true
}, _l4y3188 = {
    id: "AL",
    displayName: "Albánia",
    regionId: "039",
    hasTimeZones: true
}, _l4y3189 = {
    id: "DZ",
    displayName: "Algeria",
    regionId: "015",
    hasTimeZones: true
}, _l4y3190 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _l4y3191 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _l4y3192 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _l4y3193 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _l4y3194 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _l4y3195 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _l4y3196 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _l4y3197 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _l4y3198 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _l4y3199 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _l4y3200 = {
    id: "ET",
    displayName: "Etiopia",
    regionId: "014",
    hasTimeZones: true
}, _l4y3201 = {
    id: "GE",
    displayName: "Georgia",
    regionId: "145",
    hasTimeZones: true
}, _l4y3202 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _l4y3203 = {
    id: "IE",
    displayName: "Irlánda",
    regionId: "154",
    hasTimeZones: true
}, _l4y3204 = {
    id: "IS",
    displayName: "Islánda",
    regionId: "154",
    hasTimeZones: true
}, _l4y3205 = {
    id: "JM",
    displayName: "Jamaica",
    regionId: "029",
    hasTimeZones: true
}, _l4y3206 = {
    id: "CM",
    displayName: "Kamerun",
    regionId: "017",
    hasTimeZones: true
}, _l4y3207 = {
    id: "KM",
    displayName: "Komoros",
    regionId: "014",
    hasTimeZones: true
}, _l4y3208 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _l4y3209 = {
    id: "HR",
    displayName: "Kroátia",
    regionId: "039",
    hasTimeZones: true
}, _l4y3210 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _l4y3211 = {
    id: "LB",
    displayName: "Libanon",
    regionId: "145",
    hasTimeZones: true
}, _l4y3212 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _l4y3213 = {
    id: "LT",
    displayName: "Lietuva",
    regionId: "154",
    hasTimeZones: true
}, _l4y3214 = {
    id: "MY",
    displayName: "Malesia",
    regionId: "035",
    hasTimeZones: true
}, _l4y3215 = {
    id: "MA",
    displayName: "Marokko",
    regionId: "015",
    hasTimeZones: true
}, _l4y3216 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _l4y3217 = {
    id: "MX",
    displayName: "Meksiko",
    regionId: "013",
    hasTimeZones: true
}, _l4y3218 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _l4y3219 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _l4y3220 = {
    id: "RO",
    displayName: "Románia",
    regionId: "151",
    hasTimeZones: true
}, _l4y3221 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _l4y3222 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _l4y3223 = {
    id: "SO",
    displayName: "Somália",
    regionId: "014",
    hasTimeZones: true
}, _l4y3224 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _l4y3225 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _l4y3226 = {
    id: "TN",
    displayName: "Tunisia",
    regionId: "015",
    hasTimeZones: true
}, _l4y3227 = {
    id: "UA",
    displayName: "Ukraina",
    regionId: "151",
    hasTimeZones: true
}, _l4y3228 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _l4y3229 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _l4y3230 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _l4y3231 = {
    id: "CZ",
    displayName: "Čeahkka",
    regionId: "151",
    hasTimeZones: true
}, _l4y3232 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _l4y3233 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _l4y3234 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _l4y3235 = {
    id: "BG",
    displayName: "Bulgária",
    regionId: "151",
    hasTimeZones: true
}, _l4y3236 = {
    id: "DJ",
    displayName: "Djibouti",
    regionId: "014",
    hasTimeZones: true
}, _l4y3237 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _l4y3238 = {
    id: "DK",
    displayName: "Dánmárku",
    regionId: "154",
    hasTimeZones: true
}, _l4y3239 = {
    id: "EE",
    displayName: "Estlánda",
    regionId: "154",
    hasTimeZones: true
}, _l4y3240 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _l4y3241 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _l4y3242 = {
    id: "HK",
    displayName: "Hongkong",
    regionId: "030",
    hasTimeZones: true
}, _l4y3243 = {
    id: "JO",
    displayName: "Jordánia",
    regionId: "145",
    hasTimeZones: true
}, _l4y3244 = {
    id: "KH",
    displayName: "Kambodža",
    regionId: "035",
    hasTimeZones: true
}, _l4y3245 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _l4y3246 = {
    id: "CO",
    displayName: "Kolombia",
    regionId: "005",
    hasTimeZones: true
}, _l4y3247 = {
    id: "MD",
    displayName: "Moldávia",
    regionId: "151",
    hasTimeZones: true
}, _l4y3248 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _l4y3249 = {
    id: "MZ",
    displayName: "Mosambik",
    regionId: "014",
    hasTimeZones: true
}, _l4y3250 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _l4y3251 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _l4y3252 = {
    id: "PN",
    displayName: "Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _l4y3253 = {
    id: "SI",
    displayName: "Slovenia",
    regionId: "039",
    hasTimeZones: true
}, _l4y3254 = {
    id: "SK",
    displayName: "Slovákia",
    regionId: "151",
    hasTimeZones: true
}, _l4y3255 = {
    id: "TZ",
    displayName: "Tanzánia",
    regionId: "014",
    hasTimeZones: true
}, _l4y3256 = {
    id: "TH",
    displayName: "Thaieana",
    regionId: "035",
    hasTimeZones: true
}, _l4y3257 = {
    id: "VA",
    displayName: "Vatikána",
    regionId: "039",
    hasTimeZones: true
}, _l4y3258 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _l4y3259 = {
    relative: _l4y390
}, _l4y3260 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _l4y3261 = {
    id: "AU",
    displayName: "Austrália",
    regionId: "053",
    hasTimeZones: true
}, _l4y3262 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _l4y3263 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _l4y3264 = {
    id: "ID",
    displayName: "Indonesia",
    regionId: "035",
    hasTimeZones: true
}, _l4y3265 = {
    id: "CV",
    displayName: "Kap Verde",
    regionId: "011",
    hasTimeZones: true
}, _l4y3266 = {
    id: "KZ",
    displayName: "Kasakstan",
    regionId: "143",
    hasTimeZones: true
}, _l4y3267 = {
    id: "MK",
    displayName: "Makedonia",
    regionId: "039",
    hasTimeZones: true
}, _l4y3268 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _l4y3269 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _l4y3270 = {
    id: "PS",
    displayName: "Palestina",
    regionId: "145",
    hasTimeZones: true
}, _l4y3271 = {
    id: "PT",
    displayName: "Portugála",
    regionId: "039",
    hasTimeZones: true
}, _l4y3272 = {
    id: "SG",
    displayName: "Singapore",
    regionId: "035",
    hasTimeZones: true
}, _l4y3273 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _l4y3274 = {
    id: "SZ",
    displayName: "Svazieana",
    regionId: "018",
    hasTimeZones: true
}, _l4y3275 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _l4y3276 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _l4y3277 = {
    id: "AZ",
    displayName: "Aserbaižan",
    regionId: "145",
    hasTimeZones: true
}, _l4y3278 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _l4y3279 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _l4y3280 = {
    id: "SD",
    displayName: "Davvisudan",
    regionId: "015",
    hasTimeZones: true
}, _l4y3281 = {
    id: "FO",
    displayName: "Fearsullot",
    regionId: "154",
    hasTimeZones: true
}, _l4y3282 = {
    id: "FJ",
    displayName: "Fijisullot",
    regionId: "054",
    hasTimeZones: true
}, _l4y3283 = {
    id: "FR",
    displayName: "Frankriika",
    regionId: "155",
    hasTimeZones: true
}, _l4y3284 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _l4y3285 = {
    id: "LU",
    displayName: "Luxembourg",
    regionId: "155",
    hasTimeZones: true
}, _l4y3286 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _l4y3287 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _l4y3288 = {
    id: "MR",
    displayName: "Mauretánia",
    regionId: "011",
    hasTimeZones: true
}, _l4y3289 = {
    id: "FM",
    displayName: "Mikronesia",
    regionId: "057",
    hasTimeZones: true
}, _l4y3290 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _l4y3291 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _l4y3292 = {
    id: "SS",
    displayName: "Máttasudan",
    regionId: "014",
    hasTimeZones: true
}, _l4y3293 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _l4y3294 = {
    id: "TJ",
    displayName: "Tažikistan",
    regionId: "143",
    hasTimeZones: true
}, _l4y3295 = {
    id: "UZ",
    displayName: "Usbekistan",
    regionId: "143",
    hasTimeZones: true
}, _l4y3296 = {
    one: "{0} jahki árat",
    two: "{0} jahkki árat",
    other: "{0} jahkki árat"
}, _l4y3297 = {
    one: "{0} vahku árat",
    two: "{0} vahkku árat",
    other: "{0} vahkku árat"
}, _l4y3298 = {
    id: "AF",
    displayName: "Afghanistan",
    regionId: "034",
    hasTimeZones: true
}, _l4y3299 = {
    id: "CK",
    displayName: "Cook-sullot",
    regionId: "061",
    hasTimeZones: true
}, _l4y3300 = {
    id: "KP",
    displayName: "Davvi-Korea",
    regionId: "030",
    hasTimeZones: true
}, _l4y3301 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _l4y3302 = {
    id: "HM",
    displayName: "Heard- ja McDonald-sullot",
    hasTimeZones: false
}, _l4y3303 = {
    id: "KG",
    displayName: "Kirgisistan",
    regionId: "143",
    hasTimeZones: true
}, _l4y3304 = {
    id: "MV",
    displayName: "Malediivvat",
    regionId: "034",
    hasTimeZones: true
}, _l4y3305 = {
    id: "IM",
    displayName: "Mann-sullot",
    regionId: "154",
    hasTimeZones: true
}, _l4y3306 = {
    id: "KR",
    displayName: "Mátta-Korea",
    regionId: "030",
    hasTimeZones: true
}, _l4y3307 = {
    id: "AT",
    displayName: "Nuortariika",
    regionId: "155",
    hasTimeZones: true
}, _l4y3308 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _l4y3309 = {
    id: "LC",
    displayName: "Saint Lucia",
    regionId: "029",
    hasTimeZones: true
}, _l4y3310 = {
    relative: _l4y3100
}, _l4y3311 = {
    relative: _l4y3101
}, _l4y3312 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _l4y3313 = {
    id: "PH",
    displayName: "Filippiinnat",
    regionId: "035",
    hasTimeZones: true
}, _l4y3314 = {
    id: "TL",
    displayName: "Nuorta-Timor",
    regionId: "035",
    hasTimeZones: true
}, _l4y3315 = {
    id: "EH",
    displayName: "Oarje-Sahára",
    regionId: "015",
    hasTimeZones: true
}, _l4y3316 = {
    id: "NZ",
    displayName: "Ođđa-Selánda",
    regionId: "053",
    hasTimeZones: true
}, _l4y3317 = {
    id: "SH",
    displayName: "Saint Helena",
    regionId: "011",
    hasTimeZones: true
}, _l4y3318 = {
    id: "SA",
    displayName: "Saudi-Arábia",
    regionId: "145",
    hasTimeZones: true
}, _l4y3319 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _l4y3320 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _l4y3321 = {
    id: "142",
    displayName: "Ásia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _l4y3322 = {
    "0": "odne",
    "1": "ihttin",
    "2": "paijeelittáá",
    "-2": "oovdebpeivvi",
    "-1": "ikte"
}, _l4y3323 = {
    id: "KY",
    displayName: "Cayman-sullot",
    regionId: "029",
    hasTimeZones: true
}, _l4y3324 = {
    id: "GW",
    displayName: "Guinea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _l4y3325 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _l4y3326 = {
    id: "ZA",
    displayName: "Mátta-Afrihká",
    regionId: "018",
    hasTimeZones: true
}, _l4y3327 = {
    id: "NF",
    displayName: "Norfolksullot",
    regionId: "053",
    hasTimeZones: true
}, _l4y3328 = {
    id: "BY",
    displayName: "Vilges-Ruošša",
    regionId: "151",
    hasTimeZones: true
}, _l4y3329 = {
    one: "{0} jándor árat",
    two: "{0} jándora árat",
    other: "{0} jándora árat"
}, _l4y3330 = {
    one: "{0} diibmu árat",
    two: "{0} diibmur árat",
    other: "{0} diibmur árat"
}, _l4y3331 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _l4y3332 = {
    id: "AS",
    displayName: "Amerihká Samoa",
    regionId: "061",
    hasTimeZones: true
}, _l4y3333 = {
    id: "MP",
    displayName: "Davvi-Mariánat",
    regionId: "057",
    hasTimeZones: true
}, _l4y3334 = {
    id: "CI",
    displayName: "Elfenbenariddu",
    regionId: "011",
    hasTimeZones: true
}, _l4y3335 = {
    id: "FK",
    displayName: "Falklandsullot",
    regionId: "005",
    hasTimeZones: true
}, _l4y3336 = {
    id: "CD",
    displayName: "Kongo-Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _l4y3337 = {
    id: "MH",
    displayName: "Marshallsullot",
    regionId: "057",
    hasTimeZones: true
}, _l4y3338 = {
    id: "NC",
    displayName: "Ođđa-Kaledonia",
    regionId: "054",
    hasTimeZones: true
}, _l4y3339 = {
    id: "SB",
    displayName: "Salomon-sullot",
    regionId: "054",
    hasTimeZones: true
}, _l4y3340 = {
    id: "SC",
    displayName: "Seychellsullot",
    regionId: "014",
    hasTimeZones: true
}, _l4y3341 = {
    id: "NL",
    displayName: "Vuolleeatnamat",
    regionId: "155",
    hasTimeZones: true
}, _l4y3342 = {
    relative: _l4y3109
}, _l4y3343 = {
    id: "150",
    displayName: "Eurohpá",
    hasTimeZones: false,
    parentRegionId: "001"
}, _l4y3344 = {
    id: "029",
    displayName: "Karibia",
    hasTimeZones: false,
    parentRegionId: "019"
}, _l4y3345 = {
    id: "009",
    displayName: "Oseania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _l4y3346 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _l4y3347 = {
    id: "002",
    displayName: "Afrihkká",
    hasTimeZones: false,
    parentRegionId: "001"
}, _l4y3348 = {
    id: "GL",
    displayName: "Kalaallit Nunaat",
    regionId: "021",
    hasTimeZones: true
}, _l4y3349 = {
    id: "BL",
    displayName: "Saint Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _l4y3350 = {
    id: "WF",
    displayName: "Wallis ja Futuna",
    regionId: "061",
    hasTimeZones: true
}, _l4y3351 = {
    one: "{0} minuhta árat",
    two: "{0} minuhtta árat",
    other: "{0} minuhtta árat"
}, _l4y3352 = {
    one: "{0} sekunda árat",
    two: "{0} sekundda árat",
    other: "{0} sekundda árat"
}, _l4y3353 = {
    id: "VI",
    displayName: "AOS Virgin-sullot",
    regionId: "029",
    hasTimeZones: true
}, _l4y3354 = {
    id: "019",
    displayName: "Amerihkká",
    hasTimeZones: false,
    parentRegionId: "001"
}, _l4y3355 = {
    id: "CG",
    displayName: "Kongo-Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _l4y3356 = {
    id: "054",
    displayName: "Melanesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _l4y3357 = {
    id: "PG",
    displayName: "Papua-Ođđa-Guinea",
    regionId: "054",
    hasTimeZones: true
}, _l4y3358 = {
    id: "061",
    displayName: "Polynesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _l4y3359 = {
    id: "GB",
    displayName: "Stuorra-Británnia",
    regionId: "154",
    hasTimeZones: true
}, _l4y3360 = {
    id: "AG",
    displayName: "Antigua ja Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _l4y3361 = {
    id: "BA",
    displayName: "Bosnia-Hercegovina",
    regionId: "039",
    hasTimeZones: true
}, _l4y3362 = {
    id: "GQ",
    displayName: "Ekvatoriála Guinea",
    regionId: "017",
    hasTimeZones: true
}, _l4y3363 = {
    id: "TT",
    displayName: "Trinidad ja Tobago",
    regionId: "029",
    hasTimeZones: true
}, _l4y3364 = {
    id: "143",
    displayName: "gaska-Ásia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _l4y3365 = {
    id: "034",
    displayName: "mátta-Ásia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _l4y3366 = {
    id: "145",
    displayName: "oarji-Ásia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _l4y3367 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _l4y3368 = {
    id: "GF",
    displayName: "Frankriikka Guayana",
    regionId: "005",
    hasTimeZones: true
}, _l4y3369 = {
    id: "030",
    displayName: "nuorta-Ásia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _l4y3370 = {
    id: "KN",
    displayName: "Saint Kitts ja Nevis",
    regionId: "029",
    hasTimeZones: true
}, _l4y3371 = {
    id: "ST",
    displayName: "São Tomé ja Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _l4y3372 = {
    id: "DO",
    displayName: "Dominikána dásseváldi",
    regionId: "029",
    hasTimeZones: true
}, _l4y3373 = {
    id: "PF",
    displayName: "Frankriikka Polynesia",
    regionId: "061",
    hasTimeZones: true
}, _l4y3374 = {
    id: "154",
    displayName: "davvi-Eurohpá",
    hasTimeZones: false,
    parentRegionId: "150"
}, _l4y3375 = {
    id: "039",
    displayName: "mátta-Eurohpá",
    hasTimeZones: false,
    parentRegionId: "150"
}, _l4y3376 = {
    id: "155",
    displayName: "oarji-Eurohpá",
    hasTimeZones: false,
    parentRegionId: "150"
}, _l4y3377 = {
    id: "SJ",
    displayName: "Svalbárda ja Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _l4y3378 = {
    id: "TC",
    displayName: "Turks ja Caicos-sullot",
    regionId: "029",
    hasTimeZones: true
}, _l4y3379 = {
    id: "015",
    displayName: "davvi-Afrihkká",
    hasTimeZones: false,
    parentRegionId: "002"
}, _l4y3380 = {
    id: "017",
    displayName: "gaska-Afrihkká",
    hasTimeZones: false,
    parentRegionId: "002"
}, _l4y3381 = {
    id: "018",
    displayName: "mátta-Afrihkká",
    hasTimeZones: false,
    parentRegionId: "002"
}, _l4y3382 = {
    id: "151",
    displayName: "nuorta-Eurohpá",
    hasTimeZones: false,
    parentRegionId: "150"
}, _l4y3383 = {
    id: "011",
    displayName: "oarji-Afrihkká",
    hasTimeZones: false,
    parentRegionId: "002"
}, _l4y3384 = {
    one: "{0} jahki maŋŋilit",
    two: "{0} jahkki maŋŋilit",
    other: "{0} jahkki maŋŋilit"
}, _l4y3385 = {
    one: "{0} vahku maŋŋilit",
    two: "{0} vahkku maŋŋilit",
    other: "{0} vahkku maŋŋilit"
}, _l4y3386 = {
    id: "VG",
    displayName: "Brittania Virgin-sullot",
    regionId: "029",
    hasTimeZones: true
}, _l4y3387 = {
    id: "GS",
    displayName: "Lulli Georgia ja Lulli Sandwich-sullot",
    hasTimeZones: true
}, _l4y3388 = {
    id: "021",
    displayName: "dávvi-Amerihkká",
    hasTimeZones: false,
    parentRegionId: "019"
}, _l4y3389 = {
    id: "013",
    displayName: "gaska-Amerihkká",
    hasTimeZones: false,
    parentRegionId: "019"
}, _l4y3390 = {
    id: "005",
    displayName: "mátta-Amerihkká",
    hasTimeZones: false,
    parentRegionId: "019"
}, _l4y3391 = {
    id: "014",
    displayName: "nuorta-Afrihkká",
    hasTimeZones: false,
    parentRegionId: "002"
}, _l4y3392 = {
    one: "{0} mánotbadji árat",
    two: "{0} mánotbadji árat",
    other: "{0} mánotbadji árat"
}, _l4y3393 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _l4y3394 = {
    id: "MF",
    displayName: "Frankriikka Saint Martin",
    regionId: "029",
    hasTimeZones: true
}, _l4y3395 = {
    id: "CF",
    displayName: "Gaska-Afrihká dásseváldi",
    regionId: "017",
    hasTimeZones: true
}, _l4y3396 = {
    id: "PM",
    displayName: "Saint Pierre ja Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _l4y3397 = {
    id: "035",
    displayName: "mátta-nuorta-Ásia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _l4y3398 = {
    one: "{0} jándor maŋŋilit",
    two: "{0} jándor amaŋŋilit",
    other: "{0} jándora maŋŋilit"
}, _l4y3399 = {
    one: "{0} diibmu maŋŋilit",
    two: "{0} diibmur maŋŋilit",
    other: "{0} diibmur maŋŋilit"
}, _l4y3400 = {
    id: "VC",
    displayName: "Saint Vincent ja Grenadine",
    regionId: "029",
    hasTimeZones: true
}, _l4y3401 = [ "ođđj", "guov", "njuk", "cuo", "mies", "geas", "suoi", "borg", "čakč", "golg", "skáb", "juov" ], _l4y3402 = {
    id: "057",
    displayName: "Mikronesia guovllus",
    hasTimeZones: false,
    parentRegionId: "009"
}, _l4y3403 = {
    id: "AE",
    displayName: "Ovttastuvvan Arábaemiráhtat",
    regionId: "145",
    hasTimeZones: true
}, _l4y3404 = {
    id: "SX",
    displayName: "Vuolleeatnamat Saint Martin",
    regionId: "029",
    hasTimeZones: true
}, _l4y3405 = {
    d: "GGGGG y-MM-dd – y-MM-dd",
    M: "GGGGG y-MM-dd – y-MM-dd",
    y: "GGGGG y-MM-dd – y-MM-dd"
}, _l4y3406 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _l4y3407 = {
    one: "{0} minuhta maŋŋilit",
    two: "{0} minuhtta maŋŋilit",
    other: "{0} minuhtta maŋŋilit"
}, _l4y3408 = {
    one: "{0} sekunda maŋŋilit",
    two: "{0} sekundda maŋŋilit",
    other: "{0} sekundda maŋŋilit"
}, _l4y3409 = {
    id: "US",
    displayName: "Amerihká ovttastuvvan stáhtat",
    regionId: "021",
    hasTimeZones: true
}, _l4y3410 = {
    d: "G y MMM d, E – MMM d, E",
    M: "G y MMM d, E – MMM d, E",
    y: "G y MMM d, E – y MMM d, E"
}, _l4y3411 = {
    abbreviated: _l4y33,
    narrow: [ "1", "2", "3", "4" ],
    wide: _l4y33
}, _l4y3412 = [ "sotnabeaivi", "vuossárga", "maŋŋebárga", "gaskavahkku", "duorasdat", "bearjadat", "lávvardat" ], _l4y3413 = {
    id: "053",
    displayName: "Austrália ja Ođđa-Selánda",
    hasTimeZones: false,
    parentRegionId: "009"
}, _l4y3414 = {
    one: "{0} mánotbadji maŋŋilit",
    two: "{0} mánotbadji maŋŋilit",
    other: "{0} mánotbadji maŋŋilit"
}, _l4y3415 = {
    d: "GGGGG y-MM-dd, E – y-MM-dd, E",
    M: "GGGGG y-MM-dd, E – y-MM-dd, E",
    y: "GGGGG y-MM-dd, E – y-MM-dd, E"
}, _l4y3416 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _l4y3417 = {
    abbreviated: _l4y32,
    narrow: _l4y32,
    wide: _l4y317
}, _l4y3418 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _l4y3419 = {
    abbreviated: _l4y32,
    narrow: _l4y32,
    wide: _l4y329
}, _l4y3420 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _l4y3421 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _l4y3422 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _l4y3423 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _l4y3424 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _l4y3425 = {
    displayName: "Quarter",
    relative: _l4y389,
    relativeTime: _l4y359
}, _l4y3426 = {
    future: _l4y3384,
    past: _l4y3296
}, _l4y3427 = {
    future: _l4y3385,
    past: _l4y3297
}, _l4y3428 = {
    future: _l4y3398,
    past: _l4y3329
}, _l4y3429 = {
    future: _l4y3399,
    past: _l4y3330
}, _l4y3430 = [ "ođđajagemánnu", "guovvamánnu", "njukčamánnu", "cuoŋománnu", "miessemánnu", "geassemánnu", "suoidnemánnu", "borgemánnu", "čakčamánnu", "golggotmánnu", "skábmamánnu", "juovlamánnu" ], _l4y3431 = {
    decimal: ",",
    group: " ",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "−",
    exponential: "×10^",
    superscriptingExponent: "·",
    perMille: "‰",
    infinity: "∞",
    nan: "¤¤¤",
    timeSeparator: ":"
}, _l4y3432 = {
    future: _l4y3407,
    past: _l4y3351
}, _l4y3433 = {
    future: _l4y3408,
    past: _l4y3352
}, _l4y3434 = {
    symbols: _l4y3431
}, _l4y3435 = {
    future: _l4y3414,
    past: _l4y3392
}, _l4y3436 = {
    format: _l4y3331,
    numeric: _l4y34,
    standAlone: _l4y3331
}, _l4y3437 = {
    format: _l4y3411,
    standAlone: _l4y3411
}, _l4y3438 = {
    displayName: "diibmu",
    relativeTime: _l4y3429
}, _l4y3439 = {
    displayName: "minuhtta",
    relativeTime: _l4y3432
}, _l4y3440 = {
    symbols: _l4y3431,
    digits: "renderSpelloutCardinal"
}, _l4y3441 = {
    symbols: _l4y3431,
    digits: "renderSpelloutCardinalFinancial"
}, _l4y3442 = {
    abbreviated: _l4y3346,
    narrow: _l4y380,
    wide: _l4y3346
}, _l4y3443 = {
    displayName: "sekunda",
    relative: [ "now" ],
    relativeTime: _l4y3433
}, _l4y3444 = {
    format: _l4y3419,
    standAlone: _l4y3417
}, _l4y3445 = {
    abbreviated: _l4y365,
    narrow: _l4y310,
    wide: _l4y3412,
    "short": _l4y365
}, _l4y3446 = {
    displayName: "jáhki",
    relative: _l4y357,
    relativeTime: _l4y3426
}, _l4y3447 = {
    displayName: "váhkku",
    relative: _l4y358,
    relativeTime: _l4y3427
}, _l4y3448 = {
    abbreviated: _l4y3367,
    narrow: _l4y3367,
    wide: _l4y3367
}, _l4y3449 = {
    format: _l4y3448
}, _l4y3450 = {
    displayName: "mánnu",
    relative: _l4y370,
    relativeTime: _l4y3435
}, _l4y3451 = {
    displayName: "beaivi",
    relative: _l4y3322,
    relativeTime: _l4y3428
}, _l4y3452 = {
    abbreviated: _l4y3418,
    narrow: _l4y398,
    wide: _l4y3418
}, _l4y3453 = {
    abbreviated: _l4y3420,
    narrow: _l4y380,
    wide: _l4y3420
}, _l4y3454 = {
    abbreviated: _l4y3421,
    narrow: _l4y398,
    wide: _l4y3421
}, _l4y3455 = {
    abbreviated: _l4y3416,
    narrow: _l4y380,
    wide: _l4y3424
}, _l4y3456 = {
    abbreviated: _l4y3422,
    narrow: _l4y398,
    wide: _l4y3422
}, _l4y3457 = {
    abbreviated: _l4y3423,
    narrow: _l4y380,
    wide: _l4y3423
}, _l4y3458 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _l4y3459 = {
    abbreviated: _l4y3401,
    narrow: _l4y369,
    wide: _l4y3430
}, _l4y3460 = {
    format: _l4y3442,
    standAlone: _l4y3442
}, _l4y3461 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _l4y3462 = {
    format: _l4y3445,
    standAlone: _l4y3445
}, _l4y3463 = {
    "1000": _l4y322,
    "10000": _l4y332,
    "100000": _l4y341,
    "1000000": _l4y323,
    "10000000": _l4y333,
    "100000000": _l4y342,
    "1000000000": _l4y324,
    "10000000000": _l4y334,
    "100000000000": _l4y343,
    "1000000000000": _l4y325,
    "10000000000000": _l4y335,
    "100000000000000": _l4y344
}, _l4y3464 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _l4y3465 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _l4y3466 = {
    "1000": _l4y345,
    "10000": _l4y352,
    "100000": _l4y361,
    "1000000": _l4y346,
    "10000000": _l4y353,
    "100000000": _l4y362,
    "1000000000": _l4y347,
    "10000000000": _l4y354,
    "100000000000": _l4y363,
    "1000000000000": _l4y348,
    "10000000000000": _l4y355,
    "100000000000000": _l4y364
}, _l4y3467 = {
    format: _l4y3455,
    standAlone: _l4y3455
}, _l4y3468 = {
    format: _l4y3459,
    standAlone: _l4y3459
}, _l4y3469 = {
    "1000": _l4y366,
    "10000": _l4y376,
    "100000": _l4y388,
    "1000000": _l4y382,
    "10000000": _l4y392,
    "100000000": _l4y3102,
    "1000000000": _l4y393,
    "10000000000": _l4y3103,
    "100000000000": _l4y3121,
    "1000000000000": _l4y383,
    "10000000000000": _l4y394,
    "100000000000000": _l4y3104
}, _l4y3470 = {
    basic: _l4y3458,
    cldr: _l4y3461
}, _l4y3471 = {
    d: {
        d: "d–d"
    },
    h: _l4y35,
    H: {
        H: "HH–HH"
    },
    hm: _l4y384,
    Hm: _l4y313,
    hmv: _l4y3105,
    Hmv: _l4y326,
    hv: _l4y39,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _l4y327,
    MEd: _l4y367,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _l4y311,
    MMMEd: _l4y368,
    y: {
        y: "U–U"
    },
    yM: _l4y315,
    yMd: _l4y3276,
    yMEd: _l4y3406,
    yMMM: _l4y316,
    yMMMd: _l4y397,
    yMMMEd: _l4y3393,
    yMMMM: _l4y330
}, _l4y3472 = {
    d: {
        d: "d–d"
    },
    h: _l4y35,
    H: {
        H: "HH–HH"
    },
    hm: _l4y384,
    Hm: _l4y313,
    hmv: _l4y3105,
    Hmv: _l4y326,
    hv: _l4y39,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _l4y327,
    MEd: _l4y367,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _l4y311,
    MMMEd: _l4y368,
    y: {
        y: "G y–y"
    },
    yM: _l4y356,
    yMd: _l4y3405,
    yMEd: _l4y3415,
    yMMM: _l4y328,
    yMMMd: _l4y3148,
    yMMMEd: _l4y3410,
    yMMMM: _l4y336
}, _l4y3473 = {
    beforeCurrency: _l4y3464,
    afterCurrency: _l4y3464
}, _l4y3474 = {
    "long": _l4y3469,
    "short": _l4y3463,
    "default": "#,##0.###"
}, _l4y3475 = {
    abbreviated: _l4y3465,
    narrow: _l4y3465,
    wide: _l4y3465
}, _l4y3476 = {
    format: _l4y3475
}, _l4y3477 = {
    "short": _l4y3466,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    two: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _l4y3473
}, _l4y3478 = {
    era: {
        displayName: "éra"
    },
    year: _l4y3446,
    month: _l4y3450,
    week: _l4y3447,
    day: _l4y3451,
    weekday: _l4y38,
    dayperiod: _l4y314,
    hour: _l4y3438,
    minute: _l4y3439,
    second: _l4y3443,
    zone: _l4y36,
    quarter: _l4y3425,
    sun: _l4y3149,
    mon: _l4y3150,
    tue: _l4y3259,
    wed: _l4y3342,
    thu: _l4y3310,
    fri: _l4y3151,
    sat: _l4y3311
}, _l4y3479 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _l4y3478
}, _l4y3480 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _l4y3474,
    currency: _l4y3477,
    percent: _l4y31
}, _l4y3481 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _l4y3482 = {
    dateFormats: P.calendars.buddhist.dateFormats,
    datePartsOrder: "ymd",
    dateIntervalFormats: _l4y3472,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _l4y3462,
    dayPeriods: _l4y3444,
    monthNames: _l4y3467,
    eraNames: _l4y312,
    quarterNames: _l4y3437,
    fields: _l4y3478
}, _l4y3483 = {
    dayParts: _l4y3449,
    days: _l4y3476,
    months: _l4y3476,
    years: _l4y3476,
    zodiacs: _l4y3449
}, _l4y3484 = {
    dateFormats: _l4y3470,
    datePartsOrder: "md",
    dateIntervalFormats: _l4y3471,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _l4y3462,
    dayPeriods: _l4y3444,
    cyclicNames: _l4y3483,
    monthNames: _l4y3460,
    monthPatterns: _l4y3436,
    quarterNames: _l4y3437,
    fields: _l4y3478
};

inter.id = "se";

inter.delimiters = {
    quotationStart: "”",
    quotationEnd: "”",
    alternateQuotationStart: "’",
    alternateQuotationEnd: "’"
};

inter.listPatterns = {
    "default": {
        "2": "{0} ja {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0} ja {1}"
    },
    unit: P.listPatterns.default,
    unitNarrow: {
        "2": "{0} {1}",
        start: "{0} {1}",
        middle: "{0} {1}",
        end: "{0} {1}"
    },
    unitShort: P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} Maapallo gravitaatiovoima",
                two: "{0} Maapallo gravitaatiovoimat",
                other: "{0} Maapallo gravitaatiovoimat"
            },
            angleDegree: {
                one: "{0} grádat",
                two: "{0} grádat",
                other: "{0} grádat"
            },
            angleArcMinute: {
                one: "{0} jorbbas minuhta",
                two: "{0} jorbbas minuhtta",
                other: "{0} jorbbas minuhtta"
            },
            angleArcSecond: {
                one: "{0} jorbbas sekunda",
                two: "{0} jorbbas sekundda",
                other: "{0} jorbbas sekundda"
            },
            areaSquareKilometer: {
                one: "{0} neliökilomehter",
                two: "{0} neliökilomehtera",
                other: "{0} neliökilomehtera"
            },
            areaHectare: {
                one: "{0} hehtaari",
                two: "{0} hehtaaria",
                other: "{0} hehtaaria"
            },
            areaSquareMeter: {
                one: "{0} neliömehter",
                two: "{0} neliömehtera",
                other: "{0} neliömehtera"
            },
            areaSquareMile: {
                one: "{0} eangas neliömiil",
                two: "{0} eangas neliömiila",
                other: "{0} eangas neliömiila"
            },
            areaAcre: {
                one: "{0} Amerihká tynnyrinala",
                two: "{0} Amerihká tynnyrinala",
                other: "{0} Amerihká tynnyrinala"
            },
            areaSquareFoot: {
                one: "{0} neliöjuolgi",
                two: "{0} neliöjuolgi",
                other: "{0} neliöjuolgi"
            },
            durationYear: {
                one: "{0} jahki",
                two: "{0} jahkki",
                other: "{0} jahkki"
            },
            durationMonth: {
                one: "{0} mánotbadji",
                two: "{0} mánotbaji",
                other: "{0} mánotbadji"
            },
            durationWeek: {
                one: "{0} váhku",
                two: "{0} váhkku",
                other: "{0} váhkku"
            },
            durationDay: {
                one: "{0} jándor",
                two: "{0} jándora",
                other: "{0} jándora"
            },
            durationHour: {
                one: "{0} diibmu",
                two: "{0} diimmur",
                other: "{0} diibmur"
            },
            durationMinute: {
                one: "{0} minuhta",
                two: "{0} minuhtta",
                other: "{0} minuhtta"
            },
            durationSecond: {
                one: "{0} sekunda",
                two: "{0} sekundda",
                other: "{0} sekundda"
            },
            durationMillisecond: {
                one: "{0} millisekunda",
                two: "{0} millisekundda",
                other: "{0} millisekundda"
            },
            lengthKilometer: {
                one: "{0} kilomehter",
                two: "{0} kilomehtera",
                other: "{0} kilomehtera"
            },
            lengthMeter: {
                one: "{0} mehter",
                two: "{0} mehtera",
                other: "{0} mehtera"
            },
            lengthCentimeter: {
                one: "{0} sentimehter",
                two: "{0} sentimehtera",
                other: "{0} sentimehtera"
            },
            lengthMillimeter: {
                one: "{0} millimehter",
                two: "{0} millimehtera",
                other: "{0} millimehtera"
            },
            lengthPicometer: {
                one: "{0} pikomehter",
                two: "{0} pikomehtera",
                other: "{0} pikomehtera"
            },
            lengthMile: {
                one: "{0} eangas miil",
                two: "{0} eangas miila",
                other: "{0} eangas miila"
            },
            lengthYard: {
                one: "{0} eangas yard",
                two: "{0} eangas yard",
                other: "{0} eangas yard"
            },
            lengthFoot: _l4y385,
            lengthInch: _l4y386,
            lengthLightYear: {
                one: "{0} chuovgat jagi",
                two: "{0} chuovgat jagi",
                other: "{0} chuovgat jagi"
            },
            massKilogram: {
                one: "{0} kilogram",
                two: "{0} kilogram",
                other: "{0} kilogram"
            },
            massGram: {
                one: "{0} gram",
                two: "{0} gram",
                other: "{0} gram"
            },
            massPound: _l4y372,
            massOunce: _l4y373,
            powerKilowatt: {
                one: "{0} kilowatt",
                two: "{0} kilowatt",
                other: "{0} kilowatt"
            },
            powerWatt: {
                one: "{0} watt",
                two: "{0} watt",
                other: "{0} watt"
            },
            powerHorsepower: {
                one: "{0} hevosvoima",
                two: "{0} hevosvoima",
                other: "{0} hevosvoima"
            },
            pressureHectopascal: {
                one: "{0} hehtopascal",
                two: "{0} hehtopascal",
                other: "{0} hehtopascal"
            },
            pressureInchHg: {
                one: "{0} bealgi kvikksølv",
                two: "{0} bealgi kvikksølv",
                other: "{0} bealgi kvikksølv"
            },
            pressureMillibar: {
                one: "{0} millibar",
                two: "{0} millibar",
                other: "{0} millibar"
            },
            speedKilometerPerHour: {
                one: "{0} kilomehter kohti diibmu",
                two: "{0} kilomehtera kohti diibmu",
                other: "{0} kilomehtera kohti diibmu"
            },
            speedMeterPerSecond: {
                one: "{0} mehter kohti sekunti",
                two: "{0} mehtera kohti sekunti",
                other: "{0} mehtera kohti sekunti"
            },
            speedMilePerHour: {
                one: "{0} eangas miil kohti diibmu",
                two: "{0} eangas miila kohti diibmu",
                other: "{0} eangas miila kohti diibmu"
            },
            temperatureCelsius: {
                one: "{0} grádat Celsius",
                two: "{0} grádat Celsius",
                other: "{0} grádat Celsius"
            },
            temperatureFahrenheit: {
                one: "{0} grádat Fahrenheit",
                two: "{0} grádat Fahrenheit",
                other: "{0} grádat Fahrenheit"
            },
            volumeCubicKilometer: {
                one: "{0} kubikkilomehter",
                two: "{0} kubikkilomehtera",
                other: "{0} kubikkilomehtera"
            },
            volumeCubicMile: {
                one: "{0} eangas kubikkmiil",
                two: "{0} eangas kubikkmiila",
                other: "{0} eangas kubikkmiila"
            },
            volumeLiter: {
                one: "{0} lihtar",
                two: "{0} lihtara",
                other: "{0} lihtara"
            }
        },
        compoundUnit: {
            per: "{0} juohke {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                one: "{0} G",
                two: "{0} G",
                other: "{0} G"
            },
            angleDegree: _l4y318,
            angleArcMinute: _l4y319,
            angleArcSecond: _l4y320,
            areaSquareKilometer: {
                one: "{0} km²",
                two: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                one: "{0} ha",
                two: "{0} ha",
                other: "{0} ha"
            },
            areaSquareMeter: {
                one: "{0} m²",
                two: "{0} m²",
                other: "{0} m²"
            },
            areaSquareMile: _l4y349,
            areaAcre: _l4y337,
            areaSquareFoot: _l4y350,
            durationYear: {
                one: "{0} jah",
                two: "{0} jah",
                other: "{0} jah"
            },
            durationMonth: {
                one: "{0} mán",
                two: "{0} mán",
                other: "{0} mán"
            },
            durationWeek: {
                one: "{0} v",
                two: "{0} v",
                other: "{0} v"
            },
            durationDay: {
                one: "{0} d",
                two: "{0} d",
                other: "{0} d"
            },
            durationHour: {
                one: "{0} h",
                two: "{0} h",
                other: "{0} h"
            },
            durationMinute: {
                one: "{0} min",
                two: "{0} min",
                other: "{0} min"
            },
            durationSecond: {
                one: "{0} s",
                two: "{0} s",
                other: "{0} s"
            },
            durationMillisecond: {
                one: "{0} ms",
                two: "{0} ms",
                other: "{0} ms"
            },
            lengthKilometer: {
                one: "{0} km",
                two: "{0} km",
                other: "{0} km"
            },
            lengthMeter: {
                one: "{0} m",
                two: "{0} m",
                other: "{0} m"
            },
            lengthCentimeter: {
                one: "{0} cm",
                two: "{0} cm",
                other: "{0} cm"
            },
            lengthMillimeter: {
                one: "{0} mm",
                two: "{0} mm",
                other: "{0} mm"
            },
            lengthPicometer: {
                one: "{0} pm",
                two: "{0} pm",
                other: "{0} pm"
            },
            lengthMile: _l4y338,
            lengthYard: _l4y339,
            lengthFoot: _l4y385,
            lengthInch: _l4y386,
            lengthLightYear: _l4y340,
            massKilogram: {
                one: "{0} kg",
                two: "{0} kg",
                other: "{0} kg"
            },
            massGram: {
                one: "{0} g",
                two: "{0} g",
                other: "{0} g"
            },
            massPound: _l4y372,
            massOunce: _l4y373,
            powerKilowatt: {
                one: "{0} kW",
                two: "{0} kW",
                other: "{0} kW"
            },
            powerWatt: {
                one: "{0} W",
                two: "{0} W",
                other: "{0} W"
            },
            powerHorsepower: {
                one: "{0} hv",
                two: "{0} hv",
                other: "{0} hv"
            },
            pressureHectopascal: {
                one: "{0} hPa",
                two: "{0} hPa",
                other: "{0} hPa"
            },
            pressureInchHg: _l4y3147,
            pressureMillibar: {
                one: "{0} mbar",
                two: "{0} mbar",
                other: "{0} mbar"
            },
            speedKilometerPerHour: {
                one: "{0} km/h",
                two: "{0} km/h",
                other: "{0} km/h"
            },
            speedMeterPerSecond: {
                one: "{0} m/s",
                two: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: _l4y360,
            temperatureCelsius: {
                one: "{0}°C",
                two: "{0}°C",
                other: "{0}°C"
            },
            temperatureFahrenheit: _l4y331,
            volumeCubicKilometer: {
                one: "{0} km³",
                two: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMile: _l4y351,
            volumeLiter: {
                one: "{0} l",
                two: "{0} l",
                other: "{0} l"
            },
            accelerationMeterPerSecondSquared: {
                other: "{0} m/s²"
            },
            angleRevolution: {
                other: "{0} rev"
            },
            angleRadian: {
                other: "{0} rad"
            },
            areaSquareCentimeter: {
                other: "{0} cm²"
            },
            areaSquareYard: {
                other: "{0} yd²"
            },
            areaSquareInch: {
                other: "{0} in²"
            },
            concentrKarat: {
                other: "{0} kt"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionLiterPerKilometer: {
                other: "{0} L/km"
            },
            "consumptionLiterPer-100kilometers": {
                other: "{0} L/100km"
            },
            consumptionMilePerGallon: {
                other: "{0} mpg US"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            digitalTerabyte: {
                other: "{0} TB"
            },
            digitalTerabit: {
                other: "{0} Tb"
            },
            digitalGigabyte: {
                other: "{0} GB"
            },
            digitalGigabit: {
                other: "{0} Gb"
            },
            digitalMegabyte: {
                other: "{0} MB"
            },
            digitalMegabit: {
                other: "{0} Mb"
            },
            digitalKilobyte: {
                other: "{0} kB"
            },
            digitalKilobit: {
                other: "{0} kb"
            },
            digitalByte: {
                other: "{0} byte"
            },
            digitalBit: {
                other: "{0} bit"
            },
            durationCentury: {
                other: "{0} c"
            },
            durationMicrosecond: {
                other: "{0} μs"
            },
            durationNanosecond: {
                other: "{0} ns"
            },
            electricAmpere: {
                other: "{0} A"
            },
            electricMilliampere: {
                other: "{0} mA"
            },
            electricOhm: {
                other: "{0} Ω"
            },
            electricVolt: {
                other: "{0} V"
            },
            energyKilocalorie: {
                other: "{0} kcal"
            },
            energyCalorie: {
                other: "{0} cal"
            },
            energyFoodcalorie: {
                other: "{0} Cal"
            },
            energyKilojoule: {
                other: "{0} kJ"
            },
            energyJoule: {
                other: "{0} J"
            },
            energyKilowattHour: {
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                other: "{0} kHz"
            },
            frequencyHertz: {
                other: "{0} Hz"
            },
            lengthDecimeter: {
                other: "{0} dm"
            },
            lengthMicrometer: {
                other: "{0} µm"
            },
            lengthNanometer: {
                other: "{0} nm"
            },
            lengthParsec: {
                other: "{0} pc"
            },
            lengthAstronomicalUnit: {
                other: "{0} au"
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            lengthNauticalMile: {
                other: "{0} nmi"
            },
            lengthMileScandinavian: {
                other: "{0} smi"
            },
            lightLux: {
                other: "{0} lx"
            },
            massMetricTon: {
                other: "{0} t"
            },
            massMilligram: {
                other: "{0} mg"
            },
            massMicrogram: {
                other: "{0} µg"
            },
            massTon: {
                other: "{0} tn"
            },
            massStone: {
                other: "{0} st"
            },
            massOunceTroy: {
                other: "{0} oz t"
            },
            massCarat: {
                other: "{0} CD"
            },
            powerGigawatt: {
                other: "{0} GW"
            },
            powerMegawatt: {
                other: "{0} MW"
            },
            powerMilliwatt: {
                other: "{0} mW"
            },
            pressureMillimeterOfMercury: {
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                other: "{0} psi"
            },
            speedKnot: {
                other: "{0} kn"
            },
            temperatureGeneric: {
                other: "{0}°"
            },
            temperatureKelvin: {
                other: "{0} K"
            },
            volumeCubicMeter: {
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                other: "{0} cm³"
            },
            volumeCubicYard: {
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                other: "{0} ft³"
            },
            volumeCubicInch: {
                other: "{0} in³"
            },
            volumeMegaliter: {
                other: "{0} ML"
            },
            volumeHectoliter: {
                other: "{0} hL"
            },
            volumeDeciliter: {
                other: "{0} dL"
            },
            volumeCentiliter: {
                other: "{0} cL"
            },
            volumeMilliliter: {
                other: "{0} mL"
            },
            volumePintMetric: {
                other: "{0} mpt"
            },
            volumeCupMetric: {
                other: "{0} mc"
            },
            volumeAcreFoot: {
                other: "{0} ac ft"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallon: {
                other: "{0} gal US"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            },
            volumeQuart: {
                other: "{0} qt"
            },
            volumePint: {
                other: "{0} pt"
            },
            volumeCup: {
                other: "{0} c"
            },
            volumeFluidOunce: {
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                other: "{0} tbsp"
            },
            volumeTeaspoon: {
                other: "{0} tsp"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                one: "{0}G",
                two: "{0}G",
                other: "{0}G"
            },
            angleDegree: _l4y318,
            angleArcMinute: _l4y319,
            angleArcSecond: _l4y320,
            areaSquareKilometer: {
                one: "{0}km²",
                two: "{0}km²",
                other: "{0}km²"
            },
            areaHectare: {
                one: "{0}ha",
                two: "{0}ha",
                other: "{0}ha"
            },
            areaSquareMeter: {
                one: "{0}m²",
                two: "{0}m²",
                other: "{0}m²"
            },
            areaSquareMile: _l4y349,
            areaAcre: _l4y337,
            areaSquareFoot: _l4y350,
            durationYear: {
                one: "{0}j",
                two: "{0}j",
                other: "{0}j"
            },
            durationMonth: _l4y321,
            durationWeek: {
                one: "{0}v",
                two: "{0}v",
                other: "{0}v"
            },
            durationDay: {
                one: "{0}d",
                two: "{0}d",
                other: "{0}d"
            },
            durationHour: {
                one: "{0}h",
                two: "{0}h",
                other: "{0}h"
            },
            durationMinute: _l4y321,
            durationSecond: {
                one: "{0}s",
                two: "{0}s",
                other: "{0}s"
            },
            durationMillisecond: {
                one: "{0}ms",
                two: "{0}ms",
                other: "{0}ms"
            },
            lengthKilometer: {
                one: "{0}km",
                two: "{0}km",
                other: "{0}km"
            },
            lengthMeter: _l4y321,
            lengthCentimeter: {
                one: "{0}cm",
                two: "{0}cm",
                other: "{0}cm"
            },
            lengthMillimeter: {
                one: "{0}mm",
                two: "{0}mm",
                other: "{0}mm"
            },
            lengthPicometer: {
                one: "{0}pm",
                two: "{0}pm",
                other: "{0}pm"
            },
            lengthMile: _l4y338,
            lengthYard: _l4y339,
            lengthFoot: _l4y385,
            lengthInch: _l4y386,
            lengthLightYear: _l4y340,
            massKilogram: {
                one: "{0}kg",
                two: "{0}kg",
                other: "{0}kg"
            },
            massGram: {
                one: "{0}g",
                two: "{0}g",
                other: "{0}g"
            },
            massPound: _l4y372,
            massOunce: _l4y373,
            powerKilowatt: {
                one: "{0}kW",
                two: "{0}kW",
                other: "{0}kW"
            },
            powerWatt: {
                one: "{0}W",
                two: "{0}W",
                other: "{0}W"
            },
            powerHorsepower: {
                one: "{0}hv",
                two: "{0}hv",
                other: "{0}hv"
            },
            pressureHectopascal: {
                one: "{0}hPa",
                two: "{0}hPa",
                other: "{0}hPa"
            },
            pressureInchHg: _l4y3147,
            pressureMillibar: {
                one: "{0}mbar",
                two: "{0}mbar",
                other: "{0}mbar"
            },
            speedKilometerPerHour: {
                one: "{0}km/h",
                two: "{0}km/h",
                other: "{0}km/h"
            },
            speedMeterPerSecond: {
                one: "{0}m/s",
                two: "{0}m/s",
                other: "{0}m/s"
            },
            speedMilePerHour: _l4y360,
            temperatureCelsius: _l4y318,
            temperatureFahrenheit: _l4y331,
            volumeCubicKilometer: {
                one: "{0}km³",
                two: "{0}km³",
                other: "{0}km³"
            },
            volumeCubicMile: _l4y351,
            volumeLiter: {
                one: "{0}L",
                two: "{0}L",
                other: "{0}L"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "−HH:mm" ],
    gmt: "UTC{0}",
    gmtZero: "UTC",
    region: "{0} áigi",
    fallback: "{0} ({1})",
    regions: {
        daylight: "{0} (+1)",
        standard: "{0} (+0)"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "á", "b", "c", "č", "d", "đ", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "ŋ", "o", "p", "r", "s", "š", "t", "ŧ", "u", "v", "z", "ž" ],
        auxiliary: [ "à", "ç", "é", "è", "í", "ń", "ñ", "ó", "ò", "q", "ú", "w", "x", "y", "ü", "ø", "æ", "å", "ä", "ã", "ö" ],
        index: [ "A", "Á", "B", "C", "Č", "D", "Đ", "E", "É", "F", "G", "H", "I", "J", "K", "L", "M", "N", "Ŋ", "O", "P", "Q", "R", "S", "Š", "T", "Ŧ", "U", "V", "W", "X", "Y", "Z", "Ž", "Ø", "Æ", "Å", "Ä", "Ö" ],
        punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "(", ")", "\\[", "\\]", "\\{", "\\}" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _l4y3431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _l4y3480,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _l4y3480,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _l4y3431,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _l4y3431,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _l4y3431,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _l4y3431,
        digits: "renderEthiopic"
    },
    finance: _l4y3434,
    fullwide: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _l4y3431,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _l4y3431,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _l4y3431,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _l4y3431,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _l4y3440,
    hansfin: _l4y3441,
    hant: _l4y3440,
    hantfin: _l4y3441,
    hebr: {
        symbols: _l4y3431,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _l4y3431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _l4y3440,
    jpanfin: _l4y3441,
    kali: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _l4y3431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _l4y3431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _l4y3431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _l4y3431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _l4y3431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _l4y3431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _l4y3431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _l4y3431,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _l4y3434,
    nkoo: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _l4y3431,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _l4y3431,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _l4y3431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _l4y3431,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _l4y3431,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _l4y3431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _l4y3434,
    vaii: {
        symbols: _l4y3431,
        formats: _l4y3480,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _l4y3431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _l4y3472,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _l4y3462,
        dayPeriods: _l4y3444,
        monthNames: _l4y3468,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _l4y3437,
        fields: _l4y3478
    },
    chinese: _l4y3484,
    coptic: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _l4y3472,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _l4y3462,
        dayPeriods: _l4y3444,
        monthNames: {
            format: _l4y3454,
            standAlone: _l4y3454
        },
        eraNames: _l4y371,
        quarterNames: _l4y3437,
        fields: _l4y3478
    },
    dangi: _l4y3484,
    ethioaa: _l4y3479,
    ethiopic: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _l4y3472,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _l4y3462,
        dayPeriods: _l4y3444,
        monthNames: {
            format: _l4y3456,
            standAlone: _l4y3456
        },
        eraNames: _l4y371,
        quarterNames: _l4y3437,
        fields: _l4y3478
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "y MMMM d, EEEE",
                longDate: "y MMMM d",
                mediumDate: "y MMM d",
                shortDate: "y-MM-dd",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "y-MM-dd HH:mm",
                mediumDateTime: "y MMM d HH:mm:ss",
                longDateTime: "y MMMM d HH:mm:ss z",
                fullDateTime: "y MMMM d, EEEE HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "d, E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "MM-dd",
                MEd: "MM-dd, E",
                MMM: "LLL",
                MMMd: "MMM d",
                MMMEd: "MMM d, E",
                MMMMd: "MMMM d",
                ms: "mm:ss",
                y: "y",
                yM: "y-MM",
                yMd: "y-MM-dd",
                yMEd: "y-MM-dd, E",
                yMMM: "y MMM",
                yMMMd: "y MMM d",
                yMMMEd: "y MMM d, E",
                yMMMM: "y MMMM",
                yQQQ: "y QQQ",
                yQQQQ: "y QQQQ"
            }
        },
        datePartsOrder: "ymd",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _l4y35,
            H: {
                H: "HH–HH"
            },
            hm: _l4y384,
            Hm: _l4y313,
            hmv: _l4y3105,
            Hmv: _l4y326,
            hv: _l4y39,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "MM–MM"
            },
            Md: _l4y327,
            MEd: _l4y367,
            MMM: {
                M: "LLL–LLL"
            },
            MMMd: _l4y311,
            MMMEd: _l4y368,
            y: {
                y: "y–y"
            },
            yM: _l4y315,
            yMd: _l4y3276,
            yMEd: _l4y3406,
            yMMM: {
                M: "y MMM–MMM",
                y: "y MMM – y MMM"
            },
            yMMMd: {
                d: "y MMM d–d",
                M: "y MMM d – MMM d",
                y: "y MMM d – y MMM d"
            },
            yMMMEd: {
                d: "y MMM d, E – MMM d, E",
                M: "y MMM d, E – MMM d, E",
                y: "y MMM d, E – y MMM d, E"
            },
            yMMMM: {
                M: "y MMMM–MMMM",
                y: "y MMMM – y MMMM"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _l4y3462,
        dayPeriods: _l4y3444,
        monthNames: _l4y3468,
        eraNames: {
            wide: [ "ovdal Kristtusa", "maŋŋel Kristtusa" ],
            abbreviated: [ "o.Kr.", "m.Kr." ]
        },
        quarterNames: _l4y3437,
        fields: _l4y3478
    },
    hebrew: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _l4y3472,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _l4y3462,
        dayPeriods: _l4y3444,
        monthNames: {
            format: _l4y3452,
            standAlone: _l4y3452
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _l4y3437,
        fields: _l4y3478
    },
    indian: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _l4y3472,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _l4y3462,
        dayPeriods: _l4y3444,
        monthNames: {
            format: _l4y3457,
            standAlone: _l4y3457
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _l4y3437,
        fields: _l4y3478
    },
    islamic: _l4y3482,
    "islamic-umalqura": _l4y3482,
    "islamic-tbla": _l4y3482,
    "islamic-civil": _l4y3482,
    "islamic-rgsa": _l4y3482,
    iso8601: _l4y3479,
    japanese: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _l4y3472,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _l4y3462,
        dayPeriods: _l4y3444,
        monthNames: _l4y3468,
        eraNames: {
            wide: _l4y3481,
            abbreviated: _l4y3481
        },
        quarterNames: _l4y3437,
        fields: _l4y3478
    },
    persian: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _l4y3472,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _l4y3462,
        dayPeriods: _l4y3444,
        monthNames: {
            format: _l4y3453,
            standAlone: _l4y3453
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _l4y3437,
        fields: _l4y3478
    },
    roc: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _l4y3472,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _l4y3462,
        dayPeriods: _l4y3444,
        monthNames: _l4y3468,
        eraNames: {
            wide: _l4y37,
            abbreviated: _l4y37
        },
        quarterNames: _l4y3437,
        fields: _l4y3478
    },
    islamicc: _l4y3479
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1) return "one";
    if (n === 2) return "two";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinal(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "eret " + this.renderSpelloutCardinal(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinal(Math.floor(n)) + " pilkku " + this.renderSpelloutCardinal(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return this.renderSpelloutCardinal(Math.floor(n / 1e15)) + " biljard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinal(n % 1e15));
    if (n >= 1e12) return this.renderSpelloutCardinal(Math.floor(n / 1e12)) + " biljon" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinal(n % 1e12));
    if (n >= 1e9) return this.renderSpelloutCardinal(Math.floor(n / 1e9)) + " miljard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinal(n % 1e9));
    if (n >= 1e6) return this.renderSpelloutCardinal(Math.floor(n / 1e6)) + " miljon" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinal(n % 1e6));
    if (n >= 1e3) return this.renderSpelloutCardinal(Math.floor(n / 1e3)) + "­duhát" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 100) return this.renderSpelloutCardinal(Math.floor(n / 100)) + "­čuođi" + (n === 100 ? "" : "­" + this.renderSpelloutCardinal(n % 100));
    if (n >= 20) return this.renderSpelloutCardinal(Math.floor(n / 10)) + "­logi" + (n === 20 ? "" : "­" + this.renderSpelloutCardinal(n % 10));
    if (n >= 11) return this.renderSpelloutCardinal(n % 10) + "­nuppe­lohkái";
    if (n >= 10) return "logi";
    if (n >= 9) return "ovcci";
    if (n >= 8) return "gávcci";
    if (n >= 7) return "čieža";
    if (n >= 6) return "guhtta";
    if (n >= 5) return "vihtta";
    if (n >= 4) return "njeallje";
    if (n >= 3) return "golbma";
    if (n >= 2) return "guokte";
    if (n >= 1) return "okta";
    if (n >= 0) return "nolla";
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 49), P.timeZones.slice(50, 52), {
    id: "America/Merida",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mérida",
    countryId: "MX"
}, P.timeZones.slice(52, 98), {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 117), {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Barthélemy",
    countryId: "BL"
}, P.timeZones.slice(117, 119), P.timeZones.slice(120, 151), P.timeZones[152], {
    id: "America/Sao_Paulo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "São Paulo",
    countryId: "BR"
}, P.timeZones.slice(153, 419));

inter.territories = [ _l4y3353, _l4y3298, _l4y3347, _l4y3188, _l4y3189, _l4y3354, _l4y3332, _l4y3409, _l4y3190, _l4y3152, _l4y3232, _l4y3360, _l4y374, _l4y3260, _l4y3191, _l4y3122, _l4y381, _l4y3277, _l4y3261, _l4y3413, _l4y3192, _l4y3193, _l4y3278, _l4y3233, _l4y3153, _l4y3154, _l4y3123, _l4y3194, _l4y3155, _l4y3195, _l4y3361, _l4y3234, _l4y395, _l4y3156, _l4y3386, _l4y3157, _l4y3235, _l4y3312, _l4y3124, _l4y3196, _l4y3323, _l4y3106, _l4y3108, _l4y387, _l4y3299, _l4y3279, _l4y3197, _l4y3300, _l4y3333, _l4y3280, _l4y391, _l4y3236, _l4y3237, _l4y3372, _l4y3158, _l4y3125, _l4y3238, _l4y3198, _l4y3159, _l4y3362, _l4y3301, _l4y3334, _l4y3199, _l4y3239, _l4y3200, _l4y3343, _l4y3335, _l4y3281, _l4y3282, _l4y3313, _l4y3283, _l4y3368, _l4y3373, _l4y3394, _l4y3126, _l4y3395, _l4y3201, _l4y3127, _l4y3262, _l4y3160, _l4y3202, _l4y3284, _l4y3110, _l4y3263, _l4y3240, _l4y3161, _l4y3324, _l4y3162, _l4y3163, _l4y3128, _l4y3302, _l4y3241, _l4y3242, _l4y3129, _l4y3264, _l4y3111, _l4y3112, _l4y3203, _l4y3204, _l4y3164, _l4y3165, _l4y3205, _l4y3166, _l4y3130, _l4y3167, _l4y3243, _l4y399, _l4y3348, _l4y3244, _l4y3206, _l4y3168, _l4y396, _l4y3265, _l4y3344, _l4y3266, _l4y3131, _l4y3169, _l4y3303, _l4y3245, _l4y3246, _l4y3207, _l4y3355, _l4y3336, _l4y3208, _l4y3209, _l4y3113, _l4y3170, _l4y3171, _l4y3114, _l4y3210, _l4y3211, _l4y3212, _l4y3132, _l4y3325, _l4y3213, _l4y3387, _l4y3285, _l4y3172, _l4y3286, _l4y3267, _l4y3133, _l4y3173, _l4y3304, _l4y3214, _l4y3115, _l4y3305, _l4y3215, _l4y3337, _l4y3287, _l4y3288, _l4y3268, _l4y3216, _l4y3217, _l4y3356, _l4y3289, _l4y3402, _l4y3247, _l4y3174, _l4y3248, _l4y3290, _l4y3291, _l4y3249, _l4y3134, _l4y3326, _l4y3306, _l4y3292, _l4y3218, _l4y3135, _l4y3136, _l4y3269, _l4y3137, _l4y3219, _l4y3116, _l4y3327, _l4y3138, _l4y3314, _l4y3307, _l4y3315, _l4y3117, _l4y3345, _l4y3403, _l4y3338, _l4y3316, _l4y3250, _l4y3139, _l4y3270, _l4y3175, _l4y3357, _l4y3251, _l4y3118, _l4y3252, _l4y3140, _l4y3358, _l4y3271, _l4y3308, _l4y3141, _l4y3220, _l4y3176, _l4y3177, _l4y3178, _l4y3221, _l4y3349, _l4y3317, _l4y3370, _l4y3309, _l4y3396, _l4y3400, _l4y3339, _l4y3142, _l4y3293, _l4y3318, _l4y3222, _l4y3179, _l4y3340, _l4y3319, _l4y3272, _l4y3253, _l4y3254, _l4y3223, _l4y3180, _l4y3273, _l4y3359, _l4y3181, _l4y3224, _l4y3377, _l4y3274, _l4y3143, _l4y3371, _l4y3182, _l4y3255, _l4y3294, _l4y3256, _l4y3119, _l4y3225, _l4y3144, _l4y3363, _l4y3107, _l4y3226, _l4y3320, _l4y3378, _l4y3183, _l4y3120, _l4y3184, _l4y3227, _l4y3145, _l4y3228, _l4y3295, _l4y3229, _l4y3257, _l4y3275, _l4y3230, _l4y3328, _l4y3341, _l4y3404, _l4y3350, _l4y3185, _l4y3258, _l4y3379, _l4y3374, _l4y3388, _l4y3380, _l4y3389, _l4y3364, _l4y375, _l4y3381, _l4y3390, _l4y3375, _l4y3397, _l4y3365, _l4y3391, _l4y3382, _l4y3369, _l4y3383, _l4y3376, _l4y3366, _l4y3321, _l4y3186, _l4y3231, _l4y3146, _l4y3187 ];

inter.regions = [ _l4y3347, _l4y3354, _l4y3413, _l4y3343, _l4y3344, _l4y3356, _l4y3402, _l4y3345, _l4y3358, _l4y3379, _l4y3374, _l4y3388, _l4y3380, _l4y3389, _l4y3364, _l4y375, _l4y3381, _l4y3390, _l4y3375, _l4y3397, _l4y3365, _l4y3391, _l4y3382, _l4y3369, _l4y3383, _l4y3376, _l4y3366, _l4y3321 ];

inter.countries = [ _l4y3353, _l4y3298, _l4y3188, _l4y3189, _l4y3332, _l4y3409, _l4y3190, _l4y3152, _l4y3232, _l4y3360, _l4y374, _l4y3260, _l4y3191, _l4y3122, _l4y381, _l4y3277, _l4y3261, _l4y3192, _l4y3193, _l4y3278, _l4y3233, _l4y3153, _l4y3154, _l4y3123, _l4y3194, _l4y3155, _l4y3195, _l4y3361, _l4y3234, _l4y395, _l4y3156, _l4y3386, _l4y3157, _l4y3235, _l4y3312, _l4y3124, _l4y3196, _l4y3323, _l4y3106, _l4y3108, _l4y387, _l4y3299, _l4y3279, _l4y3197, _l4y3300, _l4y3333, _l4y3280, _l4y391, _l4y3236, _l4y3237, _l4y3372, _l4y3158, _l4y3125, _l4y3238, _l4y3198, _l4y3159, _l4y3362, _l4y3301, _l4y3334, _l4y3199, _l4y3239, _l4y3200, _l4y3335, _l4y3281, _l4y3282, _l4y3313, _l4y3283, _l4y3368, _l4y3373, _l4y3394, _l4y3126, _l4y3395, _l4y3201, _l4y3127, _l4y3262, _l4y3160, _l4y3202, _l4y3284, _l4y3110, _l4y3263, _l4y3240, _l4y3161, _l4y3324, _l4y3162, _l4y3163, _l4y3128, _l4y3302, _l4y3241, _l4y3242, _l4y3129, _l4y3264, _l4y3111, _l4y3112, _l4y3203, _l4y3204, _l4y3164, _l4y3165, _l4y3205, _l4y3166, _l4y3130, _l4y3167, _l4y3243, _l4y399, _l4y3348, _l4y3244, _l4y3206, _l4y3168, _l4y396, _l4y3265, _l4y3266, _l4y3131, _l4y3169, _l4y3303, _l4y3245, _l4y3246, _l4y3207, _l4y3355, _l4y3336, _l4y3208, _l4y3209, _l4y3113, _l4y3170, _l4y3171, _l4y3114, _l4y3210, _l4y3211, _l4y3212, _l4y3132, _l4y3325, _l4y3213, _l4y3387, _l4y3285, _l4y3172, _l4y3286, _l4y3267, _l4y3133, _l4y3173, _l4y3304, _l4y3214, _l4y3115, _l4y3305, _l4y3215, _l4y3337, _l4y3287, _l4y3288, _l4y3268, _l4y3216, _l4y3217, _l4y3289, _l4y3247, _l4y3174, _l4y3248, _l4y3290, _l4y3291, _l4y3249, _l4y3134, _l4y3326, _l4y3306, _l4y3292, _l4y3218, _l4y3135, _l4y3136, _l4y3269, _l4y3137, _l4y3219, _l4y3116, _l4y3327, _l4y3138, _l4y3314, _l4y3307, _l4y3315, _l4y3117, _l4y3403, _l4y3338, _l4y3316, _l4y3250, _l4y3139, _l4y3270, _l4y3175, _l4y3357, _l4y3251, _l4y3118, _l4y3252, _l4y3140, _l4y3271, _l4y3308, _l4y3141, _l4y3220, _l4y3176, _l4y3177, _l4y3178, _l4y3221, _l4y3349, _l4y3317, _l4y3370, _l4y3309, _l4y3396, _l4y3400, _l4y3339, _l4y3142, _l4y3293, _l4y3318, _l4y3222, _l4y3179, _l4y3340, _l4y3319, _l4y3272, _l4y3253, _l4y3254, _l4y3223, _l4y3180, _l4y3273, _l4y3359, _l4y3181, _l4y3224, _l4y3377, _l4y3274, _l4y3143, _l4y3371, _l4y3182, _l4y3255, _l4y3294, _l4y3256, _l4y3119, _l4y3225, _l4y3144, _l4y3363, _l4y3107, _l4y3226, _l4y3320, _l4y3378, _l4y3183, _l4y3120, _l4y3184, _l4y3227, _l4y3145, _l4y3228, _l4y3295, _l4y3229, _l4y3257, _l4y3275, _l4y3230, _l4y3328, _l4y3341, _l4y3404, _l4y3350, _l4y3185, _l4y3258, _l4y3186, _l4y3231, _l4y3146, _l4y3187 ];

inter.languages = [ {
    id: "ace",
    displayName: "acehgiella"
}, {
    id: "af",
    displayName: "afrikánsagiella",
    nativeDisplayName: "Afrikaans"
}, {
    id: "smn",
    displayName: "anárašgiella",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "an",
    displayName: "aragoniagiella"
}, {
    id: "ast",
    displayName: "asturiagiella",
    nativeDisplayName: "asturianu"
}, {
    id: "ang",
    displayName: "boares eaŋgalasgiella"
}, {
    id: "bs",
    displayName: "bosniagiella",
    nativeDisplayName: "bosanski"
}, {
    id: "br",
    displayName: "bretonagiella",
    nativeDisplayName: "brezhoneg"
}, {
    id: "ca",
    displayName: "katalánagiella",
    nativeDisplayName: "català"
}, {
    id: "co",
    displayName: "corsicagiella"
}, {
    id: "cy",
    displayName: "kymragiella",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "dánskkagiella",
    nativeDisplayName: "dansk"
}, {
    id: "se",
    displayName: "davvisámegiella",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "de",
    displayName: "duiskkagiella",
    nativeDisplayName: "Deutsch"
}, {
    id: "dv",
    displayName: "divehigiella"
}, {
    id: "und",
    displayName: "dovdameahttun giella"
}, {
    id: "no",
    displayName: "dárogiella"
}, {
    id: "et",
    displayName: "esttegiella",
    nativeDisplayName: "eesti"
}, {
    id: "en",
    displayName: "eaŋgalsgiella",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "ersagiella"
}, {
    id: "es",
    displayName: "spánskkagiella",
    nativeDisplayName: "español"
}, {
    id: "fj",
    displayName: "fidjigiella"
}, {
    id: "fil",
    displayName: "filippiinnagiella",
    nativeDisplayName: "Filipino"
}, {
    id: "fr",
    displayName: "fránskkagiella",
    nativeDisplayName: "français"
}, {
    id: "fo",
    displayName: "fearagiella",
    nativeDisplayName: "føroyskt"
}, {
    id: "ga",
    displayName: "iirragiella",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manksgiella",
    nativeDisplayName: "Gaelg"
}, {
    id: "krl",
    displayName: "gárjilgiella"
}, {
    id: "ht",
    displayName: "haitigiella"
}, {
    id: "ha",
    displayName: "haussagiella",
    nativeDisplayName: "Hausa"
}, {
    id: "hr",
    displayName: "kroátiagiella",
    nativeDisplayName: "hrvatski"
}, {
    id: "id",
    displayName: "indonesiagiella",
    nativeDisplayName: "Indonesia"
}, {
    id: "it",
    displayName: "itáliagiella",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "javagiella"
}, {
    id: "smj",
    displayName: "julevsámegiella"
}, {
    id: "kw",
    displayName: "kornagiella",
    nativeDisplayName: "kernewek"
}, {
    id: "kv",
    displayName: "komigiella"
}, {
    id: "ku",
    displayName: "kurdigiella"
}, {
    id: "lv",
    displayName: "látviagiella",
    nativeDisplayName: "latviešu"
}, {
    id: "lt",
    displayName: "liettuvagiella",
    nativeDisplayName: "lietuvių"
}, {
    id: "sma",
    displayName: "lullisámegiella"
}, {
    id: "la",
    displayName: "láhtengiella"
}, {
    id: "lb",
    displayName: "luxemburggagiella",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "hu",
    displayName: "ungárgiella",
    nativeDisplayName: "magyar"
}, {
    id: "mt",
    displayName: "maltagiella",
    nativeDisplayName: "Malti"
}, {
    id: "mi",
    displayName: "maorigiella"
}, {
    id: "chm",
    displayName: "marigiella"
}, {
    id: "mdf",
    displayName: "mokšagiella"
}, {
    id: "nl",
    displayName: "hollánddagiella",
    nativeDisplayName: "Nederlands"
}, {
    id: "nb",
    displayName: "girjedárogiella",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "sms",
    displayName: "nuortalašgiella"
}, {
    id: "nn",
    displayName: "ođđadárogiella",
    nativeDisplayName: "nynorsk"
}, {
    id: "oc",
    displayName: "oksitánagiella"
}, {
    id: "pl",
    displayName: "polskkagiella",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "portugálagiella",
    nativeDisplayName: "português"
}, {
    id: "ro",
    displayName: "romániagiella",
    nativeDisplayName: "română"
}, {
    id: "rm",
    displayName: "romanšgiella",
    nativeDisplayName: "rumantsch"
}, {
    id: "sm",
    displayName: "samoagiella"
}, {
    id: "sc",
    displayName: "sardigiella"
}, {
    id: "sel",
    displayName: "selkupagiella"
}, {
    id: "sh",
    displayName: "serbokroatiagiella"
}, {
    id: "swb",
    displayName: "shimaorigiella"
}, {
    id: "sq",
    displayName: "albánagiella",
    nativeDisplayName: "shqip"
}, {
    id: "scn",
    displayName: "sisiliagiella"
}, {
    id: "sk",
    displayName: "slovákiagiella",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "slovenagiella",
    nativeDisplayName: "slovenščina"
}, {
    id: "fi",
    displayName: "suomagiella",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "ruoŧagiella",
    nativeDisplayName: "svenska"
}, {
    id: "ty",
    displayName: "tahitigiella"
}, {
    id: "vi",
    displayName: "vietnamgiella",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tr",
    displayName: "durkagiella",
    nativeDisplayName: "Türkçe"
}, {
    id: "udm",
    displayName: "udmurtagiella"
}, {
    id: "wa",
    displayName: "vallonagiella"
}, {
    id: "fy",
    displayName: "oarjifriisagiella",
    nativeDisplayName: "West-Frysk"
}, {
    id: "is",
    displayName: "islánddagiella",
    nativeDisplayName: "íslenska"
}, {
    id: "cs",
    displayName: "čeahkagiella",
    nativeDisplayName: "čeština"
}, {
    id: "haw",
    displayName: "hawaiigiella",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "greikkagiella",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "vilges-ruoššagiella",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bulgáriagiella",
    nativeDisplayName: "български"
}, {
    id: "mk",
    displayName: "makedoniagiella",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongoliagiella",
    nativeDisplayName: "монгол"
}, {
    id: "ru",
    displayName: "ruoššagiella",
    nativeDisplayName: "русский"
}, {
    id: "sr",
    displayName: "serbiagiella",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ukrainagiella",
    nativeDisplayName: "українська"
}, {
    id: "kk",
    displayName: "kazakgiella",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armeenagiella",
    nativeDisplayName: "հայերեն"
}, {
    id: "ur",
    displayName: "urdugiella",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "arábagiella",
    nativeDisplayName: "العربية"
}, {
    id: "fa",
    displayName: "persijagiella",
    nativeDisplayName: "فارسی"
}, {
    id: "ne",
    displayName: "nepaligiella",
    nativeDisplayName: "नेपाली"
}, {
    id: "hi",
    displayName: "hindigiella",
    nativeDisplayName: "हिन्दी"
}, {
    id: "bn",
    displayName: "bengalgiella",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "panjabigiella",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gujaratagiella",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "th",
    displayName: "ŧaigiella",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "laogiella",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibetagiella",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzongkhagiella",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "burmagiella",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "georgiagiella",
    nativeDisplayName: "ქართული"
}, {
    id: "km",
    displayName: "kambodiagiella",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zh",
    displayName: "kiinnágiella",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japánagiella",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "álki kiinágiella",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "kantongiella",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "árbevirolaš kiinnágiella",
    nativeDisplayName: "繁體中文"
}, {
    id: "ko",
    displayName: "koreagiella",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Arab",
    displayName: "arába"
}, {
    id: "Zzzz",
    displayName: "dovdameahttun chállin"
}, {
    id: "Grek",
    displayName: "greikkalaš"
}, {
    id: "Hang",
    displayName: "hangul"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Hani",
    displayName: "kiinnaš"
}, {
    id: "Cyrl",
    displayName: "kyrillalaš"
}, {
    id: "Latn",
    displayName: "láhtenaš"
}, {
    id: "Zxxx",
    displayName: "orrut chállojuvvot"
}, {
    id: "Hans",
    displayName: "álki"
}, {
    id: "Hant",
    displayName: "árbevirolaš"
} ];

inter.currencies = [ {
    id: "EUR",
    displayName: "euro",
    symbol: "€",
    one: "euro",
    two: "euro",
    other: "euro"
}, {
    id: "NOK",
    displayName: "norgga kruvdno",
    symbol: "kr",
    one: "norgga kruvdno",
    two: "norgga kruvdno",
    other: "norgga kruvdno"
}, {
    id: "SEK",
    displayName: "ruoŧŧa kruvdno",
    symbol: "Skr",
    one: "ruoŧŧa kruvdno",
    two: "ruoŧŧa kruvdno",
    other: "ruoŧŧa kruvdno"
}, {
    id: "FIM",
    displayName: "suoma márkki"
}, {
    id: "XAU",
    displayName: "uns golli"
}, {
    id: "XAG",
    displayName: "uns silba"
} ];

module.exports = inter;