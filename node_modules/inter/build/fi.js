function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _gi8h1 = {
    "default": "#,##0 %"
}, _gi8h2 = {
    all: {
        leap: "{0}bis"
    }
}, _gi8h3 = {
    one: "{0}°",
    other: "{0}°"
}, _gi8h4 = {
    one: "{0}′",
    other: "{0}′"
}, _gi8h5 = {
    one: "{0}″",
    other: "{0}″"
}, _gi8h6 = {
    one: "{0}t",
    other: "{0}t"
}, _gi8h7 = {
    a: "h a – h a",
    h: "h–h a"
}, _gi8h8 = {
    displayName: "aikakausi"
}, _gi8h9 = [ "Before R.O.C.", "Minguo" ], _gi8h10 = {
    one: "{0} t",
    other: "{0} t"
}, _gi8h11 = {
    one: "{0}ka",
    other: "{0}ka"
}, _gi8h12 = {
    d: "d.–d.M.",
    M: "d.M.–d.M."
}, _gi8h13 = {
    displayName: "viikonpäivä"
}, _gi8h14 = {
    displayName: "aikavyöhyke"
}, _gi8h15 = {
    one: "{0} ka",
    other: "{0} ka"
}, _gi8h16 = {
    one: "{0} vs",
    other: "{0} vs"
}, _gi8h17 = {
    one: "{0} kn",
    other: "{0} kn"
}, _gi8h18 = {
    one: "{0} tp",
    other: "{0} tp"
}, _gi8h19 = {
    one: "0 t'.'",
    other: "0 t'.'"
}, _gi8h20 = {
    H: "H.mm–H.mm",
    m: "H.mm–H.mm"
}, _gi8h21 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _gi8h22 = [ "S", "M", "T", "K", "T", "P", "L" ], _gi8h23 = {
    one: "{0} pnk",
    other: "{0} pnk"
}, _gi8h24 = {
    one: "{0} tkp",
    other: "{0} tkp"
}, _gi8h25 = {
    one: "{0}kcal",
    other: "{0}kcal"
}, _gi8h26 = {
    one: "00 t'.'",
    other: "00 t'.'"
}, _gi8h27 = {
    displayName: "vuorokaudenaika"
}, _gi8h28 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _gi8h29 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _gi8h30 = {
    one: "{0} kcal",
    other: "{0} kcal"
}, _gi8h31 = {
    one: "0 tuhat",
    other: "0 tuhatta"
}, _gi8h32 = {
    one: "000 t'.'",
    other: "000 t'.'"
}, _gi8h33 = {
    one: "0 mrd'.'",
    other: "0 mrd'.'"
}, _gi8h34 = {
    one: "0 t'.' ¤",
    other: "0 t'.' ¤"
}, _gi8h35 = {
    H: "H.mm–H.mm v",
    m: "H.mm–H.mm v"
}, _gi8h36 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _gi8h37 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _gi8h38 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _gi8h39 = {
    one: "0 milj'.'",
    other: "0 milj'.'"
}, _gi8h40 = {
    one: "00 mrd'.'",
    other: "00 mrd'.'"
}, _gi8h41 = {
    one: "0 bilj'.'",
    other: "0 bilj'.'"
}, _gi8h42 = {
    one: "00 t'.' ¤",
    other: "00 t'.' ¤"
}, _gi8h43 = [ "su", "ma", "ti", "ke", "to", "pe", "la" ], _gi8h44 = {
    M: "LLL–LLLL y",
    y: "LLLL y – LLLL y"
}, _gi8h45 = {
    one: "00 tuhatta",
    other: "00 tuhatta"
}, _gi8h46 = {
    one: "00 milj'.'",
    other: "00 milj'.'"
}, _gi8h47 = {
    one: "000 mrd'.'",
    other: "000 mrd'.'"
}, _gi8h48 = {
    one: "00 bilj'.'",
    other: "00 bilj'.'"
}, _gi8h49 = {
    one: "000 t'.' ¤",
    other: "000 t'.' ¤"
}, _gi8h50 = {
    one: "0 mrd'.' ¤",
    other: "0 mrd'.' ¤"
}, _gi8h51 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _gi8h52 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _gi8h53 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _gi8h54 = {
    one: "0 miljoona",
    other: "0 miljoonaa"
}, _gi8h55 = {
    one: "0 miljardi",
    other: "0 miljardia"
}, _gi8h56 = {
    one: "0 biljoona",
    other: "0 biljoonaa"
}, _gi8h57 = {
    d: "d.–d. MMMM",
    M: "d. MMMM – d. MMMM"
}, _gi8h58 = {
    "0": "tänä v",
    "1": "ensi v",
    "-1": "viime v"
}, _gi8h59 = {
    one: "000 tuhatta",
    other: "000 tuhatta"
}, _gi8h60 = {
    one: "000 milj'.'",
    other: "000 milj'.'"
}, _gi8h61 = {
    one: "000 bilj'.'",
    other: "000 bilj'.'"
}, _gi8h62 = {
    one: "0 milj'.' ¤",
    other: "0 milj'.' ¤"
}, _gi8h63 = {
    one: "00 mrd'.' ¤",
    other: "00 mrd'.' ¤"
}, _gi8h64 = {
    one: "0 bilj'.' ¤",
    other: "0 bilj'.' ¤"
}, _gi8h65 = {
    d: "E d. – E d.M.",
    M: "E d.M. – E d.M."
}, _gi8h66 = {
    M: "LLL–LLLL y G",
    y: "LLLL y – LLLL y G"
}, _gi8h67 = {
    one: "00 miljoonaa",
    other: "00 miljoonaa"
}, _gi8h68 = {
    one: "00 miljardia",
    other: "00 miljardia"
}, _gi8h69 = {
    one: "00 biljoonaa",
    other: "00 biljoonaa"
}, _gi8h70 = {
    one: "00 milj'.' ¤",
    other: "00 milj'.' ¤"
}, _gi8h71 = {
    one: "000 mrd'.' ¤",
    other: "000 mrd'.' ¤"
}, _gi8h72 = {
    one: "00 bilj'.' ¤",
    other: "00 bilj'.' ¤"
}, _gi8h73 = {
    one: "{0} v päästä",
    other: "{0} v päästä"
}, _gi8h74 = {
    one: "{0} v sitten",
    other: "{0} v sitten"
}, _gi8h75 = {
    one: "{0} t päästä",
    other: "{0} t päästä"
}, _gi8h76 = {
    one: "{0} t sitten",
    other: "{0} t sitten"
}, _gi8h77 = {
    one: "{0} s päästä",
    other: "{0} s päästä"
}, _gi8h78 = {
    one: "{0} s sitten",
    other: "{0} s sitten"
}, _gi8h79 = {
    "0": "tänä su",
    "1": "ensi su",
    "-1": "viime su"
}, _gi8h80 = {
    "0": "tänä ma",
    "1": "ensi ma",
    "-1": "viime ma"
}, _gi8h81 = {
    "0": "tänä ti",
    "1": "ensi ti",
    "-1": "viime ti"
}, _gi8h82 = {
    "0": "tänä ke",
    "1": "ensi ke",
    "-1": "viime ke"
}, _gi8h83 = {
    "0": "tänä to",
    "1": "ensi to",
    "-1": "viime to"
}, _gi8h84 = {
    "0": "tänä pe",
    "1": "ensi pe",
    "-1": "viime pe"
}, _gi8h85 = {
    "0": "tänä la",
    "1": "ensi la",
    "-1": "viime la"
}, _gi8h86 = {
    one: "{0} karaatti",
    other: "{0} karaattia"
}, _gi8h87 = {
    "0": "tässä kk",
    "1": "ensi kk",
    "-1": "viime kk"
}, _gi8h88 = {
    "0": "tällä vk",
    "1": "ensi vk",
    "-1": "viime vk"
}, _gi8h89 = {
    one: "000 miljoonaa",
    other: "000 miljoonaa"
}, _gi8h90 = {
    one: "000 miljardia",
    other: "000 miljardia"
}, _gi8h91 = {
    one: "000 biljoonaa",
    other: "000 biljoonaa"
}, _gi8h92 = {
    one: "000 milj'.' ¤",
    other: "000 milj'.' ¤"
}, _gi8h93 = {
    one: "000 bilj'.' ¤",
    other: "000 bilj'.' ¤"
}, _gi8h94 = {
    one: "{0} kk päästä",
    other: "{0} kk päästä"
}, _gi8h95 = {
    one: "{0} kk sitten",
    other: "{0} kk sitten"
}, _gi8h96 = {
    one: "{0} vk päästä",
    other: "{0} vk päästä"
}, _gi8h97 = {
    one: "{0} vk sitten",
    other: "{0} vk sitten"
}, _gi8h98 = {
    one: "{0} pv päästä",
    other: "{0} pv päästä"
}, _gi8h99 = {
    one: "{0} pv sitten",
    other: "{0} pv sitten"
}, _gi8h100 = [ "1. nelj.", "2. nelj.", "3. nelj.", "4. nelj." ], _gi8h101 = {
    one: "{0} min päästä",
    other: "{0} min päästä"
}, _gi8h102 = {
    one: "{0} min sitten",
    other: "{0} min sitten"
}, _gi8h103 = {
    one: "{0} kilokalori",
    other: "{0} kilokaloria"
}, _gi8h104 = {
    d: "E d. – E d. MMMM",
    M: "E d. MMMM – E d. MMMM"
}, _gi8h105 = [ "T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J" ], _gi8h106 = {
    one: "{0} nelj. päästä",
    other: "{0} nelj. päästä"
}, _gi8h107 = {
    one: "{0} nelj. sitten",
    other: "{0} nelj. sitten"
}, _gi8h108 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _gi8h109 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _gi8h110 = {
    one: "{0} vuosi sitten",
    other: "{0} vuotta sitten"
}, _gi8h111 = {
    "0": "tänä nelj.",
    "1": "ensi nelj.",
    "-1": "viime nelj."
}, _gi8h112 = {
    one: "{0} päivä sitten",
    other: "{0} päivää sitten"
}, _gi8h113 = {
    one: "{0} tunti sitten",
    other: "{0} tuntia sitten"
}, _gi8h114 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _gi8h115 = {
    d: "d.–d.M.y G",
    M: "d.M.–d.M.y G",
    y: "d.M.y–d.M.y G"
}, _gi8h116 = {
    one: "{0} vuoden päästä",
    other: "{0} vuoden päästä"
}, _gi8h117 = {
    one: "{0} viikon päästä",
    other: "{0} viikon päästä"
}, _gi8h118 = {
    one: "{0} päivän päästä",
    other: "{0} päivän päästä"
}, _gi8h119 = {
    one: "{0} tunnin päästä",
    other: "{0} tunnin päästä"
}, _gi8h120 = {
    id: "AQ",
    displayName: "Antarktis",
    hasTimeZones: true
}, _gi8h121 = {
    id: "001",
    displayName: "maailma",
    hasTimeZones: false
}, _gi8h122 = {
    one: "{0} viikko sitten",
    other: "{0} viikkoa sitten"
}, _gi8h123 = {
    relative: _gi8h79
}, _gi8h124 = {
    relative: _gi8h80
}, _gi8h125 = {
    relative: _gi8h81
}, _gi8h126 = {
    relative: _gi8h82
}, _gi8h127 = {
    relative: _gi8h83
}, _gi8h128 = {
    relative: _gi8h84
}, _gi8h129 = {
    relative: _gi8h85
}, _gi8h130 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _gi8h131 = {
    id: "CX",
    displayName: "Joulusaari",
    hasTimeZones: true
}, _gi8h132 = {
    a: "h.mm a – h.mm a",
    h: "h.mm–h.mm a",
    m: "h.mm–h.mm a"
}, _gi8h133 = {
    "0": "tänä vuonna",
    "1": "ensi vuonna",
    "-1": "viime vuonna"
}, _gi8h134 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _gi8h135 = [ "T", "H", "K", "T", "S", "A", "A", "N", "I", "S", "T", "A", "E" ], _gi8h136 = {
    "0": "tässä kuussa",
    "1": "ensi kuussa",
    "-1": "viime kuussa"
}, _gi8h137 = {
    one: "{0} sekunti sitten",
    other: "{0} sekuntia sitten"
}, _gi8h138 = {
    one: "{0} minuutin päästä",
    other: "{0} minuutin päästä"
}, _gi8h139 = {
    one: "{0} sekunnin päästä",
    other: "{0} sekunnin päästä"
}, _gi8h140 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _gi8h141 = {
    one: "{0} kuukausi sitten",
    other: "{0} kuukautta sitten"
}, _gi8h142 = {
    one: "{0} minuutti sitten",
    other: "{0} minuuttia sitten"
}, _gi8h143 = {
    id: "BV",
    displayName: "Bouvet’nsaari",
    hasTimeZones: false
}, _gi8h144 = {
    one: "{0} neljännes sitten",
    other: "{0} neljännes sitten"
}, _gi8h145 = {
    one: "{0} kuukauden päästä",
    other: "{0} kuukauden päästä"
}, _gi8h146 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _gi8h147 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _gi8h148 = {
    id: "IC",
    displayName: "Kanariansaaret",
    hasTimeZones: false
}, _gi8h149 = {
    id: "AC",
    displayName: "Ascension-saari",
    hasTimeZones: false
}, _gi8h150 = {
    a: "h.mm a – h.mm a v",
    h: "h.mm–h.mm a v",
    m: "h.mm–h.mm a v"
}, _gi8h151 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _gi8h152 = {
    id: "EA",
    displayName: "Ceuta ja Melilla",
    hasTimeZones: false
}, _gi8h153 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _gi8h154 = {
    "0": "tällä viikolla",
    "1": "ensi viikolla",
    "-1": "viime viikolla"
}, _gi8h155 = {
    id: "CP",
    displayName: "Clippertoninsaari",
    hasTimeZones: false
}, _gi8h156 = [ "1. neljännes", "2. neljännes", "3. neljännes", "4. neljännes" ], _gi8h157 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _gi8h158 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _gi8h159 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _gi8h160 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _gi8h161 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _gi8h162 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _gi8h163 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _gi8h164 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _gi8h165 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _gi8h166 = {
    id: "TD",
    displayName: "Tšad",
    regionId: "017",
    hasTimeZones: true
}, _gi8h167 = {
    id: "EE",
    displayName: "Viro",
    regionId: "154",
    hasTimeZones: true
}, _gi8h168 = {
    "0": "tänä tiistaina",
    "1": "ensi tiistaina",
    "-1": "viime tiistaina"
}, _gi8h169 = {
    "0": "tänä torstaina",
    "1": "ensi torstaina",
    "-1": "viime torstaina"
}, _gi8h170 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _gi8h171 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _gi8h172 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _gi8h173 = {
    id: "FJ",
    displayName: "Fidži",
    regionId: "054",
    hasTimeZones: true
}, _gi8h174 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _gi8h175 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _gi8h176 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _gi8h177 = {
    id: "IN",
    displayName: "Intia",
    regionId: "034",
    hasTimeZones: true
}, _gi8h178 = {
    id: "YE",
    displayName: "Jemen",
    regionId: "145",
    hasTimeZones: true
}, _gi8h179 = {
    id: "KE",
    displayName: "Kenia",
    regionId: "014",
    hasTimeZones: true
}, _gi8h180 = {
    id: "CN",
    displayName: "Kiina",
    regionId: "030",
    hasTimeZones: true
}, _gi8h181 = {
    id: "CU",
    displayName: "Kuuba",
    regionId: "029",
    hasTimeZones: true
}, _gi8h182 = {
    id: "LY",
    displayName: "Libya",
    regionId: "015",
    hasTimeZones: true
}, _gi8h183 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _gi8h184 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _gi8h185 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _gi8h186 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _gi8h187 = {
    id: "NO",
    displayName: "Norja",
    regionId: "154",
    hasTimeZones: true
}, _gi8h188 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _gi8h189 = {
    id: "PL",
    displayName: "Puola",
    regionId: "151",
    hasTimeZones: true
}, _gi8h190 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _gi8h191 = {
    id: "DE",
    displayName: "Saksa",
    regionId: "155",
    hasTimeZones: true
}, _gi8h192 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _gi8h193 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _gi8h194 = {
    id: "FI",
    displayName: "Suomi",
    regionId: "154",
    hasTimeZones: true
}, _gi8h195 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _gi8h196 = {
    one: "{0} neljänneksen päästä",
    other: "{0} neljänneksen päästä"
}, _gi8h197 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _gi8h198 = {
    id: "BS",
    displayName: "Bahama",
    regionId: "029",
    hasTimeZones: true
}, _gi8h199 = {
    id: "BE",
    displayName: "Belgia",
    regionId: "155",
    hasTimeZones: true
}, _gi8h200 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _gi8h201 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _gi8h202 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _gi8h203 = {
    id: "EG",
    displayName: "Egypti",
    regionId: "015",
    hasTimeZones: true
}, _gi8h204 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _gi8h205 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _gi8h206 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _gi8h207 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _gi8h208 = {
    id: "IT",
    displayName: "Italia",
    regionId: "039",
    hasTimeZones: true
}, _gi8h209 = {
    id: "JP",
    displayName: "Japani",
    regionId: "030",
    hasTimeZones: true
}, _gi8h210 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _gi8h211 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _gi8h212 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _gi8h213 = {
    id: "CY",
    displayName: "Kypros",
    regionId: "145",
    hasTimeZones: true
}, _gi8h214 = {
    id: "LV",
    displayName: "Latvia",
    regionId: "154",
    hasTimeZones: true
}, _gi8h215 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _gi8h216 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _gi8h217 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _gi8h218 = {
    id: "FR",
    displayName: "Ranska",
    regionId: "155",
    hasTimeZones: true
}, _gi8h219 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _gi8h220 = {
    id: "SE",
    displayName: "Ruotsi",
    regionId: "154",
    hasTimeZones: true
}, _gi8h221 = {
    id: "ZM",
    displayName: "Sambia",
    regionId: "014",
    hasTimeZones: true
}, _gi8h222 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _gi8h223 = {
    id: "SY",
    displayName: "Syyria",
    regionId: "145",
    hasTimeZones: true
}, _gi8h224 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _gi8h225 = {
    id: "DK",
    displayName: "Tanska",
    regionId: "154",
    hasTimeZones: true
}, _gi8h226 = {
    id: "TR",
    displayName: "Turkki",
    regionId: "145",
    hasTimeZones: true
}, _gi8h227 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _gi8h228 = {
    id: "CZ",
    displayName: "Tšekki",
    regionId: "151",
    hasTimeZones: true
}, _gi8h229 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _gi8h230 = {
    id: "HU",
    displayName: "Unkari",
    regionId: "151",
    hasTimeZones: true
}, _gi8h231 = {
    id: "RU",
    displayName: "Venäjä",
    regionId: "151",
    hasTimeZones: true
}, _gi8h232 = {
    "0": "tänään",
    "1": "huom.",
    "2": "ylihuom.",
    "-2": "toissap.",
    "-1": "eilen"
}, _gi8h233 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _gi8h234 = {
    id: "DZ",
    displayName: "Algeria",
    regionId: "015",
    hasTimeZones: true
}, _gi8h235 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _gi8h236 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _gi8h237 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _gi8h238 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _gi8h239 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _gi8h240 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _gi8h241 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _gi8h242 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _gi8h243 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _gi8h244 = {
    id: "ES",
    displayName: "Espanja",
    regionId: "039",
    hasTimeZones: true
}, _gi8h245 = {
    id: "ET",
    displayName: "Etiopia",
    regionId: "014",
    hasTimeZones: true
}, _gi8h246 = {
    id: "GE",
    displayName: "Georgia",
    regionId: "145",
    hasTimeZones: true
}, _gi8h247 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _gi8h248 = {
    id: "IE",
    displayName: "Irlanti",
    regionId: "154",
    hasTimeZones: true
}, _gi8h249 = {
    id: "IS",
    displayName: "Islanti",
    regionId: "154",
    hasTimeZones: true
}, _gi8h250 = {
    id: "JM",
    displayName: "Jamaika",
    regionId: "029",
    hasTimeZones: true
}, _gi8h251 = {
    id: "CM",
    displayName: "Kamerun",
    regionId: "017",
    hasTimeZones: true
}, _gi8h252 = {
    id: "KM",
    displayName: "Komorit",
    regionId: "014",
    hasTimeZones: true
}, _gi8h253 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _gi8h254 = {
    id: "GR",
    displayName: "Kreikka",
    regionId: "039",
    hasTimeZones: true
}, _gi8h255 = {
    id: "HR",
    displayName: "Kroatia",
    regionId: "039",
    hasTimeZones: true
}, _gi8h256 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _gi8h257 = {
    id: "LB",
    displayName: "Libanon",
    regionId: "145",
    hasTimeZones: true
}, _gi8h258 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _gi8h259 = {
    id: "LT",
    displayName: "Liettua",
    regionId: "154",
    hasTimeZones: true
}, _gi8h260 = {
    id: "MY",
    displayName: "Malesia",
    regionId: "035",
    hasTimeZones: true
}, _gi8h261 = {
    id: "MA",
    displayName: "Marokko",
    regionId: "015",
    hasTimeZones: true
}, _gi8h262 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _gi8h263 = {
    id: "MX",
    displayName: "Meksiko",
    regionId: "013",
    hasTimeZones: true
}, _gi8h264 = {
    id: "MD",
    displayName: "Moldova",
    regionId: "151",
    hasTimeZones: true
}, _gi8h265 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _gi8h266 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _gi8h267 = {
    id: "RO",
    displayName: "Romania",
    regionId: "151",
    hasTimeZones: true
}, _gi8h268 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _gi8h269 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _gi8h270 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _gi8h271 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _gi8h272 = {
    id: "CH",
    displayName: "Sveitsi",
    regionId: "155",
    hasTimeZones: true
}, _gi8h273 = {
    id: "TH",
    displayName: "Thaimaa",
    regionId: "035",
    hasTimeZones: true
}, _gi8h274 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _gi8h275 = {
    id: "TN",
    displayName: "Tunisia",
    regionId: "015",
    hasTimeZones: true
}, _gi8h276 = {
    id: "UA",
    displayName: "Ukraina",
    regionId: "151",
    hasTimeZones: true
}, _gi8h277 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _gi8h278 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _gi8h279 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _gi8h280 = {
    "0": "tänä lauantaina",
    "1": "ensi lauantaina",
    "-1": "viime lauantaina"
}, _gi8h281 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _gi8h282 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _gi8h283 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _gi8h284 = {
    id: "BR",
    displayName: "Brasilia",
    regionId: "005",
    hasTimeZones: true
}, _gi8h285 = {
    id: "BG",
    displayName: "Bulgaria",
    regionId: "151",
    hasTimeZones: true
}, _gi8h286 = {
    id: "DJ",
    displayName: "Djibouti",
    regionId: "014",
    hasTimeZones: true
}, _gi8h287 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _gi8h288 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _gi8h289 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _gi8h290 = {
    id: "AT",
    displayName: "Itävalta",
    regionId: "155",
    hasTimeZones: true
}, _gi8h291 = {
    id: "JO",
    displayName: "Jordania",
    regionId: "145",
    hasTimeZones: true
}, _gi8h292 = {
    id: "KH",
    displayName: "Kambodža",
    regionId: "035",
    hasTimeZones: true
}, _gi8h293 = {
    id: "KG",
    displayName: "Kirgisia",
    regionId: "143",
    hasTimeZones: true
}, _gi8h294 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _gi8h295 = {
    id: "CO",
    displayName: "Kolumbia",
    regionId: "005",
    hasTimeZones: true
}, _gi8h296 = {
    id: "IM",
    displayName: "Mansaari",
    regionId: "154",
    hasTimeZones: true
}, _gi8h297 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _gi8h298 = {
    id: "MZ",
    displayName: "Mosambik",
    regionId: "014",
    hasTimeZones: true
}, _gi8h299 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _gi8h300 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _gi8h301 = {
    id: "PN",
    displayName: "Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _gi8h302 = {
    id: "SK",
    displayName: "Slovakia",
    regionId: "151",
    hasTimeZones: true
}, _gi8h303 = {
    id: "SI",
    displayName: "Slovenia",
    regionId: "039",
    hasTimeZones: true
}, _gi8h304 = {
    id: "SZ",
    displayName: "Swazimaa",
    regionId: "018",
    hasTimeZones: true
}, _gi8h305 = {
    id: "TZ",
    displayName: "Tansania",
    regionId: "014",
    hasTimeZones: true
}, _gi8h306 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _gi8h307 = {
    id: "AU",
    displayName: "Australia",
    regionId: "053",
    hasTimeZones: true
}, _gi8h308 = {
    id: "FO",
    displayName: "Färsaaret",
    regionId: "154",
    hasTimeZones: true
}, _gi8h309 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _gi8h310 = {
    id: "GL",
    displayName: "Grönlanti",
    regionId: "021",
    hasTimeZones: true
}, _gi8h311 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _gi8h312 = {
    id: "ID",
    displayName: "Indonesia",
    regionId: "035",
    hasTimeZones: true
}, _gi8h313 = {
    id: "TL",
    displayName: "Itä-Timor",
    regionId: "035",
    hasTimeZones: true
}, _gi8h314 = {
    id: "CV",
    displayName: "Kap Verde",
    regionId: "011",
    hasTimeZones: true
}, _gi8h315 = {
    id: "KZ",
    displayName: "Kazakstan",
    regionId: "143",
    hasTimeZones: true
}, _gi8h316 = {
    id: "LU",
    displayName: "Luxemburg",
    regionId: "155",
    hasTimeZones: true
}, _gi8h317 = {
    id: "MK",
    displayName: "Makedonia",
    regionId: "039",
    hasTimeZones: true
}, _gi8h318 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _gi8h319 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _gi8h320 = {
    id: "PT",
    displayName: "Portugali",
    regionId: "039",
    hasTimeZones: true
}, _gi8h321 = {
    id: "TF",
    displayName: "Ranskan eteläiset alueet",
    hasTimeZones: true
}, _gi8h322 = {
    id: "SG",
    displayName: "Singapore",
    regionId: "035",
    hasTimeZones: true
}, _gi8h323 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _gi8h324 = {
    id: "VA",
    displayName: "Vatikaani",
    regionId: "039",
    hasTimeZones: true
}, _gi8h325 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _gi8h326 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _gi8h327 = {
    id: "AF",
    displayName: "Afganistan",
    regionId: "034",
    hasTimeZones: true
}, _gi8h328 = {
    id: "AX",
    displayName: "Ahvenanmaa",
    regionId: "154",
    hasTimeZones: true
}, _gi8h329 = {
    id: "NL",
    displayName: "Alankomaat",
    regionId: "155",
    hasTimeZones: true
}, _gi8h330 = {
    id: "AR",
    displayName: "Argentiina",
    regionId: "005",
    hasTimeZones: true
}, _gi8h331 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _gi8h332 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _gi8h333 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _gi8h334 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _gi8h335 = {
    id: "MV",
    displayName: "Malediivit",
    regionId: "034",
    hasTimeZones: true
}, _gi8h336 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _gi8h337 = {
    id: "MR",
    displayName: "Mauritania",
    regionId: "011",
    hasTimeZones: true
}, _gi8h338 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _gi8h339 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _gi8h340 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _gi8h341 = {
    id: "SC",
    displayName: "Seychellit",
    regionId: "014",
    hasTimeZones: true
}, _gi8h342 = {
    id: "UZ",
    displayName: "Uzbekistan",
    regionId: "143",
    hasTimeZones: true
}, _gi8h343 = {
    "2": "{0} ja {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0} ja {1}"
}, _gi8h344 = {
    one: "{0} neljännesvuosi sitten",
    other: "{0} neljännesvuotta sitten"
}, _gi8h345 = {
    "0": "tänä sunnuntaina",
    "1": "ensi sunnuntaina",
    "-1": "viime sunnuntaina"
}, _gi8h346 = {
    "0": "tänä maanantaina",
    "1": "ensi maanantaina",
    "-1": "viime maanantaina"
}, _gi8h347 = {
    "0": "tänä perjantaina",
    "1": "ensi perjantaina",
    "-1": "viime perjantaina"
}, _gi8h348 = {
    id: "AZ",
    displayName: "Azerbaidžan",
    regionId: "145",
    hasTimeZones: true
}, _gi8h349 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _gi8h350 = {
    id: "KR",
    displayName: "Etelä-Korea",
    regionId: "030",
    hasTimeZones: true
}, _gi8h351 = {
    id: "SS",
    displayName: "Etelä-Sudan",
    regionId: "014",
    hasTimeZones: true
}, _gi8h352 = {
    id: "PH",
    displayName: "Filippiinit",
    regionId: "035",
    hasTimeZones: true
}, _gi8h353 = {
    id: "HM",
    displayName: "Heard ja McDonaldinsaaret",
    hasTimeZones: false
}, _gi8h354 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _gi8h355 = {
    id: "LC",
    displayName: "Saint Lucia",
    regionId: "029",
    hasTimeZones: true
}, _gi8h356 = {
    id: "TJ",
    displayName: "Tadžikistan",
    regionId: "143",
    hasTimeZones: true
}, _gi8h357 = {
    id: "US",
    displayName: "Yhdysvallat",
    regionId: "021",
    hasTimeZones: true
}, _gi8h358 = {
    id: "UM",
    displayName: "Yhdysvaltain erillissaaret",
    hasTimeZones: true
}, _gi8h359 = {
    one: "{0} neljännesvuoden päästä",
    other: "{0} neljännesvuoden päästä"
}, _gi8h360 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _gi8h361 = {
    id: "KY",
    displayName: "Caymansaaret",
    regionId: "029",
    hasTimeZones: true
}, _gi8h362 = {
    id: "CK",
    displayName: "Cookinsaaret",
    regionId: "061",
    hasTimeZones: true
}, _gi8h363 = {
    id: "EH",
    displayName: "Länsi-Sahara",
    regionId: "015",
    hasTimeZones: true
}, _gi8h364 = {
    id: "SH",
    displayName: "Saint Helena",
    regionId: "011",
    hasTimeZones: true
}, _gi8h365 = {
    id: "MF",
    displayName: "Saint-Martin",
    regionId: "029",
    hasTimeZones: true
}, _gi8h366 = {
    id: "SA",
    displayName: "Saudi-Arabia",
    regionId: "145",
    hasTimeZones: true
}, _gi8h367 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _gi8h368 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _gi8h369 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _gi8h370 = {
    id: "BY",
    displayName: "Valko-Venäjä",
    regionId: "151",
    hasTimeZones: true
}, _gi8h371 = {
    id: "142",
    displayName: "Aasia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _gi8h372 = {
    id: "ZA",
    displayName: "Etelä-Afrikka",
    regionId: "018",
    hasTimeZones: true
}, _gi8h373 = {
    id: "GW",
    displayName: "Guinea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _gi8h374 = {
    id: "GB",
    displayName: "Iso-Britannia",
    regionId: "154",
    hasTimeZones: true
}, _gi8h375 = {
    id: "CC",
    displayName: "Kookossaaret (Keelingsaaret)",
    hasTimeZones: true
}, _gi8h376 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _gi8h377 = {
    id: "KP",
    displayName: "Pohjois-Korea",
    regionId: "030",
    hasTimeZones: true
}, _gi8h378 = {
    id: "SB",
    displayName: "Salomonsaaret",
    regionId: "054",
    hasTimeZones: true
}, _gi8h379 = {
    id: "NZ",
    displayName: "Uusi-Seelanti",
    regionId: "053",
    hasTimeZones: true
}, _gi8h380 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _gi8h381 = {
    id: "AS",
    displayName: "Amerikan Samoa",
    regionId: "061",
    hasTimeZones: true
}, _gi8h382 = {
    id: "NF",
    displayName: "Norfolkinsaari",
    regionId: "053",
    hasTimeZones: true
}, _gi8h383 = {
    id: "NC",
    displayName: "Uusi-Kaledonia",
    regionId: "054",
    hasTimeZones: true
}, _gi8h384 = {
    id: "002",
    displayName: "Afrikka",
    hasTimeZones: false,
    parentRegionId: "001"
}, _gi8h385 = {
    id: "029",
    displayName: "Karibia",
    hasTimeZones: false,
    parentRegionId: "019"
}, _gi8h386 = {
    id: "MM",
    displayName: "Myanmar (Burma)",
    regionId: "035",
    hasTimeZones: true
}, _gi8h387 = {
    id: "009",
    displayName: "Oseania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _gi8h388 = {
    id: "GF",
    displayName: "Ranskan Guayana",
    regionId: "005",
    hasTimeZones: true
}, _gi8h389 = {
    d: "E d.M.y – E d.M.y G",
    M: "E d.M.y – E d.M.y G",
    y: "E d.M.y – E d.M.y G"
}, _gi8h390 = {
    relative: _gi8h168
}, _gi8h391 = {
    relative: _gi8h169
}, _gi8h392 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _gi8h393 = {
    id: "019",
    displayName: "Amerikka",
    hasTimeZones: false,
    parentRegionId: "001"
}, _gi8h394 = {
    id: "150",
    displayName: "Eurooppa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _gi8h395 = {
    id: "FK",
    displayName: "Falklandinsaaret",
    regionId: "005",
    hasTimeZones: true
}, _gi8h396 = {
    id: "CG",
    displayName: "Kongon tasavalta",
    regionId: "017",
    hasTimeZones: true
}, _gi8h397 = {
    id: "MH",
    displayName: "Marshallinsaaret",
    regionId: "057",
    hasTimeZones: true
}, _gi8h398 = {
    id: "BL",
    displayName: "Saint-Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _gi8h399 = {
    id: "WF",
    displayName: "Wallis ja Futuna",
    regionId: "061",
    hasTimeZones: true
}, _gi8h400 = {
    d: "d.–d. MMMM y G",
    M: "d. MMMM – d. MMMM y G",
    y: "d. MMMM y – d. MMMM y G"
}, _gi8h401 = {
    "0": "tänä neljänneksenä",
    "1": "ensi neljänneksenä",
    "-1": "viime neljänneksenä"
}, _gi8h402 = {
    "0": "tänä keskiviikkona",
    "1": "ensi keskiviikkona",
    "-1": "viime keskiviikkona"
}, _gi8h403 = {
    id: "AE",
    displayName: "Arabiemiirikunnat",
    regionId: "145",
    hasTimeZones: true
}, _gi8h404 = {
    id: "030",
    displayName: "Itä-Aasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _gi8h405 = {
    id: "054",
    displayName: "Melanesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _gi8h406 = {
    id: "CI",
    displayName: "Norsunluurannikko",
    regionId: "011",
    hasTimeZones: true
}, _gi8h407 = {
    id: "PG",
    displayName: "Papua-Uusi-Guinea",
    regionId: "054",
    hasTimeZones: true
}, _gi8h408 = {
    id: "MP",
    displayName: "Pohjois-Mariaanit",
    regionId: "057",
    hasTimeZones: true
}, _gi8h409 = {
    id: "061",
    displayName: "Polynesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _gi8h410 = {
    id: "PF",
    displayName: "Ranskan Polynesia",
    regionId: "061",
    hasTimeZones: true
}, _gi8h411 = {
    id: "AG",
    displayName: "Antigua ja Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _gi8h412 = {
    id: "057",
    displayName: "Mikronesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _gi8h413 = {
    id: "TT",
    displayName: "Trinidad ja Tobago",
    regionId: "029",
    hasTimeZones: true
}, _gi8h414 = {
    "0": "tänään",
    "1": "huomenna",
    "2": "ylihuomenna",
    "-2": "toissa päivänä",
    "-1": "eilen"
}, _gi8h415 = {
    relative: _gi8h280
}, _gi8h416 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _gi8h417 = {
    id: "034",
    displayName: "Etelä-Aasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _gi8h418 = {
    id: "014",
    displayName: "Itä-Afrikka",
    hasTimeZones: false,
    parentRegionId: "002"
}, _gi8h419 = {
    id: "BQ",
    displayName: "Karibian Alankomaat",
    regionId: "029",
    hasTimeZones: true
}, _gi8h420 = {
    id: "143",
    displayName: "Keski-Aasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _gi8h421 = {
    id: "145",
    displayName: "Länsi-Aasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _gi8h422 = {
    id: "053",
    displayName: "Australaasia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _gi8h423 = {
    id: "IO",
    displayName: "Brittiläinen Intian valtameren alue",
    hasTimeZones: true
}, _gi8h424 = {
    id: "151",
    displayName: "Itä-Eurooppa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _gi8h425 = {
    id: "PS",
    displayName: "Palestiinalaisalueet",
    regionId: "145",
    hasTimeZones: true
}, _gi8h426 = {
    id: "KN",
    displayName: "Saint Kitts ja Nevis",
    regionId: "029",
    hasTimeZones: true
}, _gi8h427 = {
    id: "ST",
    displayName: "São Tomé ja Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _gi8h428 = {
    id: "017",
    displayName: "Keski-Afrikka",
    hasTimeZones: false,
    parentRegionId: "002"
}, _gi8h429 = {
    id: "011",
    displayName: "Länsi-Afrikka",
    hasTimeZones: false,
    parentRegionId: "002"
}, _gi8h430 = {
    id: "MO",
    displayName: "Macao – Kiinan e.h.a.",
    regionId: "030",
    hasTimeZones: true
}, _gi8h431 = {
    id: "GQ",
    displayName: "Päiväntasaajan Guinea",
    regionId: "017",
    hasTimeZones: true
}, _gi8h432 = {
    id: "013",
    displayName: "Väli-Amerikka",
    hasTimeZones: false,
    parentRegionId: "019"
}, _gi8h433 = {
    relative: _gi8h345
}, _gi8h434 = {
    relative: _gi8h346
}, _gi8h435 = {
    relative: _gi8h347
}, _gi8h436 = {
    id: "BA",
    displayName: "Bosnia ja Hertsegovina",
    regionId: "039",
    hasTimeZones: true
}, _gi8h437 = {
    id: "005",
    displayName: "Etelä-Amerikka",
    hasTimeZones: false,
    parentRegionId: "019"
}, _gi8h438 = {
    id: "039",
    displayName: "Etelä-Eurooppa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _gi8h439 = {
    id: "035",
    displayName: "Kaakkois-Aasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _gi8h440 = {
    id: "155",
    displayName: "Länsi-Eurooppa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _gi8h441 = {
    id: "TC",
    displayName: "Turks- ja Caicossaaret",
    regionId: "029",
    hasTimeZones: true
}, _gi8h442 = {
    "0": "tänä neljännesvuonna",
    "1": "ensi neljännesvuonna",
    "-1": "viime neljännesvuonna"
}, _gi8h443 = {
    id: "CF",
    displayName: "Keski-Afrikan tasavalta",
    regionId: "017",
    hasTimeZones: true
}, _gi8h444 = {
    id: "015",
    displayName: "Pohjois-Afrikka",
    hasTimeZones: false,
    parentRegionId: "002"
}, _gi8h445 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _gi8h446 = {
    id: "DO",
    displayName: "Dominikaaninen tasavalta",
    regionId: "029",
    hasTimeZones: true
}, _gi8h447 = {
    id: "HK",
    displayName: "Hongkong – Kiinan e.h.a.",
    regionId: "030",
    hasTimeZones: true
}, _gi8h448 = {
    id: "FM",
    displayName: "Mikronesian liittovaltio",
    regionId: "057",
    hasTimeZones: true
}, _gi8h449 = {
    id: "154",
    displayName: "Pohjois-Eurooppa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _gi8h450 = {
    id: "PM",
    displayName: "Saint-Pierre ja Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _gi8h451 = [ "sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai" ], _gi8h452 = {
    id: "SJ",
    displayName: "Huippuvuoret ja Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _gi8h453 = {
    id: "018",
    displayName: "eteläinen Afrikka",
    hasTimeZones: false,
    parentRegionId: "002"
}, _gi8h454 = {
    id: "VG",
    displayName: "Brittiläiset Neitsytsaaret",
    regionId: "029",
    hasTimeZones: true
}, _gi8h455 = {
    id: "GS",
    displayName: "Etelä-Georgia ja Eteläiset Sandwichsaaret",
    hasTimeZones: true
}, _gi8h456 = {
    id: "VI",
    displayName: "Yhdysvaltain Neitsytsaaret",
    regionId: "029",
    hasTimeZones: true
}, _gi8h457 = {
    id: "021",
    displayName: "pohjoinen Amerikka",
    hasTimeZones: false,
    parentRegionId: "019"
}, _gi8h458 = {
    relative: _gi8h402
}, _gi8h459 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _gi8h460 = {
    id: "VC",
    displayName: "Saint Vincent ja Grenadiinit",
    regionId: "029",
    hasTimeZones: true
}, _gi8h461 = {
    d: "E d. – E d. MMMM y G",
    M: "E d. MMMM – E d. MMMM y G",
    y: "E d. MMMM y – E d. MMMM y G"
}, _gi8h462 = {
    id: "CD",
    displayName: "Kongon demokraattinen tasavalta",
    regionId: "017",
    hasTimeZones: true
}, _gi8h463 = [ "tammi", "helmi", "maalis", "huhti", "touko", "kesä", "heinä", "elo", "syys", "loka", "marras", "joulu" ], _gi8h464 = [ "sunnuntaina", "maanantaina", "tiistaina", "keskiviikkona", "torstaina", "perjantaina", "lauantaina" ], _gi8h465 = {
    future: _gi8h73,
    past: _gi8h74
}, _gi8h466 = {
    future: _gi8h75,
    past: _gi8h76
}, _gi8h467 = {
    future: _gi8h77,
    past: _gi8h78
}, _gi8h468 = {
    future: _gi8h94,
    past: _gi8h95
}, _gi8h469 = {
    future: _gi8h96,
    past: _gi8h97
}, _gi8h470 = {
    future: _gi8h98,
    past: _gi8h99
}, _gi8h471 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _gi8h472 = {
    future: _gi8h101,
    past: _gi8h102
}, _gi8h473 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _gi8h474 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _gi8h475 = {
    future: _gi8h106,
    past: _gi8h107
}, _gi8h476 = {
    future: _gi8h116,
    past: _gi8h110
}, _gi8h477 = {
    future: _gi8h118,
    past: _gi8h112
}, _gi8h478 = {
    future: _gi8h119,
    past: _gi8h113
}, _gi8h479 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _gi8h480 = {
    future: _gi8h117,
    past: _gi8h122
}, _gi8h481 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _gi8h482 = {
    midnight: "ky.",
    am: "ap.",
    noon: "kp.",
    pm: "ip.",
    morning1: "aamu",
    morning2: "ap.",
    afternoon1: "ip.",
    evening1: "ilta",
    night1: "yö"
}, _gi8h483 = {
    future: _gi8h139,
    past: _gi8h137
}, _gi8h484 = {
    future: _gi8h138,
    past: _gi8h142
}, _gi8h485 = {
    future: _gi8h145,
    past: _gi8h141
}, _gi8h486 = {
    displayName: "t",
    relativeTime: _gi8h466
}, _gi8h487 = [ "tammikuu", "helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kesäkuu", "heinäkuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu" ], _gi8h488 = {
    midnight: "keskiyö",
    am: "ap.",
    noon: "keskip.",
    pm: "ip.",
    morning1: "aamu",
    morning2: "aamup.",
    afternoon1: "iltap.",
    evening1: "ilta",
    night1: "yö"
}, _gi8h489 = {
    future: _gi8h196,
    past: _gi8h144
}, _gi8h490 = {
    displayName: "min",
    relativeTime: _gi8h472
}, _gi8h491 = {
    midnight: "keskiyö",
    am: "ap.",
    noon: "keskipäivä",
    pm: "ip.",
    morning1: "aamu",
    morning2: "aamupäivä",
    afternoon1: "iltapäivä",
    evening1: "ilta",
    night1: "yö"
}, _gi8h492 = {
    displayName: "s",
    relative: [ "nyt" ],
    relativeTime: _gi8h467
}, _gi8h493 = {
    abbreviated: _gi8h100,
    narrow: [ "1", "2", "3", "4" ],
    wide: _gi8h156
}, _gi8h494 = {
    displayName: "tunti",
    relativeTime: _gi8h478
}, _gi8h495 = {
    future: _gi8h359,
    past: _gi8h344
}, _gi8h496 = [ "tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kesäkuuta", "heinäkuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta" ], _gi8h497 = [ "muharram", "safar", "rabi’ al-awwal", "rabi’ al-akhir", "džumada-l-ula", "džumada-l-akhira", "radžab", "ša’ban", "ramadan", "šawwal", "dhu-l-qa’da", "dhu-l-hiddža" ], _gi8h498 = {
    displayName: "minuutti",
    relativeTime: _gi8h484
}, _gi8h499 = {
    midnight: "keskiyöllä",
    am: "ap.",
    noon: "keskipäivällä",
    pm: "ip.",
    morning1: "aamulla",
    morning2: "aamupäivällä",
    afternoon1: "iltapäivällä",
    evening1: "illalla",
    night1: "yöllä"
}, _gi8h500 = [ "tišríkuuta", "hešvánkuuta", "kislévkuuta", "tevétkuuta", "ševátkuuta", "adárkuuta I", "adárkuuta", "nisánkuuta", "ijjárkuuta", "sivánkuuta", "tammúzkuuta", "abkuuta", "elúlkuuta" ], _gi8h501 = {
    decimal: ",",
    group: " ",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "−",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "epäluku",
    timeSeparator: "."
}, _gi8h502 = {
    displayName: "v",
    relative: _gi8h58,
    relativeTime: _gi8h465
}, _gi8h503 = {
    displayName: "sekunti",
    relative: [ "nyt" ],
    relativeTime: _gi8h483
}, _gi8h504 = {
    displayName: "kk",
    relative: _gi8h87,
    relativeTime: _gi8h468
}, _gi8h505 = {
    displayName: "vk",
    relative: _gi8h88,
    relativeTime: _gi8h469
}, _gi8h506 = {
    symbols: _gi8h501
}, _gi8h507 = {
    format: _gi8h380,
    numeric: _gi8h2,
    standAlone: _gi8h380
}, _gi8h508 = {
    displayName: "pv",
    relative: _gi8h232,
    relativeTime: _gi8h470
}, _gi8h509 = {
    displayName: "nelj.",
    relative: _gi8h111,
    relativeTime: _gi8h475
}, _gi8h510 = {
    displayName: "vuosi",
    relative: _gi8h133,
    relativeTime: _gi8h476
}, _gi8h511 = {
    symbols: _gi8h501,
    digits: "renderSpelloutCardinal"
}, _gi8h512 = {
    abbreviated: _gi8h43,
    narrow: _gi8h22,
    wide: _gi8h451,
    "short": _gi8h43
}, _gi8h513 = {
    displayName: "viikko",
    relative: _gi8h154,
    relativeTime: _gi8h480
}, _gi8h514 = {
    abbreviated: _gi8h392,
    narrow: _gi8h130,
    wide: _gi8h392
}, _gi8h515 = {
    symbols: _gi8h501,
    digits: "renderSpelloutCardinalFinancial"
}, _gi8h516 = {
    displayName: "kuukausi",
    relative: _gi8h136,
    relativeTime: _gi8h485
}, _gi8h517 = {
    abbreviated: _gi8h43,
    narrow: _gi8h22,
    wide: _gi8h464,
    "short": _gi8h43
}, _gi8h518 = {
    displayName: "päivä",
    relative: _gi8h414,
    relativeTime: _gi8h477
}, _gi8h519 = {
    abbreviated: _gi8h416,
    narrow: _gi8h416,
    wide: _gi8h416
}, _gi8h520 = {
    displayName: "neljännes",
    relative: _gi8h401,
    relativeTime: _gi8h489
}, _gi8h521 = {
    format: _gi8h519
}, _gi8h522 = {
    displayName: "neljännesvuosi",
    relative: _gi8h442,
    relativeTime: _gi8h495
}, _gi8h523 = {
    fullDate: "cccc d.M.y",
    longDate: "d.M.y",
    mediumDate: "d.M.y",
    shortDate: "d.M.y",
    fullTime: "H.mm.ss zzzz",
    longTime: "H.mm.ss z",
    mediumTime: "H.mm.ss",
    shortTime: "H.mm",
    shortDateTime: "d.M.y H.mm",
    mediumDateTime: "d.M.y H.mm.ss",
    longDateTime: "d.M.y H.mm.ss z",
    fullDateTime: "cccc d.M.y H.mm.ss zzzz"
}, _gi8h524 = {
    abbreviated: _gi8h473,
    narrow: _gi8h130,
    wide: _gi8h473
}, _gi8h525 = {
    abbreviated: _gi8h463,
    narrow: _gi8h105,
    wide: _gi8h487
}, _gi8h526 = {
    abbreviated: _gi8h474,
    narrow: _gi8h147,
    wide: _gi8h474
}, _gi8h527 = {
    abbreviated: _gi8h479,
    narrow: _gi8h147,
    wide: _gi8h479
}, _gi8h528 = {
    abbreviated: _gi8h481,
    narrow: _gi8h130,
    wide: _gi8h481
}, _gi8h529 = {
    format: _gi8h493,
    standAlone: _gi8h493
}, _gi8h530 = {
    abbreviated: _gi8h471,
    narrow: _gi8h130,
    wide: _gi8h497
}, _gi8h531 = {
    fullDate: "cccc d. MMMM y G",
    longDate: "d. MMMM y G",
    mediumDate: "d.M.y G",
    shortDate: "d.M.y GGGGG",
    fullTime: "H.mm.ss zzzz",
    longTime: "H.mm.ss z",
    mediumTime: "H.mm.ss",
    shortTime: "H.mm",
    shortDateTime: "d.M.y GGGGG H.mm",
    mediumDateTime: "d.M.y G 'klo' H.mm.ss",
    longDateTime: "d. MMMM y G 'klo' H.mm.ss z",
    fullDateTime: "cccc d. MMMM y G 'klo' H.mm.ss zzzz"
}, _gi8h532 = {
    abbreviated: _gi8h496,
    narrow: _gi8h105,
    wide: _gi8h496
}, _gi8h533 = {
    abbreviated: _gi8h488,
    narrow: _gi8h482,
    wide: _gi8h491
}, _gi8h534 = {
    abbreviated: _gi8h488,
    narrow: _gi8h482,
    wide: _gi8h499
}, _gi8h535 = {
    format: _gi8h514,
    standAlone: _gi8h514
}, _gi8h536 = {
    format: _gi8h517,
    standAlone: _gi8h512
}, _gi8h537 = {
    "1000": _gi8h19,
    "10000": _gi8h26,
    "100000": _gi8h32,
    "1000000": _gi8h39,
    "10000000": _gi8h46,
    "100000000": _gi8h60,
    "1000000000": _gi8h33,
    "10000000000": _gi8h40,
    "100000000000": _gi8h47,
    "1000000000000": _gi8h41,
    "10000000000000": _gi8h48,
    "100000000000000": _gi8h61
}, _gi8h538 = {
    H: "H",
    hm: "h.mm a",
    Hm: "H.mm",
    hms: "h.mm.ss a",
    Hms: "H.mm.ss",
    Md: "d.M.",
    MEd: "E d.M.",
    MMMd: "d.M.",
    MMMEd: "E d.M.",
    ms: "mm.ss",
    y: "y",
    yyyy: "y",
    yyyyMd: "d.M.y",
    yyyyMEd: "E d.M.y",
    yyyyMMMd: "d.M.y",
    yyyyMMMEd: "E d.M.y",
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    M: "L",
    MMM: "LLL",
    MMMMd: "MMMM d",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    yMd: "r-MM-dd",
    yyyyM: "r-MM",
    yyyyMMM: "r(U) MMM",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _gi8h539 = {
    "1000": _gi8h34,
    "10000": _gi8h42,
    "100000": _gi8h49,
    "1000000": _gi8h62,
    "10000000": _gi8h70,
    "100000000": _gi8h92,
    "1000000000": _gi8h50,
    "10000000000": _gi8h63,
    "100000000000": _gi8h71,
    "1000000000000": _gi8h64,
    "10000000000000": _gi8h72,
    "100000000000000": _gi8h93
}, _gi8h540 = {
    "1000": _gi8h31,
    "10000": _gi8h45,
    "100000": _gi8h59,
    "1000000": _gi8h54,
    "10000000": _gi8h67,
    "100000000": _gi8h89,
    "1000000000": _gi8h55,
    "10000000000": _gi8h68,
    "100000000000": _gi8h90,
    "1000000000000": _gi8h56,
    "10000000000000": _gi8h69,
    "100000000000000": _gi8h91
}, _gi8h541 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _gi8h542 = {
    d: "d",
    E: "ccc",
    Ed: "E d.",
    Gy: "y G",
    GyMMM: "LLL y G",
    GyMMMd: "d. MMM y G",
    GyMMMEd: "E d. MMM y G",
    h: "h a",
    H: "H",
    hm: "h.mm a",
    Hm: "H.mm",
    hms: "h.mm.ss a",
    Hms: "H.mm.ss",
    M: "L",
    Md: "d.M.",
    MEd: "E d.M.",
    MMM: "LLL",
    MMMd: "d. MMM",
    MMMEd: "ccc d. MMM",
    MMMMd: "d. MMMM",
    ms: "mm.ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "L.y G",
    yyyyMd: "d.M.y G",
    yyyyMEd: "E d.M.y G",
    yyyyMM: "M.y G",
    yyyyMMM: "LLL y G",
    yyyyMMMd: "d. MMM y G",
    yyyyMMMEd: "E d. MMM y G",
    yyyyMMMM: "LLLL y G",
    yyyyMMMMccccd: "cccc d. MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _gi8h543 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _gi8h544 = {
    format: _gi8h530,
    standAlone: _gi8h530
}, _gi8h545 = {
    format: _gi8h532,
    standAlone: _gi8h525
}, _gi8h546 = {
    basic: _gi8h523,
    cldr: _gi8h538
}, _gi8h547 = {
    format: _gi8h534,
    standAlone: _gi8h533
}, _gi8h548 = {
    basic: _gi8h531,
    cldr: _gi8h542
}, _gi8h549 = {
    d: {
        d: "d–d"
    },
    h: _gi8h7,
    H: {
        H: "HH–HH"
    },
    hm: _gi8h134,
    Hm: _gi8h36,
    hmv: _gi8h151,
    Hmv: _gi8h51,
    hv: _gi8h21,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _gi8h52,
    MEd: _gi8h108,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _gi8h28,
    MMMEd: _gi8h109,
    y: {
        y: "U–U"
    },
    yM: _gi8h37,
    yMd: _gi8h326,
    yMEd: _gi8h459,
    yMMM: _gi8h38,
    yMMMd: _gi8h146,
    yMMMEd: _gi8h445,
    yMMMM: _gi8h53
}, _gi8h550 = {
    d: {
        d: "d.–d."
    },
    h: _gi8h7,
    H: {
        H: "H–H"
    },
    hm: _gi8h132,
    Hm: _gi8h20,
    hmv: _gi8h150,
    Hmv: _gi8h35,
    hv: _gi8h21,
    Hv: {
        H: "H–H v"
    },
    M: {
        M: "L.–L."
    },
    Md: _gi8h12,
    MEd: _gi8h65,
    MMM: {
        M: "LLL–LLLL"
    },
    MMMd: _gi8h57,
    MMMEd: _gi8h104,
    MMMM: {
        M: "LLL–LLLL"
    },
    y: {
        y: "y–y G"
    },
    yM: _gi8h66,
    yMd: _gi8h115,
    yMEd: _gi8h389,
    yMMM: _gi8h66,
    yMMMd: _gi8h400,
    yMMMEd: _gi8h461,
    yMMMM: _gi8h66
}, _gi8h551 = {
    "long": _gi8h540,
    "short": _gi8h537,
    "default": "#,##0.###"
}, _gi8h552 = {
    beforeCurrency: _gi8h541,
    afterCurrency: _gi8h541
}, _gi8h553 = {
    "short": _gi8h539,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _gi8h552
}, _gi8h554 = {
    abbreviated: _gi8h543,
    narrow: _gi8h543,
    wide: _gi8h543
}, _gi8h555 = {
    format: _gi8h554
}, _gi8h556 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _gi8h551,
    currency: _gi8h553,
    percent: _gi8h1
}, _gi8h557 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _gi8h558 = {
    dayParts: _gi8h521,
    days: _gi8h555,
    months: _gi8h555,
    years: _gi8h555,
    zodiacs: _gi8h521
}, _gi8h559 = {
    era: _gi8h8,
    year: _gi8h510,
    "year-short": _gi8h502,
    "year-narrow": _gi8h502,
    quarter: _gi8h522,
    "quarter-short": _gi8h520,
    "quarter-narrow": _gi8h509,
    month: _gi8h516,
    "month-short": _gi8h504,
    "month-narrow": _gi8h504,
    week: _gi8h513,
    "week-short": _gi8h505,
    "week-narrow": _gi8h505,
    day: _gi8h518,
    "day-short": _gi8h508,
    "day-narrow": _gi8h508,
    weekday: _gi8h13,
    dayperiod: _gi8h27,
    hour: _gi8h494,
    "hour-short": _gi8h486,
    "hour-narrow": _gi8h486,
    minute: _gi8h498,
    "minute-short": _gi8h490,
    "minute-narrow": _gi8h490,
    second: _gi8h503,
    "second-short": _gi8h492,
    "second-narrow": _gi8h492,
    zone: _gi8h14,
    sun: _gi8h433,
    "sun-short": _gi8h123,
    "sun-narrow": _gi8h123,
    mon: _gi8h434,
    "mon-short": _gi8h124,
    "mon-narrow": _gi8h124,
    tue: _gi8h390,
    "tue-short": _gi8h125,
    "tue-narrow": _gi8h125,
    wed: _gi8h458,
    "wed-short": _gi8h126,
    "wed-narrow": _gi8h126,
    thu: _gi8h391,
    "thu-short": _gi8h127,
    "thu-narrow": _gi8h127,
    fri: _gi8h435,
    "fri-short": _gi8h128,
    "fri-narrow": _gi8h128,
    sat: _gi8h415,
    "sat-short": _gi8h129,
    "sat-narrow": _gi8h129
}, _gi8h560 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _gi8h559
}, _gi8h561 = {
    dateFormats: _gi8h548,
    datePartsOrder: "dmy",
    dateIntervalFormats: _gi8h550,
    dateIntervalFallbackFormat: "{0}–{1}",
    dayNames: _gi8h536,
    dayPeriods: _gi8h547,
    monthNames: _gi8h544,
    eraNames: _gi8h29,
    quarterNames: _gi8h529,
    fields: _gi8h559
}, _gi8h562 = {
    dateFormats: _gi8h546,
    datePartsOrder: "dmy",
    dateIntervalFormats: _gi8h549,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _gi8h536,
    dayPeriods: _gi8h547,
    cyclicNames: _gi8h558,
    monthNames: _gi8h535,
    monthPatterns: _gi8h507,
    quarterNames: _gi8h529,
    fields: _gi8h559
};

inter.id = "fi";

inter.delimiters = {
    quotationStart: "”",
    quotationEnd: "”",
    alternateQuotationStart: "’",
    alternateQuotationEnd: "’"
};

inter.listPatterns = {
    "default": _gi8h343,
    unit: _gi8h343,
    unitNarrow: {
        "2": "{0} {1}",
        start: "{0} {1}",
        middle: "{0} {1}",
        end: "{0} {1}"
    },
    unitShort: P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} G-voima",
                other: "{0} G-voimaa"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} metri per sekunti toiseen",
                other: "{0} metriä per sekunti toiseen"
            },
            angleRevolution: {
                one: "{0} kierros",
                other: "{0} kierrosta"
            },
            angleRadian: {
                one: "{0} radiaani",
                other: "{0} radiaania"
            },
            angleDegree: {
                one: "{0} aste",
                other: "{0} astetta"
            },
            angleArcMinute: {
                one: "{0} kulmaminuutti",
                other: "{0} kulmaminuuttia"
            },
            angleArcSecond: {
                one: "{0} kulmasekunti",
                other: "{0} kulmasekuntia"
            },
            areaSquareKilometer: {
                one: "{0} neliökilometri",
                other: "{0} neliökilometriä"
            },
            areaHectare: {
                one: "{0} hehtaari",
                other: "{0} hehtaaria"
            },
            areaSquareMeter: {
                one: "{0} neliömetri",
                other: "{0} neliömetriä"
            },
            areaSquareCentimeter: {
                one: "{0} neliösenttimetri",
                other: "{0} neliösenttimetriä"
            },
            areaSquareMile: {
                one: "{0} neliömaili",
                other: "{0} neliömailia"
            },
            areaAcre: {
                one: "{0} eekkeri",
                other: "{0} eekkeriä"
            },
            areaSquareYard: {
                one: "{0} neliöjaardi",
                other: "{0} neliöjaardia"
            },
            areaSquareFoot: {
                one: "{0} neliöjalka",
                other: "{0} neliöjalkaa"
            },
            areaSquareInch: {
                one: "{0} neliötuuma",
                other: "{0} neliötuumaa"
            },
            concentrKarat: _gi8h86,
            consumptionLiterPerKilometer: {
                one: "{0} litra per kilometri",
                other: "{0} litraa per kilometri"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} litra per 100 km",
                other: "{0} litraa per 100 km"
            },
            consumptionMilePerGallon: {
                one: "{0} maili per gallona",
                other: "{0} mailia per gallona"
            },
            digitalTerabyte: {
                one: "{0} teratavu",
                other: "{0} teratavua"
            },
            digitalTerabit: {
                one: "{0} terabitti",
                other: "{0} terabittiä"
            },
            digitalGigabyte: {
                one: "{0} gigatavu",
                other: "{0} gigatavua"
            },
            digitalGigabit: {
                one: "{0} gigabitti",
                other: "{0} gigabittiä"
            },
            digitalMegabyte: {
                one: "{0} megatavu",
                other: "{0} megatavua"
            },
            digitalMegabit: {
                one: "{0} megabitti",
                other: "{0} megabittiä"
            },
            digitalKilobyte: {
                one: "{0} kilotavu",
                other: "{0} kilotavua"
            },
            digitalKilobit: {
                one: "{0} kilobitti",
                other: "{0} kilobittiä"
            },
            digitalByte: {
                one: "{0} tavu",
                other: "{0} tavua"
            },
            digitalBit: {
                one: "{0} bitti",
                other: "{0} bittiä"
            },
            durationCentury: {
                one: "{0} vuosisata",
                other: "{0} vuosisataa"
            },
            durationYear: {
                one: "{0} vuosi",
                other: "{0} vuotta"
            },
            durationMonth: {
                one: "{0} kuukausi",
                other: "{0} kuukautta"
            },
            durationWeek: {
                one: "{0} viikko",
                other: "{0} viikkoa"
            },
            durationDay: {
                one: "{0} päivä",
                other: "{0} päivää"
            },
            durationHour: {
                one: "{0} tunti",
                other: "{0} tuntia"
            },
            durationMinute: {
                one: "{0} minuutti",
                other: "{0} minuuttia"
            },
            durationSecond: {
                one: "{0} sekunti",
                other: "{0} sekuntia"
            },
            durationMillisecond: {
                one: "{0} millisekunti",
                other: "{0} millisekuntia"
            },
            durationMicrosecond: {
                one: "{0} mikrosekunti",
                other: "{0} mikrosekuntia"
            },
            durationNanosecond: {
                one: "{0} nanosekunti",
                other: "{0} nanosekuntia"
            },
            electricAmpere: {
                one: "{0} ampeeri",
                other: "{0} ampeeria"
            },
            electricMilliampere: {
                one: "{0} milliampeeri",
                other: "{0} milliampeeria"
            },
            electricOhm: {
                one: "{0} ohmi",
                other: "{0} ohmia"
            },
            electricVolt: {
                one: "{0} voltti",
                other: "{0} volttia"
            },
            energyKilocalorie: _gi8h103,
            energyCalorie: {
                one: "{0} kalori",
                other: "{0} kaloria"
            },
            energyFoodcalorie: _gi8h103,
            energyKilojoule: {
                one: "{0} kilojoule",
                other: "{0} kilojoulea"
            },
            energyJoule: {
                one: "{0} joule",
                other: "{0} joulea"
            },
            energyKilowattHour: {
                one: "{0} kilowattitunti",
                other: "{0} kilowattituntia"
            },
            frequencyGigahertz: {
                one: "{0} gigahertsi",
                other: "{0} gigahertsiä"
            },
            frequencyMegahertz: {
                one: "{0} megahertsi",
                other: "{0} megahertsiä"
            },
            frequencyKilohertz: {
                one: "{0} kilohertsi",
                other: "{0} kilohertsiä"
            },
            frequencyHertz: {
                one: "{0} hertsi",
                other: "{0} hertsiä"
            },
            lengthKilometer: {
                one: "{0} kilometri",
                other: "{0} kilometriä"
            },
            lengthMeter: {
                one: "{0} metri",
                other: "{0} metriä"
            },
            lengthDecimeter: {
                one: "{0} desimetri",
                other: "{0} desimetriä"
            },
            lengthCentimeter: {
                one: "{0} senttimetri",
                other: "{0} senttimetriä"
            },
            lengthMillimeter: {
                one: "{0} millimetri",
                other: "{0} millimetriä"
            },
            lengthMicrometer: {
                one: "{0} mikrometri",
                other: "{0} mikrometriä"
            },
            lengthNanometer: {
                one: "{0} nanometri",
                other: "{0} nanometriä"
            },
            lengthPicometer: {
                one: "{0} pikometri",
                other: "{0} pikometriä"
            },
            lengthMile: {
                one: "{0} maili",
                other: "{0} mailia"
            },
            lengthYard: {
                one: "{0} jaardi",
                other: "{0} jaardia"
            },
            lengthFoot: {
                one: "{0} jalka",
                other: "{0} jalkaa"
            },
            lengthInch: {
                one: "{0} tuuma",
                other: "{0} tuumaa"
            },
            lengthParsec: {
                one: "{0} parsek",
                other: "{0} parsekia"
            },
            lengthLightYear: {
                one: "{0} valovuosi",
                other: "{0} valovuotta"
            },
            lengthAstronomicalUnit: {
                one: "{0} astronominen yksikkö",
                other: "{0} astronomista yksikköä"
            },
            lengthFurlong: {
                one: "{0} furlong",
                other: "{0} furlongia"
            },
            lengthFathom: {
                one: "syli",
                other: "{0} syltä"
            },
            lengthNauticalMile: {
                one: "{0} meripeninkulma",
                other: "{0} meripeninkulmaa"
            },
            lengthMileScandinavian: {
                one: "{0} peninkulma",
                other: "{0} peninkulmaa"
            },
            lightLux: {
                one: "{0} luksi",
                other: "{0} luksia"
            },
            massMetricTon: {
                one: "{0} tonni",
                other: "{0} tonnia"
            },
            massKilogram: {
                one: "{0} kilogramma",
                other: "{0} kilogrammaa"
            },
            massGram: {
                one: "{0} gramma",
                other: "{0} grammaa"
            },
            massMilligram: {
                one: "{0} milligramma",
                other: "{0} milligrammaa"
            },
            massMicrogram: {
                one: "{0} mikrogramma",
                other: "{0} mikrogrammaa"
            },
            massTon: {
                one: "{0} US-tonni",
                other: "{0} US-tonnia"
            },
            massStone: {
                one: "{0} stone",
                other: "{0} stonea"
            },
            massPound: {
                one: "{0} pauna",
                other: "{0} paunaa"
            },
            massOunce: {
                one: "{0} unssi",
                other: "{0} unssia"
            },
            massOunceTroy: {
                one: "{0} troy-unssi",
                other: "{0} troy-unssia"
            },
            massCarat: _gi8h86,
            powerGigawatt: {
                one: "{0} gigawatti",
                other: "{0} gigawattia"
            },
            powerMegawatt: {
                one: "{0} megawatti",
                other: "{0} megawattia"
            },
            powerKilowatt: {
                one: "{0} kilowatti",
                other: "{0} kilowattia"
            },
            powerWatt: {
                one: "{0} watti",
                other: "{0} wattia"
            },
            powerMilliwatt: {
                one: "{0} milliwatti",
                other: "{0} milliwattia"
            },
            powerHorsepower: {
                one: "{0} hevosvoima",
                other: "{0} hevosvoimaa"
            },
            pressureHectopascal: {
                one: "{0} hehtopascal",
                other: "{0} hehtopascalia"
            },
            pressureMillimeterOfMercury: {
                one: "{0} millimetri elohopeaa",
                other: "{0} millimetriä elohopeaa"
            },
            pressurePoundPerSquareInch: {
                one: "{0} pauna neliötuumaa kohti",
                other: "{0} paunaa neliötuumaa kohti"
            },
            pressureInchHg: {
                one: "{0} tuuma elohopeaa",
                other: "{0} tuumaa elohopeaa"
            },
            pressureMillibar: {
                one: "{0} millibaari",
                other: "{0} millibaaria"
            },
            speedKilometerPerHour: {
                one: "{0} kilometri tunnissa",
                other: "{0} kilometriä tunnissa"
            },
            speedMeterPerSecond: {
                one: "{0} metri sekunnissa",
                other: "{0} metriä sekunnissa"
            },
            speedMilePerHour: {
                one: "{0} maili tunnissa",
                other: "{0} mailia tunnissa"
            },
            speedKnot: {
                one: "{0} solmu",
                other: "{0} solmua"
            },
            temperatureGeneric: _gi8h3,
            temperatureCelsius: {
                one: "{0} celsiusaste",
                other: "{0} celsiusastetta"
            },
            temperatureFahrenheit: {
                one: "{0} fahrenheitaste",
                other: "{0} fahrenheitastetta"
            },
            temperatureKelvin: {
                one: "{0} kelvin",
                other: "{0} kelviniä"
            },
            volumeCubicKilometer: {
                one: "{0} kuutiokilometri",
                other: "{0} kuutiokilometriä"
            },
            volumeCubicMeter: {
                one: "{0} kuutiometri",
                other: "{0} kuutiometriä"
            },
            volumeCubicCentimeter: {
                one: "{0} kuutiosenttimetri",
                other: "{0} kuutiosenttimetriä"
            },
            volumeCubicMile: {
                one: "{0} kuutiomaili",
                other: "{0} kuutiomailia"
            },
            volumeCubicYard: {
                one: "{0} kuutiojaardi",
                other: "{0} kuutiojaardia"
            },
            volumeCubicFoot: {
                one: "{0} kuutiojalka",
                other: "{0} kuutiojalkaa"
            },
            volumeCubicInch: {
                one: "{0} kuutiotuuma",
                other: "{0} kuutiotuumaa"
            },
            volumeMegaliter: {
                one: "{0} megalitra",
                other: "{0} megalitraa"
            },
            volumeHectoliter: {
                one: "{0} hehtolitra",
                other: "{0} hehtolitraa"
            },
            volumeLiter: {
                one: "{0} litra",
                other: "{0} litraa"
            },
            volumeDeciliter: {
                one: "{0} desilitra",
                other: "{0} desilitraa"
            },
            volumeCentiliter: {
                one: "{0} senttilitra",
                other: "{0} senttilitraa"
            },
            volumeMilliliter: {
                one: "{0} millilitra",
                other: "{0} millilitraa"
            },
            volumePintMetric: {
                one: "{0} tuoppi",
                other: "{0} tuoppia"
            },
            volumeCupMetric: {
                one: "{0} teekuppi",
                other: "{0} teekuppia"
            },
            volumeAcreFoot: {
                one: "{0} eekkerijalka",
                other: "{0} eekkerijalkaa"
            },
            volumeBushel: {
                one: "{0} busheli",
                other: "{0} bushelia"
            },
            volumeGallon: {
                one: "{0} gallona",
                other: "{0} gallonaa"
            },
            volumeQuart: {
                one: "{0} neljännesgallona",
                other: "{0} neljännesgallonaa"
            },
            volumePint: {
                one: "{0} pint",
                other: "{0} pinttiä"
            },
            volumeCup: {
                one: "{0} kuppi",
                other: "{0} kuppia"
            },
            volumeFluidOunce: {
                one: "{0} nesteunssi",
                other: "{0} nesteunssia"
            },
            volumeTablespoon: {
                one: "{0} ruokalusikka",
                other: "{0} ruokalusikkaa"
            },
            volumeTeaspoon: {
                one: "{0} teelusikka",
                other: "{0} teelusikkaa"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                one: "{0} G",
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: {
                one: "{0} rev",
                other: "{0} rev"
            },
            angleRadian: {
                one: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: _gi8h3,
            angleArcMinute: _gi8h4,
            angleArcSecond: _gi8h5,
            areaSquareKilometer: {
                one: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                one: "{0} ha",
                other: "{0} ha"
            },
            areaSquareMeter: {
                one: "{0} m²",
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: {
                one: "{0} mi²",
                other: "{0} mi²"
            },
            areaAcre: {
                one: "{0} ac",
                other: "{0} ac"
            },
            areaSquareYard: {
                one: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: {
                one: "{0} ft²",
                other: "{0} ft²"
            },
            areaSquareInch: {
                one: "{0} in²",
                other: "{0} in²"
            },
            concentrKarat: _gi8h15,
            consumptionLiterPerKilometer: {
                one: "{0} l/km",
                other: "{0} l/km"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} l/100 km",
                other: "{0} l/100 km"
            },
            consumptionMilePerGallon: {
                one: "{0} mpg",
                other: "{0} mpg"
            },
            digitalTerabyte: {
                one: "{0} Tt",
                other: "{0} Tt"
            },
            digitalTerabit: {
                one: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} Gt",
                other: "{0} Gt"
            },
            digitalGigabit: {
                one: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: {
                one: "{0} Mt",
                other: "{0} Mt"
            },
            digitalMegabit: {
                one: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: {
                one: "{0} kt",
                other: "{0} kt"
            },
            digitalKilobit: {
                one: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: _gi8h10,
            digitalBit: {
                one: "{0} b",
                other: "{0} b"
            },
            durationCentury: _gi8h16,
            durationYear: {
                one: "{0} v",
                other: "{0} v"
            },
            durationMonth: {
                one: "{0} kk",
                other: "{0} kk"
            },
            durationWeek: {
                one: "{0} vk",
                other: "{0} vk"
            },
            durationDay: {
                one: "{0} pv",
                other: "{0} pv"
            },
            durationHour: _gi8h10,
            durationMinute: {
                one: "{0} min",
                other: "{0} min"
            },
            durationSecond: {
                one: "{0} s",
                other: "{0} s"
            },
            durationMillisecond: {
                one: "{0} ms",
                other: "{0} ms"
            },
            durationMicrosecond: {
                one: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: _gi8h30,
            energyCalorie: {
                one: "{0} cal",
                other: "{0} cal"
            },
            energyFoodcalorie: _gi8h30,
            energyKilojoule: {
                one: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: {
                one: "{0} km",
                other: "{0} km"
            },
            lengthMeter: {
                one: "{0} m",
                other: "{0} m"
            },
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: {
                one: "{0} cm",
                other: "{0} cm"
            },
            lengthMillimeter: {
                one: "{0} mm",
                other: "{0} mm"
            },
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: {
                one: "{0} pm",
                other: "{0} pm"
            },
            lengthMile: {
                one: "{0} mi",
                other: "{0} mi"
            },
            lengthYard: {
                one: "{0} yd",
                other: "{0} yd"
            },
            lengthFoot: {
                one: "{0} ft",
                other: "{0} ft"
            },
            lengthInch: {
                one: "{0} in",
                other: "{0} in"
            },
            lengthParsec: {
                one: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: {
                one: "{0} vv",
                other: "{0} vv"
            },
            lengthAstronomicalUnit: {
                one: "{0} au",
                other: "{0} au"
            },
            lengthFurlong: {
                one: "{0} fur",
                other: "{0} fur"
            },
            lengthFathom: {
                one: "{0} fm",
                other: "{0} fm"
            },
            lengthNauticalMile: {
                one: "{0} mpk",
                other: "{0} mpk"
            },
            lengthMileScandinavian: _gi8h23,
            lightLux: {
                one: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: _gi8h10,
            massKilogram: {
                one: "{0} kg",
                other: "{0} kg"
            },
            massGram: {
                one: "{0} g",
                other: "{0} g"
            },
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} µg",
                other: "{0} µg"
            },
            massTon: {
                one: "{0} US-tn",
                other: "{0} US-tn"
            },
            massStone: {
                one: "{0} st",
                other: "{0} st"
            },
            massPound: {
                one: "{0} lb",
                other: "{0} lb"
            },
            massOunce: {
                one: "{0} oz",
                other: "{0} oz"
            },
            massOunceTroy: {
                one: "{0} oz t",
                other: "{0} oz t"
            },
            massCarat: _gi8h15,
            powerGigawatt: {
                one: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: {
                one: "{0} kW",
                other: "{0} kW"
            },
            powerWatt: {
                one: "{0} W",
                other: "{0} W"
            },
            powerMilliwatt: {
                one: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: {
                one: "{0} hv",
                other: "{0} hv"
            },
            pressureHectopascal: {
                one: "{0} hPa",
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                one: "{0} mm Hg",
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0} psi",
                other: "{0} psi"
            },
            pressureInchHg: {
                one: "{0} inHg",
                other: "{0} inHg"
            },
            pressureMillibar: {
                one: "{0} mbar",
                other: "{0} mbar"
            },
            speedKilometerPerHour: {
                one: "{0} km/h",
                other: "{0} km/h"
            },
            speedMeterPerSecond: {
                one: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: {
                one: "{0} mi/h",
                other: "{0} mi/h"
            },
            speedKnot: _gi8h17,
            temperatureGeneric: _gi8h3,
            temperatureCelsius: {
                one: "{0} °C",
                other: "{0} °C"
            },
            temperatureFahrenheit: {
                one: "{0} °F",
                other: "{0} °F"
            },
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: {
                one: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMeter: {
                one: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: {
                one: "{0} mi³",
                other: "{0} mi³"
            },
            volumeCubicYard: {
                one: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: {
                one: "{0} in³",
                other: "{0} in³"
            },
            volumeMegaliter: {
                one: "{0} Ml",
                other: "{0} Ml"
            },
            volumeHectoliter: {
                one: "{0} hl",
                other: "{0} hl"
            },
            volumeLiter: {
                one: "{0} l",
                other: "{0} l"
            },
            volumeDeciliter: {
                one: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} cl",
                other: "{0} cl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                other: "{0} ml"
            },
            volumePintMetric: _gi8h18,
            volumeCupMetric: _gi8h24,
            volumeAcreFoot: {
                one: "{0} ac ft",
                other: "{0} ac ft"
            },
            volumeBushel: {
                one: "{0} bu",
                other: "{0} bu"
            },
            volumeGallon: {
                one: "{0} gal",
                other: "{0} gal"
            },
            volumeQuart: {
                one: "{0} qt",
                other: "{0} qt"
            },
            volumePint: {
                one: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: {
                one: "{0} kp",
                other: "{0} kp"
            },
            volumeFluidOunce: {
                one: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} rkl",
                other: "{0} rkl"
            },
            volumeTeaspoon: {
                one: "{0} tl",
                other: "{0} tl"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                one: "{0}G",
                other: "{0}G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0}m/s²",
                other: "{0}m/s²"
            },
            angleRevolution: {
                one: "{0}rev",
                other: "{0}rev"
            },
            angleRadian: {
                one: "{0}rad",
                other: "{0}rad"
            },
            angleDegree: _gi8h3,
            angleArcMinute: _gi8h4,
            angleArcSecond: _gi8h5,
            areaSquareKilometer: {
                one: "{0}km²",
                other: "{0}km²"
            },
            areaHectare: {
                one: "{0}ha",
                other: "{0}ha"
            },
            areaSquareMeter: {
                one: "{0}m²",
                other: "{0}m²"
            },
            areaSquareCentimeter: {
                one: "{0}cm²",
                other: "{0}cm²"
            },
            areaSquareMile: {
                one: "{0}mi²",
                other: "{0}mi²"
            },
            areaAcre: {
                one: "{0}ac",
                other: "{0}ac"
            },
            areaSquareYard: {
                one: "{0}yd²",
                other: "{0}yd²"
            },
            areaSquareFoot: {
                one: "{0}ft²",
                other: "{0}ft²"
            },
            areaSquareInch: {
                one: "{0}in²",
                other: "{0}in²"
            },
            concentrKarat: _gi8h11,
            consumptionLiterPerKilometer: {
                one: "{0}l/km",
                other: "{0}l/km"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0}l/100km",
                other: "{0}l/100km"
            },
            consumptionMilePerGallon: {
                one: "{0}mpg",
                other: "{0}mpg"
            },
            digitalTerabyte: {
                one: "{0}Tt",
                other: "{0}Tt"
            },
            digitalTerabit: {
                one: "{0}Tb",
                other: "{0}Tb"
            },
            digitalGigabyte: {
                one: "{0}Gt",
                other: "{0}Gt"
            },
            digitalGigabit: {
                one: "{0}Gb",
                other: "{0}Gb"
            },
            digitalMegabyte: {
                one: "{0}Mt",
                other: "{0}Mt"
            },
            digitalMegabit: {
                one: "{0}Mb",
                other: "{0}Mb"
            },
            digitalKilobyte: {
                one: "{0}kt",
                other: "{0}kt"
            },
            digitalKilobit: {
                one: "{0}kb",
                other: "{0}kb"
            },
            digitalByte: _gi8h6,
            digitalBit: {
                one: "{0}b",
                other: "{0}b"
            },
            durationCentury: _gi8h16,
            durationYear: {
                one: "{0}v",
                other: "{0}v"
            },
            durationMonth: {
                one: "{0}kk",
                other: "{0}kk"
            },
            durationWeek: {
                one: "{0}vk",
                other: "{0}vk"
            },
            durationDay: {
                one: "{0}pv",
                other: "{0}pv"
            },
            durationHour: _gi8h6,
            durationMinute: {
                one: "{0}min",
                other: "{0}min"
            },
            durationSecond: {
                one: "{0}s",
                other: "{0}s"
            },
            durationMillisecond: {
                one: "{0}ms",
                other: "{0}ms"
            },
            durationMicrosecond: {
                one: "{0}μs",
                other: "{0}μs"
            },
            durationNanosecond: {
                one: "{0}ns",
                other: "{0}ns"
            },
            electricAmpere: {
                one: "{0}A",
                other: "{0}A"
            },
            electricMilliampere: {
                one: "{0}mA",
                other: "{0}mA"
            },
            electricOhm: {
                one: "{0}Ω",
                other: "{0}Ω"
            },
            electricVolt: {
                one: "{0}V",
                other: "{0}V"
            },
            energyKilocalorie: _gi8h25,
            energyCalorie: {
                one: "{0}cal",
                other: "{0}cal"
            },
            energyFoodcalorie: _gi8h25,
            energyKilojoule: {
                one: "{0}kJ",
                other: "{0}kJ"
            },
            energyJoule: {
                one: "{0}J",
                other: "{0}J"
            },
            energyKilowattHour: {
                one: "{0}kWh",
                other: "{0}kWh"
            },
            frequencyGigahertz: {
                one: "{0}GHz",
                other: "{0}GHz"
            },
            frequencyMegahertz: {
                one: "{0}MHz",
                other: "{0}MHz"
            },
            frequencyKilohertz: {
                one: "{0}kHz",
                other: "{0}kHz"
            },
            frequencyHertz: {
                one: "{0}Hz",
                other: "{0}Hz"
            },
            lengthKilometer: {
                one: "{0}km",
                other: "{0}km"
            },
            lengthMeter: {
                one: "{0}m",
                other: "{0}m"
            },
            lengthDecimeter: {
                one: "{0}dm",
                other: "{0}dm"
            },
            lengthCentimeter: {
                one: "{0}cm",
                other: "{0}cm"
            },
            lengthMillimeter: {
                one: "{0}mm",
                other: "{0}mm"
            },
            lengthMicrometer: {
                one: "{0}µm",
                other: "{0}µm"
            },
            lengthNanometer: {
                one: "{0}nm",
                other: "{0}nm"
            },
            lengthPicometer: {
                one: "{0}pm",
                other: "{0}pm"
            },
            lengthMile: {
                one: "{0}mi",
                other: "{0}mi"
            },
            lengthYard: {
                one: "{0}yd",
                other: "{0}yd"
            },
            lengthFoot: _gi8h4,
            lengthInch: _gi8h5,
            lengthParsec: {
                one: "{0}pc",
                other: "{0}pc"
            },
            lengthLightYear: {
                one: "{0}vv",
                other: "{0}vv"
            },
            lengthAstronomicalUnit: {
                one: "{0}au",
                other: "{0}au"
            },
            lengthFurlong: {
                one: "{0}fur",
                other: "{0}fur"
            },
            lengthFathom: {
                one: "{0}fm",
                other: "{0}fm"
            },
            lengthNauticalMile: {
                one: "{0}mpk",
                other: "{0}mpk"
            },
            lengthMileScandinavian: _gi8h23,
            lightLux: {
                one: "{0}lx",
                other: "{0}lx"
            },
            massMetricTon: _gi8h6,
            massKilogram: {
                one: "{0}kg",
                other: "{0}kg"
            },
            massGram: {
                one: "{0}g",
                other: "{0}g"
            },
            massMilligram: {
                one: "{0}mg",
                other: "{0}mg"
            },
            massMicrogram: {
                one: "{0}μg",
                other: "{0}μg"
            },
            massTon: {
                one: "{0}US-tn",
                other: "{0}US-tn"
            },
            massStone: {
                one: "{0}st",
                other: "{0}st"
            },
            massPound: {
                one: "{0}lb",
                other: "{0}lb"
            },
            massOunce: {
                one: "{0}oz",
                other: "{0}oz"
            },
            massOunceTroy: {
                one: "{0}oz t",
                other: "{0}oz t"
            },
            massCarat: _gi8h11,
            powerGigawatt: {
                one: "{0}GW",
                other: "{0}GW"
            },
            powerMegawatt: {
                one: "{0}MW",
                other: "{0} MW"
            },
            powerKilowatt: {
                one: "{0}kW",
                other: "{0}kW"
            },
            powerWatt: {
                one: "{0}W",
                other: "{0}W"
            },
            powerMilliwatt: {
                one: "{0}mW",
                other: "{0}mW"
            },
            powerHorsepower: {
                one: "{0}hv",
                other: "{0}hv"
            },
            pressureHectopascal: {
                one: "{0}hPa",
                other: "{0}hPa"
            },
            pressureMillimeterOfMercury: {
                one: "{0}mm Hg",
                other: "{0}mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0}psi",
                other: "{0}psi"
            },
            pressureInchHg: {
                one: "{0}″ Hg",
                other: "{0}″ Hg"
            },
            pressureMillibar: {
                one: "{0}mbar",
                other: "{0}mbar"
            },
            speedKilometerPerHour: {
                one: "{0}km/h",
                other: "{0}km/h"
            },
            speedMeterPerSecond: {
                one: "{0}m/s",
                other: "{0}m/s"
            },
            speedMilePerHour: {
                one: "{0}mi/h",
                other: "{0}mi/h"
            },
            speedKnot: _gi8h17,
            temperatureGeneric: _gi8h3,
            temperatureCelsius: _gi8h3,
            temperatureFahrenheit: {
                one: "{0}°F",
                other: "{0}°F"
            },
            temperatureKelvin: {
                one: "{0}K",
                other: "{0}K"
            },
            volumeCubicKilometer: {
                one: "{0}km³",
                other: "{0}km³"
            },
            volumeCubicMeter: {
                one: "{0}m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0}cm³",
                other: "{0}cm³"
            },
            volumeCubicMile: {
                one: "{0}mi³",
                other: "{0}mi³"
            },
            volumeCubicYard: {
                one: "{0}yd³",
                other: "{0}yd³"
            },
            volumeCubicFoot: {
                one: "{0}ft³",
                other: "{0}ft³"
            },
            volumeCubicInch: {
                one: "{0}in³",
                other: "{0}in³"
            },
            volumeMegaliter: {
                one: "{0}Ml",
                other: "{0}Ml"
            },
            volumeHectoliter: {
                one: "{0}hl",
                other: "{0}hl"
            },
            volumeLiter: {
                one: "{0}l",
                other: "{0}l"
            },
            volumeDeciliter: {
                one: "{0}dl",
                other: "{0}dl"
            },
            volumeCentiliter: {
                one: "{0}cl",
                other: "{0}cl"
            },
            volumeMilliliter: {
                one: "{0}ml",
                other: "{0}ml"
            },
            volumePintMetric: _gi8h18,
            volumeCupMetric: _gi8h24,
            volumeAcreFoot: {
                one: "{0}ac ft",
                other: "{0}ac ft"
            },
            volumeBushel: {
                one: "{0}bu",
                other: "{0}bu"
            },
            volumeGallon: {
                one: "{0}gal",
                other: "{0}gal"
            },
            volumeQuart: {
                one: "{0}qt",
                other: "{0}qt"
            },
            volumePint: {
                one: "{0}pt",
                other: "{0}pt"
            },
            volumeCup: {
                one: "{0}kp",
                other: "{0}kp"
            },
            volumeFluidOunce: {
                one: "{0}fl oz",
                other: "{0}fl oz"
            },
            volumeTablespoon: {
                one: "{0}rkl",
                other: "{0}rkl"
            },
            volumeTeaspoon: {
                one: "{0}tl",
                other: "{0}tl"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+H.mm", "-H.mm" ],
    gmt: "UTC{0}",
    gmtZero: "UTC",
    region: "aikavyöhyke: {0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} (kesäaika)",
        standard: "{0} (normaaliaika)"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "š", "t", "u", "v", "w", "x", "y", "z", "ž", "å", "ä", "ö" ],
        auxiliary: [ "á", "à", "ă", "â", "ã", "ą", "ā", "ć", "č", "ċ", "ç", "ď", "ð", "đ", "é", "è", "ê", "ě", "ë", "ė", "ę", "ē", "ğ", "ǧ", "ģ", "ǥ", "ȟ", "ħ", "í", "î", "ï", "İ", "į", "ī", "ı", "ǩ", "ķ", "ĺ", "ľ", "ļ", "ł", "ń", "ň", "ñ", "ņ", "ŋ", "ó", "ò", "ô", "ő", "õ", "œ", "ŕ", "ř", "ś", "ŝ", "ş", "ß", "ť", "ţ", "ŧ", "ú", "ù", "û", "ů", "ű", "ų", "ū", "ý", "ÿ", "ü", "ź", "ż", "ʒ", "ǯ", "þ", "æ", "ø" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "Å", "Ä", "Ö" ],
        punctuation: [ "‐", "–", ",", ";", "\\:", "!", "?", ".", "…", "’", "”", "»", "(", ")", "\\[", "\\]", "§", "@", "*", "/", "\\\\", "\\&", "#" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0}…",
        "word-initial": "…{0}",
        "word-medial": "{0}… {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _gi8h501,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _gi8h556,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _gi8h556,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _gi8h501,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _gi8h501,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _gi8h501,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _gi8h501,
        digits: "renderEthiopic"
    },
    finance: _gi8h506,
    fullwide: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _gi8h501,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _gi8h501,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _gi8h501,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _gi8h501,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _gi8h511,
    hansfin: _gi8h515,
    hant: _gi8h511,
    hantfin: _gi8h515,
    hebr: {
        symbols: _gi8h501,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _gi8h501,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _gi8h511,
    jpanfin: _gi8h515,
    kali: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _gi8h501,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _gi8h501,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _gi8h501,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _gi8h501,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _gi8h501,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _gi8h501,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _gi8h501,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _gi8h501,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _gi8h506,
    nkoo: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _gi8h501,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _gi8h501,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _gi8h501,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _gi8h501,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _gi8h501,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _gi8h501,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _gi8h506,
    vaii: {
        symbols: _gi8h501,
        formats: _gi8h556,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _gi8h501,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: {
            basic: _gi8h531,
            cldr: {
                d: "d",
                Ed: "E d.",
                Gy: "y G",
                GyMMM: "LLL y G",
                GyMMMd: "d. MMM y G",
                GyMMMEd: "E d. MMM y G",
                M: "L",
                Md: "d.M.",
                MEd: "E d.M.",
                MMM: "LLL",
                MMMd: "d. MMM",
                MMMEd: "ccc d. MMM",
                y: "y G",
                yyyy: "y G",
                yyyyM: "L.y G",
                yyyyMd: "d.M.y G",
                yyyyMEd: "E d.M.y G",
                yyyyMMM: "LLL y G",
                yyyyMMMd: "d. MMM y G",
                yyyyMMMEd: "E d. MMM y G",
                yyyyMMMM: "LLLL y G",
                yyyyQQQ: "QQQ y G",
                yyyyQQQQ: "QQQQ y G",
                E: "ccc",
                h: "h a",
                H: "H",
                hm: "h.mm a",
                Hm: "H.mm",
                hms: "h.mm.ss a",
                Hms: "H.mm.ss",
                MMMMd: "d. MMMM",
                ms: "mm.ss",
                yyyyMM: "M.y G",
                yyyyMMMMccccd: "cccc d. MMMM y G",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: _gi8h550,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _gi8h536,
        dayPeriods: _gi8h547,
        monthNames: _gi8h545,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _gi8h529,
        fields: _gi8h559
    },
    chinese: _gi8h562,
    coptic: {
        dateFormats: _gi8h548,
        datePartsOrder: "dmy",
        dateIntervalFormats: _gi8h550,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _gi8h536,
        dayPeriods: _gi8h547,
        monthNames: {
            format: _gi8h526,
            standAlone: _gi8h526
        },
        eraNames: _gi8h114,
        quarterNames: _gi8h529,
        fields: _gi8h559
    },
    dangi: _gi8h562,
    ethioaa: _gi8h560,
    ethiopic: {
        dateFormats: _gi8h548,
        datePartsOrder: "dmy",
        dateIntervalFormats: _gi8h550,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _gi8h536,
        dayPeriods: _gi8h547,
        monthNames: {
            format: _gi8h527,
            standAlone: _gi8h527
        },
        eraNames: _gi8h114,
        quarterNames: _gi8h529,
        fields: _gi8h559
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "cccc d. MMMM y",
                longDate: "d. MMMM y",
                mediumDate: "d.M.y",
                shortDate: "d.M.y",
                fullTime: "H.mm.ss zzzz",
                longTime: "H.mm.ss z",
                mediumTime: "H.mm.ss",
                shortTime: "H.mm",
                shortDateTime: "d.M.y H.mm",
                mediumDateTime: "d.M.y 'klo' H.mm.ss",
                longDateTime: "d. MMMM y 'klo' H.mm.ss z",
                fullDateTime: "cccc d. MMMM y 'klo' H.mm.ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E d.",
                Ehm: "E h.mm a",
                EHm: "E H.mm",
                Ehms: "E h.mm.ss a",
                EHms: "E H.mm.ss",
                Gy: "y G",
                GyMMM: "LLL y G",
                GyMMMd: "d. MMM y G",
                GyMMMEd: "E d. MMM y G",
                h: "h a",
                H: "H",
                hm: "h.mm a",
                Hm: "H.mm",
                hms: "h.mm.ss a",
                Hms: "H.mm.ss",
                hmsv: "h.mm.ss a v",
                Hmsv: "H.mm.ss v",
                hmv: "h.mm a v",
                Hmv: "H.mm v",
                M: "L",
                Md: "d.M.",
                MEd: "E d.M.",
                MMM: "LLL",
                MMMd: "d. MMM",
                MMMEd: "ccc d. MMM",
                MMMMd: "d. MMMM",
                ms: "m.ss",
                y: "y",
                yM: "L.y",
                yMd: "d.M.y",
                yMEd: "E d.M.y",
                yMM: "M.y",
                yMMM: "LLL y",
                yMMMd: "d. MMM y",
                yMMMEd: "E d. MMM y",
                yMMMM: "LLLL y",
                yMMMMccccd: "cccc d. MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d.–d."
            },
            h: _gi8h7,
            H: {
                H: "H–H"
            },
            hm: _gi8h132,
            Hm: _gi8h20,
            hmv: _gi8h150,
            Hmv: _gi8h35,
            hv: _gi8h21,
            Hv: {
                H: "H–H v"
            },
            M: {
                M: "L.–L."
            },
            Md: _gi8h12,
            MEd: _gi8h65,
            MMM: {
                M: "LLL–LLLL"
            },
            MMMd: _gi8h57,
            MMMEd: _gi8h104,
            MMMM: {
                M: "LLL–LLLL"
            },
            y: {
                y: "y–y"
            },
            yM: _gi8h44,
            yMd: {
                d: "d.–d.M.y",
                M: "d.M.–d.M.y",
                y: "d.M.y–d.M.y"
            },
            yMEd: {
                d: "E d.M.y – E d.M.y",
                M: "E d.M.y – E d.M.y",
                y: "E d.M.y – E d.M.y"
            },
            yMMM: _gi8h44,
            yMMMd: {
                d: "d.–d. MMMM y",
                M: "d. MMMM – d. MMMM y",
                y: "d. MMMM y – d. MMMM y"
            },
            yMMMEd: {
                d: "E d. – E d. MMMM y",
                M: "E d. MMMM – E d. MMMM y",
                y: "E d. MMMM y – E d. MMMM y"
            },
            yMMMM: _gi8h44
        },
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _gi8h536,
        dayPeriods: _gi8h547,
        monthNames: _gi8h545,
        eraNames: {
            wide: [ "ennen Kristuksen syntymää", "jälkeen Kristuksen syntymän" ],
            abbreviated: [ "eKr.", "jKr." ]
        },
        quarterNames: _gi8h529,
        fields: _gi8h559
    },
    hebrew: {
        dateFormats: _gi8h548,
        datePartsOrder: "dmy",
        dateIntervalFormats: _gi8h550,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _gi8h536,
        dayPeriods: _gi8h547,
        monthNames: {
            format: {
                abbreviated: _gi8h500,
                narrow: _gi8h135,
                wide: _gi8h500
            },
            standAlone: {
                abbreviated: [ "tišrí", "hešván", "kislév", "tevét", "ševát", "adár I", "adár", "nisán", "ijjár", "siván", "tammúz", "ab", "elúl" ],
                narrow: _gi8h135,
                wide: [ "tišríkuu", "hešvánkuu", "kislévkuu", "tevétkuu", "ševátkuu", "adárkuu I", "adárkuu", "nisánkuu", "ijjárkuu", "sivánkuu", "tammúzkuu", "abkuu", "elúlkuu" ]
            }
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _gi8h529,
        fields: _gi8h559
    },
    indian: {
        dateFormats: _gi8h548,
        datePartsOrder: "dmy",
        dateIntervalFormats: _gi8h550,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _gi8h536,
        dayPeriods: _gi8h547,
        monthNames: {
            format: _gi8h528,
            standAlone: _gi8h528
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _gi8h529,
        fields: _gi8h559
    },
    islamic: _gi8h561,
    "islamic-umalqura": _gi8h561,
    "islamic-tbla": _gi8h561,
    "islamic-civil": _gi8h561,
    "islamic-rgsa": _gi8h561,
    iso8601: _gi8h560,
    japanese: {
        dateFormats: _gi8h548,
        datePartsOrder: "dmy",
        dateIntervalFormats: _gi8h550,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _gi8h536,
        dayPeriods: _gi8h547,
        monthNames: _gi8h545,
        eraNames: {
            wide: _gi8h557,
            abbreviated: _gi8h557
        },
        quarterNames: _gi8h529,
        fields: _gi8h559
    },
    persian: {
        dateFormats: _gi8h548,
        datePartsOrder: "dmy",
        dateIntervalFormats: _gi8h550,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _gi8h536,
        dayPeriods: _gi8h547,
        monthNames: {
            format: _gi8h524,
            standAlone: _gi8h524
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _gi8h529,
        fields: _gi8h559
    },
    roc: {
        dateFormats: _gi8h548,
        datePartsOrder: "dmy",
        dateIntervalFormats: _gi8h550,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _gi8h536,
        dayPeriods: _gi8h547,
        monthNames: _gi8h545,
        eraNames: {
            wide: _gi8h9,
            abbreviated: _gi8h9
        },
        quarterNames: _gi8h529,
        fields: _gi8h559
    },
    islamicc: _gi8h560
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length;
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 1 && v === 0) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinal(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "miinus " + this.renderSpelloutCardinal(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinal(Math.floor(n)) + " pilkku " + this.renderSpelloutCardinal(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e12) return this.renderSpelloutCardinal(Math.floor(n / 1e12)) + " biljoonaa" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinal(n % 1e12));
    if (n >= 1e12) return this.renderSpelloutCardinal(Math.floor(n / 1e12)) + " biljoona" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinal(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinal(Math.floor(n / 1e9)) + " miljardia" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinal(n % 1e9));
    if (n >= 1e9) return this.renderSpelloutCardinal(Math.floor(n / 1e9)) + " miljardi" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinal(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinal(Math.floor(n / 1e6)) + " miljoonaa" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinal(n % 1e6));
    if (n >= 1e6) return this.renderSpelloutCardinal(Math.floor(n / 1e6)) + " miljoona" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinal(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinal(Math.floor(n / 1e3)) + "­tuhatta" + (n === 2e3 ? "" : "­" + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 1e3) return "tuhat" + (n === 1e3 ? "" : "­" + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinal(Math.floor(n / 100)) + "­sataa" + (n === 200 ? "" : "­" + this.renderSpelloutCardinal(n % 100));
    if (n >= 100) return "sata" + (n === 100 ? "" : "­" + this.renderSpelloutCardinal(n % 100));
    if (n >= 20) return this.renderSpelloutCardinal(Math.floor(n / 10)) + "­kymmentä" + (n === 20 ? "" : "­" + this.renderSpelloutCardinal(n % 10));
    if (n >= 11) return this.renderSpelloutCardinal(n % 10) + "toista";
    if (n >= 10) return "kymmenen";
    if (n >= 9) return "yhdeksän";
    if (n >= 8) return "kahdeksan";
    if (n >= 7) return "seitsemän";
    if (n >= 6) return "kuusi";
    if (n >= 5) return "viisi";
    if (n >= 4) return "neljä";
    if (n >= 3) return "kolme";
    if (n >= 2) return "kaksi";
    if (n >= 1) return "yksi";
    if (n >= 0) return "nolla";
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 7), {
    id: "Pacific/Marquesas",
    regionId: "061",
    utcStandardOffsetSeconds: -34200,
    displayName: "Marquesassaaret",
    countryId: "PF"
}, P.timeZones[8], {
    id: "Pacific/Gambier",
    regionId: "061",
    utcStandardOffsetSeconds: -32400,
    displayName: "Gambiersaaret",
    countryId: "PF"
}, P.timeZones.slice(10, 30), {
    id: "America/Mazatlan",
    regionId: "013",
    utcStandardOffsetSeconds: -25200,
    displayName: "Mazatlán",
    countryId: "MX"
}, P.timeZones.slice(31, 34), {
    id: "America/Bahia_Banderas",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Bahía de Banderas",
    countryId: "MX"
}, P.timeZones[35], {
    id: "America/North_Dakota/Beulah",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Beulah, Pohjois-Dakota",
    countryId: "US"
}, {
    id: "America/North_Dakota/Center",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Center, Pohjois-Dakota",
    countryId: "US"
}, P.timeZones.slice(38, 40), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Ciudad de México",
    countryId: "MX"
}, P.timeZones[40], P.timeZones.slice(42, 49), P.timeZones[51], {
    id: "America/Merida",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mérida",
    countryId: "MX"
}, {
    id: "America/North_Dakota/New_Salem",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "New Salem, Pohjois-Dakota",
    countryId: "US"
}, P.timeZones[53], {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Pääsiäissaari",
    countryId: "CL"
}, P.timeZones.slice(54, 62), {
    id: "America/Bogota",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Bogotá",
    countryId: "CO"
}, {
    id: "America/Cancun",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Cancún",
    countryId: "MX"
}, P.timeZones.slice(64, 66), {
    id: "America/Eirunepe",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Eirunepé",
    countryId: "BR"
}, P.timeZones.slice(67, 69), {
    id: "America/Havana",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Havanna",
    countryId: "CU"
}, P.timeZones.slice(70, 72), {
    id: "America/Jamaica",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Jamaika",
    countryId: "JM"
}, P.timeZones.slice(73, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones.slice(91, 97), {
    id: "America/Cuiaba",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Cuiabá",
    countryId: "BR"
}, {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 117), {
    id: "America/St_Kitts",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Kitts",
    countryId: "KN"
}, {
    id: "America/St_Lucia",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Lucia",
    countryId: "LC"
}, {
    id: "America/St_Thomas",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Thomas",
    countryId: "VI"
}, {
    id: "America/St_Vincent",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Vincent",
    countryId: "VC"
}, {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint-Barthélemy",
    countryId: "BL"
}, {
    id: "America/Santiago",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Santiago de Chile",
    countryId: "CL"
}, P.timeZones[118], P.timeZones.slice(124, 127), {
    id: "America/Araguaina",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Araguaína",
    countryId: "BR"
}, P.timeZones.slice(128, 137), {
    id: "America/Maceio",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Maceió",
    countryId: "BR"
}, P.timeZones.slice(138, 150), {
    id: "America/Santarem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Santarém",
    countryId: "BR"
}, P.timeZones[152], {
    id: "America/Sao_Paulo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "São Paulo",
    countryId: "BR"
}, {
    id: "America/Argentina/Tucuman",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Tucumán",
    countryId: "AR"
}, P.timeZones[154], {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Etelä-Georgia",
    countryId: "GS"
}, P.timeZones.slice(155, 157), {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azorit",
    countryId: "PT"
}, P.timeZones[160], {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Kap Verde",
    countryId: "CV"
}, P.timeZones.slice(161, 166), P.timeZones.slice(167, 174), P.timeZones[175], {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Kanariansaaret",
    countryId: "ES"
}, {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lissabon",
    countryId: "PT"
}, {
    id: "Africa/Lome",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Lomé",
    countryId: "TG"
}, {
    id: "Europe/London",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Lontoo",
    countryId: "GB"
}, P.timeZones[179], {
    id: "Europe/Isle_of_Man",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Mansaari",
    countryId: "IM"
}, P.timeZones.slice(180, 183), {
    id: "Atlantic/Reykjavik",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Reykjavík",
    countryId: "IS"
}, {
    id: "Atlantic/St_Helena",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Saint Helena",
    countryId: "SH"
}, {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Alger",
    countryId: "DZ"
}, P.timeZones.slice(188, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrad",
    countryId: "RS"
}, {
    id: "Europe/Berlin",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Berliini",
    countryId: "DE"
}, P.timeZones.slice(193, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bryssel",
    countryId: "BE"
}, P.timeZones.slice(196, 200), P.timeZones[201], {
    id: "Africa/El_Aaiun",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "El Aaiún",
    countryId: "EH"
}, P.timeZones.slice(203, 205), {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Kööpenhamina",
    countryId: "DK"
}, P.timeZones.slice(205, 210), {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luxemburg",
    countryId: "LU"
}, P.timeZones.slice(211, 215), P.timeZones[216], {
    id: "Africa/Ndjamena",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "N’Djamena",
    countryId: "TD"
}, P.timeZones[217], {
    id: "Europe/Paris",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Pariisi",
    countryId: "FR"
}, P.timeZones.slice(219, 221), {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Praha",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Rooma",
    countryId: "IT"
}, P.timeZones.slice(223, 226), {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, {
    id: "Europe/Stockholm",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tukholma",
    countryId: "SE"
}, P.timeZones.slice(228, 230), {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Varsova",
    countryId: "PL"
}, {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Vatikaani",
    countryId: "VA"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Wien",
    countryId: "AT"
}, P.timeZones[233], {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zürich",
    countryId: "CH"
}, {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Ateena",
    countryId: "GR"
}, P.timeZones.slice(236, 238), P.timeZones[239], {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bukarest",
    countryId: "RO"
}, {
    id: "Europe/Chisinau",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Chişinău",
    countryId: "MD"
}, P.timeZones.slice(242, 251), {
    id: "Africa/Cairo",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kairo",
    countryId: "EG"
}, P.timeZones[251], {
    id: "Africa/Khartoum",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Khartum",
    countryId: "SD"
}, P.timeZones.slice(253, 257), {
    id: "Europe/Mariehamn",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Maarianhamina",
    countryId: "AX"
}, P.timeZones[257], P.timeZones.slice(259, 261), {
    id: "Asia/Nicosia",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Nikosia",
    countryId: "CY"
}, {
    id: "Europe/Riga",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Riika",
    countryId: "LV"
}, P.timeZones[263], {
    id: "Europe/Tallinn",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Tallinna",
    countryId: "EE"
}, P.timeZones[265], {
    id: "Europe/Vilnius",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Vilna",
    countryId: "LT"
}, P.timeZones[267], {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Addis Abeba",
    countryId: "ET"
}, P.timeZones.slice(269, 273), {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdad",
    countryId: "IQ"
}, P.timeZones[274], {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damaskos",
    countryId: "SY"
}, P.timeZones.slice(277, 282), {
    id: "Indian/Comoro",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Komorit",
    countryId: "KM"
}, P.timeZones.slice(282, 286), {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moskova",
    countryId: "RU"
}, P.timeZones.slice(287, 289), {
    id: "Asia/Riyadh",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Riad",
    countryId: "SA"
}, P.timeZones.slice(290, 293), {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Teheran",
    countryId: "IR"
}, P.timeZones.slice(294, 297), {
    id: "Asia/Yerevan",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Jerevan",
    countryId: "AM"
}, {
    id: "Indian/Mahe",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Mahé",
    countryId: "SC"
}, P.timeZones.slice(298, 300), {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Réunion",
    countryId: "RE"
}, P.timeZones.slice(301, 305), P.timeZones[306], {
    id: "Asia/Aqtau",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aqtaw",
    countryId: "KZ"
}, {
    id: "Asia/Aqtobe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aqtöbe",
    countryId: "KZ"
}, P.timeZones[310], {
    id: "Asia/Ashgabat",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Ašgabat",
    countryId: "TM"
}, {
    id: "Asia/Dushanbe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Dušanbe",
    countryId: "TJ"
}, {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Jekaterinburg",
    countryId: "RU"
}, P.timeZones[312], {
    id: "Indian/Kerguelen",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Kerguelensaaret",
    countryId: "TF"
}, {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Malediivit",
    countryId: "MV"
}, P.timeZones[315], {
    id: "Asia/Qyzylorda",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Qızılorda",
    countryId: "KZ"
}, P.timeZones[318], {
    id: "Asia/Tashkent",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Taškent",
    countryId: "UZ"
}, {
    id: "Asia/Oral",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Uralsk",
    countryId: "KZ"
}, P.timeZones.slice(321, 325), {
    id: "Asia/Bishkek",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Biškek",
    countryId: "KG"
}, P.timeZones.slice(326, 331), P.timeZones[332], {
    id: "Asia/Urumqi",
    regionId: "030",
    utcStandardOffsetSeconds: 21600,
    displayName: "Ürümqi",
    countryId: "CN"
}, {
    id: "Indian/Cocos",
    utcStandardOffsetSeconds: 23400,
    displayName: "Kookossaaret",
    countryId: "CC"
}, P.timeZones.slice(334, 337), P.timeZones.slice(338, 342), {
    id: "Indian/Christmas",
    utcStandardOffsetSeconds: 25200,
    displayName: "Joulusaari",
    countryId: "CX"
}, {
    id: "Asia/Krasnoyarsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Krasnojarsk",
    countryId: "RU"
}, P.timeZones.slice(343, 350), {
    id: "Asia/Hong_Kong",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Hongkong",
    countryId: "HK"
}, P.timeZones.slice(352, 355), {
    id: "Asia/Macau",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Macao",
    countryId: "MO"
}, P.timeZones.slice(356, 362), {
    id: "Asia/Choibalsan",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Tšoibalsa",
    countryId: "MN"
}, {
    id: "Asia/Ulaanbaatar",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Ulan Bator",
    countryId: "MN"
}, P.timeZones[363], P.timeZones[365], {
    id: "Asia/Khandyga",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Handyga",
    countryId: "RU"
}, {
    id: "Asia/Yakutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jakutsk",
    countryId: "RU"
}, P.timeZones[366], P.timeZones[368], {
    id: "Asia/Pyongyang",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Pjongjang",
    countryId: "KP"
}, {
    id: "Asia/Seoul",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Soul",
    countryId: "KR"
}, {
    id: "Asia/Tokyo",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tokio",
    countryId: "JP"
}, {
    id: "Asia/Chita",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tšita",
    countryId: "RU"
}, P.timeZones.slice(373, 382), {
    id: "Antarctica/Macquarie",
    regionId: "053",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Macquariensaari",
    countryId: "AU"
}, P.timeZones.slice(383, 397), {
    id: "Pacific/Noumea",
    regionId: "054",
    utcStandardOffsetSeconds: 39600,
    displayName: "Nouméa",
    countryId: "NC"
}, P.timeZones[398], {
    id: "Asia/Sakhalin",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Sahalin",
    countryId: "RU"
}, P.timeZones.slice(400, 403), {
    id: "Pacific/Fiji",
    regionId: "054",
    utcStandardOffsetSeconds: 43200,
    displayName: "Fidži",
    countryId: "FJ"
}, P.timeZones[404], {
    id: "Asia/Kamchatka",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Kamtšatka",
    countryId: "RU"
}, P.timeZones.slice(406, 413), {
    id: "Pacific/Chatham",
    regionId: "053",
    utcStandardOffsetSeconds: 45900,
    displayName: "Chathamsaaret",
    countryId: "NZ"
}, P.timeZones.slice(414, 419));

inter.territories = [ _gi8h371, _gi8h327, _gi8h384, _gi8h328, _gi8h329, _gi8h233, _gi8h234, _gi8h381, _gi8h393, _gi8h235, _gi8h197, _gi8h281, _gi8h120, _gi8h411, _gi8h403, _gi8h330, _gi8h236, _gi8h170, _gi8h149, _gi8h422, _gi8h307, _gi8h348, _gi8h198, _gi8h237, _gi8h331, _gi8h282, _gi8h199, _gi8h200, _gi8h171, _gi8h238, _gi8h201, _gi8h239, _gi8h436, _gi8h283, _gi8h143, _gi8h284, _gi8h423, _gi8h454, _gi8h202, _gi8h285, _gi8h360, _gi8h240, _gi8h361, _gi8h152, _gi8h172, _gi8h155, _gi8h362, _gi8h332, _gi8h241, _gi8h140, _gi8h286, _gi8h287, _gi8h446, _gi8h242, _gi8h203, _gi8h349, _gi8h243, _gi8h244, _gi8h417, _gi8h372, _gi8h437, _gi8h438, _gi8h455, _gi8h350, _gi8h351, _gi8h245, _gi8h394, _gi8h395, _gi8h173, _gi8h352, _gi8h308, _gi8h174, _gi8h204, _gi8h246, _gi8h175, _gi8h309, _gi8h247, _gi8h310, _gi8h333, _gi8h157, _gi8h311, _gi8h288, _gi8h205, _gi8h373, _gi8h206, _gi8h176, _gi8h353, _gi8h289, _gi8h447, _gi8h452, _gi8h312, _gi8h177, _gi8h158, _gi8h159, _gi8h248, _gi8h249, _gi8h374, _gi8h207, _gi8h208, _gi8h404, _gi8h418, _gi8h424, _gi8h313, _gi8h290, _gi8h250, _gi8h209, _gi8h178, _gi8h210, _gi8h291, _gi8h131, _gi8h439, _gi8h292, _gi8h251, _gi8h211, _gi8h148, _gi8h314, _gi8h385, _gi8h419, _gi8h315, _gi8h179, _gi8h420, _gi8h443, _gi8h428, _gi8h180, _gi8h293, _gi8h294, _gi8h295, _gi8h252, _gi8h462, _gi8h396, _gi8h375, _gi8h253, _gi8h254, _gi8h255, _gi8h181, _gi8h212, _gi8h213, _gi8h160, _gi8h214, _gi8h256, _gi8h257, _gi8h258, _gi8h182, _gi8h376, _gi8h259, _gi8h316, _gi8h421, _gi8h429, _gi8h440, _gi8h363, _gi8h430, _gi8h334, _gi8h317, _gi8h215, _gi8h335, _gi8h260, _gi8h161, _gi8h183, _gi8h296, _gi8h261, _gi8h397, _gi8h336, _gi8h337, _gi8h318, _gi8h262, _gi8h263, _gi8h405, _gi8h412, _gi8h448, _gi8h264, _gi8h216, _gi8h297, _gi8h338, _gi8h339, _gi8h298, _gi8h386, _gi8h265, _gi8h184, _gi8h185, _gi8h319, _gi8h186, _gi8h266, _gi8h162, _gi8h382, _gi8h187, _gi8h406, _gi8h163, _gi8h387, _gi8h299, _gi8h188, _gi8h425, _gi8h217, _gi8h407, _gi8h300, _gi8h164, _gi8h301, _gi8h444, _gi8h449, _gi8h377, _gi8h408, _gi8h409, _gi8h320, _gi8h354, _gi8h189, _gi8h431, _gi8h190, _gi8h218, _gi8h388, _gi8h410, _gi8h321, _gi8h267, _gi8h219, _gi8h220, _gi8h268, _gi8h364, _gi8h426, _gi8h355, _gi8h460, _gi8h398, _gi8h365, _gi8h450, _gi8h191, _gi8h378, _gi8h221, _gi8h192, _gi8h340, _gi8h366, _gi8h269, _gi8h222, _gi8h341, _gi8h367, _gi8h322, _gi8h368, _gi8h302, _gi8h303, _gi8h270, _gi8h323, _gi8h193, _gi8h194, _gi8h271, _gi8h272, _gi8h304, _gi8h223, _gi8h427, _gi8h356, _gi8h224, _gi8h305, _gi8h225, _gi8h273, _gi8h165, _gi8h274, _gi8h195, _gi8h413, _gi8h153, _gi8h275, _gi8h226, _gi8h369, _gi8h441, _gi8h227, _gi8h166, _gi8h228, _gi8h229, _gi8h276, _gi8h230, _gi8h277, _gi8h383, _gi8h379, _gi8h342, _gi8h370, _gi8h278, _gi8h324, _gi8h325, _gi8h231, _gi8h279, _gi8h167, _gi8h432, _gi8h399, _gi8h357, _gi8h456, _gi8h358, _gi8h306, _gi8h453, _gi8h121, _gi8h457, {
    id: "QO",
    displayName: "ulkomeri",
    regionId: "009",
    hasTimeZones: false
} ];

inter.regions = [ _gi8h371, _gi8h384, _gi8h393, _gi8h422, _gi8h417, _gi8h437, _gi8h438, _gi8h394, _gi8h404, _gi8h418, _gi8h424, _gi8h439, _gi8h385, _gi8h420, _gi8h428, _gi8h421, _gi8h429, _gi8h440, _gi8h405, _gi8h412, _gi8h387, _gi8h444, _gi8h449, _gi8h409, _gi8h432, _gi8h453, _gi8h121, _gi8h457 ];

inter.countries = [ _gi8h327, _gi8h328, _gi8h329, _gi8h233, _gi8h234, _gi8h381, _gi8h235, _gi8h197, _gi8h281, _gi8h120, _gi8h411, _gi8h403, _gi8h330, _gi8h236, _gi8h170, _gi8h149, _gi8h307, _gi8h348, _gi8h198, _gi8h237, _gi8h331, _gi8h282, _gi8h199, _gi8h200, _gi8h171, _gi8h238, _gi8h201, _gi8h239, _gi8h436, _gi8h283, _gi8h143, _gi8h284, _gi8h423, _gi8h454, _gi8h202, _gi8h285, _gi8h360, _gi8h240, _gi8h361, _gi8h152, _gi8h172, _gi8h155, _gi8h362, _gi8h332, _gi8h241, _gi8h140, _gi8h286, _gi8h287, _gi8h446, _gi8h242, _gi8h203, _gi8h349, _gi8h243, _gi8h244, _gi8h372, _gi8h455, _gi8h350, _gi8h351, _gi8h245, _gi8h395, _gi8h173, _gi8h352, _gi8h308, _gi8h174, _gi8h204, _gi8h246, _gi8h175, _gi8h309, _gi8h247, _gi8h310, _gi8h333, _gi8h157, _gi8h311, _gi8h288, _gi8h205, _gi8h373, _gi8h206, _gi8h176, _gi8h353, _gi8h289, _gi8h447, _gi8h452, _gi8h312, _gi8h177, _gi8h158, _gi8h159, _gi8h248, _gi8h249, _gi8h374, _gi8h207, _gi8h208, _gi8h313, _gi8h290, _gi8h250, _gi8h209, _gi8h178, _gi8h210, _gi8h291, _gi8h131, _gi8h292, _gi8h251, _gi8h211, _gi8h148, _gi8h314, _gi8h419, _gi8h315, _gi8h179, _gi8h443, _gi8h180, _gi8h293, _gi8h294, _gi8h295, _gi8h252, _gi8h462, _gi8h396, _gi8h375, _gi8h253, _gi8h254, _gi8h255, _gi8h181, _gi8h212, _gi8h213, _gi8h160, _gi8h214, _gi8h256, _gi8h257, _gi8h258, _gi8h182, _gi8h376, _gi8h259, _gi8h316, _gi8h363, _gi8h430, _gi8h334, _gi8h317, _gi8h215, _gi8h335, _gi8h260, _gi8h161, _gi8h183, _gi8h296, _gi8h261, _gi8h397, _gi8h336, _gi8h337, _gi8h318, _gi8h262, _gi8h263, _gi8h448, _gi8h264, _gi8h216, _gi8h297, _gi8h338, _gi8h339, _gi8h298, _gi8h386, _gi8h265, _gi8h184, _gi8h185, _gi8h319, _gi8h186, _gi8h266, _gi8h162, _gi8h382, _gi8h187, _gi8h406, _gi8h163, _gi8h299, _gi8h188, _gi8h425, _gi8h217, _gi8h407, _gi8h300, _gi8h164, _gi8h301, _gi8h377, _gi8h408, _gi8h320, _gi8h354, _gi8h189, _gi8h431, _gi8h190, _gi8h218, _gi8h388, _gi8h410, _gi8h321, _gi8h267, _gi8h219, _gi8h220, _gi8h268, _gi8h364, _gi8h426, _gi8h355, _gi8h460, _gi8h398, _gi8h365, _gi8h450, _gi8h191, _gi8h378, _gi8h221, _gi8h192, _gi8h340, _gi8h366, _gi8h269, _gi8h222, _gi8h341, _gi8h367, _gi8h322, _gi8h368, _gi8h302, _gi8h303, _gi8h270, _gi8h323, _gi8h193, _gi8h194, _gi8h271, _gi8h272, _gi8h304, _gi8h223, _gi8h427, _gi8h356, _gi8h224, _gi8h305, _gi8h225, _gi8h273, _gi8h165, _gi8h274, _gi8h195, _gi8h413, _gi8h153, _gi8h275, _gi8h226, _gi8h369, _gi8h441, _gi8h227, _gi8h166, _gi8h228, _gi8h229, _gi8h276, _gi8h230, _gi8h277, _gi8h383, _gi8h379, _gi8h342, _gi8h370, _gi8h278, _gi8h324, _gi8h325, _gi8h231, _gi8h279, _gi8h167, _gi8h399, _gi8h357, _gi8h456, _gi8h358, _gi8h306 ];

inter.languages = [ {
    id: "ab",
    displayName: "abhaasi"
}, {
    id: "ada",
    displayName: "adangme"
}, {
    id: "ady",
    displayName: "adyge"
}, {
    id: "aa",
    displayName: "afar"
}, {
    id: "afh",
    displayName: "afrihili"
}, {
    id: "af",
    displayName: "afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ay",
    displayName: "aimara"
}, {
    id: "ain",
    displayName: "ainu"
}, {
    id: "ak",
    displayName: "akan",
    nativeDisplayName: "Akan"
}, {
    id: "akk",
    displayName: "akkadi"
}, {
    id: "akz",
    displayName: "alabama"
}, {
    id: "nds_nl",
    displayName: "alankomaidenalasaksa"
}, {
    id: "nds",
    displayName: "alasaksa"
}, {
    id: "esu",
    displayName: "alaskanjupik"
}, {
    id: "ale",
    displayName: "aleutti"
}, {
    id: "arq",
    displayName: "algerianarabia"
}, {
    id: "alt",
    displayName: "altai"
}, {
    id: "en_us",
    displayName: "amerikanenglanti",
    nativeDisplayName: "American English"
}, {
    id: "ase",
    displayName: "amerikkalainen viittomakieli"
}, {
    id: "smn",
    displayName: "inarinsaame",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "anp",
    displayName: "angika"
}, {
    id: "njo",
    displayName: "ao naga"
}, {
    id: "an",
    displayName: "aragonia"
}, {
    id: "aro",
    displayName: "araona"
}, {
    id: "arp",
    displayName: "arapaho"
}, {
    id: "arw",
    displayName: "arawak"
}, {
    id: "rup",
    displayName: "aromania"
}, {
    id: "frp",
    displayName: "arpitaani"
}, {
    id: "ast",
    displayName: "asturia",
    nativeDisplayName: "asturianu"
}, {
    id: "cch",
    displayName: "atsam"
}, {
    id: "ace",
    displayName: "atšeh"
}, {
    id: "ach",
    displayName: "atšoli"
}, {
    id: "en_au",
    displayName: "australianenglanti",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "avaari"
}, {
    id: "ae",
    displayName: "avesta"
}, {
    id: "awa",
    displayName: "awadhi"
}, {
    id: "az",
    displayName: "azeri",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "bfq",
    displayName: "badaga"
}, {
    id: "ms",
    displayName: "malaiji",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bqi",
    displayName: "bahtiari"
}, {
    id: "bar",
    displayName: "baijeri"
}, {
    id: "ban",
    displayName: "bali"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bax",
    displayName: "bamum"
}, {
    id: "bjn",
    displayName: "banjar"
}, {
    id: "bbc",
    displayName: "batak-toba"
}, {
    id: "ba",
    displayName: "baškiiri"
}, {
    id: "bej",
    displayName: "bedža"
}, {
    id: "bal",
    displayName: "belutši"
}, {
    id: "bew",
    displayName: "betawi"
}, {
    id: "bho",
    displayName: "bhodžpuri"
}, {
    id: "bik",
    displayName: "bikol"
}, {
    id: "byn",
    displayName: "bilin"
}, {
    id: "bin",
    displayName: "bini"
}, {
    id: "bi",
    displayName: "bislama"
}, {
    id: "bpy",
    displayName: "bišnupria"
}, {
    id: "zbl",
    displayName: "blisskieli"
}, {
    id: "bs",
    displayName: "bosnia",
    nativeDisplayName: "bosanski"
}, {
    id: "bra",
    displayName: "bradž"
}, {
    id: "brh",
    displayName: "brahui"
}, {
    id: "br",
    displayName: "bretoni",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "britannianenglanti",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "bugi"
}, {
    id: "bum",
    displayName: "bulu"
}, {
    id: "bua",
    displayName: "burjaatti"
}, {
    id: "cad",
    displayName: "caddo"
}, {
    id: "frc",
    displayName: "cajun"
}, {
    id: "en_ca",
    displayName: "kanadanenglanti",
    nativeDisplayName: "Canadian English"
}, {
    id: "cps",
    displayName: "capiznon"
}, {
    id: "ca",
    displayName: "katalaani",
    nativeDisplayName: "català"
}, {
    id: "cay",
    displayName: "cayuga"
}, {
    id: "ceb",
    displayName: "cebuano"
}, {
    id: "chy",
    displayName: "cheyenne"
}, {
    id: "kde",
    displayName: "makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "qug",
    displayName: "chimborazonylänköketšua"
}, {
    id: "chn",
    displayName: "chinook-jargon"
}, {
    id: "chp",
    displayName: "chipewyan"
}, {
    id: "sn",
    displayName: "šona",
    nativeDisplayName: "chiShona"
}, {
    id: "cho",
    displayName: "choctaw"
}, {
    id: "chk",
    displayName: "chuuk"
}, {
    id: "cr",
    displayName: "cree"
}, {
    id: "mus",
    displayName: "creek"
}, {
    id: "cy",
    displayName: "kymri",
    nativeDisplayName: "Cymraeg"
}, {
    id: "dak",
    displayName: "dakota"
}, {
    id: "da",
    displayName: "tanska",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "dargi"
}, {
    id: "se",
    displayName: "pohjoissaame",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "dzg",
    displayName: "dazaga"
}, {
    id: "del",
    displayName: "delaware"
}, {
    id: "de",
    displayName: "saksa",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "dinka"
}, {
    id: "dv",
    displayName: "divehi"
}, {
    id: "dyu",
    displayName: "djula"
}, {
    id: "doi",
    displayName: "dogri"
}, {
    id: "dgr",
    displayName: "dogrib"
}, {
    id: "dsb",
    displayName: "alasorbi",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dtp",
    displayName: "dusun"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "viro",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efik"
}, {
    id: "arz",
    displayName: "egyptinarabia"
}, {
    id: "zxx",
    displayName: "ei kielellistä sisältöä"
}, {
    id: "eka",
    displayName: "ekajuk"
}, {
    id: "guz",
    displayName: "gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "elx",
    displayName: "elami"
}, {
    id: "egl",
    displayName: "emilia"
}, {
    id: "en",
    displayName: "englanti",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "ersä"
}, {
    id: "es",
    displayName: "espanja",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "euroopanespanja",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "meksikonespanja",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "amerikanespanja",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "nr",
    displayName: "etelä-ndebele"
}, {
    id: "sdh",
    displayName: "eteläkurdi"
}, {
    id: "sma",
    displayName: "eteläsaame"
}, {
    id: "st",
    displayName: "eteläsotho"
}, {
    id: "eu",
    displayName: "baski",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ext",
    displayName: "extremadura"
}, {
    id: "ee",
    displayName: "ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "fang"
}, {
    id: "fat",
    displayName: "fanti"
}, {
    id: "fj",
    displayName: "fidži"
}, {
    id: "hif",
    displayName: "fidžinhindi"
}, {
    id: "fil",
    displayName: "filipino",
    nativeDisplayName: "Filipino"
}, {
    id: "phn",
    displayName: "foinikia"
}, {
    id: "fon",
    displayName: "fon"
}, {
    id: "gur",
    displayName: "frafra"
}, {
    id: "fr",
    displayName: "ranska",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "kanadanranska",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "sveitsinranska",
    nativeDisplayName: "français suisse"
}, {
    id: "fur",
    displayName: "friuli",
    nativeDisplayName: "furlan"
}, {
    id: "bfd",
    displayName: "fut"
}, {
    id: "fo",
    displayName: "fääri",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "ga"
}, {
    id: "ga",
    displayName: "iiri",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manksi",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "gagauzi"
}, {
    id: "gay",
    displayName: "gajo"
}, {
    id: "gl",
    displayName: "galicia",
    nativeDisplayName: "galego"
}, {
    id: "gan",
    displayName: "gan-kiina"
}, {
    id: "gba",
    displayName: "gbaja"
}, {
    id: "aln",
    displayName: "geg"
}, {
    id: "gez",
    displayName: "ge’ez"
}, {
    id: "bbj",
    displayName: "ghomala"
}, {
    id: "ki",
    displayName: "kikuju",
    nativeDisplayName: "Gikuyu"
}, {
    id: "glk",
    displayName: "gilaki"
}, {
    id: "gom",
    displayName: "goankonkani"
}, {
    id: "gon",
    displayName: "gondi"
}, {
    id: "got",
    displayName: "gootti"
}, {
    id: "gor",
    displayName: "gorontalo"
}, {
    id: "grb",
    displayName: "grebo"
}, {
    id: "gn",
    displayName: "guarani"
}, {
    id: "gwi",
    displayName: "gwitšin"
}, {
    id: "gd",
    displayName: "gaeli",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "hai",
    displayName: "haida"
}, {
    id: "ht",
    displayName: "haiti"
}, {
    id: "hak",
    displayName: "hakka-kiina"
}, {
    id: "ha",
    displayName: "hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "hit",
    displayName: "heetti"
}, {
    id: "hz",
    displayName: "herero"
}, {
    id: "bez",
    displayName: "bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hil",
    displayName: "hiligaino"
}, {
    id: "ho",
    displayName: "hiri-motu"
}, {
    id: "hmn",
    displayName: "hmong"
}, {
    id: "hsb",
    displayName: "yläsorbi",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "kroatia",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "hupa"
}, {
    id: "iba",
    displayName: "iban"
}, {
    id: "ibb",
    displayName: "ibibio"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "io",
    displayName: "ido"
}, {
    id: "ig",
    displayName: "igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "iloko"
}, {
    id: "id",
    displayName: "indonesia",
    nativeDisplayName: "Indonesia"
}, {
    id: "inh",
    displayName: "inguuši"
}, {
    id: "izh",
    displayName: "inkeroinen"
}, {
    id: "ia",
    displayName: "interlingua"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "iu",
    displayName: "inuktitut"
}, {
    id: "ik",
    displayName: "inupiaq"
}, {
    id: "sbp",
    displayName: "sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "pohjois-ndebele",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "italia",
    nativeDisplayName: "italiano"
}, {
    id: "frs",
    displayName: "itäfriisi"
}, {
    id: "jv",
    displayName: "jaava"
}, {
    id: "jam",
    displayName: "jamaikankreolienglanti"
}, {
    id: "yao",
    displayName: "jao"
}, {
    id: "yap",
    displayName: "japi"
}, {
    id: "kaj",
    displayName: "jju"
}, {
    id: "dyo",
    displayName: "jola-fonyi",
    nativeDisplayName: "joola"
}, {
    id: "root",
    displayName: "juuri"
}, {
    id: "jrb",
    displayName: "juutalaisarabia"
}, {
    id: "jpr",
    displayName: "juutalaispersia"
}, {
    id: "jut",
    displayName: "juutti"
}, {
    id: "kbd",
    displayName: "kabardi"
}, {
    id: "kea",
    displayName: "kapverdenkreoli",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kgp",
    displayName: "kaingang"
}, {
    id: "kkj",
    displayName: "kako",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "kalaallisut",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "xal",
    displayName: "kalmukki"
}, {
    id: "kbl",
    displayName: "kanembu"
}, {
    id: "kr",
    displayName: "kanuri"
}, {
    id: "kaa",
    displayName: "karakalpakki"
}, {
    id: "krc",
    displayName: "karatšai-balkaari"
}, {
    id: "car",
    displayName: "karibi"
}, {
    id: "krl",
    displayName: "karjala"
}, {
    id: "kac",
    displayName: "katšin"
}, {
    id: "kaw",
    displayName: "kavi"
}, {
    id: "csb",
    displayName: "kašubi"
}, {
    id: "ken",
    displayName: "kenyang"
}, {
    id: "kw",
    displayName: "korni",
    nativeDisplayName: "kernewek"
}, {
    id: "mga",
    displayName: "keski-iiri"
}, {
    id: "enm",
    displayName: "keskienglanti"
}, {
    id: "dum",
    displayName: "keskihollanti"
}, {
    id: "frm",
    displayName: "keskiranska"
}, {
    id: "gmh",
    displayName: "keskiyläsaksa"
}, {
    id: "kha",
    displayName: "khasi"
}, {
    id: "naq",
    displayName: "nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "kho",
    displayName: "khotani"
}, {
    id: "khw",
    displayName: "khowar"
}, {
    id: "rof",
    displayName: "rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "machame",
    nativeDisplayName: "Kimachame"
}, {
    id: "kmb",
    displayName: "kimbundu"
}, {
    id: "krj",
    displayName: "kinaray-a"
}, {
    id: "rw",
    displayName: "ruanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asu",
    nativeDisplayName: "Kipare"
}, {
    id: "gil",
    displayName: "kiribati"
}, {
    id: "kiu",
    displayName: "kirmanjki"
}, {
    id: "rwk",
    displayName: "rwa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "shambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "swahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "kingwana",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "lzh",
    displayName: "klassinen kiina"
}, {
    id: "nwc",
    displayName: "klassinen newari"
}, {
    id: "tlh",
    displayName: "klingon"
}, {
    id: "sms",
    displayName: "koltansaame"
}, {
    id: "bkm",
    displayName: "kom"
}, {
    id: "kv",
    displayName: "komi"
}, {
    id: "koi",
    displayName: "komipermjakki"
}, {
    id: "swb",
    displayName: "komori"
}, {
    id: "kg",
    displayName: "kongo"
}, {
    id: "bss",
    displayName: "koose"
}, {
    id: "cop",
    displayName: "kopti"
}, {
    id: "co",
    displayName: "korsika"
}, {
    id: "kos",
    displayName: "kosrae"
}, {
    id: "avk",
    displayName: "kotava"
}, {
    id: "khq",
    displayName: "koyra chiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "koyraboro senni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "kpe",
    displayName: "kpelle"
}, {
    id: "mfe",
    displayName: "morisyen",
    nativeDisplayName: "kreol morisien"
}, {
    id: "crh",
    displayName: "krimintataari"
}, {
    id: "kri",
    displayName: "krio"
}, {
    id: "kj",
    displayName: "kuanjama"
}, {
    id: "kum",
    displayName: "kumykki"
}, {
    id: "ku",
    displayName: "kurdi"
}, {
    id: "kru",
    displayName: "kurukh"
}, {
    id: "kut",
    displayName: "kutenai"
}, {
    id: "nmg",
    displayName: "kwasio",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ksh",
    displayName: "kölsch",
    nativeDisplayName: "Kölsch"
}, {
    id: "ebu",
    displayName: "embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "lango",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "quc",
    displayName: "kʼicheʼ"
}, {
    id: "lad",
    displayName: "ladino"
}, {
    id: "lah",
    displayName: "lahnda"
}, {
    id: "lkt",
    displayName: "lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lam",
    displayName: "lamba"
}, {
    id: "ltg",
    displayName: "latgalli"
}, {
    id: "la",
    displayName: "latina"
}, {
    id: "lv",
    displayName: "latvia",
    nativeDisplayName: "latviešu"
}, {
    id: "lzz",
    displayName: "lazi"
}, {
    id: "to",
    displayName: "tonga",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lez",
    displayName: "lezgi"
}, {
    id: "lt",
    displayName: "liettua",
    nativeDisplayName: "lietuvių"
}, {
    id: "lij",
    displayName: "liguuri"
}, {
    id: "liv",
    displayName: "liivi"
}, {
    id: "li",
    displayName: "limburg"
}, {
    id: "lfn",
    displayName: "lingua franca nova"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "jbo",
    displayName: "lojban"
}, {
    id: "lmo",
    displayName: "lombardi"
}, {
    id: "loz",
    displayName: "lozi"
}, {
    id: "lg",
    displayName: "ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "luiseño"
}, {
    id: "lua",
    displayName: "luluanluba"
}, {
    id: "luy",
    displayName: "luhya",
    nativeDisplayName: "Luluhia"
}, {
    id: "lun",
    displayName: "lunda"
}, {
    id: "lus",
    displayName: "lusai"
}, {
    id: "smj",
    displayName: "luulajansaame"
}, {
    id: "bgn",
    displayName: "länsibelutši"
}, {
    id: "vls",
    displayName: "länsiflaami"
}, {
    id: "lb",
    displayName: "luxemburg",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "maasai",
    nativeDisplayName: "Maa"
}, {
    id: "mde",
    displayName: "maba"
}, {
    id: "mad",
    displayName: "madura"
}, {
    id: "maf",
    displayName: "mafa"
}, {
    id: "mag",
    displayName: "magahi"
}, {
    id: "hu",
    displayName: "unkari",
    nativeDisplayName: "magyar"
}, {
    id: "vmf",
    displayName: "maininfrankki"
}, {
    id: "mai",
    displayName: "maithili"
}, {
    id: "mak",
    displayName: "makassar"
}, {
    id: "mgh",
    displayName: "makua-meetto",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "malagassi",
    nativeDisplayName: "Malagasy"
}, {
    id: "tog",
    displayName: "malawintonga"
}, {
    id: "mt",
    displayName: "malta",
    nativeDisplayName: "Malti"
}, {
    id: "mdr",
    displayName: "mandar"
}, {
    id: "man",
    displayName: "mandingo"
}, {
    id: "mni",
    displayName: "manipuri"
}, {
    id: "mnc",
    displayName: "mantšu"
}, {
    id: "mi",
    displayName: "maori"
}, {
    id: "arn",
    displayName: "mapudungun"
}, {
    id: "chm",
    displayName: "mari"
}, {
    id: "ary",
    displayName: "marokonarabia"
}, {
    id: "mh",
    displayName: "marshall"
}, {
    id: "mwr",
    displayName: "marwari"
}, {
    id: "umb",
    displayName: "mbundu"
}, {
    id: "byv",
    displayName: "medumba"
}, {
    id: "men",
    displayName: "mende"
}, {
    id: "mwv",
    displayName: "mentawai"
}, {
    id: "mgo",
    displayName: "meta’",
    nativeDisplayName: "metaʼ"
}, {
    id: "fit",
    displayName: "meänkieli"
}, {
    id: "mic",
    displayName: "micmac"
}, {
    id: "nan",
    displayName: "min nan -kiina"
}, {
    id: "min",
    displayName: "minangkabau"
}, {
    id: "xmf",
    displayName: "mingreli"
}, {
    id: "mwl",
    displayName: "mirandeesi"
}, {
    id: "moh",
    displayName: "mohawk"
}, {
    id: "mdf",
    displayName: "mokša"
}, {
    id: "ro_md",
    displayName: "moldova",
    nativeDisplayName: "moldovenească"
}, {
    id: "lol",
    displayName: "mongo"
}, {
    id: "mul",
    displayName: "monia kieliä"
}, {
    id: "mos",
    displayName: "mossi"
}, {
    id: "egy",
    displayName: "muinaisegypti"
}, {
    id: "ang",
    displayName: "muinaisenglanti"
}, {
    id: "sga",
    displayName: "muinaisiiri"
}, {
    id: "grc",
    displayName: "muinaiskreikka"
}, {
    id: "non",
    displayName: "muinaisnorja"
}, {
    id: "peo",
    displayName: "muinaispersia"
}, {
    id: "pro",
    displayName: "muinaisprovensaali"
}, {
    id: "fro",
    displayName: "muinaisranska"
}, {
    id: "syc",
    displayName: "muinaissyyria"
}, {
    id: "goh",
    displayName: "muinaisyläsaksa"
}, {
    id: "mua",
    displayName: "mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "mye",
    displayName: "myene"
}, {
    id: "und",
    displayName: "määrittämätön kieli"
}, {
    id: "nap",
    displayName: "napoli"
}, {
    id: "na",
    displayName: "nauru"
}, {
    id: "nv",
    displayName: "navajo"
}, {
    id: "jgo",
    displayName: "ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "ng",
    displayName: "ndonga"
}, {
    id: "nl",
    displayName: "hollanti",
    nativeDisplayName: "Nederlands"
}, {
    id: "new",
    displayName: "newari"
}, {
    id: "sba",
    displayName: "ngambay"
}, {
    id: "nia",
    displayName: "nias"
}, {
    id: "niu",
    displayName: "niue"
}, {
    id: "ny",
    displayName: "njandža"
}, {
    id: "nog",
    displayName: "nogai"
}, {
    id: "no",
    displayName: "norja"
}, {
    id: "nb",
    displayName: "norjan bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "kfo",
    displayName: "norsunluurannikonkoro"
}, {
    id: "nov",
    displayName: "novial"
}, {
    id: "yav",
    displayName: "yangben",
    nativeDisplayName: "nuasue"
}, {
    id: "nym",
    displayName: "nyamwezi"
}, {
    id: "nn",
    displayName: "norjan nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "nyo",
    displayName: "nyoro"
}, {
    id: "nzi",
    displayName: "nzima"
}, {
    id: "nqo",
    displayName: "n’ko"
}, {
    id: "oj",
    displayName: "odžibwa"
}, {
    id: "oc",
    displayName: "oksitaani"
}, {
    id: "xog",
    displayName: "soga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "osage"
}, {
    id: "ota",
    displayName: "osmani"
}, {
    id: "uz",
    displayName: "uzbekki",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pi",
    displayName: "paali"
}, {
    id: "pal",
    displayName: "pahlavi"
}, {
    id: "pau",
    displayName: "palau"
}, {
    id: "pam",
    displayName: "pampanga"
}, {
    id: "pag",
    displayName: "pangasinan"
}, {
    id: "pap",
    displayName: "papiamentu"
}, {
    id: "pdc",
    displayName: "pennsylvaniansaksa"
}, {
    id: "pfl",
    displayName: "pfaltsi"
}, {
    id: "pcd",
    displayName: "picardi"
}, {
    id: "pms",
    displayName: "piemonte"
}, {
    id: "pdt",
    displayName: "plautdietsch"
}, {
    id: "frr",
    displayName: "pohjoisfriisi"
}, {
    id: "nso",
    displayName: "pohjoissotho"
}, {
    id: "pon",
    displayName: "pohnpei"
}, {
    id: "pl",
    displayName: "puola",
    nativeDisplayName: "polski"
}, {
    id: "pnt",
    displayName: "pontoksenkreikka"
}, {
    id: "pt",
    displayName: "portugali",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "brasilianportugali",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "euroopanportugali",
    nativeDisplayName: "português europeu"
}, {
    id: "prg",
    displayName: "muinaispreussi",
    nativeDisplayName: "prūsiskan"
}, {
    id: "ff",
    displayName: "fulani",
    nativeDisplayName: "Pulaar"
}, {
    id: "raj",
    displayName: "radžastani"
}, {
    id: "rap",
    displayName: "rapanui"
}, {
    id: "rar",
    displayName: "rarotonga"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "rgn",
    displayName: "romagnoli"
}, {
    id: "rom",
    displayName: "romani"
}, {
    id: "ro",
    displayName: "romania",
    nativeDisplayName: "română"
}, {
    id: "rtm",
    displayName: "rotuma"
}, {
    id: "rug",
    displayName: "roviana"
}, {
    id: "cgg",
    displayName: "kiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "retoromaani",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "ketšua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "rue",
    displayName: "ruteeni"
}, {
    id: "ssy",
    displayName: "saho"
}, {
    id: "sam",
    displayName: "samarianaramea"
}, {
    id: "sm",
    displayName: "samoa"
}, {
    id: "sgs",
    displayName: "samogiitti"
}, {
    id: "sad",
    displayName: "sandawe"
}, {
    id: "sa",
    displayName: "sanskrit"
}, {
    id: "sat",
    displayName: "santali"
}, {
    id: "sc",
    displayName: "sardi"
}, {
    id: "sas",
    displayName: "sasak"
}, {
    id: "sdc",
    displayName: "sassarinsardi"
}, {
    id: "stq",
    displayName: "saterlandinfriisi"
}, {
    id: "saz",
    displayName: "sauraštri"
}, {
    id: "de_ch",
    displayName: "sveitsinyläsaksa",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "sveitsinsaksa",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "zea",
    displayName: "seelanti"
}, {
    id: "sly",
    displayName: "selayar"
}, {
    id: "sel",
    displayName: "selkuppi"
}, {
    id: "seh",
    displayName: "sena",
    nativeDisplayName: "sena"
}, {
    id: "see",
    displayName: "seneca"
}, {
    id: "sh",
    displayName: "serbokroaatti"
}, {
    id: "srr",
    displayName: "serer"
}, {
    id: "sei",
    displayName: "seri"
}, {
    id: "shn",
    displayName: "shan"
}, {
    id: "sq",
    displayName: "albania",
    nativeDisplayName: "shqip"
}, {
    id: "nnh",
    displayName: "ngiemboon",
    nativeDisplayName: "Shwóŋò ngiembɔɔn"
}, {
    id: "sid",
    displayName: "sidamo"
}, {
    id: "bla",
    displayName: "siksika"
}, {
    id: "sd",
    displayName: "sindhi"
}, {
    id: "scn",
    displayName: "sisilia"
}, {
    id: "sco",
    displayName: "skotti"
}, {
    id: "szl",
    displayName: "sleesia"
}, {
    id: "sli",
    displayName: "sleesiansaksa"
}, {
    id: "den",
    displayName: "slevi"
}, {
    id: "sk",
    displayName: "slovakki",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "sloveeni",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "sogdi"
}, {
    id: "snk",
    displayName: "soninke"
}, {
    id: "so",
    displayName: "somali",
    nativeDisplayName: "Soomaali"
}, {
    id: "srn",
    displayName: "sranan"
}, {
    id: "suk",
    displayName: "sukuma"
}, {
    id: "sux",
    displayName: "sumeri"
}, {
    id: "su",
    displayName: "sunda"
}, {
    id: "fi",
    displayName: "suomi",
    nativeDisplayName: "suomi"
}, {
    id: "sus",
    displayName: "susu"
}, {
    id: "sv",
    displayName: "ruotsi",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "swazi"
}, {
    id: "syr",
    displayName: "syyria"
}, {
    id: "sg",
    displayName: "sango",
    nativeDisplayName: "Sängö"
}, {
    id: "tg",
    displayName: "tadžikki"
}, {
    id: "tl",
    displayName: "tagalog"
}, {
    id: "ty",
    displayName: "tahiti"
}, {
    id: "tly",
    displayName: "tališi"
}, {
    id: "tzm",
    displayName: "keskiatlaksentamazight",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "tmh",
    displayName: "tamašek"
}, {
    id: "kab",
    displayName: "kabyyli",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "rif",
    displayName: "tarifit"
}, {
    id: "trv",
    displayName: "taroko"
}, {
    id: "twq",
    displayName: "tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "tataari"
}, {
    id: "ttt",
    displayName: "tati"
}, {
    id: "tem",
    displayName: "temne"
}, {
    id: "ter",
    displayName: "tereno"
}, {
    id: "tet",
    displayName: "tetum"
}, {
    id: "nus",
    displayName: "nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "tig",
    displayName: "tigre"
}, {
    id: "tiv",
    displayName: "tiv"
}, {
    id: "vi",
    displayName: "vietnam",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tli",
    displayName: "tlingit"
}, {
    id: "tpi",
    displayName: "tok-pisin"
}, {
    id: "tkl",
    displayName: "tokelau"
}, {
    id: "tkr",
    displayName: "tsahuri"
}, {
    id: "tsd",
    displayName: "tsakonia"
}, {
    id: "lu",
    displayName: "katanganluba",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tsi",
    displayName: "tsimši"
}, {
    id: "ts",
    displayName: "tsonga"
}, {
    id: "tn",
    displayName: "tswana"
}, {
    id: "tcy",
    displayName: "tulu"
}, {
    id: "tum",
    displayName: "tumbuka"
}, {
    id: "aeb",
    displayName: "tunisianarabia"
}, {
    id: "tru",
    displayName: "turojo"
}, {
    id: "tyv",
    displayName: "tuva"
}, {
    id: "tvl",
    displayName: "tuvalu"
}, {
    id: "tw",
    displayName: "twi"
}, {
    id: "kcg",
    displayName: "tyap"
}, {
    id: "tk",
    displayName: "turkmeeni",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "turkki",
    nativeDisplayName: "Türkçe"
}, {
    id: "shu",
    displayName: "tšadinarabia"
}, {
    id: "chg",
    displayName: "tšagatai"
}, {
    id: "ch",
    displayName: "tšamorro"
}, {
    id: "chb",
    displayName: "tšibtša"
}, {
    id: "cv",
    displayName: "tšuvassi"
}, {
    id: "udm",
    displayName: "udmurtti"
}, {
    id: "uga",
    displayName: "ugarit"
}, {
    id: "wa",
    displayName: "valloni"
}, {
    id: "arc",
    displayName: "valtakunnanaramea"
}, {
    id: "vot",
    displayName: "vatja"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "vec",
    displayName: "venetsia"
}, {
    id: "vep",
    displayName: "vepsä"
}, {
    id: "nl_be",
    displayName: "flaami",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "volapük",
    nativeDisplayName: "Volapük"
}, {
    id: "mrj",
    displayName: "vuorimari"
}, {
    id: "vro",
    displayName: "võro"
}, {
    id: "wae",
    displayName: "walser",
    nativeDisplayName: "Walser"
}, {
    id: "war",
    displayName: "waray"
}, {
    id: "wbp",
    displayName: "warlpiri"
}, {
    id: "was",
    displayName: "washo"
}, {
    id: "guc",
    displayName: "wayuu"
}, {
    id: "fy",
    displayName: "länsifriisi",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wal",
    displayName: "wolaitta"
}, {
    id: "wo",
    displayName: "wolof"
}, {
    id: "wuu",
    displayName: "wu-kiina"
}, {
    id: "xh",
    displayName: "xhosa"
}, {
    id: "hsn",
    displayName: "xiang-kiina"
}, {
    id: "ybb",
    displayName: "yemba"
}, {
    id: "zap",
    displayName: "zapoteekki"
}, {
    id: "dje",
    displayName: "djerma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "zaza"
}, {
    id: "zen",
    displayName: "zenaga"
}, {
    id: "za",
    displayName: "zhuang"
}, {
    id: "gbz",
    displayName: "zoroastrialaisdari"
}, {
    id: "zun",
    displayName: "zuni"
}, {
    id: "yo",
    displayName: "joruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islanti",
    nativeDisplayName: "íslenska"
}, {
    id: "yrl",
    displayName: "ñeengatú"
}, {
    id: "de_at",
    displayName: "itävallansaksa",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "tšekki",
    nativeDisplayName: "čeština"
}, {
    id: "bas",
    displayName: "basaa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "havaiji",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "kreikka",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "valkovenäjä",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bulgaria",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "osseetti",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "kirgiisi",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "makedonia",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongoli",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "tšetšeeni",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "venäjä",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "jakuutti",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "serbia",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ukraina",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "kirkkoslaavi",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "kazakki",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armenia",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "jiddiš",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "heprea",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uiguuri",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "arabia",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "yleisarabia",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "farsi",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "pohjoisluri",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "mazandarani",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "paštu",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "sorani",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "kašmiri",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepali",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "assami",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengali",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "pandžabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gudžarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "orija",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamili",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malajalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "sinhala",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "thai",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "lao",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tiibet",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "burma",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "georgia",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrinja",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amhara",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "khmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "vakioitu tamazight",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "tašelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "kiina",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japani",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "yksinkertaistettu kiina",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "kantoninkiina",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "perinteinen kiina",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "sichuanin-yi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "cherokee",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "korea",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Dupl",
    displayName: "Duployén pikakirjoitus"
}, {
    id: "Lisu",
    displayName: "Fraserin aakkoset"
}, {
    id: "Plrd",
    displayName: "Pollardin foneettinen"
}, {
    id: "Sgnw",
    displayName: "SignWriting"
}, {
    id: "Afak",
    displayName: "afaka"
}, {
    id: "Ahom",
    displayName: "ahom"
}, {
    id: "Hluw",
    displayName: "anatolialaiset hieroglyfit"
}, {
    id: "Arab",
    displayName: "arabialainen"
}, {
    id: "Armn",
    displayName: "armenialainen"
}, {
    id: "Avst",
    displayName: "avestalainen"
}, {
    id: "Bali",
    displayName: "balilainen"
}, {
    id: "Bamu",
    displayName: "bamum"
}, {
    id: "Bass",
    displayName: "bassa"
}, {
    id: "Batk",
    displayName: "batakilainen"
}, {
    id: "Beng",
    displayName: "bengalilainen"
}, {
    id: "Blis",
    displayName: "bliss-symbolit"
}, {
    id: "Bopo",
    displayName: "bopomofo"
}, {
    id: "Brah",
    displayName: "brahmi"
}, {
    id: "Brai",
    displayName: "braille-pistekirjoitus"
}, {
    id: "Bugi",
    displayName: "bugilainen"
}, {
    id: "Buhd",
    displayName: "buhidilainen"
}, {
    id: "Mymr",
    displayName: "burmalainen"
}, {
    id: "Cakm",
    displayName: "chakmalainen"
}, {
    id: "Cher",
    displayName: "cherokeelainen"
}, {
    id: "Cirt",
    displayName: "cirth"
}, {
    id: "Dsrt",
    displayName: "deseret"
}, {
    id: "Deva",
    displayName: "devanagari"
}, {
    id: "Jurc",
    displayName: "džurtšen"
}, {
    id: "Egyd",
    displayName: "egyptiläinen demoottinen"
}, {
    id: "Egyh",
    displayName: "egyptiläinen hieraattinen"
}, {
    id: "Egyp",
    displayName: "egyptiläiset hieroglyfit"
}, {
    id: "Elba",
    displayName: "elbasanilainen"
}, {
    id: "Ethi",
    displayName: "etiopialainen"
}, {
    id: "Phnx",
    displayName: "foinikialainen"
}, {
    id: "Geor",
    displayName: "georgialainen"
}, {
    id: "Glag",
    displayName: "glagoliittinen"
}, {
    id: "Goth",
    displayName: "goottilainen"
}, {
    id: "Gran",
    displayName: "grantha"
}, {
    id: "Gujr",
    displayName: "gudžaratilainen"
}, {
    id: "Guru",
    displayName: "gurmukhi"
}, {
    id: "Hang",
    displayName: "hangul"
}, {
    id: "Hano",
    displayName: "hanunoolainen"
}, {
    id: "Hatr",
    displayName: "hatralainen"
}, {
    id: "Hebr",
    displayName: "heprealainen"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Hrkt",
    displayName: "hiragana tai katakana"
}, {
    id: "Inds",
    displayName: "induslainen"
}, {
    id: "Java",
    displayName: "jaavalainen"
}, {
    id: "Jpan",
    displayName: "japanilainen"
}, {
    id: "Cari",
    displayName: "kaarialainen"
}, {
    id: "Kthi",
    displayName: "kaithi"
}, {
    id: "Cans",
    displayName: "kanadalaisten alkuperäiskansojen yhtenäistetty tavukirjoitus"
}, {
    id: "Knda",
    displayName: "kannadalainen"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Aghb",
    displayName: "kaukasianalbanialainen"
}, {
    id: "Kali",
    displayName: "kayah li"
}, {
    id: "Khar",
    displayName: "kharosthi"
}, {
    id: "Khmr",
    displayName: "khmeriläinen"
}, {
    id: "Khoj",
    displayName: "khojki"
}, {
    id: "Sind",
    displayName: "khudabadi"
}, {
    id: "Hani",
    displayName: "kiinalainen han"
}, {
    id: "Phlv",
    displayName: "kirjapahlavilainen"
}, {
    id: "Zxxx",
    displayName: "kirjoittamaton"
}, {
    id: "Copt",
    displayName: "koptilainen"
}, {
    id: "Kore",
    displayName: "korealainen"
}, {
    id: "Kpel",
    displayName: "kpelle"
}, {
    id: "Grek",
    displayName: "kreikkalainen"
}, {
    id: "Cyrl",
    displayName: "kyrillinen"
}, {
    id: "Cyrs",
    displayName: "kyrillinen muinaiskirkkoslaavimuunnelma"
}, {
    id: "Lana",
    displayName: "lanna"
}, {
    id: "Laoo",
    displayName: "laolainen"
}, {
    id: "Latn",
    displayName: "latinalainen"
}, {
    id: "Latf",
    displayName: "latinalainen fraktuuramuunnelma"
}, {
    id: "Latg",
    displayName: "latinalainen gaelimuunnelma"
}, {
    id: "Lepc",
    displayName: "lepchalainen"
}, {
    id: "Limb",
    displayName: "limbulainen"
}, {
    id: "Lina",
    displayName: "lineaari-A"
}, {
    id: "Linb",
    displayName: "lineaari-B"
}, {
    id: "Loma",
    displayName: "loma"
}, {
    id: "Lydi",
    displayName: "lyydialainen"
}, {
    id: "Lyci",
    displayName: "lyykialainen"
}, {
    id: "Mahj",
    displayName: "mahajanilainen"
}, {
    id: "Mlym",
    displayName: "malajalamilainen"
}, {
    id: "Mand",
    displayName: "mandealainen"
}, {
    id: "Mani",
    displayName: "manikealainen"
}, {
    id: "Zmth",
    displayName: "matemaattinen"
}, {
    id: "Maya",
    displayName: "maya-hieroglyfit"
}, {
    id: "Mtei",
    displayName: "meitei"
}, {
    id: "Mend",
    displayName: "mende"
}, {
    id: "Mero",
    displayName: "meroiittinen"
}, {
    id: "Merc",
    displayName: "meroiittinen kursiivikirjoitus"
}, {
    id: "Modi",
    displayName: "modi-aakkoset"
}, {
    id: "Mong",
    displayName: "mongolilainen"
}, {
    id: "Moon",
    displayName: "moon-kohokirjoitus"
}, {
    id: "Mroo",
    displayName: "mro"
}, {
    id: "Sarb",
    displayName: "muinaiseteläarabialainen"
}, {
    id: "Geok",
    displayName: "muinaisgeorgialainen"
}, {
    id: "Ital",
    displayName: "muinaisitalialainen"
}, {
    id: "Cprt",
    displayName: "muinaiskyproslainen"
}, {
    id: "Perm",
    displayName: "muinaispermiläinen"
}, {
    id: "Xpeo",
    displayName: "muinaispersialainen"
}, {
    id: "Narb",
    displayName: "muinaispohjoisarabialainen"
}, {
    id: "Hung",
    displayName: "muinaisunkarilainen"
}, {
    id: "Mult",
    displayName: "multanilainen"
}, {
    id: "Zyyy",
    displayName: "määrittämätön"
}, {
    id: "Nbat",
    displayName: "nabatealainen"
}, {
    id: "Nkgb",
    displayName: "naxi geba"
}, {
    id: "Visp",
    displayName: "näkyvä puhe"
}, {
    id: "Nshu",
    displayName: "nüshu"
}, {
    id: "Nkoo",
    displayName: "n’ko"
}, {
    id: "Ogam",
    displayName: "ogam"
}, {
    id: "Olck",
    displayName: "ol chiki"
}, {
    id: "Orya",
    displayName: "orijalainen"
}, {
    id: "Orkh",
    displayName: "orkhon"
}, {
    id: "Osma",
    displayName: "osmanjalainen"
}, {
    id: "Hmng",
    displayName: "pahawh hmong"
}, {
    id: "Palm",
    displayName: "palmyralainen"
}, {
    id: "Hant",
    displayName: "perinteinen han"
}, {
    id: "Zinh",
    displayName: "peritty"
}, {
    id: "Phag",
    displayName: "phags-pa"
}, {
    id: "Phli",
    displayName: "piirtokirjoituspahlavilainen"
}, {
    id: "Prti",
    displayName: "piirtokirjoitusparthialainen"
}, {
    id: "Phlp",
    displayName: "psalttaripahlavilainen"
}, {
    id: "Rjng",
    displayName: "rejang"
}, {
    id: "Runr",
    displayName: "riimukirjoitus"
}, {
    id: "Roro",
    displayName: "rongorongo"
}, {
    id: "Samr",
    displayName: "samarianaramealainen"
}, {
    id: "Sara",
    displayName: "sarati"
}, {
    id: "Saur",
    displayName: "saurashtra"
}, {
    id: "Shaw",
    displayName: "shaw’lainen"
}, {
    id: "Sidd",
    displayName: "siddham-tavukirjoitus"
}, {
    id: "Sinh",
    displayName: "sinhalilainen"
}, {
    id: "Sora",
    displayName: "sorang sompeng"
}, {
    id: "Xsux",
    displayName: "sumerilais-akkadilainen nuolenpääkirjoitus"
}, {
    id: "Sund",
    displayName: "sundalainen"
}, {
    id: "Sylo",
    displayName: "syloti nagri"
}, {
    id: "Zsym",
    displayName: "symbolit"
}, {
    id: "Syrc",
    displayName: "syyrialainen"
}, {
    id: "Syre",
    displayName: "syyrialainen estrangelo-muunnelma"
}, {
    id: "Syrn",
    displayName: "syyrialainen itäinen muunnelma"
}, {
    id: "Syrj",
    displayName: "syyrialainen läntinen muunnelma"
}, {
    id: "Tglg",
    displayName: "tagalogilainen"
}, {
    id: "Tagb",
    displayName: "tagbanwalainen"
}, {
    id: "Tavt",
    displayName: "tai viet"
}, {
    id: "Tale",
    displayName: "tailelainen"
}, {
    id: "Takr",
    displayName: "takri"
}, {
    id: "Taml",
    displayName: "tamililainen"
}, {
    id: "Tang",
    displayName: "tangut"
}, {
    id: "Telu",
    displayName: "telugulainen"
}, {
    id: "Teng",
    displayName: "tengwar"
}, {
    id: "Thaa",
    displayName: "thaana"
}, {
    id: "Thai",
    displayName: "thailainen"
}, {
    id: "Tfng",
    displayName: "tifinagh"
}, {
    id: "Tibt",
    displayName: "tiibetiläinen"
}, {
    id: "Tirh",
    displayName: "tirhuta"
}, {
    id: "Zzzz",
    displayName: "tuntematon kirjoitusjärjestelmä"
}, {
    id: "Cham",
    displayName: "tšamilainen"
}, {
    id: "Ugar",
    displayName: "ugaritilainen"
}, {
    id: "Talu",
    displayName: "uusi tailuelainen"
}, {
    id: "Vaii",
    displayName: "vailainen"
}, {
    id: "Armi",
    displayName: "valtakunnanaramealainen"
}, {
    id: "Wara",
    displayName: "varang kshiti"
}, {
    id: "Wole",
    displayName: "woleai"
}, {
    id: "Yiii",
    displayName: "yiläinen"
}, {
    id: "Hans",
    displayName: "yksinkertaistettu han"
}, {
    id: "Pauc",
    displayName: "zotuallai"
}, {
    id: "Shrd",
    displayName: "šarada"
} ];

inter.currencies = [ {
    id: "AFN",
    displayName: "Afganistanin afgaani",
    symbol: "AFN",
    one: "Afganistanin afgaani",
    other: "Afganistanin afgaania"
}, {
    id: "AFA",
    displayName: "Afganistanin afgaani (1927–2002)",
    symbol: "AFA",
    one: "Afganistanin afgaani (1927–2002)",
    other: "Afganistanin afgaania (1927–2002)"
}, {
    id: "ANG",
    displayName: "Alankomaiden Antillien guldeni",
    symbol: "ANG",
    one: "Alankomaiden Antillien guldeni",
    other: "Alankomaiden Antillien guldenia"
}, {
    id: "NLG",
    displayName: "Alankomaiden guldeni",
    symbol: "NLG",
    one: "Alankomaiden guldeni",
    other: "Alankomaiden guldenia"
}, {
    id: "ALL",
    displayName: "Albanian lek",
    symbol: "ALL",
    one: "Albanian lek",
    other: "Albanian lekiä"
}, {
    id: "ALK",
    displayName: "Albanian lek (1946–1965)",
    symbol: "ALK",
    one: "Albanian lek (1946–1965)",
    other: "Albanian lekiä (1946–1965)"
}, {
    id: "DZD",
    displayName: "Algerian dinaari",
    symbol: "DZD",
    one: "Algerian dinaari",
    other: "Algerian dinaaria"
}, {
    id: "ADP",
    displayName: "Andorran peseta",
    symbol: "ADP",
    one: "Andorran peseta",
    other: "Andorran pesetaa"
}, {
    id: "AOA",
    displayName: "Angolan kwanza",
    symbol: "AOA",
    one: "Angolan kwanza",
    other: "Angolan kwanzaa"
}, {
    id: "AOK",
    displayName: "Angolan kwanza (1977–1991)",
    symbol: "AOK",
    one: "Angolan kwanza (1977–1990)",
    other: "Angolan kwanzaa (1977–1990)"
}, {
    id: "AOR",
    displayName: "Angolan kwanza reajustado (1995–1999)",
    symbol: "AOR",
    one: "Angolan kwanza reajustado (1995–1999)",
    other: "Angolan kwanza reajustadoa (1995–1999)"
}, {
    id: "AON",
    displayName: "Angolan uusi kwanza (1990–2000)",
    symbol: "AON",
    one: "Angolan uusi kwanza (1990–2000)",
    other: "Angolan uutta kwanzaa (1990–2000)"
}, {
    id: "AED",
    displayName: "Arabiemiirikuntien dirhami",
    symbol: "AED",
    one: "Arabiemiirikuntien dirhami",
    other: "Arabiemiirikuntien dirhamia"
}, {
    id: "ARA",
    displayName: "Argentiinan austral",
    symbol: "ARA",
    one: "Argentiinan austral",
    other: "Argentiinan australia"
}, {
    id: "ARL",
    displayName: "Argentiinan ley-peso (1970–1983)",
    symbol: "ARL",
    one: "Argentiinan ley-peso (1970–1983)",
    other: "Argentiinan ley-pesoa (1970–1983)"
}, {
    id: "ARS",
    displayName: "Argentiinan peso",
    symbol: "ARS",
    one: "Argentiinan peso",
    other: "Argentiinan pesoa"
}, {
    id: "ARM",
    displayName: "Argentiinan peso (1881–1970)",
    symbol: "ARM",
    one: "Argentiinan peso (1881–1970)",
    other: "Argentiinan pesoa (1881–1970)"
}, {
    id: "ARP",
    displayName: "Argentiinan peso (1983–1985)",
    symbol: "ARP",
    one: "Argentiinan peso (1983–1985)",
    other: "Argentiinan pesoa (1983–1985)"
}, {
    id: "AMD",
    displayName: "Armenian dram",
    symbol: "AMD",
    one: "Armenian dram",
    other: "Armenian dramia"
}, {
    id: "AWG",
    displayName: "Aruban floriini",
    symbol: "AWG",
    one: "Aruban floriini",
    other: "Aruban floriinia"
}, {
    id: "AUD",
    displayName: "Australian dollari",
    symbol: "AUD",
    one: "Australian dollari",
    other: "Australian dollaria"
}, {
    id: "AZN",
    displayName: "Azerbaidžanin manat",
    symbol: "AZN",
    one: "Azerbaidžanin manat",
    other: "Azerbaidžanin manatia"
}, {
    id: "AZM",
    displayName: "Azerbaidžanin manat (1993–2006)",
    symbol: "AZM",
    one: "Azerbaidžanin manat (1993–2006)",
    other: "Azerbaidžanin manatia (1993–2006)"
}, {
    id: "BSD",
    displayName: "Bahaman dollari",
    symbol: "BSD",
    one: "Bahaman dollari",
    other: "Bahaman dollaria"
}, {
    id: "BHD",
    displayName: "Bahrainin dinaari",
    symbol: "BHD",
    one: "Bahrainin dinaari",
    other: "Bahrainin dinaaria"
}, {
    id: "BDT",
    displayName: "Bangladeshin taka",
    symbol: "BDT",
    one: "Bangladeshin taka",
    other: "Bangladeshin takaa"
}, {
    id: "BBD",
    displayName: "Barbadosin dollari",
    symbol: "BBD",
    one: "Barbadosin dollari",
    other: "Barbadosin dollaria"
}, {
    id: "BEF",
    displayName: "Belgian frangi",
    symbol: "BEF",
    one: "Belgian frangi",
    other: "Belgian frangia"
}, {
    id: "BEL",
    displayName: "Belgian rahoitusfrangi",
    symbol: "BEL",
    one: "Belgian rahoitusfrangi",
    other: "Belgian rahoitusfrangia"
}, {
    id: "BEC",
    displayName: "Belgian vaihdettava frangi",
    symbol: "BEC",
    one: "Belgian vaihdettava frangi",
    other: "Belgian vaihdettavaa frangia"
}, {
    id: "BZD",
    displayName: "Belizen dollari",
    symbol: "BZD",
    one: "Belizen dollari",
    other: "Belizen dollaria"
}, {
    id: "BMD",
    displayName: "Bermudan dollari",
    symbol: "BMD",
    one: "Bermudan dollari",
    other: "Bermudan dollaria"
}, {
    id: "BTN",
    displayName: "Bhutanin ngultrum",
    symbol: "BTN",
    one: "Bhutanin ngultrum",
    other: "Bhutanin ngultrumia"
}, {
    id: "BOB",
    displayName: "Bolivian boliviano",
    symbol: "BOB",
    one: "Bolivian boliviano",
    other: "Bolivian bolivianoa"
}, {
    id: "BOL",
    displayName: "Bolivian boliviano (1863–1963)",
    symbol: "BOL",
    one: "Bolivian boliviano (1863–1963)",
    other: "Bolivian bolivianoa (1863–1963)"
}, {
    id: "BOV",
    displayName: "Bolivian mvdol",
    symbol: "BOV",
    one: "Bolivian mvdol",
    other: "Bolivian mvdol’ia"
}, {
    id: "BOP",
    displayName: "Bolivian peso",
    symbol: "BOP",
    one: "Bolivian peso",
    other: "Bolivian pesoa"
}, {
    id: "BAD",
    displayName: "Bosnia-Hertsegovinan dinaari (1992–1994)",
    symbol: "BAD",
    one: "Bosnia-Hertsegovinan dinaari (1992–1994)",
    other: "Bosnia-Hertsegovinan dinaaria (1992–1994)"
}, {
    id: "BAN",
    displayName: "Bosnia-Hertsegovinan uusi dinaari (1994–1997)",
    symbol: "BAN",
    one: "Bosnia-Hertsegovinan uusi dinaari (1994–1997)",
    other: "Bosnia-Hertsegovinan uutta dinaaria (1994–1997)"
}, {
    id: "BAM",
    displayName: "Bosnia-Hertsegovinan vaihdettava markka",
    symbol: "BAM",
    one: "Bosnia-Hertsegovinan vaihdettava markka",
    other: "Bosnia-Hertsegovinan vaihdettavaa markkaa"
}, {
    id: "BWP",
    displayName: "Botswanan pula",
    symbol: "BWP",
    one: "Botswanan pula",
    other: "Botswanan pulaa"
}, {
    id: "BRC",
    displayName: "Brasilian cruzado (1986–1989)",
    symbol: "BRC",
    one: "Brasilian cruzado (1986–1989)",
    other: "Brasilian cruzadoa (1986–1989)"
}, {
    id: "BRZ",
    displayName: "Brasilian cruzeiro (1942–1967)",
    symbol: "BRZ",
    one: "Brasilian cruzeiro (1942–1967)",
    other: "Brasilian cruzeiroa (1942–1967)"
}, {
    id: "BRE",
    displayName: "Brasilian cruzeiro (1990–1993)",
    symbol: "BRE",
    one: "Brasilian cruzeiro (1990–1993)",
    other: "Brasilian cruzeiroa (1990–1993)"
}, {
    id: "BRR",
    displayName: "Brasilian cruzeiro (1993–1994)",
    symbol: "BRR",
    one: "Brasilian cruzeiro (1993–1994)",
    other: "Brasilian cruzeiroa (1993–1994)"
}, {
    id: "BRL",
    displayName: "Brasilian real",
    symbol: "BRL",
    one: "Brasilian real",
    other: "Brasilian realia"
}, {
    id: "BRN",
    displayName: "Brasilian uusi cruzado (1989–1990)",
    symbol: "BRN",
    one: "Brasilian uusi cruzado (1989–1990)",
    other: "Brasilian uutta cruzadoa (1989–1990)"
}, {
    id: "BRB",
    displayName: "Brasilian uusi cruzeiro (1967–1986)",
    symbol: "BRB",
    one: "Brasilian uusi cruzeiro (1967–1986)",
    other: "Brasilian uutta cruzeiroa (1967–1986)"
}, {
    id: "BND",
    displayName: "Brunein dollari",
    symbol: "BND",
    one: "Brunein dollari",
    other: "Brunein dollaria"
}, {
    id: "BGL",
    displayName: "Bulgarian kova lev",
    symbol: "BGL",
    one: "Bulgarian kova lev",
    other: "Bulgarian kovaa leviä"
}, {
    id: "BGN",
    displayName: "Bulgarian lev",
    symbol: "BGN",
    one: "Bulgarian lev",
    other: "Bulgarian leviä"
}, {
    id: "BGO",
    displayName: "Bulgarian lev (1879–1952)",
    symbol: "BGO",
    one: "Bulgarian lev (1879–1952)",
    other: "Bulgarian leviä (1879–1952)"
}, {
    id: "BGM",
    displayName: "Bulgarian sosialistinen lev",
    symbol: "BGM",
    one: "Bulgarian sosialistinen lev",
    other: "Bulgarian sosialistista leviä"
}, {
    id: "BUK",
    displayName: "Burman kyat",
    symbol: "BUK",
    one: "Burman kyat",
    other: "Burman kyatia"
}, {
    id: "BIF",
    displayName: "Burundin frangi",
    symbol: "BIF",
    one: "Burundin frangi",
    other: "Burundin frangia"
}, {
    id: "XOF",
    displayName: "CFA-frangi BCEAO",
    symbol: "CFA",
    one: "CFA-frangi BCEAO",
    other: "CFA-frangia BCEAO"
}, {
    id: "XAF",
    displayName: "CFA-frangi BEAC",
    symbol: "FCFA",
    one: "CFA-frangi BEAC",
    other: "CFA-frangia BEAC"
}, {
    id: "XPF",
    displayName: "CFP-frangi",
    symbol: "XPF",
    one: "CFP-frangi",
    other: "CFP-frangia"
}, {
    id: "KYD",
    displayName: "Caymansaarten dollari",
    symbol: "KYD",
    one: "Caymansaarten dollari",
    other: "Caymansaarten dollaria"
}, {
    id: "CLE",
    displayName: "Chilen escudo",
    symbol: "CLE",
    one: "Chilen escudo",
    other: "Chilen escudoa"
}, {
    id: "CLP",
    displayName: "Chilen peso",
    symbol: "CLP",
    one: "Chilen peso",
    other: "Chilen pesoa"
}, {
    id: "CLF",
    displayName: "Chilen unidades de fomento",
    symbol: "CLF",
    one: "Chilen unidades de fomento",
    other: "Chilen unidades de fomentoa"
}, {
    id: "CRC",
    displayName: "Costa Rican colon",
    symbol: "CRC",
    one: "Costa Rican colon",
    other: "Costa Rican colonia"
}, {
    id: "DJF",
    displayName: "Djiboutin frangi",
    symbol: "DJF",
    one: "Djiboutin frangi",
    other: "Djiboutin frangia"
}, {
    id: "DOP",
    displayName: "Dominikaanisen tasavallan peso",
    symbol: "DOP",
    one: "Dominikaanisen tasavallan peso",
    other: "Dominikaanisen tasavallan pesoa"
}, {
    id: "XBC",
    displayName: "EUA (XBC)",
    symbol: "XBC",
    one: "EUA (XBC)",
    other: "EUA’ta (XBC)"
}, {
    id: "XBD",
    displayName: "EUA (XBD)",
    symbol: "XBD",
    one: "EUA (XBD)",
    other: "EUA’ta (XBD)"
}, {
    id: "XBA",
    displayName: "EURCO",
    symbol: "XBA",
    one: "EURCO",
    other: "EURCO’a"
}, {
    id: "ECV",
    displayName: "Ecuadorin UVC",
    symbol: "ECV",
    one: "Ecuadorin UVC",
    other: "Ecuadorin UVC’ta"
}, {
    id: "ECS",
    displayName: "Ecuadorin sucre",
    symbol: "ECS",
    one: "Ecuadorin sucre",
    other: "Ecuadorin sucrea"
}, {
    id: "EGP",
    displayName: "Egyptin punta",
    symbol: "EGP",
    one: "Egyptin punta",
    other: "Egyptin puntaa"
}, {
    id: "SVC",
    displayName: "El Salvadorin colon",
    symbol: "SVC",
    one: "El Salvadorin colon",
    other: "El Salvadorin colonia"
}, {
    id: "GBP",
    displayName: "Englannin punta",
    symbol: "£",
    one: "Englannin punta",
    other: "Englannin puntaa"
}, {
    id: "ERN",
    displayName: "Eritrean nakfa",
    symbol: "ERN",
    one: "Eritrean nakfa",
    other: "Eritrean nakfaa"
}, {
    id: "ESP",
    displayName: "Espanjan peseta",
    symbol: "ESP",
    one: "Espanjan peseta",
    other: "Espanjan pesetaa"
}, {
    id: "ESA",
    displayName: "Espanjan peseta (A–tili)",
    symbol: "ESA",
    one: "Espanjan peseta (A–tili)",
    other: "Espanjan pesetaa (A–tili)"
}, {
    id: "ESB",
    displayName: "Espanjan peseta (vaihdettava tili)",
    symbol: "ESB",
    one: "Espanjan peseta (vaihdettava tili)",
    other: "Espanjan pesetaa (vaihdettava tili)"
}, {
    id: "ZAL",
    displayName: "Etelä-Afrikan rahoitusrandi",
    symbol: "ZAL",
    one: "Etelä-Afrikan rahoitusrandi",
    other: "Etelä-Afrikan rahoitusrandia"
}, {
    id: "ZAR",
    displayName: "Etelä-Afrikan randi",
    symbol: "ZAR",
    one: "Etelä-Afrikan randi",
    other: "Etelä-Afrikan randia"
}, {
    id: "KRH",
    displayName: "Etelä-Korean hwan (1953–1962)",
    symbol: "KRH",
    one: "Etelä-Korean hwan (1953–1962)",
    other: "Etelä-Korean hwania (1953–1962)"
}, {
    id: "KRW",
    displayName: "Etelä-Korean won",
    symbol: "KRW",
    one: "Etelä-Korean won",
    other: "Etelä-Korean wonia"
}, {
    id: "KRO",
    displayName: "Etelä-Korean won (1945–1953)",
    symbol: "KRO",
    one: "Etelä-Korean won (1945–1953)",
    other: "Etelä-Korean wonia (1945–1953)"
}, {
    id: "SSP",
    displayName: "Etelä-Sudanin punta",
    symbol: "SSP",
    one: "Etelä-Sudanin punta",
    other: "Etelä-Sudanin puntaa"
}, {
    id: "ETB",
    displayName: "Etiopian birr",
    symbol: "ETB",
    one: "Etiopian birr",
    other: "Etiopian birriä"
}, {
    id: "XBB",
    displayName: "Euroopan rahayksikkö (EMU)",
    symbol: "XBB",
    one: "Euroopan rahayksikkö (EMU)",
    other: "Euroopan rahayksikköä (EMU)"
}, {
    id: "XEU",
    displayName: "Euroopan valuuttayksikkö (ECU)",
    symbol: "XEU",
    one: "Euroopan valuuttayksikkö (ECU)",
    other: "Euroopan valuuttayksikköä (ECU)"
}, {
    id: "FKP",
    displayName: "Falklandinsaarten punta",
    symbol: "FKP",
    one: "Falklandinsaarten punta",
    other: "Falklandinsaarten puntaa"
}, {
    id: "FJD",
    displayName: "Fidžin dollari",
    symbol: "FJD",
    one: "Fidžin dollari",
    other: "Fidžin dollaria"
}, {
    id: "PHP",
    displayName: "Filippiinien peso",
    symbol: "PHP",
    one: "Filippiinien peso",
    other: "Filippiinien pesoa"
}, {
    id: "GMD",
    displayName: "Gambian dalasi",
    symbol: "GMD",
    one: "Gambian dalasi",
    other: "Gambian dalasia"
}, {
    id: "GEK",
    displayName: "Georgian kuponkilari",
    symbol: "GEK",
    one: "Georgian kuponkilari",
    other: "Georgian kuponkilaria"
}, {
    id: "GEL",
    displayName: "Georgian lari",
    symbol: "GEL",
    one: "Georgian lari",
    other: "Georgian laria"
}, {
    id: "GHS",
    displayName: "Ghanan cedi",
    symbol: "GHS",
    one: "Ghanan cedi",
    other: "Ghanan cediä"
}, {
    id: "GHC",
    displayName: "Ghanan cedi (1979–2007)",
    symbol: "GHC",
    one: "Ghanan cedi (1979–2007)",
    other: "Ghanan cediä (1979–2007)"
}, {
    id: "GIP",
    displayName: "Gibraltarin punta",
    symbol: "GIP",
    one: "Gibraltarin punta",
    other: "Gibraltarin puntaa"
}, {
    id: "GTQ",
    displayName: "Guatemalan quetzal",
    symbol: "GTQ",
    one: "Guatemalan quetzal",
    other: "Guatemalan quetzalia"
}, {
    id: "GWP",
    displayName: "Guinea-Bissaun peso",
    symbol: "GWP",
    one: "Guinea-Bissaun peso",
    other: "Guinea-Bissaun pesoa"
}, {
    id: "GNF",
    displayName: "Guinean frangi",
    symbol: "GNF",
    one: "Guinean frangi",
    other: "Guinean frangia"
}, {
    id: "GNS",
    displayName: "Guinean syli",
    symbol: "GNS",
    one: "Guinean syli",
    other: "Guinean syliä"
}, {
    id: "GYD",
    displayName: "Guyanan dollari",
    symbol: "GYD",
    one: "Guyanan dollari",
    other: "Guyanan dollaria"
}, {
    id: "HTG",
    displayName: "Haitin gourde",
    symbol: "HTG",
    one: "Haitin gourde",
    other: "Haitin gourdea"
}, {
    id: "HNL",
    displayName: "Hondurasin lempira",
    symbol: "HNL",
    one: "Hondurasin lempira",
    other: "Hondurasin lempiraa"
}, {
    id: "HKD",
    displayName: "Hongkongin dollari",
    symbol: "HKD",
    one: "Hongkongin dollari",
    other: "Hongkongin dollaria"
}, {
    id: "IDR",
    displayName: "Indonesian rupia",
    symbol: "IDR",
    one: "Indonesian rupia",
    other: "Indonesian rupiaa"
}, {
    id: "INR",
    displayName: "Intian rupia",
    symbol: "INR",
    one: "Intian rupia",
    other: "Intian rupiaa"
}, {
    id: "IQD",
    displayName: "Irakin dinaari",
    symbol: "IQD",
    one: "Irakin dinaari",
    other: "Irakin dinaaria"
}, {
    id: "IRR",
    displayName: "Iranin rial",
    symbol: "IRR",
    one: "Iranin rial",
    other: "Iranin rialia"
}, {
    id: "IEP",
    displayName: "Irlannin punta",
    symbol: "IEP",
    one: "Irlannin punta",
    other: "Irlannin puntaa"
}, {
    id: "ISK",
    displayName: "Islannin kruunu",
    symbol: "ISK",
    one: "Islannin kruunu",
    other: "Islannin kruunua"
}, {
    id: "ISJ",
    displayName: "Islannin kruunu (1918–1981)",
    symbol: "ISJ",
    one: "Islannin kruunu (1918–1981)",
    other: "Islannin kruunua (1918–1981)"
}, {
    id: "ILP",
    displayName: "Israelin punta",
    symbol: "ILP",
    one: "Israelin punta",
    other: "Israelin puntaa"
}, {
    id: "ILR",
    displayName: "Israelin sekeli (1980–1985)",
    symbol: "ILR",
    one: "Israelin sekeli (1980–1985)",
    other: "Israelin sekeliä (1980–1985)"
}, {
    id: "ILS",
    displayName: "Israelin uusi sekeli",
    symbol: "ILS",
    one: "Israelin uusi sekeli",
    other: "Israelin uutta sekeliä"
}, {
    id: "ITL",
    displayName: "Italian liira",
    symbol: "ITL",
    one: "Italian liira",
    other: "Italian liiraa"
}, {
    id: "XCD",
    displayName: "Itä-Karibian dollari",
    symbol: "XCD",
    one: "Itä-Karibian dollari",
    other: "Itä-Karibian dollaria"
}, {
    id: "DDM",
    displayName: "Itä-Saksan markka",
    symbol: "DDM",
    one: "Itä-Saksan markka",
    other: "Itä-Saksan markkaa"
}, {
    id: "ATS",
    displayName: "Itävallan šillinki",
    symbol: "ATS",
    one: "Itävallan šillinki",
    other: "Itävallan šillinkiä"
}, {
    id: "JMD",
    displayName: "Jamaikan dollari",
    symbol: "JMD",
    one: "Jamaikan dollari",
    other: "Jamaikan dollaria"
}, {
    id: "JPY",
    displayName: "Japanin jeni",
    symbol: "¥",
    one: "Japanin jeni",
    other: "Japanin jeniä"
}, {
    id: "YDD",
    displayName: "Jemenin dinaari",
    symbol: "YDD",
    one: "Jemenin dinaari",
    other: "Jemenin dinaaria"
}, {
    id: "YER",
    displayName: "Jemenin rial",
    symbol: "YER",
    one: "Jemenin rial",
    other: "Jemenin rialia"
}, {
    id: "JOD",
    displayName: "Jordanian dinaari",
    symbol: "JOD",
    one: "Jordanian dinaari",
    other: "Jordanian dinaaria"
}, {
    id: "YUD",
    displayName: "Jugoslavian kova dinaari (1966–1990)",
    symbol: "YUD",
    one: "Jugoslavian kova dinaari (1966–1990)",
    other: "Jugoslavian kovaa dinaaria (1966–1990)"
}, {
    id: "YUR",
    displayName: "Jugoslavian uudistettu dinaari (1992–1993)",
    symbol: "YUR",
    one: "Jugoslavian uudistettu dinaari (1992–1993)",
    other: "Jugoslavian uudistettua dinaaria (1992–1993)"
}, {
    id: "YUM",
    displayName: "Jugoslavian uusi dinaari (1994–2002)",
    symbol: "YUM",
    one: "Jugoslavian uusi dinaari (1994–2002)",
    other: "Jugoslavian uutta dinaaria (1994–2002)"
}, {
    id: "YUN",
    displayName: "Jugoslavian vaihdettava dinaari (1990–1992)",
    symbol: "YUN",
    one: "Jugoslavian vaihdettava dinaari (1990–1992)",
    other: "Jugoslavian vaihdettavaa dinaaria (1990–1992)"
}, {
    id: "KHR",
    displayName: "Kambodžan riel",
    symbol: "KHR",
    one: "Kambodžan riel",
    other: "Kambodžan rieliä"
}, {
    id: "CAD",
    displayName: "Kanadan dollari",
    symbol: "CAD",
    one: "Kanadan dollari",
    other: "Kanadan dollaria"
}, {
    id: "CVE",
    displayName: "Kap Verden escudo",
    symbol: "CVE",
    one: "Kap Verden escudo",
    other: "Kap Verden escudoa"
}, {
    id: "KZT",
    displayName: "Kazakstanin tenge",
    symbol: "KZT",
    one: "Kazakstanin tenge",
    other: "Kazakstanin tengeä"
}, {
    id: "KES",
    displayName: "Kenian šillinki",
    symbol: "KES",
    one: "Kenian šillinki",
    other: "Kenian šillinkiä"
}, {
    id: "CNX",
    displayName: "Kiinan kansanpankin dollari",
    symbol: "CNX",
    one: "Kiinan kansanpankin dollari",
    other: "Kiinan kansanpankin dollaria"
}, {
    id: "CNY",
    displayName: "Kiinan yuan",
    symbol: "CNY",
    one: "Kiinan yuan",
    other: "Kiinan yuania"
}, {
    id: "KGS",
    displayName: "Kirgisian som",
    symbol: "KGS",
    one: "Kirgisian som",
    other: "Kirgisian somia"
}, {
    id: "COP",
    displayName: "Kolumbian peso",
    symbol: "COP",
    one: "Kolumbian peso",
    other: "Kolumbian pesoa"
}, {
    id: "COU",
    displayName: "Kolumbian unidad de valor real",
    symbol: "COU",
    one: "Kolumbian unidad de valor real",
    other: "Kolumbian unidad de valor realia"
}, {
    id: "KMF",
    displayName: "Komorien frangi",
    symbol: "KMF",
    one: "Komorien frangi",
    other: "Komorien frangia"
}, {
    id: "CDF",
    displayName: "Kongon frangi",
    symbol: "CDF",
    one: "Kongon frangi",
    other: "Kongon frangia"
}, {
    id: "GRD",
    displayName: "Kreikan drakma",
    symbol: "GRD",
    one: "Kreikan drakma",
    other: "Kreikan drakmaa"
}, {
    id: "HRD",
    displayName: "Kroatian dinaari",
    symbol: "HRD",
    one: "Kroatian dinaari",
    other: "Kroatian dinaaria"
}, {
    id: "HRK",
    displayName: "Kroatian kuna",
    symbol: "HRK",
    one: "Kroatian kuna",
    other: "Kroatian kunaa"
}, {
    id: "CUP",
    displayName: "Kuuban peso",
    symbol: "CUP",
    one: "Kuuban peso",
    other: "Kuuban pesoa"
}, {
    id: "CUC",
    displayName: "Kuuban vaihdettava peso",
    symbol: "CUC",
    one: "Kuuban vaihdettava peso",
    other: "Kuuban vaihdettavaa pesoa"
}, {
    id: "KWD",
    displayName: "Kuwaitin dinaari",
    symbol: "KWD",
    one: "Kuwaitin dinaari",
    other: "Kuwaitin dinaaria"
}, {
    id: "CYP",
    displayName: "Kyproksen punta",
    symbol: "CYP",
    one: "Kyproksen punta",
    other: "Kyproksen puntaa"
}, {
    id: "LAK",
    displayName: "Laosin kip",
    symbol: "LAK",
    one: "Laosin kip",
    other: "Laosin kipiä"
}, {
    id: "LVL",
    displayName: "Latvian lati",
    symbol: "LVL",
    one: "Latvian lati",
    other: "Latvian latia"
}, {
    id: "LVR",
    displayName: "Latvian rupla",
    symbol: "LVR",
    one: "Latvian rupla",
    other: "Latvian ruplaa"
}, {
    id: "LSL",
    displayName: "Lesothon loti",
    symbol: "LSL",
    one: "Lesothon loti",
    other: "Lesothon lotia"
}, {
    id: "LBP",
    displayName: "Libanonin punta",
    symbol: "LBP",
    one: "Libanonin punta",
    other: "Libanonin puntaa"
}, {
    id: "LRD",
    displayName: "Liberian dollari",
    symbol: "LRD",
    one: "Liberian dollari",
    other: "Liberian dollaria"
}, {
    id: "LYD",
    displayName: "Libyan dinaari",
    symbol: "LYD",
    one: "Libyan dinaari",
    other: "Libyan dinaaria"
}, {
    id: "LTL",
    displayName: "Liettuan liti",
    symbol: "LTL",
    one: "Liettuan liti",
    other: "Liettuan litiä"
}, {
    id: "LTT",
    displayName: "Liettuan talonas",
    symbol: "LTT",
    one: "Liettuan talonas",
    other: "Liettuan talonasia"
}, {
    id: "LUF",
    displayName: "Luxemburgin frangi",
    symbol: "LUF",
    one: "Luxemburgin frangi",
    other: "Luxemburgin frangia"
}, {
    id: "LUL",
    displayName: "Luxemburgin rahoitusfrangi",
    symbol: "LUL",
    one: "Luxemburgin rahoitusfrangi",
    other: "Luxemburgin rahoitusfrangia"
}, {
    id: "LUC",
    displayName: "Luxemburgin vaihdettava frangi",
    symbol: "LUC",
    one: "Luxemburgin vaihdettava frangi",
    other: "Luxemburgin vaihdettavaa frangia"
}, {
    id: "MOP",
    displayName: "Macaon pataca",
    symbol: "MOP",
    one: "Macaon pataca",
    other: "Macaon patacaa"
}, {
    id: "MGA",
    displayName: "Madagaskarin ariary",
    symbol: "MGA",
    one: "Madagaskarin ariary",
    other: "Madagaskarin ariarya"
}, {
    id: "MGF",
    displayName: "Madagaskarin frangi",
    symbol: "MGF",
    one: "Madagaskarin frangi",
    other: "Madagaskarin frangia"
}, {
    id: "MKD",
    displayName: "Makedonian denaari",
    symbol: "MKD",
    one: "Makedonian denaari",
    other: "Makedonian denaaria"
}, {
    id: "MKN",
    displayName: "Makedonian dinaari (1992–1993)",
    symbol: "MKN",
    one: "Makedonian dinaari (1992–1993)",
    other: "Makedonian dinaaria (1992–1993)"
}, {
    id: "MWK",
    displayName: "Malawin kwacha",
    symbol: "MWK",
    one: "Malawin kwacha",
    other: "Malawin kwachaa"
}, {
    id: "MVR",
    displayName: "Malediivien rufiyaa",
    symbol: "MVR",
    one: "Malediivien rufiyaa",
    other: "Malediivien rufiyaata"
}, {
    id: "MVP",
    displayName: "Malediivien rupia (1947–1981)",
    symbol: "MVP",
    one: "Malediivien rupia (1947–1981)",
    other: "Malediivien rupiaa (1947–1981)"
}, {
    id: "MYR",
    displayName: "Malesian ringgit",
    symbol: "MYR",
    one: "Malesian ringgit",
    other: "Malesian ringgitiä"
}, {
    id: "MLF",
    displayName: "Malin frangi",
    symbol: "MLF",
    one: "Malin frangi",
    other: "Malin frangia"
}, {
    id: "MTL",
    displayName: "Maltan liira",
    symbol: "MTL",
    one: "Maltan liira",
    other: "Maltan liiraa"
}, {
    id: "MTP",
    displayName: "Maltan punta",
    symbol: "MTP",
    one: "Maltan punta",
    other: "Maltan puntaa"
}, {
    id: "MAD",
    displayName: "Marokon dirhami",
    symbol: "MAD",
    one: "Marokon dirhami",
    other: "Marokon dirhamia"
}, {
    id: "MAF",
    displayName: "Marokon frangi",
    symbol: "MAF",
    one: "Marokon frangi",
    other: "Marokon frangia"
}, {
    id: "MRO",
    displayName: "Mauritanian ouguiya",
    symbol: "MRO",
    one: "Mauritanian ouguiya",
    other: "Mauritanian ouguiyaa"
}, {
    id: "MUR",
    displayName: "Mauritiuksen rupia",
    symbol: "MUR",
    one: "Mauritiuksen rupia",
    other: "Mauritiuksen rupiaa"
}, {
    id: "MXV",
    displayName: "Meksikon UDI",
    symbol: "MXV",
    one: "Meksikon UDI",
    other: "Meksikon UDI’ta"
}, {
    id: "MXP",
    displayName: "Meksikon hopeapeso (1861–1992)",
    symbol: "MXP",
    one: "Meksikon hopeapeso (1861–1992)",
    other: "Meksikon hopeapesoa (1861–1992)"
}, {
    id: "MXN",
    displayName: "Meksikon peso",
    symbol: "MXN",
    one: "Meksikon peso",
    other: "Meksikon pesoa"
}, {
    id: "MDC",
    displayName: "Moldovan kuponkileu",
    symbol: "MDC",
    one: "Moldovan kuponkileu",
    other: "Moldovan kuponkileuta"
}, {
    id: "MDL",
    displayName: "Moldovan leu",
    symbol: "MDL",
    one: "Moldovan leu",
    other: "Moldovan leuta"
}, {
    id: "MCF",
    displayName: "Monacon frangi",
    symbol: "MCF",
    one: "Monacon frangi",
    other: "Monacon frangia"
}, {
    id: "MNT",
    displayName: "Mongolian tugrik",
    symbol: "MNT",
    one: "Mongolian tugrik",
    other: "Mongolian tugrikia"
}, {
    id: "MZE",
    displayName: "Mosambikin escudo",
    symbol: "MZE",
    one: "Mosambikin escudo",
    other: "Mosambikin escudoa"
}, {
    id: "MZN",
    displayName: "Mosambikin metical",
    symbol: "MZN",
    one: "Mosambikin metical",
    other: "Mosambikin meticalia"
}, {
    id: "MZM",
    displayName: "Mosambikin metical (1980–2006)",
    symbol: "MZM",
    one: "Mosambikin metical (1980–2006)",
    other: "Mosambikin meticalia (1980–2006)"
}, {
    id: "MMK",
    displayName: "Myanmarin kyat",
    symbol: "MMK",
    one: "Myanmarin kyat",
    other: "Myanmarin kyatia"
}, {
    id: "NAD",
    displayName: "Namibian dollari",
    symbol: "NAD",
    one: "Namibian dollari",
    other: "Namibian dollaria"
}, {
    id: "NPR",
    displayName: "Nepalin rupia",
    symbol: "NPR",
    one: "Nepalin rupia",
    other: "Nepalin rupiaa"
}, {
    id: "SUR",
    displayName: "Neuvostoliiton rupla",
    symbol: "SUR",
    one: "Neuvostoliiton rupla",
    other: "Neuvostoliiton ruplaa"
}, {
    id: "NIO",
    displayName: "Nicaraguan cordoba",
    symbol: "NIO",
    one: "Nicaraguan cordoba",
    other: "Nicaraguan cordobaa"
}, {
    id: "NIC",
    displayName: "Nicaraguan cordoba (1988–1991)",
    symbol: "NIC",
    one: "Nicaraguan cordoba (1988–1991)",
    other: "Nicaraguan cordobaa (1988–1991)"
}, {
    id: "NGN",
    displayName: "Nigerian naira",
    symbol: "NGN",
    one: "Nigerian naira",
    other: "Nigerian nairaa"
}, {
    id: "NOK",
    displayName: "Norjan kruunu",
    symbol: "NOK",
    one: "Norjan kruunu",
    other: "Norjan kruunua"
}, {
    id: "OMR",
    displayName: "Omanin rial",
    symbol: "OMR",
    one: "Omanin rial",
    other: "Omanin rialia"
}, {
    id: "PKR",
    displayName: "Pakistanin rupia",
    symbol: "PKR",
    one: "Pakistanin rupia",
    other: "Pakistanin rupiaa"
}, {
    id: "PAB",
    displayName: "Panaman balboa",
    symbol: "PAB",
    one: "Panaman balboa",
    other: "Panaman balboaa"
}, {
    id: "PGK",
    displayName: "Papua-Uuden-Guinean kina",
    symbol: "PGK",
    one: "Papua-Uuden-Guinean kina",
    other: "Papua-Uuden-Guinean kinaa"
}, {
    id: "PYG",
    displayName: "Paraguayn guarani",
    symbol: "PYG",
    one: "Paraguayn guarani",
    other: "Paraguayn guarania"
}, {
    id: "PEI",
    displayName: "Perun inti",
    symbol: "PEI",
    one: "Perun inti",
    other: "Perun intiä"
}, {
    id: "PES",
    displayName: "Perun sol (1863–1965)",
    symbol: "PES",
    one: "Perun sol (1863–1965)",
    other: "Perun solia (1863–1965)"
}, {
    id: "PEN",
    displayName: "Perun uusi sol",
    symbol: "PEN",
    one: "Perun uusi sol",
    other: "Perun uutta solia"
}, {
    id: "KPW",
    displayName: "Pohjois-Korean won",
    symbol: "KPW",
    one: "Pohjois-Korean won",
    other: "Pohjois-Korean wonia"
}, {
    id: "GWE",
    displayName: "Portugalin Guinean escudo",
    symbol: "GWE",
    one: "Portugalin Guinean escudo",
    other: "Portugalin Guinean escudoa"
}, {
    id: "PTE",
    displayName: "Portugalin escudo",
    symbol: "PTE",
    one: "Portugalin escudo",
    other: "Portugalin escudoa"
}, {
    id: "PLN",
    displayName: "Puolan zloty",
    symbol: "PLN",
    one: "Puolan zloty",
    other: "Puolan zlotya"
}, {
    id: "PLZ",
    displayName: "Puolan zloty (1950–1995)",
    symbol: "PLZ",
    one: "Puolan zloty (1950–1995)",
    other: "Puolan zlotya (1950–1995)"
}, {
    id: "GQE",
    displayName: "Päiväntasaajan Guinean ekwele",
    symbol: "GQE",
    one: "Päiväntasaajan Guinean ekwele",
    other: "Päiväntasaajan Guinean ekweleä"
}, {
    id: "QAR",
    displayName: "Qatarin rial",
    symbol: "QAR",
    one: "Qatarin rial",
    other: "Qatarin rialia"
}, {
    id: "XRE",
    displayName: "RINET-rahastot",
    symbol: "XRE",
    one: "RINET-rahastoyksikkö",
    other: "RINET-rahastoyksikköä"
}, {
    id: "XFU",
    displayName: "Ranskan UIC-frangi",
    symbol: "XFU",
    one: "Ranskan UIC-frangi",
    other: "Ranskan UIC-frangia"
}, {
    id: "FRF",
    displayName: "Ranskan frangi",
    symbol: "FRF",
    one: "Ranskan frangi",
    other: "Ranskan frangia"
}, {
    id: "XFO",
    displayName: "Ranskan kultafrangi",
    symbol: "XFO",
    one: "Ranskan kultafrangi",
    other: "Ranskan kultafrangia"
}, {
    id: "RHD",
    displayName: "Rhodesian dollari",
    symbol: "RHD",
    one: "Rhodesian dollari",
    other: "Rhodesian dollaria"
}, {
    id: "RON",
    displayName: "Romanian leu",
    symbol: "RON",
    one: "Romanian leu",
    other: "Romanian leuta"
}, {
    id: "ROL",
    displayName: "Romanian leu (1952–2006)",
    symbol: "ROL",
    one: "Romanian leu (1952–2006)",
    other: "Romanian leuta (1952–2006)"
}, {
    id: "RWF",
    displayName: "Ruandan frangi",
    symbol: "RWF",
    one: "Ruandan frangi",
    other: "Ruandan frangia"
}, {
    id: "SEK",
    displayName: "Ruotsin kruunu",
    symbol: "SEK",
    one: "Ruotsin kruunu",
    other: "Ruotsin kruunua"
}, {
    id: "SHP",
    displayName: "Saint Helenan punta",
    symbol: "SHP",
    one: "Saint Helenan punta",
    other: "Saint Helenan puntaa"
}, {
    id: "DEM",
    displayName: "Saksan markka",
    symbol: "DEM",
    one: "Saksan markka",
    other: "Saksan markkaa"
}, {
    id: "SBD",
    displayName: "Salomonsaarten dollari",
    symbol: "SBD",
    one: "Salomonsaarten dollari",
    other: "Salomonsaarten dollaria"
}, {
    id: "ZMW",
    displayName: "Sambian kwacha",
    symbol: "ZMW",
    one: "Sambian kwacha",
    other: "Sambian kwachaa"
}, {
    id: "ZMK",
    displayName: "Sambian kwacha (1968–2012)",
    symbol: "ZMK",
    one: "Sambian kwacha (1968–2012)",
    other: "Sambian kwachaa (1968–2012)"
}, {
    id: "WST",
    displayName: "Samoan tala",
    symbol: "WST",
    one: "Samoan tala",
    other: "Samoan talaa"
}, {
    id: "SAR",
    displayName: "Saudi-Arabian rial",
    symbol: "SAR",
    one: "Saudi-Arabian rial",
    other: "Saudi-Arabian rialia"
}, {
    id: "RSD",
    displayName: "Serbian dinaari",
    symbol: "RSD",
    one: "Serbian dinaari",
    other: "Serbian dinaaria"
}, {
    id: "CSD",
    displayName: "Serbian dinaari (2002–2006)",
    symbol: "CSD",
    one: "Serbian dinaari (2002–2006)",
    other: "Serbian dinaaria (2002–2006)"
}, {
    id: "SCR",
    displayName: "Seychellien rupia",
    symbol: "SCR",
    one: "Seychellien rupia",
    other: "Seychellien rupiaa"
}, {
    id: "SLL",
    displayName: "Sierra Leonen leone",
    symbol: "SLL",
    one: "Sierra Leonen leone",
    other: "Sierra Leonen leonea"
}, {
    id: "SGD",
    displayName: "Singaporen dollari",
    symbol: "SGD",
    one: "Singaporen dollari",
    other: "Singaporen dollaria"
}, {
    id: "SKK",
    displayName: "Slovakian koruna",
    symbol: "SKK",
    one: "Slovakian koruna",
    other: "Slovakian korunaa"
}, {
    id: "SIT",
    displayName: "Slovenian tolar",
    symbol: "SIT",
    one: "Slovenian tolar",
    other: "Slovenian tolaria"
}, {
    id: "SOS",
    displayName: "Somalian šillinki",
    symbol: "SOS",
    one: "Somalian šillinki",
    other: "Somalian šillinkiä"
}, {
    id: "LKR",
    displayName: "Sri Lankan rupia",
    symbol: "LKR",
    one: "Sri Lankan rupia",
    other: "Sri Lankan rupiaa"
}, {
    id: "SDD",
    displayName: "Sudanin dinaari (1992–2007)",
    symbol: "SDD",
    one: "Sudanin dinaari (1992–2007)",
    other: "Sudanin dinaaria (1992–2007)"
}, {
    id: "SDG",
    displayName: "Sudanin punta",
    symbol: "SDG",
    one: "Sudanin punta",
    other: "Sudanin puntaa"
}, {
    id: "SDP",
    displayName: "Sudanin punta (1957–1998)",
    symbol: "SDP",
    one: "Sudanin punta (1957–1998)",
    other: "Sudanin puntaa (1957–1998)"
}, {
    id: "FIM",
    displayName: "Suomen markka",
    symbol: "mk",
    one: "Suomen markka",
    other: "Suomen markkaa"
}, {
    id: "SRD",
    displayName: "Surinamin dollari",
    symbol: "SRD",
    one: "Surinamin dollari",
    other: "Surinamin dollaria"
}, {
    id: "SRG",
    displayName: "Surinamin guldeni",
    symbol: "SRG",
    one: "Surinamin guldeni",
    other: "Surinamin guldenia"
}, {
    id: "CHE",
    displayName: "Sveitsin WIR-euro",
    symbol: "CHE",
    one: "Sveitsin WIR-euro",
    other: "Sveitsin WIR-euroa"
}, {
    id: "CHW",
    displayName: "Sveitsin WIR-frangi",
    symbol: "CHW",
    one: "Sveitsin WIR-frangi",
    other: "Sveitsin WIR-frangia"
}, {
    id: "CHF",
    displayName: "Sveitsin frangi",
    symbol: "CHF",
    one: "Sveitsin frangi",
    other: "Sveitsin frangia"
}, {
    id: "SZL",
    displayName: "Swazimaan lilangeni",
    symbol: "SZL",
    one: "Swazimaan lilangeni",
    other: "Swazimaan lilangenia"
}, {
    id: "SYP",
    displayName: "Syyrian punta",
    symbol: "SYP",
    one: "Syyrian punta",
    other: "Syyrian puntaa"
}, {
    id: "STD",
    displayName: "São Tomén ja Príncipen dobra",
    symbol: "STD",
    one: "São Tomén ja Príncipen dobra",
    other: "São Tomén ja Príncipen dobraa"
}, {
    id: "TJR",
    displayName: "Tadžikistanin rupla",
    symbol: "TJR",
    one: "Tadžikistanin rupla",
    other: "Tadžikistanin ruplaa"
}, {
    id: "TJS",
    displayName: "Tadžikistanin somoni",
    symbol: "TJS",
    one: "Tadžikistanin somoni",
    other: "Tadžikistanin somonia"
}, {
    id: "TWD",
    displayName: "Taiwanin uusi dollari",
    symbol: "TWD",
    one: "Taiwanin uusi dollari",
    other: "Taiwanin uutta dollaria"
}, {
    id: "TZS",
    displayName: "Tansanian šillinki",
    symbol: "TZS",
    one: "Tansanian šillinki",
    other: "Tansanian šillinkiä"
}, {
    id: "DKK",
    displayName: "Tanskan kruunu",
    symbol: "DKK",
    one: "Tanskan kruunu",
    other: "Tanskan kruunua"
}, {
    id: "THB",
    displayName: "Thaimaan baht",
    symbol: "THB",
    one: "Thaimaan baht",
    other: "Thaimaan bahtia"
}, {
    id: "TPE",
    displayName: "Timorin escudo",
    symbol: "TPE",
    one: "Timorin escudo",
    other: "Timorin escudoa"
}, {
    id: "TOP",
    displayName: "Tongan pa’anga",
    symbol: "TOP",
    one: "Tongan pa’anga",
    other: "Tongan pa’angaa"
}, {
    id: "TTD",
    displayName: "Trinidadin ja Tobagon dollari",
    symbol: "TTD",
    one: "Trinidadin ja Tobagon dollari",
    other: "Trinidadin ja Tobagon dollaria"
}, {
    id: "TND",
    displayName: "Tunisian dinaari",
    symbol: "TND",
    one: "Tunisian dinaari",
    other: "Tunisian dinaaria"
}, {
    id: "TRY",
    displayName: "Turkin liira",
    symbol: "TRY",
    one: "Turkin liira",
    other: "Turkin liiraa"
}, {
    id: "TRL",
    displayName: "Turkin liira (1922–2005)",
    symbol: "TRL",
    one: "Turkin liira (1922–2005)",
    other: "Turkin liiraa (1922–2005)"
}, {
    id: "TMT",
    displayName: "Turkmenistanin manat",
    symbol: "TMT",
    one: "Turkmenistanin manat",
    other: "Turkmenistanin manatia"
}, {
    id: "TMM",
    displayName: "Turkmenistanin manat (1993–2009)",
    symbol: "TMM",
    one: "Turkmenistanin manat (1993–2009)",
    other: "Turkmenistanin manatia (1993–2009)"
}, {
    id: "CZK",
    displayName: "Tšekin koruna",
    symbol: "CZK",
    one: "Tšekin koruna",
    other: "Tšekin korunaa"
}, {
    id: "CSK",
    displayName: "Tšekkoslovakian kova koruna",
    symbol: "CSK",
    one: "Tšekkoslovakian kova koruna",
    other: "Tšekkoslovakian kovaa korunaa"
}, {
    id: "UGX",
    displayName: "Ugandan šillinki",
    symbol: "UGX",
    one: "Ugandan šillinki",
    other: "Ugandan šillinkiä"
}, {
    id: "UGS",
    displayName: "Ugandan šillinki (1966–1987)",
    symbol: "UGS",
    one: "Ugandan šillinki (1966–1987)",
    other: "Ugandan šillinkiä (1966–1987)"
}, {
    id: "UAH",
    displayName: "Ukrainan hryvnia",
    symbol: "UAH",
    one: "Ukrainan hryvnia",
    other: "Ukrainan hryvniaa"
}, {
    id: "UAK",
    displayName: "Ukrainan karbovanetz",
    symbol: "UAK",
    one: "Ukrainan karbovanetz",
    other: "Ukrainan karbovanetzia"
}, {
    id: "HUF",
    displayName: "Unkarin forintti",
    symbol: "HUF",
    one: "Unkarin forintti",
    other: "Unkarin forinttia"
}, {
    id: "UYU",
    displayName: "Uruguayn peso",
    symbol: "UYU",
    one: "Uruguayn peso",
    other: "Uruguayn pesoa"
}, {
    id: "UYP",
    displayName: "Uruguayn peso (1975–1993)",
    symbol: "UYP",
    one: "Uruguayn peso (1975–1993)",
    other: "Uruguayn pesoa (1975–1993)"
}, {
    id: "UYI",
    displayName: "Uruguayn peso en unidades indexadas",
    symbol: "UYI",
    one: "Uruguayn peso en unidades indexadas",
    other: "Uruguayn pesoa en unidades indexadas"
}, {
    id: "NZD",
    displayName: "Uuden-Seelannin dollari",
    symbol: "NZD",
    one: "Uuden-Seelannin dollari",
    other: "Uuden-Seelannin dollaria"
}, {
    id: "UZS",
    displayName: "Uzbekistanin som",
    symbol: "UZS",
    one: "Uzbekistanin som",
    other: "Uzbekistanin somia"
}, {
    id: "BYR",
    displayName: "Valko-Venäjän rupla",
    symbol: "BYR",
    one: "Valko-Venäjän rupla",
    other: "Valko-Venäjän ruplaa"
}, {
    id: "BYB",
    displayName: "Valko-Venäjän uusi rupla (1994–1999)",
    symbol: "BYB",
    one: "Valko-Venäjän uusi rupla (1994–1999)",
    other: "Valko-Venäjän uutta ruplaa (1994–1999)"
}, {
    id: "VUV",
    displayName: "Vanuatun vatu",
    symbol: "VUV",
    one: "Vanuatun vatu",
    other: "Vanuatun vatua"
}, {
    id: "VEF",
    displayName: "Venezuelan bolivar",
    symbol: "VEF",
    one: "Venezuelan bolivar",
    other: "Venezuelan bolivaria"
}, {
    id: "VEB",
    displayName: "Venezuelan bolivar (1871–2008)",
    symbol: "VEB",
    one: "Venezuelan bolivar (1871–2008)",
    other: "Venezuelan bolivaria (1871–2008)"
}, {
    id: "RUB",
    displayName: "Venäjän rupla",
    symbol: "RUB",
    one: "Venäjän rupla",
    other: "Venäjän ruplaa"
}, {
    id: "RUR",
    displayName: "Venäjän rupla (1991–1998)",
    symbol: "RUR",
    one: "Venäjän rupla (1991–1998)",
    other: "Venäjän ruplaa (1991–1998)"
}, {
    id: "VND",
    displayName: "Vietnamin dong",
    symbol: "VND",
    one: "Vietnamin dong",
    other: "Vietnamin dongia"
}, {
    id: "VNN",
    displayName: "Vietnamin dong (1978–1985)",
    symbol: "VNN",
    one: "Vietnamin dong (1978–1985)",
    other: "Vietnamin dongia (1978–1985)"
}, {
    id: "EEK",
    displayName: "Viron kruunu",
    symbol: "EEK",
    one: "Viron kruunu",
    other: "Viron kruunua"
}, {
    id: "USD",
    displayName: "Yhdysvaltain dollari",
    symbol: "$",
    one: "Yhdysvaltain dollari",
    other: "Yhdysvaltain dollaria"
}, {
    id: "USS",
    displayName: "Yhdysvaltain dollari (sama päivä)",
    symbol: "USS",
    one: "Yhdysvaltain dollari (sama päivä)",
    other: "Yhdysvaltain dollaria (sama päivä)"
}, {
    id: "USN",
    displayName: "Yhdysvaltain dollari (seuraava päivä)",
    symbol: "USN",
    one: "Yhdysvaltain dollari (seuraava päivä)",
    other: "Yhdysvaltain dollaria (seuraava päivä)"
}, {
    id: "ZRN",
    displayName: "Zairen uusi zaire (1993–1998)",
    symbol: "ZRN",
    one: "Zairen uusi zaire (1993–1998)",
    other: "Zairen uutta zairea (1993–1998)"
}, {
    id: "ZRZ",
    displayName: "Zairen zaire (1971–1993)",
    symbol: "ZRZ",
    one: "Zairen zaire (1971–1993)",
    other: "Zairen zairea (1971–1993)"
}, {
    id: "ZWD",
    displayName: "Zimbabwen dollari (1980–2008)",
    symbol: "ZWD",
    one: "Zimbabwen dollari (1980–2008)",
    other: "Zimbabwen dollaria (1980–2008)"
}, {
    id: "ZWR",
    displayName: "Zimbabwen dollari (2008)",
    symbol: "ZWR",
    one: "Zimbabwen dollari (2008)",
    other: "Zimbabwen dollaria (2008)"
}, {
    id: "ZWL",
    displayName: "Zimbabwen dollari (2009)",
    symbol: "ZWL",
    one: "Zimbabwen dollari (2009)",
    other: "Zimbabwen dollaria (2009)"
}, {
    id: "XUA",
    displayName: "afrikkalainen ADB-laskentayksikkö",
    symbol: "XUA",
    one: "ADB-laskentayksikkö",
    other: "ADB-laskentayksikköä"
}, {
    id: "XDR",
    displayName: "erityisnosto-oikeus (SDR)",
    symbol: "XDR",
    one: "erityisnosto-oikeus (SDR)",
    other: "erityisnosto-oikeutta (SDR)"
}, {
    id: "XSU",
    displayName: "etelä-amerikkalaisen ALBA:n laskentayksikkö sucre",
    symbol: "XSU",
    one: "sucre",
    other: "sucrea"
}, {
    id: "EUR",
    displayName: "euro",
    symbol: "€",
    one: "euro",
    other: "euroa"
}, {
    id: "XAG",
    displayName: "hopea",
    symbol: "XAG",
    one: "troy-unssi hopeaa",
    other: "troy-unssia hopeaa"
}, {
    id: "XAU",
    displayName: "kulta",
    symbol: "XAU",
    one: "troy-unssi kultaa",
    other: "troy-unssia kultaa"
}, {
    id: "XPD",
    displayName: "palladium",
    symbol: "XPD",
    one: "troy-unssi palladiumia",
    other: "troy-unssia palladiumia"
}, {
    id: "XPT",
    displayName: "platina",
    symbol: "XPT",
    one: "troy-unssi platinaa",
    other: "troy-unssia platinaa"
}, {
    id: "XTS",
    displayName: "testaustarkoitukseen varattu valuuttakoodi",
    symbol: "XTS",
    one: "testaustarkoitukseen varattu valuuttakoodi",
    other: "testaustarkoitukseen varattua valuuttakoodia"
}, {
    id: "XXX",
    displayName: "tuntematon rahayksikkö",
    symbol: "XXX",
    one: "tuntematon rahayksikkö",
    other: "tuntematonta rahayksikköä"
} ];

module.exports = inter;