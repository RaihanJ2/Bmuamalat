function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _7rlr1 = {
    "default": "#,##0 %"
}, _7rlr2 = {
    am: "f.m.",
    pm: "e.m."
}, _7rlr3 = [ "K1", "K2", "K3", "K4" ], _7rlr4 = {
    all: {
        leap: "{0}bis"
    }
}, _7rlr5 = {
    displayName: "vekedag"
}, _7rlr6 = {
    one: "{0}°",
    other: "{0}°"
}, _7rlr7 = {
    one: "{0}′",
    other: "{0}′"
}, _7rlr8 = {
    one: "{0}″",
    other: "{0}″"
}, _7rlr9 = {
    one: "{0}m",
    other: "{0}m"
}, _7rlr10 = {
    one: "0 tn",
    other: "0 tn"
}, _7rlr11 = {
    one: "0 mn",
    other: "0 mn"
}, _7rlr12 = {
    one: "0 md",
    other: "0 md"
}, _7rlr13 = {
    one: "0 bn",
    other: "0 bn"
}, _7rlr14 = {
    a: "h a – h a",
    h: "h–h a"
}, _7rlr15 = [ "Before R.O.C.", "R.O.C." ], _7rlr16 = {
    one: "{0}°F",
    other: "{0}°F"
}, _7rlr17 = {
    one: "00 tn",
    other: "00 tn"
}, _7rlr18 = {
    one: "00 mn",
    other: "00 mn"
}, _7rlr19 = {
    one: "00 md",
    other: "00 md"
}, _7rlr20 = {
    one: "00 bn",
    other: "00 bn"
}, _7rlr21 = {
    one: "{0} år",
    other: "{0} år"
}, _7rlr22 = {
    one: "{0} ac",
    other: "{0} ac"
}, _7rlr23 = {
    one: "{0} mi",
    other: "{0} mi"
}, _7rlr24 = {
    one: "{0} yd",
    other: "{0} yd"
}, _7rlr25 = {
    one: "000 tn",
    other: "000 tn"
}, _7rlr26 = {
    one: "000 mn",
    other: "000 mn"
}, _7rlr27 = {
    one: "000 md",
    other: "000 md"
}, _7rlr28 = {
    one: "000 bn",
    other: "000 bn"
}, _7rlr29 = {
    one: "0 tn ¤",
    other: "0 tn ¤"
}, _7rlr30 = {
    one: "0 mn ¤",
    other: "0 mn ¤"
}, _7rlr31 = {
    one: "0 md ¤",
    other: "0 md ¤"
}, _7rlr32 = {
    one: "0 bn ¤",
    other: "0 bn ¤"
}, _7rlr33 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _7rlr34 = [ "S", "M", "T", "O", "T", "F", "L" ], _7rlr35 = {
    displayName: "f.m./e.m.-val"
}, _7rlr36 = {
    one: "{0} fot",
    other: "{0} fot"
}, _7rlr37 = {
    one: "{0} mil",
    other: "{0} mil"
}, _7rlr38 = {
    one: "{0} mi²",
    other: "{0} mi²"
}, _7rlr39 = {
    one: "{0} mi³",
    other: "{0} mi³"
}, _7rlr40 = {
    one: "0 tusen",
    other: "0 tusen"
}, _7rlr41 = {
    one: "00 tn ¤",
    other: "00 tn ¤"
}, _7rlr42 = {
    one: "00 mn ¤",
    other: "00 mn ¤"
}, _7rlr43 = {
    one: "00 md ¤",
    other: "00 md ¤"
}, _7rlr44 = {
    one: "00 bn ¤",
    other: "00 bn ¤"
}, _7rlr45 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _7rlr46 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _7rlr47 = {
    one: "{0} inHg",
    other: "{0} inHg"
}, _7rlr48 = {
    one: "{0} mi/h",
    other: "{0} mi/h"
}, _7rlr49 = {
    one: "00 tusen",
    other: "00 tusen"
}, _7rlr50 = {
    one: "000 tn ¤",
    other: "000 tn ¤"
}, _7rlr51 = {
    one: "000 mn ¤",
    other: "000 mn ¤"
}, _7rlr52 = {
    one: "000 md ¤",
    other: "000 md ¤"
}, _7rlr53 = {
    one: "000 bn ¤",
    other: "000 bn ¤"
}, _7rlr54 = {
    H: "HH.mm–HH.mm",
    m: "HH.mm–HH.mm"
}, _7rlr55 = {
    d: "d.–d. MMM",
    M: "d. MMM–d. MMM"
}, _7rlr56 = {
    M: "MM.y–MM.y G",
    y: "MM.y–MM.y G"
}, _7rlr57 = {
    am: "formiddag",
    pm: "ettermiddag"
}, _7rlr58 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _7rlr59 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _7rlr60 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _7rlr61 = {
    one: "{0} unse",
    other: "{0} unser"
}, _7rlr62 = {
    one: "{0} lysår",
    other: "{0} lysår"
}, _7rlr63 = {
    one: "000 tusen",
    other: "000 tusen"
}, _7rlr64 = {
    M: "MMM–MMM y G",
    y: "MMM y–MMM y G"
}, _7rlr65 = {
    one: "om {0} år",
    other: "om {0} år"
}, _7rlr66 = {
    one: "{0} tomme",
    other: "{0} tommer"
}, _7rlr67 = {
    one: "0 million",
    other: "0 millioner"
}, _7rlr68 = {
    one: "0 billion",
    other: "0 billioner"
}, _7rlr69 = {
    H: "HH.mm–HH.mm v",
    m: "HH.mm–HH.mm v"
}, _7rlr70 = {
    d: "dd.MM.–dd.MM.",
    M: "dd.MM.–dd.MM."
}, _7rlr71 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _7rlr72 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _7rlr73 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _7rlr74 = {
    one: "om {0} uke",
    other: "om {0} uker"
}, _7rlr75 = {
    one: "00 million",
    other: "00 millioner"
}, _7rlr76 = {
    one: "0 milliard",
    other: "0 milliarder"
}, _7rlr77 = {
    one: "00 billion",
    other: "00 billioner"
}, _7rlr78 = {
    M: "MMMM–MMMM y G",
    y: "MMMM y–MMMM y G"
}, _7rlr79 = {
    one: "om {0} døgn",
    other: "om {0} døgn"
}, _7rlr80 = {
    one: "om {0} time",
    other: "om {0} timer"
}, _7rlr81 = {
    one: "{0} skålpund",
    other: "{0} skålpund"
}, _7rlr82 = {
    one: "000 million",
    other: "000 millioner"
}, _7rlr83 = {
    one: "00 milliard",
    other: "00 milliarder"
}, _7rlr84 = {
    one: "000 billion",
    other: "000 billioner"
}, _7rlr85 = {
    d: "E d.–E d. MMM",
    M: "E d. MMM–E d. MMM"
}, _7rlr86 = {
    "0": "dette år",
    "1": "neste år",
    "-1": "i fjor"
}, _7rlr87 = {
    one: "000 milliard",
    other: "000 milliarder"
}, _7rlr88 = [ "sø.", "må.", "ty.", "on.", "to.", "fr.", "la." ], _7rlr89 = [ "søn", "mån", "tys", "ons", "tor", "fre", "lau" ], _7rlr90 = {
    one: "om {0} måned",
    other: "om {0} måneder"
}, _7rlr91 = {
    one: "{0} kvadratfot",
    other: "{0} kvadratfot"
}, _7rlr92 = {
    d: "E dd.MM.–E dd.MM.",
    M: "E dd.MM.–E dd.MM."
}, _7rlr93 = {
    one: "om {0} minutt",
    other: "om {0} minutter"
}, _7rlr94 = {
    one: "om {0} sekund",
    other: "om {0} sekunder"
}, _7rlr95 = {
    future: {
        other: "+{0} Q"
    },
    past: {
        other: "-{0} Q"
    }
}, _7rlr96 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _7rlr97 = {
    one: "for {0} år siden",
    other: "for {0} år siden"
}, _7rlr98 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _7rlr99 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _7rlr100 = {
    id: "001",
    displayName: "verda",
    hasTimeZones: false
}, _7rlr101 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _7rlr102 = {
    "0": "denne veke",
    "1": "neste veke",
    "-1": "forrige veke"
}, _7rlr103 = {
    id: "AQ",
    displayName: "Antarktis",
    hasTimeZones: true
}, _7rlr104 = {
    one: "for {0} uke siden",
    other: "for {0} uker siden"
}, _7rlr105 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _7rlr106 = {
    id: "AC",
    displayName: "Ascension",
    hasTimeZones: false
}, _7rlr107 = {
    id: "BV",
    displayName: "Bouvetøya",
    hasTimeZones: false
}, _7rlr108 = {
    id: "CC",
    displayName: "Kokosøyane",
    hasTimeZones: true
}, _7rlr109 = {
    a: "h.mm a – h.mm a",
    h: "h.mm–h.mm a",
    m: "h.mm–h.mm a"
}, _7rlr110 = [ "1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal" ], _7rlr111 = {
    one: "for {0} døgn siden",
    other: "for {0} døgn siden"
}, _7rlr112 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _7rlr113 = {
    "0": "denne månad",
    "1": "neste månad",
    "-1": "forrige månad"
}, _7rlr114 = {
    one: "for {0} time siden",
    other: "for {0} timer siden"
}, _7rlr115 = {
    id: "CX",
    displayName: "Christmasøya",
    hasTimeZones: true
}, _7rlr116 = {
    id: "IC",
    displayName: "Kanariøyane",
    hasTimeZones: false
}, _7rlr117 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _7rlr118 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _7rlr119 = {
    id: "CP",
    displayName: "Clippertonøya",
    hasTimeZones: false
}, _7rlr120 = {
    one: "for {0} måned siden",
    other: "for {0} måneder siden"
}, _7rlr121 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _7rlr122 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _7rlr123 = {
    a: "h.mm a – h.mm a v",
    h: "h.mm–h.mm a v",
    m: "h.mm–h.mm a v"
}, _7rlr124 = {
    one: "for {0} minutt siden",
    other: "for {0} minutter siden"
}, _7rlr125 = {
    one: "for {0} sekund siden",
    other: "for {0} sekunder siden"
}, _7rlr126 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _7rlr127 = {
    id: "EA",
    displayName: "Ceuta og Melilla",
    hasTimeZones: false
}, _7rlr128 = {
    id: "TF",
    displayName: "Franske sørområde",
    hasTimeZones: true
}, _7rlr129 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _7rlr130 = {
    id: "UM",
    displayName: "USAs ytre småøyar",
    hasTimeZones: true
}, _7rlr131 = {
    id: "IM",
    displayName: "Man",
    regionId: "154",
    hasTimeZones: true
}, _7rlr132 = {
    id: "US",
    displayName: "USA",
    regionId: "021",
    hasTimeZones: true
}, _7rlr133 = {
    id: "CU",
    displayName: "Cuba",
    regionId: "029",
    hasTimeZones: true
}, _7rlr134 = {
    id: "FJ",
    displayName: "Fiji",
    regionId: "054",
    hasTimeZones: true
}, _7rlr135 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _7rlr136 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _7rlr137 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _7rlr138 = {
    id: "CN",
    displayName: "Kina",
    regionId: "030",
    hasTimeZones: true
}, _7rlr139 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _7rlr140 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _7rlr141 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _7rlr142 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _7rlr143 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _7rlr144 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _7rlr145 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _7rlr146 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _7rlr147 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _7rlr148 = {
    id: "EG",
    displayName: "Egypt",
    regionId: "015",
    hasTimeZones: true
}, _7rlr149 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _7rlr150 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _7rlr151 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _7rlr152 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _7rlr153 = {
    id: "JP",
    displayName: "Japan",
    regionId: "030",
    hasTimeZones: true
}, _7rlr154 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _7rlr155 = {
    id: "LY",
    displayName: "Libya",
    regionId: "015",
    hasTimeZones: true
}, _7rlr156 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _7rlr157 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _7rlr158 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _7rlr159 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _7rlr160 = {
    id: "NO",
    displayName: "Noreg",
    regionId: "154",
    hasTimeZones: true
}, _7rlr161 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _7rlr162 = {
    id: "PL",
    displayName: "Polen",
    regionId: "151",
    hasTimeZones: true
}, _7rlr163 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _7rlr164 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _7rlr165 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _7rlr166 = {
    id: "SY",
    displayName: "Syria",
    regionId: "145",
    hasTimeZones: true
}, _7rlr167 = {
    id: "TD",
    displayName: "Tchad",
    regionId: "017",
    hasTimeZones: true
}, _7rlr168 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _7rlr169 = {
    id: "YE",
    displayName: "Yemen",
    regionId: "145",
    hasTimeZones: true
}, _7rlr170 = {
    id: "AX",
    displayName: "Åland",
    regionId: "154",
    hasTimeZones: true
}, _7rlr171 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _7rlr172 = {
    id: "BE",
    displayName: "Belgia",
    regionId: "155",
    hasTimeZones: true
}, _7rlr173 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _7rlr174 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _7rlr175 = {
    id: "BR",
    displayName: "Brasil",
    regionId: "005",
    hasTimeZones: true
}, _7rlr176 = {
    id: "CA",
    displayName: "Canada",
    regionId: "021",
    hasTimeZones: true
}, _7rlr177 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _7rlr178 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _7rlr179 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _7rlr180 = {
    id: "GR",
    displayName: "Hellas",
    regionId: "039",
    hasTimeZones: true
}, _7rlr181 = {
    id: "IE",
    displayName: "Irland",
    regionId: "154",
    hasTimeZones: true
}, _7rlr182 = {
    id: "IS",
    displayName: "Island",
    regionId: "154",
    hasTimeZones: true
}, _7rlr183 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _7rlr184 = {
    id: "IT",
    displayName: "Italia",
    regionId: "039",
    hasTimeZones: true
}, _7rlr185 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _7rlr186 = {
    id: "JO",
    displayName: "Jordan",
    regionId: "145",
    hasTimeZones: true
}, _7rlr187 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _7rlr188 = {
    id: "CY",
    displayName: "Kypros",
    regionId: "145",
    hasTimeZones: true
}, _7rlr189 = {
    id: "LV",
    displayName: "Latvia",
    regionId: "154",
    hasTimeZones: true
}, _7rlr190 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _7rlr191 = {
    id: "MX",
    displayName: "Mexico",
    regionId: "013",
    hasTimeZones: true
}, _7rlr192 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _7rlr193 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _7rlr194 = {
    id: "RW",
    displayName: "Rwanda",
    regionId: "014",
    hasTimeZones: true
}, _7rlr195 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _7rlr196 = {
    id: "ES",
    displayName: "Spania",
    regionId: "039",
    hasTimeZones: true
}, _7rlr197 = {
    id: "CH",
    displayName: "Sveits",
    regionId: "155",
    hasTimeZones: true
}, _7rlr198 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _7rlr199 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _7rlr200 = {
    id: "TR",
    displayName: "Tyrkia",
    regionId: "145",
    hasTimeZones: true
}, _7rlr201 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _7rlr202 = {
    id: "HU",
    displayName: "Ungarn",
    regionId: "151",
    hasTimeZones: true
}, _7rlr203 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _7rlr204 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _7rlr205 = {
    id: "DZ",
    displayName: "Algerie",
    regionId: "015",
    hasTimeZones: true
}, _7rlr206 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _7rlr207 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _7rlr208 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _7rlr209 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _7rlr210 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _7rlr211 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _7rlr212 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _7rlr213 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _7rlr214 = {
    id: "DK",
    displayName: "Danmark",
    regionId: "154",
    hasTimeZones: true
}, _7rlr215 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _7rlr216 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _7rlr217 = {
    id: "EE",
    displayName: "Estland",
    regionId: "154",
    hasTimeZones: true
}, _7rlr218 = {
    id: "ET",
    displayName: "Etiopia",
    regionId: "014",
    hasTimeZones: true
}, _7rlr219 = {
    id: "FI",
    displayName: "Finland",
    regionId: "154",
    hasTimeZones: true
}, _7rlr220 = {
    id: "GE",
    displayName: "Georgia",
    regionId: "145",
    hasTimeZones: true
}, _7rlr221 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _7rlr222 = {
    id: "JM",
    displayName: "Jamaica",
    regionId: "029",
    hasTimeZones: true
}, _7rlr223 = {
    id: "CM",
    displayName: "Kamerun",
    regionId: "017",
    hasTimeZones: true
}, _7rlr224 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _7rlr225 = {
    id: "HR",
    displayName: "Kroatia",
    regionId: "039",
    hasTimeZones: true
}, _7rlr226 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _7rlr227 = {
    id: "LB",
    displayName: "Libanon",
    regionId: "145",
    hasTimeZones: true
}, _7rlr228 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _7rlr229 = {
    id: "LT",
    displayName: "Litauen",
    regionId: "154",
    hasTimeZones: true
}, _7rlr230 = {
    id: "MA",
    displayName: "Marokko",
    regionId: "015",
    hasTimeZones: true
}, _7rlr231 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _7rlr232 = {
    id: "MD",
    displayName: "Moldova",
    regionId: "151",
    hasTimeZones: true
}, _7rlr233 = {
    id: "MM",
    displayName: "Myanmar",
    regionId: "035",
    hasTimeZones: true
}, _7rlr234 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _7rlr235 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _7rlr236 = {
    id: "RO",
    displayName: "Romania",
    regionId: "151",
    hasTimeZones: true
}, _7rlr237 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _7rlr238 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _7rlr239 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _7rlr240 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _7rlr241 = {
    id: "SE",
    displayName: "Sverige",
    regionId: "154",
    hasTimeZones: true
}, _7rlr242 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _7rlr243 = {
    id: "TN",
    displayName: "Tunisia",
    regionId: "015",
    hasTimeZones: true
}, _7rlr244 = {
    id: "UA",
    displayName: "Ukraina",
    regionId: "151",
    hasTimeZones: true
}, _7rlr245 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _7rlr246 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _7rlr247 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _7rlr248 = {
    d: "d.–d. MMM y G",
    M: "d. MMM–d. MMM y G",
    y: "d. MMM y–d. MMM y G"
}, _7rlr249 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _7rlr250 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _7rlr251 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _7rlr252 = {
    id: "BG",
    displayName: "Bulgaria",
    regionId: "151",
    hasTimeZones: true
}, _7rlr253 = {
    id: "CO",
    displayName: "Colombia",
    regionId: "005",
    hasTimeZones: true
}, _7rlr254 = {
    id: "DJ",
    displayName: "Djibouti",
    regionId: "014",
    hasTimeZones: true
}, _7rlr255 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _7rlr256 = {
    id: "FO",
    displayName: "Færøyane",
    regionId: "154",
    hasTimeZones: true
}, _7rlr257 = {
    id: "GL",
    displayName: "Grønland",
    regionId: "021",
    hasTimeZones: true
}, _7rlr258 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _7rlr259 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _7rlr260 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _7rlr261 = {
    id: "KM",
    displayName: "Komorene",
    regionId: "014",
    hasTimeZones: true
}, _7rlr262 = {
    id: "MY",
    displayName: "Malaysia",
    regionId: "035",
    hasTimeZones: true
}, _7rlr263 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _7rlr264 = {
    id: "MZ",
    displayName: "Mosambik",
    regionId: "014",
    hasTimeZones: true
}, _7rlr265 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _7rlr266 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _7rlr267 = {
    id: "PN",
    displayName: "Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _7rlr268 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _7rlr269 = {
    id: "RU",
    displayName: "Russland",
    regionId: "151",
    hasTimeZones: true
}, _7rlr270 = {
    id: "SK",
    displayName: "Slovakia",
    regionId: "151",
    hasTimeZones: true
}, _7rlr271 = {
    id: "SI",
    displayName: "Slovenia",
    regionId: "039",
    hasTimeZones: true
}, _7rlr272 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _7rlr273 = {
    id: "TH",
    displayName: "Thailand",
    regionId: "035",
    hasTimeZones: true
}, _7rlr274 = {
    id: "CZ",
    displayName: "Tsjekkia",
    regionId: "151",
    hasTimeZones: true
}, _7rlr275 = {
    id: "DE",
    displayName: "Tyskland",
    regionId: "155",
    hasTimeZones: true
}, _7rlr276 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _7rlr277 = [ "søndag", "måndag", "tysdag", "onsdag", "torsdag", "fredag", "laurdag" ], _7rlr278 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _7rlr279 = {
    id: "AU",
    displayName: "Australia",
    regionId: "053",
    hasTimeZones: true
}, _7rlr280 = {
    id: "CK",
    displayName: "Cookøyane",
    regionId: "061",
    hasTimeZones: true
}, _7rlr281 = {
    id: "FR",
    displayName: "Frankrike",
    regionId: "155",
    hasTimeZones: true
}, _7rlr282 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _7rlr283 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _7rlr284 = {
    id: "ID",
    displayName: "Indonesia",
    regionId: "035",
    hasTimeZones: true
}, _7rlr285 = {
    id: "KH",
    displayName: "Kambodsja",
    regionId: "035",
    hasTimeZones: true
}, _7rlr286 = {
    id: "MK",
    displayName: "Makedonia",
    regionId: "039",
    hasTimeZones: true
}, _7rlr287 = {
    id: "MV",
    displayName: "Maldivane",
    regionId: "034",
    hasTimeZones: true
}, _7rlr288 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _7rlr289 = {
    id: "NL",
    displayName: "Nederland",
    regionId: "155",
    hasTimeZones: true
}, _7rlr290 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _7rlr291 = {
    id: "SG",
    displayName: "Singapore",
    regionId: "035",
    hasTimeZones: true
}, _7rlr292 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _7rlr293 = {
    id: "LC",
    displayName: "St. Lucia",
    regionId: "029",
    hasTimeZones: true
}, _7rlr294 = {
    id: "SZ",
    displayName: "Swaziland",
    regionId: "018",
    hasTimeZones: true
}, _7rlr295 = {
    id: "KR",
    displayName: "Sør-Korea",
    regionId: "030",
    hasTimeZones: true
}, _7rlr296 = {
    id: "SS",
    displayName: "Sør-Sudan",
    regionId: "014",
    hasTimeZones: true
}, _7rlr297 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _7rlr298 = {
    d: "dd.MM.y–dd.MM.y G",
    M: "dd.MM.y–dd.MM.y G",
    y: "dd.MM.y–dd.MM.y G"
}, _7rlr299 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _7rlr300 = {
    id: "TL",
    displayName: "Aust-Timor",
    regionId: "035",
    hasTimeZones: true
}, _7rlr301 = {
    id: "AT",
    displayName: "Austerrike",
    regionId: "155",
    hasTimeZones: true
}, _7rlr302 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _7rlr303 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _7rlr304 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _7rlr305 = {
    id: "HM",
    displayName: "Heard- og McDonaldsøyane",
    hasTimeZones: false
}, _7rlr306 = {
    id: "CV",
    displayName: "Kapp Verde",
    regionId: "011",
    hasTimeZones: true
}, _7rlr307 = {
    id: "KZ",
    displayName: "Kasakhstan",
    regionId: "143",
    hasTimeZones: true
}, _7rlr308 = {
    id: "LU",
    displayName: "Luxembourg",
    regionId: "155",
    hasTimeZones: true
}, _7rlr309 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _7rlr310 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _7rlr311 = {
    id: "MR",
    displayName: "Mauritania",
    regionId: "011",
    hasTimeZones: true
}, _7rlr312 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _7rlr313 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _7rlr314 = {
    id: "KP",
    displayName: "Nord-Korea",
    regionId: "030",
    hasTimeZones: true
}, _7rlr315 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _7rlr316 = {
    id: "ZA",
    displayName: "Sør-Afrika",
    regionId: "018",
    hasTimeZones: true
}, _7rlr317 = {
    id: "UZ",
    displayName: "Usbekistan",
    regionId: "143",
    hasTimeZones: true
}, _7rlr318 = {
    id: "AF",
    displayName: "Afghanistan",
    regionId: "034",
    hasTimeZones: true
}, _7rlr319 = {
    id: "KY",
    displayName: "Caymanøyane",
    regionId: "029",
    hasTimeZones: true
}, _7rlr320 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _7rlr321 = {
    id: "PH",
    displayName: "Filippinane",
    regionId: "035",
    hasTimeZones: true
}, _7rlr322 = {
    id: "KG",
    displayName: "Kirgisistan",
    regionId: "143",
    hasTimeZones: true
}, _7rlr323 = {
    id: "NZ",
    displayName: "New Zealand",
    regionId: "053",
    hasTimeZones: true
}, _7rlr324 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _7rlr325 = {
    id: "SC",
    displayName: "Seychellane",
    regionId: "014",
    hasTimeZones: true
}, _7rlr326 = {
    id: "EH",
    displayName: "Vest-Sahara",
    regionId: "015",
    hasTimeZones: true
}, _7rlr327 = {
    id: "AZ",
    displayName: "Aserbajdsjan",
    regionId: "145",
    hasTimeZones: true
}, _7rlr328 = {
    id: "142",
    displayName: "Asia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _7rlr329 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _7rlr330 = {
    id: "NF",
    displayName: "Norfolkøyane",
    regionId: "053",
    hasTimeZones: true
}, _7rlr331 = {
    id: "NC",
    displayName: "Ny-Caledonia",
    regionId: "054",
    hasTimeZones: true
}, _7rlr332 = {
    id: "SH",
    displayName: "Saint Helena",
    regionId: "011",
    hasTimeZones: true
}, _7rlr333 = {
    id: "MF",
    displayName: "Saint Martin",
    regionId: "029",
    hasTimeZones: true
}, _7rlr334 = {
    id: "SB",
    displayName: "Salomonøyane",
    regionId: "054",
    hasTimeZones: true
}, _7rlr335 = {
    id: "SA",
    displayName: "Saudi Arabia",
    regionId: "145",
    hasTimeZones: true
}, _7rlr336 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _7rlr337 = {
    id: "TJ",
    displayName: "Tadsjikistan",
    regionId: "143",
    hasTimeZones: true
}, _7rlr338 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _7rlr339 = {
    id: "GF",
    displayName: "Fransk Guyana",
    regionId: "005",
    hasTimeZones: true
}, _7rlr340 = {
    id: "GW",
    displayName: "Guinea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _7rlr341 = {
    id: "BY",
    displayName: "Kviterussland",
    regionId: "151",
    hasTimeZones: true
}, _7rlr342 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _7rlr343 = {
    id: "MH",
    displayName: "Marshalløyane",
    regionId: "057",
    hasTimeZones: true
}, _7rlr344 = {
    id: "GB",
    displayName: "Storbritannia",
    regionId: "154",
    hasTimeZones: true
}, _7rlr345 = {
    id: "VA",
    displayName: "Vatikanstaten",
    regionId: "039",
    hasTimeZones: true
}, _7rlr346 = {
    "0": "i dag",
    "1": "i morgon",
    "2": "i overmorgon",
    "-2": "i forgårs",
    "-1": "i går"
}, _7rlr347 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _7rlr348 = {
    id: "002",
    displayName: "Afrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _7rlr349 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _7rlr350 = {
    id: "FK",
    displayName: "Falklandsøyane",
    regionId: "005",
    hasTimeZones: true
}, _7rlr351 = {
    id: "CD",
    displayName: "Kongo-Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _7rlr352 = {
    id: "MP",
    displayName: "Nord-Marianane",
    regionId: "057",
    hasTimeZones: true
}, _7rlr353 = {
    "0": "søndag denne veke",
    "1": "søndag neste veke",
    "-1": "søndag forrige veke"
}, _7rlr354 = {
    "0": "måndag denne veke",
    "1": "måndag neste veke",
    "-1": "måndag forrige veke"
}, _7rlr355 = {
    "0": "tysdag denne veke",
    "1": "tysdag neste veke",
    "-1": "tysdag forrige veke"
}, _7rlr356 = {
    "0": "fredag denne veke",
    "1": "fredag neste veke",
    "-1": "fredag forrige veke"
}, _7rlr357 = {
    id: "019",
    displayName: "Amerika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _7rlr358 = {
    id: "029",
    displayName: "Karibia",
    hasTimeZones: false,
    parentRegionId: "019"
}, _7rlr359 = {
    id: "009",
    displayName: "Oseania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _7rlr360 = {
    id: "PG",
    displayName: "Papua Ny-Guinea",
    regionId: "054",
    hasTimeZones: true
}, _7rlr361 = [ "jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des" ], _7rlr362 = {
    "0": "onsdag denne veke",
    "1": "onsdage neste veke",
    "-1": "onsdag forrige veke"
}, _7rlr363 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _7rlr364 = {
    id: "AS",
    displayName: "Amerikansk Samoa",
    regionId: "061",
    hasTimeZones: true
}, _7rlr365 = {
    id: "CI",
    displayName: "Elfenbeinskysten",
    regionId: "011",
    hasTimeZones: true
}, _7rlr366 = {
    id: "PF",
    displayName: "Fransk Polynesia",
    regionId: "061",
    hasTimeZones: true
}, _7rlr367 = {
    id: "BL",
    displayName: "Saint Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _7rlr368 = {
    id: "034",
    displayName: "Sør-Asia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _7rlr369 = {
    id: "WF",
    displayName: "Wallis og Futuna",
    regionId: "061",
    hasTimeZones: true
}, _7rlr370 = {
    id: "030",
    displayName: "Aust-Asia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _7rlr371 = {
    id: "BN",
    displayName: "Brunei Darussalam",
    regionId: "035",
    hasTimeZones: true
}, _7rlr372 = {
    id: "GQ",
    displayName: "Ekvatorial-Guinea",
    regionId: "017",
    hasTimeZones: true
}, _7rlr373 = {
    id: "CG",
    displayName: "Kongo-Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _7rlr374 = {
    id: "MO",
    displayName: "Macao S.A.R. Kina",
    regionId: "030",
    hasTimeZones: true
}, _7rlr375 = {
    id: "054",
    displayName: "Melanesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _7rlr376 = {
    id: "061",
    displayName: "Polynesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _7rlr377 = {
    id: "145",
    displayName: "Vest-Asia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _7rlr378 = {
    "0": "torsdag denne veke",
    "1": "torsdag neste veke",
    "-1": "torsdag forrige veke"
}, _7rlr379 = {
    "0": "laurdag denne veke",
    "1": "laurdag neste veke",
    "-1": "laurdag forrige veke"
}, _7rlr380 = {
    id: "AG",
    displayName: "Antigua og Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _7rlr381 = {
    id: "IO",
    displayName: "Britiske område i Det indiske hav",
    hasTimeZones: true
}, _7rlr382 = {
    id: "BQ",
    displayName: "Karibisk Nederland",
    regionId: "029",
    hasTimeZones: true
}, _7rlr383 = {
    id: "057",
    displayName: "Mikronesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _7rlr384 = {
    id: "039",
    displayName: "Sør-Europa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _7rlr385 = {
    id: "GS",
    displayName: "Sør-Georgia og Sør-Sandwich-øyane",
    hasTimeZones: true
}, _7rlr386 = {
    id: "TT",
    displayName: "Trinidad og Tobago",
    regionId: "029",
    hasTimeZones: true
}, _7rlr387 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _7rlr388 = {
    id: "014",
    displayName: "Aust-Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _7rlr389 = {
    id: "151",
    displayName: "Aust-Europa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _7rlr390 = {
    id: "015",
    displayName: "Nord-Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _7rlr391 = {
    id: "154",
    displayName: "Nord-Europa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _7rlr392 = {
    id: "005",
    displayName: "Sør-Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _7rlr393 = {
    id: "011",
    displayName: "Vest-Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _7rlr394 = {
    id: "155",
    displayName: "Vest-Europa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _7rlr395 = {
    d: "E d.–E d. MMM y G",
    M: "E d. MMM–E d. MMM y G",
    y: "E d. MMM y–E d. MMM y G"
}, _7rlr396 = {
    id: "HK",
    displayName: "Hongkong S.A.R. Kina",
    regionId: "030",
    hasTimeZones: true
}, _7rlr397 = {
    id: "143",
    displayName: "Sentral-Asia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _7rlr398 = {
    id: "ST",
    displayName: "São Tomé og Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _7rlr399 = {
    id: "035",
    displayName: "Søraust-Asia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _7rlr400 = {
    id: "BA",
    displayName: "Bosnia og Hercegovina",
    regionId: "039",
    hasTimeZones: true
}, _7rlr401 = {
    id: "SJ",
    displayName: "Svalbard og Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _7rlr402 = {
    id: "TC",
    displayName: "Turks- og Caicosøyane",
    regionId: "029",
    hasTimeZones: true
}, _7rlr403 = {
    d: "E dd.MM.y–E dd.MM.y G",
    M: "E dd.MM.y–E dd.MM.y G",
    y: "E dd.MM.y–E dd.MM.y G"
}, _7rlr404 = {
    id: "FM",
    displayName: "Mikronesiaføderasjonen",
    regionId: "057",
    hasTimeZones: true
}, _7rlr405 = {
    id: "SX",
    displayName: "Nederlandsk St. Martin",
    regionId: "029",
    hasTimeZones: true
}, _7rlr406 = {
    id: "PS",
    displayName: "Palestinsk territorium",
    regionId: "145",
    hasTimeZones: true
}, _7rlr407 = {
    id: "017",
    displayName: "Sentral-Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _7rlr408 = {
    id: "PM",
    displayName: "St. Pierre og Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _7rlr409 = {
    id: "018",
    displayName: "Sørlege Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _7rlr410 = {
    id: "013",
    displayName: "Sentral-Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _7rlr411 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _7rlr412 = {
    id: "VG",
    displayName: "Dei britiske jomfruøyane",
    regionId: "029",
    hasTimeZones: true
}, _7rlr413 = {
    id: "KN",
    displayName: "St. Christopher og Nevis",
    regionId: "029",
    hasTimeZones: true
}, _7rlr414 = {
    id: "021",
    displayName: "nordlege Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _7rlr415 = {
    relative: _7rlr353
}, _7rlr416 = {
    relative: _7rlr354
}, _7rlr417 = {
    relative: _7rlr355
}, _7rlr418 = {
    relative: _7rlr356
}, _7rlr419 = {
    id: "VC",
    displayName: "St. Vincent og Grenadinane",
    regionId: "029",
    hasTimeZones: true
}, _7rlr420 = [ "jan.", "feb.", "mars", "apr.", "mai", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "des." ], _7rlr421 = {
    relative: _7rlr362
}, _7rlr422 = {
    id: "VI",
    displayName: "Dei amerikanske jomfruøyane",
    regionId: "029",
    hasTimeZones: true
}, _7rlr423 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _7rlr424 = {
    id: "DO",
    displayName: "Den dominikanske republikken",
    regionId: "029",
    hasTimeZones: true
}, _7rlr425 = {
    relative: _7rlr378
}, _7rlr426 = {
    relative: _7rlr379
}, _7rlr427 = {
    id: "AE",
    displayName: "Dei sameinte arabiske emirata",
    regionId: "145",
    hasTimeZones: true
}, _7rlr428 = {
    id: "053",
    displayName: "Australia og New Zealand",
    hasTimeZones: false,
    parentRegionId: "009"
}, _7rlr429 = {
    id: "CF",
    displayName: "Den sentralafrikanske republikken",
    regionId: "017",
    hasTimeZones: true
}, _7rlr430 = {
    abbreviated: _7rlr2,
    narrow: _7rlr2,
    wide: _7rlr2
}, _7rlr431 = {
    future: _7rlr65,
    past: _7rlr97
}, _7rlr432 = {
    abbreviated: _7rlr2,
    narrow: _7rlr2,
    wide: _7rlr57
}, _7rlr433 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _7rlr434 = {
    future: _7rlr74,
    past: _7rlr104
}, _7rlr435 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _7rlr436 = {
    future: _7rlr79,
    past: _7rlr111
}, _7rlr437 = [ "januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember" ], _7rlr438 = {
    future: _7rlr80,
    past: _7rlr114
}, _7rlr439 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _7rlr440 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _7rlr441 = {
    future: _7rlr90,
    past: _7rlr120
}, _7rlr442 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _7rlr443 = {
    abbreviated: _7rlr3,
    narrow: [ "1", "2", "3", "4" ],
    wide: _7rlr110
}, _7rlr444 = {
    future: _7rlr93,
    past: _7rlr124
}, _7rlr445 = {
    future: _7rlr94,
    past: _7rlr125
}, _7rlr446 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _7rlr447 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _7rlr448 = {
    displayName: "time",
    relativeTime: _7rlr438
}, _7rlr449 = {
    displayName: "Quarter",
    relative: _7rlr117,
    relativeTime: _7rlr95
}, _7rlr450 = {
    displayName: "minutt",
    relativeTime: _7rlr444
}, _7rlr451 = {
    decimal: ",",
    group: " ",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "−",
    exponential: "E",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ".",
    superscriptingExponent: "×"
}, _7rlr452 = {
    displayName: "sekund",
    relative: [ "now" ],
    relativeTime: _7rlr445
}, _7rlr453 = {
    symbols: _7rlr451
}, _7rlr454 = {
    displayName: "år",
    relative: _7rlr86,
    relativeTime: _7rlr431
}, _7rlr455 = {
    format: _7rlr347,
    numeric: _7rlr4,
    standAlone: _7rlr347
}, _7rlr456 = {
    displayName: "veke",
    relative: _7rlr102,
    relativeTime: _7rlr434
}, _7rlr457 = {
    symbols: _7rlr451,
    digits: "renderSpelloutCardinal"
}, _7rlr458 = {
    displayName: "månad",
    relative: _7rlr113,
    relativeTime: _7rlr441
}, _7rlr459 = {
    format: _7rlr432,
    standAlone: _7rlr430
}, _7rlr460 = {
    abbreviated: _7rlr88,
    narrow: _7rlr34,
    wide: _7rlr277,
    "short": _7rlr88
}, _7rlr461 = {
    abbreviated: _7rlr89,
    narrow: _7rlr34,
    wide: _7rlr277,
    "short": _7rlr88
}, _7rlr462 = {
    displayName: "dag",
    relative: _7rlr346,
    relativeTime: _7rlr436
}, _7rlr463 = {
    symbols: _7rlr451,
    digits: "renderSpelloutCardinalFinancial"
}, _7rlr464 = {
    abbreviated: _7rlr363,
    narrow: _7rlr105,
    wide: _7rlr363
}, _7rlr465 = {
    abbreviated: _7rlr387,
    narrow: _7rlr387,
    wide: _7rlr387
}, _7rlr466 = {
    abbreviated: _7rlr361,
    narrow: _7rlr96,
    wide: _7rlr437
}, _7rlr467 = {
    format: _7rlr443,
    standAlone: _7rlr443
}, _7rlr468 = {
    format: _7rlr465
}, _7rlr469 = {
    abbreviated: _7rlr420,
    narrow: _7rlr96,
    wide: _7rlr437
}, _7rlr470 = {
    abbreviated: _7rlr435,
    narrow: _7rlr122,
    wide: _7rlr435
}, _7rlr471 = {
    abbreviated: _7rlr439,
    narrow: _7rlr105,
    wide: _7rlr439
}, _7rlr472 = {
    abbreviated: _7rlr440,
    narrow: _7rlr122,
    wide: _7rlr440
}, _7rlr473 = {
    abbreviated: _7rlr433,
    narrow: _7rlr105,
    wide: _7rlr447
}, _7rlr474 = {
    abbreviated: _7rlr442,
    narrow: _7rlr122,
    wide: _7rlr442
}, _7rlr475 = {
    abbreviated: _7rlr446,
    narrow: _7rlr105,
    wide: _7rlr446
}, _7rlr476 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "'kl'. HH.mm.ss zzzz",
    longTime: "HH.mm.ss z",
    mediumTime: "HH.mm.ss",
    shortTime: "HH.mm",
    shortDateTime: "r-MM-dd HH.mm",
    mediumDateTime: "r MMM d HH.mm.ss",
    longDateTime: "r(U) MMMM d HH.mm.ss z",
    fullDateTime: "r(U) MMMM d, EEEE 'kl'. HH.mm.ss zzzz"
}, _7rlr477 = {
    fullDate: "EEEE d. MMMM y G",
    longDate: "d. MMMM y G",
    mediumDate: "d. MMM y G",
    shortDate: "d.M y G",
    fullTime: "'kl'. HH.mm.ss zzzz",
    longTime: "HH.mm.ss z",
    mediumTime: "HH.mm.ss",
    shortTime: "HH.mm",
    shortDateTime: "d.M y G HH.mm",
    mediumDateTime: "d. MMM y G HH.mm.ss",
    longDateTime: "d. MMMM y G HH.mm.ss z",
    fullDateTime: "EEEE d. MMMM y G 'kl'. HH.mm.ss zzzz"
}, _7rlr478 = {
    "1000": _7rlr10,
    "10000": _7rlr17,
    "100000": _7rlr25,
    "1000000": _7rlr11,
    "10000000": _7rlr18,
    "100000000": _7rlr26,
    "1000000000": _7rlr12,
    "10000000000": _7rlr19,
    "100000000000": _7rlr27,
    "1000000000000": _7rlr13,
    "10000000000000": _7rlr20,
    "100000000000000": _7rlr28
}, _7rlr479 = {
    "1000": _7rlr29,
    "10000": _7rlr41,
    "100000": _7rlr50,
    "1000000": _7rlr30,
    "10000000": _7rlr42,
    "100000000": _7rlr51,
    "1000000000": _7rlr31,
    "10000000000": _7rlr43,
    "100000000000": _7rlr52,
    "1000000000000": _7rlr32,
    "10000000000000": _7rlr44,
    "100000000000000": _7rlr53
}, _7rlr480 = {
    format: _7rlr460,
    standAlone: _7rlr461
}, _7rlr481 = {
    format: _7rlr464,
    standAlone: _7rlr464
}, _7rlr482 = {
    "1000": _7rlr40,
    "10000": _7rlr49,
    "100000": _7rlr63,
    "1000000": _7rlr67,
    "10000000": _7rlr75,
    "100000000": _7rlr82,
    "1000000000": _7rlr76,
    "10000000000": _7rlr83,
    "100000000000": _7rlr87,
    "1000000000000": _7rlr68,
    "10000000000000": _7rlr77,
    "100000000000000": _7rlr84
}, _7rlr483 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _7rlr484 = {
    d: "d.",
    Ed: "E d.",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d. MMM y G",
    GyMMMEd: "E d. MMM y G",
    h: "h a",
    H: "HH",
    hm: "h.mm a",
    Hm: "HH.mm",
    hms: "h.mm.ss a",
    Hms: "HH.mm.ss",
    M: "L",
    Md: "d.M.",
    MEd: "E d.M",
    MMdd: "d.M.",
    MMM: "LLL",
    MMMd: "d. MMM",
    MMMEd: "E d. MMM",
    ms: "mm.ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M y G",
    yyyyMd: "d.M.y G",
    yyyyMEd: "E d.M.y G",
    yyyyMM: "MM.y G",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d. MMM y G",
    yyyyMMMEd: "E d. MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    E: "ccc",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss",
    MMMMd: "MMMM d"
}, _7rlr485 = {
    format: _7rlr469,
    standAlone: _7rlr466
}, _7rlr486 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _7rlr487 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _7rlr488 = {
    format: _7rlr473,
    standAlone: _7rlr473
}, _7rlr489 = {
    basic: _7rlr476,
    cldr: _7rlr483
}, _7rlr490 = {
    basic: _7rlr477,
    cldr: _7rlr484
}, _7rlr491 = {
    "long": _7rlr482,
    "short": _7rlr478,
    "default": "#,##0.###"
}, _7rlr492 = {
    d: {
        d: "d.–d."
    },
    h: _7rlr14,
    H: {
        H: "HH–HH"
    },
    hm: _7rlr109,
    Hm: _7rlr54,
    hmv: _7rlr123,
    Hmv: _7rlr69,
    hv: _7rlr33,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M.–M."
    },
    Md: _7rlr70,
    MEd: _7rlr92,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _7rlr55,
    MMMEd: _7rlr85,
    y: {
        y: "y–y G"
    },
    yM: _7rlr56,
    yMd: _7rlr298,
    yMEd: _7rlr403,
    yMMM: _7rlr64,
    yMMMd: _7rlr248,
    yMMMEd: _7rlr395,
    yMMMM: _7rlr78
}, _7rlr493 = {
    d: {
        d: "d–d"
    },
    h: _7rlr14,
    H: {
        H: "HH–HH"
    },
    hm: _7rlr112,
    Hm: _7rlr58,
    hmv: _7rlr126,
    Hmv: _7rlr71,
    hv: _7rlr33,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _7rlr72,
    MEd: _7rlr98,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _7rlr45,
    MMMEd: _7rlr99,
    y: {
        y: "U–U"
    },
    yM: _7rlr59,
    yMd: _7rlr299,
    yMEd: _7rlr423,
    yMMM: _7rlr60,
    yMMMd: _7rlr121,
    yMMMEd: _7rlr411,
    yMMMM: _7rlr73
}, _7rlr494 = {
    beforeCurrency: _7rlr486,
    afterCurrency: _7rlr486
}, _7rlr495 = {
    "short": _7rlr479,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _7rlr494
}, _7rlr496 = {
    abbreviated: _7rlr487,
    narrow: _7rlr487,
    wide: _7rlr487
}, _7rlr497 = {
    format: _7rlr496
}, _7rlr498 = {
    era: {
        displayName: "æra"
    },
    year: _7rlr454,
    month: _7rlr458,
    week: _7rlr456,
    day: _7rlr462,
    weekday: _7rlr5,
    dayperiod: _7rlr35,
    hour: _7rlr448,
    minute: _7rlr450,
    second: _7rlr452,
    zone: {
        displayName: "sone"
    },
    quarter: _7rlr449,
    sun: _7rlr415,
    mon: _7rlr416,
    tue: _7rlr417,
    wed: _7rlr421,
    thu: _7rlr425,
    fri: _7rlr418,
    sat: _7rlr426
}, _7rlr499 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _7rlr498
}, _7rlr500 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _7rlr491,
    currency: _7rlr495,
    percent: _7rlr1
}, _7rlr501 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _7rlr502 = {
    dateFormats: _7rlr490,
    datePartsOrder: "dmy",
    dateIntervalFormats: _7rlr492,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _7rlr480,
    dayPeriods: _7rlr459,
    monthNames: _7rlr488,
    eraNames: _7rlr46,
    quarterNames: _7rlr467,
    fields: _7rlr498
}, _7rlr503 = {
    dayParts: _7rlr468,
    days: _7rlr497,
    months: _7rlr497,
    years: _7rlr497,
    zodiacs: _7rlr468
}, _7rlr504 = {
    dateFormats: _7rlr489,
    datePartsOrder: "md",
    dateIntervalFormats: _7rlr493,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _7rlr480,
    dayPeriods: _7rlr459,
    cyclicNames: _7rlr503,
    monthNames: _7rlr481,
    monthPatterns: _7rlr455,
    quarterNames: _7rlr467,
    fields: _7rlr498
};

inter.id = "nn";

inter.delimiters = {
    quotationStart: "«",
    quotationEnd: "»",
    alternateQuotationStart: "‘",
    alternateQuotationEnd: "’"
};

inter.listPatterns = {
    "default": {
        "2": "{0} og {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0} og {1}"
    },
    unit: P.listPatterns.default,
    unitNarrow: {
        "2": "{0} {1}",
        start: "{0} {1}",
        middle: "{0} {1}",
        end: "{0} {1}"
    },
    unitShort: P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} Jordgravitasjon",
                other: "{0} Jordgravitasjoner"
            },
            angleDegree: {
                one: "{0} grad",
                other: "{0} grader"
            },
            angleArcMinute: {
                one: "{0} bueminutt",
                other: "{0} bueminutter"
            },
            angleArcSecond: {
                one: "{0} buesekund",
                other: "{0} buesekunder"
            },
            areaSquareKilometer: {
                one: "{0} kvadratkilometer",
                other: "{0} kvadratkilometer"
            },
            areaHectare: {
                one: "{0} hektar",
                other: "{0} hektar"
            },
            areaSquareMeter: {
                one: "{0} kvadratmeter",
                other: "{0} kvadratmeter"
            },
            areaSquareMile: {
                one: "{0} kvadrat-engelsk mil",
                other: "{0} kvadrat-engelske mil"
            },
            areaAcre: {
                one: "{0} amerikanskt tønneland",
                other: "{0} amerikanske tønneland"
            },
            areaSquareFoot: _7rlr91,
            durationYear: _7rlr21,
            durationMonth: {
                one: "{0} måned",
                other: "{0} måneder"
            },
            durationWeek: {
                one: "{0} uke",
                other: "{0} uker"
            },
            durationDay: {
                one: "{0} døgn",
                other: "{0} døgn"
            },
            durationHour: {
                one: "{0} time",
                other: "{0} timer"
            },
            durationMinute: {
                one: "{0} minutt",
                other: "{0} minutter"
            },
            durationSecond: {
                one: "{0} sekund",
                other: "{0} sekunder"
            },
            durationMillisecond: {
                one: "{0} millisekund",
                other: "{0} millisekunder"
            },
            lengthKilometer: {
                one: "{0} kilometer",
                other: "{0} kilometer"
            },
            lengthMeter: {
                one: "{0} meter",
                other: "{0} meter"
            },
            lengthCentimeter: {
                one: "{0} centimeter",
                other: "{0} centimeter"
            },
            lengthMillimeter: {
                one: "{0} millimeter",
                other: "{0} millimeter"
            },
            lengthPicometer: {
                one: "{0} pikometer",
                other: "{0} pikometer"
            },
            lengthMile: {
                one: "{0} engelsk mil",
                other: "{0} engelske mil"
            },
            lengthYard: {
                one: "{0} engelsk yard",
                other: "{0} engelske yard"
            },
            lengthFoot: _7rlr36,
            lengthInch: _7rlr66,
            lengthLightYear: _7rlr62,
            lengthMileScandinavian: _7rlr37,
            massKilogram: {
                one: "{0} kilogram",
                other: "{0} kilogram"
            },
            massGram: {
                one: "{0} gram",
                other: "{0} gram"
            },
            massPound: _7rlr81,
            massOunce: _7rlr61,
            powerKilowatt: {
                one: "{0} kilowatt",
                other: "{0} kilowatt"
            },
            powerWatt: {
                one: "{0} watt",
                other: "{0} watt"
            },
            powerHorsepower: {
                one: "{0} hestekraft",
                other: "{0} hestekrafter"
            },
            pressureHectopascal: {
                one: "{0} hektopascal",
                other: "{0} hektopascal"
            },
            pressureInchHg: {
                one: "{0} tomme kvikksølv",
                other: "{0} tommer kvikksølv"
            },
            pressureMillibar: {
                one: "{0} millibar",
                other: "{0} millibar"
            },
            speedKilometerPerHour: {
                one: "{0} kilometer per time",
                other: "{0} kilometer per time"
            },
            speedMeterPerSecond: {
                one: "{0} meter per sekund",
                other: "{0} meter per sekund"
            },
            speedMilePerHour: {
                one: "{0} engelsk mil per time",
                other: "{0} engelske mil per time"
            },
            temperatureCelsius: {
                one: "{0} grad Celsius",
                other: "{0} grader Celsius"
            },
            temperatureFahrenheit: {
                one: "{0} grad Fahrenheit",
                other: "{0} grader Fahrenheit"
            },
            volumeCubicKilometer: {
                one: "{0} kubikkilometer",
                other: "{0} kubikkilometer"
            },
            volumeCubicMile: {
                one: "{0} kubikk-engelsk mil",
                other: "{0} kubikk-engelske mil"
            },
            volumeLiter: {
                one: "{0} liter",
                other: "{0} liter"
            }
        },
        compoundUnit: {
            per: "{0} per {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                one: "{0} G",
                other: "{0} G"
            },
            angleDegree: _7rlr6,
            angleArcMinute: _7rlr7,
            angleArcSecond: _7rlr8,
            areaSquareKilometer: {
                one: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                one: "{0} ha",
                other: "{0} ha"
            },
            areaSquareMeter: {
                one: "{0} m²",
                other: "{0} m²"
            },
            areaSquareMile: _7rlr38,
            areaAcre: _7rlr22,
            areaSquareFoot: _7rlr91,
            durationYear: _7rlr21,
            durationMonth: {
                one: "{0} mån",
                other: "{0} mån"
            },
            durationWeek: {
                one: "{0} u",
                other: "{0} u"
            },
            durationDay: {
                one: "{0} d",
                other: "{0} d"
            },
            durationHour: {
                one: "{0} h",
                other: "{0} h"
            },
            durationMinute: {
                one: "{0} min",
                other: "{0} min"
            },
            durationSecond: {
                one: "{0} s",
                other: "{0} s"
            },
            durationMillisecond: {
                one: "{0} ms",
                other: "{0} ms"
            },
            lengthKilometer: {
                one: "{0} km",
                other: "{0} km"
            },
            lengthMeter: {
                one: "{0} m",
                other: "{0} m"
            },
            lengthCentimeter: {
                one: "{0} cm",
                other: "{0} cm"
            },
            lengthMillimeter: {
                one: "{0} mm",
                other: "{0} mm"
            },
            lengthPicometer: {
                one: "{0} pm",
                other: "{0} pm"
            },
            lengthMile: _7rlr23,
            lengthYard: _7rlr24,
            lengthFoot: _7rlr36,
            lengthInch: _7rlr66,
            lengthLightYear: _7rlr62,
            lengthMileScandinavian: _7rlr37,
            massKilogram: {
                one: "{0} kg",
                other: "{0} kg"
            },
            massGram: {
                one: "{0} g",
                other: "{0} g"
            },
            massPound: _7rlr81,
            massOunce: _7rlr61,
            powerKilowatt: {
                one: "{0} kW",
                other: "{0} kW"
            },
            powerWatt: {
                one: "{0} W",
                other: "{0} W"
            },
            powerHorsepower: {
                one: "{0} hk",
                other: "{0} hk"
            },
            pressureHectopascal: {
                one: "{0} hPa",
                other: "{0} hPa"
            },
            pressureInchHg: _7rlr47,
            pressureMillibar: {
                one: "{0} mbar",
                other: "{0} mbar"
            },
            speedKilometerPerHour: {
                one: "{0} km/h",
                other: "{0} km/h"
            },
            speedMeterPerSecond: {
                one: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: _7rlr48,
            temperatureCelsius: {
                one: "{0}°C",
                other: "{0}°C"
            },
            temperatureFahrenheit: _7rlr16,
            volumeCubicKilometer: {
                one: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMile: _7rlr39,
            volumeLiter: {
                one: "{0} l",
                other: "{0} l"
            },
            accelerationMeterPerSecondSquared: {
                other: "{0} m/s²"
            },
            angleRevolution: {
                other: "{0} rev"
            },
            angleRadian: {
                other: "{0} rad"
            },
            areaSquareCentimeter: {
                other: "{0} cm²"
            },
            areaSquareYard: {
                other: "{0} yd²"
            },
            areaSquareInch: {
                other: "{0} in²"
            },
            concentrKarat: {
                other: "{0} kt"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionLiterPerKilometer: {
                other: "{0} L/km"
            },
            "consumptionLiterPer-100kilometers": {
                other: "{0} L/100km"
            },
            consumptionMilePerGallon: {
                other: "{0} mpg US"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            digitalTerabyte: {
                other: "{0} TB"
            },
            digitalTerabit: {
                other: "{0} Tb"
            },
            digitalGigabyte: {
                other: "{0} GB"
            },
            digitalGigabit: {
                other: "{0} Gb"
            },
            digitalMegabyte: {
                other: "{0} MB"
            },
            digitalMegabit: {
                other: "{0} Mb"
            },
            digitalKilobyte: {
                other: "{0} kB"
            },
            digitalKilobit: {
                other: "{0} kb"
            },
            digitalByte: {
                other: "{0} byte"
            },
            digitalBit: {
                other: "{0} bit"
            },
            durationCentury: {
                other: "{0} c"
            },
            durationMicrosecond: {
                other: "{0} μs"
            },
            durationNanosecond: {
                other: "{0} ns"
            },
            electricAmpere: {
                other: "{0} A"
            },
            electricMilliampere: {
                other: "{0} mA"
            },
            electricOhm: {
                other: "{0} Ω"
            },
            electricVolt: {
                other: "{0} V"
            },
            energyKilocalorie: {
                other: "{0} kcal"
            },
            energyCalorie: {
                other: "{0} cal"
            },
            energyFoodcalorie: {
                other: "{0} Cal"
            },
            energyKilojoule: {
                other: "{0} kJ"
            },
            energyJoule: {
                other: "{0} J"
            },
            energyKilowattHour: {
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                other: "{0} kHz"
            },
            frequencyHertz: {
                other: "{0} Hz"
            },
            lengthDecimeter: {
                other: "{0} dm"
            },
            lengthMicrometer: {
                other: "{0} µm"
            },
            lengthNanometer: {
                other: "{0} nm"
            },
            lengthParsec: {
                other: "{0} pc"
            },
            lengthAstronomicalUnit: {
                other: "{0} au"
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            lengthNauticalMile: {
                other: "{0} nmi"
            },
            lightLux: {
                other: "{0} lx"
            },
            massMetricTon: {
                other: "{0} t"
            },
            massMilligram: {
                other: "{0} mg"
            },
            massMicrogram: {
                other: "{0} µg"
            },
            massTon: {
                other: "{0} tn"
            },
            massStone: {
                other: "{0} st"
            },
            massOunceTroy: {
                other: "{0} oz t"
            },
            massCarat: {
                other: "{0} CD"
            },
            powerGigawatt: {
                other: "{0} GW"
            },
            powerMegawatt: {
                other: "{0} MW"
            },
            powerMilliwatt: {
                other: "{0} mW"
            },
            pressureMillimeterOfMercury: {
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                other: "{0} psi"
            },
            speedKnot: {
                other: "{0} kn"
            },
            temperatureGeneric: {
                other: "{0}°"
            },
            temperatureKelvin: {
                other: "{0} K"
            },
            volumeCubicMeter: {
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                other: "{0} cm³"
            },
            volumeCubicYard: {
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                other: "{0} ft³"
            },
            volumeCubicInch: {
                other: "{0} in³"
            },
            volumeMegaliter: {
                other: "{0} ML"
            },
            volumeHectoliter: {
                other: "{0} hL"
            },
            volumeDeciliter: {
                other: "{0} dL"
            },
            volumeCentiliter: {
                other: "{0} cL"
            },
            volumeMilliliter: {
                other: "{0} mL"
            },
            volumePintMetric: {
                other: "{0} mpt"
            },
            volumeCupMetric: {
                other: "{0} mc"
            },
            volumeAcreFoot: {
                other: "{0} ac ft"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallon: {
                other: "{0} gal US"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            },
            volumeQuart: {
                other: "{0} qt"
            },
            volumePint: {
                other: "{0} pt"
            },
            volumeCup: {
                other: "{0} c"
            },
            volumeFluidOunce: {
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                other: "{0} tbsp"
            },
            volumeTeaspoon: {
                other: "{0} tsp"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                one: "{0}G",
                other: "{0}G"
            },
            angleDegree: _7rlr6,
            angleArcMinute: _7rlr7,
            angleArcSecond: _7rlr8,
            areaSquareKilometer: {
                one: "{0}km²",
                other: "{0}km²"
            },
            areaHectare: {
                one: "{0}ha",
                other: "{0}ha"
            },
            areaSquareMeter: {
                one: "{0}m²",
                other: "{0}m²"
            },
            areaSquareMile: _7rlr38,
            areaAcre: _7rlr22,
            areaSquareFoot: {
                one: "{0} ft²",
                other: "{0} ft²"
            },
            durationYear: {
                one: "{0}å",
                other: "{0}å"
            },
            durationMonth: _7rlr9,
            durationWeek: {
                one: "{0}u",
                other: "{0}u"
            },
            durationDay: {
                one: "{0}d",
                other: "{0}d"
            },
            durationHour: {
                one: "{0}h",
                other: "{0}h"
            },
            durationMinute: _7rlr9,
            durationSecond: {
                one: "{0}s",
                other: "{0}s"
            },
            durationMillisecond: {
                one: "{0}ms",
                other: "{0}ms"
            },
            lengthKilometer: {
                one: "{0}km",
                other: "{0}km"
            },
            lengthMeter: _7rlr9,
            lengthCentimeter: {
                one: "{0}cm",
                other: "{0}cm"
            },
            lengthMillimeter: {
                one: "{0}mm",
                other: "{0}mm"
            },
            lengthPicometer: {
                one: "{0}pm",
                other: "{0}pm"
            },
            lengthMile: _7rlr23,
            lengthYard: _7rlr24,
            lengthFoot: _7rlr36,
            lengthInch: _7rlr66,
            lengthLightYear: _7rlr62,
            lengthMileScandinavian: {
                one: "{0}mil",
                other: "{0}mil"
            },
            massKilogram: {
                one: "{0}kg",
                other: "{0}kg"
            },
            massGram: {
                one: "{0}g",
                other: "{0}g"
            },
            massPound: _7rlr81,
            massOunce: _7rlr61,
            powerKilowatt: {
                one: "{0}kW",
                other: "{0}kW"
            },
            powerWatt: {
                one: "{0}W",
                other: "{0}W"
            },
            powerHorsepower: {
                one: "{0}hk",
                other: "{0}hk"
            },
            pressureHectopascal: {
                one: "{0}hPa",
                other: "{0}hPa"
            },
            pressureInchHg: _7rlr47,
            pressureMillibar: {
                one: "{0}mbar",
                other: "{0}mbar"
            },
            speedKilometerPerHour: {
                one: "{0}km/h",
                other: "{0}km/h"
            },
            speedMeterPerSecond: {
                one: "{0}m/s",
                other: "{0}m/s"
            },
            speedMilePerHour: _7rlr48,
            temperatureCelsius: _7rlr6,
            temperatureFahrenheit: _7rlr16,
            volumeCubicKilometer: {
                one: "{0}km³",
                other: "{0}km³"
            },
            volumeCubicMile: _7rlr39,
            volumeLiter: {
                one: "{0}L",
                other: "{0}L"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH.mm", "-HH.mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "{0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} (+1)",
        standard: "{0} (+0)"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "à", "b", "c", "d", "e", "é", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "ó", "ò", "ô", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "æ", "ø", "å" ],
        auxiliary: [ "á", "ǎ", "č", "ç", "đ", "è", "ê", "ń", "ñ", "ŋ", "š", "ŧ", "ü", "ž", "ä", "ö" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "Æ", "Ø", "Å" ],
        punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "(", ")", "\\[", "\\]", "\\{", "\\}" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _7rlr451,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _7rlr500,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _7rlr500,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _7rlr451,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _7rlr451,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _7rlr451,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _7rlr451,
        digits: "renderEthiopic"
    },
    finance: _7rlr453,
    fullwide: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _7rlr451,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _7rlr451,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _7rlr451,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _7rlr451,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _7rlr457,
    hansfin: _7rlr463,
    hant: _7rlr457,
    hantfin: _7rlr463,
    hebr: {
        symbols: _7rlr451,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _7rlr451,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _7rlr457,
    jpanfin: _7rlr463,
    kali: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _7rlr451,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _7rlr451,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _7rlr451,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _7rlr451,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _7rlr451,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _7rlr451,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _7rlr451,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _7rlr451,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _7rlr453,
    nkoo: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _7rlr451,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _7rlr451,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _7rlr451,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _7rlr451,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _7rlr451,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _7rlr451,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _7rlr453,
    vaii: {
        symbols: _7rlr451,
        formats: _7rlr500,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _7rlr451,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _7rlr490,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7rlr492,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7rlr480,
        dayPeriods: _7rlr459,
        monthNames: _7rlr485,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _7rlr467,
        fields: _7rlr498
    },
    chinese: _7rlr504,
    coptic: {
        dateFormats: _7rlr490,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7rlr492,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7rlr480,
        dayPeriods: _7rlr459,
        monthNames: {
            format: _7rlr472,
            standAlone: _7rlr472
        },
        eraNames: _7rlr101,
        quarterNames: _7rlr467,
        fields: _7rlr498
    },
    dangi: _7rlr504,
    ethioaa: _7rlr499,
    ethiopic: {
        dateFormats: _7rlr490,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7rlr492,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7rlr480,
        dayPeriods: _7rlr459,
        monthNames: {
            format: _7rlr474,
            standAlone: _7rlr474
        },
        eraNames: _7rlr101,
        quarterNames: _7rlr467,
        fields: _7rlr498
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE d. MMMM y",
                longDate: "d. MMMM y",
                mediumDate: "d. MMM y",
                shortDate: "dd.MM.y",
                fullTime: "'kl'. HH.mm.ss zzzz",
                longTime: "HH.mm.ss z",
                mediumTime: "HH.mm.ss",
                shortTime: "HH.mm",
                shortDateTime: "dd.MM.y, HH.mm",
                mediumDateTime: "d. MMM y, HH.mm.ss",
                longDateTime: "d. MMMM y 'kl'. HH.mm.ss z",
                fullDateTime: "EEEE d. MMMM y 'kl'. HH.mm.ss zzzz"
            },
            cldr: {
                d: "d.",
                Ed: "E d.",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d. MMM y G",
                GyMMMEd: "E d. MMM y G",
                hm: "h.mm a",
                Hm: "HH.mm",
                hms: "h.mm.ss a",
                Hms: "HH.mm.ss",
                Md: "d.M.",
                MEd: "E d.M",
                MMdd: "d.M.",
                MMMd: "d. MMM",
                MMMEd: "E d. MMM",
                MMMMd: "d. MMMM",
                ms: "mm.ss",
                yM: "M y",
                yMd: "d.M.y",
                yMEd: "E d.M.y",
                yMM: "MM.y",
                yMMM: "MMM y",
                yMMMd: "d. MMM y",
                yMMMEd: "E d. MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y",
                E: "ccc",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                h: "h a",
                H: "HH",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                MMM: "LLL",
                y: "y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d.–d."
            },
            h: {
                h: "h–h a"
            },
            hm: {
                h: "h.mm–h.mm a",
                m: "h.mm–h.mm a"
            },
            Hm: _7rlr54,
            hmv: {
                h: "h.mm–h.mm a v",
                m: "h.mm–h.mm a v"
            },
            Hmv: _7rlr69,
            hv: {
                h: "h–h a v"
            },
            M: {
                M: "M.–M."
            },
            Md: {
                d: "dd.MM–dd.MM",
                M: "dd.MM–dd.MM"
            },
            MEd: _7rlr92,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _7rlr55,
            MMMEd: _7rlr85,
            y: {
                y: "y–y"
            },
            yM: {
                M: "MM.y–MM.y",
                y: "MM.y–MM.y"
            },
            yMd: {
                d: "dd.MM.y–dd.MM.y",
                M: "dd.MM.y–dd.MM.y",
                y: "dd.MM.y–dd.MM.y"
            },
            yMEd: {
                d: "E dd.MM.y–E dd.MM.y",
                M: "E dd.MM.y–E dd.MM.y",
                y: "E dd.MM.y–E dd.MM.y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y–MMM y"
            },
            yMMMd: {
                d: "d.–d. MMM y",
                M: "d. MMM–d. MMM y",
                y: "d. MMM y–d. MMM y"
            },
            yMMMEd: {
                d: "E d.–E d. MMM y",
                M: "E d. MMM–E d. MMM y",
                y: "E d. MMM y–E d. MMM y"
            },
            yMMMM: {
                M: "MMMM–MMMM y",
                y: "MMMM y–MMMM y"
            },
            H: {
                H: "HH–HH"
            },
            Hv: {
                H: "HH–HH v"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7rlr480,
        dayPeriods: _7rlr459,
        monthNames: _7rlr485,
        eraNames: {
            wide: [ "f.Kr.", "e.Kr." ],
            abbreviated: [ "f.Kr.", "e.Kr." ]
        },
        quarterNames: _7rlr467,
        fields: _7rlr498
    },
    hebrew: {
        dateFormats: _7rlr490,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7rlr492,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7rlr480,
        dayPeriods: _7rlr459,
        monthNames: {
            format: _7rlr470,
            standAlone: _7rlr470
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _7rlr467,
        fields: _7rlr498
    },
    indian: {
        dateFormats: _7rlr490,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7rlr492,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7rlr480,
        dayPeriods: _7rlr459,
        monthNames: {
            format: _7rlr475,
            standAlone: _7rlr475
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _7rlr467,
        fields: _7rlr498
    },
    islamic: _7rlr502,
    "islamic-umalqura": _7rlr502,
    "islamic-tbla": _7rlr502,
    "islamic-civil": _7rlr502,
    "islamic-rgsa": _7rlr502,
    iso8601: _7rlr499,
    japanese: {
        dateFormats: _7rlr490,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7rlr492,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7rlr480,
        dayPeriods: _7rlr459,
        monthNames: _7rlr485,
        eraNames: {
            wide: _7rlr501,
            abbreviated: _7rlr501
        },
        quarterNames: _7rlr467,
        fields: _7rlr498
    },
    persian: {
        dateFormats: _7rlr490,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7rlr492,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7rlr480,
        dayPeriods: _7rlr459,
        monthNames: {
            format: _7rlr471,
            standAlone: _7rlr471
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _7rlr467,
        fields: _7rlr498
    },
    roc: {
        dateFormats: _7rlr490,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7rlr492,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7rlr480,
        dayPeriods: _7rlr459,
        monthNames: _7rlr485,
        eraNames: {
            wide: _7rlr15,
            abbreviated: _7rlr15
        },
        quarterNames: _7rlr467,
        fields: _7rlr498
    },
    islamicc: _7rlr499
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinalReale(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderSpelloutCardinalReale = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalReale(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalReale(Math.floor(n)) + " komma " + this.renderSpelloutCardinalReale(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalReale(Math.floor(n / 1e15)) + " biljarder" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e15));
    if (n >= 1e15) return "éin biljard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalReale(Math.floor(n / 1e12)) + " biljoner" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e12));
    if (n >= 1e12) return "éin biljon" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalReale(Math.floor(n / 1e9)) + " miljarder" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e9));
    if (n >= 1e9) return "éin miljard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalReale(Math.floor(n / 1e6)) + " miljoner" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e6));
    if (n >= 1e6) return "éin miljon" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e6));
    if (n >= 1e3) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e3)) + " tusen" + (n === 1e3 ? "" : " og " + this.renderSpelloutCardinalReale(n % 1e3));
    if (n >= 100) return this.renderSpelloutCardinalNeuter(Math.floor(n / 100)) + " hundre" + (n === 100 ? "" : " og " + this.renderSpelloutCardinalReale(n % 100));
    if (n >= 90) return "nitti" + (n === 90 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 80) return "åtti" + (n === 80 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 70) return "søtti" + (n === 70 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 60) return "seksti" + (n === 60 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 50) return "femti" + (n === 50 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 40) return "førti" + (n === 40 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 30) return "tretti" + (n === 30 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 20) return "tjue" + (n === 20 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 19) return "nitten";
    if (n >= 18) return "atten";
    if (n >= 17) return "sytten";
    if (n >= 16) return "seksten";
    if (n >= 15) return "femten";
    if (n >= 14) return "fjorten";
    if (n >= 13) return "tretten";
    if (n >= 12) return "tolv";
    if (n >= 11) return "elleve";
    if (n >= 10) return "ti";
    if (n >= 9) return "ni";
    if (n >= 8) return "åtte";
    if (n >= 7) return "sju";
    if (n >= 6) return "seks";
    if (n >= 5) return "fem";
    if (n >= 4) return "fire";
    if (n >= 3) return "tre";
    if (n >= 2) return "to";
    if (n >= 1) return "éin";
    if (n >= 0) return "null";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderSpelloutCardinalNeuter = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalNeuter(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalNeuter(Math.floor(n)) + " komma " + this.renderSpelloutCardinalNeuter(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 2) return this.renderSpelloutCardinalReale(n);
    if (n >= 1) return "eitt";
    if (n >= 0) return "null";
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 37), {
    id: "America/North_Dakota/Center",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Center, Nord-Dakota",
    countryId: "US"
}, P.timeZones.slice(38, 41), P.timeZones.slice(42, 50), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mexico by",
    countryId: "MX"
}, P.timeZones.slice(51, 54), {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Påskeøya",
    countryId: "CL"
}, P.timeZones.slice(54, 63), {
    id: "America/Cancun",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Cancún",
    countryId: "MX"
}, P.timeZones.slice(64, 98), {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 129), {
    id: "America/Belem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Belém",
    countryId: "BR"
}, P.timeZones.slice(130, 158), {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azorane",
    countryId: "PT"
}, P.timeZones[160], {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Kapp Verde",
    countryId: "CV"
}, P.timeZones.slice(161, 166), P.timeZones.slice(167, 176), {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Kanariøyane",
    countryId: "ES"
}, {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lisboa",
    countryId: "PT"
}, P.timeZones.slice(177, 184), P.timeZones[185], {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones.slice(186, 200), P.timeZones.slice(201, 205), {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "København",
    countryId: "DK"
}, P.timeZones.slice(205, 210), {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luxemburg",
    countryId: "LU"
}, P.timeZones.slice(211, 286), {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moskva",
    countryId: "RU"
}, P.timeZones.slice(287, 300), {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Réunion",
    countryId: "RE"
}, P.timeZones.slice(301, 314), {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Maldivane",
    countryId: "MV"
}, P.timeZones.slice(315, 319), {
    id: "Asia/Tashkent",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Tasjkent",
    countryId: "UZ"
}, P.timeZones.slice(320, 351), {
    id: "Asia/Hong_Kong",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Hongkong",
    countryId: "HK"
}, P.timeZones.slice(352, 362), {
    id: "Asia/Ulaanbaatar",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Ulan Bator",
    countryId: "MN"
}, P.timeZones.slice(363, 419));

inter.territories = [ _7rlr318, _7rlr348, _7rlr204, _7rlr205, _7rlr357, _7rlr364, _7rlr206, _7rlr171, _7rlr249, _7rlr103, _7rlr380, _7rlr278, _7rlr207, _7rlr145, _7rlr106, _7rlr327, _7rlr328, _7rlr388, _7rlr370, _7rlr389, _7rlr300, _7rlr301, _7rlr279, _7rlr428, _7rlr208, _7rlr209, _7rlr302, _7rlr250, _7rlr172, _7rlr173, _7rlr146, _7rlr210, _7rlr174, _7rlr211, _7rlr400, _7rlr251, _7rlr107, _7rlr175, _7rlr381, _7rlr371, _7rlr252, _7rlr329, _7rlr212, _7rlr176, _7rlr319, _7rlr127, _7rlr147, _7rlr115, _7rlr119, _7rlr253, _7rlr280, _7rlr303, _7rlr133, _7rlr213, _7rlr214, _7rlr422, _7rlr412, _7rlr427, _7rlr424, _7rlr429, _7rlr118, _7rlr254, _7rlr255, _7rlr215, _7rlr148, _7rlr372, _7rlr320, _7rlr365, _7rlr216, _7rlr217, _7rlr218, _7rlr349, _7rlr350, _7rlr134, _7rlr321, _7rlr219, _7rlr281, _7rlr339, _7rlr366, _7rlr128, _7rlr256, _7rlr149, _7rlr177, _7rlr220, _7rlr150, _7rlr282, _7rlr221, _7rlr257, _7rlr304, _7rlr135, _7rlr283, _7rlr258, _7rlr178, _7rlr340, _7rlr179, _7rlr151, _7rlr305, _7rlr180, _7rlr259, _7rlr396, _7rlr152, _7rlr284, _7rlr136, _7rlr137, _7rlr181, _7rlr182, _7rlr183, _7rlr184, _7rlr222, _7rlr153, _7rlr185, _7rlr186, _7rlr285, _7rlr223, _7rlr116, _7rlr306, _7rlr358, _7rlr382, _7rlr307, _7rlr154, _7rlr138, _7rlr322, _7rlr260, _7rlr108, _7rlr261, _7rlr373, _7rlr351, _7rlr224, _7rlr225, _7rlr187, _7rlr341, _7rlr188, _7rlr139, _7rlr189, _7rlr226, _7rlr227, _7rlr228, _7rlr155, _7rlr342, _7rlr229, _7rlr308, _7rlr374, _7rlr309, _7rlr286, _7rlr190, _7rlr262, _7rlr287, _7rlr140, _7rlr156, _7rlr131, _7rlr230, _7rlr343, _7rlr310, _7rlr311, _7rlr288, _7rlr231, _7rlr375, _7rlr191, _7rlr383, _7rlr404, _7rlr232, _7rlr192, _7rlr263, _7rlr312, _7rlr313, _7rlr264, _7rlr233, _7rlr234, _7rlr157, _7rlr289, _7rlr405, _7rlr158, _7rlr323, _7rlr290, _7rlr159, _7rlr235, _7rlr141, _7rlr390, _7rlr391, _7rlr314, _7rlr352, _7rlr160, _7rlr330, _7rlr331, _7rlr142, _7rlr359, _7rlr265, _7rlr161, _7rlr406, _7rlr193, _7rlr360, _7rlr266, _7rlr143, _7rlr267, _7rlr162, _7rlr376, _7rlr268, _7rlr324, _7rlr163, _7rlr236, _7rlr269, _7rlr194, _7rlr237, _7rlr367, _7rlr332, _7rlr333, _7rlr334, _7rlr164, _7rlr315, _7rlr335, _7rlr238, _7rlr407, _7rlr410, _7rlr397, _7rlr195, _7rlr325, _7rlr336, _7rlr291, _7rlr270, _7rlr271, _7rlr239, _7rlr196, _7rlr292, _7rlr413, _7rlr293, _7rlr408, _7rlr419, _7rlr344, _7rlr165, _7rlr240, _7rlr401, _7rlr197, _7rlr241, _7rlr294, _7rlr166, _7rlr398, _7rlr316, _7rlr392, _7rlr368, _7rlr384, _7rlr385, _7rlr295, _7rlr296, _7rlr399, _7rlr409, _7rlr337, _7rlr198, _7rlr272, _7rlr167, _7rlr273, _7rlr144, _7rlr242, _7rlr168, _7rlr386, _7rlr129, _7rlr274, _7rlr243, _7rlr338, _7rlr402, _7rlr199, _7rlr200, _7rlr275, _7rlr132, _7rlr130, _7rlr201, _7rlr244, _7rlr202, _7rlr245, _7rlr317, _7rlr246, _7rlr345, _7rlr297, _7rlr393, _7rlr377, _7rlr394, _7rlr326, _7rlr247, _7rlr369, _7rlr169, {
    id: "QO",
    displayName: "Ytre Oseania",
    regionId: "009",
    hasTimeZones: false
}, _7rlr203, _7rlr276, _7rlr414, _7rlr100, _7rlr170 ];

inter.regions = [ _7rlr348, _7rlr357, _7rlr328, _7rlr388, _7rlr370, _7rlr389, _7rlr428, _7rlr349, _7rlr358, _7rlr375, _7rlr383, _7rlr390, _7rlr391, _7rlr359, _7rlr376, _7rlr407, _7rlr410, _7rlr397, _7rlr392, _7rlr368, _7rlr384, _7rlr399, _7rlr409, _7rlr393, _7rlr377, _7rlr394, _7rlr414, _7rlr100 ];

inter.countries = [ _7rlr318, _7rlr204, _7rlr205, _7rlr364, _7rlr206, _7rlr171, _7rlr249, _7rlr103, _7rlr380, _7rlr278, _7rlr207, _7rlr145, _7rlr106, _7rlr327, _7rlr300, _7rlr301, _7rlr279, _7rlr208, _7rlr209, _7rlr302, _7rlr250, _7rlr172, _7rlr173, _7rlr146, _7rlr210, _7rlr174, _7rlr211, _7rlr400, _7rlr251, _7rlr107, _7rlr175, _7rlr381, _7rlr371, _7rlr252, _7rlr329, _7rlr212, _7rlr176, _7rlr319, _7rlr127, _7rlr147, _7rlr115, _7rlr119, _7rlr253, _7rlr280, _7rlr303, _7rlr133, _7rlr213, _7rlr214, _7rlr422, _7rlr412, _7rlr427, _7rlr424, _7rlr429, _7rlr118, _7rlr254, _7rlr255, _7rlr215, _7rlr148, _7rlr372, _7rlr320, _7rlr365, _7rlr216, _7rlr217, _7rlr218, _7rlr350, _7rlr134, _7rlr321, _7rlr219, _7rlr281, _7rlr339, _7rlr366, _7rlr128, _7rlr256, _7rlr149, _7rlr177, _7rlr220, _7rlr150, _7rlr282, _7rlr221, _7rlr257, _7rlr304, _7rlr135, _7rlr283, _7rlr258, _7rlr178, _7rlr340, _7rlr179, _7rlr151, _7rlr305, _7rlr180, _7rlr259, _7rlr396, _7rlr152, _7rlr284, _7rlr136, _7rlr137, _7rlr181, _7rlr182, _7rlr183, _7rlr184, _7rlr222, _7rlr153, _7rlr185, _7rlr186, _7rlr285, _7rlr223, _7rlr116, _7rlr306, _7rlr382, _7rlr307, _7rlr154, _7rlr138, _7rlr322, _7rlr260, _7rlr108, _7rlr261, _7rlr373, _7rlr351, _7rlr224, _7rlr225, _7rlr187, _7rlr341, _7rlr188, _7rlr139, _7rlr189, _7rlr226, _7rlr227, _7rlr228, _7rlr155, _7rlr342, _7rlr229, _7rlr308, _7rlr374, _7rlr309, _7rlr286, _7rlr190, _7rlr262, _7rlr287, _7rlr140, _7rlr156, _7rlr131, _7rlr230, _7rlr343, _7rlr310, _7rlr311, _7rlr288, _7rlr231, _7rlr191, _7rlr404, _7rlr232, _7rlr192, _7rlr263, _7rlr312, _7rlr313, _7rlr264, _7rlr233, _7rlr234, _7rlr157, _7rlr289, _7rlr405, _7rlr158, _7rlr323, _7rlr290, _7rlr159, _7rlr235, _7rlr141, _7rlr314, _7rlr352, _7rlr160, _7rlr330, _7rlr331, _7rlr142, _7rlr265, _7rlr161, _7rlr406, _7rlr193, _7rlr360, _7rlr266, _7rlr143, _7rlr267, _7rlr162, _7rlr268, _7rlr324, _7rlr163, _7rlr236, _7rlr269, _7rlr194, _7rlr237, _7rlr367, _7rlr332, _7rlr333, _7rlr334, _7rlr164, _7rlr315, _7rlr335, _7rlr238, _7rlr195, _7rlr325, _7rlr336, _7rlr291, _7rlr270, _7rlr271, _7rlr239, _7rlr196, _7rlr292, _7rlr413, _7rlr293, _7rlr408, _7rlr419, _7rlr344, _7rlr165, _7rlr240, _7rlr401, _7rlr197, _7rlr241, _7rlr294, _7rlr166, _7rlr398, _7rlr316, _7rlr385, _7rlr295, _7rlr296, _7rlr337, _7rlr198, _7rlr272, _7rlr167, _7rlr273, _7rlr144, _7rlr242, _7rlr168, _7rlr386, _7rlr129, _7rlr274, _7rlr243, _7rlr338, _7rlr402, _7rlr199, _7rlr200, _7rlr275, _7rlr132, _7rlr130, _7rlr201, _7rlr244, _7rlr202, _7rlr245, _7rlr317, _7rlr246, _7rlr345, _7rlr297, _7rlr326, _7rlr247, _7rlr369, _7rlr169, _7rlr203, _7rlr276, _7rlr170 ];

inter.languages = [ {
    id: "ab",
    displayName: "abkhasisk"
}, {
    id: "ace",
    displayName: "achinesisk"
}, {
    id: "ach",
    displayName: "acoli"
}, {
    id: "ada",
    displayName: "adangme"
}, {
    id: "ady",
    displayName: "adyghe"
}, {
    id: "aa",
    displayName: "afar"
}, {
    id: "afh",
    displayName: "afrihili"
}, {
    id: "af",
    displayName: "afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ain",
    displayName: "ainu"
}, {
    id: "ak",
    displayName: "akan",
    nativeDisplayName: "Akan"
}, {
    id: "akk",
    displayName: "akkadisk"
}, {
    id: "ale",
    displayName: "aleutisk"
}, {
    id: "en_us",
    displayName: "engelsk (amerikansk)",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "enaresamisk",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "anp",
    displayName: "angika"
}, {
    id: "an",
    displayName: "aragonsk"
}, {
    id: "arc",
    displayName: "arameisk"
}, {
    id: "arp",
    displayName: "arapaho"
}, {
    id: "arn",
    displayName: "araukansk"
}, {
    id: "arw",
    displayName: "arawak"
}, {
    id: "rup",
    displayName: "aromansk"
}, {
    id: "ast",
    displayName: "asturisk",
    nativeDisplayName: "asturianu"
}, {
    id: "cch",
    displayName: "atsam"
}, {
    id: "frs",
    displayName: "austfrisisk"
}, {
    id: "en_au",
    displayName: "australisk engelsk",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "avarisk"
}, {
    id: "ae",
    displayName: "avestisk"
}, {
    id: "awa",
    displayName: "awadhi"
}, {
    id: "ay",
    displayName: "aymara"
}, {
    id: "az",
    displayName: "aserbajdsjansk",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "malayisk",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bss",
    displayName: "bakossi"
}, {
    id: "ban",
    displayName: "balinesisk"
}, {
    id: "bal",
    displayName: "baluchi"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bax",
    displayName: "bamun"
}, {
    id: "ba",
    displayName: "basjkirsk"
}, {
    id: "bej",
    displayName: "beja"
}, {
    id: "bho",
    displayName: "bhojpuri"
}, {
    id: "bik",
    displayName: "bikol"
}, {
    id: "bin",
    displayName: "bini"
}, {
    id: "bi",
    displayName: "bislama"
}, {
    id: "byn",
    displayName: "blin"
}, {
    id: "zbl",
    displayName: "blissymbol"
}, {
    id: "bs",
    displayName: "bosnisk",
    nativeDisplayName: "bosanski"
}, {
    id: "bra",
    displayName: "braj"
}, {
    id: "br",
    displayName: "bretonsk",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "britisk engelsk",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "buginesisk"
}, {
    id: "bua",
    displayName: "burjatisk"
}, {
    id: "cad",
    displayName: "caddo"
}, {
    id: "en_ca",
    displayName: "kanadisk engelsk",
    nativeDisplayName: "Canadian English"
}, {
    id: "ca",
    displayName: "katalansk",
    nativeDisplayName: "català"
}, {
    id: "ceb",
    displayName: "cebuansk"
}, {
    id: "chg",
    displayName: "chagatai"
}, {
    id: "ch",
    displayName: "chamorro"
}, {
    id: "chy",
    displayName: "cheyenne"
}, {
    id: "chb",
    displayName: "chibcha"
}, {
    id: "chn",
    displayName: "chinook"
}, {
    id: "chp",
    displayName: "chipewiansk"
}, {
    id: "sn",
    displayName: "shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cho",
    displayName: "choctaw"
}, {
    id: "chk",
    displayName: "chuukesisk"
}, {
    id: "cr",
    displayName: "cree"
}, {
    id: "mus",
    displayName: "creek"
}, {
    id: "cy",
    displayName: "walisisk",
    nativeDisplayName: "Cymraeg"
}, {
    id: "dak",
    displayName: "dakota"
}, {
    id: "da",
    displayName: "dansk",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "dargwa"
}, {
    id: "se",
    displayName: "nordsamisk",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "del",
    displayName: "delaware"
}, {
    id: "de",
    displayName: "tysk",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "dinka"
}, {
    id: "dv",
    displayName: "divehi"
}, {
    id: "doi",
    displayName: "dogri"
}, {
    id: "dgr",
    displayName: "dogrib"
}, {
    id: "dsb",
    displayName: "lågsorbisk",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "dyu",
    displayName: "dyula"
}, {
    id: "et",
    displayName: "estisk",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efik"
}, {
    id: "eka",
    displayName: "ekajuk"
}, {
    id: "elx",
    displayName: "elamittisk"
}, {
    id: "en",
    displayName: "engelsk",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "erzya"
}, {
    id: "es",
    displayName: "spansk",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "iberisk spansk",
    nativeDisplayName: "español de España"
}, {
    id: "es_419",
    displayName: "latinamerikansk spansk",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "baskisk",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ee",
    displayName: "ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "fang"
}, {
    id: "fat",
    displayName: "fanti"
}, {
    id: "fj",
    displayName: "fijiansk"
}, {
    id: "fil",
    displayName: "filippinsk",
    nativeDisplayName: "Filipino"
}, {
    id: "mul",
    displayName: "fleire språk"
}, {
    id: "fon",
    displayName: "fon"
}, {
    id: "fr",
    displayName: "fransk",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "kanadisk fransk",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "sveitsisk fransk",
    nativeDisplayName: "français suisse"
}, {
    id: "fur",
    displayName: "friuliansk",
    nativeDisplayName: "furlan"
}, {
    id: "phn",
    displayName: "fønikisk"
}, {
    id: "fo",
    displayName: "færøysk",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "ga"
}, {
    id: "ga",
    displayName: "irsk",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gl",
    displayName: "galicisk",
    nativeDisplayName: "galego"
}, {
    id: "egy",
    displayName: "gammalegyptisk"
}, {
    id: "ang",
    displayName: "gammalengelsk"
}, {
    id: "fro",
    displayName: "gammalfransk"
}, {
    id: "grc",
    displayName: "gammalgresk"
}, {
    id: "goh",
    displayName: "gammalhøgtysk"
}, {
    id: "sga",
    displayName: "gammalirsk"
}, {
    id: "non",
    displayName: "gammalnorsk"
}, {
    id: "peo",
    displayName: "gammalpersisk"
}, {
    id: "pro",
    displayName: "gammalprovençalsk"
}, {
    id: "gay",
    displayName: "gayo"
}, {
    id: "gba",
    displayName: "gbaya"
}, {
    id: "gez",
    displayName: "ges"
}, {
    id: "ki",
    displayName: "kikuyu",
    nativeDisplayName: "Gikuyu"
}, {
    id: "gon",
    displayName: "gondi"
}, {
    id: "gor",
    displayName: "gorontalo"
}, {
    id: "got",
    displayName: "gotisk"
}, {
    id: "grb",
    displayName: "grebo"
}, {
    id: "gn",
    displayName: "guarani"
}, {
    id: "gwi",
    displayName: "gwichin"
}, {
    id: "gd",
    displayName: "skotsk-gælisk",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "hai",
    displayName: "haida"
}, {
    id: "ht",
    displayName: "haitisk"
}, {
    id: "ha",
    displayName: "hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "hz",
    displayName: "herero"
}, {
    id: "hit",
    displayName: "hettittisk"
}, {
    id: "bez",
    displayName: "bena (Tanzania)",
    nativeDisplayName: "Hibena"
}, {
    id: "hil",
    displayName: "hiligaynon"
}, {
    id: "ho",
    displayName: "hiri motu"
}, {
    id: "hmn",
    displayName: "hmong"
}, {
    id: "hsb",
    displayName: "høgsorbisk",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "kroatisk",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "hupa"
}, {
    id: "iba",
    displayName: "iban"
}, {
    id: "ibb",
    displayName: "ibibio"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "io",
    displayName: "ido"
}, {
    id: "ig",
    displayName: "ibo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "iloko"
}, {
    id: "id",
    displayName: "indonesisk",
    nativeDisplayName: "Indonesia"
}, {
    id: "inh",
    displayName: "ingusjisk"
}, {
    id: "ia",
    displayName: "interlingua"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "iu",
    displayName: "inuktitut"
}, {
    id: "ik",
    displayName: "inupiak"
}, {
    id: "sbp",
    displayName: "sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "nord-ndebele",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "italiensk",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "javanesisk"
}, {
    id: "kaj",
    displayName: "jju"
}, {
    id: "dyo",
    displayName: "jola-fonyi",
    nativeDisplayName: "joola"
}, {
    id: "jrb",
    displayName: "jødearabisk"
}, {
    id: "jpr",
    displayName: "jødepersisk"
}, {
    id: "kbd",
    displayName: "kabardisk"
}, {
    id: "kea",
    displayName: "kapverdisk",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kac",
    displayName: "kachin"
}, {
    id: "kkj",
    displayName: "kako",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "kalaallisut; grønlandsk",
    nativeDisplayName: "kalaallisut"
}, {
    id: "xal",
    displayName: "kalmyk"
}, {
    id: "kr",
    displayName: "kanuri"
}, {
    id: "krc",
    displayName: "karachay-balkar"
}, {
    id: "kaa",
    displayName: "karakalpakisk"
}, {
    id: "krl",
    displayName: "karelsk"
}, {
    id: "car",
    displayName: "karibisk"
}, {
    id: "csb",
    displayName: "kasjubisk"
}, {
    id: "kaw",
    displayName: "kawi"
}, {
    id: "kw",
    displayName: "kornisk",
    nativeDisplayName: "kernewek"
}, {
    id: "kha",
    displayName: "khasi"
}, {
    id: "kho",
    displayName: "khotanesisk"
}, {
    id: "rof",
    displayName: "rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "kg",
    displayName: "kikongo"
}, {
    id: "kmb",
    displayName: "kimbundu"
}, {
    id: "rw",
    displayName: "kinjarwanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asu (Tanzania)",
    nativeDisplayName: "Kipare"
}, {
    id: "gil",
    displayName: "kiribatisk"
}, {
    id: "rwk",
    displayName: "rwa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "sw",
    displayName: "swahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "nwc",
    displayName: "klassisk newarisk"
}, {
    id: "syc",
    displayName: "klassisk syrisk"
}, {
    id: "tlh",
    displayName: "klingon"
}, {
    id: "kv",
    displayName: "komi"
}, {
    id: "cop",
    displayName: "koptisk"
}, {
    id: "kfo",
    displayName: "koro"
}, {
    id: "co",
    displayName: "korsikansk"
}, {
    id: "kos",
    displayName: "kosraeansk"
}, {
    id: "kpe",
    displayName: "kpelle"
}, {
    id: "crh",
    displayName: "krimtatarisk"
}, {
    id: "kj",
    displayName: "kuanyama"
}, {
    id: "kum",
    displayName: "kumyk"
}, {
    id: "ku",
    displayName: "kurdisk"
}, {
    id: "kru",
    displayName: "kurukh"
}, {
    id: "kut",
    displayName: "kutenai"
}, {
    id: "nmg",
    displayName: "kwasio",
    nativeDisplayName: "Kwasio"
}, {
    id: "ebu",
    displayName: "kiembu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "lad",
    displayName: "ladinsk"
}, {
    id: "lah",
    displayName: "lahnda"
}, {
    id: "lam",
    displayName: "lamba"
}, {
    id: "la",
    displayName: "latin"
}, {
    id: "lv",
    displayName: "latvisk",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "tonga (Tonga-øyane)",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lez",
    displayName: "lezghian"
}, {
    id: "lt",
    displayName: "litauisk",
    nativeDisplayName: "lietuvių"
}, {
    id: "li",
    displayName: "limburgisk"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "jbo",
    displayName: "lojban"
}, {
    id: "loz",
    displayName: "lozi"
}, {
    id: "lua",
    displayName: "luba-lulua"
}, {
    id: "lg",
    displayName: "ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "luiseno"
}, {
    id: "smj",
    displayName: "lulesamisk"
}, {
    id: "luy",
    displayName: "olulujia",
    nativeDisplayName: "Luluhia"
}, {
    id: "lun",
    displayName: "lunda"
}, {
    id: "lus",
    displayName: "lushai"
}, {
    id: "nds",
    displayName: "lågtysk"
}, {
    id: "lb",
    displayName: "luxemburgsk",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "masai",
    nativeDisplayName: "Maa"
}, {
    id: "mad",
    displayName: "maduresisk"
}, {
    id: "mag",
    displayName: "magahi"
}, {
    id: "hu",
    displayName: "ungarsk",
    nativeDisplayName: "magyar"
}, {
    id: "mai",
    displayName: "maithili"
}, {
    id: "mak",
    displayName: "makasar"
}, {
    id: "mg",
    displayName: "madagassisk",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "maltesisk",
    nativeDisplayName: "Malti"
}, {
    id: "mdr",
    displayName: "mandar"
}, {
    id: "man",
    displayName: "mandingo"
}, {
    id: "mnc",
    displayName: "mandsju"
}, {
    id: "mni",
    displayName: "manipuri"
}, {
    id: "mi",
    displayName: "maori"
}, {
    id: "chm",
    displayName: "mari"
}, {
    id: "mh",
    displayName: "marshallesisk"
}, {
    id: "mwr",
    displayName: "marwari"
}, {
    id: "enm",
    displayName: "mellomengelsk"
}, {
    id: "frm",
    displayName: "mellomfransk"
}, {
    id: "gmh",
    displayName: "mellomhøgtysk"
}, {
    id: "mga",
    displayName: "mellomirsk"
}, {
    id: "dum",
    displayName: "mellumnederlandsk"
}, {
    id: "men",
    displayName: "mende"
}, {
    id: "mic",
    displayName: "micmac"
}, {
    id: "min",
    displayName: "minangkabau"
}, {
    id: "mwl",
    displayName: "mirandesisk"
}, {
    id: "moh",
    displayName: "mohawk"
}, {
    id: "mdf",
    displayName: "moksha"
}, {
    id: "ro_md",
    displayName: "moldavisk",
    nativeDisplayName: "moldovenească"
}, {
    id: "lol",
    displayName: "mongo"
}, {
    id: "mos",
    displayName: "mossi"
}, {
    id: "mua",
    displayName: "mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "nap",
    displayName: "napolitansk"
}, {
    id: "na",
    displayName: "nauru"
}, {
    id: "nv",
    displayName: "navajo"
}, {
    id: "ng",
    displayName: "ndonga"
}, {
    id: "nl",
    displayName: "nederlandsk",
    nativeDisplayName: "Nederlands"
}, {
    id: "new",
    displayName: "newari"
}, {
    id: "nia",
    displayName: "nias"
}, {
    id: "niu",
    displayName: "niueansk"
}, {
    id: "nog",
    displayName: "nogai"
}, {
    id: "frr",
    displayName: "nordfrisisk"
}, {
    id: "nso",
    displayName: "nordsotho"
}, {
    id: "no",
    displayName: "norsk"
}, {
    id: "nb",
    displayName: "bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "yav",
    displayName: "yangben",
    nativeDisplayName: "nuasue"
}, {
    id: "nym",
    displayName: "nyamwezi"
}, {
    id: "ny",
    displayName: "nyanja"
}, {
    id: "nn",
    displayName: "nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "nyo",
    displayName: "nyoro"
}, {
    id: "nzi",
    displayName: "nzima"
}, {
    id: "nqo",
    displayName: "n’ko"
}, {
    id: "oj",
    displayName: "ojibwa"
}, {
    id: "oc",
    displayName: "oksitansk"
}, {
    id: "om",
    displayName: "oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "osage"
}, {
    id: "ota",
    displayName: "ottomansk tyrkisk"
}, {
    id: "uz",
    displayName: "usbekisk",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pal",
    displayName: "pahlavi"
}, {
    id: "pau",
    displayName: "palauisk"
}, {
    id: "pi",
    displayName: "pali"
}, {
    id: "pam",
    displayName: "pampanga"
}, {
    id: "pag",
    displayName: "pangasinan"
}, {
    id: "pap",
    displayName: "papiamento"
}, {
    id: "pl",
    displayName: "polsk",
    nativeDisplayName: "polski"
}, {
    id: "pon",
    displayName: "ponapisk"
}, {
    id: "pt",
    displayName: "portugisisk",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "brasiliansk portugisisk",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "europeisk portugisisk",
    nativeDisplayName: "português europeu"
}, {
    id: "ff",
    displayName: "fulani",
    nativeDisplayName: "Pulaar"
}, {
    id: "raj",
    displayName: "rajasthani"
}, {
    id: "rap",
    displayName: "rapanui"
}, {
    id: "rar",
    displayName: "rarotongansk"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "rom",
    displayName: "romani"
}, {
    id: "ro",
    displayName: "rumensk",
    nativeDisplayName: "română"
}, {
    id: "root",
    displayName: "rot"
}, {
    id: "rm",
    displayName: "retoromansk",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "quechua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "sam",
    displayName: "samaritansk arameisk"
}, {
    id: "sm",
    displayName: "samoansk"
}, {
    id: "sad",
    displayName: "sandawe"
}, {
    id: "sa",
    displayName: "sanskrit"
}, {
    id: "sat",
    displayName: "santali"
}, {
    id: "sc",
    displayName: "sardinsk"
}, {
    id: "sas",
    displayName: "sasak"
}, {
    id: "de_ch",
    displayName: "sveitsisk høgtysk",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "sveitsertysk",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "sel",
    displayName: "selkupisk"
}, {
    id: "sh",
    displayName: "serbokroatisk"
}, {
    id: "srr",
    displayName: "serer"
}, {
    id: "shn",
    displayName: "shan"
}, {
    id: "swb",
    displayName: "shimaore"
}, {
    id: "sq",
    displayName: "albansk",
    nativeDisplayName: "shqip"
}, {
    id: "scn",
    displayName: "siciliansk"
}, {
    id: "sid",
    displayName: "sidamo"
}, {
    id: "bla",
    displayName: "siksika"
}, {
    id: "sd",
    displayName: "sindhi"
}, {
    id: "sms",
    displayName: "skoltesamisk"
}, {
    id: "sco",
    displayName: "skotsk"
}, {
    id: "den",
    displayName: "slavej"
}, {
    id: "sk",
    displayName: "slovakisk",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "slovensk",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "sogdisk"
}, {
    id: "snk",
    displayName: "soninke"
}, {
    id: "so",
    displayName: "somali",
    nativeDisplayName: "Soomaali"
}, {
    id: "srn",
    displayName: "sranan tongo"
}, {
    id: "suk",
    displayName: "sukuma"
}, {
    id: "sux",
    displayName: "sumerisk"
}, {
    id: "su",
    displayName: "sundanesisk"
}, {
    id: "fi",
    displayName: "finsk",
    nativeDisplayName: "suomi"
}, {
    id: "sus",
    displayName: "susu"
}, {
    id: "sv",
    displayName: "svensk",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "swati"
}, {
    id: "syr",
    displayName: "syrisk"
}, {
    id: "sg",
    displayName: "sango",
    nativeDisplayName: "Sängö"
}, {
    id: "alt",
    displayName: "sør-altai"
}, {
    id: "nr",
    displayName: "sør-ndebele"
}, {
    id: "sma",
    displayName: "sørsamisk"
}, {
    id: "st",
    displayName: "sørsotho"
}, {
    id: "tl",
    displayName: "tagalog"
}, {
    id: "ty",
    displayName: "tahitisk"
}, {
    id: "tmh",
    displayName: "tamasjek"
}, {
    id: "kab",
    displayName: "kabylsk",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "twq",
    displayName: "tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "tatarisk"
}, {
    id: "tg",
    displayName: "tatsjikisk"
}, {
    id: "tem",
    displayName: "temne"
}, {
    id: "ter",
    displayName: "tereno"
}, {
    id: "tet",
    displayName: "tetum"
}, {
    id: "nus",
    displayName: "nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "tig",
    displayName: "tigré"
}, {
    id: "tiv",
    displayName: "tivi"
}, {
    id: "vi",
    displayName: "vietnamesisk",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tli",
    displayName: "tlingit"
}, {
    id: "tpi",
    displayName: "tok pisin"
}, {
    id: "tkl",
    displayName: "tokelau"
}, {
    id: "tog",
    displayName: "tonga (Nyasa)"
}, {
    id: "lu",
    displayName: "luba-katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tsi",
    displayName: "tsimshian"
}, {
    id: "cv",
    displayName: "tsjuvansk"
}, {
    id: "ts",
    displayName: "tsonga"
}, {
    id: "tn",
    displayName: "tswana"
}, {
    id: "tum",
    displayName: "tumbuka"
}, {
    id: "tvl",
    displayName: "tuvalu"
}, {
    id: "tyv",
    displayName: "tuvinisk"
}, {
    id: "tw",
    displayName: "twi"
}, {
    id: "kcg",
    displayName: "tyap"
}, {
    id: "tk",
    displayName: "turkmensk",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "tyrkisk",
    nativeDisplayName: "Türkçe"
}, {
    id: "udm",
    displayName: "udmurt"
}, {
    id: "uga",
    displayName: "ugaritisk"
}, {
    id: "und",
    displayName: "ukjent språk"
}, {
    id: "umb",
    displayName: "umbundu"
}, {
    id: "zxx",
    displayName: "utan språkleg innhald"
}, {
    id: "wa",
    displayName: "vallonsk"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "nl_be",
    displayName: "flamsk",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "volapyk",
    nativeDisplayName: "Volapük"
}, {
    id: "vot",
    displayName: "votisk"
}, {
    id: "wal",
    displayName: "walamo"
}, {
    id: "war",
    displayName: "waray"
}, {
    id: "was",
    displayName: "washo"
}, {
    id: "fy",
    displayName: "vestfrisisk",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "wolof"
}, {
    id: "xh",
    displayName: "xhosa"
}, {
    id: "yao",
    displayName: "yao"
}, {
    id: "yap",
    displayName: "yapesisk"
}, {
    id: "zap",
    displayName: "zapotec"
}, {
    id: "dje",
    displayName: "zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "zaza"
}, {
    id: "zen",
    displayName: "zenaga"
}, {
    id: "za",
    displayName: "zhuang"
}, {
    id: "zun",
    displayName: "zuni"
}, {
    id: "yo",
    displayName: "joruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islandsk",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "austerriksk tysk",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "tsjekkisk",
    nativeDisplayName: "čeština"
}, {
    id: "bas",
    displayName: "basa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "hawaiisk",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "gresk",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "kviterussisk",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bulgarsk",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "ossetisk",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "kirgisisk",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "makedonsk",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongolsk",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "tsjetsjensk",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "russisk",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "jakutsk",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "serbisk",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ukrainsk",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "kyrkjeslavisk",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "kasakhisk",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armensk",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "jiddisk",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "hebraisk",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uigurisk",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "arabisk",
    nativeDisplayName: "العربية"
}, {
    id: "fa",
    displayName: "persisk",
    nativeDisplayName: "فارسی"
}, {
    id: "ps",
    displayName: "pashto",
    nativeDisplayName: "پښتو"
}, {
    id: "ks",
    displayName: "kasjmiri",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepalsk",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "assamisk",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengali",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "panjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gujarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malayalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "singalesisk",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "thai",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "laotisk",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibetansk",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "burmesisk",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "georgisk",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrinja",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amharisk",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "khmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zh",
    displayName: "kinesisk",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japansk",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "forenkla kinesisk",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "kantonesisk",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "tradisjonell kinesisk",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "sichuan-yi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "cherokee",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "koreansk",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Lisu",
    displayName: "Fraser"
}, {
    id: "Arab",
    displayName: "arabisk"
}, {
    id: "Armn",
    displayName: "armensk"
}, {
    id: "Armi",
    displayName: "armisk"
}, {
    id: "Avst",
    displayName: "avestisk"
}, {
    id: "Bali",
    displayName: "balinesisk"
}, {
    id: "Bamu",
    displayName: "bamun"
}, {
    id: "Batk",
    displayName: "batak"
}, {
    id: "Beng",
    displayName: "bengali"
}, {
    id: "Blis",
    displayName: "blissymbol"
}, {
    id: "Bopo",
    displayName: "bopomofo"
}, {
    id: "Brah",
    displayName: "brahmi"
}, {
    id: "Brai",
    displayName: "braille"
}, {
    id: "Bugi",
    displayName: "buginesisk"
}, {
    id: "Buhd",
    displayName: "buhid"
}, {
    id: "Cakm",
    displayName: "chakma"
}, {
    id: "Cham",
    displayName: "cham"
}, {
    id: "Cher",
    displayName: "cherokee"
}, {
    id: "Cirt",
    displayName: "cirth"
}, {
    id: "Dsrt",
    displayName: "deseret"
}, {
    id: "Deva",
    displayName: "devanagari"
}, {
    id: "Egyd",
    displayName: "egyptisk demotisk"
}, {
    id: "Egyh",
    displayName: "egyptisk hieratisk"
}, {
    id: "Egyp",
    displayName: "egyptiske hieroglyfar"
}, {
    id: "Ethi",
    displayName: "etiopisk"
}, {
    id: "Zyyy",
    displayName: "felles"
}, {
    id: "Cans",
    displayName: "felles kanadiske urspråksstavingar"
}, {
    id: "Hans",
    displayName: "forenkla kinesisk"
}, {
    id: "Phnx",
    displayName: "fønikisk"
}, {
    id: "Ital",
    displayName: "gammalitalisk"
}, {
    id: "Perm",
    displayName: "gammalpermisk"
}, {
    id: "Xpeo",
    displayName: "gammalpersisk"
}, {
    id: "Sarb",
    displayName: "gammalsydarabisk"
}, {
    id: "Gran",
    displayName: "gammaltamilsk"
}, {
    id: "Hung",
    displayName: "gammalungarsk"
}, {
    id: "Geor",
    displayName: "georgisk"
}, {
    id: "Glag",
    displayName: "glagolittisk"
}, {
    id: "Goth",
    displayName: "gotisk"
}, {
    id: "Grek",
    displayName: "gresk"
}, {
    id: "Gujr",
    displayName: "gujarati"
}, {
    id: "Guru",
    displayName: "gurmukhi"
}, {
    id: "Hani",
    displayName: "han"
}, {
    id: "Hang",
    displayName: "hangul"
}, {
    id: "Hano",
    displayName: "hanunoo"
}, {
    id: "Hebr",
    displayName: "hebraisk"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Inds",
    displayName: "indus"
}, {
    id: "Phli",
    displayName: "inskripsjonspahlavi"
}, {
    id: "Prti",
    displayName: "inskripsjonsparthisk"
}, {
    id: "Jpan",
    displayName: "japansk"
}, {
    id: "Java",
    displayName: "javanesisk"
}, {
    id: "Kthi",
    displayName: "kaithisk"
}, {
    id: "Knda",
    displayName: "kannada"
}, {
    id: "Cari",
    displayName: "karisk"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Hrkt",
    displayName: "katakana eller hiragana"
}, {
    id: "Kali",
    displayName: "kayah li"
}, {
    id: "Khar",
    displayName: "kharoshthi"
}, {
    id: "Khmr",
    displayName: "khmer"
}, {
    id: "Geok",
    displayName: "khutsuri (asomtavruli og nuskhuri)"
}, {
    id: "Zxxx",
    displayName: "kode for språk utan skrift"
}, {
    id: "Copt",
    displayName: "koptisk"
}, {
    id: "Kore",
    displayName: "koreansk"
}, {
    id: "Cprt",
    displayName: "kypriotisk"
}, {
    id: "Cyrl",
    displayName: "kyrillisk"
}, {
    id: "Cyrs",
    displayName: "kyrillisk (kyrkjeslavisk variant)"
}, {
    id: "Lana",
    displayName: "lanna"
}, {
    id: "Laoo",
    displayName: "laotisk"
}, {
    id: "Latn",
    displayName: "latinsk"
}, {
    id: "Latf",
    displayName: "latinsk (frakturvariant)"
}, {
    id: "Latg",
    displayName: "latinsk (gælisk variant)"
}, {
    id: "Lepc",
    displayName: "lepcha"
}, {
    id: "Lina",
    displayName: "lineær A"
}, {
    id: "Linb",
    displayName: "lineær B"
}, {
    id: "Limb",
    displayName: "lumbu"
}, {
    id: "Lydi",
    displayName: "lydisk"
}, {
    id: "Lyci",
    displayName: "lykisk"
}, {
    id: "Mlym",
    displayName: "malayalam"
}, {
    id: "Mand",
    displayName: "mandaisk"
}, {
    id: "Mani",
    displayName: "manikeisk"
}, {
    id: "Zmth",
    displayName: "matematisk notasjon"
}, {
    id: "Maya",
    displayName: "maya-hieroglyfar"
}, {
    id: "Mtei",
    displayName: "meitei-mayek"
}, {
    id: "Mero",
    displayName: "meroitisk"
}, {
    id: "Mong",
    displayName: "mongolsk"
}, {
    id: "Moon",
    displayName: "moon"
}, {
    id: "Mymr",
    displayName: "myanmar"
}, {
    id: "Zinh",
    displayName: "nedarva"
}, {
    id: "Talu",
    displayName: "ny tai lue"
}, {
    id: "Nkoo",
    displayName: "n’ko"
}, {
    id: "Ogam",
    displayName: "ogham"
}, {
    id: "Olck",
    displayName: "ol-chiki"
}, {
    id: "Orya",
    displayName: "oriya"
}, {
    id: "Orkh",
    displayName: "orkhon"
}, {
    id: "Osma",
    displayName: "osmanya"
}, {
    id: "Hmng",
    displayName: "pahawk hmong"
}, {
    id: "Phlv",
    displayName: "pahlavi"
}, {
    id: "Phag",
    displayName: "phags-pa"
}, {
    id: "Plrd",
    displayName: "pollard-fonetisk"
}, {
    id: "Rjng",
    displayName: "rejang"
}, {
    id: "Roro",
    displayName: "rongorongo"
}, {
    id: "Runr",
    displayName: "runer"
}, {
    id: "Phlp",
    displayName: "salmepahlavi"
}, {
    id: "Samr",
    displayName: "samaritansk"
}, {
    id: "Sara",
    displayName: "sarati"
}, {
    id: "Saur",
    displayName: "saurashtra"
}, {
    id: "Shaw",
    displayName: "shavisk"
}, {
    id: "Sinh",
    displayName: "sinhala"
}, {
    id: "Xsux",
    displayName: "sumero-akkadisk kileskrift"
}, {
    id: "Sund",
    displayName: "sundanesisk"
}, {
    id: "Sylo",
    displayName: "syloti nagri"
}, {
    id: "Zsym",
    displayName: "symbol"
}, {
    id: "Visp",
    displayName: "synleg tale"
}, {
    id: "Syrc",
    displayName: "syriakisk"
}, {
    id: "Syrn",
    displayName: "syriakisk (austleg variant)"
}, {
    id: "Syre",
    displayName: "syriakisk (estrangelo-variant)"
}, {
    id: "Syrj",
    displayName: "syriakisk (vestleg variant)"
}, {
    id: "Tglg",
    displayName: "tagalog"
}, {
    id: "Tagb",
    displayName: "tagbanwa"
}, {
    id: "Tale",
    displayName: "tai le"
}, {
    id: "Tavt",
    displayName: "tai viet"
}, {
    id: "Taml",
    displayName: "tamilsk"
}, {
    id: "Sgnw",
    displayName: "teiknskrift"
}, {
    id: "Telu",
    displayName: "telugu"
}, {
    id: "Teng",
    displayName: "tengwar"
}, {
    id: "Thaa",
    displayName: "thaana"
}, {
    id: "Thai",
    displayName: "thai"
}, {
    id: "Tibt",
    displayName: "tibetansk"
}, {
    id: "Tfng",
    displayName: "tifinagh"
}, {
    id: "Tirh",
    displayName: "tirhuta"
}, {
    id: "Hant",
    displayName: "tradisjonell kinesisk"
}, {
    id: "Ugar",
    displayName: "ugaritisk"
}, {
    id: "Zzzz",
    displayName: "ukjend skrift"
}, {
    id: "Vaii",
    displayName: "vai"
}, {
    id: "Yiii",
    displayName: "yi"
} ];

inter.currencies = [ {
    id: "XOF",
    displayName: "CFA franc BCEAO",
    symbol: "CFA"
}, {
    id: "XAF",
    displayName: "CFA franc BEAC",
    symbol: "FCFA",
    one: "CFA franc BEAC",
    other: "CFA franc BEAC"
}, {
    id: "XPF",
    displayName: "CFP franc",
    symbol: "CFPF",
    one: "CFP-franc",
    other: "CFP-franc"
}, {
    id: "FKP",
    displayName: "Falkland-pund",
    symbol: "£",
    one: "Falkland-pund",
    other: "Falkland-pund"
}, {
    id: "GWP",
    displayName: "Guinea-Bissau-peso"
}, {
    id: "HKD",
    displayName: "Hongkong-dollar",
    symbol: "HK$",
    one: "Hongkong-dollar",
    other: "Hongkong-dollar"
}, {
    id: "XRE",
    displayName: "RINET-fond",
    one: "RINET-fond",
    other: "RINET-fond"
}, {
    id: "STD",
    displayName: "Sao Tome og Principe-dobra",
    symbol: "Db"
}, {
    id: "AED",
    displayName: "UAE dirham"
}, {
    id: "CHE",
    displayName: "WIR euro",
    one: "WIR euro",
    other: "WIR euro"
}, {
    id: "CHW",
    displayName: "WIR franc",
    one: "WIR franc",
    other: "WIR franc"
}, {
    id: "AFN",
    displayName: "afghani"
}, {
    id: "AFA",
    displayName: "afghani (1927–2002)"
}, {
    id: "ALL",
    displayName: "albansk lek"
}, {
    id: "DZD",
    displayName: "algerisk dinar",
    one: "algerisk dinar",
    other: "algeriske dinarar"
}, {
    id: "USD",
    displayName: "amerikansk dollar",
    symbol: "US$",
    one: "amerikansk dollar",
    other: "amerikanske dollar"
}, {
    id: "USN",
    displayName: "amerikansk dollar (neste dag)",
    one: "amerikansk dollar (neste dag)",
    other: "amerikanske dollar (neste dag)"
}, {
    id: "USS",
    displayName: "amerikansk dollar (same dag)",
    one: "amerikansk dollar (same dag)",
    other: "amerikanske dollar (same dag)"
}, {
    id: "ADP",
    displayName: "andorransk peseta"
}, {
    id: "AOA",
    displayName: "angolsk kwanza",
    symbol: "Kz"
}, {
    id: "AOK",
    displayName: "angolsk kwanza (1977–1990)"
}, {
    id: "AOR",
    displayName: "angolsk kwanza reajustado (1995–1999)"
}, {
    id: "AON",
    displayName: "angolsk ny kwanza (1990–2000)"
}, {
    id: "ARS",
    displayName: "argentinsk peso",
    symbol: "$"
}, {
    id: "ARP",
    displayName: "argentinsk peso (1983–1985)"
}, {
    id: "ARA",
    displayName: "argentisk austral"
}, {
    id: "AMD",
    displayName: "armensk dram"
}, {
    id: "AWG",
    displayName: "arubisk gylden"
}, {
    id: "AZM",
    displayName: "aserbaijansk manat"
}, {
    id: "AZN",
    displayName: "aserbajdsjansk manat",
    one: "aserbajdsjansk manat",
    other: "aserbajdsjanske manat"
}, {
    id: "ATS",
    displayName: "austerriksk schilling"
}, {
    id: "XCD",
    displayName: "austkaribisk dollar",
    symbol: "EC$",
    one: "austkaribisk dollar",
    other: "austkaribiske dollar"
}, {
    id: "AUD",
    displayName: "australsk dollar",
    symbol: "A$"
}, {
    id: "DDM",
    displayName: "austtysk mark",
    one: "austtysk mark",
    other: "austtyske mark"
}, {
    id: "BSD",
    displayName: "bahamisk dollar",
    symbol: "$"
}, {
    id: "BHD",
    displayName: "bahrainsk dinar"
}, {
    id: "BDT",
    displayName: "bangladeshisk taka",
    symbol: "৳"
}, {
    id: "BBD",
    displayName: "barbadisk dollar",
    symbol: "$"
}, {
    id: "BEF",
    displayName: "belgisk franc"
}, {
    id: "BEL",
    displayName: "belgisk franc (finansiell)"
}, {
    id: "BEC",
    displayName: "belgisk franc (konvertibel)"
}, {
    id: "BZD",
    displayName: "belizisk dollar",
    symbol: "$",
    one: "belizisk dollar",
    other: "beliziske dollar"
}, {
    id: "BMD",
    displayName: "bermudisk dollar",
    symbol: "$"
}, {
    id: "BTN",
    displayName: "bhutansk ngultrum"
}, {
    id: "BOB",
    displayName: "boliviano",
    symbol: "Bs"
}, {
    id: "BOV",
    displayName: "bolivisk mvdol"
}, {
    id: "BOP",
    displayName: "bolivisk peso"
}, {
    id: "BAD",
    displayName: "bosnisk-hercegovinsk dinar"
}, {
    id: "BAM",
    displayName: "bosnisk-hercegovinsk mark (konvertibel)",
    symbol: "KM"
}, {
    id: "BWP",
    displayName: "botswansk pula",
    symbol: "P",
    one: "botswansk pula",
    other: "botswanske pula"
}, {
    id: "BRC",
    displayName: "brasiliansk cruzado"
}, {
    id: "BRN",
    displayName: "brasiliansk cruzado novo"
}, {
    id: "BRR",
    displayName: "brasiliansk cruzeiro"
}, {
    id: "BRE",
    displayName: "brasiliansk cruzeiro (1990–1993)"
}, {
    id: "BRB",
    displayName: "brasiliansk cruzeiro novo (1967–1986)"
}, {
    id: "BRL",
    displayName: "brasiliansk real",
    symbol: "R$"
}, {
    id: "GBP",
    displayName: "britisk pund",
    symbol: "£",
    one: "britisk pund",
    other: "britiske pund"
}, {
    id: "BND",
    displayName: "bruneisk dollar",
    symbol: "$"
}, {
    id: "BGL",
    displayName: "bulgarsk hard lev"
}, {
    id: "BGN",
    displayName: "bulgarsk ny lev"
}, {
    id: "BUK",
    displayName: "burmesisk kyat"
}, {
    id: "BIF",
    displayName: "burundisk franc"
}, {
    id: "KYD",
    displayName: "caymansk dollar",
    symbol: "$",
    one: "caymansk dollar",
    other: "caymanske dollar"
}, {
    id: "CLP",
    displayName: "chilensk peso",
    symbol: "$",
    one: "chilensk peso",
    other: "chilenske peso"
}, {
    id: "CLF",
    displayName: "chilensk unidades de fomento",
    one: "chilensk unidades de fomento",
    other: "chilenske unidades de fomento"
}, {
    id: "COP",
    displayName: "colombiansk peso",
    symbol: "$",
    one: "colombiansk peso",
    other: "colombianske peso"
}, {
    id: "CRC",
    displayName: "costaricansk colon",
    symbol: "₡",
    one: "costaricansk colon",
    other: "costaricanske colon"
}, {
    id: "DKK",
    displayName: "dansk krone",
    symbol: "kr",
    one: "dansk krone",
    other: "danske kroner"
}, {
    id: "DJF",
    displayName: "djiboutisk franc",
    one: "djiboutisk franc",
    other: "djiboutiske franc"
}, {
    id: "DOP",
    displayName: "dominikansk peso",
    symbol: "$",
    one: "dominikansk peso",
    other: "dominikanske peso"
}, {
    id: "ECS",
    displayName: "ecuadoriansk sucre",
    one: "ecuadoriansk sucre",
    other: "ecuadorianske sucre"
}, {
    id: "ECV",
    displayName: "ecuadoriansk unidad de valor constante (UVC)",
    one: "ecuadoriansk unidad de valor constante (UVC)",
    other: "ecuadorianske unidad de valor constante (UVC)"
}, {
    id: "EGP",
    displayName: "egyptisk pund",
    symbol: "E£",
    one: "egyptisk pund",
    other: "egyptiske pund"
}, {
    id: "GQE",
    displayName: "ekvatorialguineansk ekwele guineana",
    one: "ekvatorialguineansk ekwele",
    other: "ekvatorialguineanske ekwele"
}, {
    id: "ERN",
    displayName: "eritreisk nakfa",
    one: "eritreisk nakfa",
    other: "eritreiske nakfa"
}, {
    id: "EEK",
    displayName: "estisk kroon",
    one: "estisk kroon",
    other: "estiske kroon"
}, {
    id: "ETB",
    displayName: "etiopisk birr",
    one: "etiopisk birr",
    other: "etiopiske birr"
}, {
    id: "EUR",
    displayName: "euro",
    symbol: "€",
    one: "euro",
    other: "euro"
}, {
    id: "XBC",
    displayName: "europeisk kontoeining (XBC)",
    one: "europeisk kontoeining (XBC)",
    other: "europeiske kontoeiningar (XBC)"
}, {
    id: "XBD",
    displayName: "europeisk kontoeining (XBD)",
    one: "europeisk kontoeining (XBD)",
    other: "europeiske kontoeiningar (XBD)"
}, {
    id: "XBB",
    displayName: "europeisk monetær eining",
    one: "europeisk monetær eining",
    other: "europeiske monetære einingar"
}, {
    id: "XBA",
    displayName: "europeisk samansett eining",
    one: "europeisk samansett eining",
    other: "europeiske samansette einingar"
}, {
    id: "XEU",
    displayName: "europeisk valutaeining",
    one: "europeisk valutaeining",
    other: "europeiske valutaeiningar"
}, {
    id: "FJD",
    displayName: "fijiansk dollar",
    symbol: "$",
    one: "fijiansk dollar",
    other: "fijianske dollar"
}, {
    id: "PHP",
    displayName: "filippinsk peso",
    symbol: "₱",
    one: "filippinsk peso",
    other: "filippinske peso"
}, {
    id: "FIM",
    displayName: "finsk mark",
    one: "finsk mark",
    other: "finske mark"
}, {
    id: "XFU",
    displayName: "fransk UIC-franc",
    one: "fransk UIC-franc",
    other: "franske UIC-franc"
}, {
    id: "FRF",
    displayName: "fransk franc",
    one: "fransk franc",
    other: "franske franc"
}, {
    id: "XFO",
    displayName: "fransk gullfranc",
    one: "fransk gullfranc",
    other: "franske gullfranc"
}, {
    id: "GMD",
    displayName: "gambisk dalasi",
    one: "gambisk dalasi",
    other: "gambiske dalasi"
}, {
    id: "MZM",
    displayName: "gammal mosambikisk metical",
    one: "gammal mosambikisk metical",
    other: "gamle mosambikiske metical"
}, {
    id: "ROL",
    displayName: "gammal rumensk leu",
    one: "gammal rumensk leu",
    other: "gamle rumenske lei"
}, {
    id: "CSD",
    displayName: "gammal serbisk dinar",
    one: "gammal serbisk dinar",
    other: "gamle serbiske dinarar"
}, {
    id: "SDD",
    displayName: "gammal sudanesisk dinar",
    one: "gammal sudansk dinar",
    other: "gamle sudanske dinarar"
}, {
    id: "TRL",
    displayName: "gammal tyrkiske lire",
    one: "gammal tyrkisk lire",
    other: "gamle tyrkiske lire"
}, {
    id: "SDP",
    displayName: "gammalt sudanesisk pund",
    one: "gammalt sudansk pund",
    other: "gamle sudanske pund"
}, {
    id: "GEK",
    displayName: "georgisk kupon larit",
    one: "georgisk kupon larit",
    other: "georgiske kupon larit"
}, {
    id: "GEL",
    displayName: "georgisk lari",
    symbol: "₾",
    one: "georgisk lari",
    other: "georgiske lari"
}, {
    id: "GHS",
    displayName: "ghanesisk cedi",
    one: "ghanesisk cedi",
    other: "ghanesiske cedi"
}, {
    id: "GHC",
    displayName: "ghanesisk cedi (1979–2007)",
    one: "ghanesisk cedi (GHC)",
    other: "ghanesiske cedi (GHC)"
}, {
    id: "GIP",
    displayName: "gibraltarsk pund",
    symbol: "£",
    one: "gibraltarsk pund",
    other: "gibraltarske pund"
}, {
    id: "GRD",
    displayName: "gresk drakme",
    one: "gresk drakme",
    other: "greske drakmer"
}, {
    id: "GTQ",
    displayName: "guatemalansk quetzal",
    symbol: "Q",
    one: "guatemalansk quetzal",
    other: "guatemalanske quetzal"
}, {
    id: "GNF",
    displayName: "guineansk franc",
    symbol: "FG",
    one: "guineansk franc",
    other: "guineanske franc"
}, {
    id: "GNS",
    displayName: "guineansk syli",
    one: "guineansk syli",
    other: "guineanske syli"
}, {
    id: "XAU",
    displayName: "gull",
    one: "gull",
    other: "gull"
}, {
    id: "GYD",
    displayName: "guyansk dollar",
    symbol: "$",
    one: "guyansk dollar",
    other: "guyanske dollar"
}, {
    id: "HTG",
    displayName: "haitisk gourde",
    one: "haitisk gourde",
    other: "haitiske gourde"
}, {
    id: "HNL",
    displayName: "honduransk lempira",
    symbol: "L",
    one: "honduransk lempira",
    other: "honduranske lempira"
}, {
    id: "INR",
    displayName: "indisk rupi",
    symbol: "₹",
    one: "indisk rupi",
    other: "indiske rupier"
}, {
    id: "IDR",
    displayName: "indonesisk rupi",
    symbol: "Rp",
    one: "indonesisk rupi",
    other: "indonesiske rupiar"
}, {
    id: "IQD",
    displayName: "iraksk dinar",
    one: "irakisk dinar",
    other: "irakiske dinarar"
}, {
    id: "IRR",
    displayName: "iransk rial",
    one: "iransk rial",
    other: "iranske rialar"
}, {
    id: "IEP",
    displayName: "irsk pund",
    one: "irsk pund",
    other: "irske pund"
}, {
    id: "ISK",
    displayName: "islandsk krone",
    symbol: "kr",
    one: "islandsk krone",
    other: "islandske kroner"
}, {
    id: "ILS",
    displayName: "israelsk ny shekel",
    symbol: "₪",
    one: "israelsk ny shekel",
    other: "israelske nye sheklar"
}, {
    id: "ILP",
    displayName: "israelsk pund",
    one: "israelsk pund",
    other: "israelske pund"
}, {
    id: "ITL",
    displayName: "italiensk lire",
    one: "italiensk lire",
    other: "italienske lire"
}, {
    id: "JMD",
    displayName: "jamaikansk dollar",
    symbol: "$",
    one: "jamaikansk dollar",
    other: "jamaikanske dollar"
}, {
    id: "JPY",
    displayName: "japansk yen",
    symbol: "JP¥",
    one: "japansk yen",
    other: "japanske yen"
}, {
    id: "YDD",
    displayName: "jemenittisk dinar",
    one: "jemenittisk dinar",
    other: "jemenittiske dinarar"
}, {
    id: "YER",
    displayName: "jemenittisk rial",
    one: "jemenittisk rial",
    other: "jemenittiske rialar"
}, {
    id: "JOD",
    displayName: "jordansk dinar",
    one: "jordansk dinar",
    other: "jordanske dinarar"
}, {
    id: "YUD",
    displayName: "jugoslavisk dinar (hard)",
    one: "jugoslavisk dinar (hard)",
    other: "jugoslaviske dinarar (hard)"
}, {
    id: "YUN",
    displayName: "jugoslavisk konvertibel dinar",
    one: "jugoslavisk konvertibel dinar",
    other: "jugoslaviske konvertible dinarar"
}, {
    id: "YUM",
    displayName: "jugoslavisk noviy-dinar",
    one: "jugoslavisk noviy-dinarar",
    other: "jugoslaviske noviy-dinar"
}, {
    id: "KHR",
    displayName: "kambodsjansk riel",
    symbol: "៛",
    one: "kambodsjansk riel",
    other: "kambodsjanske riel"
}, {
    id: "CAD",
    displayName: "kanadisk dollar",
    symbol: "CA$",
    one: "kanadisk dollar",
    other: "kanadiske dollar"
}, {
    id: "CVE",
    displayName: "kappverdisk escudo"
}, {
    id: "KZT",
    displayName: "kasakhstansk tenge",
    symbol: "₸",
    one: "kasakhstansk tenge",
    other: "kasakhstanske tenge"
}, {
    id: "KES",
    displayName: "kenyansk shilling",
    one: "kenyansk shilling",
    other: "kenyanske shilling"
}, {
    id: "CNY",
    displayName: "kinesisk yuan renminbi",
    symbol: "CN¥"
}, {
    id: "KGS",
    displayName: "kirgisisk som",
    one: "kirgisisk som",
    other: "kirgisiske som"
}, {
    id: "KMF",
    displayName: "komorisk franc",
    symbol: "CF",
    one: "komorisk franc",
    other: "komoriske franc"
}, {
    id: "CDF",
    displayName: "kongolesisk franc",
    one: "kongolesisk franc",
    other: "kongolesiske franc"
}, {
    id: "HRD",
    displayName: "kroatisk dinar",
    one: "kroatisk dinar",
    other: "kroatiske dinarar"
}, {
    id: "HRK",
    displayName: "kroatisk kuna",
    symbol: "kn",
    one: "kroatisk kuna",
    other: "kroatiske kuna"
}, {
    id: "CUP",
    displayName: "kubansk peso",
    symbol: "$",
    one: "kubansk peso",
    other: "kubanske peso"
}, {
    id: "KWD",
    displayName: "kuwaitisk dinar",
    one: "kuwaitisk dinar",
    other: "kuwaitiske dinarar"
}, {
    id: "BYB",
    displayName: "kviterussisk ny rubel (1994–1999)",
    one: "kviterussisk ny rubel (BYB)",
    other: "kviterussiske nye rublar (BYB)"
}, {
    id: "BYR",
    displayName: "kviterussisk rubel",
    symbol: "р.",
    one: "kviterussisk rubel",
    other: "kviterussiske rublar"
}, {
    id: "CYP",
    displayName: "kypriotisk pund",
    one: "kypriotisk pund",
    other: "kypriotiske pund"
}, {
    id: "LAK",
    displayName: "laotisk kip",
    symbol: "₭",
    one: "laotisk kip",
    other: "laotiske kip"
}, {
    id: "LVL",
    displayName: "latvisk lat",
    symbol: "Ls",
    one: "latvisk lat",
    other: "latviske lat"
}, {
    id: "LVR",
    displayName: "latvisk rubel",
    one: "latvisk rubel",
    other: "latviske rublar"
}, {
    id: "LSL",
    displayName: "lesothisk loti",
    one: "lesothisk loti",
    other: "lesothiske loti"
}, {
    id: "LBP",
    displayName: "libanesisk pund",
    symbol: "L£",
    one: "libanesisk pund",
    other: "libanesiske pund"
}, {
    id: "LRD",
    displayName: "liberisk dollar",
    symbol: "$",
    one: "liberisk dollar",
    other: "liberiske dollar"
}, {
    id: "LYD",
    displayName: "libysk dinar",
    one: "libysk dinar",
    other: "libyske dinarar"
}, {
    id: "LTL",
    displayName: "litauisk lita",
    symbol: "Lt",
    one: "litauisk lita",
    other: "litauiske lita"
}, {
    id: "LTT",
    displayName: "litauisk talona",
    one: "litauisk talona",
    other: "litauiske talona"
}, {
    id: "LUL",
    displayName: "luxemburgsk finansiell franc",
    one: "luxemburgsk finansiell franc",
    other: "luxemburgske finansielle franc"
}, {
    id: "LUF",
    displayName: "luxemburgsk franc",
    one: "luxemburgsk franc",
    other: "luxemburgske franc"
}, {
    id: "LUC",
    displayName: "luxemburgsk konvertibel franc",
    one: "luxemburgsk konvertibel franc",
    other: "luxemburgske konvertible franc"
}, {
    id: "MGA",
    displayName: "madagassisk ariary",
    symbol: "Ar",
    one: "madagassisk ariary",
    other: "madagassiske ariary"
}, {
    id: "MGF",
    displayName: "madagassisk franc",
    one: "madagassisk franc",
    other: "madagassiske franc"
}, {
    id: "MOP",
    displayName: "makaosk pataca",
    one: "makaosk pataca",
    other: "makaoske pataca"
}, {
    id: "MKD",
    displayName: "makedonsk denar",
    one: "makedonsk denar",
    other: "makedonske denarar"
}, {
    id: "MWK",
    displayName: "malawisk kwacha",
    one: "malawisk kwacha",
    other: "malawiske kwacha"
}, {
    id: "MYR",
    displayName: "malaysisk ringgit",
    symbol: "RM",
    one: "malaysisk ringgit",
    other: "malaysiske ringgit"
}, {
    id: "MVR",
    displayName: "maldivisk rufiyaa",
    one: "maldivisk rufiyaa",
    other: "maldiviske rufiyaa"
}, {
    id: "MLF",
    displayName: "malisk franc",
    one: "malisk franc",
    other: "maliske franc"
}, {
    id: "MTL",
    displayName: "maltesisk lira",
    one: "maltesisk lira",
    other: "maltesiske lira"
}, {
    id: "MTP",
    displayName: "maltesisk pund",
    one: "maltesisk pund",
    other: "maltesiske pund"
}, {
    id: "MAD",
    displayName: "marokkansk dirham",
    one: "marokkansk dirham",
    other: "marokkanske dirham"
}, {
    id: "MAF",
    displayName: "marokkansk franc",
    one: "marokkansk franc",
    other: "marokkanske franc"
}, {
    id: "MRO",
    displayName: "mauritansk ouguiya",
    one: "mauritansk ouguiya",
    other: "mauritanske ouguiya"
}, {
    id: "MUR",
    displayName: "mauritansk rupi",
    symbol: "Rs",
    one: "mauritansk rupi",
    other: "mauritanske rupiar"
}, {
    id: "MXN",
    displayName: "meksikansk peso",
    symbol: "MX$",
    one: "meksikansk peso",
    other: "meksikanske peso"
}, {
    id: "MXP",
    displayName: "meksikansk sølvpeso (1861–1992)",
    one: "meksikansk sølvpeso (MXP)",
    other: "meksikanske sølvpeso (MXP)"
}, {
    id: "MXV",
    displayName: "meksikansk unidad de inversion (UDI)",
    one: "meksikansk unidad de inversion (UDI)",
    other: "meksikanske unidad de inversion (UDI)"
}, {
    id: "MDL",
    displayName: "moldovsk leu",
    one: "moldovsk leu",
    other: "moldovske lei"
}, {
    id: "MNT",
    displayName: "mongolsk tugrik",
    symbol: "₮",
    one: "mongolsk tugrik",
    other: "mongolske tugrik"
}, {
    id: "MZE",
    displayName: "mosambikisk escudo",
    one: "mosambikisk escudo",
    other: "mosambikiske escudo"
}, {
    id: "MZN",
    displayName: "mosambikisk metical"
}, {
    id: "MMK",
    displayName: "myanmarsk kyat",
    symbol: "K",
    one: "myanmarsk kyat",
    other: "myanmarske kyat"
}, {
    id: "NAD",
    displayName: "namibisk dollar",
    symbol: "$",
    one: "namibisk dollar",
    other: "namibiske dollar"
}, {
    id: "NLG",
    displayName: "nederlandsk gylden",
    one: "nederlandsk gylden",
    other: "nederlandske gylden"
}, {
    id: "ANG",
    displayName: "nederlansk antillegylden"
}, {
    id: "NPR",
    displayName: "nepalsk rupi",
    symbol: "Rs",
    one: "nepalsk rupi",
    other: "nepalske rupiar"
}, {
    id: "NZD",
    displayName: "new zealandsk dollar",
    symbol: "NZ$",
    one: "new zealandsk dollar",
    other: "new zealandske dollar"
}, {
    id: "NIC",
    displayName: "nicaraguansk cordoba",
    one: "nicaraguansk cordoba",
    other: "nicaraguanske cordoba"
}, {
    id: "NIO",
    displayName: "nicaraguansk cordoba oro",
    symbol: "C$",
    one: "nicaraguansk cordoba oro",
    other: "nicaraguanske cordoba oro"
}, {
    id: "NGN",
    displayName: "nigeriansk naira",
    symbol: "₦",
    one: "nigeriansk naira",
    other: "nigerianske naira"
}, {
    id: "KPW",
    displayName: "nordkoreansk won",
    symbol: "₩",
    one: "nordkoreansk won",
    other: "nordkoreanske won"
}, {
    id: "NOK",
    displayName: "norsk krone",
    symbol: "kr",
    one: "norsk krone",
    other: "norske kroner"
}, {
    id: "OMR",
    displayName: "omansk rial",
    one: "omansk rial",
    other: "omanske rial"
}, {
    id: "PKR",
    displayName: "pakistansk rupi",
    symbol: "Rs",
    one: "pakistansk rupi",
    other: "pakistanske rupiar"
}, {
    id: "XPD",
    displayName: "palladium",
    one: "palladium",
    other: "palladium"
}, {
    id: "PAB",
    displayName: "panamansk balboa",
    one: "panamansk balboa",
    other: "panamanske balboa"
}, {
    id: "PGK",
    displayName: "papuansk kina",
    one: "papuansk kina",
    other: "papuanske kina"
}, {
    id: "PYG",
    displayName: "paraguayansk guarani",
    symbol: "₲",
    one: "paraguayansk guarani",
    other: "paraguayanske guarani"
}, {
    id: "PEI",
    displayName: "peruansk inti",
    one: "peruansk inti",
    other: "peruanske inti"
}, {
    id: "PEN",
    displayName: "peruansk nuevo sol",
    one: "peruansk nuevo sol",
    other: "peruanske nuevo sol"
}, {
    id: "PES",
    displayName: "peruansk sol",
    one: "peruansk sol",
    other: "peruanske sol"
}, {
    id: "XPT",
    displayName: "platina",
    one: "platina",
    other: "platina"
}, {
    id: "PLN",
    displayName: "polsk zloty",
    symbol: "zł",
    one: "polsk zloty",
    other: "polske zloty"
}, {
    id: "PLZ",
    displayName: "polsk zloty (1950–1995)",
    one: "polsk zloty (PLZ)",
    other: "polske zloty (PLZ)"
}, {
    id: "PTE",
    displayName: "portugisisk escudo",
    one: "portugisisk escudo",
    other: "portugisiske escudo"
}, {
    id: "GWE",
    displayName: "portugisisk guinea escudo",
    one: "portugisisk guinea escudo",
    other: "portugisiske guinea escudo"
}, {
    id: "QAR",
    displayName: "qatarsk rial",
    one: "qatarsk rial",
    other: "qatarske rial"
}, {
    id: "RHD",
    displayName: "rhodesisk dollar",
    one: "rhodesisk dollar",
    other: "rhodesiske dollar"
}, {
    id: "RON",
    displayName: "rumensk leu",
    one: "rumensk leu",
    other: "rumenske lei"
}, {
    id: "RUB",
    displayName: "russisk rubel",
    symbol: "₽"
}, {
    id: "RUR",
    displayName: "russisk rubel (1991–1998)",
    symbol: "р.",
    one: "russisk rubel (RUR)",
    other: "russiske rublar (RUR)"
}, {
    id: "RWF",
    displayName: "rwandisk franc",
    symbol: "RF",
    one: "rwandisk franc",
    other: "rwandiske franc"
}, {
    id: "SBD",
    displayName: "salomonsk dollar",
    symbol: "$",
    one: "salomonsk dollar",
    other: "salomonske dollar"
}, {
    id: "SVC",
    displayName: "salvadoransk colon",
    one: "salvadoransk colon",
    other: "salvadoranske colon"
}, {
    id: "SHP",
    displayName: "sankthelensk pund",
    symbol: "£",
    one: "sankthelensk pund",
    other: "sankthelenske pund"
}, {
    id: "SAR",
    displayName: "saudiarabisk rial",
    one: "saudiarabisk rial",
    other: "saudiarabiske rial"
}, {
    id: "RSD",
    displayName: "serbisk dinar",
    one: "serbisk dinar",
    other: "serbiske dinarar"
}, {
    id: "SCR",
    displayName: "seychellisk rupi",
    one: "seychellisk rupi",
    other: "seychelliske rupiar"
}, {
    id: "SLL",
    displayName: "sierraleonsk leone",
    one: "sierraleonsk leone",
    other: "sierraleonske leone"
}, {
    id: "SGD",
    displayName: "singaporsk dollar",
    symbol: "$",
    one: "singaporsk dollar",
    other: "singaporske dollar"
}, {
    id: "SKK",
    displayName: "slovakisk koruna",
    one: "slovakisk koruna",
    other: "slovakiske koruna"
}, {
    id: "SIT",
    displayName: "slovensk tolar",
    one: "slovensk tolar",
    other: "slovenske tolar"
}, {
    id: "SOS",
    displayName: "somalisk shilling",
    one: "somalisk shilling",
    other: "somaliske shilling"
}, {
    id: "SUR",
    displayName: "sovjetisk rubel",
    one: "sovjetisk rubel",
    other: "sovjetiske rublar"
}, {
    id: "ESP",
    displayName: "spansk peseta",
    symbol: "₧",
    one: "spansk peseta",
    other: "spanske peseta"
}, {
    id: "ESA",
    displayName: "spansk peseta (A–konto)",
    one: "spansk peseta (A–konto)",
    other: "spanske peseta (A–konto)"
}, {
    id: "ESB",
    displayName: "spansk peseta (konvertibel konto)",
    one: "spansk peseta (konvertibel konto)",
    other: "spanske peseta (konvertibel konto)"
}, {
    id: "XDR",
    displayName: "spesielle trekkrettar",
    one: "spesiell trekkrett",
    other: "spesielle trekkrettar"
}, {
    id: "LKR",
    displayName: "srilankisk rupi",
    symbol: "Rs",
    one: "srilankisk rupi",
    other: "srilankiske rupiar"
}, {
    id: "SDG",
    displayName: "sudansk pund",
    one: "sudansk pund",
    other: "sudanske pund"
}, {
    id: "SRD",
    displayName: "surinamsk dollar",
    symbol: "$",
    one: "surinamsk dollar",
    other: "surinamske dollar"
}, {
    id: "SRG",
    displayName: "surinamsk gylden",
    one: "surinamsk gylden",
    other: "surinamske gylden"
}, {
    id: "CHF",
    displayName: "sveitsisk franc",
    one: "sveitsisk franc",
    other: "sveitsiske franc"
}, {
    id: "SEK",
    displayName: "svensk krone",
    symbol: "kr",
    one: "svensk krone",
    other: "svenske kroner"
}, {
    id: "SZL",
    displayName: "swazilandsk lilangeni",
    one: "swazilandsk lilangeni",
    other: "swazilandske lilangeni"
}, {
    id: "SYP",
    displayName: "syrisk pund",
    symbol: "£",
    one: "syrisk pund",
    other: "syriske pund"
}, {
    id: "XAG",
    displayName: "sølv",
    one: "sølv",
    other: "sølv"
}, {
    id: "ZAR",
    displayName: "sørafrikansk rand",
    symbol: "R"
}, {
    id: "ZAL",
    displayName: "sørafrikansk rand (finansiell)"
}, {
    id: "KRW",
    displayName: "sørkoreansk won",
    symbol: "₩",
    one: "sørkoreansk won",
    other: "sørkoreanske won"
}, {
    id: "TJR",
    displayName: "tadsjikisk rubel",
    one: "tadsjikisk rubel",
    other: "tadsjikiske rublar"
}, {
    id: "TJS",
    displayName: "tadsjikisk somoni",
    one: "tadsjikisk somoni",
    other: "tadsjikiske somoni"
}, {
    id: "TWD",
    displayName: "taiwansk ny dollar",
    symbol: "NT$",
    one: "taiwansk ny dollar",
    other: "taiwanske nye dollar"
}, {
    id: "TZS",
    displayName: "tanzaniansk shilling",
    one: "tanzaniansk shilling",
    other: "tanzanianske shilling"
}, {
    id: "XTS",
    displayName: "testvalutakode",
    one: "testvalutakode",
    other: "testvalutakode"
}, {
    id: "THB",
    displayName: "thailandsk baht",
    symbol: "฿",
    one: "thailandsk baht",
    other: "thailandske baht"
}, {
    id: "TPE",
    displayName: "timoresisk escudo",
    one: "timoresisk escudo",
    other: "timoresiske escudo"
}, {
    id: "TOP",
    displayName: "tongansk paʻanga",
    symbol: "T$",
    one: "tongansk paʻanga",
    other: "tonganske paʻanga"
}, {
    id: "TTD",
    displayName: "trinidadisk dollar",
    symbol: "$",
    one: "trinidadisk dollar",
    other: "trinidadiske dollar"
}, {
    id: "CZK",
    displayName: "tsjekkisk koruna",
    symbol: "Kč",
    one: "tsjekkisk koruna",
    other: "tsjekkiske koruna"
}, {
    id: "CSK",
    displayName: "tsjekkoslovakisk koruna (hard)",
    one: "tsjekkoslovakisk koruna (hard)",
    other: "tsjekkoslovakiske koruna (hard)"
}, {
    id: "TND",
    displayName: "tunisisk dinar",
    one: "tunisisk dinar",
    other: "tunisiske dinarar"
}, {
    id: "TMM",
    displayName: "turkmensk manat",
    one: "turkmensk manat",
    other: "turkmenske manat"
}, {
    id: "TRY",
    displayName: "tyrkisk lire",
    symbol: "₺",
    one: "tyrkisk lire",
    other: "tyrkiske lire"
}, {
    id: "DEM",
    displayName: "tysk mark",
    one: "tysk mark",
    other: "tyske mark"
}, {
    id: "UGX",
    displayName: "ugandisk shilling",
    one: "ugandisk shilling",
    other: "ugandiske shilling"
}, {
    id: "UGS",
    displayName: "ugandisk shilling (1966–1987)",
    one: "ugandisk shilling (UGS)",
    other: "ugandiske shilling (UGS)"
}, {
    id: "XXX",
    displayName: "ukjend eller ugyldig valuta",
    one: "ukjend/ugyldig valuta",
    other: "ukjend eller ugyldig valuta"
}, {
    id: "UAH",
    displayName: "ukrainsk hryvnia",
    symbol: "₴",
    one: "ukrainsk hryvnia",
    other: "ukrainske hryvnia"
}, {
    id: "UAK",
    displayName: "ukrainsk karbovanetz",
    one: "ukrainsk karbovanetz",
    other: "ukrainske karbovanetz"
}, {
    id: "HUF",
    displayName: "ungarsk forint",
    symbol: "Ft",
    one: "ungarsk forint",
    other: "ungarske forintar"
}, {
    id: "COU",
    displayName: "unidad de valor real",
    one: "unidad de valor real",
    other: "unidad de valor real"
}, {
    id: "UYU",
    displayName: "uruguayansk peso",
    symbol: "$",
    one: "uruguayansk peso",
    other: "uruguayanske peso"
}, {
    id: "UYP",
    displayName: "uruguayansk peso (1975–1993)",
    one: "uruguayansk peso (UYP)",
    other: "uruguayanske peso (UYP)"
}, {
    id: "UYI",
    displayName: "uruguayansk peso en unidades indexadas",
    one: "uruguayansk peso en unidades indexadas",
    other: "uruguayanske peso en unidades indexadas"
}, {
    id: "UZS",
    displayName: "usbekisk sum",
    one: "usbekisk sum",
    other: "usbekiske sum"
}, {
    id: "VUV",
    displayName: "vanuatuisk vatu",
    one: "vanuatuisk vatu",
    other: "vanuatuiske vatu"
}, {
    id: "VEF",
    displayName: "venezuelansk bolivar",
    symbol: "Bs",
    one: "venezuelansk bolivar",
    other: "venezuelanske bolivar"
}, {
    id: "VEB",
    displayName: "venezuelansk bolivar (1871–2008)",
    one: "venezuelansk bolivar (1871–2008)",
    other: "venezuelanske bolivar (1871–2008)"
}, {
    id: "WST",
    displayName: "vestsamoisk tala",
    one: "vestsamoisk tala",
    other: "vestsamoiske tala"
}, {
    id: "VND",
    displayName: "vietnamesisk dong",
    symbol: "₫",
    one: "vietnamesisk dong",
    other: "vietnamesiske dong"
}, {
    id: "ZRN",
    displayName: "zairisk ny zaire"
}, {
    id: "ZRZ",
    displayName: "zairisk zaire"
}, {
    id: "ZMW",
    displayName: "zambisk kwacha",
    symbol: "ZK"
}, {
    id: "ZMK",
    displayName: "zambisk kwacha (1968–2012)"
}, {
    id: "ZWD",
    displayName: "zimbabwisk dollar"
} ];

module.exports = inter;