function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _iuh21 = {
    M: "G y MMMM – MMMM"
}, _iuh22 = [ "K1", "K2", "K3", "K4" ], _iuh23 = {
    displayName: "Epoka"
}, _iuh24 = {
    displayName: "QN/WN"
}, _iuh25 = {
    all: {
        leap: "{0}bis"
    }
}, _iuh26 = {
    a: "h a – h a",
    h: "h–h a"
}, _iuh27 = [ "Before R.O.C.", "R.O.C." ], _iuh28 = [ "Ħ", "T", "T", "E", "Ħ", "Ġ", "S" ], _iuh29 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _iuh210 = {
    displayName: "Jum tal-Ġimgħa"
}, _iuh211 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _iuh212 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _iuh213 = {
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _iuh214 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _iuh215 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _iuh216 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _iuh217 = [ "Ħd", "Tn", "Tl", "Er", "Ħm", "Ġm", "Sb" ], _iuh218 = {
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _iuh219 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _iuh220 = {
    d: "dd/MM – dd/MM",
    M: "dd/MM – dd/MM"
}, _iuh221 = {
    M: "MM/y – MM/y G",
    y: "MM/y – MM/y G"
}, _iuh222 = {
    M: "MMM–MMM y G",
    y: "MMM y – MMM y G"
}, _iuh223 = {
    "0": "Illum",
    "1": "Għada",
    "-1": "Ilbieraħ"
}, _iuh224 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _iuh225 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _iuh226 = [ "Ħad", "Tne", "Tli", "Erb", "Ħam", "Ġim", "Sib" ], _iuh227 = {
    one: "¤0K",
    few: "¤0K",
    many: "¤0K",
    other: "¤0K"
}, _iuh228 = {
    one: "¤0M",
    few: "¤0M",
    many: "¤0M",
    other: "¤0M"
}, _iuh229 = {
    one: "¤0G",
    few: "¤0G",
    many: "¤0G",
    other: "¤0G"
}, _iuh230 = {
    one: "¤0T",
    few: "¤0T",
    many: "¤0T",
    other: "¤0T"
}, _iuh231 = {
    future: {
        other: "+{0} m"
    },
    past: {
        other: "-{0} m"
    }
}, _iuh232 = {
    future: {
        other: "+{0} w"
    },
    past: {
        other: "-{0} w"
    }
}, _iuh233 = {
    future: {
        other: "+{0} d"
    },
    past: {
        other: "-{0} d"
    }
}, _iuh234 = {
    future: {
        other: "+{0} h"
    },
    past: {
        other: "-{0} h"
    }
}, _iuh235 = {
    future: {
        other: "+{0} s"
    },
    past: {
        other: "-{0} s"
    }
}, _iuh236 = {
    future: {
        other: "+{0} Q"
    },
    past: {
        other: "-{0} Q"
    }
}, _iuh237 = {
    one: "¤00K",
    few: "¤00K",
    many: "¤00K",
    other: "¤00K"
}, _iuh238 = {
    one: "¤00M",
    few: "¤00M",
    many: "¤00M",
    other: "¤00M"
}, _iuh239 = {
    one: "¤00G",
    few: "¤00G",
    many: "¤00G",
    other: "¤00G"
}, _iuh240 = {
    one: "¤00T",
    few: "¤00T",
    many: "¤00T",
    other: "¤00T"
}, _iuh241 = {
    d: "E, dd/MM – E, dd/MM",
    M: "E, dd/MM – E, dd/MM"
}, _iuh242 = [ "J", "F", "M", "A", "M", "Ġ", "L", "A", "S", "O", "N", "D" ], _iuh243 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _iuh244 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _iuh245 = {
    id: "001",
    displayName: "Dinja",
    hasTimeZones: false
}, _iuh246 = [ "1el kwart", "2ni kwart", "3et kwart", "4ba’ kwart" ], _iuh247 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _iuh248 = {
    future: {
        other: "+{0} min"
    },
    past: {
        other: "-{0} min"
    }
}, _iuh249 = {
    id: "AQ",
    displayName: "Antartika",
    hasTimeZones: true
}, _iuh250 = {
    one: "¤000K",
    few: "¤000K",
    many: "¤000K",
    other: "¤000K"
}, _iuh251 = {
    one: "¤000M",
    few: "¤000M",
    many: "¤000M",
    other: "¤000M"
}, _iuh252 = {
    one: "¤000G",
    few: "¤000G",
    many: "¤000G",
    other: "¤000G"
}, _iuh253 = {
    one: "¤000T",
    few: "¤000T",
    many: "¤000T",
    other: "¤000T"
}, _iuh254 = {
    "0": "this Friday",
    "1": "next Friday",
    "-1": "last Friday"
}, _iuh255 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _iuh256 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _iuh257 = {
    d: "d 'ta'’-d 'ta'’ MMM",
    M: "d 'ta'’ MMM – d 'ta'’ MMM"
}, _iuh258 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _iuh259 = {
    "0": "this Tuesday",
    "1": "next Tuesday",
    "-1": "last Tuesday"
}, _iuh260 = {
    one: "{0} kt",
    few: "{0} kt",
    many: "{0} kt",
    other: "{0} kt"
}, _iuh261 = {
    one: "{0} lx",
    few: "{0} lx",
    many: "{0} lx",
    other: "{0} lx"
}, _iuh262 = {
    id: "BV",
    displayName: "Bouvet Island",
    hasTimeZones: false
}, _iuh263 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _iuh264 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _iuh265 = {
    "0": "this Thursday",
    "1": "next Thursday",
    "-1": "last Thursday"
}, _iuh266 = {
    "0": "this Saturday",
    "1": "next Saturday",
    "-1": "last Saturday"
}, _iuh267 = {
    id: "CX",
    displayName: "Christmas Island",
    hasTimeZones: true
}, _iuh268 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _iuh269 = {
    id: "TD",
    displayName: "Ċad",
    regionId: "017",
    hasTimeZones: true
}, _iuh270 = [ "Jn", "Fr", "Mz", "Ap", "Mj", "Ġn", "Lj", "Aw", "St", "Ob", "Nv", "Dċ" ], _iuh271 = {
    "0": "Dan il-Ħadd",
    "1": "Il-Ħadd li ġej",
    "-1": "Il-Ħadd li għadda"
}, _iuh272 = {
    "0": "this Wednesday",
    "1": "next Wednesday",
    "-1": "last Wednesday"
}, _iuh273 = {
    id: "FJ",
    displayName: "Fiġi",
    regionId: "054",
    hasTimeZones: true
}, _iuh274 = {
    id: "GH",
    displayName: "Gana",
    regionId: "011",
    hasTimeZones: true
}, _iuh275 = {
    id: "GU",
    displayName: "Gwam",
    regionId: "057",
    hasTimeZones: true
}, _iuh276 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _iuh277 = {
    id: "IQ",
    displayName: "Iraq",
    regionId: "145",
    hasTimeZones: true
}, _iuh278 = {
    id: "CU",
    displayName: "Kuba",
    regionId: "029",
    hasTimeZones: true
}, _iuh279 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _iuh280 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _iuh281 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _iuh282 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _iuh283 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _iuh284 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _iuh285 = {
    id: "CL",
    displayName: "Ċili",
    regionId: "005",
    hasTimeZones: true
}, _iuh286 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _iuh287 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _iuh288 = {
    id: "BT",
    displayName: "Butan",
    regionId: "034",
    hasTimeZones: true
}, _iuh289 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _iuh290 = {
    id: "GN",
    displayName: "Ginea",
    regionId: "011",
    hasTimeZones: true
}, _iuh291 = {
    id: "YE",
    displayName: "Jemen",
    regionId: "145",
    hasTimeZones: true
}, _iuh292 = {
    id: "KE",
    displayName: "Kenja",
    regionId: "014",
    hasTimeZones: true
}, _iuh293 = {
    id: "CG",
    displayName: "Kongo",
    regionId: "017",
    hasTimeZones: true
}, _iuh294 = {
    id: "LY",
    displayName: "Libja",
    regionId: "015",
    hasTimeZones: true
}, _iuh295 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _iuh296 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _iuh297 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _iuh298 = {
    id: "NE",
    displayName: "Niġer",
    regionId: "011",
    hasTimeZones: true
}, _iuh299 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _iuh2100 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _iuh2101 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _iuh2102 = {
    id: "SY",
    displayName: "Sirja",
    regionId: "145",
    hasTimeZones: true
}, _iuh2103 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _iuh2104 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _iuh2105 = {
    id: "TN",
    displayName: "Tuneż",
    regionId: "015",
    hasTimeZones: true
}, _iuh2106 = {
    id: "CY",
    displayName: "Ċipru",
    regionId: "145",
    hasTimeZones: true
}, _iuh2107 = {
    id: "HT",
    displayName: "Ħaiti",
    regionId: "029",
    hasTimeZones: true
}, _iuh2108 = {
    relative: _iuh254
}, _iuh2109 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _iuh2110 = {
    id: "BZ",
    displayName: "Beliże",
    regionId: "013",
    hasTimeZones: true
}, _iuh2111 = {
    id: "BE",
    displayName: "Belġju",
    regionId: "155",
    hasTimeZones: true
}, _iuh2112 = {
    id: "BN",
    displayName: "Brunej",
    regionId: "035",
    hasTimeZones: true
}, _iuh2113 = {
    id: "EG",
    displayName: "Eġittu",
    regionId: "015",
    hasTimeZones: true
}, _iuh2114 = {
    id: "FR",
    displayName: "Franza",
    regionId: "155",
    hasTimeZones: true
}, _iuh2115 = {
    id: "GM",
    displayName: "Gambja",
    regionId: "011",
    hasTimeZones: true
}, _iuh2116 = {
    id: "GR",
    displayName: "Greċja",
    regionId: "039",
    hasTimeZones: true
}, _iuh2117 = {
    id: "GY",
    displayName: "Gujana",
    regionId: "005",
    hasTimeZones: true
}, _iuh2118 = {
    id: "IL",
    displayName: "Iżrael",
    regionId: "145",
    hasTimeZones: true
}, _iuh2119 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _iuh2120 = {
    id: "KW",
    displayName: "Kuwajt",
    regionId: "145",
    hasTimeZones: true
}, _iuh2121 = {
    id: "LV",
    displayName: "Latvja",
    regionId: "154",
    hasTimeZones: true
}, _iuh2122 = {
    id: "LS",
    displayName: "Lesoto",
    regionId: "018",
    hasTimeZones: true
}, _iuh2123 = {
    id: "LB",
    displayName: "Libanu",
    regionId: "145",
    hasTimeZones: true
}, _iuh2124 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _iuh2125 = {
    id: "MA",
    displayName: "Marokk",
    regionId: "015",
    hasTimeZones: true
}, _iuh2126 = {
    id: "MC",
    displayName: "Monako",
    regionId: "155",
    hasTimeZones: true
}, _iuh2127 = {
    id: "NL",
    displayName: "Olanda",
    regionId: "155",
    hasTimeZones: true
}, _iuh2128 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _iuh2129 = {
    id: "RW",
    displayName: "Rwanda",
    regionId: "014",
    hasTimeZones: true
}, _iuh2130 = {
    id: "ES",
    displayName: "Spanja",
    regionId: "039",
    hasTimeZones: true
}, _iuh2131 = {
    id: "TW",
    displayName: "Tajwan",
    regionId: "030",
    hasTimeZones: true
}, _iuh2132 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _iuh2133 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _iuh2134 = {
    id: "DJ",
    displayName: "Ġibuti",
    regionId: "014",
    hasTimeZones: true
}, _iuh2135 = {
    id: "JO",
    displayName: "Ġordan",
    regionId: "145",
    hasTimeZones: true
}, _iuh2136 = {
    id: "ZM",
    displayName: "Żambja",
    regionId: "014",
    hasTimeZones: true
}, _iuh2137 = {
    id: "SE",
    displayName: "Żvezja",
    regionId: "154",
    hasTimeZones: true
}, _iuh2138 = {
    "0": "Dan It-Tnejn",
    "1": "It-Tnejn li ġej",
    "-1": "It-Tnejn li għadda"
}, _iuh2139 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _iuh2140 = {
    id: "AM",
    displayName: "Armenja",
    regionId: "145",
    hasTimeZones: true
}, _iuh2141 = {
    id: "BS",
    displayName: "Baħamas",
    regionId: "029",
    hasTimeZones: true
}, _iuh2142 = {
    id: "BH",
    displayName: "Baħrajn",
    regionId: "145",
    hasTimeZones: true
}, _iuh2143 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _iuh2144 = {
    id: "BO",
    displayName: "Bolivja",
    regionId: "005",
    hasTimeZones: true
}, _iuh2145 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _iuh2146 = {
    id: "EC",
    displayName: "Ekwador",
    regionId: "005",
    hasTimeZones: true
}, _iuh2147 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _iuh2148 = {
    id: "EE",
    displayName: "Estonja",
    regionId: "154",
    hasTimeZones: true
}, _iuh2149 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _iuh2150 = {
    id: "IE",
    displayName: "Irlanda",
    regionId: "154",
    hasTimeZones: true
}, _iuh2151 = {
    id: "IS",
    displayName: "Islanda",
    regionId: "154",
    hasTimeZones: true
}, _iuh2152 = {
    id: "CN",
    displayName: "Iċ-Ċina",
    regionId: "030",
    hasTimeZones: true
}, _iuh2153 = {
    id: "CM",
    displayName: "Kamerun",
    regionId: "017",
    hasTimeZones: true
}, _iuh2154 = {
    id: "KM",
    displayName: "Komoros",
    regionId: "014",
    hasTimeZones: true
}, _iuh2155 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _iuh2156 = {
    id: "HR",
    displayName: "Kroazja",
    regionId: "039",
    hasTimeZones: true
}, _iuh2157 = {
    id: "IN",
    displayName: "L-Indja",
    regionId: "034",
    hasTimeZones: true
}, _iuh2158 = {
    id: "LR",
    displayName: "Liberja",
    regionId: "011",
    hasTimeZones: true
}, _iuh2159 = {
    id: "YT",
    displayName: "Majotte",
    regionId: "014",
    hasTimeZones: true
}, _iuh2160 = {
    id: "MY",
    displayName: "Malasja",
    regionId: "035",
    hasTimeZones: true
}, _iuh2161 = {
    id: "MX",
    displayName: "Messiku",
    regionId: "013",
    hasTimeZones: true
}, _iuh2162 = {
    id: "MM",
    displayName: "Mjanmar",
    regionId: "035",
    hasTimeZones: true
}, _iuh2163 = {
    id: "MD",
    displayName: "Moldova",
    regionId: "151",
    hasTimeZones: true
}, _iuh2164 = {
    id: "NA",
    displayName: "Namibja",
    regionId: "018",
    hasTimeZones: true
}, _iuh2165 = {
    id: "NG",
    displayName: "Niġerja",
    regionId: "011",
    hasTimeZones: true
}, _iuh2166 = {
    id: "PL",
    displayName: "Polonja",
    regionId: "151",
    hasTimeZones: true
}, _iuh2167 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _iuh2168 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _iuh2169 = {
    id: "SO",
    displayName: "Somalja",
    regionId: "014",
    hasTimeZones: true
}, _iuh2170 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _iuh2171 = {
    id: "TK",
    displayName: "Tokelaw",
    regionId: "061",
    hasTimeZones: true
}, _iuh2172 = {
    id: "TR",
    displayName: "Turkija",
    regionId: "145",
    hasTimeZones: true
}, _iuh2173 = {
    id: "UA",
    displayName: "Ukraina",
    regionId: "151",
    hasTimeZones: true
}, _iuh2174 = {
    id: "UY",
    displayName: "Urugwaj",
    regionId: "005",
    hasTimeZones: true
}, _iuh2175 = {
    id: "VU",
    displayName: "Vanwatu",
    regionId: "054",
    hasTimeZones: true
}, _iuh2176 = {
    id: "VA",
    displayName: "Vatikan",
    regionId: "039",
    hasTimeZones: true
}, _iuh2177 = {
    id: "VN",
    displayName: "Vjetnam",
    regionId: "035",
    hasTimeZones: true
}, _iuh2178 = {
    id: "JM",
    displayName: "Ġamajka",
    regionId: "029",
    hasTimeZones: true
}, _iuh2179 = {
    id: "GE",
    displayName: "Ġeorġja",
    regionId: "145",
    hasTimeZones: true
}, _iuh2180 = {
    "0": "din is-sena",
    "1": "Is-sena d-dieħla",
    "-1": "Is-sena li għaddiet"
}, _iuh2181 = {
    id: "AL",
    displayName: "Albanija",
    regionId: "039",
    hasTimeZones: true
}, _iuh2182 = {
    id: "DZ",
    displayName: "Alġerija",
    regionId: "015",
    hasTimeZones: true
}, _iuh2183 = {
    id: "AI",
    displayName: "Angwilla",
    regionId: "029",
    hasTimeZones: true
}, _iuh2184 = {
    id: "AT",
    displayName: "Awstrija",
    regionId: "155",
    hasTimeZones: true
}, _iuh2185 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _iuh2186 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _iuh2187 = {
    id: "CC",
    displayName: "Cocos (Keeling) Islands",
    hasTimeZones: true
}, _iuh2188 = {
    id: "DM",
    displayName: "Dominika",
    regionId: "029",
    hasTimeZones: true
}, _iuh2189 = {
    id: "ET",
    displayName: "Etijopja",
    regionId: "014",
    hasTimeZones: true
}, _iuh2190 = {
    id: "KH",
    displayName: "Kambodja",
    regionId: "035",
    hasTimeZones: true
}, _iuh2191 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _iuh2192 = {
    id: "CO",
    displayName: "Kolombja",
    regionId: "005",
    hasTimeZones: true
}, _iuh2193 = {
    id: "IT",
    displayName: "L-Italja",
    regionId: "039",
    hasTimeZones: true
}, _iuh2194 = {
    id: "LT",
    displayName: "Litwanja",
    regionId: "154",
    hasTimeZones: true
}, _iuh2195 = {
    id: "MV",
    displayName: "Maldives",
    regionId: "034",
    hasTimeZones: true
}, _iuh2196 = {
    id: "MQ",
    displayName: "Martinik",
    regionId: "029",
    hasTimeZones: true
}, _iuh2197 = {
    id: "MU",
    displayName: "Mawrizju",
    regionId: "014",
    hasTimeZones: true
}, _iuh2198 = {
    id: "MN",
    displayName: "Mongolja",
    regionId: "030",
    hasTimeZones: true
}, _iuh2199 = {
    id: "MZ",
    displayName: "Możambik",
    regionId: "014",
    hasTimeZones: true
}, _iuh2200 = {
    id: "NO",
    displayName: "Norveġja",
    regionId: "154",
    hasTimeZones: true
}, _iuh2201 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _iuh2202 = {
    id: "PY",
    displayName: "Paragwaj",
    regionId: "005",
    hasTimeZones: true
}, _iuh2203 = {
    id: "PN",
    displayName: "Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _iuh2204 = {
    id: "RO",
    displayName: "Rumanija",
    regionId: "151",
    hasTimeZones: true
}, _iuh2205 = {
    id: "SG",
    displayName: "Singapor",
    regionId: "035",
    hasTimeZones: true
}, _iuh2206 = {
    id: "SI",
    displayName: "Slovenja",
    regionId: "039",
    hasTimeZones: true
}, _iuh2207 = {
    id: "CH",
    displayName: "Svizzera",
    regionId: "155",
    hasTimeZones: true
}, _iuh2208 = {
    id: "HU",
    displayName: "Ungerija",
    regionId: "151",
    hasTimeZones: true
}, _iuh2209 = {
    id: "HN",
    displayName: "Ħonduras",
    regionId: "013",
    hasTimeZones: true
}, _iuh2210 = {
    id: "ZW",
    displayName: "Żimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _iuh2211 = {
    relative: _iuh259
}, _iuh2212 = {
    id: "AR",
    displayName: "Arġentina",
    regionId: "005",
    hasTimeZones: true
}, _iuh2213 = {
    id: "AU",
    displayName: "Awstralja",
    regionId: "053",
    hasTimeZones: true
}, _iuh2214 = {
    id: "BG",
    displayName: "Bulgarija",
    regionId: "151",
    hasTimeZones: true
}, _iuh2215 = {
    id: "DK",
    displayName: "Danimarka",
    regionId: "154",
    hasTimeZones: true
}, _iuh2216 = {
    id: "PH",
    displayName: "Filippini",
    regionId: "035",
    hasTimeZones: true
}, _iuh2217 = {
    id: "FI",
    displayName: "Finlandja",
    regionId: "154",
    hasTimeZones: true
}, _iuh2218 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _iuh2219 = {
    id: "GP",
    displayName: "Gwadelupe",
    regionId: "029",
    hasTimeZones: true
}, _iuh2220 = {
    id: "GT",
    displayName: "Gwatemala",
    regionId: "013",
    hasTimeZones: true
}, _iuh2221 = {
    id: "BR",
    displayName: "Il-Brażil",
    regionId: "005",
    hasTimeZones: true
}, _iuh2222 = {
    id: "JP",
    displayName: "Il-Ġappun",
    regionId: "030",
    hasTimeZones: true
}, _iuh2223 = {
    id: "ID",
    displayName: "Indoneżja",
    regionId: "035",
    hasTimeZones: true
}, _iuh2224 = {
    id: "RU",
    displayName: "Ir-Russja",
    regionId: "151",
    hasTimeZones: true
}, _iuh2225 = {
    id: "KZ",
    displayName: "Każakstan",
    regionId: "143",
    hasTimeZones: true
}, _iuh2226 = {
    id: "KG",
    displayName: "Kirgistan",
    regionId: "143",
    hasTimeZones: true
}, _iuh2227 = {
    id: "MK",
    displayName: "Maċedonja",
    regionId: "039",
    hasTimeZones: true
}, _iuh2228 = {
    id: "NI",
    displayName: "Nikaragwa",
    regionId: "013",
    hasTimeZones: true
}, _iuh2229 = {
    id: "PT",
    displayName: "Portugall",
    regionId: "039",
    hasTimeZones: true
}, _iuh2230 = {
    id: "SK",
    displayName: "Slovakkja",
    regionId: "151",
    hasTimeZones: true
}, _iuh2231 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _iuh2232 = {
    id: "SZ",
    displayName: "Sważiland",
    regionId: "018",
    hasTimeZones: true
}, _iuh2233 = {
    id: "TH",
    displayName: "Tajlandja",
    regionId: "035",
    hasTimeZones: true
}, _iuh2234 = {
    id: "TZ",
    displayName: "Tanżanija",
    regionId: "014",
    hasTimeZones: true
}, _iuh2235 = {
    id: "VE",
    displayName: "Venezwela",
    regionId: "005",
    hasTimeZones: true
}, _iuh2236 = {
    "2": "{0} u {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0}, u {1}"
}, _iuh2237 = {
    "0": "Dan ix-xahar",
    "1": "Ix-xahar id-dieħel",
    "-1": "Ix-xahar li għadda"
}, _iuh2238 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _iuh2239 = {
    id: "AF",
    displayName: "Afganistan",
    regionId: "034",
    hasTimeZones: true
}, _iuh2240 = {
    id: "AZ",
    displayName: "Ażerbajġan",
    regionId: "145",
    hasTimeZones: true
}, _iuh2241 = {
    id: "BD",
    displayName: "Bangladexx",
    regionId: "034",
    hasTimeZones: true
}, _iuh2242 = {
    id: "GL",
    displayName: "Grinlandja",
    regionId: "021",
    hasTimeZones: true
}, _iuh2243 = {
    id: "CV",
    displayName: "Kape Verde",
    regionId: "011",
    hasTimeZones: true
}, _iuh2244 = {
    id: "CR",
    displayName: "Kosta Rika",
    regionId: "013",
    hasTimeZones: true
}, _iuh2245 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _iuh2246 = {
    id: "MR",
    displayName: "Mawritanja",
    regionId: "011",
    hasTimeZones: true
}, _iuh2247 = {
    id: "FM",
    displayName: "Mikronesja",
    regionId: "057",
    hasTimeZones: true
}, _iuh2248 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _iuh2249 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _iuh2250 = {
    id: "SC",
    displayName: "Seychelles",
    regionId: "014",
    hasTimeZones: true
}, _iuh2251 = {
    id: "TJ",
    displayName: "Taġikistan",
    regionId: "143",
    hasTimeZones: true
}, _iuh2252 = {
    id: "UZ",
    displayName: "Użbekistan",
    regionId: "143",
    hasTimeZones: true
}, _iuh2253 = {
    id: "BY",
    displayName: "Bjelorussja",
    regionId: "151",
    hasTimeZones: true
}, _iuh2254 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _iuh2255 = {
    id: "DE",
    displayName: "Il-Ġermanja",
    regionId: "155",
    hasTimeZones: true
}, _iuh2256 = {
    id: "IM",
    displayName: "Isle of Man",
    regionId: "154",
    hasTimeZones: true
}, _iuh2257 = {
    id: "LU",
    displayName: "Lussemburgu",
    regionId: "155",
    hasTimeZones: true
}, _iuh2258 = {
    id: "NZ",
    displayName: "New Zealand",
    regionId: "053",
    hasTimeZones: true
}, _iuh2259 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _iuh2260 = {
    d: "E, d 'ta'’ - E, d 'ta'’ MMM",
    M: "E, d 'ta'’ MMM – E, d 'ta'’ MMM"
}, _iuh2261 = {
    relative: _iuh265
}, _iuh2262 = {
    relative: _iuh266
}, _iuh2263 = {
    id: "142",
    displayName: "Asja",
    hasTimeZones: false,
    parentRegionId: "001"
}, _iuh2264 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _iuh2265 = {
    id: "CK",
    displayName: "Cook Islands",
    regionId: "061",
    hasTimeZones: true
}, _iuh2266 = {
    id: "GW",
    displayName: "Ginea-Bissaw",
    regionId: "011",
    hasTimeZones: true
}, _iuh2267 = {
    id: "GB",
    displayName: "L-Ingilterra",
    regionId: "154",
    hasTimeZones: true
}, _iuh2268 = {
    id: "SH",
    displayName: "Saint Helena",
    regionId: "011",
    hasTimeZones: true
}, _iuh2269 = {
    id: "LC",
    displayName: "Santa Luċija",
    regionId: "029",
    hasTimeZones: true
}, _iuh2270 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _iuh2271 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _iuh2272 = {
    id: "AX",
    displayName: "Gżejjer Aland",
    regionId: "154",
    hasTimeZones: true
}, _iuh2273 = {
    id: "FO",
    displayName: "Gżejjer Faroe",
    regionId: "154",
    hasTimeZones: true
}, _iuh2274 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _iuh2275 = {
    id: "NC",
    displayName: "New Caledonia",
    regionId: "054",
    hasTimeZones: true
}, _iuh2276 = {
    "0": "Din il-ġimgħa",
    "1": "Il-ġimgħa d-dieħla",
    "-1": "Il-ġimgħa li għaddiet"
}, _iuh2277 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _iuh2278 = {
    id: "ZA",
    displayName: "Afrika t’Isfel",
    regionId: "018",
    hasTimeZones: true
}, _iuh2279 = {
    id: "150",
    displayName: "Ewropa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _iuh2280 = {
    id: "KP",
    displayName: "Koreja ta’ Fuq",
    regionId: "030",
    hasTimeZones: true
}, _iuh2281 = {
    id: "KR",
    displayName: "Koreja t’Isfel",
    regionId: "030",
    hasTimeZones: true
}, _iuh2282 = {
    id: "US",
    displayName: "L-Istati Uniti",
    regionId: "021",
    hasTimeZones: true
}, _iuh2283 = {
    id: "NF",
    displayName: "Norfolk Island",
    regionId: "053",
    hasTimeZones: true
}, _iuh2284 = {
    relative: _iuh271
}, _iuh2285 = {
    relative: _iuh272
}, _iuh2286 = {
    id: "002",
    displayName: "Affrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _iuh2287 = {
    id: "019",
    displayName: "Amerika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _iuh2288 = {
    id: "IO",
    displayName: "British Indian Ocean Territory",
    hasTimeZones: true
}, _iuh2289 = {
    id: "GF",
    displayName: "Gujana Franċiża",
    regionId: "005",
    hasTimeZones: true
}, _iuh2290 = {
    id: "KY",
    displayName: "Gżejjer Kajmani",
    regionId: "029",
    hasTimeZones: true
}, _iuh2291 = {
    id: "029",
    displayName: "Karibew",
    hasTimeZones: false,
    parentRegionId: "019"
}, _iuh2292 = {
    id: "CZ",
    displayName: "Repubblika Ċeka",
    regionId: "151",
    hasTimeZones: true
}, _iuh2293 = {
    id: "AS",
    displayName: "Samoa Amerikana",
    regionId: "061",
    hasTimeZones: true
}, _iuh2294 = {
    id: "SB",
    displayName: "Solomon Islands",
    regionId: "054",
    hasTimeZones: true
}, _iuh2295 = {
    id: "TL",
    displayName: "Timor tal-Lvant",
    regionId: "035",
    hasTimeZones: true
}, _iuh2296 = {
    d: "dd/MM/y – dd/MM/y G",
    M: "dd/MM/y – dd/MM/y G",
    y: "dd/MM/y – dd/MM/y G"
}, _iuh2297 = [ "Jan", "Fra", "Mar", "Apr", "Mej", "Ġun", "Lul", "Aww", "Set", "Ott", "Nov", "Diċ" ], _iuh2298 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _iuh2299 = {
    id: "FK",
    displayName: "Falkland Islands",
    regionId: "005",
    hasTimeZones: true
}, _iuh2300 = {
    id: "SA",
    displayName: "Għarabja Sawdita",
    regionId: "145",
    hasTimeZones: true
}, _iuh2301 = {
    id: "009",
    displayName: "Oċejanja",
    hasTimeZones: false,
    parentRegionId: "001"
}, _iuh2302 = {
    id: "GQ",
    displayName: "Ginea Ekwatorjali",
    regionId: "017",
    hasTimeZones: true
}, _iuh2303 = {
    id: "054",
    displayName: "Melanesja",
    hasTimeZones: false,
    parentRegionId: "009"
}, _iuh2304 = {
    id: "PG",
    displayName: "Papwa-Ginea Ġdida",
    regionId: "054",
    hasTimeZones: true
}, _iuh2305 = {
    id: "061",
    displayName: "Polinesja",
    hasTimeZones: false,
    parentRegionId: "009"
}, _iuh2306 = {
    id: "EH",
    displayName: "Sahara tal-Punent",
    regionId: "015",
    hasTimeZones: true
}, _iuh2307 = {
    id: "TT",
    displayName: "Trinidad u Tobago",
    regionId: "029",
    hasTimeZones: true
}, _iuh2308 = {
    id: "WF",
    displayName: "Wallis and Futuna",
    regionId: "061",
    hasTimeZones: true
}, _iuh2309 = {
    relative: _iuh2138
}, _iuh2310 = {
    id: "CI",
    displayName: "Kosta ta’ l-Avorju",
    regionId: "011",
    hasTimeZones: true
}, _iuh2311 = {
    id: "PF",
    displayName: "Polinesja Franċiża",
    regionId: "061",
    hasTimeZones: true
}, _iuh2312 = {
    id: "TF",
    displayName: "Territorji Franċiżi ta’ Nofsinhar",
    hasTimeZones: true
}, _iuh2313 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _iuh2314 = {
    id: "AG",
    displayName: "Antigua and Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _iuh2315 = {
    id: "BA",
    displayName: "Bożnija Ħerżegovina",
    regionId: "039",
    hasTimeZones: true
}, _iuh2316 = {
    id: "HM",
    displayName: "Heard Island and McDonald Islands",
    hasTimeZones: false
}, _iuh2317 = {
    id: "MO",
    displayName: "Macao S.A.R., China",
    regionId: "030",
    hasTimeZones: true
}, _iuh2318 = {
    id: "VI",
    displayName: "U.S. Virgin Islands",
    regionId: "029",
    hasTimeZones: true
}, _iuh2319 = {
    id: "MH",
    displayName: "Gżejjer ta’ Marshall",
    regionId: "057",
    hasTimeZones: true
}, _iuh2320 = [ "Il-Ħadd", "It-Tnejn", "It-Tlieta", "L-Erbgħa", "Il-Ħamis", "Il-Ġimgħa", "Is-Sibt" ], _iuh2321 = {
    id: "143",
    displayName: "Asja Ċentrali",
    hasTimeZones: false,
    parentRegionId: "142"
}, _iuh2322 = {
    id: "DO",
    displayName: "Republikka Domenikana",
    regionId: "029",
    hasTimeZones: true
}, _iuh2323 = {
    id: "KN",
    displayName: "Saint Kitts and Nevis",
    regionId: "029",
    hasTimeZones: true
}, _iuh2324 = {
    id: "ST",
    displayName: "Sao Tome and Principe",
    regionId: "017",
    hasTimeZones: true
}, _iuh2325 = {
    id: "UM",
    displayName: "United States Minor Outlying Islands",
    hasTimeZones: true
}, _iuh2326 = {
    id: "HK",
    displayName: "Ħong Kong S.A.R. Ċina",
    regionId: "030",
    hasTimeZones: true
}, _iuh2327 = {
    abbreviated: {
        am: "AM",
        pm: "PM"
    },
    narrow: {
        am: "AM",
        pm: "PM"
    },
    wide: {
        am: "AM",
        pm: "PM"
    }
}, _iuh2328 = {
    id: "030",
    displayName: "Asja tal-Lvant",
    hasTimeZones: false,
    parentRegionId: "142"
}, _iuh2329 = {
    id: "035",
    displayName: "Asja tax-Xlokk",
    hasTimeZones: false,
    parentRegionId: "142"
}, _iuh2330 = {
    id: "VG",
    displayName: "British Virgin Islands",
    regionId: "029",
    hasTimeZones: true
}, _iuh2331 = {
    id: "154",
    displayName: "Ewropa ta’ Fuq",
    hasTimeZones: false,
    parentRegionId: "150"
}, _iuh2332 = {
    id: "039",
    displayName: "Ewropa t’Isfel",
    hasTimeZones: false,
    parentRegionId: "150"
}, _iuh2333 = {
    id: "SJ",
    displayName: "Svalbard and Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _iuh2334 = {
    id: "PS",
    displayName: "Territorju Palestinjan",
    regionId: "145",
    hasTimeZones: true
}, _iuh2335 = {
    one: "{0} sena ilu",
    few: "{0} snin ilu",
    many: "{0} snin ilu",
    other: "{0} snin ilu"
}, _iuh2336 = {
    id: "017",
    displayName: "Affrika Nofsani",
    hasTimeZones: false,
    parentRegionId: "002"
}, _iuh2337 = {
    id: "015",
    displayName: "Affrika ta’ Fuq",
    hasTimeZones: false,
    parentRegionId: "002"
}, _iuh2338 = {
    id: "018",
    displayName: "Affrika t’Isfel",
    hasTimeZones: false,
    parentRegionId: "002"
}, _iuh2339 = {
    id: "021",
    displayName: "Amerika Nòrdiku",
    hasTimeZones: false,
    parentRegionId: "019"
}, _iuh2340 = {
    id: "005",
    displayName: "Amerika t’Isfel",
    hasTimeZones: false,
    parentRegionId: "019"
}, _iuh2341 = {
    id: "145",
    displayName: "Asja tal-Punent",
    hasTimeZones: false,
    parentRegionId: "142"
}, _iuh2342 = {
    id: "AE",
    displayName: "Emirati Għarab Maqgħuda",
    regionId: "145",
    hasTimeZones: true
}, _iuh2343 = {
    id: "MP",
    displayName: "Gżejjer Marjana ta’ Fuq",
    regionId: "057",
    hasTimeZones: true
}, _iuh2344 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _iuh2345 = {
    id: "013",
    displayName: "Amerika Ċentrali",
    hasTimeZones: false,
    parentRegionId: "019"
}, _iuh2346 = {
    id: "151",
    displayName: "Ewropa tal-Lvant",
    hasTimeZones: false,
    parentRegionId: "150"
}, _iuh2347 = {
    id: "TC",
    displayName: "Turks and Caicos Islands",
    regionId: "029",
    hasTimeZones: true
}, _iuh2348 = {
    id: "014",
    displayName: "Affrika tal-Lvant",
    hasTimeZones: false,
    parentRegionId: "002"
}, _iuh2349 = {
    id: "155",
    displayName: "Ewropa tal-Punent",
    hasTimeZones: false,
    parentRegionId: "150"
}, _iuh2350 = {
    id: "PM",
    displayName: "Saint Pierre and Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _iuh2351 = {
    displayName: "Siegħa",
    relativeTime: _iuh234
}, _iuh2352 = {
    id: "011",
    displayName: "Affrika tal-Punent",
    hasTimeZones: false,
    parentRegionId: "002"
}, _iuh2353 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _iuh2354 = {
    id: "CF",
    displayName: "Repubblika Afrikana Ċentrali",
    regionId: "017",
    hasTimeZones: true
}, _iuh2355 = {
    id: "034",
    displayName: "Asja t’Isfel Ċentrali",
    hasTimeZones: false,
    parentRegionId: "142"
}, _iuh2356 = {
    id: "057",
    displayName: "Reġjun ta’ Mikroneżja",
    hasTimeZones: false,
    parentRegionId: "009"
}, _iuh2357 = {
    id: "GS",
    displayName: "South Georgia and the South Sandwich Islands",
    hasTimeZones: true
}, _iuh2358 = {
    displayName: "Minuta",
    relativeTime: _iuh248
}, _iuh2359 = {
    id: "053",
    displayName: "Awstralja u New Zealand",
    hasTimeZones: false,
    parentRegionId: "009"
}, _iuh2360 = {
    id: "CD",
    displayName: "Democratic Republic of the Congo",
    regionId: "017",
    hasTimeZones: true
}, _iuh2361 = {
    id: "VC",
    displayName: "Saint Vincent and the Grenadines",
    regionId: "029",
    hasTimeZones: true
}, _iuh2362 = {
    d: "E, dd/MM/y – E, dd/MM/y G",
    M: "E, dd/MM/y – E, dd/MM/y G",
    y: "E, dd/MM/y – E, dd/MM/y G"
}, _iuh2363 = {
    d: "d 'ta'’-d 'ta'’ MMM y G",
    M: "d 'ta'’ MMM – d 'ta'’ MMM y G",
    y: "d 'ta'’ MMM y – d 'ta'’ MMM y G"
}, _iuh2364 = {
    displayName: "Sekonda",
    relative: [ "now" ],
    relativeTime: _iuh235
}, _iuh2365 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _iuh2366 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _iuh2367 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _iuh2368 = [ "Jannar", "Frar", "Marzu", "April", "Mejju", "Ġunju", "Lulju", "Awwissu", "Settembru", "Ottubru", "Novembru", "Diċembru" ], _iuh2369 = {
    past: _iuh2335,
    future: {
        other: "+{0} y"
    }
}, _iuh2370 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _iuh2371 = {
    abbreviated: _iuh22,
    narrow: [ "1", "2", "3", "4" ],
    wide: _iuh246
}, _iuh2372 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _iuh2373 = {
    d: "E, d 'ta'’ - E, d 'ta'’ MMM y G",
    M: "E, d 'ta'’ MMM – E, d 'ta'’ MMM y G",
    y: "E, d 'ta'’ MMM y – E, d 'ta'’ MMM y G"
}, _iuh2374 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _iuh2375 = {
    displayName: "Jum",
    relative: _iuh223,
    relativeTime: _iuh233
}, _iuh2376 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _iuh2377 = {
    displayName: "Quarter",
    relative: _iuh258,
    relativeTime: _iuh236
}, _iuh2378 = {
    displayName: "Xahar",
    relative: _iuh2237,
    relativeTime: _iuh231
}, _iuh2379 = {
    displayName: "Ġimgħa",
    relative: _iuh2276,
    relativeTime: _iuh232
}, _iuh2380 = {
    decimal: ".",
    group: ",",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":",
    list: "؛"
}, _iuh2381 = {
    decimal: ".",
    group: ",",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":",
    list: ";"
}, _iuh2382 = {
    format: _iuh2327,
    standAlone: _iuh2327
}, _iuh2383 = {
    symbols: _iuh2380
}, _iuh2384 = {
    format: _iuh2277,
    numeric: _iuh25,
    standAlone: _iuh2277
}, _iuh2385 = {
    symbols: _iuh2380,
    digits: "renderSpelloutCardinal"
}, _iuh2386 = {
    displayName: "Sena",
    relative: _iuh2180,
    relativeTime: _iuh2369
}, _iuh2387 = {
    "1000": {
        other: "0K"
    },
    "10000": {
        other: "00K"
    },
    "100000": {
        other: "000K"
    },
    "1000000": {
        other: "0M"
    },
    "10000000": {
        other: "00M"
    },
    "100000000": {
        other: "000M"
    },
    "1000000000": {
        other: "0G"
    },
    "10000000000": {
        other: "00G"
    },
    "100000000000": {
        other: "000G"
    },
    "1000000000000": {
        other: "0T"
    },
    "10000000000000": {
        other: "00T"
    },
    "100000000000000": {
        other: "000T"
    }
}, _iuh2388 = {
    symbols: _iuh2380,
    digits: "renderSpelloutCardinalFinancial"
}, _iuh2389 = {
    abbreviated: _iuh2298,
    narrow: _iuh255,
    wide: _iuh2298
}, _iuh2390 = {
    abbreviated: _iuh226,
    narrow: _iuh28,
    wide: _iuh2320,
    "short": _iuh226
}, _iuh2391 = {
    abbreviated: _iuh226,
    narrow: _iuh217,
    wide: _iuh2320,
    "short": _iuh226
}, _iuh2392 = {
    format: _iuh2371,
    standAlone: _iuh2371
}, _iuh2393 = {
    abbreviated: _iuh2313,
    narrow: _iuh2313,
    wide: _iuh2313
}, _iuh2394 = {
    abbreviated: _iuh2297,
    narrow: _iuh242,
    wide: _iuh2368
}, _iuh2395 = {
    format: _iuh2393
}, _iuh2396 = {
    abbreviated: _iuh2297,
    narrow: _iuh270,
    wide: _iuh2368
}, _iuh2397 = {
    abbreviated: _iuh2366,
    narrow: _iuh264,
    wide: _iuh2366
}, _iuh2398 = {
    abbreviated: _iuh2367,
    narrow: _iuh255,
    wide: _iuh2367
}, _iuh2399 = {
    abbreviated: _iuh2370,
    narrow: _iuh264,
    wide: _iuh2370
}, _iuh2400 = {
    abbreviated: _iuh2365,
    narrow: _iuh255,
    wide: _iuh2376
}, _iuh2401 = {
    abbreviated: _iuh2372,
    narrow: _iuh264,
    wide: _iuh2372
}, _iuh2402 = {
    abbreviated: _iuh2374,
    narrow: _iuh255,
    wide: _iuh2374
}, _iuh2403 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _iuh2404 = {
    fullDate: "EEEE, d 'ta'’ MMMM y G",
    longDate: "d 'ta'’ MMMM y G",
    mediumDate: "dd MMM y G",
    shortDate: "dd/MM/y GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd/MM/y GGGGG HH:mm",
    mediumDateTime: "dd MMM y G HH:mm:ss",
    longDateTime: "d 'ta'’ MMMM y G HH:mm:ss z",
    fullDateTime: "EEEE, d 'ta'’ MMMM y G HH:mm:ss zzzz"
}, _iuh2405 = {
    format: _iuh2389,
    standAlone: _iuh2389
}, _iuh2406 = {
    "long": _iuh2387,
    "short": _iuh2387,
    "default": "#,##0.###"
}, _iuh2407 = {
    format: _iuh2390,
    standAlone: _iuh2391
}, _iuh2408 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _iuh2409 = {
    format: _iuh2394,
    standAlone: _iuh2396
}, _iuh2410 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _iuh2411 = {
    MMMMd: "d 'ta'’ MMMM",
    yMMMM: "MMMM 'ta'’ y G",
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss",
    Gy: "G y",
    GyMMM: "G y MMM",
    GyMMMd: "G y MMM d",
    GyMMMEd: "G y MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    ms: "mm:ss",
    y: "G y",
    yyyy: "G y",
    yyyyM: "GGGGG y-MM",
    yyyyMd: "GGGGG y-MM-dd",
    yyyyMEd: "GGGGG y-MM-dd, E",
    yyyyMMM: "G y MMM",
    yyyyMMMd: "G y MMM d",
    yyyyMMMEd: "G y MMM d, E",
    yyyyMMMM: "G y MMMM",
    yyyyQQQ: "G y QQQ",
    yyyyQQQQ: "G y QQQQ"
}, _iuh2412 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _iuh2413 = {
    "1000": _iuh227,
    "10000": _iuh237,
    "100000": _iuh250,
    "1000000": _iuh228,
    "10000000": _iuh238,
    "100000000": _iuh251,
    "1000000000": _iuh229,
    "10000000000": _iuh239,
    "100000000000": _iuh252,
    "1000000000000": _iuh230,
    "10000000000000": _iuh240,
    "100000000000000": _iuh253
}, _iuh2414 = {
    format: _iuh2400,
    standAlone: _iuh2400
}, _iuh2415 = {
    basic: _iuh2403,
    cldr: _iuh2408
}, _iuh2416 = {
    basic: _iuh2404,
    cldr: _iuh2411
}, _iuh2417 = {
    d: {
        d: "d–d"
    },
    h: _iuh26,
    H: {
        H: "HH–HH"
    },
    hm: _iuh256,
    Hm: _iuh214,
    hmv: _iuh268,
    Hmv: _iuh219,
    hv: _iuh29,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _iuh224,
    MEd: _iuh243,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _iuh211,
    MMMEd: _iuh244,
    y: {
        y: "U–U"
    },
    yM: _iuh215,
    yMd: _iuh2238,
    yMEd: _iuh2353,
    yMMM: _iuh216,
    yMMMd: _iuh263,
    yMMMEd: _iuh2344,
    yMMMM: _iuh225
}, _iuh2418 = {
    d: {
        d: "d–d"
    },
    h: {
        h: "h–h a"
    },
    H: {
        H: "HH–HH"
    },
    hm: _iuh213,
    Hm: _iuh214,
    hmv: _iuh218,
    Hmv: _iuh219,
    hv: {
        h: "h–h a v"
    },
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _iuh220,
    MEd: _iuh241,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _iuh257,
    MMMEd: _iuh2260,
    y: {
        y: "y–y G"
    },
    yM: _iuh221,
    yMd: _iuh2296,
    yMEd: _iuh2362,
    yMMM: _iuh222,
    yMMMd: _iuh2363,
    yMMMEd: _iuh2373,
    yMMMM: _iuh21
}, _iuh2419 = {
    beforeCurrency: _iuh2410,
    afterCurrency: _iuh2410
}, _iuh2420 = {
    abbreviated: _iuh2412,
    narrow: _iuh2412,
    wide: _iuh2412
}, _iuh2421 = {
    format: _iuh2420
}, _iuh2422 = {
    "short": _iuh2413,
    "default": "¤#,##0.00",
    other: "{0} {1}",
    currencySpacing: _iuh2419
}, _iuh2423 = {
    era: _iuh23,
    year: _iuh2386,
    month: _iuh2378,
    week: _iuh2379,
    day: _iuh2375,
    weekday: _iuh210,
    dayperiod: _iuh24,
    hour: _iuh2351,
    minute: _iuh2358,
    "minute-short": {
        displayName: "min."
    },
    "minute-narrow": {
        displayName: "m"
    },
    second: _iuh2364,
    "second-short": {
        displayName: "sek."
    },
    "second-narrow": {
        displayName: "s"
    },
    zone: {
        displayName: "Żona"
    },
    quarter: _iuh2377,
    sun: _iuh2284,
    mon: _iuh2309,
    tue: _iuh2211,
    wed: _iuh2285,
    thu: _iuh2261,
    fri: _iuh2108,
    sat: _iuh2262
}, _iuh2424 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _iuh2423
}, _iuh2425 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _iuh2406,
    currency: _iuh2422,
    percent: {
        "default": "#,##0%"
    }
}, _iuh2426 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _iuh2427 = {
    dateFormats: _iuh2416,
    datePartsOrder: "dmy",
    dateIntervalFormats: _iuh2418,
    dateIntervalFallbackFormat: "{0} - {1}",
    dayNames: _iuh2407,
    dayPeriods: _iuh2382,
    monthNames: _iuh2414,
    eraNames: _iuh212,
    quarterNames: _iuh2392,
    fields: _iuh2423
}, _iuh2428 = {
    dayParts: _iuh2395,
    days: _iuh2421,
    months: _iuh2421,
    years: _iuh2421,
    zodiacs: _iuh2395
}, _iuh2429 = {
    dateFormats: _iuh2415,
    datePartsOrder: "md",
    dateIntervalFormats: _iuh2417,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _iuh2407,
    dayPeriods: _iuh2382,
    cyclicNames: _iuh2428,
    monthNames: _iuh2405,
    monthPatterns: _iuh2384,
    quarterNames: _iuh2392,
    fields: _iuh2423
};

inter.id = "mt";

inter.listPatterns = {
    "default": _iuh2236,
    unit: _iuh2236,
    unitNarrow: P.listPatterns.default,
    unitShort: _iuh2236
};

inter.unitPatterns = {
    "long": {
        unit: {
            angleArcMinute: {
                one: "{0}′",
                few: "{0}′",
                many: "{0}′",
                other: "{0}′"
            },
            concentrKarat: _iuh260,
            consumptionLiterPerKilometer: {
                one: "{0} litru kull kilometru",
                few: "{0} litri kull kilometru",
                many: "{0} litri kull kilometru",
                other: "{0} litri kull kilometru"
            },
            digitalTerabyte: {
                one: "{0} terabyte",
                few: "{0} terabytes",
                many: "{0} terabytes",
                other: "{0} terabytes"
            },
            digitalTerabit: {
                one: "{0} terabit",
                few: "{0} terabits",
                many: "{0} terabits",
                other: "{0} terabits"
            },
            digitalMegabyte: {
                one: "{0} megabyte",
                few: "{0} megabytes",
                many: "{0} megabytes",
                other: "{0} megabytes"
            },
            durationMillisecond: {
                one: "{0} millisekonda",
                few: "{0} millisekondi",
                many: "{0} millisekondi",
                other: "{0} millisekondi"
            },
            lightLux: _iuh261
        }
    },
    "short": {
        unit: {
            concentrKarat: _iuh260,
            consumptionLiterPerKilometer: {
                one: "{0} L/km",
                few: "{0} L/km",
                many: "{0} L/km",
                other: "{0} L/km"
            },
            digitalTerabyte: {
                one: "{0} TB",
                few: "{0} TB",
                many: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                few: "{0} Tb",
                many: "{0} Tb",
                other: "{0} Tb"
            },
            digitalMegabyte: {
                one: "{0} MB",
                few: "{0} MB",
                many: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mb",
                few: "{0} Mb",
                many: "{0} Mb",
                other: "{0} Mb"
            },
            durationMillisecond: {
                one: "{0} ms",
                few: "{0} ms",
                many: "{0} ms",
                other: "{0} ms"
            },
            lightLux: _iuh261,
            accelerationGForce: {
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                other: "{0} m/s²"
            },
            angleRevolution: {
                other: "{0} rev"
            },
            angleRadian: {
                other: "{0} rad"
            },
            angleDegree: {
                other: "{0}°"
            },
            angleArcMinute: {
                other: "{0}′"
            },
            angleArcSecond: {
                other: "{0}″"
            },
            areaSquareKilometer: {
                other: "{0} km²"
            },
            areaHectare: {
                other: "{0} ha"
            },
            areaSquareMeter: {
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                other: "{0} cm²"
            },
            areaSquareMile: {
                other: "{0} mi²"
            },
            areaAcre: {
                other: "{0} ac"
            },
            areaSquareYard: {
                other: "{0} yd²"
            },
            areaSquareFoot: {
                other: "{0} ft²"
            },
            areaSquareInch: {
                other: "{0} in²"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            "consumptionLiterPer-100kilometers": {
                other: "{0} L/100km"
            },
            consumptionMilePerGallon: {
                other: "{0} mpg US"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            digitalGigabyte: {
                other: "{0} GB"
            },
            digitalGigabit: {
                other: "{0} Gb"
            },
            digitalKilobyte: {
                other: "{0} kB"
            },
            digitalKilobit: {
                other: "{0} kb"
            },
            digitalByte: {
                other: "{0} byte"
            },
            digitalBit: {
                other: "{0} bit"
            },
            durationCentury: {
                other: "{0} c"
            },
            durationYear: {
                other: "{0} y"
            },
            durationMonth: {
                other: "{0} m"
            },
            durationWeek: {
                other: "{0} w"
            },
            durationDay: {
                other: "{0} d"
            },
            durationHour: {
                other: "{0} h"
            },
            durationMinute: {
                other: "{0} min"
            },
            durationSecond: {
                other: "{0} s"
            },
            durationMicrosecond: {
                other: "{0} μs"
            },
            durationNanosecond: {
                other: "{0} ns"
            },
            electricAmpere: {
                other: "{0} A"
            },
            electricMilliampere: {
                other: "{0} mA"
            },
            electricOhm: {
                other: "{0} Ω"
            },
            electricVolt: {
                other: "{0} V"
            },
            energyKilocalorie: {
                other: "{0} kcal"
            },
            energyCalorie: {
                other: "{0} cal"
            },
            energyFoodcalorie: {
                other: "{0} Cal"
            },
            energyKilojoule: {
                other: "{0} kJ"
            },
            energyJoule: {
                other: "{0} J"
            },
            energyKilowattHour: {
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                other: "{0} kHz"
            },
            frequencyHertz: {
                other: "{0} Hz"
            },
            lengthKilometer: {
                other: "{0} km"
            },
            lengthMeter: {
                other: "{0} m"
            },
            lengthDecimeter: {
                other: "{0} dm"
            },
            lengthCentimeter: {
                other: "{0} cm"
            },
            lengthMillimeter: {
                other: "{0} mm"
            },
            lengthMicrometer: {
                other: "{0} µm"
            },
            lengthNanometer: {
                other: "{0} nm"
            },
            lengthPicometer: {
                other: "{0} pm"
            },
            lengthMile: {
                other: "{0} mi"
            },
            lengthYard: {
                other: "{0} yd"
            },
            lengthFoot: {
                other: "{0} ft"
            },
            lengthInch: {
                other: "{0} in"
            },
            lengthParsec: {
                other: "{0} pc"
            },
            lengthLightYear: {
                other: "{0} ly"
            },
            lengthAstronomicalUnit: {
                other: "{0} au"
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            lengthNauticalMile: {
                other: "{0} nmi"
            },
            lengthMileScandinavian: {
                other: "{0} smi"
            },
            massMetricTon: {
                other: "{0} t"
            },
            massKilogram: {
                other: "{0} kg"
            },
            massGram: {
                other: "{0} g"
            },
            massMilligram: {
                other: "{0} mg"
            },
            massMicrogram: {
                other: "{0} µg"
            },
            massTon: {
                other: "{0} tn"
            },
            massStone: {
                other: "{0} st"
            },
            massPound: {
                other: "{0} lb"
            },
            massOunce: {
                other: "{0} oz"
            },
            massOunceTroy: {
                other: "{0} oz t"
            },
            massCarat: {
                other: "{0} CD"
            },
            powerGigawatt: {
                other: "{0} GW"
            },
            powerMegawatt: {
                other: "{0} MW"
            },
            powerKilowatt: {
                other: "{0} kW"
            },
            powerWatt: {
                other: "{0} W"
            },
            powerMilliwatt: {
                other: "{0} mW"
            },
            powerHorsepower: {
                other: "{0} hp"
            },
            pressureHectopascal: {
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                other: "{0} psi"
            },
            pressureInchHg: {
                other: "{0} inHg"
            },
            pressureMillibar: {
                other: "{0} mbar"
            },
            speedKilometerPerHour: {
                other: "{0} km/h"
            },
            speedMeterPerSecond: {
                other: "{0} m/s"
            },
            speedMilePerHour: {
                other: "{0} mi/h"
            },
            speedKnot: {
                other: "{0} kn"
            },
            temperatureGeneric: {
                other: "{0}°"
            },
            temperatureCelsius: {
                other: "{0}°C"
            },
            temperatureFahrenheit: {
                other: "{0}°F"
            },
            temperatureKelvin: {
                other: "{0} K"
            },
            volumeCubicKilometer: {
                other: "{0} km³"
            },
            volumeCubicMeter: {
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                other: "{0} cm³"
            },
            volumeCubicMile: {
                other: "{0} mi³"
            },
            volumeCubicYard: {
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                other: "{0} ft³"
            },
            volumeCubicInch: {
                other: "{0} in³"
            },
            volumeMegaliter: {
                other: "{0} ML"
            },
            volumeHectoliter: {
                other: "{0} hL"
            },
            volumeLiter: {
                other: "{0} l"
            },
            volumeDeciliter: {
                other: "{0} dL"
            },
            volumeCentiliter: {
                other: "{0} cL"
            },
            volumeMilliliter: {
                other: "{0} mL"
            },
            volumePintMetric: {
                other: "{0} mpt"
            },
            volumeCupMetric: {
                other: "{0} mc"
            },
            volumeAcreFoot: {
                other: "{0} ac ft"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallon: {
                other: "{0} gal US"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            },
            volumeQuart: {
                other: "{0} qt"
            },
            volumePint: {
                other: "{0} pt"
            },
            volumeCup: {
                other: "{0} c"
            },
            volumeFluidOunce: {
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                other: "{0} tbsp"
            },
            volumeTeaspoon: {
                other: "{0} tsp"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            durationMillisecond: {
                one: "{0}ms",
                few: "{0}ms",
                many: "{0}ms",
                other: "{0}ms"
            }
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "Ħin ta’ {0}",
    fallback: "{1} ({0})",
    regions: {
        standard: "{0} Ħin Standard",
        daylight: "{0} (+1)"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "à", "b", "ċ", "d", "e", "è", "f", "ġ", "g", "{għ}", "h", "ħ", "i", "ì", "j", "k", "l", "m", "n", "o", "ò", "p", "q", "r", "s", "t", "u", "ù", "v", "w", "x", "ż", "z" ],
        auxiliary: [ "c", "y" ],
        index: [ "A", "B", "Ċ", "C", "D", "E", "F", "Ġ", "G", "{GĦ}", "H", "Ħ", "I", "{IE*}", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Ż", "Z" ],
        punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "'", "‘", "’", '"', "“", "”", "(", ")", "\\[", "\\]", "\\{", "\\}" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _iuh2380,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _iuh2425,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _iuh2425,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _iuh2380,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _iuh2380,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _iuh2380,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _iuh2380,
        digits: "renderEthiopic"
    },
    finance: _iuh2383,
    fullwide: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _iuh2380,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _iuh2380,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _iuh2380,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _iuh2380,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _iuh2385,
    hansfin: _iuh2388,
    hant: _iuh2385,
    hantfin: _iuh2388,
    hebr: {
        symbols: _iuh2380,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _iuh2380,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _iuh2385,
    jpanfin: _iuh2388,
    kali: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _iuh2380,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _iuh2380,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _iuh2380,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _iuh2380,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _iuh2380,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _iuh2380,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _iuh2380,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _iuh2380,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _iuh2383,
    nkoo: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _iuh2380,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _iuh2380,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _iuh2380,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _iuh2380,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _iuh2380,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _iuh2380,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _iuh2383,
    vaii: {
        symbols: _iuh2381,
        formats: _iuh2425,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _iuh2380,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _iuh2416,
        datePartsOrder: "dmy",
        dateIntervalFormats: _iuh2418,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _iuh2407,
        dayPeriods: _iuh2382,
        monthNames: _iuh2409,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _iuh2392,
        fields: _iuh2423
    },
    chinese: _iuh2429,
    coptic: {
        dateFormats: _iuh2416,
        datePartsOrder: "dmy",
        dateIntervalFormats: _iuh2418,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _iuh2407,
        dayPeriods: _iuh2382,
        monthNames: {
            format: _iuh2399,
            standAlone: _iuh2399
        },
        eraNames: _iuh247,
        quarterNames: _iuh2392,
        fields: _iuh2423
    },
    dangi: _iuh2429,
    ethioaa: _iuh2424,
    ethiopic: {
        dateFormats: _iuh2416,
        datePartsOrder: "dmy",
        dateIntervalFormats: _iuh2418,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _iuh2407,
        dayPeriods: _iuh2382,
        monthNames: {
            format: _iuh2401,
            standAlone: _iuh2401
        },
        eraNames: _iuh247,
        quarterNames: _iuh2392,
        fields: _iuh2423
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d 'ta'’ MMMM y",
                longDate: "d 'ta'’ MMMM y",
                mediumDate: "dd MMM y",
                shortDate: "dd/MM/y",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "dd/MM/y HH:mm",
                mediumDateTime: "dd MMM y HH:mm:ss",
                longDateTime: "d 'ta'’ MMMM y HH:mm:ss z",
                fullDateTime: "EEEE, d 'ta'’ MMMM y HH:mm:ss zzzz"
            },
            cldr: {
                MMMMd: "d 'ta'’ MMMM",
                yMMMM: "MMMM 'ta'’ y",
                d: "d",
                E: "ccc",
                Ed: "d, E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "MM-dd",
                MEd: "MM-dd, E",
                MMM: "LLL",
                MMMd: "MMM d",
                MMMEd: "MMM d, E",
                ms: "mm:ss",
                y: "y",
                yM: "y-MM",
                yMd: "y-MM-dd",
                yMEd: "y-MM-dd, E",
                yMMM: "y MMM",
                yMMMd: "y MMM d",
                yMMMEd: "y MMM d, E",
                yQQQ: "y QQQ",
                yQQQQ: "y QQQQ"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: {
                h: "h – h a"
            },
            H: {
                H: "HH–HH"
            },
            hm: _iuh213,
            Hm: _iuh214,
            hmv: _iuh218,
            Hmv: _iuh219,
            hv: {
                h: "h–h a v"
            },
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            Md: _iuh220,
            MEd: _iuh241,
            MMM: {
                M: "MMM – MMM"
            },
            MMMd: {
                d: "d 'ta'’ - d 'ta'’ MMM",
                M: "d 'ta'’ MMM – d 'ta'’ MMM"
            },
            MMMEd: _iuh2260,
            y: {
                y: "y – y"
            },
            yM: {
                M: "MM/y – MM/y",
                y: "MM/y – MM/y"
            },
            yMd: {
                d: "dd/MM/y – dd/MM/y",
                M: "dd/MM/y – dd/MM/y",
                y: "dd/MM/y – dd/MM/y"
            },
            yMEd: {
                d: "E, dd/MM/y – E, dd/MM/y",
                M: "E, dd/MM/y – E, dd/MM/y",
                y: "E, dd/MM/y – E, dd/MM/y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "d 'ta'’-d 'ta'’ MMM y",
                M: "d 'ta'’ MMM – d 'ta'’ MMM y",
                y: "d 'ta'’ MMM y – d 'ta'’ MMM y"
            },
            yMMMEd: {
                d: "E, d 'ta'’ - E, d 'ta'’ MMM y",
                M: "E, d 'ta'’ MMM – E, d 'ta'’ MMM y",
                y: "E, d 'ta'’ MMM y – E, d 'ta'’ MMM y"
            },
            yMMMM: {
                M: "y MMMM–MMMM",
                y: "y MMMM – y MMMM"
            }
        },
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _iuh2407,
        dayPeriods: _iuh2382,
        monthNames: _iuh2409,
        eraNames: {
            wide: [ "Qabel Kristu", "Wara Kristu" ],
            abbreviated: [ "QK", "WK" ]
        },
        quarterNames: _iuh2392,
        fields: _iuh2423
    },
    hebrew: {
        dateFormats: _iuh2416,
        datePartsOrder: "dmy",
        dateIntervalFormats: _iuh2418,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _iuh2407,
        dayPeriods: _iuh2382,
        monthNames: {
            format: _iuh2397,
            standAlone: _iuh2397
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _iuh2392,
        fields: _iuh2423
    },
    indian: {
        dateFormats: _iuh2416,
        datePartsOrder: "dmy",
        dateIntervalFormats: _iuh2418,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _iuh2407,
        dayPeriods: _iuh2382,
        monthNames: {
            format: _iuh2402,
            standAlone: _iuh2402
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _iuh2392,
        fields: _iuh2423
    },
    islamic: _iuh2427,
    "islamic-umalqura": _iuh2427,
    "islamic-tbla": _iuh2427,
    "islamic-civil": _iuh2427,
    "islamic-rgsa": _iuh2427,
    iso8601: _iuh2424,
    japanese: {
        dateFormats: _iuh2416,
        datePartsOrder: "dmy",
        dateIntervalFormats: _iuh2418,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _iuh2407,
        dayPeriods: _iuh2382,
        monthNames: _iuh2409,
        eraNames: {
            wide: _iuh2426,
            abbreviated: _iuh2426
        },
        quarterNames: _iuh2392,
        fields: _iuh2423
    },
    persian: {
        dateFormats: _iuh2416,
        datePartsOrder: "dmy",
        dateIntervalFormats: _iuh2418,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _iuh2407,
        dayPeriods: _iuh2382,
        monthNames: {
            format: _iuh2398,
            standAlone: _iuh2398
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _iuh2392,
        fields: _iuh2423
    },
    roc: {
        dateFormats: _iuh2416,
        datePartsOrder: "dmy",
        dateIntervalFormats: _iuh2418,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _iuh2407,
        dayPeriods: _iuh2382,
        monthNames: _iuh2409,
        eraNames: {
            wide: _iuh27,
            abbreviated: _iuh27
        },
        quarterNames: _iuh2392,
        fields: _iuh2423
    },
    islamicc: _iuh2424
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1) return "one";
    if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10) return "few";
    if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19) return "many";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinalTypeBMasculine(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderSpelloutCardinalTypeBMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalTypeBMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalTypeBMasculine(Math.floor(n)) + " punt " + this.renderSpelloutCardinalTypeBMasculine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 11e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e16)) + " kvadriljun" + (n === 11e15 ? "" : this.renderAndTypeBMasculine(n % 1e16));
    if (n >= 2e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " kvadriljuni" + (n === 2e15 ? "" : this.renderAndTypeBMasculine(n % 1e15));
    if (n >= 1e15) return "kvadriljun" + (n === 1e15 ? "" : this.renderAndTypeBMasculine(n % 1e15));
    if (n >= 11e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e13)) + " triljun" + (n === 11e12 ? "" : this.renderAndTypeBMasculine(n % 1e13));
    if (n >= 2e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " triljuni" + (n === 2e12 ? "" : this.renderAndTypeBMasculine(n % 1e12));
    if (n >= 1e12) return "triljun" + (n === 1e12 ? "" : this.renderAndTypeBMasculine(n % 1e12));
    if (n >= 11e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e10)) + " biljun" + (n === 11e9 ? "" : this.renderAndTypeBMasculine(n % 1e10));
    if (n >= 2e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " biljuni" + (n === 2e9 ? "" : this.renderAndTypeBMasculine(n % 1e9));
    if (n >= 1e9) return "biljun" + (n === 1e9 ? "" : this.renderAndTypeBMasculine(n % 1e9));
    if (n >= 11e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e7)) + " miljun" + (n === 11e6 ? "" : this.renderAndTypeBMasculine(n % 1e7));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " miljuni" + (n === 2e6 ? "" : this.renderAndTypeBMasculine(n % 1e6));
    if (n >= 1e6) return "miljun" + (n === 1e6 ? "" : this.renderAndTypeBMasculine(n % 1e6));
    if (n >= 11e3) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e4)) + " elf" + (n === 11e3 ? "" : this.renderAndTypeBMasculine(n % 1e4));
    if (n >= 3e3) return this.renderThousands(Math.floor(n / 1e3)) + " elef" + (n === 3e3 ? "" : this.renderAndTypeBMasculine(n % 1e3));
    if (n >= 2e3) return "elfejn" + (n === 2e3 ? "" : this.renderAndTypeBMasculine(n % 1e3));
    if (n >= 1e3) return "elf" + (n === 1e3 ? "" : this.renderAndTypeBMasculine(n % 1e3));
    if (n >= 300) return this.renderSpelloutCardinalMasculine(Math.floor(n / 100)) + " mija" + (n === 300 ? "" : " u " + this.renderSpelloutCardinalTypeBMasculine(n % 100));
    if (n >= 200) return "mitejn" + (n === 200 ? "" : " u " + this.renderSpelloutCardinalTypeBMasculine(n % 100));
    if (n >= 100) return "mija" + (n === 100 ? "" : " u " + this.renderSpelloutCardinalTypeBMasculine(n % 100));
    if (n >= 90) return (n === 90 ? "" : this.renderSpelloutCardinalTypeBMasculine(n % 10) + " u ") + "disgħin";
    if (n >= 80) return (n === 80 ? "" : this.renderSpelloutCardinalTypeBMasculine(n % 10) + " u ") + "tmenin";
    if (n >= 70) return (n === 70 ? "" : this.renderSpelloutCardinalTypeBMasculine(n % 10) + " u ") + "sebgħin";
    if (n >= 60) return (n === 60 ? "" : this.renderSpelloutCardinalTypeBMasculine(n % 10) + " u ") + "sittin";
    if (n >= 50) return (n === 50 ? "" : this.renderSpelloutCardinalTypeBMasculine(n % 10) + " u ") + "ħamsin";
    if (n >= 40) return (n === 40 ? "" : this.renderSpelloutCardinalTypeBMasculine(n % 10) + " u ") + "erbgħin";
    if (n >= 30) return (n === 30 ? "" : this.renderSpelloutCardinalTypeBMasculine(n % 10) + " u ") + "tletin";
    if (n >= 20) return (n === 20 ? "" : this.renderSpelloutCardinalTypeBMasculine(n % 10) + " u ") + "għoxrin";
    if (n >= 19) return "dsatax";
    if (n >= 18) return "tmintax";
    if (n >= 17) return "sbatax";
    if (n >= 16) return "sittax";
    if (n >= 15) return "ħmistax";
    if (n >= 14) return "erbatax";
    if (n >= 13) return "tlettax";
    if (n >= 12) return "tnax";
    if (n >= 11) return "ħdax";
    if (n >= 10) return "għaxra";
    if (n >= 9) return "disgħa";
    if (n >= 8) return "tmienja";
    if (n >= 7) return "sebgħa";
    if (n >= 6) return "sitta";
    if (n >= 5) return "ħamsa";
    if (n >= 4) return "erbgħa";
    if (n >= 3) return "tlieta";
    if (n >= 2) return "tnejn";
    if (n >= 1) return "wieħed";
    if (n >= 0) return "żero";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderSpelloutCardinalMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculine(Math.floor(n)) + " punt " + this.renderSpelloutCardinalMasculine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 11e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e16)) + " kvadriljun" + (n === 11e15 ? "" : this.renderAndTypeAMasculine(n % 1e16));
    if (n >= 2e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " kvadriljuni" + (n === 2e15 ? "" : this.renderAndTypeAMasculine(n % 1e15));
    if (n >= 1e15) return "kvadriljun" + (n === 1e15 ? "" : this.renderAndTypeAMasculine(n % 1e15));
    if (n >= 11e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e13)) + " triljun" + (n === 11e12 ? "" : this.renderAndTypeAMasculine(n % 1e13));
    if (n >= 2e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " triljuni" + (n === 2e12 ? "" : this.renderAndTypeAMasculine(n % 1e12));
    if (n >= 1e12) return "triljun" + (n === 1e12 ? "" : this.renderAndTypeAMasculine(n % 1e12));
    if (n >= 11e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e10)) + " biljun" + (n === 11e9 ? "" : this.renderAndTypeAMasculine(n % 1e10));
    if (n >= 2e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " biljuni" + (n === 2e9 ? "" : this.renderAndTypeAMasculine(n % 1e9));
    if (n >= 1e9) return "biljun" + (n === 1e9 ? "" : this.renderAndTypeAMasculine(n % 1e9));
    if (n >= 11e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e7)) + " miljun" + (n === 11e6 ? "" : this.renderAndTypeAMasculine(n % 1e7));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " miljuni" + (n === 2e6 ? "" : this.renderAndTypeAMasculine(n % 1e6));
    if (n >= 1e6) return "miljun" + (n === 1e6 ? "" : this.renderAndTypeAMasculine(n % 1e6));
    if (n >= 11e3) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e4)) + " elf" + (n === 11e3 ? "" : this.renderAndTypeAMasculine(n % 1e4));
    if (n >= 3e3) return this.renderThousands(Math.floor(n / 1e3)) + " elef" + (n === 3e3 ? "" : this.renderAndTypeAMasculine(n % 1e3));
    if (n >= 2e3) return "elfejn" + (n === 2e3 ? "" : this.renderAndTypeAMasculine(n % 1e3));
    if (n >= 1e3) return "elf" + (n === 1e3 ? "" : this.renderAndTypeAMasculine(n % 1e3));
    if (n >= 300) return this.renderSpelloutCardinalMasculine(Math.floor(n / 100)) + " mija" + (n === 300 ? "" : this.renderAndTypeAMasculine(n % 100));
    if (n >= 200) return "mitejn" + (n === 200 ? "" : " u " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 101) return "mija u " + this.renderSpelloutCardinalMasculine(n % 100);
    if (n >= 100) return "mitt";
    if (n >= 90) return (n === 90 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + " u ") + "disgħin";
    if (n >= 80) return (n === 80 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + " u ") + "tmenin";
    if (n >= 70) return (n === 70 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + " u ") + "sebgħin";
    if (n >= 60) return (n === 60 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + " u ") + "sittin";
    if (n >= 50) return (n === 50 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + " u ") + "ħamsin";
    if (n >= 40) return (n === 40 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + " u ") + "erbgħin";
    if (n >= 30) return (n === 30 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + " u ") + "tletin";
    if (n >= 20) return (n === 20 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + " u ") + "għoxrin";
    if (n >= 19) return "dsatax-il";
    if (n >= 18) return "tmintax-il";
    if (n >= 17) return "sbatax-il";
    if (n >= 16) return "sittax-il";
    if (n >= 15) return "ħmistax-il";
    if (n >= 14) return "erbatax-il";
    if (n >= 13) return "tlettax-il";
    if (n >= 12) return "tnax-il";
    if (n >= 11) return "ħdax-il";
    if (n >= 10) return "għaxar";
    if (n >= 9) return "disaʼ";
    if (n >= 8) return "tmien";
    if (n >= 7) return "sebaʼ";
    if (n >= 6) return "sitt";
    if (n >= 5) return "ħames";
    if (n >= 4) return "erbaʼ";
    if (n >= 3) return "tliet";
    if (n >= 2) return "żewġ";
    if (n >= 1) return "wieħed";
    if (n >= 0) return "żero";
};

inter.renderAndTypeBMasculine = function(n) {
    if (n >= 1) return " u " + this.renderSpelloutCardinalTypeBMasculine(n);
    if (n >= 0) return "";
};

inter.renderThousands = function(n) {
    if (n >= 10) return "għaxart";
    if (n >= 9) return "disat";
    if (n >= 8) return "tmint";
    if (n >= 7) return "sebat";
    if (n >= 6) return "sitt";
    if (n >= 5) return "ħamest";
    if (n >= 4) return "erbat";
    if (n >= 3) return "tlitt";
    if (n >= 0) return "ERROR-" + this.renderNumber(n, "0");
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.renderAndTypeAMasculine = function(n) {
    if (n >= 1) return " u " + this.renderSpelloutCardinalMasculine(n);
    if (n >= 0) return "";
};

inter.timeZones = [].concat(P.timeZones.slice(0, 178), {
    id: "Europe/London",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Londra",
    countryId: "GB"
}, P.timeZones.slice(179, 213), P.timeZones.slice(214, 230), {
    id: "Europe/Malta",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Valletta",
    countryId: "MT"
}, P.timeZones.slice(230, 419));

inter.territories = [ _iuh2286, _iuh2336, _iuh2348, _iuh2352, _iuh2337, _iuh2338, _iuh2239, _iuh2278, _iuh2181, _iuh2182, _iuh2287, _iuh2339, _iuh2340, _iuh2345, _iuh2139, _iuh2109, _iuh2183, _iuh249, _iuh2314, _iuh2140, _iuh286, _iuh2212, _iuh2263, _iuh2328, _iuh2341, _iuh2329, _iuh2355, _iuh2321, _iuh2213, _iuh2359, _iuh2184, _iuh2240, _iuh2241, _iuh2185, _iuh2141, _iuh2142, _iuh2110, _iuh2111, _iuh287, _iuh2143, _iuh2253, _iuh2144, _iuh2186, _iuh262, _iuh2315, _iuh2288, _iuh2330, _iuh2112, _iuh2214, _iuh2264, _iuh2145, _iuh288, _iuh267, _iuh2187, _iuh2265, _iuh2215, _iuh2360, _iuh245, _iuh2188, _iuh2146, _iuh2254, _iuh2342, _iuh2147, _iuh2148, _iuh2189, _iuh2279, _iuh2346, _iuh2349, _iuh2331, _iuh2332, _iuh2113, _iuh2299, _iuh2216, _iuh2217, _iuh273, _iuh2114, _iuh289, _iuh2115, _iuh274, _iuh2218, _iuh290, _iuh2302, _iuh2266, _iuh2149, _iuh2116, _iuh2242, _iuh2117, _iuh2289, _iuh2219, _iuh275, _iuh2220, _iuh2300, _iuh2272, _iuh2273, _iuh2290, _iuh2343, _iuh2319, _iuh2316, _iuh2221, _iuh2222, _iuh2255, _iuh2223, _iuh2224, _iuh276, _iuh277, _iuh2150, _iuh2151, _iuh2256, _iuh2152, _iuh2118, _iuh291, _iuh2190, _iuh2153, _iuh2119, _iuh2243, _iuh2291, _iuh2225, _iuh292, _iuh2226, _iuh2191, _iuh2192, _iuh2154, _iuh293, _iuh2280, _iuh2281, _iuh2155, _iuh2244, _iuh2310, _iuh2156, _iuh278, _iuh2120, _iuh2157, _iuh2267, _iuh2282, _iuh2193, _iuh279, _iuh2121, _iuh2122, _iuh2123, _iuh2158, _iuh294, _iuh2274, _iuh2194, _iuh2257, _iuh2317, _iuh2245, _iuh2159, _iuh2160, _iuh2124, _iuh2195, _iuh280, _iuh295, _iuh2125, _iuh2196, _iuh2246, _iuh2197, _iuh2227, _iuh2303, _iuh2161, _iuh2247, _iuh2162, _iuh2163, _iuh2126, _iuh2198, _iuh2248, _iuh2199, _iuh2164, _iuh296, _iuh297, _iuh2275, _iuh2258, _iuh2228, _iuh281, _iuh298, _iuh2165, _iuh2283, _iuh2200, _iuh2127, _iuh282, _iuh2301, _iuh2201, _iuh299, _iuh2128, _iuh2304, _iuh2202, _iuh283, _iuh2203, _iuh2305, _iuh2311, _iuh2166, _iuh2229, _iuh2259, _iuh2100, _iuh2354, _iuh2292, _iuh2322, _iuh2356, _iuh2204, _iuh2129, _iuh2167, _iuh2306, _iuh2268, _iuh2323, _iuh2350, _iuh2361, _iuh2101, _iuh2293, _iuh2249, _iuh2269, _iuh2324, _iuh2168, _iuh2250, _iuh2270, _iuh2205, _iuh2102, _iuh2230, _iuh2206, _iuh2294, _iuh2169, _iuh2357, _iuh2130, _iuh2231, _iuh2103, _iuh2170, _iuh2333, _iuh2207, _iuh2232, _iuh2233, _iuh2131, _iuh2234, _iuh2251, _iuh2312, _iuh2334, _iuh2295, _iuh284, _iuh2171, _iuh2104, _iuh2307, _iuh2105, _iuh2172, _iuh2271, _iuh2347, _iuh2132, _iuh2318, _iuh2133, _iuh2173, _iuh2208, _iuh2325, _iuh2174, _iuh2252, _iuh2175, _iuh2176, _iuh2235, _iuh2177, _iuh2308, _iuh269, _iuh285, _iuh2106, _iuh2178, _iuh2179, _iuh2134, _iuh2135, _iuh2107, _iuh2209, _iuh2326, _iuh2136, _iuh2210, _iuh2137 ];

inter.regions = [ _iuh2286, _iuh2336, _iuh2348, _iuh2352, _iuh2337, _iuh2338, _iuh2287, _iuh2339, _iuh2340, _iuh2345, _iuh2263, _iuh2328, _iuh2341, _iuh2329, _iuh2355, _iuh2321, _iuh2359, _iuh245, _iuh2279, _iuh2346, _iuh2349, _iuh2331, _iuh2332, _iuh2291, _iuh2303, _iuh2301, _iuh2305, _iuh2356 ];

inter.countries = [ _iuh2239, _iuh2278, _iuh2181, _iuh2182, _iuh2139, _iuh2109, _iuh2183, _iuh249, _iuh2314, _iuh2140, _iuh286, _iuh2212, _iuh2213, _iuh2184, _iuh2240, _iuh2241, _iuh2185, _iuh2141, _iuh2142, _iuh2110, _iuh2111, _iuh287, _iuh2143, _iuh2253, _iuh2144, _iuh2186, _iuh262, _iuh2315, _iuh2288, _iuh2330, _iuh2112, _iuh2214, _iuh2264, _iuh2145, _iuh288, _iuh267, _iuh2187, _iuh2265, _iuh2215, _iuh2360, _iuh2188, _iuh2146, _iuh2254, _iuh2342, _iuh2147, _iuh2148, _iuh2189, _iuh2113, _iuh2299, _iuh2216, _iuh2217, _iuh273, _iuh2114, _iuh289, _iuh2115, _iuh274, _iuh2218, _iuh290, _iuh2302, _iuh2266, _iuh2149, _iuh2116, _iuh2242, _iuh2117, _iuh2289, _iuh2219, _iuh275, _iuh2220, _iuh2300, _iuh2272, _iuh2273, _iuh2290, _iuh2343, _iuh2319, _iuh2316, _iuh2221, _iuh2222, _iuh2255, _iuh2223, _iuh2224, _iuh276, _iuh277, _iuh2150, _iuh2151, _iuh2256, _iuh2152, _iuh2118, _iuh291, _iuh2190, _iuh2153, _iuh2119, _iuh2243, _iuh2225, _iuh292, _iuh2226, _iuh2191, _iuh2192, _iuh2154, _iuh293, _iuh2280, _iuh2281, _iuh2155, _iuh2244, _iuh2310, _iuh2156, _iuh278, _iuh2120, _iuh2157, _iuh2267, _iuh2282, _iuh2193, _iuh279, _iuh2121, _iuh2122, _iuh2123, _iuh2158, _iuh294, _iuh2274, _iuh2194, _iuh2257, _iuh2317, _iuh2245, _iuh2159, _iuh2160, _iuh2124, _iuh2195, _iuh280, _iuh295, _iuh2125, _iuh2196, _iuh2246, _iuh2197, _iuh2227, _iuh2161, _iuh2247, _iuh2162, _iuh2163, _iuh2126, _iuh2198, _iuh2248, _iuh2199, _iuh2164, _iuh296, _iuh297, _iuh2275, _iuh2258, _iuh2228, _iuh281, _iuh298, _iuh2165, _iuh2283, _iuh2200, _iuh2127, _iuh282, _iuh2201, _iuh299, _iuh2128, _iuh2304, _iuh2202, _iuh283, _iuh2203, _iuh2311, _iuh2166, _iuh2229, _iuh2259, _iuh2100, _iuh2354, _iuh2292, _iuh2322, _iuh2204, _iuh2129, _iuh2167, _iuh2306, _iuh2268, _iuh2323, _iuh2350, _iuh2361, _iuh2101, _iuh2293, _iuh2249, _iuh2269, _iuh2324, _iuh2168, _iuh2250, _iuh2270, _iuh2205, _iuh2102, _iuh2230, _iuh2206, _iuh2294, _iuh2169, _iuh2357, _iuh2130, _iuh2231, _iuh2103, _iuh2170, _iuh2333, _iuh2207, _iuh2232, _iuh2233, _iuh2131, _iuh2234, _iuh2251, _iuh2312, _iuh2334, _iuh2295, _iuh284, _iuh2171, _iuh2104, _iuh2307, _iuh2105, _iuh2172, _iuh2271, _iuh2347, _iuh2132, _iuh2318, _iuh2133, _iuh2173, _iuh2208, _iuh2325, _iuh2174, _iuh2252, _iuh2175, _iuh2176, _iuh2235, _iuh2177, _iuh2308, _iuh269, _iuh285, _iuh2106, _iuh2178, _iuh2179, _iuh2134, _iuh2135, _iuh2107, _iuh2209, _iuh2326, _iuh2136, _iuh2210, _iuh2137 ];

inter.languages = [ {
    id: "ab",
    displayName: "Abkażjan"
}, {
    id: "ada",
    displayName: "Adangme"
}, {
    id: "ady",
    displayName: "Adyghe"
}, {
    id: "aa",
    displayName: "Afar"
}, {
    id: "af",
    displayName: "Afrikans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "afh",
    displayName: "Afriħili"
}, {
    id: "ay",
    displayName: "Ajmara"
}, {
    id: "ain",
    displayName: "Ajnu"
}, {
    id: "ak",
    displayName: "Akan",
    nativeDisplayName: "Akan"
}, {
    id: "akk",
    displayName: "Akkadjen"
}, {
    id: "ach",
    displayName: "Akoli"
}, {
    id: "ale",
    displayName: "Aleut"
}, {
    id: "en_us",
    displayName: "Ingliż Amerikan",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "Inari Sami",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "anp",
    displayName: "Angika"
}, {
    id: "an",
    displayName: "Aragonese"
}, {
    id: "arc",
    displayName: "Aramajk"
}, {
    id: "arp",
    displayName: "Arapaħo"
}, {
    id: "arw",
    displayName: "Arawak"
}, {
    id: "arn",
    displayName: "Arawkanjan"
}, {
    id: "rup",
    displayName: "Aromanijan"
}, {
    id: "ast",
    displayName: "Asturian",
    nativeDisplayName: "asturianu"
}, {
    id: "cch",
    displayName: "Atsam"
}, {
    id: "en_au",
    displayName: "Ingliż Awstraljan",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "Avarik"
}, {
    id: "ae",
    displayName: "Avestan"
}, {
    id: "awa",
    displayName: "Awadħi"
}, {
    id: "az",
    displayName: "Ażerbajġani",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ace",
    displayName: "Aċiniż"
}, {
    id: "ms",
    displayName: "Malajan",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "ban",
    displayName: "Baliniż"
}, {
    id: "bal",
    displayName: "Baluċi"
}, {
    id: "bm",
    displayName: "Bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "ba",
    displayName: "Baxkir"
}, {
    id: "bej",
    displayName: "Beja"
}, {
    id: "bik",
    displayName: "Bikol"
}, {
    id: "bin",
    displayName: "Bini"
}, {
    id: "bi",
    displayName: "Bislama"
}, {
    id: "zxx",
    displayName: "Bla kontent lingwistiku"
}, {
    id: "byn",
    displayName: "Blin"
}, {
    id: "bho",
    displayName: "Bojpuri"
}, {
    id: "bs",
    displayName: "Bosnijan",
    nativeDisplayName: "bosanski"
}, {
    id: "bra",
    displayName: "Braj"
}, {
    id: "br",
    displayName: "Brenton",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "Ingliż Brittaniku",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "Buginiż"
}, {
    id: "bua",
    displayName: "Burjat"
}, {
    id: "ca",
    displayName: "Katalan",
    nativeDisplayName: "català"
}, {
    id: "sn",
    displayName: "Xona",
    nativeDisplayName: "chiShona"
}, {
    id: "nwc",
    displayName: "Classical Newari"
}, {
    id: "crh",
    displayName: "Crimean Turkish; Crimean Tatar"
}, {
    id: "cy",
    displayName: "Welx",
    nativeDisplayName: "Cymraeg"
}, {
    id: "dak",
    displayName: "Dakota"
}, {
    id: "da",
    displayName: "Daniż",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "Dargwa"
}, {
    id: "se",
    displayName: "Sami ta’ Fuq",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "del",
    displayName: "Delawerjan"
}, {
    id: "de",
    displayName: "Ġermaniż",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "Luwa",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "Dinka"
}, {
    id: "dv",
    displayName: "Diveħi"
}, {
    id: "dyu",
    displayName: "Djula"
}, {
    id: "doi",
    displayName: "Dogri"
}, {
    id: "dgr",
    displayName: "Dogrib"
}, {
    id: "dsb",
    displayName: "Lower Sorbian",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "Dwala",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "Estonjan",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "Efik"
}, {
    id: "eka",
    displayName: "Ekajuk"
}, {
    id: "elx",
    displayName: "Elamit"
}, {
    id: "en",
    displayName: "Ingliż",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "Erzya"
}, {
    id: "es",
    displayName: "Spanjol",
    nativeDisplayName: "español"
}, {
    id: "eo",
    displayName: "Esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "Bask",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "Ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "egy",
    displayName: "Eġizzjan (Antik)"
}, {
    id: "ee",
    displayName: "Ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "Fang"
}, {
    id: "fat",
    displayName: "Fanti"
}, {
    id: "phn",
    displayName: "Feniċju"
}, {
    id: "fil",
    displayName: "Filippino",
    nativeDisplayName: "Filipino"
}, {
    id: "fj",
    displayName: "Fiġi"
}, {
    id: "fon",
    displayName: "Fon"
}, {
    id: "fr",
    displayName: "Franċiż",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "Franċiż Kanadiż",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "Franċiż Żvizzeru",
    nativeDisplayName: "français suisse"
}, {
    id: "fro",
    displayName: "Franċiż, Antik"
}, {
    id: "frm",
    displayName: "Franċiż, Medjevali"
}, {
    id: "fur",
    displayName: "Frijuljan",
    nativeDisplayName: "furlan"
}, {
    id: "fo",
    displayName: "Fawriż",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "Ga"
}, {
    id: "ga",
    displayName: "Irlandiż",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "Manks",
    nativeDisplayName: "Gaelg"
}, {
    id: "gay",
    displayName: "Gajo"
}, {
    id: "gl",
    displayName: "Gallegjan",
    nativeDisplayName: "galego"
}, {
    id: "gba",
    displayName: "Gbaja"
}, {
    id: "gez",
    displayName: "Geez"
}, {
    id: "ki",
    displayName: "Kikuju",
    nativeDisplayName: "Gikuyu"
}, {
    id: "gil",
    displayName: "Gilbertjan"
}, {
    id: "gon",
    displayName: "Gondi"
}, {
    id: "gor",
    displayName: "Gorontalo"
}, {
    id: "got",
    displayName: "Gotiku"
}, {
    id: "grc",
    displayName: "Grieg, Antik"
}, {
    id: "gn",
    displayName: "Gwarani"
}, {
    id: "gwi",
    displayName: "Gwiċin"
}, {
    id: "gd",
    displayName: "Galliku Skoċċiż",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "root",
    displayName: "Għerq"
}, {
    id: "ht",
    displayName: "Haitian"
}, {
    id: "ha",
    displayName: "Ħawsa",
    nativeDisplayName: "Hausa"
}, {
    id: "hil",
    displayName: "Hiligaynon"
}, {
    id: "hsb",
    displayName: "Upper Sorbian",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "Kroat",
    nativeDisplayName: "hrvatski"
}, {
    id: "iba",
    displayName: "Iban"
}, {
    id: "bem",
    displayName: "Bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "io",
    displayName: "Ido"
}, {
    id: "ig",
    displayName: "Igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "Rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "Iloko"
}, {
    id: "id",
    displayName: "Indoneżjan",
    nativeDisplayName: "Indonesia"
}, {
    id: "ang",
    displayName: "Ingliż, Antik"
}, {
    id: "enm",
    displayName: "Ingliż, Medjevali"
}, {
    id: "inh",
    displayName: "Ingush"
}, {
    id: "ia",
    displayName: "Interlingua"
}, {
    id: "ie",
    displayName: "Interlingue"
}, {
    id: "iu",
    displayName: "Inukitut"
}, {
    id: "ik",
    displayName: "Inupjak"
}, {
    id: "sga",
    displayName: "Irlandiż, Antik"
}, {
    id: "mga",
    displayName: "Irlandiż, Medjevali"
}, {
    id: "nd",
    displayName: "Ndebele, ta’ Fuq",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "Żulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "Taljan",
    nativeDisplayName: "italiano"
}, {
    id: "yao",
    displayName: "Jao"
}, {
    id: "yap",
    displayName: "Japese"
}, {
    id: "kbd",
    displayName: "Kabardian"
}, {
    id: "cad",
    displayName: "Kaddo"
}, {
    id: "kl",
    displayName: "Kalallisut",
    nativeDisplayName: "kalaallisut"
}, {
    id: "xal",
    displayName: "Kalmyk"
}, {
    id: "kr",
    displayName: "Kanuri"
}, {
    id: "kaa",
    displayName: "Kara-Kalpak"
}, {
    id: "krc",
    displayName: "Karachay-Balkar"
}, {
    id: "car",
    displayName: "Karib"
}, {
    id: "csb",
    displayName: "Kashubian"
}, {
    id: "kha",
    displayName: "Kasi"
}, {
    id: "kaw",
    displayName: "Kawi"
}, {
    id: "kac",
    displayName: "Kaċin"
}, {
    id: "kw",
    displayName: "Korniku",
    nativeDisplayName: "kernewek"
}, {
    id: "kam",
    displayName: "Kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "kmb",
    displayName: "Kimbundu"
}, {
    id: "rw",
    displayName: "Kinjarwanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "sw",
    displayName: "Swaħili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "tlh",
    displayName: "Klingon"
}, {
    id: "kv",
    displayName: "Komi"
}, {
    id: "kg",
    displayName: "Kongo"
}, {
    id: "cop",
    displayName: "Koptiku"
}, {
    id: "co",
    displayName: "Korsiku"
}, {
    id: "kos",
    displayName: "Kosrejan"
}, {
    id: "kho",
    displayName: "Kotaniż"
}, {
    id: "kpe",
    displayName: "Kpelle"
}, {
    id: "mus",
    displayName: "Kriek"
}, {
    id: "cr",
    displayName: "Krij"
}, {
    id: "kj",
    displayName: "Kuanyama"
}, {
    id: "kum",
    displayName: "Kumiku"
}, {
    id: "ku",
    displayName: "Kurdiż"
}, {
    id: "kru",
    displayName: "Kurusk"
}, {
    id: "kut",
    displayName: "Kutenaj"
}, {
    id: "lad",
    displayName: "Ladino"
}, {
    id: "lam",
    displayName: "Lamba"
}, {
    id: "lah",
    displayName: "Landa"
}, {
    id: "la",
    displayName: "Latin"
}, {
    id: "lv",
    displayName: "Latvjan",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "Tongan",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lez",
    displayName: "Leżgjan"
}, {
    id: "jrb",
    displayName: "Lhudi-Għarbi"
}, {
    id: "jpr",
    displayName: "Lhudi-Persjan"
}, {
    id: "lt",
    displayName: "Litwanjan",
    nativeDisplayName: "lietuvių"
}, {
    id: "li",
    displayName: "Limburgish"
}, {
    id: "und",
    displayName: "Lingwa Mhux Magħrufa"
}, {
    id: "mul",
    displayName: "Lingwi Diversi"
}, {
    id: "ln",
    displayName: "Lingaljan",
    nativeDisplayName: "lingála"
}, {
    id: "jbo",
    displayName: "Lojban"
}, {
    id: "loz",
    displayName: "Lożi"
}, {
    id: "lua",
    displayName: "Luba-Luluwa"
}, {
    id: "lg",
    displayName: "Ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "smj",
    displayName: "Lule Sami"
}, {
    id: "lun",
    displayName: "Lunda"
}, {
    id: "lui",
    displayName: "Luwisinuż"
}, {
    id: "lus",
    displayName: "Luxaj"
}, {
    id: "lb",
    displayName: "Letżburgiż",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "Masaj",
    nativeDisplayName: "Maa"
}, {
    id: "mad",
    displayName: "Maduriż"
}, {
    id: "mag",
    displayName: "Magaħi"
}, {
    id: "hu",
    displayName: "Ungeriż",
    nativeDisplayName: "magyar"
}, {
    id: "mai",
    displayName: "Majtili"
}, {
    id: "mak",
    displayName: "Makasar"
}, {
    id: "mg",
    displayName: "Malagażi",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "Malti",
    nativeDisplayName: "Malti"
}, {
    id: "mdr",
    displayName: "Mandar"
}, {
    id: "man",
    displayName: "Mandingwan"
}, {
    id: "mni",
    displayName: "Manipuri"
}, {
    id: "mnc",
    displayName: "Manċurjan"
}, {
    id: "mi",
    displayName: "Maori"
}, {
    id: "chm",
    displayName: "Mari"
}, {
    id: "mwr",
    displayName: "Marwari"
}, {
    id: "mh",
    displayName: "Marxall"
}, {
    id: "men",
    displayName: "Mende"
}, {
    id: "mic",
    displayName: "Mikmek"
}, {
    id: "min",
    displayName: "Minangkabaw"
}, {
    id: "mwl",
    displayName: "Mirandiż"
}, {
    id: "mdf",
    displayName: "Moksha"
}, {
    id: "ro_md",
    displayName: "Moldavjan",
    nativeDisplayName: "moldovenească"
}, {
    id: "lol",
    displayName: "Mongo"
}, {
    id: "mos",
    displayName: "Mossi"
}, {
    id: "moh",
    displayName: "Moħak"
}, {
    id: "nv",
    displayName: "Navaħo"
}, {
    id: "na",
    displayName: "Nawuru"
}, {
    id: "nr",
    displayName: "Ndebele, t’Isfel"
}, {
    id: "ng",
    displayName: "Ndonga"
}, {
    id: "nap",
    displayName: "Neapolitan"
}, {
    id: "nl",
    displayName: "Olandiż",
    nativeDisplayName: "Nederlands"
}, {
    id: "new",
    displayName: "Newari"
}, {
    id: "nia",
    displayName: "Nijas"
}, {
    id: "niu",
    displayName: "Nijuwejan"
}, {
    id: "nym",
    displayName: "Njamweżi"
}, {
    id: "nyo",
    displayName: "Njoro"
}, {
    id: "nog",
    displayName: "Nogai"
}, {
    id: "nb",
    displayName: "Bokmahal Norveġiż",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "Norveġiż"
}, {
    id: "nn",
    displayName: "Ninorsk Norveġiż",
    nativeDisplayName: "nynorsk"
}, {
    id: "nzi",
    displayName: "Nżima"
}, {
    id: "dum",
    displayName: "Olandiż, Medjevali"
}, {
    id: "om",
    displayName: "Oromo (Afan)",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "Osaġjan"
}, {
    id: "oc",
    displayName: "Oċċitan"
}, {
    id: "oj",
    displayName: "Oġibwa"
}, {
    id: "uz",
    displayName: "Użbek",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pau",
    displayName: "Palawjan"
}, {
    id: "pi",
    displayName: "Pali"
}, {
    id: "pam",
    displayName: "Pampamga"
}, {
    id: "pag",
    displayName: "Pangasinjan"
}, {
    id: "pap",
    displayName: "Papjamento"
}, {
    id: "pal",
    displayName: "Paħlavi"
}, {
    id: "peo",
    displayName: "Persjan Antik"
}, {
    id: "pl",
    displayName: "Pollakk",
    nativeDisplayName: "polski"
}, {
    id: "pon",
    displayName: "Ponpejan"
}, {
    id: "pt",
    displayName: "Portugiż",
    nativeDisplayName: "português"
}, {
    id: "pro",
    displayName: "Provenzal, Antik"
}, {
    id: "ff",
    displayName: "Fulaħ",
    nativeDisplayName: "Pulaar"
}, {
    id: "rap",
    displayName: "Rapanwi"
}, {
    id: "rar",
    displayName: "Rarotongani"
}, {
    id: "raj",
    displayName: "Raġastani"
}, {
    id: "ro",
    displayName: "Rumen",
    nativeDisplayName: "română"
}, {
    id: "rm",
    displayName: "Reto-Romanz",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "Keċwa",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "Nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "sm",
    displayName: "Samojan"
}, {
    id: "sam",
    displayName: "Samritan"
}, {
    id: "sad",
    displayName: "Sandawe"
}, {
    id: "sa",
    displayName: "Sanskrit"
}, {
    id: "sat",
    displayName: "Santali"
}, {
    id: "sc",
    displayName: "Sardinjan"
}, {
    id: "sas",
    displayName: "Saska"
}, {
    id: "sel",
    displayName: "Selkup"
}, {
    id: "sh",
    displayName: "Serbo-Kroat"
}, {
    id: "srr",
    displayName: "Serer"
}, {
    id: "sq",
    displayName: "Albaniż",
    nativeDisplayName: "shqip"
}, {
    id: "ceb",
    displayName: "Sibwano"
}, {
    id: "sid",
    displayName: "Sidamo"
}, {
    id: "bla",
    displayName: "Siksika"
}, {
    id: "sd",
    displayName: "Sindi"
}, {
    id: "syr",
    displayName: "Sirjan"
}, {
    id: "non",
    displayName: "Skandinav, Antik"
}, {
    id: "sms",
    displayName: "Skolt Sami"
}, {
    id: "sco",
    displayName: "Skoċċiż"
}, {
    id: "den",
    displayName: "Slav"
}, {
    id: "sk",
    displayName: "Slovakk",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "Sloven",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "Sogdien"
}, {
    id: "snk",
    displayName: "Soninke"
}, {
    id: "so",
    displayName: "Somali",
    nativeDisplayName: "Soomaali"
}, {
    id: "nso",
    displayName: "Soto, ta’ Fuq"
}, {
    id: "st",
    displayName: "Soto, t’Isfel"
}, {
    id: "sma",
    displayName: "Southern Sami"
}, {
    id: "suk",
    displayName: "Sukuma"
}, {
    id: "sux",
    displayName: "Sumerjan"
}, {
    id: "su",
    displayName: "Sundaniż"
}, {
    id: "fi",
    displayName: "Finlandiż",
    nativeDisplayName: "suomi"
}, {
    id: "sus",
    displayName: "Susu"
}, {
    id: "sv",
    displayName: "Svediż",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "Swati"
}, {
    id: "sg",
    displayName: "Sango",
    nativeDisplayName: "Sängö"
}, {
    id: "tl",
    displayName: "Tagalog"
}, {
    id: "tmh",
    displayName: "Tamaxek"
}, {
    id: "kab",
    displayName: "Kabuljan",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "tt",
    displayName: "Tatar"
}, {
    id: "tg",
    displayName: "Taġik"
}, {
    id: "ty",
    displayName: "Taħitjan"
}, {
    id: "ter",
    displayName: "Tereno"
}, {
    id: "tet",
    displayName: "Tetum"
}, {
    id: "tig",
    displayName: "Tigre"
}, {
    id: "tem",
    displayName: "Timne"
}, {
    id: "tiv",
    displayName: "Tiv"
}, {
    id: "vi",
    displayName: "Vjetnamiż",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tli",
    displayName: "Tlingit"
}, {
    id: "tpi",
    displayName: "Tok Pisin"
}, {
    id: "tkl",
    displayName: "Tokelau"
}, {
    id: "tog",
    displayName: "Tonga (Njasa)"
}, {
    id: "ota",
    displayName: "Tork (Imperu Ottoman)"
}, {
    id: "lu",
    displayName: "Luba-Katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "ts",
    displayName: "Tsonga"
}, {
    id: "tum",
    displayName: "Tumbuka"
}, {
    id: "tvl",
    displayName: "Tuvalu"
}, {
    id: "tyv",
    displayName: "Tuvinjan"
}, {
    id: "tw",
    displayName: "Twi"
}, {
    id: "tk",
    displayName: "Turkmeni",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "Tork",
    nativeDisplayName: "Türkçe"
}, {
    id: "udm",
    displayName: "Udmurt"
}, {
    id: "uga",
    displayName: "Ugaritiku"
}, {
    id: "umb",
    displayName: "Umbundu"
}, {
    id: "ve",
    displayName: "Venda"
}, {
    id: "vo",
    displayName: "Volapuk",
    nativeDisplayName: "Volapük"
}, {
    id: "vot",
    displayName: "Votik"
}, {
    id: "wal",
    displayName: "Walamo"
}, {
    id: "wa",
    displayName: "Walloon"
}, {
    id: "war",
    displayName: "Waraj"
}, {
    id: "was",
    displayName: "Waxo"
}, {
    id: "fy",
    displayName: "Friżjan",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "Wolof"
}, {
    id: "chy",
    displayName: "Xajenn"
}, {
    id: "shn",
    displayName: "Xan"
}, {
    id: "tsi",
    displayName: "Zimxjan"
}, {
    id: "tn",
    displayName: "Zwana"
}, {
    id: "yo",
    displayName: "Joruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "Iżlandiż",
    nativeDisplayName: "íslenska"
}, {
    id: "chg",
    displayName: "Ċagataj"
}, {
    id: "ch",
    displayName: "Ċamorro"
}, {
    id: "chb",
    displayName: "Ċibċa"
}, {
    id: "chp",
    displayName: "Ċipewjan"
}, {
    id: "ny",
    displayName: "Ċiċewa; Njanġa"
}, {
    id: "cho",
    displayName: "Ċostaw"
}, {
    id: "chk",
    displayName: "Ċukese"
}, {
    id: "cv",
    displayName: "Ċuvax"
}, {
    id: "cs",
    displayName: "Ċek",
    nativeDisplayName: "čeština"
}, {
    id: "chn",
    displayName: "Ġargon taċ-Ċinuk"
}, {
    id: "jv",
    displayName: "Ġavaniż"
}, {
    id: "grb",
    displayName: "Ġerbo"
}, {
    id: "goh",
    displayName: "Ġermaniku, Antik Pulit"
}, {
    id: "gmh",
    displayName: "Ġermaniku, Medjevali Pulit"
}, {
    id: "nds",
    displayName: "Ġermaniż Komuni; Sassonu Komuni"
}, {
    id: "hai",
    displayName: "Ħajda"
}, {
    id: "hz",
    displayName: "Ħerero"
}, {
    id: "ho",
    displayName: "Ħiri Motu"
}, {
    id: "hit",
    displayName: "Ħittit"
}, {
    id: "hmn",
    displayName: "Ħmong"
}, {
    id: "xh",
    displayName: "Ħoża"
}, {
    id: "hup",
    displayName: "Ħupa"
}, {
    id: "zap",
    displayName: "Żapotek"
}, {
    id: "zen",
    displayName: "Żenaga"
}, {
    id: "rom",
    displayName: "Żingaru"
}, {
    id: "zun",
    displayName: "Żuni"
}, {
    id: "za",
    displayName: "Żwang"
}, {
    id: "bas",
    displayName: "Basa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "Ħawajjan",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "Grieg",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "Belarussu",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "Bulgaru",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "Ossettiku",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "Kirgiż",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "Maċedonjan",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "Mongoljan",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "Ċeċen",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "Russu",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "Jakut",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "Serb",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "Ukranjan",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "Slaviku tal-Knisja",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "Każak",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "Armenjan",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "Jiddix",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "Ebrajk",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "Wigur",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "Urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "Għarbi",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "Għarbi Standard Modern",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "Persjan",
    nativeDisplayName: "فارسی"
}, {
    id: "ps",
    displayName: "Paxtun",
    nativeDisplayName: "پښتو"
}, {
    id: "ks",
    displayName: "Kaxmiri",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "Konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "Nepaliż",
    nativeDisplayName: "नेपाली"
}, {
    id: "mr",
    displayName: "Marati",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "Ħindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "Assamese",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "Bengali",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "Punġabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "Guġarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "Orija",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "Tamil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "Telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "Kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "Malajalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "Sinħaliż",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "Tajlandiż",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "Lao",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "Tibetjan",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "Dżongka",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "Burmiż",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "Ġorġjan",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "Tigrinja",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "Amħariku",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "Kmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zh",
    displayName: "Ċiniż",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "Ġappuniż",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "Ċiniż Simplifikat",
    nativeDisplayName: "简体中文"
}, {
    id: "ii",
    displayName: "Sichuan Yi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "Vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "Ċerokij",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "Korejan",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Brai",
    displayName: "Braille"
}, {
    id: "Grek",
    displayName: "Grieg"
}, {
    id: "Arab",
    displayName: "Għarbi"
}, {
    id: "Zzzz",
    displayName: "Kitba Mhux Magħrufa"
}, {
    id: "Zyyy",
    displayName: "Komuni"
}, {
    id: "Latn",
    displayName: "Latin"
}, {
    id: "Zxxx",
    displayName: "Mhux Miktub"
}, {
    id: "Xpeo",
    displayName: "Persjan Antik"
}, {
    id: "Hans",
    displayName: "Simplifikat"
}, {
    id: "Hant",
    displayName: "Tradizzjonali"
}, {
    id: "Cyrl",
    displayName: "Ċirilliku"
} ];

inter.currencies = [ {
    id: "MTL",
    displayName: "Lira Maltija"
}, {
    id: "XXX",
    displayName: "Munita Mhux Magħrufa jew Mhux Valida",
    one: "Munita Mhux Magħruf jew Mhux Validu",
    few: "Munita Mhux Magħruf jew Mhux Validu",
    many: "Munita Mhux Magħruf jew Mhux Validu",
    other: "Munita Mhux Magħruf jew Mhux Validu"
}, {
    id: "EUR",
    displayName: "ewro",
    symbol: "€",
    one: "ewro",
    few: "ewro",
    many: "ewro",
    other: "ewro"
} ];

module.exports = inter;