function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./sr_cyrl.js"), inter = defaults({
    renderers: {}
}, P);

var _49xv1 = [ "К1", "К2", "К3", "К4" ], _49xv2 = [ "1.", "2.", "3.", "4." ], _49xv3 = {
    all: {
        leap: "{0}bis"
    }
}, _49xv4 = {
    a: "h a – h a",
    h: "h–h a"
}, _49xv5 = {
    displayName: "дан у недељи"
}, _49xv6 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _49xv7 = [ "н", "п", "у", "с", "ч", "п", "с" ], _49xv8 = {
    displayName: "временска зона"
}, _49xv9 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _49xv10 = {
    wide: [ "АХ" ],
    abbreviated: [ "АХ" ]
}, _49xv11 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _49xv12 = {
    H: "HH.mm–HH.mm",
    m: "HH.mm–HH.mm"
}, _49xv13 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _49xv14 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _49xv15 = {
    displayName: "пре подне/по подне"
}, _49xv16 = [ "не", "по", "ут", "ср", "че", "пе", "су" ], _49xv17 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _49xv18 = {
    H: "HH.mm–HH.mm v",
    m: "HH.mm–HH.mm v"
}, _49xv19 = {
    M: "MMM–MMM y.",
    y: "MMM y – MMM y. G"
}, _49xv20 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _49xv21 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _49xv22 = {
    M: "y-MM – MM",
    y: "MMMM y – MMMM y. G"
}, _49xv23 = {
    d: "dd – dd. MMM",
    M: "dd. MMM – dd. MMM"
}, _49xv24 = [ "нед", "пон", "уто", "сре", "чет", "пет", "суб" ], _49xv25 = {
    "0": "у нед",
    "1": "следеће нед",
    "-1": "прошле нед"
}, _49xv26 = {
    "0": "у сре",
    "1": "следеће сре",
    "-1": "прошле сре"
}, _49xv27 = {
    "0": "у суб",
    "1": "следеће суб",
    "-1": "прошле суб"
}, _49xv28 = {
    "0": "у пон",
    "1": "следећег пон",
    "-1": "прошлог пон"
}, _49xv29 = {
    "0": "у уто",
    "1": "следећег уто",
    "-1": "прошлог уто"
}, _49xv30 = {
    "0": "у чет",
    "1": "следећег чет",
    "-1": "прошлог чет"
}, _49xv31 = {
    "0": "у пет",
    "1": "следећег пет",
    "-1": "прошлог пет"
}, _49xv32 = {
    d: "E, MM-dd – E, MM-dd",
    M: "E, MM-dd – E, MM-dd"
}, _49xv33 = [ "ј", "ф", "м", "а", "м", "ј", "ј", "а", "с", "о", "н", "д" ], _49xv34 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _49xv35 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _49xv36 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _49xv37 = {
    one: "за {0} г.",
    few: "за {0} г.",
    other: "за {0} г."
}, _49xv38 = {
    one: "за {0} м.",
    few: "за {0} м.",
    other: "за {0} м."
}, _49xv39 = {
    one: "за {0} н.",
    few: "за {0} н.",
    other: "за {0} н."
}, _49xv40 = {
    one: "за {0} д.",
    few: "за {0} д.",
    other: "за {0} д."
}, _49xv41 = {
    one: "за {0} ч.",
    few: "за {0} ч.",
    other: "за {0} ч."
}, _49xv42 = {
    one: "за {0} с.",
    few: "за {0} с.",
    other: "за {0} с."
}, _49xv43 = {
    "0": "у среду",
    "1": "следеће среде",
    "-1": "прошле среде"
}, _49xv44 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _49xv45 = {
    a: "h.mm a – h.mm a",
    h: "h.mm–h.mm a",
    m: "h.mm–h.mm a"
}, _49xv46 = {
    d: "E, dd. – E, dd. MMM",
    M: "E, dd. MMM – E, dd. MMM"
}, _49xv47 = {
    "0": "у петак",
    "1": "следећег петка",
    "-1": "прошлог петка"
}, _49xv48 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _49xv49 = {
    one: "пре {0} г.",
    few: "пре {0} г.",
    other: "пре {0} г."
}, _49xv50 = {
    one: "за {0} кв.",
    few: "за {0} кв.",
    other: "за {0} кв."
}, _49xv51 = {
    one: "пре {0} м.",
    few: "пре {0} м.",
    other: "пре {0} м."
}, _49xv52 = {
    one: "пре {0} н.",
    few: "пре {0} н.",
    other: "пре {0} н."
}, _49xv53 = {
    one: "пре {0} д.",
    few: "пре {0} д.",
    other: "пре {0} д."
}, _49xv54 = {
    one: "пре {0} ч.",
    few: "пре {0} ч.",
    other: "пре {0} ч."
}, _49xv55 = {
    one: "пре {0} с.",
    few: "пре {0} с.",
    other: "пре {0} с."
}, _49xv56 = {
    "0": "у недељу",
    "1": "следеће недеље",
    "-1": "прошле недеље"
}, _49xv57 = {
    "0": "у суботу",
    "1": "следеће суботе",
    "-1": "прошле суботе"
}, _49xv58 = {
    "0": "ове године",
    "1": "следеће године",
    "-1": "прошле године"
}, _49xv59 = {
    "0": "ове недеље",
    "1": "следеће недеље",
    "-1": "прошле недеље"
}, _49xv60 = {
    one: "за {0} дан",
    few: "за {0} дана",
    other: "за {0} дана"
}, _49xv61 = {
    one: "за {0} сат",
    few: "за {0} сата",
    other: "за {0} сати"
}, _49xv62 = {
    relative: _49xv25
}, _49xv63 = {
    "0": "у уторак",
    "1": "следећег уторка",
    "-1": "прошлог уторка"
}, _49xv64 = {
    relative: _49xv26
}, _49xv65 = {
    relative: _49xv27
}, _49xv66 = {
    one: "за {0} год.",
    few: "за {0} год.",
    other: "за {0} год."
}, _49xv67 = {
    one: "пре {0} кв.",
    few: "пре {0} кв.",
    other: "пре {0} кв."
}, _49xv68 = {
    one: "за {0} мес.",
    few: "за {0} мес.",
    other: "за {0} мес."
}, _49xv69 = {
    one: "за {0} нед.",
    few: "за {0} нед.",
    other: "за {0} нед."
}, _49xv70 = {
    one: "за {0} мин.",
    few: "за {0} мин.",
    other: "за {0} мин."
}, _49xv71 = {
    one: "за {0} сек.",
    few: "за {0} сек.",
    other: "за {0} сек."
}, _49xv72 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _49xv73 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _49xv74 = {
    relative: _49xv28
}, _49xv75 = {
    relative: _49xv29
}, _49xv76 = {
    relative: _49xv30
}, _49xv77 = {
    relative: _49xv31
}, _49xv78 = {
    a: "h.mm a – h.mm a v",
    h: "h.mm–h.mm a v",
    m: "h.mm–h.mm a v"
}, _49xv79 = {
    "0": "овог месеца",
    "1": "следећег месеца",
    "-1": "прошлог месеца"
}, _49xv80 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _49xv81 = {
    one: "пре {0} год.",
    few: "пре {0} год.",
    other: "пре {0} год."
}, _49xv82 = {
    one: "пре {0} мес.",
    few: "пре {0} мес.",
    other: "пре {0} мес."
}, _49xv83 = {
    one: "пре {0} нед.",
    few: "пре {0} нед.",
    other: "пре {0} нед."
}, _49xv84 = {
    one: "пре {0} дана",
    few: "пре {0} дана",
    other: "пре {0} дана"
}, _49xv85 = {
    one: "пре {0} сата",
    few: "пре {0} сата",
    other: "пре {0} сати"
}, _49xv86 = {
    one: "пре {0} мин.",
    few: "пре {0} мин.",
    other: "пре {0} мин."
}, _49xv87 = {
    one: "пре {0} сек.",
    few: "пре {0} сек.",
    other: "пре {0} сек."
}, _49xv88 = {
    one: "за {0} месец",
    few: "за {0} месеца",
    other: "за {0} месеци"
}, _49xv89 = {
    one: "за {0} минут",
    few: "за {0} минута",
    other: "за {0} минута"
}, _49xv90 = {
    relative: _49xv43
}, _49xv91 = {
    "0": "у четвртак",
    "1": "следећег четвртка",
    "-1": "прошлог четвртка"
}, _49xv92 = {
    one: "за {0} годину",
    few: "за {0} године",
    other: "за {0} година"
}, _49xv93 = {
    one: "за {0} недељу",
    few: "за {0} недеље",
    other: "за {0} недеља"
}, _49xv94 = {
    "0": "данас",
    "1": "сутра",
    "2": "прекосутра",
    "-2": "прекјуче",
    "-1": "јуче"
}, _49xv95 = {
    relative: _49xv47
}, _49xv96 = {
    "0": "овог квартала",
    "1": "следећег квартала",
    "-1": "прошлог квартала"
}, _49xv97 = {
    relative: _49xv56
}, _49xv98 = {
    "0": "у понедељак",
    "1": "следећег понедељка",
    "-1": "прошлог понедељка"
}, _49xv99 = {
    relative: _49xv57
}, _49xv100 = [ "први квартал", "други квартал", "трећи квартал", "четврти квартал" ], _49xv101 = {
    one: "пре {0} године",
    few: "пре {0} године",
    other: "пре {0} година"
}, _49xv102 = {
    one: "пре {0} месеца",
    few: "пре {0} месеца",
    other: "пре {0} месеци"
}, _49xv103 = {
    one: "пре {0} недеље",
    few: "пре {0} недеље",
    other: "пре {0} недеља"
}, _49xv104 = {
    one: "пре {0} минута",
    few: "пре {0} минута",
    other: "пре {0} минута"
}, _49xv105 = {
    one: "за {0} секунду",
    few: "за {0} секунде",
    other: "за {0} секунди"
}, _49xv106 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _49xv107 = [ "недеља", "понедељак", "уторак", "среда", "четвртак", "петак", "субота" ], _49xv108 = {
    relative: _49xv63
}, _49xv109 = {
    one: "за {0} квартал",
    few: "за {0} квартала",
    other: "за {0} квартала"
}, _49xv110 = {
    one: "пре {0} секунде",
    few: "пре {0} секунде",
    other: "пре {0} секунди"
}, _49xv111 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _49xv112 = {
    one: "пре {0} квартала",
    few: "пре {0} квартала",
    other: "пре {0} квартала"
}, _49xv113 = {
    d: "dd.–dd. MMM y.",
    M: "dd. MMM – dd. MMM y.",
    y: "dd. MMM y. – dd. MMM y."
}, _49xv114 = [ "јан", "феб", "мар", "апр", "мај", "јун", "јул", "авг", "сеп", "окт", "нов", "дец" ], _49xv115 = {
    relative: _49xv91
}, _49xv116 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _49xv117 = {
    relative: _49xv98
}, _49xv118 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _49xv119 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _49xv120 = {
    d: "E, y-MM-dd – E, y-MM-dd",
    M: "E, y-MM-dd – E, y-MM-dd",
    y: "E, y-MM-dd – E, y-MM-dd"
}, _49xv121 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _49xv122 = {
    d: "E, dd. – E, dd. MMM y.",
    M: "E, dd. MMM – E, dd. MMM y.",
    y: "E, dd. MMM y. – E, dd. MMM y."
}, _49xv123 = [ "Мух.", "Саф.", "Реб. 1", "Реб. 2", "Џум. 1", "Џум. 2", "Реџ.", "Ша.", "Рам.", "Ше.", "Зул-к.", "Зул-х." ], _49xv124 = [ "Тишри", "Хешван", "Кислев", "Тевет", "Шеват", "Адар I", "Адар", "Нисан", "Ијар", "Сиван", "Тамуз", "Ав", "Елул" ], _49xv125 = [ "јануар", "фебруар", "март", "април", "мај", "јун", "јул", "август", "септембар", "октобар", "новембар", "децембар" ], _49xv126 = [ "Фаравадин", "Ордибехешт", "Кордад", "Тир", "Мордад", "Шахривар", "Мехр", "Абан", "Азар", "Деј", "Бахман", "Есфанд" ], _49xv127 = [ "Таут", "Баба", "Хатор", "Киахк", "Тоба", "Амшир", "Барамхат", "Барамуда", "Башанс", "Паона", "Епеп", "Месра", "Наси" ], _49xv128 = [ "Чаитра", "Ваисака", "Јиаиста", "Асада", "Сравана", "Бадра", "Асвина", "Картика", "Аргајана", "Пауза", "Мага", "Фалгуна" ], _49xv129 = [ "Мескерем", "Текемт", "Хедар", "Тахсас", "Тер", "Јекатит", "Мегабит", "Миазиа", "Генбот", "Сене", "Хамле", "Нехасе", "Пагумен" ], _49xv130 = [ "Мухарем", "Сафер", "Реби 1", "Реби 2", "Џумаде 1", "Џумаде 2", "Реџеб", "Шаʻбан", "Рамазан", "Шевал", "Зул-каде", "Зул-хиџе" ], _49xv131 = {
    midnight: "у поноћ",
    am: "a",
    noon: "у подне",
    pm: "p",
    morning1: "ујутру",
    afternoon1: "по подне",
    evening1: "увече",
    night1: "ноћу"
}, _49xv132 = {
    future: _49xv37,
    past: _49xv49
}, _49xv133 = {
    future: _49xv38,
    past: _49xv51
}, _49xv134 = {
    future: _49xv39,
    past: _49xv52
}, _49xv135 = {
    future: _49xv40,
    past: _49xv53
}, _49xv136 = {
    future: _49xv41,
    past: _49xv54
}, _49xv137 = {
    future: _49xv42,
    past: _49xv55
}, _49xv138 = [ "Мурахам", "Сафар", "Рабиʻ I", "Рабиʻ II", "Јумада I", "Јумада II", "Рађаб", "Шаʻбан", "Рамадан", "Шавал", "Дуʻл-Киʻда", "Дуʻл-хиђа" ], _49xv139 = {
    future: _49xv50,
    past: _49xv67
}, _49xv140 = {
    midnight: "поноћ",
    am: "пре подне",
    noon: "подне",
    pm: "по подне",
    morning1: "јутро",
    afternoon1: "по под.",
    evening1: "вече",
    night1: "ноћ"
}, _49xv141 = {
    midnight: "поноћ",
    am: "пре подне",
    noon: "подне",
    pm: "по подне",
    morning1: "јутро",
    afternoon1: "поподне",
    evening1: "вече",
    night1: "ноћ"
}, _49xv142 = {
    future: _49xv60,
    past: _49xv84
}, _49xv143 = {
    future: _49xv61,
    past: _49xv85
}, _49xv144 = {
    future: _49xv66,
    past: _49xv81
}, _49xv145 = {
    future: _49xv68,
    past: _49xv82
}, _49xv146 = {
    future: _49xv69,
    past: _49xv83
}, _49xv147 = {
    future: _49xv70,
    past: _49xv86
}, _49xv148 = {
    future: _49xv71,
    past: _49xv87
}, _49xv149 = {
    abbreviated: _49xv1,
    narrow: _49xv2,
    wide: _49xv100
}, _49xv150 = {
    future: _49xv88,
    past: _49xv102
}, _49xv151 = {
    future: _49xv89,
    past: _49xv104
}, _49xv152 = {
    future: _49xv92,
    past: _49xv101
}, _49xv153 = {
    future: _49xv93,
    past: _49xv103
}, _49xv154 = {
    future: _49xv105,
    past: _49xv110
}, _49xv155 = {
    displayName: "г.",
    relativeTime: _49xv132
}, _49xv156 = {
    displayName: "м.",
    relativeTime: _49xv133
}, _49xv157 = {
    displayName: "н.",
    relativeTime: _49xv134
}, _49xv158 = {
    displayName: "д.",
    relativeTime: _49xv135
}, _49xv159 = {
    displayName: "ч.",
    relativeTime: _49xv136
}, _49xv160 = {
    displayName: "с.",
    relativeTime: _49xv137
}, _49xv161 = {
    future: _49xv109,
    past: _49xv112
}, _49xv162 = {
    displayName: "сат",
    relativeTime: _49xv143
}, _49xv163 = {
    displayName: "год.",
    relativeTime: _49xv144
}, _49xv164 = {
    displayName: "мес.",
    relativeTime: _49xv145
}, _49xv165 = {
    displayName: "нед.",
    relativeTime: _49xv146
}, _49xv166 = {
    displayName: "мин.",
    relativeTime: _49xv147
}, _49xv167 = {
    displayName: "сек.",
    relativeTime: _49xv148
}, _49xv168 = {
    displayName: "минут",
    relativeTime: _49xv151
}, _49xv169 = {
    format: _49xv111,
    numeric: _49xv3,
    standAlone: _49xv111
}, _49xv170 = {
    displayName: "секунд",
    relative: [ "сада" ],
    relativeTime: _49xv154
}, _49xv171 = {
    abbreviated: _49xv24,
    narrow: _49xv7,
    wide: _49xv107,
    "short": _49xv16
}, _49xv172 = {
    abbreviated: _49xv24,
    narrow: _49xv7,
    wide: _49xv107,
    "short": _49xv24
}, _49xv173 = {
    abbreviated: _49xv116,
    narrow: _49xv44,
    wide: _49xv116
}, _49xv174 = {
    displayName: "кв.",
    relative: _49xv96,
    relativeTime: _49xv139
}, _49xv175 = {
    displayName: "дан",
    relative: _49xv94,
    relativeTime: _49xv142
}, _49xv176 = {
    displayName: "година",
    relative: _49xv58,
    relativeTime: _49xv152
}, _49xv177 = {
    displayName: "недеља",
    relative: _49xv59,
    relativeTime: _49xv153
}, _49xv178 = {
    displayName: "месец",
    relative: _49xv79,
    relativeTime: _49xv150
}, _49xv179 = {
    abbreviated: _49xv114,
    narrow: _49xv33,
    wide: _49xv125
}, _49xv180 = {
    abbreviated: _49xv118,
    narrow: _49xv118,
    wide: _49xv118
}, _49xv181 = {
    format: _49xv180
}, _49xv182 = {
    displayName: "квартал",
    relative: _49xv96,
    relativeTime: _49xv161
}, _49xv183 = {
    abbreviated: _49xv124,
    narrow: _49xv73,
    wide: _49xv124
}, _49xv184 = {
    abbreviated: _49xv123,
    narrow: _49xv44,
    wide: _49xv130
}, _49xv185 = {
    abbreviated: _49xv126,
    narrow: _49xv44,
    wide: _49xv126
}, _49xv186 = {
    format: _49xv149,
    standAlone: _49xv149
}, _49xv187 = {
    abbreviated: _49xv123,
    narrow: _49xv44,
    wide: _49xv138
}, _49xv188 = {
    abbreviated: _49xv127,
    narrow: _49xv73,
    wide: _49xv127
}, _49xv189 = {
    abbreviated: _49xv128,
    narrow: _49xv44,
    wide: _49xv128
}, _49xv190 = {
    abbreviated: _49xv129,
    narrow: _49xv73,
    wide: _49xv129
}, _49xv191 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _49xv192 = {
    fullDate: "EEEE, dd. MMMM y. G",
    longDate: "dd. MMMM y. G",
    mediumDate: "dd.MM.y. G",
    shortDate: "d.M.y. GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "d.M.y. GGGGG HH:mm",
    mediumDateTime: "dd.MM.y. G HH:mm:ss",
    longDateTime: "dd. MMMM y. G HH:mm:ss z",
    fullDateTime: "EEEE, dd. MMMM y. G HH:mm:ss zzzz"
}, _49xv193 = {
    abbreviated: _49xv140,
    narrow: _49xv131,
    wide: _49xv141
}, _49xv194 = {
    abbreviated: _49xv141,
    narrow: _49xv141,
    wide: _49xv141
}, _49xv195 = {
    format: _49xv172,
    standAlone: _49xv171
}, _49xv196 = {
    format: _49xv173,
    standAlone: _49xv173
}, _49xv197 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _49xv198 = {
    format: _49xv179,
    standAlone: _49xv179
}, _49xv199 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _49xv200 = {
    format: _49xv187,
    standAlone: _49xv184
}, _49xv201 = {
    d: "d",
    E: "ccc",
    Ed: "E d.",
    Gy: "y. G",
    GyMMM: "MMM y. G",
    GyMMMd: "d. MMM y. G",
    GyMMMEd: "E, d. MMM y. G",
    h: "hh a",
    H: "HH",
    hm: "hh.mm a",
    Hm: "HH.mm",
    hms: "hh.mm.ss a",
    Hms: "HH.mm.ss",
    M: "L",
    Md: "d/M",
    MEd: "E, M-d",
    MMdd: "MM-dd",
    MMM: "LLL",
    MMMd: "d. MMM",
    MMMdd: "dd.MMM",
    MMMEd: "E d. MMM",
    MMMMd: "d. MMMM",
    MMMMEd: "E d. MMMM",
    ms: "mm.ss",
    y: "y. G",
    yyyy: "y. G",
    yyyyM: "M.y. G",
    yyyyMd: "d.M.y. G",
    yyyyMEd: "E, d.M.y. G",
    yyyyMM: "MM.y. G",
    yyyyMMdd: "dd.MM.y. G",
    yyyyMMM: "MMM y. G",
    yyyyMMMd: "d. MMM y. G",
    yyyyMMMEd: "E, d. MMM y. G",
    yyyyMMMM: "MMMM y. G",
    yyyyQQQ: "QQQ, y. G",
    yyyyQQQQ: "QQQQ y. G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _49xv202 = {
    format: _49xv193,
    standAlone: _49xv194
}, _49xv203 = {
    basic: _49xv191,
    cldr: _49xv197
}, _49xv204 = {
    d: {
        d: "d–d"
    },
    h: _49xv4,
    H: {
        H: "HH–HH"
    },
    hm: _49xv48,
    Hm: _49xv13,
    hmv: _49xv80,
    Hmv: _49xv20,
    hv: _49xv6,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _49xv17,
    MEd: _49xv34,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _49xv9,
    MMMEd: _49xv35,
    y: {
        y: "U–U"
    },
    yM: _49xv11,
    yMd: _49xv106,
    yMEd: _49xv121,
    yMMM: _49xv14,
    yMMMd: _49xv72,
    yMMMEd: _49xv119,
    yMMMM: _49xv21
}, _49xv205 = {
    basic: _49xv192,
    cldr: _49xv201
}, _49xv206 = {
    Md: _49xv17,
    MEd: _49xv32,
    yM: _49xv11,
    yMd: _49xv106,
    yMEd: _49xv120,
    d: {
        d: "d–d"
    },
    h: _49xv4,
    H: {
        H: "HH–HH"
    },
    hm: _49xv45,
    Hm: _49xv12,
    hmv: _49xv78,
    Hmv: _49xv18,
    hv: _49xv6,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _49xv23,
    MMMEd: _49xv46,
    y: {
        y: "y – y. G"
    },
    yMMM: _49xv19,
    yMMMd: _49xv113,
    yMMMEd: _49xv122,
    yMMMM: _49xv22
}, _49xv207 = {
    abbreviated: _49xv199,
    narrow: _49xv199,
    wide: _49xv199
}, _49xv208 = {
    format: _49xv207
}, _49xv209 = [ "Таика (645–650)", "Хакучи (650–671)", "Хакухо (672–686)", "Шучо (686–701)", "Таихо (701–704)", "Кеиун (704–708)", "Вадо (708–715)", "Реики (715–717)", "Јоро (717–724)", "Јинки (724–729)", "Темпио (729–749)", "Темпио-кампо (749-749)", "Темпио-шохо (749-757)", "Темпио-хођи (757-765)", "Темпо-ђинго (765-767)", "Ђинго-кеиун (767-770)", "Хоки (770–780)", "Тен-о (781-782)", "Енрјаку (782–806)", "Даидо (806–810)", "Конин (810–824)", "Тенчо (824–834)", "Шова (834–848)", "Кајо (848–851)", "Нињу (851–854)", "Саико (854–857)", "Тенан (857–859)", "Јоган (859–877)", "Генкеи (877–885)", "Ниња (885–889)", "Кампјо (889–898)", "Шотаи (898–901)", "Енђи (901–923)", "Енчо (923–931)", "Шохеи (931–938)", "Тенгјо (938–947)", "Тенриаку (947–957)", "Тентоку (957–961)", "Ова (961–964)", "Кохо (964–968)", "Ана (968–970)", "Тенроку (970–973)", "Тен-ен (973-976)", "Јоген (976–978)", "Тенген (978–983)", "Еикан (983–985)", "Кана (985–987)", "Еи-ен (987-989)", "Еисо (989–990)", "Шорјаку (990–995)", "Чотоку (995–999)", "Чохо (999–1004)", "Канко (1004–1012)", "Чова (1012–1017)", "Канин (1017–1021)", "Ђиан (1021–1024)", "Мању (1024–1028)", "Чоген (1028–1037)", "Чорјаку (1037–1040)", "Чокју (1040–1044)", "Кантоку (1044–1046)", "Еишо (1046–1053)", "Тенђи (1053–1058)", "Кохеи (1058–1065)", "Ђирјаку (1065–1069)", "Енкју (1069–1074)", "Шохо (1074–1077)", "Шорјаку (1077–1081)", "Еишо (1081–1084)", "Отоку (1084–1087)", "Канђи (1087–1094)", "Кахо (1094–1096)", "Еичо (1096–1097)", "Шотоку (1097–1099)", "Кова (1099–1104)", "Чођи (1104–1106)", "Кашо (1106–1108)", "Тенин (1108–1110)", "Тен-еи (1110-1113)", "Еикју (1113–1118)", "Ђен-еи (1118-1120)", "Хоан (1120–1124)", "Тенђи (1124–1126)", "Даиђи (1126–1131)", "Теншо (1131–1132)", "Чошао (1132–1135)", "Хоен (1135–1141)", "Еиђи (1141–1142)", "Кођи (1142–1144)", "Тењо (1144–1145)", "Кјуан (1145–1151)", "Нинпеи (1151–1154)", "Кјују (1154–1156)", "Хоген (1156–1159)", "Хеиђи (1159–1160)", "Еирјаку (1160–1161)", "Охо (1161–1163)", "Чокан (1163–1165)", "Еиман (1165–1166)", "Нин-ан (1166-1169)", "Као (1169–1171)", "Шоан (1171–1175)", "Анген (1175–1177)", "Ђишо (1177–1181)", "Јова (1181–1182)", "Ђуеи (1182–1184)", "Генрјуку (1184–1185)", "Бунђи (1185–1190)", "Кенкју (1190–1199)", "Шођи (1199–1201)", "Кенин (1201–1204)", "Генкју (1204–1206)", "Кен-еи (1206-1207)", "Шоген (1207–1211)", "Кенрјаку (1211–1213)", "Кенпо (1213–1219)", "Шокју (1219–1222)", "Ђу (1222–1224)", "Ђенин (1224–1225)", "Кароку (1225–1227)", "Антеи (1227–1229)", "Канки (1229–1232)", "Ђоеи (1232–1233)", "Темпуку (1233–1234)", "Бунрјаку (1234–1235)", "Катеи (1235–1238)", "Рјакунин (1238–1239)", "Ен-о (1239-1240)", "Нињи (1240–1243)", "Канген (1243–1247)", "Хођи (1247–1249)", "Кенчо (1249–1256)", "Коген (1256–1257)", "Шока (1257–1259)", "Шоген (1259–1260)", "Бун-о (1260-1261)", "Кочо (1261–1264)", "Бун-еи (1264-1275)", "Кенђи (1275–1278)", "Коан (1278–1288)", "Шу (1288–1293)", "Еинин (1293–1299)", "Шоан (1299–1302)", "Кенген (1302–1303)", "Каген (1303–1306)", "Токуђи (1306–1308)", "Енкеи (1308–1311)", "Очо (1311–1312)", "Шова (1312–1317)", "Бунпо (1317–1319)", "Ђено (1319–1321)", "Ђенкјо (1321–1324)", "Шочу (1324–1326)", "Кареки (1326–1329)", "Гентоку (1329–1331)", "Генко (1331–1334)", "Кему (1334–1336)", "Енген (1336–1340)", "Кококу (1340–1346)", "Шохеи (1346–1370)", "Кентоку (1370–1372)", "Бучу (1372–1375)", "Тењу (1375–1379)", "Корјаку (1379–1381)", "Кова (1381–1384)", "Генчу (1384–1392)", "Меитоку (1384–1387)", "Какеи (1387–1389)", "Ку (1389–1390)", "Меитоку (1390–1394)", "Оеи (1394–1428)", "Шочо (1428–1429)", "Еикјо (1429–1441)", "Какитсу (1441–1444)", "Бун-ан (1444-1449)", "Хотоку (1449–1452)", "Кјотоку (1452–1455)", "Кошо (1455–1457)", "Чороку (1457–1460)", "Каншо (1460–1466)", "Буншо (1466–1467)", "Онин (1467–1469)", "Бунмеи (1469–1487)", "Чокјо (1487–1489)", "Ентоку (1489–1492)", "Меио (1492–1501)", "Бунки (1501–1504)", "Еишо (1504–1521)", "Таиеи (1521–1528)", "Кјороку (1528–1532)", "Тенмон (1532–1555)", "Кођи (1555–1558)", "Еироку (1558–1570)", "Генки (1570–1573)", "Теншо (1573–1592)", "Бунроку (1592–1596)", "Кеичо (1596–1615)", "Генва (1615–1624)", "Кан-еи (1624-1644)", "Шохо (1644–1648)", "Кеиан (1648–1652)", "Шу (1652–1655)", "Меирјаку (1655–1658)", "Мањи (1658–1661)", "Канбун (1661–1673)", "Енпо (1673–1681)", "Тенва (1681–1684)", "Јокјо (1684–1688)", "Генроку (1688–1704)", "Хоеи (1704–1711)", "Шотоку (1711–1716)", "Кјохо (1716–1736)", "Генбун (1736–1741)", "Канпо (1741–1744)", "Енкјо (1744–1748)", "Кан-ен (1748-1751)", "Хорјаку (1751–1764)", "Меива (1764–1772)", "Ан-еи (1772-1781)", "Тенмеи (1781–1789)", "Кансеи (1789–1801)", "Кјова (1801–1804)", "Бунка (1804–1818)", "Бунсеи (1818–1830)", "Тенпо (1830–1844)", "Кока (1844–1848)", "Каеи (1848–1854)", "Ансеи (1854–1860)", "Ман-ен (1860-1861)", "Бункју (1861–1864)", "Генђи (1864–1865)", "Кеико (1865–1868)", "Меиђи", "Таишо", "Шова", "Хаисеи" ], _49xv210 = {
    dayParts: _49xv181,
    days: _49xv208,
    months: _49xv208,
    years: _49xv208,
    zodiacs: _49xv181
}, _49xv211 = {
    era: {
        displayName: "ера"
    },
    year: _49xv176,
    "year-short": _49xv163,
    "year-narrow": _49xv155,
    quarter: _49xv182,
    "quarter-short": _49xv174,
    "quarter-narrow": _49xv174,
    month: _49xv178,
    "month-short": _49xv164,
    "month-narrow": _49xv156,
    week: _49xv177,
    "week-short": _49xv165,
    "week-narrow": _49xv157,
    day: _49xv175,
    "day-short": _49xv158,
    "day-narrow": _49xv158,
    weekday: _49xv5,
    dayperiod: _49xv15,
    hour: _49xv162,
    "hour-short": _49xv159,
    "hour-narrow": _49xv159,
    minute: _49xv168,
    "minute-short": _49xv166,
    "minute-narrow": _49xv166,
    second: _49xv170,
    "second-short": _49xv167,
    "second-narrow": _49xv160,
    zone: _49xv8,
    sun: _49xv97,
    "sun-short": _49xv62,
    "sun-narrow": _49xv62,
    mon: _49xv117,
    "mon-short": _49xv74,
    "mon-narrow": _49xv74,
    tue: _49xv108,
    "tue-short": _49xv75,
    "tue-narrow": _49xv75,
    wed: _49xv90,
    "wed-short": _49xv64,
    "wed-narrow": _49xv64,
    thu: _49xv115,
    "thu-short": _49xv76,
    "thu-narrow": _49xv76,
    fri: _49xv95,
    "fri-short": _49xv77,
    "fri-narrow": _49xv77,
    sat: _49xv99,
    "sat-short": _49xv65,
    "sat-narrow": _49xv65
}, _49xv212 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _49xv211
}, _49xv213 = {
    dateFormats: _49xv205,
    datePartsOrder: "dmy",
    dateIntervalFormats: _49xv206,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _49xv195,
    dayPeriods: _49xv202,
    monthNames: _49xv200,
    eraNames: _49xv10,
    quarterNames: _49xv186,
    fields: _49xv211
}, _49xv214 = {
    dateFormats: _49xv203,
    datePartsOrder: "md",
    dateIntervalFormats: _49xv204,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _49xv195,
    dayPeriods: _49xv202,
    cyclicNames: _49xv210,
    monthNames: _49xv196,
    monthPatterns: _49xv169,
    quarterNames: _49xv186,
    fields: _49xv211
};

inter.id = "sr_cyrl_ba";

inter.calendars = {
    buddhist: {
        dateFormats: _49xv205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _49xv206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _49xv195,
        dayPeriods: _49xv202,
        monthNames: _49xv198,
        eraNames: {
            wide: [ "БЕ" ],
            abbreviated: [ "БЕ" ]
        },
        quarterNames: _49xv186,
        fields: _49xv211
    },
    chinese: _49xv214,
    coptic: {
        dateFormats: _49xv205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _49xv206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _49xv195,
        dayPeriods: _49xv202,
        monthNames: {
            format: _49xv188,
            standAlone: _49xv188
        },
        eraNames: _49xv36,
        quarterNames: _49xv186,
        fields: _49xv211
    },
    dangi: _49xv214,
    ethioaa: _49xv212,
    ethiopic: {
        dateFormats: _49xv205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _49xv206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _49xv195,
        dayPeriods: _49xv202,
        monthNames: {
            format: _49xv190,
            standAlone: _49xv190
        },
        eraNames: _49xv36,
        quarterNames: _49xv186,
        fields: _49xv211
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, dd. MMMM y.",
                longDate: "dd. MMMM y.",
                mediumDate: "dd.MM.y.",
                shortDate: "d.M.yy.",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "d.M.yy. HH:mm",
                mediumDateTime: "dd.MM.y. HH:mm:ss",
                longDateTime: "dd. MMMM y. HH:mm:ss z",
                fullDateTime: "EEEE, dd. MMMM y. HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "E",
                Ed: "E d.",
                Ehm: "E, h.mm a",
                EHm: "E, HH.mm",
                Ehms: "E, h.mm.ss a",
                EHms: "E, HH.mm.ss",
                Gy: "y. G",
                GyMMM: "MMM y. G",
                GyMMMd: "d. MMM y. G",
                GyMMMEd: "E, d. MMM y. G",
                h: "h a",
                H: "HH",
                hm: "hh.mm a",
                Hm: "HH.mm",
                hms: "hh.mm.ss a",
                Hms: "HH.mm.ss",
                hmsv: "h.mm.ss a v",
                Hmsv: "HH.mm.ss v",
                hmv: "h.mm a v",
                Hmv: "HH.mm v",
                M: "L",
                Md: "d/M",
                MEd: "E, d.M.",
                MMdd: "MM-dd",
                MMM: "LLL",
                MMMd: "d. MMM",
                MMMdd: "dd.MMM",
                MMMEd: "E d. MMM",
                MMMMd: "d. MMMM",
                MMMMEd: "E, d. MMMM",
                ms: "mm.ss",
                y: "y.",
                yM: "M.y.",
                yMd: "d.M.y.",
                yMEd: "E, d.M.y.",
                yMM: "MM.y.",
                yMMdd: "dd.MM.y.",
                yMMM: "MMM y.",
                yMMMd: "d. MMM y.",
                yMMMEd: "E, d. MMM y.",
                yMMMM: "MMMM y.",
                yQQQ: "QQQ. y",
                yQQQQ: "QQQQ. y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            Md: _49xv17,
            MEd: _49xv32,
            yM: _49xv11,
            yMd: _49xv106,
            yMEd: _49xv120,
            d: {
                d: "d–d"
            },
            h: _49xv4,
            H: {
                H: "HH–HH"
            },
            hm: _49xv45,
            Hm: _49xv12,
            hmv: _49xv78,
            Hmv: _49xv18,
            hv: _49xv6,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: {
                d: "dd.–dd. MMM",
                M: "dd. MMM – dd. MMM"
            },
            MMMEd: _49xv46,
            y: {
                y: "y–y"
            },
            yMMM: {
                M: "MMM–MMM y.",
                y: "MMM y. – MMM y."
            },
            yMMMd: _49xv113,
            yMMMEd: _49xv122,
            yMMMM: {
                M: "MMMM – MMMM y.",
                y: "MMMM y – MMMM y."
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _49xv195,
        dayPeriods: _49xv202,
        monthNames: _49xv198,
        eraNames: {
            wide: [ "пре нове ере", "нове ере" ],
            abbreviated: [ "п. н. е.", "н. е." ]
        },
        quarterNames: _49xv186,
        fields: _49xv211
    },
    hebrew: {
        dateFormats: _49xv205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _49xv206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _49xv195,
        dayPeriods: _49xv202,
        monthNames: {
            format: _49xv183,
            standAlone: _49xv183
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _49xv186,
        fields: _49xv211
    },
    indian: {
        dateFormats: _49xv205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _49xv206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _49xv195,
        dayPeriods: _49xv202,
        monthNames: {
            format: _49xv189,
            standAlone: _49xv189
        },
        eraNames: {
            wide: [ "САКА" ],
            abbreviated: [ "САКА" ]
        },
        quarterNames: _49xv186,
        fields: _49xv211
    },
    islamic: _49xv213,
    "islamic-umalqura": _49xv213,
    "islamic-tbla": _49xv213,
    "islamic-civil": _49xv213,
    "islamic-rgsa": _49xv213,
    iso8601: _49xv212,
    japanese: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, MMMM d, y G",
                longDate: "MMMM d, y G",
                mediumDate: "MMM d, y G",
                shortDate: "M/d/yy G",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "M/d/yy G HH:mm",
                mediumDateTime: "MMM d, y G HH:mm:ss",
                longDateTime: "MMMM d, y G HH:mm:ss z",
                fullDateTime: "EEEE, MMMM d, y G HH:mm:ss zzzz"
            },
            cldr: _49xv201
        },
        datePartsOrder: "mdy",
        dateIntervalFormats: _49xv206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _49xv195,
        dayPeriods: _49xv202,
        monthNames: _49xv198,
        eraNames: {
            wide: _49xv209,
            abbreviated: _49xv209
        },
        quarterNames: _49xv186,
        fields: _49xv211
    },
    persian: {
        dateFormats: _49xv205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _49xv206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _49xv195,
        dayPeriods: _49xv202,
        monthNames: {
            format: _49xv185,
            standAlone: _49xv185
        },
        eraNames: {
            wide: [ "АП" ],
            abbreviated: [ "АП" ]
        },
        quarterNames: _49xv186,
        fields: _49xv211
    },
    roc: {
        dateFormats: _49xv205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _49xv206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _49xv195,
        dayPeriods: _49xv202,
        monthNames: _49xv198,
        eraNames: {
            wide: [ "Пре РК", "РК" ],
            abbreviated: [ "Пре РК", "РК" ]
        },
        quarterNames: _49xv186,
        fields: _49xv211
    },
    islamicc: _49xv212
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length, f = parseInt(n.toString().replace(/^[^.]*\.?/, ""), 10) || 0;
    if (typeof n === "string") n = parseInt(n, 10);
    if (v === 0 && i % 10 === 1 && (!(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))) return "one";
    if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 && (!(i % 100 >= 12 && i % 100 <= 14) || f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 && !(f % 100 >= 12 && f % 100 <= 14))) return "few";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinalMasculine(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderSpelloutCardinalMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "минус " + this.renderSpelloutCardinalMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculine(Math.floor(n)) + " кома " + this.renderSpelloutCardinalMasculine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " билијарда" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 1e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " билион" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 1e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " милијарда" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 1e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " милион" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e3)) + " хиљада" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 1e3) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e3)) + " хиљаду" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 400) return this.renderSpelloutCardinalFeminine(Math.floor(n / 100)) + "сто" + (n === 400 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 300) return "триста" + (n === 300 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 200) return "двеста" + (n === 200 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 100) return "сто" + (n === 100 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 90) return "деведесет" + (n === 90 ? "" : " и " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 80) return "осамдесет" + (n === 80 ? "" : " и " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 70) return "седамдесет" + (n === 70 ? "" : " и " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 60) return "шездесет" + (n === 60 ? "" : " и " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 50) return "педесет" + (n === 50 ? "" : " и " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 40) return "четрдесет" + (n === 40 ? "" : " и " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 30) return "тридесет" + (n === 30 ? "" : " и " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 20) return "двадесет" + (n === 20 ? "" : " и " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 19) return "деветнаест";
    if (n >= 18) return "осамнаест";
    if (n >= 17) return "седамнаест";
    if (n >= 16) return "шеснаест";
    if (n >= 15) return "петнаест";
    if (n >= 14) return "четрнаест";
    if (n >= 13) return "тринаест";
    if (n >= 12) return "дванаест";
    if (n >= 11) return "једанаест";
    if (n >= 10) return "десет";
    if (n >= 9) return "девет";
    if (n >= 8) return "осам";
    if (n >= 7) return "седам";
    if (n >= 6) return "шест";
    if (n >= 5) return "пет";
    if (n >= 4) return "четири";
    if (n >= 3) return "три";
    if (n >= 2) return "два";
    if (n >= 1) return "један";
    if (n >= 0) return "нула";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderSpelloutCardinalFeminine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "минус " + this.renderSpelloutCardinalFeminine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalFeminine(Math.floor(n)) + " кома " + this.renderSpelloutCardinalFeminine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " билијарда" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e15));
    if (n >= 1e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " билион" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e12));
    if (n >= 1e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " милијарда" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e9));
    if (n >= 1e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " милион" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e3)) + " хиљада" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e3));
    if (n >= 1e3) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e3)) + " хиљаду" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e3));
    if (n >= 400) return this.renderSpelloutCardinalFeminine(Math.floor(n / 100)) + "сто" + (n === 400 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 300) return "триста" + (n === 300 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 200) return "двеста" + (n === 200 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 100) return "сто" + (n === 100 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 90) return "деведесет" + (n === 90 ? "" : " и " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 80) return "осамдесет" + (n === 80 ? "" : " и " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 70) return "седамдесет" + (n === 70 ? "" : " и " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 60) return "шездесет" + (n === 60 ? "" : " и " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 50) return "педесет" + (n === 50 ? "" : " и " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 40) return "четрдесет" + (n === 40 ? "" : " и " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 30) return "тридесет" + (n === 30 ? "" : " и " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 20) return "двадесет" + (n === 20 ? "" : " и " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 3) return this.renderSpelloutCardinalMasculine(n);
    if (n >= 2) return "две";
    if (n >= 1) return "једна";
    if (n >= 0) return "нула";
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

module.exports = inter;