function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _9dfh1 = {
    other: "{0} L/100km"
}, _9dfh2 = {
    other: "{0} ترابایت"
}, _9dfh3 = {
    other: "{0} گیگابیت"
}, _9dfh4 = {
    other: "{0} مگابایت"
}, _9dfh5 = {
    other: "{0} کیلوبیت"
}, _9dfh6 = [ "Q1", "Q2", "Q3", "Q4" ], _9dfh7 = {
    displayName: "تقویم"
}, _9dfh8 = {
    other: "{0} سال دله"
}, _9dfh9 = {
    other: "{0} سال پیش"
}, _9dfh10 = {
    other: "{0} ربع دله"
}, _9dfh11 = {
    other: "{0} ربع پیش"
}, _9dfh12 = {
    other: "{0} ماه دله"
}, _9dfh13 = {
    other: "{0} ماه پیش"
}, _9dfh14 = {
    other: "{0} روز دله"
}, _9dfh15 = {
    other: "{0} روز پیش"
}, _9dfh16 = {
    all: {
        leap: "{0}bis"
    }
}, _9dfh17 = {
    other: "{0} گیگابایت"
}, _9dfh18 = {
    other: "{0} کیلوبایت"
}, _9dfh19 = {
    other: "{0} هفته دله"
}, _9dfh20 = {
    other: "{0} هفته پیش"
}, _9dfh21 = {
    other: "{0} ساعت دله"
}, _9dfh22 = {
    other: "{0} ساعت پیش"
}, _9dfh23 = {
    other: "{0} دَقه پیش"
}, _9dfh24 = {
    other: "{0} دَقه دله"
}, _9dfh25 = {
    other: "{0} نانوثانیه"
}, _9dfh26 = {
    other: "{0} ساعِت دله"
}, _9dfh27 = {
    other: "{0} ساعِت پیش"
}, _9dfh28 = {
    other: "{0} دقیقه دله"
}, _9dfh29 = {
    other: "{0} ثانیه دله"
}, _9dfh30 = {
    other: "{0} ثانیه پیش"
}, _9dfh31 = {
    other: "{0} میلی‌ثانیه"
}, _9dfh32 = {
    other: "{0} میکروثانیه"
}, _9dfh33 = {
    a: "h a – h a",
    h: "h–h a"
}, _9dfh34 = {
    displayName: "صواحی/ظُر"
}, _9dfh35 = [ "Before R.O.C.", "R.O.C." ], _9dfh36 = {
    displayName: "هفته‌ی ِروز"
}, _9dfh37 = {
    displayName: "زمونی منقطه"
}, _9dfh38 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _9dfh39 = [ "S", "M", "T", "W", "T", "F", "S" ], _9dfh40 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _9dfh41 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _9dfh42 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _9dfh43 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _9dfh44 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _9dfh45 = {
    "0": "اَمروز",
    "1": "فِردا",
    "-1": "دیروز"
}, _9dfh46 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _9dfh47 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _9dfh48 = {
    M: "G y MMM–MMM",
    y: "G y MMM – y MMM"
}, _9dfh49 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _9dfh50 = {
    "0": "امسال",
    "1": "سال دیگه",
    "-1": "پارسال"
}, _9dfh51 = {
    M: "G y MMMM–MMMM",
    y: "G y MMMM – y MMMM"
}, _9dfh52 = {
    "0": "این ماه",
    "1": "ماه ِبعد",
    "-1": "ماه قبل"
}, _9dfh53 = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ], _9dfh54 = {
    M: "GGGGG y-MM – y-MM",
    y: "GGGGG y-MM – y-MM"
}, _9dfh55 = {
    "0": "این هفته",
    "1": "بعدی هفته",
    "-1": "قبلی هفته"
}, _9dfh56 = {
    "0": "این جومه",
    "1": "بعدی جومه",
    "-1": "قبلی جومه"
}, _9dfh57 = {
    "0": "این شنبه",
    "1": "بعدی شنبه",
    "-1": "قبلی شنبه"
}, _9dfh58 = {
    id: "001",
    displayName: "جهون",
    hasTimeZones: false
}, _9dfh59 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _9dfh60 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _9dfh61 = {
    "0": "این یکشنبه",
    "1": "یکشنبه بعد",
    "-1": "یکشنبه قبل"
}, _9dfh62 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _9dfh63 = {
    "0": "این یکشنبه",
    "1": "بعدی یکشنبه",
    "-1": "قبلی یکشنبه"
}, _9dfh64 = {
    "0": "این دِشنبه",
    "1": "بعدی دِشنبه",
    "-1": "قبلی دِشنبه"
}, _9dfh65 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _9dfh66 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _9dfh67 = {
    id: "BV",
    displayName: "بووت جزیره",
    hasTimeZones: false
}, _9dfh68 = {
    "0": "این سه‌شنبه",
    "1": "بعدی سه‌شنبه",
    "-1": "قبلی سه‌شنبه"
}, _9dfh69 = {
    "0": "این چارشنبه",
    "1": "بعدی چارشنبه",
    "-1": "قبلی چارشنبه"
}, _9dfh70 = {
    "0": "این پنجشنبه",
    "1": "بعدی پنجشنبه",
    "-1": "قبلی پنجشنبه"
}, _9dfh71 = {
    id: "DG",
    displayName: "دیگو گارسیا",
    hasTimeZones: false
}, _9dfh72 = {
    id: "IC",
    displayName: "قناری جزایر",
    hasTimeZones: false
}, _9dfh73 = {
    id: "CX",
    displayName: "کریسمس جزیره",
    hasTimeZones: true
}, _9dfh74 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _9dfh75 = {
    id: "EA",
    displayName: "سوتا و ملیله",
    hasTimeZones: false
}, _9dfh76 = {
    relative: _9dfh56
}, _9dfh77 = {
    relative: _9dfh57
}, _9dfh78 = {
    id: "AC",
    displayName: "آسنسیون جزیره",
    hasTimeZones: false
}, _9dfh79 = {
    future: _9dfh8,
    past: _9dfh9
}, _9dfh80 = {
    future: _9dfh10,
    past: _9dfh11
}, _9dfh81 = {
    future: _9dfh12,
    past: _9dfh13
}, _9dfh82 = {
    future: _9dfh14,
    past: _9dfh15
}, _9dfh83 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _9dfh84 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _9dfh85 = {
    id: "CP",
    displayName: "کلیپرتون جزیره",
    hasTimeZones: false
}, _9dfh86 = {
    id: "AQ",
    displayName: "جنوبی یخ‌بزه قطب",
    hasTimeZones: true
}, _9dfh87 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _9dfh88 = {
    future: _9dfh19,
    past: _9dfh20
}, _9dfh89 = {
    future: _9dfh21,
    past: _9dfh22
}, _9dfh90 = {
    future: _9dfh24,
    past: _9dfh23
}, _9dfh91 = {
    id: "TA",
    displayName: "تریستان دا جونها",
    hasTimeZones: false
}, _9dfh92 = {
    future: _9dfh28,
    past: _9dfh23
}, _9dfh93 = {
    relative: _9dfh61
}, _9dfh94 = {
    id: "GH",
    displayName: "غنا",
    regionId: "011",
    hasTimeZones: true
}, _9dfh95 = {
    id: "QA",
    displayName: "قطر",
    regionId: "145",
    hasTimeZones: true
}, _9dfh96 = {
    id: "EG",
    displayName: "مصر",
    regionId: "015",
    hasTimeZones: true
}, _9dfh97 = {
    id: "IN",
    displayName: "هند",
    regionId: "034",
    hasTimeZones: true
}, _9dfh98 = {
    id: "PE",
    displayName: "پرو",
    regionId: "005",
    hasTimeZones: true
}, _9dfh99 = {
    id: "TD",
    displayName: "چاد",
    regionId: "017",
    hasTimeZones: true
}, _9dfh100 = {
    id: "CN",
    displayName: "چین",
    regionId: "030",
    hasTimeZones: true
}, _9dfh101 = {
    id: "CC",
    displayName: "کوک (کیلینگ) جزایر",
    hasTimeZones: true
}, _9dfh102 = {
    id: "YE",
    displayName: "یمن",
    regionId: "145",
    hasTimeZones: true
}, _9dfh103 = {
    future: _9dfh26,
    past: _9dfh27
}, _9dfh104 = {
    future: _9dfh29,
    past: _9dfh30
}, _9dfh105 = {
    id: "JO",
    displayName: "اردن",
    regionId: "145",
    hasTimeZones: true
}, _9dfh106 = {
    id: "BZ",
    displayName: "بلیز",
    regionId: "013",
    hasTimeZones: true
}, _9dfh107 = {
    id: "BJ",
    displayName: "بنین",
    regionId: "011",
    hasTimeZones: true
}, _9dfh108 = {
    id: "TN",
    displayName: "تونس",
    regionId: "015",
    hasTimeZones: true
}, _9dfh109 = {
    id: "TG",
    displayName: "توگو",
    regionId: "011",
    hasTimeZones: true
}, _9dfh110 = {
    id: "JE",
    displayName: "جرسی",
    regionId: "154",
    hasTimeZones: true
}, _9dfh111 = {
    id: "SE",
    displayName: "سوئد",
    regionId: "154",
    hasTimeZones: true
}, _9dfh112 = {
    id: "SC",
    displayName: "سیشل",
    regionId: "014",
    hasTimeZones: true
}, _9dfh113 = {
    id: "CL",
    displayName: "شیلی",
    regionId: "005",
    hasTimeZones: true
}, _9dfh114 = {
    id: "IQ",
    displayName: "عراق",
    regionId: "145",
    hasTimeZones: true
}, _9dfh115 = {
    id: "OM",
    displayName: "عمان",
    regionId: "145",
    hasTimeZones: true
}, _9dfh116 = {
    id: "FJ",
    displayName: "فیجی",
    regionId: "054",
    hasTimeZones: true
}, _9dfh117 = {
    id: "CY",
    displayName: "قبرس",
    regionId: "145",
    hasTimeZones: true
}, _9dfh118 = {
    id: "LY",
    displayName: "لیبی",
    regionId: "015",
    hasTimeZones: true
}, _9dfh119 = {
    id: "MT",
    displayName: "مالت",
    regionId: "039",
    hasTimeZones: true
}, _9dfh120 = {
    id: "ML",
    displayName: "مالی",
    regionId: "011",
    hasTimeZones: true
}, _9dfh121 = {
    id: "NO",
    displayName: "نروژ",
    regionId: "154",
    hasTimeZones: true
}, _9dfh122 = {
    id: "NP",
    displayName: "نپال",
    regionId: "034",
    hasTimeZones: true
}, _9dfh123 = {
    id: "NU",
    displayName: "نیئو",
    regionId: "061",
    hasTimeZones: true
}, _9dfh124 = {
    id: "NE",
    displayName: "نیجر",
    regionId: "011",
    hasTimeZones: true
}, _9dfh125 = {
    id: "NL",
    displayName: "هلند",
    regionId: "155",
    hasTimeZones: true
}, _9dfh126 = {
    id: "KE",
    displayName: "کنیا",
    regionId: "014",
    hasTimeZones: true
}, _9dfh127 = {
    id: "CU",
    displayName: "کوبا",
    regionId: "029",
    hasTimeZones: true
}, _9dfh128 = {
    id: "KW",
    displayName: "کویت",
    regionId: "145",
    hasTimeZones: true
}, _9dfh129 = {
    id: "GN",
    displayName: "گینه",
    regionId: "011",
    hasTimeZones: true
}, _9dfh130 = {
    relative: _9dfh63
}, _9dfh131 = {
    relative: _9dfh64
}, _9dfh132 = {
    id: "AW",
    displayName: "آروبا",
    regionId: "029",
    hasTimeZones: true
}, _9dfh133 = {
    id: "DE",
    displayName: "آلمان",
    regionId: "155",
    hasTimeZones: true
}, _9dfh134 = {
    id: "AT",
    displayName: "اتریش",
    regionId: "155",
    hasTimeZones: true
}, _9dfh135 = {
    id: "IR",
    displayName: "ایران",
    regionId: "034",
    hasTimeZones: true
}, _9dfh136 = {
    id: "BH",
    displayName: "بحرین",
    regionId: "145",
    hasTimeZones: true
}, _9dfh137 = {
    id: "BR",
    displayName: "برزیل",
    regionId: "005",
    hasTimeZones: true
}, _9dfh138 = {
    id: "BE",
    displayName: "بلژیک",
    regionId: "155",
    hasTimeZones: true
}, _9dfh139 = {
    id: "BT",
    displayName: "بوتان",
    regionId: "034",
    hasTimeZones: true
}, _9dfh140 = {
    id: "TR",
    displayName: "ترکیه",
    regionId: "145",
    hasTimeZones: true
}, _9dfh141 = {
    id: "TO",
    displayName: "تونگا",
    regionId: "061",
    hasTimeZones: true
}, _9dfh142 = {
    id: "JP",
    displayName: "جاپون",
    regionId: "030",
    hasTimeZones: true
}, _9dfh143 = {
    id: "RU",
    displayName: "روسیه",
    regionId: "151",
    hasTimeZones: true
}, _9dfh144 = {
    id: "WS",
    displayName: "ساموآ",
    regionId: "061",
    hasTimeZones: true
}, _9dfh145 = {
    id: "SN",
    displayName: "سنگال",
    regionId: "011",
    hasTimeZones: true
}, _9dfh146 = {
    id: "SD",
    displayName: "سودان",
    regionId: "015",
    hasTimeZones: true
}, _9dfh147 = {
    id: "SY",
    displayName: "سوریه",
    regionId: "145",
    hasTimeZones: true
}, _9dfh148 = {
    id: "CH",
    displayName: "سوییس",
    regionId: "155",
    hasTimeZones: true
}, _9dfh149 = {
    id: "TF",
    displayName: "فرانسه‌ی جنوبی مناطق",
    hasTimeZones: true
}, _9dfh150 = {
    id: "LA",
    displayName: "لائوس",
    regionId: "035",
    hasTimeZones: true
}, _9dfh151 = {
    id: "LB",
    displayName: "لبنان",
    regionId: "145",
    hasTimeZones: true
}, _9dfh152 = {
    id: "LT",
    displayName: "لتونی",
    regionId: "154",
    hasTimeZones: true
}, _9dfh153 = {
    id: "LS",
    displayName: "لسوتو",
    regionId: "018",
    hasTimeZones: true
}, _9dfh154 = {
    id: "MY",
    displayName: "مالزی",
    regionId: "035",
    hasTimeZones: true
}, _9dfh155 = {
    id: "YT",
    displayName: "مایوت",
    regionId: "014",
    hasTimeZones: true
}, _9dfh156 = {
    id: "MA",
    displayName: "مراکش",
    regionId: "015",
    hasTimeZones: true
}, _9dfh157 = {
    id: "MX",
    displayName: "مکزیک",
    regionId: "013",
    hasTimeZones: true
}, _9dfh158 = {
    id: "KM",
    displayName: "کومور",
    regionId: "014",
    hasTimeZones: true
}, _9dfh159 = {
    id: "GA",
    displayName: "گابون",
    regionId: "017",
    hasTimeZones: true
}, _9dfh160 = {
    id: "GG",
    displayName: "گرنزی",
    regionId: "154",
    hasTimeZones: true
}, _9dfh161 = {
    id: "GU",
    displayName: "گوئام",
    regionId: "057",
    hasTimeZones: true
}, _9dfh162 = {
    id: "GY",
    displayName: "گویان",
    regionId: "005",
    hasTimeZones: true
}, _9dfh163 = {
    id: "GR",
    displayName: "یونان",
    regionId: "039",
    hasTimeZones: true
}, _9dfh164 = {
    d: "G y MMM d–d",
    M: "G y MMM d – MMM d",
    y: "G y MMM d – y MMM d"
}, _9dfh165 = {
    id: "AL",
    displayName: "آلبانی",
    regionId: "039",
    hasTimeZones: true
}, _9dfh166 = {
    id: "AD",
    displayName: "آندورا",
    regionId: "039",
    hasTimeZones: true
}, _9dfh167 = {
    id: "AO",
    displayName: "آنگولا",
    regionId: "017",
    hasTimeZones: true
}, _9dfh168 = {
    id: "ET",
    displayName: "اتیوپی",
    regionId: "014",
    hasTimeZones: true
}, _9dfh169 = {
    id: "ER",
    displayName: "اریتره",
    regionId: "014",
    hasTimeZones: true
}, _9dfh170 = {
    id: "EE",
    displayName: "استونی",
    regionId: "154",
    hasTimeZones: true
}, _9dfh171 = {
    id: "EC",
    displayName: "اکوادر",
    regionId: "005",
    hasTimeZones: true
}, _9dfh172 = {
    id: "IE",
    displayName: "ایرلند",
    regionId: "154",
    hasTimeZones: true
}, _9dfh173 = {
    id: "IS",
    displayName: "ایسلند",
    regionId: "154",
    hasTimeZones: true
}, _9dfh174 = {
    id: "BS",
    displayName: "باهاما",
    regionId: "029",
    hasTimeZones: true
}, _9dfh175 = {
    id: "BM",
    displayName: "برمودا",
    regionId: "021",
    hasTimeZones: true
}, _9dfh176 = {
    id: "BN",
    displayName: "برونئی",
    regionId: "035",
    hasTimeZones: true
}, _9dfh177 = {
    id: "BY",
    displayName: "بلاروس",
    regionId: "151",
    hasTimeZones: true
}, _9dfh178 = {
    id: "BO",
    displayName: "بولیوی",
    regionId: "005",
    hasTimeZones: true
}, _9dfh179 = {
    id: "TH",
    displayName: "تایلند",
    regionId: "035",
    hasTimeZones: true
}, _9dfh180 = {
    id: "TW",
    displayName: "تایوان",
    regionId: "030",
    hasTimeZones: true
}, _9dfh181 = {
    id: "TV",
    displayName: "تووالو",
    regionId: "061",
    hasTimeZones: true
}, _9dfh182 = {
    id: "DJ",
    displayName: "جیبوتی",
    regionId: "014",
    hasTimeZones: true
}, _9dfh183 = {
    id: "RW",
    displayName: "روآندا",
    regionId: "014",
    hasTimeZones: true
}, _9dfh184 = {
    id: "RO",
    displayName: "رومانی",
    regionId: "151",
    hasTimeZones: true
}, _9dfh185 = {
    id: "ZM",
    displayName: "زامبیا",
    regionId: "014",
    hasTimeZones: true
}, _9dfh186 = {
    id: "SO",
    displayName: "سومالی",
    regionId: "014",
    hasTimeZones: true
}, _9dfh187 = {
    id: "FR",
    displayName: "فرانسه",
    regionId: "155",
    hasTimeZones: true
}, _9dfh188 = {
    id: "FI",
    displayName: "فنلاند",
    regionId: "154",
    hasTimeZones: true
}, _9dfh189 = {
    id: "LV",
    displayName: "لاتویا",
    regionId: "154",
    hasTimeZones: true
}, _9dfh190 = {
    id: "PL",
    displayName: "لهستون",
    regionId: "151",
    hasTimeZones: true
}, _9dfh191 = {
    id: "LR",
    displayName: "لیبریا",
    regionId: "011",
    hasTimeZones: true
}, _9dfh192 = {
    id: "MW",
    displayName: "مالاوی",
    regionId: "014",
    hasTimeZones: true
}, _9dfh193 = {
    id: "MV",
    displayName: "مالدیو",
    regionId: "034",
    hasTimeZones: true
}, _9dfh194 = {
    id: "MC",
    displayName: "موناکو",
    regionId: "155",
    hasTimeZones: true
}, _9dfh195 = {
    id: "NR",
    displayName: "نائورو",
    regionId: "057",
    hasTimeZones: true
}, _9dfh196 = {
    id: "NA",
    displayName: "نامبیا",
    regionId: "018",
    hasTimeZones: true
}, _9dfh197 = {
    id: "NG",
    displayName: "نیجریه",
    regionId: "011",
    hasTimeZones: true
}, _9dfh198 = {
    id: "HT",
    displayName: "هاییتی",
    regionId: "029",
    hasTimeZones: true
}, _9dfh199 = {
    id: "VN",
    displayName: "ویتنام",
    regionId: "035",
    hasTimeZones: true
}, _9dfh200 = {
    id: "PW",
    displayName: "پالائو",
    regionId: "057",
    hasTimeZones: true
}, _9dfh201 = {
    id: "PA",
    displayName: "پاناما",
    regionId: "013",
    hasTimeZones: true
}, _9dfh202 = {
    id: "PT",
    displayName: "پرتغال",
    regionId: "039",
    hasTimeZones: true
}, _9dfh203 = {
    id: "KH",
    displayName: "کامبوج",
    regionId: "035",
    hasTimeZones: true
}, _9dfh204 = {
    id: "CM",
    displayName: "کامرون",
    regionId: "017",
    hasTimeZones: true
}, _9dfh205 = {
    id: "CA",
    displayName: "کانادا",
    regionId: "021",
    hasTimeZones: true
}, _9dfh206 = {
    id: "HR",
    displayName: "کرواسی",
    regionId: "039",
    hasTimeZones: true
}, _9dfh207 = {
    id: "CO",
    displayName: "کلمبیا",
    regionId: "005",
    hasTimeZones: true
}, _9dfh208 = {
    id: "XK",
    displayName: "کوزوو",
    regionId: "039",
    hasTimeZones: false
}, _9dfh209 = {
    id: "GM",
    displayName: "گامبیا",
    regionId: "011",
    hasTimeZones: true
}, _9dfh210 = {
    id: "AI",
    displayName: "آنگویلا",
    regionId: "029",
    hasTimeZones: true
}, _9dfh211 = {
    id: "UY",
    displayName: "اروگوئه",
    regionId: "005",
    hasTimeZones: true
}, _9dfh212 = {
    id: "SK",
    displayName: "اسلواکی",
    regionId: "151",
    hasTimeZones: true
}, _9dfh213 = {
    id: "SI",
    displayName: "اسلوونی",
    regionId: "039",
    hasTimeZones: true
}, _9dfh214 = {
    id: "DZ",
    displayName: "الجزیره",
    regionId: "015",
    hasTimeZones: true
}, _9dfh215 = {
    id: "ID",
    displayName: "اندونزی",
    regionId: "035",
    hasTimeZones: true
}, _9dfh216 = {
    id: "UA",
    displayName: "اوکراین",
    regionId: "151",
    hasTimeZones: true
}, _9dfh217 = {
    id: "UG",
    displayName: "اوگاندا",
    regionId: "014",
    hasTimeZones: true
}, _9dfh218 = {
    id: "IT",
    displayName: "ایتالیا",
    regionId: "039",
    hasTimeZones: true
}, _9dfh219 = {
    id: "BD",
    displayName: "بنگلادش",
    regionId: "034",
    hasTimeZones: true
}, _9dfh220 = {
    id: "BI",
    displayName: "بوروندی",
    regionId: "014",
    hasTimeZones: true
}, _9dfh221 = {
    id: "TK",
    displayName: "توکلائو",
    regionId: "061",
    hasTimeZones: true
}, _9dfh222 = {
    id: "DK",
    displayName: "دانمارک",
    regionId: "154",
    hasTimeZones: true
}, _9dfh223 = {
    id: "DM",
    displayName: "دومنیکا",
    regionId: "029",
    hasTimeZones: true
}, _9dfh224 = {
    id: "RE",
    displayName: "رئونیون",
    regionId: "014",
    hasTimeZones: true
}, _9dfh225 = {
    id: "SG",
    displayName: "سنگاپور",
    regionId: "035",
    hasTimeZones: true
}, _9dfh226 = {
    id: "SR",
    displayName: "سورینام",
    regionId: "005",
    hasTimeZones: true
}, _9dfh227 = {
    id: "RS",
    displayName: "صربستون",
    regionId: "039",
    hasTimeZones: true
}, _9dfh228 = {
    id: "SA",
    displayName: "عربستون",
    regionId: "145",
    hasTimeZones: true
}, _9dfh229 = {
    id: "PH",
    displayName: "فیلیپین",
    regionId: "035",
    hasTimeZones: true
}, _9dfh230 = {
    id: "MK",
    displayName: "مقدونیه",
    regionId: "039",
    hasTimeZones: true
}, _9dfh231 = {
    id: "MD",
    displayName: "مولداوی",
    regionId: "151",
    hasTimeZones: true
}, _9dfh232 = {
    id: "MM",
    displayName: "میانمار",
    regionId: "035",
    hasTimeZones: true
}, _9dfh233 = {
    id: "NZ",
    displayName: "نیوزلند",
    regionId: "053",
    hasTimeZones: true
}, _9dfh234 = {
    id: "HN",
    displayName: "هندوراس",
    regionId: "013",
    hasTimeZones: true
}, _9dfh235 = {
    id: "HK",
    displayName: "هنگ کنگ",
    regionId: "030",
    hasTimeZones: true
}, _9dfh236 = {
    id: "VA",
    displayName: "واتیکان",
    regionId: "039",
    hasTimeZones: true
}, _9dfh237 = {
    id: "VU",
    displayName: "وانواتو",
    regionId: "054",
    hasTimeZones: true
}, _9dfh238 = {
    id: "VE",
    displayName: "ونزوئلا",
    regionId: "005",
    hasTimeZones: true
}, _9dfh239 = {
    id: "PK",
    displayName: "پاکستون",
    regionId: "034",
    hasTimeZones: true
}, _9dfh240 = {
    id: "CV",
    displayName: "کیپ ورد",
    regionId: "011",
    hasTimeZones: true
}, _9dfh241 = {
    id: "GD",
    displayName: "گرانادا",
    regionId: "029",
    hasTimeZones: true
}, _9dfh242 = {
    id: "GE",
    displayName: "گرجستون",
    regionId: "145",
    hasTimeZones: true
}, _9dfh243 = {
    id: "GL",
    displayName: "گرینلند",
    regionId: "021",
    hasTimeZones: true
}, _9dfh244 = {
    id: "GP",
    displayName: "گوادلوپ",
    regionId: "029",
    hasTimeZones: true
}, _9dfh245 = {
    relative: _9dfh68
}, _9dfh246 = {
    relative: _9dfh69
}, _9dfh247 = {
    relative: _9dfh70
}, _9dfh248 = {
    id: "AR",
    displayName: "آرژانتین",
    regionId: "005",
    hasTimeZones: true
}, _9dfh249 = {
    id: "AM",
    displayName: "ارمنستون",
    regionId: "145",
    hasTimeZones: true
}, _9dfh250 = {
    id: "UZ",
    displayName: "ازبکستون",
    regionId: "143",
    hasTimeZones: true
}, _9dfh251 = {
    id: "AU",
    displayName: "استرالیا",
    regionId: "053",
    hasTimeZones: true
}, _9dfh252 = {
    id: "IL",
    displayName: "ایسراییل",
    regionId: "145",
    hasTimeZones: true
}, _9dfh253 = {
    id: "ES",
    displayName: "ایسپانیا",
    regionId: "039",
    hasTimeZones: true
}, _9dfh254 = {
    id: "BB",
    displayName: "باربادوس",
    regionId: "029",
    hasTimeZones: true
}, _9dfh255 = {
    id: "GB",
    displayName: "بریتانیا",
    regionId: "154",
    hasTimeZones: true
}, _9dfh256 = {
    id: "TZ",
    displayName: "تانزانیا",
    regionId: "014",
    hasTimeZones: true
}, _9dfh257 = {
    id: "JM",
    displayName: "جاماییکا",
    regionId: "029",
    hasTimeZones: true
}, _9dfh258 = {
    id: "GI",
    displayName: "جبل طارق",
    regionId: "039",
    hasTimeZones: true
}, _9dfh259 = {
    id: "ZW",
    displayName: "زیمبابوه",
    regionId: "014",
    hasTimeZones: true
}, _9dfh260 = {
    id: "LK",
    displayName: "سریلانکا",
    regionId: "034",
    hasTimeZones: true
}, _9dfh261 = {
    id: "SH",
    displayName: "سنت هلنا",
    regionId: "011",
    hasTimeZones: true
}, _9dfh262 = {
    id: "SZ",
    displayName: "سوازیلند",
    regionId: "018",
    hasTimeZones: true
}, _9dfh263 = {
    id: "SL",
    displayName: "سیرالئون",
    regionId: "011",
    hasTimeZones: true
}, _9dfh264 = {
    id: "KZ",
    displayName: "قزاقستون",
    regionId: "143",
    hasTimeZones: true
}, _9dfh265 = {
    id: "HU",
    displayName: "مجارستون",
    regionId: "151",
    hasTimeZones: true
}, _9dfh266 = {
    id: "MN",
    displayName: "مغولستون",
    regionId: "030",
    hasTimeZones: true
}, _9dfh267 = {
    id: "MR",
    displayName: "موریتانی",
    regionId: "011",
    hasTimeZones: true
}, _9dfh268 = {
    id: "MZ",
    displayName: "موزامبیک",
    regionId: "014",
    hasTimeZones: true
}, _9dfh269 = {
    id: "MS",
    displayName: "مونتسرات",
    regionId: "029",
    hasTimeZones: true
}, _9dfh270 = {
    id: "FM",
    displayName: "میکرونزی",
    regionId: "057",
    hasTimeZones: true
}, _9dfh271 = {
    id: "HM",
    displayName: "هارد و مک‌دونالد جزایر",
    hasTimeZones: false
}, _9dfh272 = {
    id: "PY",
    displayName: "پاراگوئه",
    regionId: "005",
    hasTimeZones: true
}, _9dfh273 = {
    id: "CW",
    displayName: "کوراسائو",
    regionId: "029",
    hasTimeZones: true
}, _9dfh274 = {
    id: "KI",
    displayName: "کیریباتی",
    regionId: "057",
    hasTimeZones: true
}, _9dfh275 = {
    id: "GT",
    displayName: "گواتمالا",
    regionId: "013",
    hasTimeZones: true
}, _9dfh276 = {
    id: "AZ",
    displayName: "آذربایجون",
    regionId: "145",
    hasTimeZones: true
}, _9dfh277 = {
    id: "AF",
    displayName: "افغانستون",
    regionId: "034",
    hasTimeZones: true
}, _9dfh278 = {
    id: "BG",
    displayName: "بلغارستون",
    regionId: "151",
    hasTimeZones: true
}, _9dfh279 = {
    id: "BW",
    displayName: "بوتساوانا",
    regionId: "018",
    hasTimeZones: true
}, _9dfh280 = {
    id: "TJ",
    displayName: "تاجیکستون",
    regionId: "143",
    hasTimeZones: true
}, _9dfh281 = {
    id: "SM",
    displayName: "سن مارینو",
    regionId: "039",
    hasTimeZones: true
}, _9dfh282 = {
    id: "LC",
    displayName: "سنت لوسیا",
    regionId: "029",
    hasTimeZones: true
}, _9dfh283 = {
    id: "SX",
    displayName: "سنت مارتن",
    regionId: "029",
    hasTimeZones: true
}, _9dfh284 = {
    id: "CI",
    displayName: "عاج ِساحل",
    regionId: "011",
    hasTimeZones: true
}, _9dfh285 = {
    id: "EH",
    displayName: "غربی صحرا",
    regionId: "015",
    hasTimeZones: true
}, _9dfh286 = {
    id: "KG",
    displayName: "قرقیزستون",
    regionId: "143",
    hasTimeZones: true
}, _9dfh287 = {
    id: "IM",
    displayName: "من ِجزیره",
    regionId: "154",
    hasTimeZones: true
}, _9dfh288 = {
    id: "MU",
    displayName: "مورى تيوس",
    regionId: "014",
    hasTimeZones: true
}, _9dfh289 = {
    id: "PR",
    displayName: "پورتوریکو",
    regionId: "029",
    hasTimeZones: true
}, _9dfh290 = {
    id: "CZ",
    displayName: "چک جمهوری",
    regionId: "151",
    hasTimeZones: true
}, _9dfh291 = {
    id: "CR",
    displayName: "کاستاریکا",
    regionId: "013",
    hasTimeZones: true
}, _9dfh292 = {
    id: "CK",
    displayName: "کوک جزایر",
    regionId: "061",
    hasTimeZones: true
}, _9dfh293 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _9dfh294 = {
    id: "AX",
    displayName: "آلند جزیره",
    regionId: "154",
    hasTimeZones: true
}, _9dfh295 = {
    id: "SV",
    displayName: "السالوادور",
    regionId: "013",
    hasTimeZones: true
}, _9dfh296 = {
    id: "TM",
    displayName: "ترکمونستون",
    regionId: "143",
    hasTimeZones: true
}, _9dfh297 = {
    id: "TL",
    displayName: "تیمور شرقی",
    regionId: "035",
    hasTimeZones: true
}, _9dfh298 = {
    id: "KR",
    displayName: "جنوبی کُره",
    regionId: "030",
    hasTimeZones: true
}, _9dfh299 = {
    id: "MF",
    displayName: "سنت مارتین",
    regionId: "029",
    hasTimeZones: true
}, _9dfh300 = {
    id: "KP",
    displayName: "شمالی کُره",
    regionId: "030",
    hasTimeZones: true
}, _9dfh301 = {
    id: "FO",
    displayName: "فارو جزایر",
    regionId: "154",
    hasTimeZones: true
}, _9dfh302 = {
    id: "LU",
    displayName: "لوکزامبورگ",
    regionId: "155",
    hasTimeZones: true
}, _9dfh303 = {
    id: "MG",
    displayName: "ماداگاسکار",
    regionId: "014",
    hasTimeZones: true
}, _9dfh304 = {
    id: "ME",
    displayName: "مونته‌نگرو",
    regionId: "039",
    hasTimeZones: true
}, _9dfh305 = {
    id: "NI",
    displayName: "نیکاراگوئه",
    regionId: "013",
    hasTimeZones: true
}, _9dfh306 = {
    id: "SS",
    displayName: "جنوبی سودان",
    regionId: "014",
    hasTimeZones: true
}, _9dfh307 = {
    id: "BL",
    displayName: "سنت بارتلمی",
    regionId: "029",
    hasTimeZones: true
}, _9dfh308 = {
    id: "GW",
    displayName: "گینه بیسائو",
    regionId: "011",
    hasTimeZones: true
}, _9dfh309 = {
    id: "142",
    displayName: "آسیا",
    hasTimeZones: false,
    parentRegionId: "001"
}, _9dfh310 = {
    id: "GQ",
    displayName: "استوایی گینه",
    regionId: "017",
    hasTimeZones: true
}, _9dfh311 = {
    id: "BF",
    displayName: "بورکینا فاسو",
    regionId: "011",
    hasTimeZones: true
}, _9dfh312 = {
    id: "ZA",
    displayName: "جنوبی افریقا",
    regionId: "018",
    hasTimeZones: true
}, _9dfh313 = {
    id: "SB",
    displayName: "سلیمون جزیره",
    regionId: "054",
    hasTimeZones: true
}, _9dfh314 = {
    id: "LI",
    displayName: "لیختن اشتاین",
    regionId: "155",
    hasTimeZones: true
}, _9dfh315 = {
    id: "MH",
    displayName: "مارشال جزایر",
    regionId: "057",
    hasTimeZones: true
}, _9dfh316 = {
    id: "US",
    displayName: "متحده ایالات",
    regionId: "021",
    hasTimeZones: true
}, _9dfh317 = {
    id: "CD",
    displayName: "کنگو کینشاسا",
    regionId: "017",
    hasTimeZones: true
}, _9dfh318 = {
    id: "UM",
    displayName: "آمریکای پَرتِ‌پِلا جزیره‌ئون",
    hasTimeZones: true
}, _9dfh319 = {
    id: "150",
    displayName: "اروپا",
    hasTimeZones: false,
    parentRegionId: "001"
}, _9dfh320 = {
    id: "NF",
    displayName: "نورفولک جزیره",
    regionId: "053",
    hasTimeZones: true
}, _9dfh321 = {
    id: "NC",
    displayName: "نیو کالیدونیا",
    regionId: "054",
    hasTimeZones: true
}, _9dfh322 = {
    id: "PG",
    displayName: "پاپوا نو گینه",
    regionId: "054",
    hasTimeZones: true
}, _9dfh323 = {
    id: "CG",
    displayName: "کنگو برازاویل",
    regionId: "017",
    hasTimeZones: true
}, _9dfh324 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _9dfh325 = {
    id: "002",
    displayName: "آفریقا",
    hasTimeZones: false,
    parentRegionId: "001"
}, _9dfh326 = {
    id: "019",
    displayName: "آمریکا",
    hasTimeZones: false,
    parentRegionId: "001"
}, _9dfh327 = {
    id: "VI",
    displayName: "آمریکای ویرجین",
    regionId: "029",
    hasTimeZones: true
}, _9dfh328 = {
    id: "AS",
    displayName: "آمریکای ِساموآ",
    regionId: "061",
    hasTimeZones: true
}, _9dfh329 = {
    id: "DO",
    displayName: "دومنیکن جمهوری",
    regionId: "029",
    hasTimeZones: true
}, _9dfh330 = {
    id: "PS",
    displayName: "فلسطین ِسرزمین",
    regionId: "145",
    hasTimeZones: true
}, _9dfh331 = {
    id: "054",
    displayName: "ملانزی",
    hasTimeZones: false,
    parentRegionId: "009"
}, _9dfh332 = {
    id: "WF",
    displayName: "والیس و فوتونا",
    regionId: "061",
    hasTimeZones: true
}, _9dfh333 = {
    id: "PN",
    displayName: "پیتکارین جزایر",
    regionId: "061",
    hasTimeZones: true
}, _9dfh334 = {
    id: "KY",
    displayName: "کیمن جزیره‌ئون",
    regionId: "029",
    hasTimeZones: true
}, _9dfh335 = {
    id: "IO",
    displayName: "بریتانیای هند ِاوقیانوس ِمناطق",
    hasTimeZones: true
}, _9dfh336 = {
    id: "BA",
    displayName: "بوسنی و هرزگوین",
    regionId: "039",
    hasTimeZones: true
}, _9dfh337 = {
    id: "PM",
    displayName: "سن پییر و میکلن",
    regionId: "021",
    hasTimeZones: true
}, _9dfh338 = {
    id: "KN",
    displayName: "سنت کیتس و نویس",
    regionId: "029",
    hasTimeZones: true
}, _9dfh339 = {
    id: "GF",
    displayName: "فرانسه‌ی ِگویان",
    regionId: "005",
    hasTimeZones: true
}, _9dfh340 = {
    id: "029",
    displayName: "کاراییب",
    hasTimeZones: false,
    parentRegionId: "019"
}, _9dfh341 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _9dfh342 = {
    id: "VG",
    displayName: "بریتانیای ویرجین",
    regionId: "029",
    hasTimeZones: true
}, _9dfh343 = {
    id: "MO",
    displayName: "ماکائو (چین دله)",
    regionId: "030",
    hasTimeZones: true
}, _9dfh344 = {
    id: "061",
    displayName: "پولی‌نزی",
    hasTimeZones: false,
    parentRegionId: "009"
}, _9dfh345 = {
    id: "AG",
    displayName: "آنتیگوا و باربودا",
    regionId: "029",
    hasTimeZones: true
}, _9dfh346 = {
    id: "053",
    displayName: "اوسترالزی",
    hasTimeZones: false,
    parentRegionId: "009"
}, _9dfh347 = {
    id: "TT",
    displayName: "ترینیداد و توباگو",
    regionId: "029",
    hasTimeZones: true
}, _9dfh348 = {
    id: "030",
    displayName: "شرقی آسیا",
    hasTimeZones: false,
    parentRegionId: "142"
}, _9dfh349 = {
    id: "145",
    displayName: "غربی آسیا",
    hasTimeZones: false,
    parentRegionId: "142"
}, _9dfh350 = {
    id: "FK",
    displayName: "فالکلند جزیره‌ئون",
    regionId: "005",
    hasTimeZones: true
}, _9dfh351 = {
    id: "PF",
    displayName: "فرانسه‌ی پولی‌نزی",
    regionId: "061",
    hasTimeZones: true
}, _9dfh352 = {
    id: "AE",
    displayName: "متحده عربی امارات",
    regionId: "145",
    hasTimeZones: true
}, _9dfh353 = {
    id: "009",
    displayName: "اوقیانوسیه",
    hasTimeZones: false,
    parentRegionId: "001"
}, _9dfh354 = {
    id: "034",
    displayName: "جنوبی آسیا",
    hasTimeZones: false,
    parentRegionId: "142"
}, _9dfh355 = {
    id: "ST",
    displayName: "سائوتومه و پرینسیپ",
    regionId: "017",
    hasTimeZones: true
}, _9dfh356 = {
    id: "151",
    displayName: "شرقی اروپا",
    hasTimeZones: false,
    parentRegionId: "150"
}, _9dfh357 = {
    id: "155",
    displayName: "غربی اروپا",
    hasTimeZones: false,
    parentRegionId: "150"
}, _9dfh358 = {
    id: "MQ",
    displayName: "مارتینیک جزیره‌ئون",
    regionId: "029",
    hasTimeZones: true
}, _9dfh359 = {
    id: "143",
    displayName: "میونی آسیا",
    hasTimeZones: false,
    parentRegionId: "142"
}, _9dfh360 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _9dfh361 = {
    id: "039",
    displayName: "جنوبی اروپا",
    hasTimeZones: false,
    parentRegionId: "150"
}, _9dfh362 = {
    id: "GS",
    displayName: "جنوبی جورجیا و جنوبی ساندویچ جزایر",
    hasTimeZones: true
}, _9dfh363 = {
    id: "SJ",
    displayName: "سوالبارد و يان ماين",
    regionId: "154",
    hasTimeZones: true
}, _9dfh364 = {
    id: "014",
    displayName: "شرقی آفریقا",
    hasTimeZones: false,
    parentRegionId: "002"
}, _9dfh365 = {
    id: "154",
    displayName: "شمالی اروپا",
    hasTimeZones: false,
    parentRegionId: "150"
}, _9dfh366 = {
    id: "MP",
    displayName: "شمالی ماریانا جزایر",
    regionId: "057",
    hasTimeZones: true
}, _9dfh367 = {
    id: "011",
    displayName: "غربی آفریقا",
    hasTimeZones: false,
    parentRegionId: "002"
}, _9dfh368 = {
    id: "TC",
    displayName: "تورکس و کایکوس جزایر",
    regionId: "029",
    hasTimeZones: true
}, _9dfh369 = {
    id: "018",
    displayName: "جنوبی آفریقا",
    hasTimeZones: false,
    parentRegionId: "002"
}, _9dfh370 = {
    id: "005",
    displayName: "جنوبی آمریکا",
    hasTimeZones: false,
    parentRegionId: "019"
}, _9dfh371 = {
    id: "VC",
    displayName: "سنت وینسنت و گرنادین",
    regionId: "029",
    hasTimeZones: true
}, _9dfh372 = {
    id: "021",
    displayName: "شمالی امریکا",
    hasTimeZones: false,
    parentRegionId: "019"
}, _9dfh373 = {
    id: "015",
    displayName: "شمالی ۀفریقا",
    hasTimeZones: false,
    parentRegionId: "002"
}, _9dfh374 = {
    id: "CF",
    displayName: "مرکزی آفریقای جمهوری",
    regionId: "017",
    hasTimeZones: true
}, _9dfh375 = {
    id: "017",
    displayName: "میونی آفریقا",
    hasTimeZones: false,
    parentRegionId: "002"
}, _9dfh376 = {
    id: "013",
    displayName: "میونی آمریکا",
    hasTimeZones: false,
    parentRegionId: "019"
}, _9dfh377 = {
    id: "BQ",
    displayName: "هلند ِکاراییبی جزایر",
    regionId: "029",
    hasTimeZones: true
}, _9dfh378 = {
    abbreviated: {
        am: "AM",
        pm: "PM"
    },
    narrow: {
        am: "AM",
        pm: "PM"
    },
    wide: {
        am: "AM",
        pm: "PM"
    }
}, _9dfh379 = {
    id: "057",
    displayName: "میکرونزی منقطه",
    hasTimeZones: false,
    parentRegionId: "009"
}, _9dfh380 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _9dfh381 = {
    d: "GGGGG y-MM-dd – y-MM-dd",
    M: "GGGGG y-MM-dd – y-MM-dd",
    y: "GGGGG y-MM-dd – y-MM-dd"
}, _9dfh382 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _9dfh383 = {
    id: "035",
    displayName: "آسیای ِجنوب‌شرقی‌وَر",
    hasTimeZones: false,
    parentRegionId: "142"
}, _9dfh384 = {
    d: "G y MMM d, E – MMM d, E",
    M: "G y MMM d, E – MMM d, E",
    y: "G y MMM d, E – y MMM d, E"
}, _9dfh385 = {
    abbreviated: _9dfh6,
    narrow: [ "1", "2", "3", "4" ],
    wide: _9dfh6
}, _9dfh386 = {
    displayName: "سال",
    relativeTime: _9dfh79
}, _9dfh387 = {
    displayName: "ربع",
    relativeTime: _9dfh80
}, _9dfh388 = {
    displayName: "ماه",
    relativeTime: _9dfh81
}, _9dfh389 = {
    displayName: "روز",
    relativeTime: _9dfh82
}, _9dfh390 = {
    displayName: "هفته",
    relativeTime: _9dfh88
}, _9dfh391 = {
    displayName: "ساعت",
    relativeTime: _9dfh89
}, _9dfh392 = {
    displayName: "دَقه",
    relativeTime: _9dfh90
}, _9dfh393 = [ "ژانویه", "فوریه", "مارس", "آوریل", "مه", "ژوئن", "ژوئیه", "اوت", "سپتامبر", "اکتبر", "نوامبر", "دسامبر" ], _9dfh394 = {
    displayName: "دقیقه",
    relativeTime: _9dfh92
}, _9dfh395 = {
    displayName: "ساعِت",
    relativeTime: _9dfh103
}, _9dfh396 = {
    displayName: "ثانیه",
    relativeTime: _9dfh104
}, _9dfh397 = {
    d: "GGGGG y-MM-dd, E – y-MM-dd, E",
    M: "GGGGG y-MM-dd, E – y-MM-dd, E",
    y: "GGGGG y-MM-dd, E – y-MM-dd, E"
}, _9dfh398 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _9dfh399 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _9dfh400 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _9dfh401 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _9dfh402 = {
    displayName: "ثانیه",
    relative: [ "now" ],
    relativeTime: _9dfh104
}, _9dfh403 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _9dfh404 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _9dfh405 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _9dfh406 = {
    displayName: "روز",
    relative: _9dfh45,
    relativeTime: _9dfh82
}, _9dfh407 = {
    displayName: "سال",
    relative: _9dfh50,
    relativeTime: _9dfh79
}, _9dfh408 = {
    displayName: "ماه",
    relative: _9dfh52,
    relativeTime: _9dfh81
}, _9dfh409 = {
    displayName: "هفته",
    relative: _9dfh55,
    relativeTime: _9dfh88
}, _9dfh410 = {
    displayName: "ربع",
    relative: _9dfh74,
    relativeTime: _9dfh80
}, _9dfh411 = {
    format: _9dfh378,
    standAlone: _9dfh378
}, _9dfh412 = {
    format: _9dfh324,
    numeric: _9dfh16,
    standAlone: _9dfh324
}, _9dfh413 = {
    abbreviated: _9dfh53,
    narrow: _9dfh39,
    wide: _9dfh53,
    "short": _9dfh53
}, _9dfh414 = {
    format: _9dfh385,
    standAlone: _9dfh385
}, _9dfh415 = {
    abbreviated: _9dfh341,
    narrow: _9dfh65,
    wide: _9dfh341
}, _9dfh416 = {
    abbreviated: _9dfh360,
    narrow: _9dfh360,
    wide: _9dfh360
}, _9dfh417 = {
    format: _9dfh416
}, _9dfh418 = {
    abbreviated: _9dfh393,
    narrow: _9dfh65,
    wide: _9dfh393
}, _9dfh419 = {
    abbreviated: _9dfh399,
    narrow: _9dfh84,
    wide: _9dfh399
}, _9dfh420 = {
    abbreviated: _9dfh400,
    narrow: _9dfh65,
    wide: _9dfh400
}, _9dfh421 = {
    abbreviated: _9dfh401,
    narrow: _9dfh84,
    wide: _9dfh401
}, _9dfh422 = {
    abbreviated: _9dfh398,
    narrow: _9dfh65,
    wide: _9dfh405
}, _9dfh423 = {
    abbreviated: _9dfh403,
    narrow: _9dfh84,
    wide: _9dfh403
}, _9dfh424 = {
    abbreviated: _9dfh404,
    narrow: _9dfh65,
    wide: _9dfh404
}, _9dfh425 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _9dfh426 = {
    format: _9dfh413,
    standAlone: _9dfh413
}, _9dfh427 = {
    format: _9dfh415,
    standAlone: _9dfh415
}, _9dfh428 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _9dfh429 = {
    format: _9dfh418,
    standAlone: _9dfh418
}, _9dfh430 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _9dfh431 = {
    format: _9dfh422,
    standAlone: _9dfh422
}, _9dfh432 = {
    basic: _9dfh425,
    cldr: _9dfh428
}, _9dfh433 = {
    d: {
        d: "d–d"
    },
    h: _9dfh33,
    H: {
        H: "HH–HH"
    },
    hm: _9dfh66,
    Hm: _9dfh42,
    hmv: _9dfh87,
    Hmv: _9dfh46,
    hv: _9dfh38,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _9dfh47,
    MEd: _9dfh59,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _9dfh40,
    MMMEd: _9dfh60,
    y: {
        y: "U–U"
    },
    yM: _9dfh43,
    yMd: _9dfh293,
    yMEd: _9dfh382,
    yMMM: _9dfh44,
    yMMMd: _9dfh83,
    yMMMEd: _9dfh380,
    yMMMM: _9dfh49
}, _9dfh434 = {
    d: {
        d: "d–d"
    },
    h: _9dfh33,
    H: {
        H: "HH–HH"
    },
    hm: _9dfh66,
    Hm: _9dfh42,
    hmv: _9dfh87,
    Hmv: _9dfh46,
    hv: _9dfh38,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _9dfh47,
    MEd: _9dfh59,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _9dfh40,
    MMMEd: _9dfh60,
    y: {
        y: "G y–y"
    },
    yM: _9dfh54,
    yMd: _9dfh381,
    yMEd: _9dfh397,
    yMMM: _9dfh48,
    yMMMd: _9dfh164,
    yMMMEd: _9dfh384,
    yMMMM: _9dfh51
}, _9dfh435 = {
    abbreviated: _9dfh430,
    narrow: _9dfh430,
    wide: _9dfh430
}, _9dfh436 = {
    format: _9dfh435
}, _9dfh437 = {
    era: _9dfh7,
    year: _9dfh407,
    "year-short": _9dfh386,
    "year-narrow": _9dfh386,
    quarter: _9dfh410,
    "quarter-short": _9dfh387,
    "quarter-narrow": _9dfh387,
    month: _9dfh408,
    "month-short": _9dfh388,
    "month-narrow": _9dfh388,
    week: _9dfh409,
    "week-short": _9dfh390,
    "week-narrow": _9dfh390,
    day: _9dfh406,
    "day-short": _9dfh389,
    "day-narrow": _9dfh389,
    weekday: _9dfh36,
    dayperiod: _9dfh34,
    hour: _9dfh395,
    "hour-short": _9dfh391,
    "hour-narrow": _9dfh391,
    minute: _9dfh394,
    "minute-short": _9dfh392,
    "minute-narrow": _9dfh392,
    second: _9dfh402,
    "second-short": _9dfh396,
    "second-narrow": _9dfh396,
    zone: _9dfh37,
    sun: _9dfh130,
    "sun-short": _9dfh93,
    "sun-narrow": _9dfh130,
    mon: _9dfh131,
    "mon-short": _9dfh131,
    "mon-narrow": _9dfh131,
    tue: _9dfh245,
    "tue-short": _9dfh245,
    "tue-narrow": _9dfh245,
    wed: _9dfh246,
    "wed-short": _9dfh246,
    "wed-narrow": _9dfh246,
    thu: _9dfh247,
    "thu-short": _9dfh247,
    "thu-narrow": _9dfh247,
    fri: _9dfh76,
    "fri-short": _9dfh76,
    "fri-narrow": _9dfh76,
    sat: _9dfh77,
    "sat-short": _9dfh77,
    "sat-narrow": _9dfh77
}, _9dfh438 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _9dfh437
}, _9dfh439 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _9dfh440 = {
    dayParts: _9dfh417,
    days: _9dfh436,
    months: _9dfh436,
    years: _9dfh436,
    zodiacs: _9dfh417
}, _9dfh441 = {
    dateFormats: P.calendars.buddhist.dateFormats,
    datePartsOrder: "ymd",
    dateIntervalFormats: _9dfh434,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _9dfh426,
    dayPeriods: _9dfh411,
    monthNames: _9dfh431,
    eraNames: _9dfh41,
    quarterNames: _9dfh414,
    fields: _9dfh437
}, _9dfh442 = {
    dateFormats: _9dfh432,
    datePartsOrder: "md",
    dateIntervalFormats: _9dfh433,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _9dfh426,
    dayPeriods: _9dfh411,
    cyclicNames: _9dfh440,
    monthNames: _9dfh427,
    monthPatterns: _9dfh412,
    quarterNames: _9dfh414,
    fields: _9dfh437
};

inter.id = "mzn";

inter.delimiters = {
    quotationStart: "«",
    quotationEnd: "»",
    alternateQuotationStart: "‹",
    alternateQuotationEnd: "›"
};

inter.listPatterns = {
    "default": P.listPatterns.default,
    unit: P.listPatterns.default,
    unitNarrow: P.listPatterns.default,
    unitShort: P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                other: "{0} m/s²"
            },
            angleRevolution: {
                other: "{0} rev"
            },
            angleRadian: {
                other: "{0} rad"
            },
            angleDegree: {
                other: "{0}°"
            },
            angleArcMinute: {
                other: "{0}′"
            },
            angleArcSecond: {
                other: "{0}″"
            },
            concentrKarat: {
                other: "{0} kt"
            },
            consumptionLiterPerKilometer: {
                other: "{0} L/km"
            },
            "consumptionLiterPer-100kilometers": _9dfh1,
            consumptionMilePerGallon: {
                other: "{0} mpg"
            },
            digitalTerabyte: _9dfh2,
            digitalTerabit: {
                other: "{0} ترابیت"
            },
            digitalGigabyte: _9dfh17,
            digitalGigabit: _9dfh3,
            digitalMegabyte: _9dfh4,
            digitalMegabit: {
                other: "{0} مگابیت"
            },
            digitalKilobyte: _9dfh18,
            digitalKilobit: _9dfh5,
            digitalByte: {
                other: "{0} بایت"
            },
            digitalBit: {
                other: "{0} بیت"
            },
            durationCentury: {
                other: "{0} قرن"
            },
            durationYear: {
                other: "{0} سال"
            },
            durationMonth: {
                other: "{0} ماه"
            },
            durationWeek: {
                other: "{0} هفته"
            },
            durationDay: {
                other: "{0} روز"
            },
            durationHour: {
                other: "{0} ساعِت"
            },
            durationMinute: {
                other: "{0} دقیقه"
            },
            durationSecond: {
                other: "{0} ثانیه"
            },
            durationMillisecond: _9dfh31,
            durationMicrosecond: _9dfh32,
            durationNanosecond: _9dfh25,
            electricAmpere: {
                other: "{0} آمپر"
            },
            electricMilliampere: {
                other: "{0} میلی‌آمپر"
            },
            electricOhm: {
                other: "{0} Ω"
            },
            electricVolt: {
                other: "{0} ولت"
            },
            energyKilocalorie: {
                other: "{0} کیلوکالری"
            },
            energyCalorie: {
                other: "{0} کالری"
            },
            energyFoodcalorie: {
                other: "{0} کالری"
            },
            energyKilojoule: {
                other: "{0} کیلوژول"
            },
            energyJoule: {
                other: "{0} ژول"
            },
            energyKilowattHour: {
                other: "{0} کیلووات-ساعت"
            },
            frequencyGigahertz: {
                other: "{0} گیگاهرتز"
            },
            frequencyMegahertz: {
                other: "{0} مگاهرتز"
            },
            frequencyKilohertz: {
                other: "{0} کیلوهرتز"
            },
            frequencyHertz: {
                other: "{0} هرتز"
            },
            lightLux: {
                other: "{0} lx"
            },
            massMetricTon: {
                other: "{0} متریک تُن"
            },
            massKilogram: {
                other: "{0} کیلوگرم"
            },
            massGram: {
                other: "{0} گرم"
            },
            massMilligram: {
                other: "{0} میلی‌گرم"
            },
            massMicrogram: {
                other: "{0} میکروگرم"
            },
            massTon: {
                other: "{0} تُن"
            },
            massPound: {
                other: "{0} پوند"
            },
            massOunce: {
                other: "{0} اونس"
            },
            massOunceTroy: {
                other: "{0} تروی اونس"
            },
            massCarat: {
                other: "{0} قیراط"
            },
            powerGigawatt: {
                other: "{0} گیگاوات"
            },
            powerMegawatt: {
                other: "{0} مگاوات"
            },
            powerKilowatt: {
                other: "{0} کیلووات"
            },
            powerWatt: {
                other: "{0} وات"
            },
            powerMilliwatt: {
                other: "{0} میلی‌وات"
            },
            powerHorsepower: {
                other: "{0} اسب بخار"
            },
            speedKilometerPerHour: {
                other: "{0} کیلومتر بر ساعت"
            },
            speedMeterPerSecond: {
                other: "{0} متر بر ثانیه"
            },
            speedMilePerHour: {
                other: "{0} مایل بر ساعت"
            },
            speedKnot: {
                other: "{0} گره"
            },
            temperatureGeneric: {
                other: "{0}°"
            },
            temperatureCelsius: {
                other: "{0} درجه سلسیوس"
            },
            temperatureFahrenheit: {
                other: "{0} فارنهایت"
            },
            temperatureKelvin: {
                other: "{0} کلوین"
            },
            volumeCubicKilometer: {
                other: "{0} کیلومتر مکعب"
            },
            volumeCubicMeter: {
                other: "{0} متر مکعب"
            },
            volumeCubicCentimeter: {
                other: "{0} سانتی‌متر مکعب"
            },
            volumeCubicMile: {
                other: "{0} مایل مکعب"
            },
            volumeCubicYard: {
                other: "{0} یارد مکعب"
            },
            volumeCubicFoot: {
                other: "{0} فوت مکعب"
            },
            volumeCubicInch: {
                other: "{0} اینچ مکعب"
            },
            volumeMegaliter: {
                other: "{0} مگالیتر"
            },
            volumeHectoliter: {
                other: "{0} هکتولیتر"
            },
            volumeLiter: {
                other: "{0} لیتر"
            },
            volumeDeciliter: {
                other: "{0} دسی‌لیتر"
            },
            volumeCentiliter: {
                other: "{0} سانتی‌لیتر"
            },
            volumeMilliliter: {
                other: "{0} میلی‌لیتر"
            },
            volumePintMetric: {
                other: "{0} متریک پاینت"
            },
            volumeCupMetric: {
                other: "{0} متریک دَییل"
            },
            volumeAcreFoot: {
                other: "{0} آکر-فوت"
            },
            volumeGallon: {
                other: "{0} گالون"
            },
            volumeQuart: {
                other: "{0} ربع"
            },
            volumePint: {
                other: "{0} پاینت"
            },
            volumeCup: {
                other: "{0} دَییل"
            },
            volumeFluidOunce: {
                other: "{0} فلوید اونس"
            },
            volumeTablespoon: {
                other: "{0}تا کال"
            },
            volumeTeaspoon: {
                other: "{0} چایی‌خاری کچه"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                other: "{0} m/s²"
            },
            angleRevolution: {
                other: "{0} rev"
            },
            angleRadian: {
                other: "{0} rad"
            },
            angleDegree: {
                other: "{0}°"
            },
            angleArcMinute: {
                other: "{0}′"
            },
            angleArcSecond: {
                other: "{0}″"
            },
            concentrKarat: {
                other: "{0} kt"
            },
            consumptionLiterPerKilometer: {
                other: "{0} L/km"
            },
            "consumptionLiterPer-100kilometers": _9dfh1,
            consumptionMilePerGallon: {
                other: "{0} mpg"
            },
            digitalTerabyte: _9dfh2,
            digitalTerabit: {
                other: "{0} ترابیت"
            },
            digitalGigabyte: _9dfh17,
            digitalGigabit: _9dfh3,
            digitalMegabyte: _9dfh4,
            digitalMegabit: {
                other: "{0} مگابیت"
            },
            digitalKilobyte: _9dfh18,
            digitalKilobit: _9dfh5,
            digitalByte: {
                other: "{0} بایت"
            },
            digitalBit: {
                other: "{0} بیت"
            },
            durationCentury: {
                other: "{0} قرن"
            },
            durationYear: {
                other: "{0} سال"
            },
            durationMonth: {
                other: "{0} ماه"
            },
            durationWeek: {
                other: "{0} هفته"
            },
            durationDay: {
                other: "{0} روز"
            },
            durationMinute: {
                other: "{0} دَقه"
            },
            durationSecond: {
                other: "{0} ثانیه"
            },
            durationMillisecond: _9dfh31,
            durationMicrosecond: _9dfh32,
            durationNanosecond: _9dfh25,
            electricAmpere: {
                other: "{0} A"
            },
            electricMilliampere: {
                other: "{0} mA"
            },
            electricOhm: {
                other: "{0} Ω"
            },
            electricVolt: {
                other: "{0} V"
            },
            energyKilocalorie: {
                other: "{0} kcal"
            },
            energyCalorie: {
                other: "{0} cal"
            },
            energyFoodcalorie: {
                other: "{0} Cal"
            },
            energyKilojoule: {
                other: "{0} kJ"
            },
            energyJoule: {
                other: "{0} J"
            },
            energyKilowattHour: {
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                other: "{0} kHz"
            },
            frequencyHertz: {
                other: "{0} Hz"
            },
            lightLux: {
                other: "{0} lx"
            },
            massMetricTon: {
                other: "{0} t"
            },
            massKilogram: {
                other: "{0} kg"
            },
            massGram: {
                other: "{0} g"
            },
            massMilligram: {
                other: "{0} mg"
            },
            massMicrogram: {
                other: "{0} µg"
            },
            massTon: {
                other: "{0} tn"
            },
            massPound: {
                other: "{0} lb"
            },
            massOunce: {
                other: "{0} oz"
            },
            massOunceTroy: {
                other: "{0} oz t"
            },
            massCarat: {
                other: "{0} قیراط"
            },
            powerGigawatt: {
                other: "{0} GW"
            },
            powerMegawatt: {
                other: "{0} MW"
            },
            powerKilowatt: {
                other: "{0} kW"
            },
            powerWatt: {
                other: "{0} W"
            },
            powerMilliwatt: {
                other: "{0} mW"
            },
            powerHorsepower: {
                other: "{0} hp"
            },
            speedKilometerPerHour: {
                other: "{0} km/h"
            },
            speedMeterPerSecond: {
                other: "{0} m/s"
            },
            speedMilePerHour: {
                other: "{0} mi/h"
            },
            speedKnot: {
                other: "{0} kn"
            },
            temperatureGeneric: {
                other: "{0}°"
            },
            temperatureCelsius: {
                other: "{0}°C"
            },
            temperatureFahrenheit: {
                other: "{0}°F"
            },
            temperatureKelvin: {
                other: "{0} K"
            },
            volumeCubicKilometer: {
                other: "{0} km³"
            },
            volumeCubicMeter: {
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                other: "{0} cm³"
            },
            volumeCubicMile: {
                other: "{0} mi³"
            },
            volumeCubicYard: {
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                other: "{0} ft³"
            },
            volumeCubicInch: {
                other: "{0} in³"
            },
            volumeMegaliter: {
                other: "{0} ML"
            },
            volumeHectoliter: {
                other: "{0} hL"
            },
            volumeLiter: {
                other: "{0} لیتر"
            },
            volumeDeciliter: {
                other: "{0} dL"
            },
            volumeCentiliter: {
                other: "{0} cL"
            },
            volumeMilliliter: {
                other: "{0} mL"
            },
            volumePintMetric: {
                other: "{0} mpt"
            },
            volumeCupMetric: {
                other: "{0} mc"
            },
            volumeAcreFoot: {
                other: "{0} ac ft"
            },
            volumeGallon: {
                other: "{0} gal"
            },
            volumeQuart: {
                other: "{0} qt"
            },
            volumePint: {
                other: "{0} pt"
            },
            volumeCup: {
                other: "{0} c"
            },
            volumeFluidOunce: {
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                other: "{0} tbsp"
            },
            volumeTeaspoon: {
                other: "{0} tsp"
            },
            areaSquareKilometer: {
                other: "{0} km²"
            },
            areaHectare: {
                other: "{0} ha"
            },
            areaSquareMeter: {
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                other: "{0} cm²"
            },
            areaSquareMile: {
                other: "{0} mi²"
            },
            areaAcre: {
                other: "{0} ac"
            },
            areaSquareYard: {
                other: "{0} yd²"
            },
            areaSquareFoot: {
                other: "{0} ft²"
            },
            areaSquareInch: {
                other: "{0} in²"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            durationHour: {
                other: "{0} h"
            },
            lengthKilometer: {
                other: "{0} km"
            },
            lengthMeter: {
                other: "{0} m"
            },
            lengthDecimeter: {
                other: "{0} dm"
            },
            lengthCentimeter: {
                other: "{0} cm"
            },
            lengthMillimeter: {
                other: "{0} mm"
            },
            lengthMicrometer: {
                other: "{0} µm"
            },
            lengthNanometer: {
                other: "{0} nm"
            },
            lengthPicometer: {
                other: "{0} pm"
            },
            lengthMile: {
                other: "{0} mi"
            },
            lengthYard: {
                other: "{0} yd"
            },
            lengthFoot: {
                other: "{0} ft"
            },
            lengthInch: {
                other: "{0} in"
            },
            lengthParsec: {
                other: "{0} pc"
            },
            lengthLightYear: {
                other: "{0} ly"
            },
            lengthAstronomicalUnit: {
                other: "{0} au"
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            lengthNauticalMile: {
                other: "{0} nmi"
            },
            lengthMileScandinavian: {
                other: "{0} smi"
            },
            massStone: {
                other: "{0} st"
            },
            pressureHectopascal: {
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                other: "{0} psi"
            },
            pressureInchHg: {
                other: "{0} inHg"
            },
            pressureMillibar: {
                other: "{0} mbar"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            "consumptionLiterPer-100kilometers": _9dfh1,
            durationYear: {
                other: "{0} سال"
            },
            durationMonth: {
                other: "{0} ماه"
            },
            durationWeek: {
                other: "{0} هفته"
            },
            durationDay: {
                other: "{0} روز"
            },
            durationHour: {
                other: "{0} ساعِت"
            },
            durationMinute: {
                other: "{0} دَقه"
            },
            durationSecond: {
                other: "{0} ثانیه"
            },
            durationMillisecond: _9dfh31,
            massKilogram: {
                other: "{0} kg"
            },
            massGram: {
                other: "{0} g"
            },
            speedKilometerPerHour: {
                other: "{0} km/h"
            },
            temperatureCelsius: {
                other: "{0}°C"
            },
            volumeLiter: {
                other: "{0} l"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.characters = {
    exemplar: {
        "default": [ "\\u064B", "\\u064C", "\\u064D", "\\u0651", "\\u0654", "ء", "آ", "أ", "ؤ", "ئ", "ا", "ب", "پ", "ة", "ت", "ث", "ج", "چ", "ح", "خ", "د", "ذ", "ر", "ز", "ژ", "س", "ش", "ص", "ض", "ط", "ظ", "ع", "غ", "ف", "ق", "ک", "گ", "ل", "م", "ن", "ه", "و", "ی" ],
        auxiliary: [ "\\u200C\\u200D\\u200E\\u200F", "\\u064E", "\\u064F", "\\u0650", "\\u0652", "\\u0656", "\\u0670", "إ", "ك", "ى", "ي" ],
        index: [ "آ", "ا", "ب", "پ", "ت", "ث", "ج", "چ", "ح", "خ", "د", "ذ", "ر", "ز", "ژ", "س", "ش", "ص", "ض", "ط", "ظ", "ع", "غ", "ف", "ق", "ک", "گ", "ل", "م", "ن", "ه", "و", "ی" ],
        punctuation: [ "\\-", "‐", "،", "٫", "٬", "؛", "\\:", "!", "؟", ".", "…", "‹", "›", "«", "»", "(", ")", "\\[", "\\]", "*", "/", "\\\\" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "؟"
};

inter.defaultNumberSystemId = "arabext";

inter.calendars = {
    buddhist: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9dfh434,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9dfh426,
        dayPeriods: _9dfh411,
        monthNames: _9dfh429,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _9dfh414,
        fields: _9dfh437
    },
    chinese: _9dfh442,
    coptic: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9dfh434,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9dfh426,
        dayPeriods: _9dfh411,
        monthNames: {
            format: _9dfh421,
            standAlone: _9dfh421
        },
        eraNames: _9dfh62,
        quarterNames: _9dfh414,
        fields: _9dfh437
    },
    dangi: _9dfh442,
    ethioaa: _9dfh438,
    ethiopic: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9dfh434,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9dfh426,
        dayPeriods: _9dfh411,
        monthNames: {
            format: _9dfh423,
            standAlone: _9dfh423
        },
        eraNames: _9dfh62,
        quarterNames: _9dfh414,
        fields: _9dfh437
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "y MMMM d, EEEE",
                longDate: "y MMMM d",
                mediumDate: "y MMM d",
                shortDate: "y-MM-dd",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "y-MM-dd HH:mm",
                mediumDateTime: "y MMM d HH:mm:ss",
                longDateTime: "y MMMM d HH:mm:ss z",
                fullDateTime: "y MMMM d, EEEE HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "d, E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "MM-dd",
                MEd: "MM-dd, E",
                MMM: "LLL",
                MMMd: "MMM d",
                MMMEd: "MMM d, E",
                MMMMd: "MMMM d",
                ms: "mm:ss",
                y: "y",
                yM: "y-MM",
                yMd: "y-MM-dd",
                yMEd: "y-MM-dd, E",
                yMMM: "y MMM",
                yMMMd: "y MMM d",
                yMMMEd: "y MMM d, E",
                yMMMM: "y MMMM",
                yQQQ: "y QQQ",
                yQQQQ: "y QQQQ"
            }
        },
        datePartsOrder: "ymd",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _9dfh33,
            H: {
                H: "HH–HH"
            },
            hm: _9dfh66,
            Hm: _9dfh42,
            hmv: _9dfh87,
            Hmv: _9dfh46,
            hv: _9dfh38,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "MM–MM"
            },
            Md: _9dfh47,
            MEd: _9dfh59,
            MMM: {
                M: "LLL–LLL"
            },
            MMMd: _9dfh40,
            MMMEd: _9dfh60,
            y: {
                y: "y–y"
            },
            yM: _9dfh43,
            yMd: _9dfh293,
            yMEd: _9dfh382,
            yMMM: {
                M: "y MMM–MMM",
                y: "y MMM – y MMM"
            },
            yMMMd: {
                d: "y MMM d–d",
                M: "y MMM d – MMM d",
                y: "y MMM d – y MMM d"
            },
            yMMMEd: {
                d: "y MMM d, E – MMM d, E",
                M: "y MMM d, E – MMM d, E",
                y: "y MMM d, E – y MMM d, E"
            },
            yMMMM: {
                M: "y MMMM–MMMM",
                y: "y MMMM – y MMMM"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9dfh426,
        dayPeriods: _9dfh411,
        monthNames: _9dfh429,
        eraNames: {
            wide: [ "قبل میلاد", "بعد میلاد" ],
            abbreviated: [ "پ.م", "م." ]
        },
        quarterNames: _9dfh414,
        fields: _9dfh437
    },
    hebrew: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9dfh434,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9dfh426,
        dayPeriods: _9dfh411,
        monthNames: {
            format: _9dfh419,
            standAlone: _9dfh419
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _9dfh414,
        fields: _9dfh437
    },
    indian: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9dfh434,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9dfh426,
        dayPeriods: _9dfh411,
        monthNames: {
            format: _9dfh424,
            standAlone: _9dfh424
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _9dfh414,
        fields: _9dfh437
    },
    islamic: _9dfh441,
    "islamic-umalqura": _9dfh441,
    "islamic-tbla": _9dfh441,
    "islamic-civil": _9dfh441,
    "islamic-rgsa": _9dfh441,
    iso8601: _9dfh438,
    japanese: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9dfh434,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9dfh426,
        dayPeriods: _9dfh411,
        monthNames: _9dfh429,
        eraNames: {
            wide: _9dfh439,
            abbreviated: _9dfh439
        },
        quarterNames: _9dfh414,
        fields: _9dfh437
    },
    persian: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9dfh434,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9dfh426,
        dayPeriods: _9dfh411,
        monthNames: {
            format: _9dfh420,
            standAlone: _9dfh420
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _9dfh414,
        fields: _9dfh437
    },
    roc: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9dfh434,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9dfh426,
        dayPeriods: _9dfh411,
        monthNames: _9dfh429,
        eraNames: {
            wide: _9dfh35,
            abbreviated: _9dfh35
        },
        quarterNames: _9dfh414,
        fields: _9dfh437
    },
    islamicc: _9dfh438
};

inter.pluralRule = function(n) {};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.territories = [ _9dfh276, _9dfh132, _9dfh248, _9dfh78, _9dfh309, _9dfh383, _9dfh325, _9dfh165, _9dfh133, _9dfh294, _9dfh326, _9dfh327, _9dfh328, _9dfh318, _9dfh345, _9dfh166, _9dfh167, _9dfh210, _9dfh134, _9dfh168, _9dfh105, _9dfh249, _9dfh319, _9dfh211, _9dfh169, _9dfh250, _9dfh251, _9dfh310, _9dfh170, _9dfh212, _9dfh213, _9dfh277, _9dfh214, _9dfh295, _9dfh215, _9dfh346, _9dfh353, {
    id: "QO",
    displayName: "اوقیانوسیه‌ی ِپرت ِجائون",
    regionId: "009",
    hasTimeZones: false
}, _9dfh216, _9dfh217, _9dfh171, _9dfh218, _9dfh135, _9dfh172, _9dfh252, _9dfh173, _9dfh253, _9dfh254, _9dfh174, _9dfh136, _9dfh137, _9dfh175, _9dfh176, _9dfh255, _9dfh335, _9dfh342, _9dfh177, _9dfh278, _9dfh138, _9dfh106, _9dfh219, _9dfh107, _9dfh139, _9dfh279, _9dfh220, _9dfh311, _9dfh336, _9dfh178, _9dfh67, _9dfh280, _9dfh256, _9dfh179, _9dfh180, _9dfh296, _9dfh140, _9dfh91, _9dfh347, _9dfh368, _9dfh108, _9dfh141, _9dfh181, _9dfh221, _9dfh109, _9dfh297, _9dfh257, _9dfh142, _9dfh258, _9dfh110, _9dfh354, _9dfh369, _9dfh370, _9dfh361, _9dfh312, _9dfh362, _9dfh306, _9dfh298, _9dfh86, _9dfh58, _9dfh182, _9dfh222, _9dfh223, _9dfh329, _9dfh71, _9dfh224, _9dfh183, _9dfh143, _9dfh184, _9dfh185, _9dfh259, _9dfh355, _9dfh144, _9dfh260, _9dfh313, _9dfh281, _9dfh337, _9dfh307, _9dfh282, _9dfh283, _9dfh299, _9dfh261, _9dfh371, _9dfh338, _9dfh145, _9dfh225, _9dfh111, _9dfh262, _9dfh363, _9dfh75, _9dfh146, _9dfh226, _9dfh147, _9dfh186, _9dfh148, _9dfh263, _9dfh112, _9dfh348, _9dfh364, _9dfh356, _9dfh365, _9dfh372, _9dfh366, _9dfh300, _9dfh373, _9dfh113, _9dfh227, _9dfh284, _9dfh114, _9dfh228, _9dfh115, _9dfh349, _9dfh367, _9dfh357, _9dfh285, _9dfh94, _9dfh301, _9dfh350, _9dfh187, _9dfh149, _9dfh339, _9dfh351, _9dfh330, _9dfh188, _9dfh116, _9dfh229, _9dfh117, _9dfh286, _9dfh264, _9dfh95, _9dfh72, _9dfh150, _9dfh189, _9dfh151, _9dfh152, _9dfh153, _9dfh190, _9dfh302, _9dfh191, _9dfh118, _9dfh314, _9dfh303, _9dfh358, _9dfh315, _9dfh192, _9dfh119, _9dfh193, _9dfh154, _9dfh120, _9dfh343, _9dfh155, _9dfh316, _9dfh352, _9dfh265, _9dfh156, _9dfh374, _9dfh96, _9dfh266, _9dfh230, _9dfh331, _9dfh287, _9dfh288, _9dfh267, _9dfh268, _9dfh231, _9dfh194, _9dfh269, _9dfh304, _9dfh157, _9dfh232, _9dfh359, _9dfh375, _9dfh376, _9dfh270, _9dfh379, _9dfh195, _9dfh196, _9dfh121, _9dfh320, _9dfh122, _9dfh123, _9dfh124, _9dfh197, _9dfh321, _9dfh233, _9dfh305, _9dfh271, _9dfh198, _9dfh125, _9dfh377, _9dfh97, _9dfh234, _9dfh235, _9dfh236, _9dfh332, _9dfh237, _9dfh238, _9dfh199, _9dfh272, _9dfh200, _9dfh201, _9dfh322, _9dfh239, _9dfh202, _9dfh98, _9dfh289, _9dfh344, _9dfh333, _9dfh99, _9dfh290, _9dfh100, _9dfh340, _9dfh291, _9dfh203, _9dfh204, _9dfh205, _9dfh206, _9dfh73, _9dfh207, _9dfh85, _9dfh323, _9dfh317, _9dfh126, _9dfh127, _9dfh273, _9dfh208, _9dfh158, _9dfh101, _9dfh292, _9dfh128, _9dfh274, _9dfh334, _9dfh240, _9dfh159, _9dfh209, _9dfh241, _9dfh242, _9dfh160, _9dfh243, _9dfh161, _9dfh275, _9dfh244, _9dfh162, _9dfh129, _9dfh308, _9dfh102, _9dfh163 ];

inter.regions = [ _9dfh309, _9dfh383, _9dfh325, _9dfh326, _9dfh319, _9dfh346, _9dfh353, _9dfh354, _9dfh369, _9dfh370, _9dfh361, _9dfh58, _9dfh348, _9dfh364, _9dfh356, _9dfh365, _9dfh372, _9dfh373, _9dfh349, _9dfh367, _9dfh357, _9dfh331, _9dfh359, _9dfh375, _9dfh376, _9dfh379, _9dfh344, _9dfh340 ];

inter.countries = [ _9dfh276, _9dfh132, _9dfh248, _9dfh78, _9dfh165, _9dfh133, _9dfh294, _9dfh327, _9dfh328, _9dfh318, _9dfh345, _9dfh166, _9dfh167, _9dfh210, _9dfh134, _9dfh168, _9dfh105, _9dfh249, _9dfh211, _9dfh169, _9dfh250, _9dfh251, _9dfh310, _9dfh170, _9dfh212, _9dfh213, _9dfh277, _9dfh214, _9dfh295, _9dfh215, _9dfh216, _9dfh217, _9dfh171, _9dfh218, _9dfh135, _9dfh172, _9dfh252, _9dfh173, _9dfh253, _9dfh254, _9dfh174, _9dfh136, _9dfh137, _9dfh175, _9dfh176, _9dfh255, _9dfh335, _9dfh342, _9dfh177, _9dfh278, _9dfh138, _9dfh106, _9dfh219, _9dfh107, _9dfh139, _9dfh279, _9dfh220, _9dfh311, _9dfh336, _9dfh178, _9dfh67, _9dfh280, _9dfh256, _9dfh179, _9dfh180, _9dfh296, _9dfh140, _9dfh91, _9dfh347, _9dfh368, _9dfh108, _9dfh141, _9dfh181, _9dfh221, _9dfh109, _9dfh297, _9dfh257, _9dfh142, _9dfh258, _9dfh110, _9dfh312, _9dfh362, _9dfh306, _9dfh298, _9dfh86, _9dfh182, _9dfh222, _9dfh223, _9dfh329, _9dfh71, _9dfh224, _9dfh183, _9dfh143, _9dfh184, _9dfh185, _9dfh259, _9dfh355, _9dfh144, _9dfh260, _9dfh313, _9dfh281, _9dfh337, _9dfh307, _9dfh282, _9dfh283, _9dfh299, _9dfh261, _9dfh371, _9dfh338, _9dfh145, _9dfh225, _9dfh111, _9dfh262, _9dfh363, _9dfh75, _9dfh146, _9dfh226, _9dfh147, _9dfh186, _9dfh148, _9dfh263, _9dfh112, _9dfh366, _9dfh300, _9dfh113, _9dfh227, _9dfh284, _9dfh114, _9dfh228, _9dfh115, _9dfh285, _9dfh94, _9dfh301, _9dfh350, _9dfh187, _9dfh149, _9dfh339, _9dfh351, _9dfh330, _9dfh188, _9dfh116, _9dfh229, _9dfh117, _9dfh286, _9dfh264, _9dfh95, _9dfh72, _9dfh150, _9dfh189, _9dfh151, _9dfh152, _9dfh153, _9dfh190, _9dfh302, _9dfh191, _9dfh118, _9dfh314, _9dfh303, _9dfh358, _9dfh315, _9dfh192, _9dfh119, _9dfh193, _9dfh154, _9dfh120, _9dfh343, _9dfh155, _9dfh316, _9dfh352, _9dfh265, _9dfh156, _9dfh374, _9dfh96, _9dfh266, _9dfh230, _9dfh287, _9dfh288, _9dfh267, _9dfh268, _9dfh231, _9dfh194, _9dfh269, _9dfh304, _9dfh157, _9dfh232, _9dfh270, _9dfh195, _9dfh196, _9dfh121, _9dfh320, _9dfh122, _9dfh123, _9dfh124, _9dfh197, _9dfh321, _9dfh233, _9dfh305, _9dfh271, _9dfh198, _9dfh125, _9dfh377, _9dfh97, _9dfh234, _9dfh235, _9dfh236, _9dfh332, _9dfh237, _9dfh238, _9dfh199, _9dfh272, _9dfh200, _9dfh201, _9dfh322, _9dfh239, _9dfh202, _9dfh98, _9dfh289, _9dfh333, _9dfh99, _9dfh290, _9dfh100, _9dfh291, _9dfh203, _9dfh204, _9dfh205, _9dfh206, _9dfh73, _9dfh207, _9dfh85, _9dfh323, _9dfh317, _9dfh126, _9dfh127, _9dfh273, _9dfh208, _9dfh158, _9dfh101, _9dfh292, _9dfh128, _9dfh274, _9dfh334, _9dfh240, _9dfh159, _9dfh209, _9dfh241, _9dfh242, _9dfh160, _9dfh243, _9dfh161, _9dfh275, _9dfh244, _9dfh162, _9dfh129, _9dfh308, _9dfh102, _9dfh163 ];

inter.languages = [ {
    id: "af",
    displayName: "آفریکانس",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "آقم",
    nativeDisplayName: "Aghem"
}, {
    id: "ak",
    displayName: "آکان",
    nativeDisplayName: "Akan"
}, {
    id: "en_us",
    displayName: "امریکن انگلیسی",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "ایناری سامی",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "en_au",
    displayName: "استرالیای ِانگلیسی",
    nativeDisplayName: "Australian English"
}, {
    id: "az",
    displayName: "آذری ِترکی",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "مالایی",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bm",
    displayName: "بامبارایی",
    nativeDisplayName: "bamanakan"
}, {
    id: "bs",
    displayName: "بوسنیایی",
    nativeDisplayName: "bosanski"
}, {
    id: "br",
    displayName: "برِتونی",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "بریتیش انگلیسی",
    nativeDisplayName: "British English"
}, {
    id: "en_ca",
    displayName: "کانادای ِانگلیسی",
    nativeDisplayName: "Canadian English"
}, {
    id: "ca",
    displayName: "کاتالونی",
    nativeDisplayName: "català"
}, {
    id: "kde",
    displayName: "ماکونده",
    nativeDisplayName: "Chimakonde"
}, {
    id: "sn",
    displayName: "شونا",
    nativeDisplayName: "chiShona"
}, {
    id: "cy",
    displayName: "ولزی",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "دانمارکی",
    nativeDisplayName: "dansk"
}, {
    id: "se",
    displayName: "شمالی سامی",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "de",
    displayName: "آلمانی",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "لوئو",
    nativeDisplayName: "Dholuo"
}, {
    id: "dsb",
    displayName: "پایین صربی",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "دوئالایی",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "استونیایی",
    nativeDisplayName: "eesti"
}, {
    id: "guz",
    displayName: "گوسی",
    nativeDisplayName: "Ekegusii"
}, {
    id: "en",
    displayName: "انگلیسی",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "ایسپانیولی",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "اروپای ِایسپانیولی",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "مکزیک ِایسپانیولی",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "جنوبی آمریکای ِایسپانیولی",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "اسپرانتو",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "باسکی",
    nativeDisplayName: "euskara"
}, {
    id: "ee",
    displayName: "اوه‌یی",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fil",
    displayName: "فیلیپینو",
    nativeDisplayName: "Filipino"
}, {
    id: "fr",
    displayName: "فرانسوی",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "کانادای ِفرانسوی",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "سوییس ِفرانسوی",
    nativeDisplayName: "français suisse"
}, {
    id: "fo",
    displayName: "فارویی",
    nativeDisplayName: "føroyskt"
}, {
    id: "ga",
    displayName: "ایریش",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "مانکس",
    nativeDisplayName: "Gaelg"
}, {
    id: "gl",
    displayName: "گالیک",
    nativeDisplayName: "galego"
}, {
    id: "ki",
    displayName: "کیکویو",
    nativeDisplayName: "Gikuyu"
}, {
    id: "ha",
    displayName: "هوسا",
    nativeDisplayName: "Hausa"
}, {
    id: "bez",
    displayName: "بنایی",
    nativeDisplayName: "Hibena"
}, {
    id: "hsb",
    displayName: "بالایی صربی",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "کرواتی",
    nativeDisplayName: "hrvatski"
}, {
    id: "bem",
    displayName: "بمبایی",
    nativeDisplayName: "Ichibemba"
}, {
    id: "ig",
    displayName: "ایگبو",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "روندی",
    nativeDisplayName: "Ikirundi"
}, {
    id: "id",
    displayName: "اندونزیایی",
    nativeDisplayName: "Indonesia"
}, {
    id: "sbp",
    displayName: "سانگوو",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "شمالی ندبله",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "زولو",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "ایتالیایی",
    nativeDisplayName: "italiano"
}, {
    id: "dyo",
    displayName: "جولا-فونی",
    nativeDisplayName: "joola"
}, {
    id: "kea",
    displayName: "کیپ وُردی",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kl",
    displayName: "کالائلیسوت",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "کالنجین",
    nativeDisplayName: "Kalenjin"
}, {
    id: "kw",
    displayName: "کورنیش",
    nativeDisplayName: "kernewek"
}, {
    id: "naq",
    displayName: "ناما",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "rof",
    displayName: "رومبو",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "کامبایی",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "ماچامه",
    nativeDisplayName: "Kimachame"
}, {
    id: "rw",
    displayName: "کنیاروآندایی",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "آسو",
    nativeDisplayName: "Kipare"
}, {
    id: "rwk",
    displayName: "روآیی",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "سامبورو",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "شامبالا",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "سواحیلی",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "کنگو سواحیلی",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "تایتا",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "تسویی",
    nativeDisplayName: "Kiteso"
}, {
    id: "khq",
    displayName: "کویرا چیینی",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "کویرابورا سنی",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "mfe",
    displayName: "موریسین",
    nativeDisplayName: "kreol morisien"
}, {
    id: "nmg",
    displayName: "کوئاسیو",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "وونجویی",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ebu",
    displayName: "امبو",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "مِرویی",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "لانگی",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "lkt",
    displayName: "لاکوتا",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lv",
    displayName: "لاتویایی",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "تونگانی",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lt",
    displayName: "لتونیایی",
    nativeDisplayName: "lietuvių"
}, {
    id: "ln",
    displayName: "لینگالا",
    nativeDisplayName: "lingála"
}, {
    id: "lg",
    displayName: "گاندا",
    nativeDisplayName: "Luganda"
}, {
    id: "luy",
    displayName: "لوییا",
    nativeDisplayName: "Luluhia"
}, {
    id: "lb",
    displayName: "لوکزامبورگی",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "ماسایی",
    nativeDisplayName: "Maa"
}, {
    id: "hu",
    displayName: "مجاری",
    nativeDisplayName: "magyar"
}, {
    id: "mgh",
    displayName: "ماخوئا-میتو",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "مالاگاسی",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "مالتی",
    nativeDisplayName: "Malti"
}, {
    id: "mgo",
    displayName: "مِتاء",
    nativeDisplayName: "metaʼ"
}, {
    id: "ro_md",
    displayName: "مولداوی",
    nativeDisplayName: "moldovenească"
}, {
    id: "mua",
    displayName: "موندانگ",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "jgo",
    displayName: "نگومبا",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "nl",
    displayName: "هلندی",
    nativeDisplayName: "Nederlands"
}, {
    id: "nb",
    displayName: "نروژی بوکمال",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "nn",
    displayName: "نروژی نینورسک",
    nativeDisplayName: "nynorsk"
}, {
    id: "xog",
    displayName: "سوگا",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "اورومو",
    nativeDisplayName: "Oromoo"
}, {
    id: "uz",
    displayName: "ازبکی",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pl",
    displayName: "لهستونی",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "پرتغالی",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "برزیل ِپرتغالی",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "اروپای ِپرتغالی",
    nativeDisplayName: "português europeu"
}, {
    id: "ksf",
    displayName: "بافیایی",
    nativeDisplayName: "rikpa"
}, {
    id: "ro",
    displayName: "رومانیایی",
    nativeDisplayName: "română"
}, {
    id: "cgg",
    displayName: "چیگا",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "رومانش",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "قوئچوئا",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "نیانکوله",
    nativeDisplayName: "Runyankore"
}, {
    id: "de_ch",
    displayName: "سوییس ِآلمانی",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "سوییس آلمانی",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "seh",
    displayName: "سِنایی",
    nativeDisplayName: "sena"
}, {
    id: "sq",
    displayName: "آلبانیایی",
    nativeDisplayName: "shqip"
}, {
    id: "sk",
    displayName: "اسلواکی",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "اسلوونیایی",
    nativeDisplayName: "slovenščina"
}, {
    id: "so",
    displayName: "سومالیایی",
    nativeDisplayName: "Soomaali"
}, {
    id: "fi",
    displayName: "فینیش",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "سوئدی",
    nativeDisplayName: "svenska"
}, {
    id: "sg",
    displayName: "سانگو",
    nativeDisplayName: "Sängö"
}, {
    id: "tzm",
    displayName: "میونی اطلس تامزیقی",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "قبایلی",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "twq",
    displayName: "تاساواقی",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "nus",
    displayName: "نوئر",
    nativeDisplayName: "Thok Nath"
}, {
    id: "vi",
    displayName: "ویتنامی",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "lu",
    displayName: "لوبا-کاتانگا",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tk",
    displayName: "ترکمونی",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "ترکی",
    nativeDisplayName: "Türkçe"
}, {
    id: "nl_be",
    displayName: "فلمیش",
    nativeDisplayName: "Vlaams"
}, {
    id: "fy",
    displayName: "غربی فیریزی",
    nativeDisplayName: "West-Frysk"
}, {
    id: "dje",
    displayName: "زارمایی",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "yo",
    displayName: "یوروبا",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "ایسلندی",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "اتریش ِآلمانی",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "چکی",
    nativeDisplayName: "čeština"
}, {
    id: "haw",
    displayName: "هاواییایی",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "یونانی",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "بلاروسی",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "بلغاری",
    nativeDisplayName: "български"
}, {
    id: "ky",
    displayName: "قرقیزی",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "مقدونی",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "مغولی",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "چچنی",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "روسی",
    nativeDisplayName: "русский"
}, {
    id: "sr",
    displayName: "صربی",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "اوکراینی",
    nativeDisplayName: "українська"
}, {
    id: "kk",
    displayName: "قزاقی",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "ارمنی",
    nativeDisplayName: "հայերեն"
}, {
    id: "he",
    displayName: "عبری",
    nativeDisplayName: "עברית"
}, {
    id: "ab",
    displayName: "آبخازی"
}, {
    id: "ug",
    displayName: "ئوغوری",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "اردو",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "عربی",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "مدرن استاندارد عربی",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "iu",
    displayName: "انوکتیتوت"
}, {
    id: "zxx",
    displayName: "این زوون بشناسی‌یه نیّه"
}, {
    id: "ba",
    displayName: "باشقیری"
}, {
    id: "tt",
    displayName: "تاتاری"
}, {
    id: "tg",
    displayName: "تاجیکی"
}, {
    id: "jv",
    displayName: "جاوایی"
}, {
    id: "az_arab",
    displayName: "جنوبی آذری ترکی"
}, {
    id: "sma",
    displayName: "جنوبی سامی"
}, {
    id: "sdh",
    displayName: "جنوبی کردی"
}, {
    id: "xh",
    displayName: "خوسا"
}, {
    id: "sa",
    displayName: "سانسکریت"
}, {
    id: "sd",
    displayName: "سندی"
}, {
    id: "su",
    displayName: "سوندانسی"
}, {
    id: "sms",
    displayName: "سکولت سامی"
}, {
    id: "bgn",
    displayName: "غربی بلوچی"
}, {
    id: "fa",
    displayName: "فارسی",
    nativeDisplayName: "فارسی"
}, {
    id: "fj",
    displayName: "فیجیایی"
}, {
    id: "la",
    displayName: "لاتین"
}, {
    id: "smj",
    displayName: "لوله سامی"
}, {
    id: "lrc",
    displayName: "شمالی لُری",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mi",
    displayName: "مائوری"
}, {
    id: "mzn",
    displayName: "مازرونی",
    nativeDisplayName: "مازرونی"
}, {
    id: "arn",
    displayName: "ماپوچه"
}, {
    id: "moh",
    displayName: "موهاک"
}, {
    id: "nqo",
    displayName: "نئکو"
}, {
    id: "und",
    displayName: "نشناسی‌یه زوون"
}, {
    id: "ht",
    displayName: "هائتیایی"
}, {
    id: "wbp",
    displayName: "والرپیری"
}, {
    id: "wo",
    displayName: "وولفی"
}, {
    id: "nds",
    displayName: "پایین آلمانی"
}, {
    id: "nds_nl",
    displayName: "پایین ساکسونی"
}, {
    id: "ps",
    displayName: "پشتو",
    nativeDisplayName: "پښتو"
}, {
    id: "cv",
    displayName: "چوواشی"
}, {
    id: "quc",
    displayName: "کئیچه‌ئی"
}, {
    id: "ku",
    displayName: "کوردی"
}, {
    id: "ckb",
    displayName: "میونی کوردی",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "co",
    displayName: "کورسیکان"
}, {
    id: "koi",
    displayName: "کومی-پرمیاک"
}, {
    id: "ks",
    displayName: "کشمیری",
    nativeDisplayName: "کٲشُر"
}, {
    id: "gag",
    displayName: "گاگائوزی"
}, {
    id: "gn",
    displayName: "گورانی"
}, {
    id: "kok",
    displayName: "کونکانی",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "نپالی",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "بدویی",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "ماراتی",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "هندی",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "آسامی",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "بنگالی",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "پنجابی",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "گجراتی",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "اوریا",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "تامیلی",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "تلوگویی",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "کانّادا",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "مالایالام",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "سینهالا",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "تایی",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "لائویی",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "تبتی",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "دزونگخا",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "برمه‌یی",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "گرجی",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "تیگرینیایی",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "امهری",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "خمری",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "مراکش ِاستاندارد ِتامازیقتی",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "تاچلهیت",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "چینی",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "جاپونی",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "ساده چینی",
    nativeDisplayName: "简体中文"
}, {
    id: "zh_hant",
    displayName: "سنتی چینی",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "سیچوئان یی",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "وایی",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "چروکیایی",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "کُره‌یی",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Ethi",
    displayName: "اتیوپیایی"
}, {
    id: "Armn",
    displayName: "ارمنی"
}, {
    id: "Beng",
    displayName: "بنگالی"
}, {
    id: "Bopo",
    displayName: "بوپوموفو"
}, {
    id: "Jpan",
    displayName: "جاپونی"
}, {
    id: "Deva",
    displayName: "دیوانانگری"
}, {
    id: "Hans",
    displayName: "ساده‌بَیی هان"
}, {
    id: "Hant",
    displayName: "سنتی هانت"
}, {
    id: "Cyrl",
    displayName: "سیریلیک"
}, {
    id: "Hebr",
    displayName: "عبری"
}, {
    id: "Arab",
    displayName: "عربی"
}, {
    id: "Hani",
    displayName: "هان"
}, {
    id: "Hang",
    displayName: "هانگول"
}, {
    id: "Hira",
    displayName: "هیراگانا"
}, {
    id: "Kana",
    displayName: "کاتاکانا"
}, {
    id: "Gujr",
    displayName: "گجراتی"
}, {
    id: "Geor",
    displayName: "گرجی"
}, {
    id: "Guru",
    displayName: "گورموخی"
}, {
    id: "Grek",
    displayName: "یونانی"
} ];

inter.currencies = [ {
    id: "AZN",
    displayName: "آذربایجون ِمنات",
    symbol: "AZN",
    other: "آذربایجون ِمنات"
}, {
    id: "AWG",
    displayName: "آروبای ِفلورن",
    symbol: "AWG",
    other: "آروبای فلورن"
}, {
    id: "ARS",
    displayName: "آرژانتین ِپزو",
    symbol: "ARS",
    other: "آرژانتین ِپزو"
}, {
    id: "ALL",
    displayName: "آلبانی ِلک",
    symbol: "ALL",
    other: "آلبانی ِلک"
}, {
    id: "USD",
    displayName: "آمریکای ِدولار",
    symbol: "$",
    other: "آمریکای ِدلار"
}, {
    id: "AOA",
    displayName: "آنگولای ِکوانزا",
    symbol: "AOA",
    other: "آنگولای ِکوانزا"
}, {
    id: "ETB",
    displayName: "اتیوپی ِبیر",
    symbol: "ETB",
    other: "اتیوپی ِبیر"
}, {
    id: "JOD",
    displayName: "اردن ِدینار",
    symbol: "JOD",
    other: "اردن ِدینار"
}, {
    id: "AMD",
    displayName: "ارمنستون درهم",
    symbol: "AMD",
    other: "ارمنستون درهم"
}, {
    id: "UYU",
    displayName: "اروگوئه‌ی ِپزو",
    symbol: "UYU",
    other: "اروگوئه‌ی ِپزو"
}, {
    id: "ERN",
    displayName: "اریتره‌ی ِناکفا",
    symbol: "ERN",
    other: "اریتره‌ی ِناکفا"
}, {
    id: "UZS",
    displayName: "ازبکستون ِسام",
    symbol: "UZS",
    other: "ازبکستون ِسام"
}, {
    id: "ILS",
    displayName: "اسراییل ِنو شِکِل",
    symbol: "₪",
    other: "اسراییل ِنو شِکِل"
}, {
    id: "AFN",
    displayName: "افغانستون ِافغانی",
    symbol: "AFN",
    other: "افغانستون ِافغانی"
}, {
    id: "DZD",
    displayName: "الجزیره‌ی ِدینار",
    symbol: "DZD",
    other: "الجزیره‌ی ِدینار"
}, {
    id: "IDR",
    displayName: "اندونزی ِروپیه",
    symbol: "IDR",
    other: "اندونزی ِروپیه"
}, {
    id: "UGX",
    displayName: "اوگاندای ِشیلینگ",
    symbol: "UGX",
    other: "اوگاندای ِشیلینگ"
}, {
    id: "UAH",
    displayName: "اکراین ِگریونا",
    symbol: "UAH",
    other: "اکراین ِگریونا"
}, {
    id: "IRR",
    displayName: "ایران ریال",
    symbol: "IRR",
    other: "ایران ریال"
}, {
    id: "ISK",
    displayName: "ایسلند کرونا",
    symbol: "ISK",
    other: "ایسلند کرونا"
}, {
    id: "BBD",
    displayName: "باربادوس ِدولار",
    symbol: "BBD",
    other: "باربادوس دلار"
}, {
    id: "BSD",
    displayName: "باهامای ِدولار",
    symbol: "BSD",
    other: "باهامای ِدولار"
}, {
    id: "BHD",
    displayName: "بحرین ِدینار",
    symbol: "BHD",
    other: "بحرین ِدینار"
}, {
    id: "BRL",
    displayName: "برزیل ِرئال",
    symbol: "R$",
    other: "برزیل ِرئال"
}, {
    id: "BMD",
    displayName: "برمودای ِدولار",
    symbol: "BMD",
    other: "برمودای ِدلار"
}, {
    id: "BND",
    displayName: "برونئی ِدولار",
    symbol: "BND",
    other: "برونئی دلار"
}, {
    id: "GBP",
    displayName: "بریتانیای ِپوند",
    symbol: "£",
    other: "بریتانیای ِپوند"
}, {
    id: "BYR",
    displayName: "بلاروس ِروبل",
    symbol: "BYR",
    other: "بلاروس ِروبل"
}, {
    id: "BGN",
    displayName: "بلغارستون ِلیوا",
    symbol: "BGN",
    other: "بلغارستون ِلیوا"
}, {
    id: "BZD",
    displayName: "بلیز ِدولار",
    symbol: "BZD",
    other: "بلیز دلار"
}, {
    id: "BDT",
    displayName: "بنگلادش ِتاکا",
    symbol: "BDT",
    other: "بنگلادش ِتاکا"
}, {
    id: "BTN",
    displayName: "بوتان ِنگولتروم",
    symbol: "BTN",
    other: "بوتان ِنگولتروم"
}, {
    id: "BWP",
    displayName: "بوتساوانای ِپولا",
    symbol: "BWP",
    other: "بوتساوانای ِپولا"
}, {
    id: "BIF",
    displayName: "بوروندی ِفرانک",
    symbol: "BIF",
    other: "بوروندی ِفرانک"
}, {
    id: "BAM",
    displayName: "بوسنی و هرزگوین ِتبدیل‌بَیی مارک",
    symbol: "BAM",
    other: "بوسنی و هرزگوین ِتبدیل‌بَیی مارک"
}, {
    id: "BOB",
    displayName: "بولیوی ِبولیویانو",
    symbol: "BOB",
    other: "بولیوی ِبولیویانو"
}, {
    id: "TJS",
    displayName: "تاجیکستون ِسامانی",
    symbol: "TJS",
    other: "تاجیکستون ِسامانی"
}, {
    id: "TZS",
    displayName: "تانزانیای ِشیلینگ",
    symbol: "TZS",
    other: "تانزانیای ِشیلینگ"
}, {
    id: "THB",
    displayName: "تایلند ِبات",
    symbol: "THB",
    other: "تایلند ِبات"
}, {
    id: "TMT",
    displayName: "ترکمنستون ِمنات",
    symbol: "TMT",
    other: "ترکمنستون ِمنات"
}, {
    id: "TRY",
    displayName: "ترکیه‌ی ِلیره",
    symbol: "TRY",
    other: "ترکیه‌ی ِلیره"
}, {
    id: "TTD",
    displayName: "ترینیداد و توباگوی ِدولار",
    symbol: "TTD",
    other: "ترینیداد و توباگوی ِدلار"
}, {
    id: "TND",
    displayName: "تونس ِدینار",
    symbol: "TND",
    other: "تونس ِدینار"
}, {
    id: "JMD",
    displayName: "جاماییکای ِدولار",
    symbol: "JMD",
    other: "جاماییکا دلار"
}, {
    id: "JPY",
    displayName: "جاپون ِین",
    symbol: "JP¥",
    other: "جاپون ِین"
}, {
    id: "GIP",
    displayName: "جبل‌طارق ِپوند",
    symbol: "GIP",
    other: "جبل‌طارق ِپوند"
}, {
    id: "TWD",
    displayName: "جدید ِتایوان ِدولار",
    symbol: "NT$",
    other: "تایوان دلار"
}, {
    id: "ZAR",
    displayName: "جنوبی آفریقای ِراند",
    symbol: "ZAR",
    other: "جنوبی آفریقای ِراند"
}, {
    id: "SSP",
    displayName: "جنوبی سودان ِپوند",
    symbol: "SSP",
    other: "جنوبی سودان ِپوند"
}, {
    id: "KRW",
    displayName: "جنوبی کُره‌ی ِوون",
    symbol: "₩",
    other: "جنوبی کره وون"
}, {
    id: "DJF",
    displayName: "جیبوتی ِفرانک",
    symbol: "DJF",
    other: "جیبوتی ِفرانک"
}, {
    id: "DKK",
    displayName: "دانمارک ِکورن",
    symbol: "DKK",
    other: "دانمارک ِکورن"
}, {
    id: "DOP",
    displayName: "دومینیکن ِپزو",
    symbol: "DOP",
    other: "دومینیکن پزو"
}, {
    id: "RWF",
    displayName: "روآندای ِفرانک",
    symbol: "RWF",
    other: "روآندای ِفرانک"
}, {
    id: "RUB",
    displayName: "روسیه‌ی ِروبل",
    symbol: "RUB",
    other: "روسیه‌ی ِروبل"
}, {
    id: "RON",
    displayName: "رومانی ِلئو",
    symbol: "RON",
    other: "رومانی ِلئو"
}, {
    id: "ZMW",
    displayName: "زامبیای ِکواچا",
    symbol: "ZMW",
    other: "زامبیای ِکواچا"
}, {
    id: "STD",
    displayName: "سائوتومه و پرینسیپ ِدوبرا",
    symbol: "STD",
    other: "سائوتومه و پرینسیپ ِدوبرا"
}, {
    id: "LKR",
    displayName: "سریلانکا روپیه",
    symbol: "LKR",
    other: "سریلانکا روپیه"
}, {
    id: "SHP",
    displayName: "سنت هلنای ِپوند",
    symbol: "SHP",
    other: "سنت هلنای ِپوند"
}, {
    id: "SGD",
    displayName: "سنگاپور ِدلار",
    symbol: "SGD",
    other: "سنگاپور ِدلار"
}, {
    id: "SEK",
    displayName: "سوئد ِکرون",
    symbol: "SEK",
    other: "سوئد ِکرون"
}, {
    id: "SZL",
    displayName: "سوازیلند ِلیلانجنی",
    symbol: "SZL",
    other: "سوازیلند ِلیلانجنی"
}, {
    id: "SDG",
    displayName: "سودان ِپوند",
    symbol: "SDG",
    other: "سودان ِپوند"
}, {
    id: "SRD",
    displayName: "سورینام ِدولار",
    symbol: "SRD",
    other: "سورینام ِدولار"
}, {
    id: "SYP",
    displayName: "سوریه‌ی ِپوند",
    symbol: "SYP",
    other: "سوریه‌ی ِپوند"
}, {
    id: "SOS",
    displayName: "سومالی ِشیلینگ",
    symbol: "SOS",
    other: "سومالی ِشیلینگ"
}, {
    id: "CHF",
    displayName: "سوییس ِفرانک",
    symbol: "CHF",
    other: "سوییس ِفرانک"
}, {
    id: "SLL",
    displayName: "سیرالئون ِلئون",
    symbol: "SLL",
    other: "سیرالئون ِلئون"
}, {
    id: "SCR",
    displayName: "سیشل ِروپیه",
    symbol: "SCR",
    other: "سیشل ِروپیه"
}, {
    id: "XCD",
    displayName: "شرقی کاراییب ِدولار",
    symbol: "EC$",
    other: "شرقی کارائیب دلار"
}, {
    id: "KPW",
    displayName: "شمالی کره‌ی ِوون",
    symbol: "KPW",
    other: "شمالی کره وون"
}, {
    id: "CLP",
    displayName: "شیلی ِپزو",
    symbol: "CLP",
    other: "شیلی ِپزو"
}, {
    id: "RSD",
    displayName: "صربستون ِدینار",
    symbol: "RSD",
    other: "صربستون ِدینار"
}, {
    id: "CVE",
    displayName: "عاج ِساحل ِایسکودو",
    symbol: "CVE",
    other: "عاج ِساحل ِایسکودو"
}, {
    id: "IQD",
    displayName: "عراق ِدینار",
    symbol: "IQD",
    other: "عراق ِدینار"
}, {
    id: "SAR",
    displayName: "عربستون ِریال",
    symbol: "SAR",
    other: "عربستون ِریال"
}, {
    id: "OMR",
    displayName: "عمان ِریال",
    symbol: "OMR",
    other: "عمان ِریال"
}, {
    id: "XOF",
    displayName: "غربی آفریقای ِسی‌اف‌ای فرانک",
    symbol: "CFA",
    other: "غربی آفریقای ِسی‌اف‌ای فرانک"
}, {
    id: "GHS",
    displayName: "غنای ِسدی",
    symbol: "GHS",
    other: "غنای ِسدی"
}, {
    id: "FKP",
    displayName: "فالکلند ِجزایر ِپوند",
    symbol: "FKP",
    other: "فالکلند ِجزایر ِپوند"
}, {
    id: "PHP",
    displayName: "فیلیپین ِپزو",
    symbol: "PHP",
    other: "فیلیپین ِپزو"
}, {
    id: "KZT",
    displayName: "قراقستون ِتنگ",
    symbol: "KZT",
    other: "قراقستون ِتنگ"
}, {
    id: "KGS",
    displayName: "قرقیزستون ِسام",
    symbol: "KGS",
    other: "قرقیزستون ِسام"
}, {
    id: "QAR",
    displayName: "قطر ِریال",
    symbol: "QAR",
    other: "قطر ِریال"
}, {
    id: "LAK",
    displayName: "لائوس ِکیپ",
    symbol: "LAK",
    other: "لائوس ِکیپ"
}, {
    id: "LBP",
    displayName: "لبنان ِپوند",
    symbol: "LBP",
    other: "لبنان ِپوند"
}, {
    id: "PLN",
    displayName: "لهستون ِزلوتی",
    symbol: "PLN",
    other: "لهستون ِزلوتی"
}, {
    id: "LRD",
    displayName: "لیبریای ِدولار",
    symbol: "LRD",
    other: "لیبریا دلار"
}, {
    id: "LYD",
    displayName: "لیبی ِدینار",
    symbol: "LYD",
    other: "لیبی ِدینار"
}, {
    id: "MGA",
    displayName: "ماداگاسکار ِآریاری",
    symbol: "MGA",
    other: "ماداگاسکار ِآریاری"
}, {
    id: "MWK",
    displayName: "مالاوی ِکواچا",
    symbol: "MWK",
    other: "مالاوی ِکواچا"
}, {
    id: "MVR",
    displayName: "مالدیو ِروفیا",
    symbol: "MVR",
    other: "مالدیو ِروفیا"
}, {
    id: "MYR",
    displayName: "مالزی ِرینگیت",
    symbol: "MYR",
    other: "مالزی ِرینگیت"
}, {
    id: "MOP",
    displayName: "ماکائو ِپاتاجا",
    symbol: "MOP",
    other: "ماکائو ِپاتاجا"
}, {
    id: "AED",
    displayName: "متحده عربی امارات ِدرهم",
    symbol: "AED",
    other: "امارات ِدرهم"
}, {
    id: "HUF",
    displayName: "مجارستون ِفروینت",
    symbol: "HUF",
    other: "مجارستون ِفروینت"
}, {
    id: "MAD",
    displayName: "مراکش ِدرهم",
    symbol: "MAD",
    other: "مراکش ِدرهم"
}, {
    id: "EGP",
    displayName: "مصر ِپوند",
    symbol: "EGP",
    other: "مصر ِپوند"
}, {
    id: "MNT",
    displayName: "مغلستون ِتوگریک",
    symbol: "MNT",
    other: "مغلستون ِتوگریک"
}, {
    id: "MKD",
    displayName: "مقدونیه‌ی ِدینار",
    symbol: "MKD",
    other: "مقدونیه‌ی ِدینار"
}, {
    id: "MRO",
    displayName: "موریتانی ِاوگوئیا",
    symbol: "MRO",
    other: "موریتانی ِاوگوئیا"
}, {
    id: "MUR",
    displayName: "موریتیان ِروپیه",
    symbol: "MUR",
    other: "موریتیان ِروپیه"
}, {
    id: "MZN",
    displayName: "موزامبیک متیکال",
    symbol: "MZN",
    other: "موزامبیک متیکال"
}, {
    id: "MDL",
    displayName: "مولداوی ِلئو",
    symbol: "MDL",
    other: "مولداوی ِلئو"
}, {
    id: "MXN",
    displayName: "مکزیک ِپزو",
    symbol: "MX$",
    other: "مکزیک پزو"
}, {
    id: "MMK",
    displayName: "میانمار ِکیات",
    symbol: "MMK",
    other: "میانمار ِکیات"
}, {
    id: "XAF",
    displayName: "میونی آفریقای ِسی‌اف‌ای فرانک",
    symbol: "FCFA",
    other: "میونی آفریقای ِسی‌اف‌ای فرانک"
}, {
    id: "NAD",
    displayName: "نامبیای ِدولار",
    symbol: "NAD",
    other: "نامبیای ِدلار"
}, {
    id: "NOK",
    displayName: "نروژ ِکرون",
    symbol: "NOK",
    other: "نروژ ِکرون"
}, {
    id: "NPR",
    displayName: "نپال ِروپیه",
    symbol: "NPR",
    other: "نپال ِروپیه"
}, {
    id: "NGN",
    displayName: "نیجریه‌ی ِنیارا",
    symbol: "NGN",
    other: "نیجریه‌ی ِنیارا"
}, {
    id: "NIO",
    displayName: "نیکاراگوئه‌ی ِکوردوبا",
    symbol: "NIO",
    other: "نیکاراگوئه کوردوبا"
}, {
    id: "HTG",
    displayName: "هائیتی ِگورد",
    symbol: "HTG",
    other: "هاییتی گورد"
}, {
    id: "ANG",
    displayName: "هلند ِآنتیل ِجزایر ِگویلدر",
    symbol: "ANG",
    other: "هلند ِآنتیل ِجزایر ِگویلدر"
}, {
    id: "INR",
    displayName: "هند ِروپیه",
    symbol: "₹",
    other: "هند ِروپیه"
}, {
    id: "HNL",
    displayName: "هندوراس ِلمپیرا",
    symbol: "HNL",
    other: "هندوراس لمپیرا"
}, {
    id: "HKD",
    displayName: "هونگ کونگ ِدولار",
    symbol: "HK$",
    other: "هنگ کنگ ِدلار"
}, {
    id: "VEF",
    displayName: "ونزوئلایِ بولیوار",
    symbol: "VEF",
    other: "ونزوئلایِ بولیوار"
}, {
    id: "VND",
    displayName: "ویتنام ِدنگ",
    symbol: "₫",
    other: "ویتنام ِدنگ"
}, {
    id: "PYG",
    displayName: "پاراگوئه‌ی ِگوارانی",
    symbol: "PYG",
    other: "پاراگوئه‌ی ِگوارانی"
}, {
    id: "PAB",
    displayName: "پانامای ِبالبوا",
    symbol: "PAB",
    other: "پانامای بالبوا"
}, {
    id: "PKR",
    displayName: "پاکستون روپیه",
    symbol: "PKR",
    other: "پاکستون روپیه"
}, {
    id: "PEN",
    displayName: "پروی ِنوئوو سول",
    symbol: "PEN",
    other: "پروی ِنوئوو سول"
}, {
    id: "CZK",
    displayName: "چک ِکرون",
    symbol: "CZK",
    other: "چک ِکرون"
}, {
    id: "CNY",
    displayName: "چین ِیوآن",
    symbol: "CN¥",
    other: "چین ِیوآن"
}, {
    id: "CRC",
    displayName: "کاستاریکای ِکولون",
    symbol: "CRC",
    other: "کاستاریکا کولون"
}, {
    id: "KHR",
    displayName: "کامبوج ِریل",
    symbol: "KHR",
    other: "کامبوج ِریل"
}, {
    id: "KMF",
    displayName: "کامرون ِفرانک",
    symbol: "KMF",
    other: "کامرون ِفرانک"
}, {
    id: "CAD",
    displayName: "کانادای ِدولار",
    symbol: "CA$",
    other: "کانادای ِدلار"
}, {
    id: "KYD",
    displayName: "کایمن جزیره‌ی ِدولار",
    symbol: "KYD",
    other: "کایمن جزیره‌ی دلار"
}, {
    id: "HRK",
    displayName: "کرواسی ِکونا",
    symbol: "HRK",
    other: "کرواسی ِکونا"
}, {
    id: "COP",
    displayName: "کلمبیای ِپزو",
    symbol: "COP",
    other: "کلمبیای ِپزو"
}, {
    id: "CDF",
    displayName: "کنگوی ِفرانک",
    symbol: "CDF",
    other: "کنگوی ِفرانک"
}, {
    id: "KES",
    displayName: "کنیای ِشیلینگ",
    symbol: "KES",
    other: "کنیای ِشیلینگ"
}, {
    id: "CUC",
    displayName: "کوبای ِتبدیل‌بَیی پزو",
    symbol: "CUC",
    other: "کوبای تبدیل‌بَیی پزو"
}, {
    id: "CUP",
    displayName: "کوبای ِپزو",
    symbol: "CUP",
    other: "کوبای پزو"
}, {
    id: "KWD",
    displayName: "کویت ِدینار",
    symbol: "KWD",
    other: "کویت ِدینار"
}, {
    id: "GMD",
    displayName: "گامبیای ِدالاسی",
    symbol: "GMD",
    other: "گامبیای ِدالاسی"
}, {
    id: "GEL",
    displayName: "گرجستون ِلاری",
    symbol: "GEL",
    other: "گرجستون ِلاری"
}, {
    id: "GTQ",
    displayName: "گواتمالا کتزال",
    symbol: "GTQ",
    other: "گواتمالای ِکتزال"
}, {
    id: "GYD",
    displayName: "گویان ِدولار",
    symbol: "GYD",
    other: "گویان دلار"
}, {
    id: "GNF",
    displayName: "گینه‌ی ِفرانک",
    symbol: "GNF",
    other: "گینه‌ی ِفرانک"
}, {
    id: "YER",
    displayName: "یمن ِریال",
    symbol: "YER",
    other: "یمن ِریال"
}, {
    id: "EUR",
    displayName: "یورو",
    symbol: "€",
    other: "یورو"
} ];

module.exports = inter;