function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./ur.js"), inter = defaults({
    renderers: {}
}, P);

var _3bq01 = {
    all: {
        leap: "{0}bis"
    }
}, _3bq02 = {
    one: "{0}°",
    other: "{0}°"
}, _3bq03 = {
    a: "h a – h a",
    h: "h–h a"
}, _3bq04 = {
    displayName: "منطقۂ وقت"
}, _3bq05 = {
    displayName: "ہفتے کا دن"
}, _3bq06 = [ "Before R.O.C.", "R.O.C." ], _3bq07 = {
    one: "{0} A",
    other: "{0} A"
}, _3bq08 = {
    one: "{0} Ω",
    other: "{0} Ω"
}, _3bq09 = {
    one: "{0} V",
    other: "{0} V"
}, _3bq010 = {
    one: "{0} J",
    other: "{0} J"
}, _3bq011 = {
    one: "{0} TB",
    other: "{0} TB"
}, _3bq012 = {
    one: "{0} Tb",
    other: "{0} Tb"
}, _3bq013 = {
    one: "{0} GB",
    other: "{0} GB"
}, _3bq014 = {
    one: "{0} Gb",
    other: "{0} Gb"
}, _3bq015 = {
    one: "{0} MB",
    other: "{0} MB"
}, _3bq016 = {
    one: "{0} Mb",
    other: "{0} Mb"
}, _3bq017 = {
    one: "{0} kB",
    other: "{0} kB"
}, _3bq018 = {
    one: "{0} kb",
    other: "{0} kb"
}, _3bq019 = {
    one: "{0} دن",
    other: "{0} دن"
}, _3bq020 = {
    one: "{0} mA",
    other: "{0} mA"
}, _3bq021 = {
    one: "{0} kJ",
    other: "{0} kJ"
}, _3bq022 = {
    one: "{0} Hz",
    other: "{0} Hz"
}, _3bq023 = {
    one: "{0} dm",
    other: "{0} dm"
}, _3bq024 = {
    one: "{0} nm",
    other: "{0} nm"
}, _3bq025 = {
    one: "{0} lx",
    other: "{0} lx"
}, _3bq026 = {
    one: "{0} µg",
    other: "{0} µg"
}, _3bq027 = {
    one: "{0} GW",
    other: "{0} GW"
}, _3bq028 = {
    one: "{0} MW",
    other: "{0} MW"
}, _3bq029 = {
    one: "{0} mW",
    other: "{0} mW"
}, _3bq030 = {
    one: "{0} kn",
    other: "{0} kn"
}, _3bq031 = {
    one: "{0} m³",
    other: "{0} m³"
}, _3bq032 = {
    one: "{0} ML",
    other: "{0} ML"
}, _3bq033 = {
    one: "{0} hL",
    other: "{0} hL"
}, _3bq034 = {
    one: "{0} mL",
    other: "{0} mL"
}, _3bq035 = {
    one: "{0} mc",
    other: "{0} mc"
}, _3bq036 = {
    one: "{0} qt",
    other: "{0} qt"
}, _3bq037 = {
    one: "{0} pt",
    other: "{0} pt"
}, _3bq038 = {
    one: "{0} m²",
    other: "{0} m²"
}, _3bq039 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _3bq040 = {
    d: "d/M – d/M",
    M: "d/M – d/M"
}, _3bq041 = [ "S", "M", "T", "W", "T", "F", "S" ], _3bq042 = {
    one: "{0} rev",
    other: "{0} rev"
}, _3bq043 = {
    one: "{0} rad",
    other: "{0} rad"
}, _3bq044 = {
    one: "{0} mpg",
    other: "{0} mpg"
}, _3bq045 = {
    one: "{0} bit",
    other: "{0} bit"
}, _3bq046 = {
    one: "{0} سال",
    other: "{0} سال"
}, _3bq047 = {
    one: "{0} منٹ",
    other: "{0} منٹ"
}, _3bq048 = {
    one: "{0} cal",
    other: "{0} cal"
}, _3bq049 = {
    one: "{0} Cal",
    other: "{0} Cal"
}, _3bq050 = {
    one: "{0} kWh",
    other: "{0} kWh"
}, _3bq051 = {
    one: "{0} GHz",
    other: "{0} GHz"
}, _3bq052 = {
    one: "{0} MHz",
    other: "{0} MHz"
}, _3bq053 = {
    one: "{0} kHz",
    other: "{0} kHz"
}, _3bq054 = {
    one: "{0} میل",
    other: "{0} میل"
}, _3bq055 = {
    one: "{0} فیٹ",
    other: "{0} فیٹ"
}, _3bq056 = {
    one: "{0} انچ",
    other: "{0} انچ"
}, _3bq057 = {
    one: "{0} ونس",
    other: "{0} ونس"
}, _3bq058 = {
    one: "{0} واٹ",
    other: "{0} واٹ"
}, _3bq059 = {
    one: "{0} psi",
    other: "{0} psi"
}, _3bq060 = {
    one: "{0} in³",
    other: "{0} in³"
}, _3bq061 = {
    one: "{0} mpt",
    other: "{0} mpt"
}, _3bq062 = {
    one: "{0} gal",
    other: "{0} gal"
}, _3bq063 = {
    one: "{0} tsp",
    other: "{0} tsp"
}, _3bq064 = {
    one: "{0} km²",
    other: "{0} km²"
}, _3bq065 = {
    d: "d–d MMM",
    M: "d MMM – d MMM"
}, _3bq066 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _3bq067 = {
    one: "{0} m/s²",
    other: "{0} m/s²"
}, _3bq068 = {
    one: "{0} ڈگری",
    other: "{0} ڈگری"
}, _3bq069 = {
    one: "{0} ایکڑ",
    other: "{0} ایکڑ"
}, _3bq070 = {
    one: "{0} L/km",
    other: "{0} L/km"
}, _3bq071 = {
    one: "{0} byte",
    other: "{0} byte"
}, _3bq072 = {
    one: "{0} صدی",
    other: "{0} صدیاں"
}, _3bq073 = {
    one: "{0} ہفتہ",
    other: "{0} ہفتے"
}, _3bq074 = {
    one: "{0} kcal",
    other: "{0} kcal"
}, _3bq075 = {
    one: "{0} میٹر",
    other: "{0} میٹر"
}, _3bq076 = {
    one: "{0} یارڈ",
    other: "{0} یارڈ"
}, _3bq077 = {
    one: "{0} گرام",
    other: "{0} گرام"
}, _3bq078 = {
    one: "{0} پونڈ",
    other: "{0} پونڈ"
}, _3bq079 = {
    one: "{0} oz t",
    other: "{0} oz t"
}, _3bq080 = {
    one: "{0} لیٹر",
    other: "{0} لیٹر"
}, _3bq081 = {
    one: "{0} tbsp",
    other: "{0} tbsp"
}, _3bq082 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _3bq083 = {
    M: "M/y – M/y G",
    y: "M/y – M/y G"
}, _3bq084 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _3bq085 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _3bq086 = {
    one: "{0} ہیکٹر",
    other: "{0} ہیکٹر"
}, _3bq087 = {
    one: "{0} قیراط",
    other: "{0} قیراط"
}, _3bq088 = {
    one: "{0} مہینہ",
    other: "{0} مہینے"
}, _3bq089 = {
    one: "{0} گھنٹہ",
    other: "{0} گھنٹے"
}, _3bq090 = {
    one: "{0} سیکنڈ",
    other: "{0} سیکنڈ"
}, _3bq091 = {
    one: "{0} mm Hg",
    other: "{0} mm Hg"
}, _3bq092 = {
    displayName: "قبل دوپہر/بعد دوپہر"
}, _3bq093 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _3bq094 = {
    M: "MMM–MMM y G",
    y: "MMM y – MMM y G"
}, _3bq095 = {
    one: "{0} دن قبل",
    other: "{0} دن قبل"
}, _3bq096 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _3bq097 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _3bq098 = {
    one: "{0} جی-فورس",
    other: "{0} جی-فورس"
}, _3bq099 = {
    one: "{0} آرک منٹ",
    other: "{0} آرک منٹ"
}, _3bq0100 = {
    one: "{0} ملیمیٹر",
    other: "{0} ملیمیٹر"
}, _3bq0101 = {
    one: "{0} کلو واٹ",
    other: "{0} کلو واٹ"
}, _3bq0102 = {
    one: "{0} ملی بار",
    other: "{0} ملی بار"
}, _3bq0103 = {
    one: "{0} ماہ میں",
    other: "{0} ماہ میں"
}, _3bq0104 = {
    one: "{0} ماہ قبل",
    other: "{0} ماہ قبل"
}, _3bq0105 = {
    one: "{0} دن میں",
    other: "{0} دنوں میں"
}, _3bq0106 = {
    one: "{0} منٹ قبل",
    other: "{0} منٹ قبل"
}, _3bq0107 = {
    one: "{0} منٹ میں",
    other: "{0} منٹ میں"
}, _3bq0108 = {
    one: "{0} سکویر فٹ",
    other: "{0} سکویر فٹ"
}, _3bq0109 = {
    one: "{0} کلو میٹر",
    other: "{0} کلو میٹر"
}, _3bq0110 = {
    one: "{0} کلو گرام",
    other: "{0} کلو گرام"
}, _3bq0111 = {
    d: "E، d/M – E، d/M",
    M: "E، d/M – E، d/M"
}, _3bq0112 = {
    M: "MMMM–MMMM y G",
    y: "MMMM y – MMMM y G"
}, _3bq0113 = {
    one: "+{0} ماہ میں",
    other: "+{0} ماہ میں"
}, _3bq0114 = {
    one: "{0} سال میں",
    other: "{0} سالوں میں"
}, _3bq0115 = {
    one: "{0} سال پہلے",
    other: "{0} سال پہلے"
}, _3bq0116 = {
    one: "+{0} سال میں",
    other: "+{0} سال میں"
}, _3bq0117 = {
    one: "+{0} سہ ماہی",
    other: "+{0} سہ ماہی"
}, _3bq0118 = {
    one: "-{0} سہ ماہی",
    other: "-{0} سہ ماہی"
}, _3bq0119 = {
    one: "{0} ہفتہ قبل",
    other: "{0} ہفتے قبل"
}, _3bq0120 = {
    one: "{0} ہفتے قبل",
    other: "{0} ہفتے قبل"
}, _3bq0121 = {
    one: "{0} ہفتے میں",
    other: "{0} ہفتے میں"
}, _3bq0122 = {
    one: "{0} ہفتہ میں",
    other: "{0} ہفتے میں"
}, _3bq0123 = {
    one: "{0} دن پہلے",
    other: "{0} دنوں پہلے"
}, _3bq0124 = {
    one: "{0} دنوں میں",
    other: "{0} دنوں میں"
}, _3bq0125 = {
    "0": "اس سال",
    "1": "اگلے سال",
    "-1": "گزشتہ سال"
}, _3bq0126 = {
    "0": "اس ماہ",
    "1": "اگلے ماہ",
    "-1": "گزشتہ ماہ"
}, _3bq0127 = {
    one: "{0} ہفتہ میں",
    other: "{0} ہفتوں میں"
}, _3bq0128 = {
    "0": "اس بدھ",
    "1": "اگلے بدھ",
    "-1": "پچھلے بدھ"
}, _3bq0129 = {
    "0": "اس بدھ",
    "1": "اگلے بدھ",
    "-1": "گزشتہ بدھ"
}, _3bq0130 = {
    one: "{0} آرک سیکنڈ",
    other: "{0} آرک سیکنڈ"
}, _3bq0131 = {
    one: "{0} سکویر میل",
    other: "{0} سکویر میل"
}, _3bq0132 = {
    one: "{0} پیکو میٹر",
    other: "{0} پیکو میٹر"
}, _3bq0133 = {
    one: "{0} ہارس پاور",
    other: "{0} ہارس پاور"
}, _3bq0134 = {
    one: "{0} انچ مرکری",
    other: "{0} انچ مرکری"
}, _3bq0135 = {
    one: "{0} کیوبک میل",
    other: "{0} کیوبک میل"
}, _3bq0136 = {
    one: "{0} سال پہلے",
    other: "{0} سالوں پہلے"
}, _3bq0137 = {
    one: "-{0} سال پہلے",
    other: "-{0} سال پہلے"
}, _3bq0138 = {
    one: "{0} گھنٹہ میں",
    other: "{0} گھنٹے میں"
}, _3bq0139 = {
    one: "{0} گھنٹے قبل",
    other: "{0} گھنٹے قبل"
}, _3bq0140 = {
    one: "{0} گھنٹے میں",
    other: "{0} گھنٹے میں"
}, _3bq0141 = {
    one: "{0} گھنٹہ قبل",
    other: "{0} گھنٹے قبل"
}, _3bq0142 = {
    one: "{0} سیکنڈ قبل",
    other: "{0} سیکنڈ قبل"
}, _3bq0143 = {
    one: "{0} سیکنڈ میں",
    other: "{0} سیکنڈ میں"
}, _3bq0144 = {
    one: "{0} گھنٹہ میں",
    other: "{0} گھنٹوں میں"
}, _3bq0145 = {
    one: "{0} نینو سیکنڈ",
    other: "{0} نینو سیکنڈ"
}, _3bq0146 = {
    one: "{0} سینٹی میٹر",
    other: "{0} سینٹی میٹر"
}, _3bq0147 = {
    "0": "اس ہفتہ",
    "1": "اگلے ہفتہ",
    "-1": "گزشتہ ہفتہ"
}, _3bq0148 = {
    "0": "اس ہفتہ",
    "1": "اگلے ہفتہ",
    "-1": "پچھلے ہفتہ"
}, _3bq0149 = {
    one: "{0} گھنٹہ پہلے",
    other: "{0} گھنٹے پہلے"
}, _3bq0150 = {
    "0": "اس منگل",
    "1": "اگلے منگل",
    "-1": "پچھلے منگل"
}, _3bq0151 = {
    "0": "اس جمعہ",
    "1": "اگلے جمعہ",
    "-1": "پچھلے جمعہ"
}, _3bq0152 = {
    "0": "اس منگل",
    "1": "اگلے منگل",
    "-1": "گزشتہ منگل"
}, _3bq0153 = {
    "0": "اس جمعہ",
    "1": "اگلے جمعہ",
    "-1": "گزشتہ جمعہ"
}, _3bq0154 = {
    one: "{0} سہ ماہی میں",
    other: "{0} سہ ماہی میں"
}, _3bq0155 = {
    one: "{0} سہ ماہی قبل",
    other: "{0} سہ ماہی قبل"
}, _3bq0156 = {
    "0": "اس مہینہ",
    "1": "اگلے مہینہ",
    "-1": "پچھلے مہینہ"
}, _3bq0157 = {
    "0": "اس اتوار",
    "1": "اگلے اتوار",
    "-1": "گزشتہ اتوار"
}, _3bq0158 = {
    "0": "اس سنیچر",
    "1": "اگلے سنیچر",
    "-1": "گزشتہ سنیچر"
}, _3bq0159 = {
    d: "E، d MMM – E، d MMM",
    M: "E، d MMM – E، d MMM"
}, _3bq0160 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _3bq0161 = {
    one: "{0} سہ ماہی پہلے",
    other: "{0} سہ ماہی پہلے"
}, _3bq0162 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _3bq0163 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _3bq0164 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _3bq0165 = {
    "0": "اس سوموار",
    "1": "اگلے سوموار",
    "-1": "پچھلے سوموار"
}, _3bq0166 = {
    "0": "اس جمعرات",
    "1": "اگلے جمعرات",
    "-1": "پچھلے جمعرات"
}, _3bq0167 = {
    "0": "اس سوموار",
    "1": "اگلے سوموار",
    "-1": "گزشتہ سوموار"
}, _3bq0168 = {
    "0": "اس جمعرات",
    "1": "اگلی جمعرات",
    "-1": "گزشتہ جمعرات"
}, _3bq0169 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _3bq0170 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _3bq0171 = {
    relative: _3bq0128
}, _3bq0172 = {
    relative: _3bq0129
}, _3bq0173 = [ "اتوار", "سوموار", "منگل", "بدھ", "جمعرات", "جمعہ", "ہفتہ" ], _3bq0174 = {
    id: "IC",
    displayName: "جزائر کناری",
    hasTimeZones: false
}, _3bq0175 = {
    id: "BV",
    displayName: "جزیرہ بوویت",
    hasTimeZones: false
}, _3bq0176 = {
    id: "DG",
    displayName: "ڈیگو گارشیا",
    hasTimeZones: false
}, _3bq0177 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _3bq0178 = {
    id: "AC",
    displayName: "جزیرہ اسینشن",
    hasTimeZones: false
}, _3bq0179 = {
    id: "CP",
    displayName: "جزیرہ کلپرٹن",
    hasTimeZones: false
}, _3bq0180 = {
    relative: _3bq0150
}, _3bq0181 = {
    relative: _3bq0151
}, _3bq0182 = {
    relative: _3bq0152
}, _3bq0183 = {
    relative: _3bq0153
}, _3bq0184 = {
    wide: [ "ق م", "عیسوی سن" ],
    abbreviated: [ "ق م", "عیسوی سن" ]
}, _3bq0185 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _3bq0186 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _3bq0187 = {
    id: "TA",
    displayName: "ترسٹان دا کونیا",
    hasTimeZones: false
}, _3bq0188 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _3bq0189 = {
    relative: _3bq0157
}, _3bq0190 = {
    relative: _3bq0158
}, _3bq0191 = {
    id: "IO",
    displayName: "برطانوی بحرہند خطہ",
    hasTimeZones: true
}, _3bq0192 = {
    d: "d/M/y – d/M/y G",
    M: "d/M/y – d/M/y G",
    y: "d/M/y – d/M/y G"
}, _3bq0193 = {
    id: "UM",
    displayName: "امریکی بیرونی جزائر",
    hasTimeZones: true
}, _3bq0194 = {
    id: "CC",
    displayName: "جزائر (کیلنگ) کوکوس",
    hasTimeZones: true
}, _3bq0195 = {
    relative: _3bq0165
}, _3bq0196 = {
    relative: _3bq0166
}, _3bq0197 = {
    relative: _3bq0167
}, _3bq0198 = {
    relative: _3bq0168
}, _3bq0199 = {
    id: "HM",
    displayName: "جزائر ہرڈ و مکڈونلڈ",
    hasTimeZones: false
}, _3bq0200 = [ "پہلی سہ ماہی", "دوسری سہ ماہی", "تیسری سہ ماہی", "چوتهی سہ ماہی" ], _3bq0201 = {
    id: "CK",
    displayName: "جزائر کک",
    regionId: "061",
    hasTimeZones: true
}, _3bq0202 = {
    d: "d–d MMM، y G",
    M: "d MMM – d MMM، y G",
    y: "d MMM، y – d MMM، y G"
}, _3bq0203 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _3bq0204 = {
    id: "FO",
    displayName: "جزائر فیرو",
    regionId: "154",
    hasTimeZones: true
}, _3bq0205 = {
    id: "CI",
    displayName: "کوت داوواغ",
    regionId: "011",
    hasTimeZones: true
}, _3bq0206 = {
    id: "AX",
    displayName: "جزائر آلینڈ",
    regionId: "154",
    hasTimeZones: true
}, _3bq0207 = {
    id: "MH",
    displayName: "جزائر مارشل",
    regionId: "057",
    hasTimeZones: true
}, _3bq0208 = {
    id: "SB",
    displayName: "جزائر سلیمان",
    regionId: "054",
    hasTimeZones: true
}, _3bq0209 = {
    id: "PN",
    displayName: "جزائر پٹکیرن",
    regionId: "061",
    hasTimeZones: true
}, _3bq0210 = {
    id: "NF",
    displayName: "جزیرہ نارفوک",
    regionId: "053",
    hasTimeZones: true
}, _3bq0211 = {
    id: "FK",
    displayName: "جزائر فاکلینڈ",
    regionId: "005",
    hasTimeZones: true
}, _3bq0212 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _3bq0213 = {
    id: "GF",
    displayName: "فرانسیسی گیانا",
    regionId: "005",
    hasTimeZones: true
}, _3bq0214 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _3bq0215 = {
    id: "VI",
    displayName: "امریکی جزائر ورجن",
    regionId: "029",
    hasTimeZones: true
}, _3bq0216 = {
    "0": "آج",
    "1": "آئندہ کل",
    "2": "آنے والا پرسوں",
    "-2": "گزشتہ پرسوں",
    "-1": "گزشتہ کل"
}, _3bq0217 = {
    id: "VG",
    displayName: "برطانوی جزائر ورجن",
    regionId: "029",
    hasTimeZones: true
}, _3bq0218 = {
    id: "TC",
    displayName: "جزائر کیکس و ترکیہ",
    regionId: "029",
    hasTimeZones: true
}, _3bq0219 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _3bq0220 = {
    id: "MP",
    displayName: "جزائر شمالی ماریانا",
    regionId: "057",
    hasTimeZones: true
}, _3bq0221 = {
    d: "E، d/M/y – E، d/M/y G",
    M: "E، d/M/y – E، d/M/y G",
    y: "E، d/M/y – E، d/M/y G"
}, _3bq0222 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _3bq0223 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _3bq0224 = {
    d: "E، d MMM – E، d MMM، y G",
    M: "E، d MMM – E، d MMM، y G",
    y: "E، d MMM، y – E، d MMM، y G"
}, _3bq0225 = [ "جنوری", "فروری", "مارچ", "اپریل", "مئی", "جون", "جولائی", "اگست", "ستمبر", "اکتوبر", "نومبر", "دسمبر" ], _3bq0226 = {
    future: _3bq0103,
    past: _3bq0104
}, _3bq0227 = {
    past: _3bq095,
    future: _3bq0124
}, _3bq0228 = {
    past: _3bq0106,
    future: _3bq0107
}, _3bq0229 = {
    past: _3bq0104,
    future: _3bq0113
}, _3bq0230 = {
    future: _3bq0105,
    past: _3bq0123
}, _3bq0231 = {
    future: _3bq0114,
    past: _3bq0115
}, _3bq0232 = {
    future: _3bq0117,
    past: _3bq0118
}, _3bq0233 = {
    past: _3bq0120,
    future: _3bq0121
}, _3bq0234 = {
    past: _3bq0119,
    future: _3bq0122
}, _3bq0235 = {
    future: _3bq0124,
    past: _3bq0123
}, _3bq0236 = {
    future: _3bq0127,
    past: _3bq0119
}, _3bq0237 = {
    future: _3bq0114,
    past: _3bq0136
}, _3bq0238 = {
    future: _3bq0116,
    past: _3bq0137
}, _3bq0239 = {
    past: _3bq0139,
    future: _3bq0140
}, _3bq0240 = {
    past: _3bq0142,
    future: _3bq0143
}, _3bq0241 = {
    past: _3bq0141,
    future: _3bq0144
}, _3bq0242 = {
    future: _3bq0138,
    past: _3bq0149
}, _3bq0243 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _3bq0244 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _3bq0245 = {
    future: _3bq0154,
    past: _3bq0155
}, _3bq0246 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _3bq0247 = {
    future: _3bq0154,
    past: _3bq0161
}, _3bq0248 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _3bq0249 = {
    midnight: "آدھی رات",
    am: "a",
    pm: "p",
    morning1: "صبح",
    afternoon1: "دوپہر",
    afternoon2: "سہ پہر",
    evening1: "شام",
    night1: "رات"
}, _3bq0250 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _3bq0251 = {
    midnight: "آدھی رات",
    am: "AM",
    pm: "PM",
    morning1: "صبح",
    afternoon1: "دوپہر",
    afternoon2: "سہ پہر",
    evening1: "شام",
    night1: "رات"
}, _3bq0252 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _3bq0253 = [ "محرم", "صفر", "ر بیع الاول", "ر بیع الثانی", "جمادی الاول", "جمادی الثانی", "رجب", "شعبان", "رمضان", "شوال", "ذوالقعدۃ", "ذوالحجۃ" ], _3bq0254 = {
    displayName: "منٹ",
    relativeTime: _3bq0228
}, _3bq0255 = {
    displayName: "مہینہ",
    relativeTime: _3bq0229
}, _3bq0256 = {
    midnight: "آدھی رات",
    am: "قبل دوپہر",
    pm: "بعد دوپہر",
    morning1: "صبح",
    afternoon1: "دوپہر",
    afternoon2: "سہ پہر",
    evening1: "شام",
    night1: "رات"
}, _3bq0257 = {
    displayName: "گھنٹہ",
    relativeTime: _3bq0239
}, _3bq0258 = {
    displayName: "سیکنڈ",
    relativeTime: _3bq0240
}, _3bq0259 = {
    displayName: "گھنٹہ",
    relativeTime: _3bq0241
}, _3bq0260 = {
    displayName: "گھنٹہ",
    relativeTime: _3bq0242
}, _3bq0261 = {
    displayName: "سہ ماہی",
    relativeTime: _3bq0245
}, _3bq0262 = {
    displayName: "سہ ماہی",
    relativeTime: _3bq0247
}, _3bq0263 = {
    displayName: "سیکنڈ",
    relative: [ "اب" ],
    relativeTime: _3bq0240
}, _3bq0264 = {
    abbreviated: _3bq0200,
    narrow: [ "1", "2", "3", "4" ],
    wide: _3bq0200
}, _3bq0265 = {
    displayName: "مہینہ",
    relative: _3bq0126,
    relativeTime: _3bq0226
}, _3bq0266 = {
    displayName: "سال",
    relative: _3bq0125,
    relativeTime: _3bq0231
}, _3bq0267 = {
    displayName: "سال",
    relative: _3bq0125,
    relativeTime: _3bq0237
}, _3bq0268 = {
    displayName: "سال",
    relative: _3bq0125,
    relativeTime: _3bq0238
}, _3bq0269 = {
    displayName: "مہینہ",
    relative: _3bq0156,
    relativeTime: _3bq0226
}, _3bq0270 = {
    displayName: "ہفتہ",
    relative: _3bq0148,
    relativeTime: _3bq0233
}, _3bq0271 = {
    displayName: "ہفتہ",
    relative: _3bq0148,
    relativeTime: _3bq0234
}, _3bq0272 = {
    displayName: "ہفتہ",
    relative: _3bq0147,
    relativeTime: _3bq0236
}, _3bq0273 = {
    format: _3bq0212,
    numeric: _3bq01,
    standAlone: _3bq0212
}, _3bq0274 = {
    displayName: "سہ ماہی",
    relative: _3bq0177,
    relativeTime: _3bq0232
}, _3bq0275 = {
    displayName: "دن",
    relative: _3bq0216,
    relativeTime: _3bq0227
}, _3bq0276 = {
    displayName: "دن",
    relative: _3bq0216,
    relativeTime: _3bq0230
}, _3bq0277 = {
    displayName: "دن",
    relative: _3bq0216,
    relativeTime: _3bq0235
}, _3bq0278 = {
    abbreviated: _3bq0214,
    narrow: _3bq0169,
    wide: _3bq0214
}, _3bq0279 = {
    abbreviated: _3bq0173,
    narrow: _3bq041,
    wide: _3bq0173,
    "short": _3bq0173
}, _3bq0280 = {
    abbreviated: _3bq0219,
    narrow: _3bq0219,
    wide: _3bq0219
}, _3bq0281 = {
    abbreviated: _3bq0225,
    narrow: _3bq0160,
    wide: _3bq0225
}, _3bq0282 = {
    format: _3bq0280
}, _3bq0283 = {
    abbreviated: _3bq0244,
    narrow: _3bq0186,
    wide: _3bq0244
}, _3bq0284 = {
    abbreviated: _3bq0246,
    narrow: _3bq0169,
    wide: _3bq0246
}, _3bq0285 = {
    abbreviated: _3bq0243,
    narrow: _3bq0169,
    wide: _3bq0253
}, _3bq0286 = {
    abbreviated: _3bq0248,
    narrow: _3bq0186,
    wide: _3bq0248
}, _3bq0287 = {
    abbreviated: _3bq0250,
    narrow: _3bq0186,
    wide: _3bq0250
}, _3bq0288 = {
    abbreviated: _3bq0252,
    narrow: _3bq0169,
    wide: _3bq0252
}, _3bq0289 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "r-MM-dd h:mm a",
    mediumDateTime: "r MMM d h:mm:ss a",
    longDateTime: "r(U) MMMM d h:mm:ss a z",
    fullDateTime: "r(U) MMMM d, EEEE h:mm:ss a zzzz"
}, _3bq0290 = {
    shortDate: "d/M/yy GGGGG",
    fullDate: "EEEE، d MMMM، y G",
    longDate: "d MMMM، y G",
    mediumDate: "d MMM، y G",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "d/M/yy GGGGG h:mm a",
    mediumDateTime: "d MMM، y G h:mm:ss a",
    longDateTime: "d MMMM، y G h:mm:ss a z",
    fullDateTime: "EEEE، d MMMM، y G h:mm:ss a zzzz"
}, _3bq0291 = {
    format: _3bq0264,
    standAlone: _3bq0264
}, _3bq0292 = {
    abbreviated: _3bq0251,
    narrow: _3bq0249,
    wide: _3bq0251
}, _3bq0293 = {
    abbreviated: _3bq0251,
    narrow: _3bq0249,
    wide: _3bq0256
}, _3bq0294 = {
    basic: _3bq0290,
    cldr: P.calendars.buddhist.dateFormats
}, _3bq0295 = {
    format: _3bq0278,
    standAlone: _3bq0278
}, _3bq0296 = {
    format: _3bq0279,
    standAlone: _3bq0279
}, _3bq0297 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _3bq0298 = {
    format: _3bq0281,
    standAlone: _3bq0281
}, _3bq0299 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _3bq0300 = {
    format: _3bq0285,
    standAlone: _3bq0285
}, _3bq0301 = {
    format: _3bq0293,
    standAlone: _3bq0292
}, _3bq0302 = {
    basic: _3bq0289,
    cldr: _3bq0297
}, _3bq0303 = {
    d: {
        d: "d–d"
    },
    h: _3bq03,
    H: {
        H: "HH–HH"
    },
    hm: _3bq0170,
    Hm: _3bq082,
    hmv: _3bq0188,
    Hmv: _3bq093,
    hv: _3bq039,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _3bq040,
    MEd: _3bq0111,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _3bq065,
    MMMEd: _3bq0159,
    y: {
        y: "y–y G"
    },
    yM: _3bq083,
    yMd: _3bq0192,
    yMEd: _3bq0221,
    yMMM: _3bq094,
    yMMMd: _3bq0202,
    yMMMEd: _3bq0224,
    yMMMM: _3bq0112
}, _3bq0304 = {
    d: {
        d: "d–d"
    },
    h: _3bq03,
    H: {
        H: "HH–HH"
    },
    hm: _3bq0170,
    Hm: _3bq082,
    hmv: _3bq0188,
    Hmv: _3bq093,
    hv: _3bq039,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _3bq096,
    MEd: _3bq0162,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _3bq066,
    MMMEd: _3bq0163,
    y: {
        y: "U–U"
    },
    yM: _3bq084,
    yMd: _3bq0203,
    yMEd: _3bq0223,
    yMMM: _3bq085,
    yMMMd: _3bq0185,
    yMMMEd: _3bq0222,
    yMMMM: _3bq097
}, _3bq0305 = {
    abbreviated: _3bq0299,
    narrow: _3bq0299,
    wide: _3bq0299
}, _3bq0306 = {
    format: _3bq0305
}, _3bq0307 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _3bq0308 = {
    era: {
        displayName: "دور"
    },
    "month-short": _3bq0269,
    "month-narrow": _3bq0255,
    year: _3bq0266,
    "year-short": _3bq0267,
    "year-narrow": _3bq0268,
    quarter: _3bq0274,
    "quarter-short": _3bq0261,
    "quarter-narrow": _3bq0262,
    month: _3bq0265,
    week: _3bq0272,
    "week-short": _3bq0270,
    "week-narrow": _3bq0271,
    day: _3bq0276,
    "day-short": _3bq0277,
    "day-narrow": _3bq0275,
    weekday: _3bq05,
    dayperiod: _3bq092,
    hour: _3bq0260,
    "hour-short": _3bq0257,
    "hour-narrow": _3bq0259,
    minute: _3bq0254,
    "minute-short": _3bq0254,
    "minute-narrow": _3bq0254,
    second: _3bq0263,
    "second-short": _3bq0258,
    "second-narrow": _3bq0258,
    zone: _3bq04,
    mon: _3bq0195,
    tue: _3bq0180,
    wed: _3bq0171,
    thu: _3bq0196,
    fri: _3bq0181,
    sun: _3bq0189,
    "sun-short": _3bq0189,
    "sun-narrow": _3bq0189,
    "mon-short": _3bq0197,
    "mon-narrow": _3bq0197,
    "tue-short": _3bq0182,
    "tue-narrow": _3bq0182,
    "wed-short": _3bq0172,
    "wed-narrow": _3bq0172,
    "thu-short": _3bq0198,
    "thu-narrow": _3bq0198,
    "fri-short": _3bq0183,
    "fri-narrow": _3bq0183,
    sat: _3bq0190,
    "sat-short": _3bq0190,
    "sat-narrow": _3bq0190
}, _3bq0309 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _3bq0308
}, _3bq0310 = {
    dayParts: _3bq0282,
    days: _3bq0306,
    months: _3bq0306,
    years: _3bq0306,
    zodiacs: _3bq0282
}, _3bq0311 = {
    dateFormats: _3bq0294,
    datePartsOrder: "dmy",
    dateIntervalFormats: _3bq0303,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _3bq0296,
    dayPeriods: _3bq0301,
    monthNames: _3bq0300,
    eraNames: _3bq0184,
    quarterNames: _3bq0291,
    fields: _3bq0308
}, _3bq0312 = {
    dateFormats: _3bq0302,
    datePartsOrder: "md",
    dateIntervalFormats: _3bq0304,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _3bq0296,
    dayPeriods: _3bq0301,
    cyclicNames: _3bq0310,
    monthNames: _3bq0295,
    monthPatterns: _3bq0273,
    quarterNames: _3bq0291,
    fields: _3bq0308
};

inter.id = "ur_in";

inter.listPatterns = {
    unit: {
        "2": "{1}، {0}",
        end: "{1}، {0}",
        start: "{0}, {1}",
        middle: "{0}, {1}"
    },
    unitNarrow: {
        "2": "{1} {0}",
        start: "{1} {0}",
        middle: "{1} {0}",
        end: "{1} {0}"
    },
    unitShort: {
        "2": "{1}، {0}",
        end: "{1}، {0}",
        start: "{0}، {1}",
        middle: "{0}، {1}"
    },
    "default": P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            lengthAstronomicalUnit: {
                one: "{0} فلکیاتی اکائی",
                other: "{0} فلکیاتی اکائیاں"
            },
            accelerationGForce: _3bq098,
            accelerationMeterPerSecondSquared: _3bq067,
            angleRevolution: _3bq042,
            angleRadian: _3bq043,
            angleDegree: _3bq068,
            angleArcMinute: _3bq099,
            angleArcSecond: _3bq0130,
            areaSquareKilometer: {
                one: "{0} سکویر کلو میٹر",
                other: "{0} سکویر کلو میٹر"
            },
            areaHectare: _3bq086,
            areaSquareMeter: {
                one: "{0} سکویر میٹر",
                other: "{0} سکویر میٹر"
            },
            areaSquareCentimeter: {
                one: "{0} مربع سینٹی میٹر",
                other: "{0} مربع سینٹی میٹر"
            },
            areaSquareMile: _3bq0131,
            areaAcre: _3bq069,
            areaSquareYard: {
                one: "{0} مربع گز",
                other: "{0} مربع گز"
            },
            areaSquareFoot: _3bq0108,
            areaSquareInch: {
                one: "{0} مربع انچ",
                other: "{0} مربع انچ"
            },
            concentrKarat: _3bq087,
            consumptionLiterPerKilometer: _3bq070,
            "consumptionLiterPer-100kilometers": {
                one: "{0} لیٹر فی 100 کلو میٹر",
                other: "{0} لیٹر فی 100 کلو میٹر"
            },
            consumptionMilePerGallon: _3bq044,
            digitalTerabyte: _3bq011,
            digitalTerabit: _3bq012,
            digitalGigabyte: _3bq013,
            digitalGigabit: _3bq014,
            digitalMegabyte: _3bq015,
            digitalMegabit: _3bq016,
            digitalKilobyte: _3bq017,
            digitalKilobit: _3bq018,
            digitalByte: _3bq071,
            digitalBit: _3bq045,
            durationCentury: _3bq072,
            durationYear: _3bq046,
            durationMonth: _3bq088,
            durationWeek: _3bq073,
            durationDay: _3bq019,
            durationHour: _3bq089,
            durationMinute: _3bq047,
            durationSecond: _3bq090,
            durationMillisecond: {
                one: "{0} ملی سیکنڈ",
                other: "{0} میل سیکنڈ"
            },
            durationMicrosecond: {
                one: "{0} مائیکرو سیکنڈ",
                other: "{0} مائیکرو سیکنڈز"
            },
            durationNanosecond: _3bq0145,
            electricAmpere: _3bq07,
            electricMilliampere: _3bq020,
            electricOhm: _3bq08,
            electricVolt: _3bq09,
            energyKilocalorie: _3bq074,
            energyCalorie: _3bq048,
            energyFoodcalorie: _3bq049,
            energyKilojoule: _3bq021,
            energyJoule: _3bq010,
            energyKilowattHour: _3bq050,
            frequencyGigahertz: _3bq051,
            frequencyMegahertz: _3bq052,
            frequencyKilohertz: _3bq053,
            frequencyHertz: _3bq022,
            lengthKilometer: _3bq0109,
            lengthMeter: _3bq075,
            lengthDecimeter: _3bq023,
            lengthCentimeter: _3bq0146,
            lengthMillimeter: _3bq0100,
            lengthMicrometer: {
                one: "{0} مائیکرو میٹر",
                other: "{0} مائیکرو میٹر"
            },
            lengthNanometer: _3bq024,
            lengthPicometer: _3bq0132,
            lengthMile: _3bq054,
            lengthYard: _3bq076,
            lengthFoot: _3bq055,
            lengthInch: _3bq056,
            lengthParsec: {
                one: "{0} پارسیک",
                other: "{0} پارسیک"
            },
            lengthLightYear: {
                one: "{0} نوری سال",
                other: "{0} نوری سال"
            },
            lengthNauticalMile: {
                one: "{0} بحری میل",
                other: "{0} بحری میل"
            },
            lengthMileScandinavian: {
                one: "{0} اسکینڈی نیویائی میل",
                other: "{0} اسکینڈی نیویائی میل"
            },
            lightLux: _3bq025,
            massMetricTon: {
                one: "{0} میٹرک ٹن",
                other: "{0} میٹرک ٹن"
            },
            massKilogram: _3bq0110,
            massGram: _3bq077,
            massMilligram: {
                one: "{0} ملی گرام",
                other: "{0} ملی گرام"
            },
            massMicrogram: _3bq026,
            massTon: {
                one: "{0} ٹن",
                other: "{0} ٹن"
            },
            massPound: _3bq078,
            massOunce: _3bq057,
            massOunceTroy: _3bq079,
            massCarat: _3bq087,
            powerGigawatt: _3bq027,
            powerMegawatt: _3bq028,
            powerKilowatt: _3bq0101,
            powerWatt: _3bq058,
            powerMilliwatt: _3bq029,
            powerHorsepower: _3bq0133,
            pressureHectopascal: {
                one: "{0} ہیکٹو پاسکل",
                other: "{0} ہیکٹو پاسکل"
            },
            pressureMillimeterOfMercury: _3bq091,
            pressurePoundPerSquareInch: _3bq059,
            pressureInchHg: _3bq0134,
            pressureMillibar: _3bq0102,
            speedKilometerPerHour: {
                one: "{0} کلومیٹر فی گھنٹہ",
                other: "{0} کلومیٹر فی گھنٹہ"
            },
            speedMeterPerSecond: {
                one: "{0} میٹر فی سیکنڈ",
                other: "{0} میٹر فی سیکنڈ"
            },
            speedMilePerHour: {
                one: "{0} میل فی گھنٹہ",
                other: "{0} میل فی گھنٹہ"
            },
            speedKnot: _3bq030,
            temperatureGeneric: _3bq02,
            temperatureCelsius: {
                one: "{0} ڈگری سیلسیس",
                other: "{0} ڈگری سیلسیس"
            },
            temperatureFahrenheit: {
                one: "{0} ڈگری فارن ہائیٹ",
                other: "{0} ڈگری فارن ہائیٹ"
            },
            temperatureKelvin: {
                one: "{0} کیلون",
                other: "{0} کیلون"
            },
            volumeCubicKilometer: {
                one: "{0} کیوبک کلو میٹر",
                other: "{0} کیوبک کلو میٹر"
            },
            volumeCubicMeter: _3bq031,
            volumeCubicCentimeter: {
                one: "{0} کیوبک سینٹی میٹر",
                other: "{0} کیوبک سینٹی میٹر"
            },
            volumeCubicMile: _3bq0135,
            volumeCubicYard: {
                one: "{0} کیوبک گز",
                other: "{0} کیوبک گز"
            },
            volumeCubicFoot: {
                one: "{0} کیوبک فیٹ",
                other: "{0} کیوبک فٹ"
            },
            volumeCubicInch: _3bq060,
            volumeMegaliter: _3bq032,
            volumeHectoliter: _3bq033,
            volumeLiter: _3bq080,
            volumeDeciliter: {
                one: "{0} ڈیسی لیٹر",
                other: "{0} ڈیسی لیٹر"
            },
            volumeCentiliter: {
                one: "{0} سینٹی لیٹر",
                other: "{0} سینٹی لیٹر"
            },
            volumeMilliliter: _3bq034,
            volumePintMetric: _3bq061,
            volumeCupMetric: _3bq035,
            volumeAcreFoot: {
                one: "{0} ایکڑ فٹ",
                other: "{0} ایکڑ فٹ"
            },
            volumeGallon: _3bq062,
            volumeQuart: _3bq036,
            volumePint: _3bq037,
            volumeCup: {
                one: "{0} کپ",
                other: "{0} کپ"
            },
            volumeFluidOunce: {
                one: "{0} فلوئڈ اونس",
                other: "{0} فلوئڈ اونس"
            },
            volumeTablespoon: _3bq081,
            volumeTeaspoon: _3bq063
        },
        compoundUnit: {
            per: "{0} فی {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: _3bq098,
            accelerationMeterPerSecondSquared: _3bq067,
            angleRevolution: _3bq042,
            angleRadian: _3bq043,
            angleDegree: _3bq068,
            angleArcMinute: _3bq099,
            angleArcSecond: _3bq0130,
            areaSquareKilometer: _3bq064,
            areaHectare: _3bq086,
            areaSquareMeter: _3bq038,
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: _3bq0131,
            areaAcre: _3bq069,
            areaSquareYard: {
                one: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: _3bq0108,
            areaSquareInch: {
                one: "{0} in²",
                other: "{0} in²"
            },
            concentrKarat: {
                one: "{0} kt",
                other: "{0} kt"
            },
            consumptionLiterPerKilometer: _3bq070,
            "consumptionLiterPer-100kilometers": {
                one: "{0} L/100km",
                other: "{0} L/100km"
            },
            consumptionMilePerGallon: _3bq044,
            digitalTerabyte: _3bq011,
            digitalTerabit: _3bq012,
            digitalGigabyte: _3bq013,
            digitalGigabit: _3bq014,
            digitalMegabyte: _3bq015,
            digitalMegabit: _3bq016,
            digitalKilobyte: _3bq017,
            digitalKilobit: _3bq018,
            digitalByte: _3bq071,
            digitalBit: _3bq045,
            durationCentury: _3bq072,
            durationYear: _3bq046,
            durationMonth: _3bq088,
            durationWeek: _3bq073,
            durationDay: _3bq019,
            durationHour: _3bq089,
            durationMinute: _3bq047,
            durationSecond: _3bq090,
            durationMillisecond: {
                one: "{0} ملی سیکنڈ",
                other: "{0} ملی سیکنڈ"
            },
            durationMicrosecond: {
                one: "{0} مائیکرو سیکنڈ",
                other: "{0} مائیکرو سیکنڈ"
            },
            durationNanosecond: _3bq0145,
            electricAmpere: _3bq07,
            electricMilliampere: _3bq020,
            electricOhm: _3bq08,
            electricVolt: _3bq09,
            energyKilocalorie: _3bq074,
            energyCalorie: _3bq048,
            energyFoodcalorie: _3bq049,
            energyKilojoule: _3bq021,
            energyJoule: _3bq010,
            energyKilowattHour: _3bq050,
            frequencyGigahertz: _3bq051,
            frequencyMegahertz: _3bq052,
            frequencyKilohertz: _3bq053,
            frequencyHertz: _3bq022,
            lengthKilometer: _3bq0109,
            lengthMeter: _3bq075,
            lengthDecimeter: _3bq023,
            lengthCentimeter: _3bq0146,
            lengthMillimeter: _3bq0100,
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: _3bq024,
            lengthPicometer: _3bq0132,
            lengthMile: _3bq054,
            lengthYard: _3bq076,
            lengthFoot: _3bq055,
            lengthInch: _3bq056,
            lengthParsec: {
                one: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: {
                one: "{0} ly",
                other: "{0} ly"
            },
            lengthAstronomicalUnit: {
                one: "{0} au",
                other: "{0} au"
            },
            lengthNauticalMile: {
                one: "{0} nmi",
                other: "{0} nmi"
            },
            lengthMileScandinavian: {
                one: "{0} smi",
                other: "{0} smi"
            },
            lightLux: _3bq025,
            massMetricTon: {
                one: "{0} t",
                other: "{0} t"
            },
            massKilogram: _3bq0110,
            massGram: _3bq077,
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: _3bq026,
            massTon: {
                one: "{0} tn",
                other: "{0} tn"
            },
            massPound: _3bq078,
            massOunce: _3bq057,
            massOunceTroy: _3bq079,
            massCarat: {
                one: "{0} CD",
                other: "{0} CD"
            },
            powerGigawatt: _3bq027,
            powerMegawatt: _3bq028,
            powerKilowatt: _3bq0101,
            powerWatt: _3bq058,
            powerMilliwatt: _3bq029,
            powerHorsepower: _3bq0133,
            pressureHectopascal: {
                one: "{0} hPa",
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: _3bq091,
            pressurePoundPerSquareInch: _3bq059,
            pressureInchHg: _3bq0134,
            pressureMillibar: _3bq0102,
            speedKilometerPerHour: {
                one: "{0} kph",
                other: "{0} kph"
            },
            speedMeterPerSecond: {
                one: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: {
                one: "{0} mph",
                other: "{0} mph"
            },
            speedKnot: _3bq030,
            temperatureGeneric: _3bq02,
            temperatureCelsius: {
                one: "{0}‎°C",
                other: "{0}‎°C"
            },
            temperatureFahrenheit: {
                one: "{0}‎°F",
                other: "{0}‎°F"
            },
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: {
                one: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMeter: _3bq031,
            volumeCubicCentimeter: {
                one: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: _3bq0135,
            volumeCubicYard: {
                one: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: _3bq060,
            volumeMegaliter: _3bq032,
            volumeHectoliter: _3bq033,
            volumeLiter: _3bq080,
            volumeDeciliter: {
                one: "{0} dL",
                other: "{0} dL"
            },
            volumeCentiliter: {
                one: "{0} cL",
                other: "{0} cL"
            },
            volumeMilliliter: _3bq034,
            volumePintMetric: _3bq061,
            volumeCupMetric: _3bq035,
            volumeAcreFoot: {
                one: "{0} ac ft",
                other: "{0} ac ft"
            },
            volumeGallon: _3bq062,
            volumeQuart: _3bq036,
            volumePint: _3bq037,
            volumeCup: {
                one: "{0} c",
                other: "{0} c"
            },
            volumeFluidOunce: {
                one: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: _3bq081,
            volumeTeaspoon: _3bq063,
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            massStone: {
                other: "{0} st"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                one: "{0}g",
                other: "{0}g"
            },
            angleDegree: _3bq068,
            angleArcMinute: _3bq047,
            angleArcSecond: {
                one: "{0}″",
                other: "{0}″"
            },
            areaSquareKilometer: _3bq064,
            areaHectare: _3bq086,
            areaSquareMeter: _3bq038,
            areaSquareMile: {
                one: "{0}mi²",
                other: "{0}mi²"
            },
            areaAcre: _3bq069,
            areaSquareFoot: {
                one: "{0}ft²",
                other: "{0}ft²"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0}L/100km",
                other: "{0}L/100km"
            },
            durationYear: _3bq046,
            durationMonth: _3bq088,
            durationWeek: _3bq073,
            durationDay: _3bq019,
            durationHour: _3bq089,
            durationMinute: _3bq047,
            durationSecond: {
                one: "{0}s",
                other: "{0}s"
            },
            durationMillisecond: {
                one: "{0} ms",
                other: "{0} ms"
            },
            lengthKilometer: {
                one: "{0}km",
                other: "{0}km"
            },
            lengthMeter: _3bq075,
            lengthCentimeter: {
                one: "{0}cm",
                other: "{0}cm"
            },
            lengthMillimeter: _3bq0100,
            lengthPicometer: {
                one: "{0}pm",
                other: "{0}pm"
            },
            lengthMile: _3bq054,
            lengthYard: _3bq076,
            lengthFoot: {
                one: "{0}′",
                other: "{0}′"
            },
            lengthInch: _3bq056,
            lengthLightYear: {
                one: "{0}ly",
                other: "{0}ly"
            },
            massKilogram: {
                one: "{0}kg",
                other: "{0}kg"
            },
            massGram: _3bq077,
            massPound: _3bq078,
            massOunce: _3bq057,
            powerKilowatt: {
                one: "{0}kW",
                other: "{0}kW"
            },
            powerWatt: _3bq058,
            powerHorsepower: {
                one: "{0}hp",
                other: "{0}hp"
            },
            pressureHectopascal: {
                one: "{0}hPa",
                other: "{0}hPa"
            },
            pressureInchHg: _3bq0134,
            pressureMillibar: {
                one: "{0}mb",
                other: "{0}mb"
            },
            speedKilometerPerHour: {
                one: "{0}kph",
                other: "{0}kph"
            },
            speedMeterPerSecond: {
                one: "{0}m/s",
                other: "{0}m/s"
            },
            speedMilePerHour: {
                one: "{0}mph",
                other: "{0}mph"
            },
            temperatureCelsius: {
                one: "{0}‎°",
                other: "{0}‎°"
            },
            temperatureFahrenheit: {
                one: "{0}‎°F",
                other: "{0}°F"
            },
            volumeCubicKilometer: {
                one: "{0}km³",
                other: "{0}km³"
            },
            volumeCubicMile: {
                one: "{0}mi³",
                other: "{0}mi³"
            },
            volumeLiter: _3bq080
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "{0} دن کا وقت",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} دن کا وقت",
        standard: "{0} معیاری وقت"
    }
};

inter.defaultNumberSystemId = "arabext";

inter.calendars = {
    buddhist: {
        dateFormats: _3bq0294,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3bq0303,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3bq0296,
        dayPeriods: _3bq0301,
        monthNames: _3bq0298,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _3bq0291,
        fields: _3bq0308
    },
    chinese: _3bq0312,
    coptic: {
        dateFormats: _3bq0294,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3bq0303,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3bq0296,
        dayPeriods: _3bq0301,
        monthNames: {
            format: _3bq0286,
            standAlone: _3bq0286
        },
        eraNames: _3bq0164,
        quarterNames: _3bq0291,
        fields: _3bq0308
    },
    dangi: _3bq0312,
    ethioaa: _3bq0309,
    ethiopic: {
        dateFormats: _3bq0294,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3bq0303,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3bq0296,
        dayPeriods: _3bq0301,
        monthNames: {
            format: _3bq0287,
            standAlone: _3bq0287
        },
        eraNames: _3bq0164,
        quarterNames: _3bq0291,
        fields: _3bq0308
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE، d MMMM، y",
                longDate: "d MMMM، y",
                mediumDate: "d MMM، y",
                shortDate: "d/M/yy",
                fullTime: "h:mm:ss a zzzz",
                longTime: "h:mm:ss a z",
                mediumTime: "h:mm:ss a",
                shortTime: "h:mm a",
                shortDateTime: "d/M/yy h:mm a",
                mediumDateTime: "d MMM، y h:mm:ss a",
                longDateTime: "d MMMM، y h:mm:ss a z",
                fullDateTime: "EEEE، d MMMM، y h:mm:ss a zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "d E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM، y G",
                GyMMMEd: "E، d MMM، y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "d/M",
                MEd: "E، d/M",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E، d MMM",
                MMMMd: "MMMM d",
                ms: "mm:ss",
                y: "y",
                yM: "M/y",
                yMd: "d/M/y",
                yMEd: "E، d/M/y",
                yMMM: "MMM y",
                yMMMd: "d MMM، y",
                yMMMEd: "E، d MMM، y",
                yMMMM: "y MMMM",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _3bq03,
            H: {
                H: "HH–HH"
            },
            hm: _3bq0170,
            Hm: _3bq082,
            hmv: _3bq0188,
            Hmv: _3bq093,
            hv: _3bq039,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            Md: _3bq040,
            MEd: _3bq0111,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _3bq065,
            MMMEd: _3bq0159,
            y: {
                y: "y–y"
            },
            yM: {
                M: "M/y – M/y",
                y: "M/y – M/y"
            },
            yMd: {
                d: "d/M/y – d/M/y",
                M: "d/M/y – d/M/y",
                y: "d/M/y – d/M/y"
            },
            yMEd: {
                d: "E، d/M/y – E، d/M/y",
                M: "E، d/M/y – E، d/M/y",
                y: "E، d/M/y – E، d/M/y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "y MMM d–d",
                M: "d MMM – d MMM، y",
                y: "d MMM، y – d MMM، y"
            },
            yMMMEd: {
                d: "E، d MMM – E، d MMM، y",
                M: "E، d MMM – E، d MMM، y",
                y: "E، d MMM، y – E، d MMM، y"
            },
            yMMMM: {
                M: "MMMM–MMMM y",
                y: "MMMM y – MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3bq0296,
        dayPeriods: _3bq0301,
        monthNames: _3bq0298,
        eraNames: {
            wide: [ "قبل مسیح", "عیسوی" ],
            abbreviated: [ "قبل مسیح", "عیسوی" ]
        },
        quarterNames: _3bq0291,
        fields: _3bq0308
    },
    hebrew: {
        dateFormats: _3bq0294,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3bq0303,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3bq0296,
        dayPeriods: _3bq0301,
        monthNames: {
            format: _3bq0283,
            standAlone: _3bq0283
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _3bq0291,
        fields: _3bq0308
    },
    indian: {
        dateFormats: _3bq0294,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3bq0303,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3bq0296,
        dayPeriods: _3bq0301,
        monthNames: {
            format: _3bq0288,
            standAlone: _3bq0288
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _3bq0291,
        fields: _3bq0308
    },
    islamic: _3bq0311,
    "islamic-umalqura": _3bq0311,
    "islamic-tbla": _3bq0311,
    "islamic-civil": _3bq0311,
    "islamic-rgsa": _3bq0311,
    iso8601: _3bq0309,
    japanese: {
        dateFormats: _3bq0294,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3bq0303,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3bq0296,
        dayPeriods: _3bq0301,
        monthNames: _3bq0298,
        eraNames: {
            wide: _3bq0307,
            abbreviated: _3bq0307
        },
        quarterNames: _3bq0291,
        fields: _3bq0308
    },
    persian: {
        dateFormats: _3bq0294,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3bq0303,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3bq0296,
        dayPeriods: _3bq0301,
        monthNames: {
            format: _3bq0284,
            standAlone: _3bq0284
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _3bq0291,
        fields: _3bq0308
    },
    roc: {
        dateFormats: _3bq0294,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3bq0303,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3bq0296,
        dayPeriods: _3bq0301,
        monthNames: _3bq0298,
        eraNames: {
            wide: _3bq06,
            abbreviated: _3bq06
        },
        quarterNames: _3bq0291,
        fields: _3bq0308
    },
    islamicc: _3bq0309
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length;
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 1 && v === 0) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 19), P.timeZones[-1], P.timeZones[-1], P.timeZones.slice(21, 32), {
    id: "America/Cambridge_Bay",
    regionId: "021",
    utcStandardOffsetSeconds: -25200,
    displayName: "کیمبرج بے",
    countryId: "CA"
}, P.timeZones.slice(33, 61), P.timeZones[-1], P.timeZones[-1], P.timeZones[-1], P.timeZones.slice(64, 69), P.timeZones.slice(70, 85), {
    id: "America/Grand_Turk",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "گرینڈ ترک",
    countryId: "TC"
}, P.timeZones.slice(85, 95), {
    id: "America/Thule",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "تھولے",
    countryId: "GL"
}, P.timeZones.slice(96, 121), {
    id: "America/Glace_Bay",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "گلیس بے",
    countryId: "CA"
}, P.timeZones[122], {
    id: "America/Goose_Bay",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "گوس بے",
    countryId: "CA"
}, P.timeZones.slice(124, 127), P.timeZones[-1], P.timeZones[-1], P.timeZones[-1], P.timeZones[-1], P.timeZones[-1], P.timeZones[-1], P.timeZones.slice(133, 155), P.timeZones[-1], P.timeZones.slice(156, 158), {
    id: "America/Scoresbysund",
    regionId: "021",
    utcStandardOffsetSeconds: -3600,
    displayName: "اتتوققورتورمیت",
    countryId: "GL"
}, P.timeZones[158], P.timeZones[160], P.timeZones[-1], P.timeZones.slice(162, 164), {
    id: "Africa/Accra",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "اکرا",
    countryId: "GH"
}, P.timeZones.slice(165, 202), {
    id: "Europe/Budapest",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "بوڈاپیسٹ",
    countryId: "HU"
}, P.timeZones.slice(203, 235), P.timeZones[-1], P.timeZones[-1], P.timeZones.slice(237, 268), P.timeZones[-1], P.timeZones[-1], P.timeZones.slice(270, 294), P.timeZones[-1], P.timeZones[-1], P.timeZones[-1], P.timeZones[297], {
    id: "Asia/Dubai",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "دبئی",
    countryId: "AE"
}, P.timeZones.slice(299, 307), P.timeZones[-1], P.timeZones.slice(308, 321), P.timeZones[-1], P.timeZones[322], P.timeZones[-1], P.timeZones[-1], P.timeZones.slice(325, 333), P.timeZones[-1], P.timeZones[334], P.timeZones[-1], P.timeZones[-1], P.timeZones[-1], P.timeZones.slice(338, 376), P.timeZones[-1], P.timeZones[-1], P.timeZones.slice(378, 390), P.timeZones[-1], P.timeZones.slice(391, 414), P.timeZones[-1], P.timeZones.slice(415, 419));

inter.territories = [].concat(P.territories.slice(0, 8), P.territories.slice(9, 17), P.territories.slice(18, 23), _3bq0193, _3bq0215, P.territories[24], P.territories.slice(26, 39), P.territories.slice(40, 43), _3bq0191, _3bq0217, P.territories.slice(44, 47), P.territories.slice(48, 64), _3bq0187, P.territories.slice(65, 78), _3bq0194, _3bq0206, _3bq0208, _3bq0220, _3bq0211, _3bq0204, _3bq0207, _3bq0209, _3bq0174, _3bq0201, _3bq0218, _3bq0199, _3bq0178, _3bq0175, _3bq0210, _3bq0179, P.territories.slice(79, 113), P.territories.slice(114, 129), P.territories.slice(130, 135), P.territories.slice(136, 140), _3bq0213, P.territories.slice(141, 158), P.territories.slice(159, 193), P.territories.slice(194, 211), P.territories.slice(212, 223), P.territories.slice(224, 231), P.territories.slice(232, 235), _3bq0176, P.territories.slice(235, 243), P.territories[244], _3bq0205, P.territories.slice(245, 249), P.territories[251], P.territories.slice(253, 255), P.territories.slice(256, 277), P.territories.slice(278, 285));

inter.countries = [].concat(P.territories.slice(0, 7), P.territories.slice(9, 17), P.territories.slice(19, 23), _3bq0193, _3bq0215, P.territories[24], P.territories.slice(27, 33), P.territories.slice(34, 37), P.territories[38], P.territories.slice(40, 43), _3bq0191, _3bq0217, P.territories.slice(44, 47), P.territories.slice(48, 57), P.territories.slice(58, 64), _3bq0187, P.territories.slice(65, 78), _3bq0194, _3bq0206, _3bq0208, _3bq0220, _3bq0211, _3bq0204, _3bq0207, _3bq0209, _3bq0174, _3bq0201, _3bq0218, _3bq0199, _3bq0178, _3bq0175, _3bq0210, _3bq0179, P.territories[79], P.territories[81], P.territories.slice(85, 88), P.territories.slice(90, 113), P.territories.slice(114, 127), P.territories[130], P.territories.slice(132, 135), P.territories.slice(136, 140), _3bq0213, P.territories.slice(141, 157), P.territories.slice(159, 165), P.territories.slice(166, 169), P.territories[172], P.territories[175], P.territories.slice(177, 193), P.territories.slice(194, 204), P.territories.slice(207, 211), P.territories.slice(212, 222), P.territories.slice(224, 231), P.territories.slice(232, 235), _3bq0176, P.territories.slice(235, 241), P.territories[242], P.territories[244], _3bq0205, P.territories.slice(245, 249), P.territories[251], P.territories.slice(253, 255), P.territories.slice(256, 277), P.territories.slice(278, 281), P.territories.slice(282, 285));

inter.languages = [].concat({
    id: "af",
    displayName: "افریقی",
    nativeDisplayName: "Afrikaans"
}, P.languages.slice(1, 82), {
    id: "lv",
    displayName: "لٹويای",
    nativeDisplayName: "latviešu"
}, P.languages.slice(83, 134), {
    id: "dje",
    displayName: "زرمہ",
    nativeDisplayName: "Zarmaciine"
}, P.languages.slice(135, 162), {
    id: "ar_001",
    displayName: "جدید معیاری عربی",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, P.languages.slice(163, 217), {
    id: "co",
    displayName: "کارسیکائی"
}, P.languages[217], {
    id: "ku",
    displayName: "کرد"
}, P.languages.slice(219, 221), P.languages.slice(222, 240), {
    id: "kn",
    displayName: "کنڑ",
    nativeDisplayName: "ಕನ್ನಡ"
}, P.languages.slice(241, 252), {
    id: "zgh",
    displayName: "معیاری مراقشی تمازیقی",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, P.languages.slice(253, 256), {
    id: "zh_hans",
    displayName: "آسان چینی",
    nativeDisplayName: "简体中文"
}, P.languages.slice(257, 262));

inter.currencies = [].concat(P.currencies.slice(0, 8), {
    id: "ERN",
    displayName: "اریٹیریائی ناکفا",
    symbol: "ERN",
    one: "اریٹیریا کا نافکا",
    other: "اریٹیریا کا نافکا"
}, P.currencies.slice(9, 16), P.currencies.slice(17, 24), {
    id: "GBP",
    displayName: "برطانوی پاونڈ سٹرلنگ",
    symbol: "£",
    one: "انگلستانی پاونڈ سٹرلنگ",
    other: "انگلستانی پاونڈ سٹرلنگ"
}, P.currencies.slice(24, 59), {
    id: "WST",
    displayName: "ساموآئی ٹالا",
    symbol: "WST",
    one: "ساموآ کا ٹالا",
    other: "ساموآ کا ٹالا"
}, P.currencies.slice(60, 84), {
    id: "CUC",
    displayName: "قابل منتقلی کیوبائی پیسو",
    symbol: "CUC",
    one: "کیوبا کا قابل منتقلی پیسو",
    other: "کیوبا کا قابل منتقلی پیسو"
}, P.currencies.slice(84, 127), {
    id: "PKR",
    displayName: "پاکستانی روپیہ",
    symbol: "PKR",
    one: "پاکستانی روپیہ",
    other: "پاکستانی روپیہ"
}, P.currencies.slice(128, 142), {
    id: "CRC",
    displayName: "کوسٹا ریکا کولون",
    symbol: "CRC",
    one: "کوسٹا ریکا کا کولن",
    other: "کوسٹا ریکا کا کولن"
}, P.currencies.slice(143, 148), {
    id: "CUP",
    displayName: "کیوبائی پیسو",
    symbol: "CUP",
    one: "کیوبا کا پیسو",
    other: "کیوبا کا پیسو"
}, {
    id: "CVE",
    displayName: "کیپ ورڈی اسکیوڈو",
    symbol: "CVE",
    one: "کیپ ورڈی کا اسکیوڈو",
    other: "کیپ ورڈی کا اسکیوڈو"
}, P.currencies.slice(151, 155), {
    id: "GHS",
    displayName: "گھانی سیڈی",
    symbol: "GHS",
    one: "گھانا کا سیڈی",
    other: "گھانا کا سیڈی"
}, P.currencies.slice(156, 165));

module.exports = inter;