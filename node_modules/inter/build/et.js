function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _4l251 = [ "K1", "K2", "K3", "K4" ], _4l252 = [ "1.", "2.", "3.", "4." ], _4l253 = {
    all: {
        leap: "{0}bis"
    }
}, _4l254 = {
    displayName: "ajastu"
}, _4l255 = {
    displayName: "ajavöönd"
}, _4l256 = {
    one: "{0}°",
    other: "{0}°"
}, _4l257 = {
    one: "{0}′",
    other: "{0}′"
}, _4l258 = {
    one: "{0}″",
    other: "{0}″"
}, _4l259 = {
    a: "h a – h a",
    h: "h–h a"
}, _4l2510 = {
    displayName: "nädalapäev"
}, _4l2511 = [ "Before R.O.C.", "R.O.C." ], _4l2512 = {
    one: "{0} a",
    other: "{0} a"
}, _4l2513 = {
    one: "{0} t",
    other: "{0} t"
}, _4l2514 = {
    one: "{0} m",
    other: "{0} m"
}, _4l2515 = {
    one: "{0} g",
    other: "{0} g"
}, _4l2516 = {
    one: "{0} l",
    other: "{0} l"
}, _4l2517 = {
    one: "0 tuh",
    other: "0 tuh"
}, _4l2518 = {
    one: "0 mln",
    other: "0 mln"
}, _4l2519 = {
    one: "0 mld",
    other: "0 mld"
}, _4l2520 = {
    one: "0 trl",
    other: "0 trl"
}, _4l2521 = {
    one: "{0} ha",
    other: "{0} ha"
}, _4l2522 = {
    one: "{0} m²",
    other: "{0} m²"
}, _4l2523 = {
    one: "{0} ct",
    other: "{0} ct"
}, _4l2524 = {
    one: "{0} ms",
    other: "{0} ms"
}, _4l2525 = {
    one: "{0} km",
    other: "{0} km"
}, _4l2526 = {
    one: "{0} cm",
    other: "{0} cm"
}, _4l2527 = {
    one: "{0} mm",
    other: "{0} mm"
}, _4l2528 = {
    one: "{0} pm",
    other: "{0} pm"
}, _4l2529 = {
    one: "{0} kg",
    other: "{0} kg"
}, _4l2530 = {
    one: "{0} lb",
    other: "{0} lb"
}, _4l2531 = {
    one: "{0} oz",
    other: "{0} oz"
}, _4l2532 = {
    one: "{0} hj",
    other: "{0} hj"
}, _4l2533 = {
    one: "{0} °C",
    other: "{0} °C"
}, _4l2534 = {
    one: "{0} °F",
    other: "{0} °F"
}, _4l2535 = {
    one: "00 tuh",
    other: "00 tuh"
}, _4l2536 = {
    one: "00 mln",
    other: "00 mln"
}, _4l2537 = {
    one: "00 mld",
    other: "00 mld"
}, _4l2538 = {
    one: "00 trl",
    other: "00 trl"
}, _4l2539 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _4l2540 = [ "P", "E", "T", "K", "N", "R", "L" ], _4l2541 = {
    one: "{0} km²",
    other: "{0} km²"
}, _4l2542 = {
    one: "{0} mi²",
    other: "{0} mi²"
}, _4l2543 = {
    one: "{0} ft²",
    other: "{0} ft²"
}, _4l2544 = {
    one: "{0} min",
    other: "{0} min"
}, _4l2545 = {
    one: "{0} hPa",
    other: "{0} hPa"
}, _4l2546 = {
    one: "{0} m/s",
    other: "{0} m/s"
}, _4l2547 = {
    one: "{0} km³",
    other: "{0} km³"
}, _4l2548 = {
    one: "{0} mi³",
    other: "{0} mi³"
}, _4l2549 = {
    one: "0 tuhat",
    other: "0 tuhat"
}, _4l2550 = {
    one: "000 tuh",
    other: "000 tuh"
}, _4l2551 = {
    one: "000 mln",
    other: "000 mln"
}, _4l2552 = {
    one: "000 mld",
    other: "000 mld"
}, _4l2553 = {
    one: "000 trl",
    other: "000 trl"
}, _4l2554 = {
    one: "0 tuh ¤",
    other: "0 tuh ¤"
}, _4l2555 = {
    one: "0 mln ¤",
    other: "0 mln ¤"
}, _4l2556 = {
    one: "0 mld ¤",
    other: "0 mld ¤"
}, _4l2557 = {
    one: "0 trl ¤",
    other: "0 trl ¤"
}, _4l2558 = {
    one: "+{0} kv",
    other: "+{0} kv"
}, _4l2559 = {
    one: "-{0} kv",
    other: "-{0} kv"
}, _4l2560 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _4l2561 = {
    one: "{0} kuu",
    other: "{0} kuud"
}, _4l2562 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _4l2563 = {
    one: "{0} mbar",
    other: "{0} mbar"
}, _4l2564 = {
    one: "{0} km/h",
    other: "{0} km/h"
}, _4l2565 = {
    one: "{0} mi/h",
    other: "{0} mi/h"
}, _4l2566 = {
    one: "00 tuhat",
    other: "00 tuhat"
}, _4l2567 = {
    one: "00 tuh ¤",
    other: "00 tuh ¤"
}, _4l2568 = {
    one: "00 mln ¤",
    other: "00 mln ¤"
}, _4l2569 = {
    one: "00 mld ¤",
    other: "00 mld ¤"
}, _4l2570 = {
    one: "00 trl ¤",
    other: "00 trl ¤"
}, _4l2571 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _4l2572 = {
    d: "dd.MM–dd.MM",
    M: "dd.MM–dd.MM"
}, _4l2573 = {
    M: "MM.y–MM.y G",
    y: "MM.y–MM.y G"
}, _4l2574 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _4l2575 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _4l2576 = {
    one: "{0} bait",
    other: "{0} baiti"
}, _4l2577 = {
    one: "{0} miil",
    other: "{0} miili"
}, _4l2578 = {
    one: "{0} jard",
    other: "{0} jardi"
}, _4l2579 = {
    one: "{0} jalg",
    other: "{0} jalga"
}, _4l2580 = {
    one: "{0} toll",
    other: "{0} tolli"
}, _4l2581 = {
    one: "{0} tass",
    other: "{0} tassi"
}, _4l2582 = {
    displayName: "enne/pärast lõunat"
}, _4l2583 = {
    one: "{0} lüh t",
    other: "{0} lüh t"
}, _4l2584 = {
    one: "000 tuhat",
    other: "000 tuhat"
}, _4l2585 = {
    one: "0 miljon",
    other: "0 miljonit"
}, _4l2586 = {
    one: "000 tuh ¤",
    other: "000 tuh ¤"
}, _4l2587 = {
    one: "000 mln ¤",
    other: "000 mln ¤"
}, _4l2588 = {
    one: "000 mld ¤",
    other: "000 mld ¤"
}, _4l2589 = {
    one: "000 trl ¤",
    other: "000 trl ¤"
}, _4l2590 = {
    d: "d.–d. MMM",
    M: "d. MMM – d. MMM"
}, _4l2591 = {
    one: "{0} aaker",
    other: "{0} aakrit"
}, _4l2592 = {
    one: "00 miljon",
    other: "00 miljonit"
}, _4l2593 = {
    one: "0 miljard",
    other: "0 miljardit"
}, _4l2594 = {
    one: "0 triljon",
    other: "0 triljonit"
}, _4l2595 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _4l2596 = {
    M: "MMM–MMM y G",
    y: "MMM y – MMM y G"
}, _4l2597 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _4l2598 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _4l2599 = {
    one: "{0} karaat",
    other: "{0} karaati"
}, _4l25100 = {
    one: "{0} l/100km",
    other: "{0} l/100km"
}, _4l25101 = {
    one: "000 miljon",
    other: "000 miljonit"
}, _4l25102 = {
    one: "00 miljard",
    other: "00 miljardit"
}, _4l25103 = {
    one: "00 triljon",
    other: "00 triljonit"
}, _4l25104 = {
    one: "{0} kv eest",
    other: "{0} kv eest"
}, _4l25105 = {
    one: "{0} valgusa.",
    other: "{0} valgusa."
}, _4l25106 = {
    one: "000 miljard",
    other: "000 miljardit"
}, _4l25107 = {
    one: "000 triljon",
    other: "000 triljonit"
}, _4l25108 = {
    M: "MMMM–MMMM y G",
    y: "MMMM y – MMMM y G"
}, _4l25109 = {
    one: "{0} kuu eest",
    other: "{0} kuu eest"
}, _4l25110 = {
    one: "{0} p pärast",
    other: "{0} p pärast"
}, _4l25111 = {
    one: "{0} p tagasi",
    other: "{0} p tagasi"
}, _4l25112 = {
    one: "{0} t pärast",
    other: "{0} t pärast"
}, _4l25113 = {
    one: "{0} t tagasi",
    other: "{0} t tagasi"
}, _4l25114 = {
    one: "{0} s pärast",
    other: "{0} s pärast"
}, _4l25115 = {
    one: "{0} s tagasi",
    other: "{0} s tagasi"
}, _4l25116 = {
    one: "{0} kv pärast",
    other: "{0} kv pärast"
}, _4l25117 = {
    one: "{0} aasta eest",
    other: "{0} aasta eest"
}, _4l25118 = {
    one: "{0} kuu pärast",
    other: "{0} kuu pärast"
}, _4l25119 = {
    one: "{0} päeva eest",
    other: "{0} päeva eest"
}, _4l25120 = {
    one: "{0} tunni eest",
    other: "{0} tunni eest"
}, _4l25121 = {
    one: "{0} min pärast",
    other: "{0} min pärast"
}, _4l25122 = {
    one: "{0} min tagasi",
    other: "{0} min tagasi"
}, _4l25123 = {
    one: "{0} sek pärast",
    other: "{0} sek pärast"
}, _4l25124 = {
    one: "{0} sek tagasi",
    other: "{0} sek tagasi"
}, _4l25125 = {
    one: "{0} nädala eest",
    other: "{0} nädala eest"
}, _4l25126 = {
    one: "{0} minuti eest",
    other: "{0} minuti eest"
}, _4l25127 = {
    d: "E, dd.MM – E, dd.MM",
    M: "E, dd.MM – E, dd.MM"
}, _4l25128 = [ "J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _4l25129 = {
    one: "{0} aasta pärast",
    other: "{0} aasta pärast"
}, _4l25130 = {
    one: "{0} päeva pärast",
    other: "{0} päeva pärast"
}, _4l25131 = {
    one: "{0} tunni pärast",
    other: "{0} tunni pärast"
}, _4l25132 = {
    one: "{0} sekundi eest",
    other: "{0} sekundi eest"
}, _4l25133 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _4l25134 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _4l25135 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _4l25136 = {
    id: "001",
    displayName: "maailm",
    hasTimeZones: false
}, _4l25137 = {
    one: "{0} kvartali eest",
    other: "{0} kvartali eest"
}, _4l25138 = {
    "0": "käesolev kv",
    "1": "järgmine kv",
    "-1": "eelmine kv"
}, _4l25139 = {
    one: "{0} nädala pärast",
    other: "{0} nädala pärast"
}, _4l25140 = {
    one: "{0} minuti pärast",
    other: "{0} minuti pärast"
}, _4l25141 = {
    id: "AQ",
    displayName: "Antarktis",
    hasTimeZones: true
}, _4l25142 = {
    id: "CX",
    displayName: "Jõulusaar",
    hasTimeZones: true
}, _4l25143 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _4l25144 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _4l25145 = {
    d: "E, d. MMM – E, d. MMM",
    M: "E, d. MMM – E, d. MMM"
}, _4l25146 = [ "1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal" ], _4l25147 = {
    one: "{0} sekundi pärast",
    other: "{0} sekundi pärast"
}, _4l25148 = {
    "0": "käesolev kuu",
    "1": "järgmine kuu",
    "-1": "eelmine kuu"
}, _4l25149 = {
    id: "CC",
    displayName: "Kookossaared",
    hasTimeZones: true
}, _4l25150 = {
    one: "{0} kvartali pärast",
    other: "{0} kvartali pärast"
}, _4l25151 = {
    id: "BV",
    displayName: "Bouvet’ saar",
    hasTimeZones: false
}, _4l25152 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _4l25153 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _4l25154 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _4l25155 = {
    id: "IC",
    displayName: "Kanaari saared",
    hasTimeZones: false
}, _4l25156 = {
    id: "AC",
    displayName: "Ascensioni saar",
    hasTimeZones: false
}, _4l25157 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _4l25158 = {
    id: "EA",
    displayName: "Ceuta ja Melilla",
    hasTimeZones: false
}, _4l25159 = {
    id: "CP",
    displayName: "Clippertoni saar",
    hasTimeZones: false
}, _4l25160 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _4l25161 = {
    "0": "käesolev aasta",
    "1": "järgmine aasta",
    "-1": "eelmine aasta"
}, _4l25162 = {
    "0": "käesolev nädal",
    "1": "järgmine nädal",
    "-1": "eelmine nädal"
}, _4l25163 = {
    "0": "täna",
    "1": "homme",
    "2": "ülehomme",
    "-2": "üleeile",
    "-1": "eile"
}, _4l25164 = {
    "0": "käesolev reede",
    "1": "järgmine reede",
    "-1": "eelmine reede"
}, _4l25165 = {
    id: "TH",
    displayName: "Tai",
    regionId: "035",
    hasTimeZones: true
}, _4l25166 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _4l25167 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _4l25168 = {
    id: "LV",
    displayName: "Läti",
    regionId: "154",
    hasTimeZones: true
}, _4l25169 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _4l25170 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _4l25171 = {
    id: "TF",
    displayName: "Prantsuse Lõunaalad",
    hasTimeZones: true
}, _4l25172 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _4l25173 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _4l25174 = {
    id: "PW",
    displayName: "Belau",
    regionId: "057",
    hasTimeZones: true
}, _4l25175 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _4l25176 = {
    id: "EE",
    displayName: "Eesti",
    regionId: "154",
    hasTimeZones: true
}, _4l25177 = {
    id: "FJ",
    displayName: "Fidži",
    regionId: "054",
    hasTimeZones: true
}, _4l25178 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _4l25179 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _4l25180 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _4l25181 = {
    id: "CN",
    displayName: "Hiina",
    regionId: "030",
    hasTimeZones: true
}, _4l25182 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _4l25183 = {
    id: "IQ",
    displayName: "Iraak",
    regionId: "145",
    hasTimeZones: true
}, _4l25184 = {
    id: "IR",
    displayName: "Iraan",
    regionId: "034",
    hasTimeZones: true
}, _4l25185 = {
    id: "QA",
    displayName: "Katar",
    regionId: "145",
    hasTimeZones: true
}, _4l25186 = {
    id: "CU",
    displayName: "Kuuba",
    regionId: "029",
    hasTimeZones: true
}, _4l25187 = {
    id: "LT",
    displayName: "Leedu",
    regionId: "154",
    hasTimeZones: true
}, _4l25188 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _4l25189 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _4l25190 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _4l25191 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _4l25192 = {
    id: "NO",
    displayName: "Norra",
    regionId: "154",
    hasTimeZones: true
}, _4l25193 = {
    id: "OM",
    displayName: "Omaan",
    regionId: "145",
    hasTimeZones: true
}, _4l25194 = {
    id: "PE",
    displayName: "Peruu",
    regionId: "005",
    hasTimeZones: true
}, _4l25195 = {
    id: "PL",
    displayName: "Poola",
    regionId: "151",
    hasTimeZones: true
}, _4l25196 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _4l25197 = {
    id: "FI",
    displayName: "Soome",
    regionId: "154",
    hasTimeZones: true
}, _4l25198 = {
    id: "DK",
    displayName: "Taani",
    regionId: "154",
    hasTimeZones: true
}, _4l25199 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _4l25200 = {
    id: "TR",
    displayName: "Türgi",
    regionId: "145",
    hasTimeZones: true
}, _4l25201 = {
    id: "TD",
    displayName: "Tšaad",
    regionId: "017",
    hasTimeZones: true
}, _4l25202 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _4l25203 = {
    id: "BS",
    displayName: "Bahama",
    regionId: "029",
    hasTimeZones: true
}, _4l25204 = {
    id: "BE",
    displayName: "Belgia",
    regionId: "155",
    hasTimeZones: true
}, _4l25205 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _4l25206 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _4l25207 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _4l25208 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _4l25209 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _4l25210 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _4l25211 = {
    id: "IS",
    displayName: "Island",
    regionId: "154",
    hasTimeZones: true
}, _4l25212 = {
    id: "JP",
    displayName: "Jaapan",
    regionId: "030",
    hasTimeZones: true
}, _4l25213 = {
    id: "YE",
    displayName: "Jeemen",
    regionId: "145",
    hasTimeZones: true
}, _4l25214 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _4l25215 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _4l25216 = {
    id: "KE",
    displayName: "Keenia",
    regionId: "014",
    hasTimeZones: true
}, _4l25217 = {
    id: "GR",
    displayName: "Kreeka",
    regionId: "039",
    hasTimeZones: true
}, _4l25218 = {
    id: "KW",
    displayName: "Kuveit",
    regionId: "145",
    hasTimeZones: true
}, _4l25219 = {
    id: "CY",
    displayName: "Küpros",
    regionId: "145",
    hasTimeZones: true
}, _4l25220 = {
    id: "LY",
    displayName: "Liibüa",
    regionId: "015",
    hasTimeZones: true
}, _4l25221 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _4l25222 = {
    id: "MA",
    displayName: "Maroko",
    regionId: "015",
    hasTimeZones: true
}, _4l25223 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _4l25224 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _4l25225 = {
    id: "SE",
    displayName: "Rootsi",
    regionId: "154",
    hasTimeZones: true
}, _4l25226 = {
    id: "RW",
    displayName: "Rwanda",
    regionId: "014",
    hasTimeZones: true
}, _4l25227 = {
    id: "ZM",
    displayName: "Sambia",
    regionId: "014",
    hasTimeZones: true
}, _4l25228 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _4l25229 = {
    id: "SD",
    displayName: "Sudaan",
    regionId: "015",
    hasTimeZones: true
}, _4l25230 = {
    id: "SY",
    displayName: "Süüria",
    regionId: "145",
    hasTimeZones: true
}, _4l25231 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _4l25232 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _4l25233 = {
    id: "CZ",
    displayName: "Tšehhi",
    regionId: "151",
    hasTimeZones: true
}, _4l25234 = {
    id: "CL",
    displayName: "Tšiili",
    regionId: "005",
    hasTimeZones: true
}, _4l25235 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _4l25236 = {
    id: "HU",
    displayName: "Ungari",
    regionId: "151",
    hasTimeZones: true
}, _4l25237 = {
    id: "CH",
    displayName: "Šveits",
    regionId: "155",
    hasTimeZones: true
}, _4l25238 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _4l25239 = {
    id: "AT",
    displayName: "Austria",
    regionId: "155",
    hasTimeZones: true
}, _4l25240 = {
    id: "BH",
    displayName: "Bahrein",
    regionId: "145",
    hasTimeZones: true
}, _4l25241 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _4l25242 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _4l25243 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _4l25244 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _4l25245 = {
    id: "EG",
    displayName: "Egiptus",
    regionId: "015",
    hasTimeZones: true
}, _4l25246 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _4l25247 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _4l25248 = {
    id: "GE",
    displayName: "Gruusia",
    regionId: "145",
    hasTimeZones: true
}, _4l25249 = {
    id: "NL",
    displayName: "Holland",
    regionId: "155",
    hasTimeZones: true
}, _4l25250 = {
    id: "IE",
    displayName: "Iirimaa",
    regionId: "154",
    hasTimeZones: true
}, _4l25251 = {
    id: "IL",
    displayName: "Iisrael",
    regionId: "145",
    hasTimeZones: true
}, _4l25252 = {
    id: "IT",
    displayName: "Itaalia",
    regionId: "039",
    hasTimeZones: true
}, _4l25253 = {
    id: "JM",
    displayName: "Jamaica",
    regionId: "029",
    hasTimeZones: true
}, _4l25254 = {
    id: "CM",
    displayName: "Kamerun",
    regionId: "017",
    hasTimeZones: true
}, _4l25255 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _4l25256 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _4l25257 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _4l25258 = {
    id: "MX",
    displayName: "Mehhiko",
    regionId: "013",
    hasTimeZones: true
}, _4l25259 = {
    id: "MD",
    displayName: "Moldova",
    regionId: "151",
    hasTimeZones: true
}, _4l25260 = {
    id: "NF",
    displayName: "Norfolk",
    regionId: "053",
    hasTimeZones: true
}, _4l25261 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _4l25262 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _4l25263 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _4l25264 = {
    id: "UA",
    displayName: "Ukraina",
    regionId: "151",
    hasTimeZones: true
}, _4l25265 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _4l25266 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _4l25267 = {
    id: "VA",
    displayName: "Vatikan",
    regionId: "039",
    hasTimeZones: true
}, _4l25268 = {
    id: "RU",
    displayName: "Venemaa",
    regionId: "151",
    hasTimeZones: true
}, _4l25269 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _4l25270 = {
    id: "AL",
    displayName: "Albaania",
    regionId: "039",
    hasTimeZones: true
}, _4l25271 = {
    id: "DZ",
    displayName: "Alžeeria",
    regionId: "015",
    hasTimeZones: true
}, _4l25272 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _4l25273 = {
    id: "AM",
    displayName: "Armeenia",
    regionId: "145",
    hasTimeZones: true
}, _4l25274 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _4l25275 = {
    id: "BO",
    displayName: "Boliivia",
    regionId: "005",
    hasTimeZones: true
}, _4l25276 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _4l25277 = {
    id: "IO",
    displayName: "Briti India ookeani ala",
    hasTimeZones: true
}, _4l25278 = {
    id: "CO",
    displayName: "Colombia",
    regionId: "005",
    hasTimeZones: true
}, _4l25279 = {
    id: "DJ",
    displayName: "Djibouti",
    regionId: "014",
    hasTimeZones: true
}, _4l25280 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _4l25281 = {
    id: "ET",
    displayName: "Etioopia",
    regionId: "014",
    hasTimeZones: true
}, _4l25282 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _4l25283 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _4l25284 = {
    id: "KH",
    displayName: "Kambodža",
    regionId: "035",
    hasTimeZones: true
}, _4l25285 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _4l25286 = {
    id: "KM",
    displayName: "Komoorid",
    regionId: "014",
    hasTimeZones: true
}, _4l25287 = {
    id: "CD",
    displayName: "Kongo DV",
    regionId: "017",
    hasTimeZones: true
}, _4l25288 = {
    id: "LR",
    displayName: "Libeeria",
    regionId: "011",
    hasTimeZones: true
}, _4l25289 = {
    id: "LB",
    displayName: "Liibanon",
    regionId: "145",
    hasTimeZones: true
}, _4l25290 = {
    id: "MY",
    displayName: "Malaisia",
    regionId: "035",
    hasTimeZones: true
}, _4l25291 = {
    id: "NA",
    displayName: "Namiibia",
    regionId: "018",
    hasTimeZones: true
}, _4l25292 = {
    id: "NG",
    displayName: "Nigeeria",
    regionId: "011",
    hasTimeZones: true
}, _4l25293 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _4l25294 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _4l25295 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _4l25296 = {
    id: "RO",
    displayName: "Rumeenia",
    regionId: "151",
    hasTimeZones: true
}, _4l25297 = {
    id: "DE",
    displayName: "Saksamaa",
    regionId: "155",
    hasTimeZones: true
}, _4l25298 = {
    id: "SG",
    displayName: "Singapur",
    regionId: "035",
    hasTimeZones: true
}, _4l25299 = {
    id: "SO",
    displayName: "Somaalia",
    regionId: "014",
    hasTimeZones: true
}, _4l25300 = {
    id: "SR",
    displayName: "Suriname",
    regionId: "005",
    hasTimeZones: true
}, _4l25301 = {
    id: "TN",
    displayName: "Tuneesia",
    regionId: "015",
    hasTimeZones: true
}, _4l25302 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _4l25303 = {
    id: "UM",
    displayName: "Ühendriikide hajasaared",
    hasTimeZones: true
}, _4l25304 = {
    "0": "käesolev kvartal",
    "1": "järgmine kvartal",
    "-1": "eelmine kvartal"
}, _4l25305 = {
    "0": "käesolev laupäev",
    "1": "järgmine laupäev",
    "-1": "eelmine laupäev"
}, _4l25306 = {
    id: "AX",
    displayName: "Ahvenamaa",
    regionId: "154",
    hasTimeZones: true
}, _4l25307 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _4l25308 = {
    id: "BR",
    displayName: "Brasiilia",
    regionId: "005",
    hasTimeZones: true
}, _4l25309 = {
    id: "BG",
    displayName: "Bulgaaria",
    regionId: "151",
    hasTimeZones: true
}, _4l25310 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _4l25311 = {
    id: "GL",
    displayName: "Gröönimaa",
    regionId: "021",
    hasTimeZones: true
}, _4l25312 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _4l25313 = {
    id: "ES",
    displayName: "Hispaania",
    regionId: "039",
    hasTimeZones: true
}, _4l25314 = {
    id: "HR",
    displayName: "Horvaatia",
    regionId: "039",
    hasTimeZones: true
}, _4l25315 = {
    id: "TL",
    displayName: "Ida-Timor",
    regionId: "035",
    hasTimeZones: true
}, _4l25316 = {
    id: "JO",
    displayName: "Jordaania",
    regionId: "145",
    hasTimeZones: true
}, _4l25317 = {
    id: "KZ",
    displayName: "Kasahstan",
    regionId: "143",
    hasTimeZones: true
}, _4l25318 = {
    id: "MV",
    displayName: "Maldiivid",
    regionId: "034",
    hasTimeZones: true
}, _4l25319 = {
    id: "IM",
    displayName: "Mani saar",
    regionId: "154",
    hasTimeZones: true
}, _4l25320 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _4l25321 = {
    id: "MN",
    displayName: "Mongoolia",
    regionId: "030",
    hasTimeZones: true
}, _4l25322 = {
    id: "MZ",
    displayName: "Mosambiik",
    regionId: "014",
    hasTimeZones: true
}, _4l25323 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _4l25324 = {
    id: "SC",
    displayName: "Seišellid",
    regionId: "014",
    hasTimeZones: true
}, _4l25325 = {
    id: "SK",
    displayName: "Slovakkia",
    regionId: "151",
    hasTimeZones: true
}, _4l25326 = {
    id: "SI",
    displayName: "Sloveenia",
    regionId: "039",
    hasTimeZones: true
}, _4l25327 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _4l25328 = {
    id: "SZ",
    displayName: "Svaasimaa",
    regionId: "018",
    hasTimeZones: true
}, _4l25329 = {
    id: "TZ",
    displayName: "Tansaania",
    regionId: "014",
    hasTimeZones: true
}, _4l25330 = {
    id: "BY",
    displayName: "Valgevene",
    regionId: "151",
    hasTimeZones: true
}, _4l25331 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _4l25332 = {
    d: "dd.MM.y–dd.MM.y G",
    M: "dd.MM.y–dd.MM.y G",
    y: "dd.MM.y–dd.MM.y G"
}, _4l25333 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _4l25334 = {
    id: "AF",
    displayName: "Afganistan",
    regionId: "034",
    hasTimeZones: true
}, _4l25335 = {
    id: "AU",
    displayName: "Austraalia",
    regionId: "053",
    hasTimeZones: true
}, _4l25336 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _4l25337 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _4l25338 = {
    id: "PH",
    displayName: "Filipiinid",
    regionId: "035",
    hasTimeZones: true
}, _4l25339 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _4l25340 = {
    id: "ID",
    displayName: "Indoneesia",
    regionId: "035",
    hasTimeZones: true
}, _4l25341 = {
    id: "KG",
    displayName: "Kõrgõzstan",
    regionId: "143",
    hasTimeZones: true
}, _4l25342 = {
    id: "LU",
    displayName: "Luksemburg",
    regionId: "155",
    hasTimeZones: true
}, _4l25343 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _4l25344 = {
    id: "MK",
    displayName: "Makedoonia",
    regionId: "039",
    hasTimeZones: true
}, _4l25345 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _4l25346 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _4l25347 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _4l25348 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _4l25349 = {
    id: "UZ",
    displayName: "Usbekistan",
    regionId: "143",
    hasTimeZones: true
}, _4l25350 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _4l25351 = {
    id: "KR",
    displayName: "Lõuna-Korea",
    regionId: "030",
    hasTimeZones: true
}, _4l25352 = {
    id: "MR",
    displayName: "Mauritaania",
    regionId: "011",
    hasTimeZones: true
}, _4l25353 = {
    id: "FM",
    displayName: "Mikroneesia",
    regionId: "057",
    hasTimeZones: true
}, _4l25354 = {
    id: "FR",
    displayName: "Prantsusmaa",
    regionId: "155",
    hasTimeZones: true
}, _4l25355 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _4l25356 = {
    id: "KP",
    displayName: "Põhja-Korea",
    regionId: "030",
    hasTimeZones: true
}, _4l25357 = {
    id: "LC",
    displayName: "Saint Lucia",
    regionId: "029",
    hasTimeZones: true
}, _4l25358 = {
    id: "TJ",
    displayName: "Tadžikistan",
    regionId: "143",
    hasTimeZones: true
}, _4l25359 = {
    id: "NZ",
    displayName: "Uus-Meremaa",
    regionId: "053",
    hasTimeZones: true
}, _4l25360 = {
    d: "d.–d. MMM y G",
    M: "d. MMM – d. MMM y G",
    y: "d. MMM y – d. MMM y G"
}, _4l25361 = {
    "0": "käesolev pühapäev",
    "1": "järgmine pühapäev",
    "-1": "eelmine pühapäev"
}, _4l25362 = {
    id: "AZ",
    displayName: "Aserbaidžaan",
    regionId: "145",
    hasTimeZones: true
}, _4l25363 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _4l25364 = {
    id: "CK",
    displayName: "Cooki saared",
    regionId: "061",
    hasTimeZones: true
}, _4l25365 = {
    id: "FO",
    displayName: "Fääri saared",
    regionId: "154",
    hasTimeZones: true
}, _4l25366 = {
    id: "HM",
    displayName: "Heardi ja McDonaldi saared",
    hasTimeZones: false
}, _4l25367 = {
    id: "EH",
    displayName: "Lääne-Sahara",
    regionId: "015",
    hasTimeZones: true
}, _4l25368 = {
    id: "SS",
    displayName: "Lõuna-Sudaan",
    regionId: "014",
    hasTimeZones: true
}, _4l25369 = {
    id: "SH",
    displayName: "Saint Helena",
    regionId: "011",
    hasTimeZones: true
}, _4l25370 = {
    id: "MF",
    displayName: "Saint-Martin",
    regionId: "029",
    hasTimeZones: true
}, _4l25371 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _4l25372 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _4l25373 = {
    id: "TM",
    displayName: "Türkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _4l25374 = {
    id: "142",
    displayName: "Aasia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _4l25375 = {
    id: "CI",
    displayName: "Côte d’Ivoire",
    regionId: "011",
    hasTimeZones: true
}, _4l25376 = {
    id: "GW",
    displayName: "Guinea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _4l25377 = {
    id: "KY",
    displayName: "Kaimanisaared",
    regionId: "029",
    hasTimeZones: true
}, _4l25378 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _4l25379 = {
    id: "SA",
    displayName: "Saudi Araabia",
    regionId: "145",
    hasTimeZones: true
}, _4l25380 = {
    id: "GB",
    displayName: "Suurbritannia",
    regionId: "154",
    hasTimeZones: true
}, _4l25381 = {
    relative: _4l25164
}, _4l25382 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _4l25383 = {
    id: "AS",
    displayName: "Ameerika Samoa",
    regionId: "061",
    hasTimeZones: true
}, _4l25384 = {
    id: "CG",
    displayName: "Kongo Vabariik",
    regionId: "017",
    hasTimeZones: true
}, _4l25385 = {
    id: "NC",
    displayName: "Uus-Kaledoonia",
    regionId: "054",
    hasTimeZones: true
}, _4l25386 = {
    "0": "käesolev esmaspäev",
    "1": "järgmine esmaspäev",
    "-1": "eelmine esmaspäev"
}, _4l25387 = {
    "0": "käesolev teisipäev",
    "1": "järgmine teisipäev",
    "-1": "eelmine teisipäev"
}, _4l25388 = {
    "0": "käesolev kolmapäev",
    "1": "järgmine kolmapäev",
    "-1": "eelmine kolmapäev"
}, _4l25389 = {
    "0": "käesolev neljapäev",
    "1": "järgmine neljapäev",
    "-1": "eelmine neljapäev"
}, _4l25390 = {
    id: "002",
    displayName: "Aafrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _4l25391 = {
    id: "150",
    displayName: "Euroopa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _4l25392 = {
    id: "MM",
    displayName: "Myanmar (Birma)",
    regionId: "035",
    hasTimeZones: true
}, _4l25393 = {
    id: "PS",
    displayName: "Palestiina alad",
    regionId: "145",
    hasTimeZones: true
}, _4l25394 = {
    id: "MP",
    displayName: "Põhja-Mariaanid",
    regionId: "057",
    hasTimeZones: true
}, _4l25395 = {
    id: "CV",
    displayName: "Roheneemesaared",
    regionId: "011",
    hasTimeZones: true
}, _4l25396 = {
    id: "TC",
    displayName: "Turks ja Caicos",
    regionId: "029",
    hasTimeZones: true
}, _4l25397 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _4l25398 = {
    id: "019",
    displayName: "Ameerika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _4l25399 = {
    id: "FK",
    displayName: "Falklandi saared",
    regionId: "005",
    hasTimeZones: true
}, _4l25400 = {
    id: "MH",
    displayName: "Marshalli Saared",
    regionId: "057",
    hasTimeZones: true
}, _4l25401 = {
    id: "009",
    displayName: "Okeaania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _4l25402 = {
    id: "PN",
    displayName: "Pitcairni saared",
    regionId: "061",
    hasTimeZones: true
}, _4l25403 = {
    id: "SB",
    displayName: "Saalomoni Saared",
    regionId: "054",
    hasTimeZones: true
}, _4l25404 = {
    id: "BL",
    displayName: "Saint Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _4l25405 = {
    id: "VI",
    displayName: "USA Neitsisaared",
    regionId: "029",
    hasTimeZones: true
}, _4l25406 = {
    id: "WF",
    displayName: "Wallis ja Futuna",
    regionId: "061",
    hasTimeZones: true
}, _4l25407 = {
    id: "030",
    displayName: "Ida-Aasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _4l25408 = {
    id: "PG",
    displayName: "Paapua Uus-Guinea",
    regionId: "054",
    hasTimeZones: true
}, _4l25409 = {
    id: "AG",
    displayName: "Antigua ja Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _4l25410 = {
    id: "VG",
    displayName: "Briti Neitsisaared",
    regionId: "029",
    hasTimeZones: true
}, _4l25411 = {
    id: "GQ",
    displayName: "Ekvatoriaal-Guinea",
    regionId: "017",
    hasTimeZones: true
}, _4l25412 = {
    id: "035",
    displayName: "Kagu-Aasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _4l25413 = {
    id: "143",
    displayName: "Kesk-Aasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _4l25414 = {
    id: "054",
    displayName: "Melaneesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _4l25415 = {
    id: "061",
    displayName: "Polüneesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _4l25416 = {
    id: "GF",
    displayName: "Prantsuse Guajaana",
    regionId: "005",
    hasTimeZones: true
}, _4l25417 = {
    id: "TT",
    displayName: "Trinidad ja Tobago",
    regionId: "029",
    hasTimeZones: true
}, _4l25418 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _4l25419 = {
    id: "014",
    displayName: "Ida-Aafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _4l25420 = {
    id: "151",
    displayName: "Ida-Euroopa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _4l25421 = {
    id: "145",
    displayName: "Lääne-Aasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _4l25422 = {
    id: "034",
    displayName: "Lõuna-Aasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _4l25423 = {
    future: _4l2558,
    past: _4l2559
}, _4l25424 = {
    relative: _4l25305
}, _4l25425 = {
    id: "US",
    displayName: "Ameerika Ühendriigid",
    regionId: "021",
    hasTimeZones: true
}, _4l25426 = {
    id: "053",
    displayName: "Australaasia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _4l25427 = {
    id: "DO",
    displayName: "Dominikaani Vabariik",
    regionId: "029",
    hasTimeZones: true
}, _4l25428 = {
    id: "017",
    displayName: "Kesk-Aafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _4l25429 = {
    id: "PF",
    displayName: "Prantsuse Polüneesia",
    regionId: "061",
    hasTimeZones: true
}, _4l25430 = {
    id: "KN",
    displayName: "Saint Kitts ja Nevis",
    regionId: "029",
    hasTimeZones: true
}, _4l25431 = {
    id: "ST",
    displayName: "São Tomé ja Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _4l25432 = [ "pühapäev", "esmaspäev", "teisipäev", "kolmapäev", "neljapäev", "reede", "laupäev" ], _4l25433 = {
    id: "CF",
    displayName: "Kesk-Aafrika Vabariik",
    regionId: "017",
    hasTimeZones: true
}, _4l25434 = {
    id: "013",
    displayName: "Kesk-Ameerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _4l25435 = {
    id: "011",
    displayName: "Lääne-Aafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _4l25436 = {
    id: "155",
    displayName: "Lääne-Euroopa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _4l25437 = {
    id: "018",
    displayName: "Lõuna-Aafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _4l25438 = {
    id: "039",
    displayName: "Lõuna-Euroopa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _4l25439 = {
    id: "015",
    displayName: "Põhja-Aafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _4l25440 = {
    id: "154",
    displayName: "Põhja-Euroopa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _4l25441 = {
    id: "SJ",
    displayName: "Svalbard ja Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _4l25442 = {
    id: "AE",
    displayName: "Araabia Ühendemiraadid",
    regionId: "145",
    hasTimeZones: true
}, _4l25443 = {
    id: "ZA",
    displayName: "Lõuna-Aafrika Vabariik",
    regionId: "018",
    hasTimeZones: true
}, _4l25444 = {
    id: "005",
    displayName: "Lõuna-Ameerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _4l25445 = {
    relative: _4l25361
}, _4l25446 = {
    id: "BA",
    displayName: "Bosnia ja Hertsegoviina",
    regionId: "039",
    hasTimeZones: true
}, _4l25447 = {
    id: "MO",
    displayName: "Macau erihalduspiirkond",
    regionId: "030",
    hasTimeZones: true
}, _4l25448 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _4l25449 = {
    id: "029",
    displayName: "Kariibi piirkond",
    hasTimeZones: false,
    parentRegionId: "019"
}, _4l25450 = {
    id: "GS",
    displayName: "Lõuna-Georgia ja Lõuna-Sandwichi saared",
    hasTimeZones: true
}, _4l25451 = {
    id: "PM",
    displayName: "Saint Pierre ja Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _4l25452 = {
    id: "021",
    displayName: "Ameerika põhjaosa",
    hasTimeZones: false,
    parentRegionId: "019"
}, _4l25453 = {
    relative: _4l25386
}, _4l25454 = {
    relative: _4l25387
}, _4l25455 = {
    relative: _4l25388
}, _4l25456 = {
    relative: _4l25389
}, _4l25457 = [ "jaan", "veebr", "märts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets" ], _4l25458 = {
    id: "HK",
    displayName: "Hongkongi erihalduspiirkond",
    regionId: "030",
    hasTimeZones: true
}, _4l25459 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _4l25460 = {
    id: "BQ",
    displayName: "Hollandi Kariibi mere saared",
    regionId: "029",
    hasTimeZones: true
}, _4l25461 = {
    id: "VC",
    displayName: "Saint Vincent ja Grenadiinid",
    regionId: "029",
    hasTimeZones: true
}, _4l25462 = {
    id: "057",
    displayName: "Mikroneesia (piirkond)",
    hasTimeZones: false,
    parentRegionId: "009"
}, _4l25463 = {
    d: "E, dd.MM.y – E, dd.MM.y G",
    M: "E, dd.MM.y – E, dd.MM.y G",
    y: "E, dd.MM.y – E, dd.MM.y G"
}, _4l25464 = {
    d: "E, d. MMM – E, d. MMM y G",
    M: "E, d. MMM – E, d. MMM y G",
    y: "E, d. MMM y – E, d. MMM y G"
}, _4l25465 = {
    future: _4l25116,
    past: _4l25104
}, _4l25466 = {
    future: _4l25110,
    past: _4l25111
}, _4l25467 = {
    future: _4l25112,
    past: _4l25113
}, _4l25468 = {
    future: _4l25114,
    past: _4l25115
}, _4l25469 = {
    future: _4l25118,
    past: _4l25109
}, _4l25470 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _4l25471 = {
    future: _4l25121,
    past: _4l25122
}, _4l25472 = {
    future: _4l25123,
    past: _4l25124
}, _4l25473 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _4l25474 = {
    future: _4l25129,
    past: _4l25117
}, _4l25475 = {
    future: _4l25130,
    past: _4l25119
}, _4l25476 = {
    future: _4l25131,
    past: _4l25120
}, _4l25477 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _4l25478 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _4l25479 = {
    future: _4l25139,
    past: _4l25125
}, _4l25480 = {
    future: _4l25140,
    past: _4l25126
}, _4l25481 = [ "jaanuar", "veebruar", "märts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember" ], _4l25482 = {
    future: _4l25147,
    past: _4l25132
}, _4l25483 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _4l25484 = {
    abbreviated: _4l251,
    narrow: [ "1", "2", "3", "4" ],
    wide: _4l25146
}, _4l25485 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _4l25486 = {
    midnight: "keskööl",
    am: "a",
    noon: "n",
    pm: "p",
    morning1: "hommikul",
    afternoon1: "pärastlõunal",
    evening1: "õhtul",
    night1: "öösel"
}, _4l25487 = {
    future: _4l25150,
    past: _4l25137
}, _4l25488 = {
    midnight: "kesköö",
    am: "AM",
    noon: "keskpäev",
    pm: "PM",
    morning1: "hommik",
    afternoon1: "pärastlõuna",
    evening1: "õhtu",
    night1: "öö"
}, _4l25489 = {
    abbreviated: _4l251,
    narrow: _4l252,
    wide: _4l25146
}, _4l25490 = {
    displayName: "p",
    relativeTime: _4l25466
}, _4l25491 = {
    displayName: "t",
    relativeTime: _4l25467
}, _4l25492 = {
    displayName: "s",
    relativeTime: _4l25468
}, _4l25493 = {
    midnight: "keskööl",
    am: "AM",
    noon: "keskpäeval",
    pm: "PM",
    morning1: "hommikul",
    afternoon1: "pärastlõunal",
    evening1: "õhtul",
    night1: "öösel"
}, _4l25494 = {
    displayName: "k",
    relativeTime: _4l25469
}, _4l25495 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _4l25496 = {
    displayName: "min",
    relativeTime: _4l25471
}, _4l25497 = {
    displayName: "sek",
    relativeTime: _4l25472
}, _4l25498 = {
    displayName: "a",
    relativeTime: _4l25474
}, _4l25499 = {
    displayName: "tund",
    relativeTime: _4l25476
}, _4l25500 = {
    displayName: "näd",
    relativeTime: _4l25479
}, _4l25501 = {
    displayName: "minut",
    relativeTime: _4l25480
}, _4l25502 = {
    displayName: "kv",
    relative: _4l25138,
    relativeTime: _4l25423
}, _4l25503 = {
    displayName: "sekund",
    relative: [ "nüüd" ],
    relativeTime: _4l25482
}, _4l25504 = {
    decimal: ",",
    group: " ",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "−",
    exponential: "×10^",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _4l25505 = {
    abbreviated: {
        am: "AM",
        pm: "PM"
    },
    narrow: {
        am: "AM",
        pm: "PM"
    },
    wide: _4l25488
}, _4l25506 = {
    symbols: _4l25504
}, _4l25507 = {
    displayName: "kv",
    relative: _4l25138,
    relativeTime: _4l25465
}, _4l25508 = {
    format: _4l25382,
    numeric: _4l253,
    standAlone: _4l25382
}, _4l25509 = {
    displayName: "kuu",
    relative: _4l25148,
    relativeTime: _4l25469
}, _4l25510 = {
    abbreviated: _4l2540,
    narrow: _4l2540,
    wide: _4l25432,
    "short": _4l2540
}, _4l25511 = {
    displayName: "päev",
    relative: _4l25163,
    relativeTime: _4l25475
}, _4l25512 = {
    displayName: "aasta",
    relative: _4l25161,
    relativeTime: _4l25474
}, _4l25513 = {
    symbols: _4l25504,
    digits: "renderSpelloutCardinal"
}, _4l25514 = {
    displayName: "nädal",
    relative: _4l25162,
    relativeTime: _4l25479
}, _4l25515 = {
    symbols: _4l25504,
    digits: "renderSpelloutCardinalFinancial"
}, _4l25516 = {
    abbreviated: _4l25397,
    narrow: _4l25143,
    wide: _4l25397
}, _4l25517 = {
    displayName: "kvartal",
    relative: _4l25304,
    relativeTime: _4l25487
}, _4l25518 = {
    abbreviated: _4l25418,
    narrow: _4l25418,
    wide: _4l25418
}, _4l25519 = {
    format: _4l25484,
    standAlone: _4l25489
}, _4l25520 = {
    format: _4l25518
}, _4l25521 = {
    abbreviated: _4l25457,
    narrow: _4l25128,
    wide: _4l25481
}, _4l25522 = {
    abbreviated: _4l25473,
    narrow: _4l25154,
    wide: _4l25473
}, _4l25523 = {
    abbreviated: {
        am: "AM",
        pm: "PM"
    },
    narrow: _4l25486,
    wide: _4l25493
}, _4l25524 = {
    abbreviated: _4l25477,
    narrow: _4l25143,
    wide: _4l25477
}, _4l25525 = {
    abbreviated: _4l25478,
    narrow: _4l25154,
    wide: _4l25478
}, _4l25526 = {
    abbreviated: _4l25470,
    narrow: _4l25143,
    wide: _4l25495
}, _4l25527 = {
    abbreviated: _4l25483,
    narrow: _4l25154,
    wide: _4l25483
}, _4l25528 = {
    abbreviated: _4l25485,
    narrow: _4l25143,
    wide: _4l25485
}, _4l25529 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "H:mm.ss zzzz",
    longTime: "H:mm.ss z",
    mediumTime: "H:mm.ss",
    shortTime: "H:mm",
    shortDateTime: "r-MM-dd H:mm",
    mediumDateTime: "r MMM d H:mm.ss",
    longDateTime: "r(U) MMMM d H:mm.ss z",
    fullDateTime: "r(U) MMMM d, EEEE H:mm.ss zzzz"
}, _4l25530 = {
    fullDate: "EEEE, d. MMMM y G",
    longDate: "d. MMMM y G",
    mediumDate: "dd.MM.y G",
    shortDate: "dd.MM.y GGGGG",
    fullTime: "H:mm.ss zzzz",
    longTime: "H:mm.ss z",
    mediumTime: "H:mm.ss",
    shortTime: "H:mm",
    shortDateTime: "dd.MM.y GGGGG H:mm",
    mediumDateTime: "dd.MM.y G H:mm.ss",
    longDateTime: "d. MMMM y G, 'kell' H:mm.ss z",
    fullDateTime: "EEEE, d. MMMM y G, 'kell' H:mm.ss zzzz"
}, _4l25531 = {
    "1000": _4l2517,
    "10000": _4l2535,
    "100000": _4l2550,
    "1000000": _4l2518,
    "10000000": _4l2536,
    "100000000": _4l2551,
    "1000000000": _4l2519,
    "10000000000": _4l2537,
    "100000000000": _4l2552,
    "1000000000000": _4l2520,
    "10000000000000": _4l2538,
    "100000000000000": _4l2553
}, _4l25532 = {
    format: _4l25510,
    standAlone: _4l25510
}, _4l25533 = {
    "1000": _4l2554,
    "10000": _4l2567,
    "100000": _4l2586,
    "1000000": _4l2555,
    "10000000": _4l2568,
    "100000000": _4l2587,
    "1000000000": _4l2556,
    "10000000000": _4l2569,
    "100000000000": _4l2588,
    "1000000000000": _4l2557,
    "10000000000000": _4l2570,
    "100000000000000": _4l2589
}, _4l25534 = {
    format: _4l25516,
    standAlone: _4l25516
}, _4l25535 = {
    format: _4l25523,
    standAlone: _4l25505
}, _4l25536 = {
    "1000": _4l2549,
    "10000": _4l2566,
    "100000": _4l2584,
    "1000000": _4l2585,
    "10000000": _4l2592,
    "100000000": _4l25101,
    "1000000000": _4l2593,
    "10000000000": _4l25102,
    "100000000000": _4l25106,
    "1000000000000": _4l2594,
    "10000000000000": _4l25103,
    "100000000000000": _4l25107
}, _4l25537 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _4l25538 = {
    d: "d",
    E: "ccc",
    Ed: "E, d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d. MMM y G",
    GyMMMEd: "E, d. MMMM y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm.ss a",
    Hms: "H:mm.ss",
    M: "M",
    Md: "d.M",
    MEd: "E, d.M",
    MMM: "MMMM",
    MMMd: "d. MMM",
    MMMEd: "E, d. MMM",
    MMMMd: "d. MMMM",
    MMMMEd: "E, d. MMMM",
    mmss: "mm.ss",
    ms: "mm.ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M.y G",
    yyyyMd: "d.M.y G",
    yyyyMEd: "E, d.M y G",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d. MMM y G",
    yyyyMMMEd: "E, d. MMMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _4l25539 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _4l25540 = {
    format: _4l25521,
    standAlone: _4l25521
}, _4l25541 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _4l25542 = {
    format: _4l25526,
    standAlone: _4l25526
}, _4l25543 = {
    basic: _4l25529,
    cldr: _4l25537
}, _4l25544 = {
    basic: _4l25530,
    cldr: _4l25538
}, _4l25545 = {
    "long": _4l25536,
    "short": _4l25531,
    "default": "#,##0.###"
}, _4l25546 = {
    d: {
        d: "d–d"
    },
    h: _4l259,
    H: {
        H: "HH–HH"
    },
    hm: _4l25144,
    Hm: _4l2571,
    hmv: _4l25157,
    Hmv: _4l2595,
    hv: _4l2539,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _4l2597,
    MEd: _4l25133,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _4l2560,
    MMMEd: _4l25134,
    y: {
        y: "U–U"
    },
    yM: _4l2574,
    yMd: _4l25333,
    yMEd: _4l25459,
    yMMM: _4l2575,
    yMMMd: _4l25153,
    yMMMEd: _4l25448,
    yMMMM: _4l2598
}, _4l25547 = {
    d: {
        d: "d–d"
    },
    h: _4l259,
    H: {
        H: "HH–HH"
    },
    hm: _4l25144,
    Hm: _4l2571,
    hmv: _4l25157,
    Hmv: _4l2595,
    hv: _4l2539,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _4l2572,
    MEd: _4l25127,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _4l2590,
    MMMEd: _4l25145,
    y: {
        y: "y–y G"
    },
    yM: _4l2573,
    yMd: _4l25332,
    yMEd: _4l25463,
    yMMM: _4l2596,
    yMMMd: _4l25360,
    yMMMEd: _4l25464,
    yMMMM: _4l25108
}, _4l25548 = {
    beforeCurrency: _4l25539,
    afterCurrency: _4l25539
}, _4l25549 = {
    "short": _4l25533,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _4l25548
}, _4l25550 = {
    abbreviated: _4l25541,
    narrow: _4l25541,
    wide: _4l25541
}, _4l25551 = {
    format: _4l25550
}, _4l25552 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _4l25545,
    currency: _4l25549,
    percent: {
        "default": "#,##0%"
    }
}, _4l25553 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _4l25554 = {
    dayParts: _4l25520,
    days: _4l25551,
    months: _4l25551,
    years: _4l25551,
    zodiacs: _4l25520
}, _4l25555 = {
    era: _4l254,
    year: _4l25512,
    "year-short": _4l25498,
    "year-narrow": _4l25498,
    quarter: _4l25517,
    "quarter-short": _4l25507,
    "quarter-narrow": _4l25502,
    month: _4l25509,
    "month-short": _4l25494,
    "month-narrow": _4l25494,
    week: _4l25514,
    "week-short": _4l25500,
    "week-narrow": _4l25500,
    day: _4l25511,
    "day-short": _4l25490,
    "day-narrow": _4l25490,
    weekday: _4l2510,
    dayperiod: _4l2582,
    hour: _4l25499,
    "hour-short": _4l25491,
    "hour-narrow": _4l25491,
    minute: _4l25501,
    "minute-short": _4l25496,
    "minute-narrow": _4l25496,
    second: _4l25503,
    "second-short": _4l25497,
    "second-narrow": _4l25492,
    zone: _4l255,
    sun: _4l25445,
    "sun-short": _4l25445,
    "sun-narrow": _4l25445,
    mon: _4l25453,
    "mon-short": _4l25453,
    "mon-narrow": _4l25453,
    tue: _4l25454,
    "tue-short": _4l25454,
    "tue-narrow": _4l25454,
    wed: _4l25455,
    "wed-short": _4l25455,
    "wed-narrow": _4l25455,
    thu: _4l25456,
    "thu-short": _4l25456,
    "thu-narrow": _4l25456,
    fri: _4l25381,
    "fri-short": _4l25381,
    "fri-narrow": _4l25381,
    sat: _4l25424,
    "sat-short": _4l25424,
    "sat-narrow": _4l25424
}, _4l25556 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _4l25555
}, _4l25557 = {
    dateFormats: _4l25544,
    datePartsOrder: "dmy",
    dateIntervalFormats: _4l25547,
    dateIntervalFallbackFormat: "{0}–{1}",
    dayNames: _4l25532,
    dayPeriods: _4l25535,
    monthNames: _4l25542,
    eraNames: _4l2562,
    quarterNames: _4l25519,
    fields: _4l25555
}, _4l25558 = {
    dateFormats: _4l25543,
    datePartsOrder: "md",
    dateIntervalFormats: _4l25546,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _4l25532,
    dayPeriods: _4l25535,
    cyclicNames: _4l25554,
    monthNames: _4l25534,
    monthPatterns: _4l25508,
    quarterNames: _4l25519,
    fields: _4l25555
};

inter.id = "et";

inter.delimiters = {
    quotationStart: "„",
    quotationEnd: "“",
    alternateQuotationStart: "‚",
    alternateQuotationEnd: "‘"
};

inter.listPatterns = {
    "default": {
        "2": "{0} ja {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0} ja {1}"
    },
    unit: P.listPatterns.default,
    unitNarrow: {
        "2": "{0} {1}",
        start: "{0} {1}",
        middle: "{0} {1}",
        end: "{0} {1}"
    },
    unitShort: P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} Maa raskuskiirendus",
                other: "{0} Maa raskuskiirendust"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} meeter sekundi ruudu kohta",
                other: "{0} meetrit sekundi ruudu kohta"
            },
            angleRevolution: {
                one: "{0} täispööre",
                other: "{0} täispööret"
            },
            angleRadian: {
                one: "{0} radiaan",
                other: "{0} radiaani"
            },
            angleDegree: {
                one: "{0} kraad",
                other: "{0} kraadi"
            },
            angleArcMinute: {
                one: "{0} kaareminut",
                other: "{0} kaareminutit"
            },
            angleArcSecond: {
                one: "{0} kaaresekund",
                other: "{0} kaaresekundit"
            },
            areaSquareKilometer: {
                one: "{0} ruutkilomeeter",
                other: "{0} ruutkilomeetrit"
            },
            areaHectare: {
                one: "{0} hektar",
                other: "{0} hektarit"
            },
            areaSquareMeter: {
                one: "{0} ruutmeeter",
                other: "{0} ruutmeetrit"
            },
            areaSquareCentimeter: {
                one: "{0} ruutsentimeeter",
                other: "{0} ruutsentimeetrit"
            },
            areaSquareMile: {
                one: "{0} ruutmiil",
                other: "{0} ruutmiili"
            },
            areaAcre: _4l2591,
            areaSquareYard: {
                one: "{0} ruutjard",
                other: "{0} ruutjardi"
            },
            areaSquareFoot: {
                one: "{0} ruutjalg",
                other: "{0} ruutjalga"
            },
            areaSquareInch: {
                one: "{0} ruuttoll",
                other: "{0} ruuttolli"
            },
            concentrKarat: _4l2599,
            consumptionLiterPerKilometer: {
                one: "{0} liiter kilomeetri kohta",
                other: "{0} liitrit kilomeetri kohta"
            },
            "consumptionLiterPer-100kilometers": {
                one: "liiter 100 kilomeetri kohta",
                other: "{0} liitrit 100 kilomeetri kohta"
            },
            consumptionMilePerGallon: {
                one: "{0} miil galloni kohta",
                other: "{0} miili galloni kohta"
            },
            digitalTerabyte: {
                one: "{0} terabait",
                other: "{0} terabaiti"
            },
            digitalTerabit: {
                one: "{0} terabitt",
                other: "{0} terabitti"
            },
            digitalGigabyte: {
                one: "{0} gigabait",
                other: "{0} gigabaiti"
            },
            digitalGigabit: {
                one: "{0} gigabitt",
                other: "{0} gigabitti"
            },
            digitalMegabyte: {
                one: "{0} megabait",
                other: "{0} megabaiti"
            },
            digitalMegabit: {
                one: "{0} megabitt",
                other: "{0} megabitti"
            },
            digitalKilobyte: {
                one: "{0} kilobait",
                other: "{0} kilobaiti"
            },
            digitalKilobit: {
                one: "{0} kilobitt",
                other: "{0} kilobitti"
            },
            digitalByte: _4l2576,
            digitalBit: {
                one: "{0} bitt",
                other: "{0} bitti"
            },
            durationCentury: {
                one: "{0} sajand",
                other: "{0} sajandit"
            },
            durationYear: {
                one: "{0} aasta",
                other: "{0} aastat"
            },
            durationMonth: _4l2561,
            durationWeek: {
                one: "{0} nädal",
                other: "{0} nädalat"
            },
            durationDay: {
                one: "{0} ööpäev",
                other: "{0} ööpäeva"
            },
            durationHour: {
                one: "{0} tund",
                other: "{0} tundi"
            },
            durationMinute: {
                one: "{0} minut",
                other: "{0} minutit"
            },
            durationSecond: {
                one: "{0} sekund",
                other: "{0} sekundit"
            },
            durationMillisecond: {
                one: "{0} millisekund",
                other: "{0} millisekundit"
            },
            durationMicrosecond: {
                one: "{0} mikrosekund",
                other: "{0} mikrosekundit"
            },
            durationNanosecond: {
                one: "{0} nanosekund",
                other: "{0} nanosekundit"
            },
            electricAmpere: {
                one: "{0} amper",
                other: "{0} amprit"
            },
            electricMilliampere: {
                one: "{0} milliamper",
                other: "{0} milliamprit"
            },
            electricOhm: {
                one: "{0} oom",
                other: "{0} oomi"
            },
            electricVolt: {
                one: "{0} volt",
                other: "{0} volti"
            },
            energyKilocalorie: {
                one: "{0} kilokalor",
                other: "{0} kilokalorit"
            },
            energyCalorie: {
                one: "{0} kalor",
                other: "{0} kalorit"
            },
            energyFoodcalorie: {
                one: "{0} toidukalor",
                other: "{0} toidukalorit"
            },
            energyKilojoule: {
                one: "{0} kilodžaul",
                other: "{0} kilodžauli"
            },
            energyJoule: {
                one: "{0} džaul",
                other: "{0} džauli"
            },
            energyKilowattHour: {
                one: "{0} kilovatt-tund",
                other: "{0} kilovatt-tundi"
            },
            frequencyGigahertz: {
                one: "{0} gigaherts",
                other: "{0} gigahertsi"
            },
            frequencyMegahertz: {
                one: "{0} megaherts",
                other: "{0} megahertsi"
            },
            frequencyKilohertz: {
                one: "{0} kiloherts",
                other: "{0} kilohertsi"
            },
            frequencyHertz: {
                one: "{0} herts",
                other: "{0} hertsi"
            },
            lengthKilometer: {
                one: "{0} kilomeeter",
                other: "{0} kilomeetrit"
            },
            lengthMeter: {
                one: "{0} meeter",
                other: "{0} meetrit"
            },
            lengthDecimeter: {
                one: "{0} detsimeeter",
                other: "{0} detsimeetrit"
            },
            lengthCentimeter: {
                one: "{0} sentimeeter",
                other: "{0} sentimeetrit"
            },
            lengthMillimeter: {
                one: "{0} millimeeter",
                other: "{0} millimeetrit"
            },
            lengthMicrometer: {
                one: "{0} mikromeeter",
                other: "{0} mikromeetrit"
            },
            lengthNanometer: {
                one: "{0} nanomeeter",
                other: "{0} nanomeetrit"
            },
            lengthPicometer: {
                one: "{0} pikomeeter",
                other: "{0} pikomeetrit"
            },
            lengthMile: _4l2577,
            lengthYard: _4l2578,
            lengthFoot: _4l2579,
            lengthInch: _4l2580,
            lengthParsec: {
                one: "{0} parsek",
                other: "{0} parsekit"
            },
            lengthLightYear: {
                one: "{0} valgusaasta",
                other: "{0} valgusaastat"
            },
            lengthAstronomicalUnit: {
                one: "{0} astronoomiline ühik",
                other: "{0} astronoomilist ühikut"
            },
            lengthFurlong: {
                one: "{0} furlong",
                other: "{0} furlongi"
            },
            lengthFathom: {
                one: "{0} süld",
                other: "{0} sülda"
            },
            lengthNauticalMile: {
                one: "{0} meremiil",
                other: "{0} meremiili"
            },
            lengthMileScandinavian: {
                one: "{0} Skandinaavia miil",
                other: "{0} Skandinaavia miili"
            },
            lightLux: {
                one: "{0} luks",
                other: "{0} luksi"
            },
            massMetricTon: {
                one: "{0} tonn",
                other: "{0} tonni"
            },
            massKilogram: {
                one: "{0} kilogramm",
                other: "{0} kilogrammi"
            },
            massGram: {
                one: "{0} gramm",
                other: "{0} grammi"
            },
            massMilligram: {
                one: "{0} milligramm",
                other: "{0} milligrammi"
            },
            massMicrogram: {
                one: "mikrogramm",
                other: "{0} mikrogrammi"
            },
            massTon: {
                one: "{0} lühike tonn",
                other: "{0} lühikest tonni"
            },
            massStone: {
                one: "{0} kivi",
                other: "{0} kivi"
            },
            massPound: {
                one: "{0} nael",
                other: "{0} naela"
            },
            massOunce: {
                one: "{0} unts",
                other: "{0} untsi"
            },
            massOunceTroy: {
                one: "{0} troiunts",
                other: "{0} troiuntsi"
            },
            massCarat: _4l2599,
            powerGigawatt: {
                one: "{0} gigavatt",
                other: "{0} gigavatti"
            },
            powerMegawatt: {
                one: "{0} megavatt",
                other: "{0} megavatti"
            },
            powerKilowatt: {
                one: "{0} kilovatt",
                other: "{0} kilovatti"
            },
            powerWatt: {
                one: "{0} vatt",
                other: "{0} vatti"
            },
            powerMilliwatt: {
                one: "{0} millivatt",
                other: "{0} millivatti"
            },
            powerHorsepower: {
                one: "{0} hobujõud",
                other: "{0} hobujõudu"
            },
            pressureHectopascal: {
                one: "{0} hektopaskal",
                other: "{0} hektopaskalit"
            },
            pressureMillimeterOfMercury: {
                one: "{0} millimeeter elavhõbedasammast",
                other: "{0} millimeetrit elavhõbedasammast"
            },
            pressurePoundPerSquareInch: {
                one: "{0} nael ruuttolli kohta",
                other: "{0} naela ruuttolli kohta"
            },
            pressureInchHg: {
                one: "{0} toll elavhõbedasammast",
                other: "{0} tolli elavhõbedasammast"
            },
            pressureMillibar: {
                one: "{0} millibaar",
                other: "{0} millibaari"
            },
            speedKilometerPerHour: {
                one: "{0} kilomeeter tunnis",
                other: "{0} kilomeetrit tunnis"
            },
            speedMeterPerSecond: {
                one: "{0} meeter sekundis",
                other: "{0} meetrit sekundis"
            },
            speedMilePerHour: {
                one: "{0} miil tunnis",
                other: "{0} miili tunnis"
            },
            speedKnot: {
                one: "{0} sõlm",
                other: "{0} sõlme"
            },
            temperatureGeneric: _4l256,
            temperatureCelsius: {
                one: "{0} Celsiuse kraad",
                other: "{0} Celsiuse kraadi"
            },
            temperatureFahrenheit: {
                one: "{0} Fahrenheiti kraad",
                other: "{0} Fahrenheiti kraadi"
            },
            temperatureKelvin: {
                one: "{0} kelvin",
                other: "{0} kelvinit"
            },
            volumeCubicKilometer: {
                one: "{0} kuupkilomeeter",
                other: "{0} kuupkilomeetrit"
            },
            volumeCubicMeter: {
                one: "{0} kuupmeeter",
                other: "{0} kuupmeetrit"
            },
            volumeCubicCentimeter: {
                one: "{0} kuupsentimeeter",
                other: "{0} kuupsentimeetrit"
            },
            volumeCubicMile: {
                one: "{0} kuupmiil",
                other: "{0} kuupmiili"
            },
            volumeCubicYard: {
                one: "{0} kuupjard",
                other: "{0} kuupjardi"
            },
            volumeCubicFoot: {
                one: "{0} kuupjalg",
                other: "{0} kuupjalga"
            },
            volumeCubicInch: {
                one: "{0} kuuptoll",
                other: "{0} kuuptolli"
            },
            volumeMegaliter: {
                one: "{0} megaliiter",
                other: "{0} megaliitrit"
            },
            volumeHectoliter: {
                one: "{0} hektoliiter",
                other: "{0} hektoliitrit"
            },
            volumeLiter: {
                one: "{0} liiter",
                other: "{0} liitrit"
            },
            volumeDeciliter: {
                one: "{0} detsiliiter",
                other: "{0} detsiliitrit"
            },
            volumeCentiliter: {
                one: "{0} sentiliiter",
                other: "{0} sentiliitrit"
            },
            volumeMilliliter: {
                one: "{0} milliliiter",
                other: "{0} milliliitrit"
            },
            volumeAcreFoot: {
                one: "{0} aakerjalg",
                other: "{0} aakerjalga"
            },
            volumeBushel: {
                one: "{0} buššel",
                other: "{0} buššelit"
            },
            volumeGallon: {
                one: "{0} gallon",
                other: "{0} gallonit"
            },
            volumeQuart: {
                one: "{0} kvart",
                other: "{0} kvarti"
            },
            volumePint: {
                one: "{0} pint",
                other: "{0} pinti"
            },
            volumeCup: _4l2581,
            volumeFluidOunce: {
                one: "{0} vedelikuunts",
                other: "{0} vedelikuuntsi"
            },
            volumeTablespoon: {
                one: "{0} supilusikas",
                other: "{0} supilusikat"
            },
            volumeTeaspoon: {
                one: "{0} teelusikas",
                other: "{0} teelusikat"
            }
        },
        compoundUnit: {
            per: "{0} {1} kohta"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                one: "{0} G",
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRadian: {
                one: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: _4l256,
            angleArcMinute: _4l257,
            angleArcSecond: _4l258,
            areaSquareKilometer: _4l2541,
            areaHectare: _4l2521,
            areaSquareMeter: _4l2522,
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: _4l2542,
            areaAcre: _4l2591,
            areaSquareYard: {
                one: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: _4l2543,
            areaSquareInch: {
                one: "{0} in²",
                other: "{0} in²"
            },
            concentrKarat: _4l2523,
            consumptionLiterPerKilometer: {
                one: "{0} l/km",
                other: "{0} l/km"
            },
            "consumptionLiterPer-100kilometers": _4l25100,
            consumptionMilePerGallon: {
                one: "{0} mpg",
                other: "{0} mpg"
            },
            digitalTerabyte: {
                one: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: {
                one: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: {
                one: "{0} kB",
                other: "{0} kB"
            },
            digitalKilobit: {
                one: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: _4l2576,
            digitalBit: {
                one: "{0} b",
                other: "{0} b"
            },
            durationCentury: {
                one: "{0} saj",
                other: "{0} saj"
            },
            durationYear: _4l2512,
            durationMonth: _4l2561,
            durationWeek: {
                one: "{0} näd",
                other: "{0} näd"
            },
            durationDay: {
                one: "{0} päev",
                other: "{0} päeva"
            },
            durationHour: _4l2513,
            durationMinute: _4l2544,
            durationSecond: {
                one: "{0} sek",
                other: "{0} sek"
            },
            durationMillisecond: _4l2524,
            durationMicrosecond: {
                one: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: {
                one: "{0} kcal",
                other: "{0} kcal"
            },
            energyCalorie: {
                one: "{0} cal",
                other: "{0} cal"
            },
            energyFoodcalorie: {
                one: "{0} Cal",
                other: "{0} Cal"
            },
            energyKilojoule: {
                one: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: _4l2525,
            lengthMeter: _4l2514,
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: _4l2526,
            lengthMillimeter: _4l2527,
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: _4l2528,
            lengthMile: _4l2577,
            lengthYard: _4l2578,
            lengthFoot: _4l2579,
            lengthInch: _4l2580,
            lengthParsec: {
                one: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: _4l25105,
            lengthAstronomicalUnit: {
                one: "{0} aü",
                other: "{0} aü"
            },
            lengthNauticalMile: {
                one: "{0} nmi",
                other: "{0} nmi"
            },
            lightLux: {
                one: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: _4l2513,
            massKilogram: _4l2529,
            massGram: _4l2515,
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} µg",
                other: "{0} µg"
            },
            massTon: _4l2583,
            massPound: _4l2530,
            massOunce: _4l2531,
            massOunceTroy: {
                one: "{0} oz t",
                other: "{0} oz t"
            },
            massCarat: _4l2523,
            powerGigawatt: {
                one: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: {
                one: "{0} kW",
                other: "{0} kW"
            },
            powerWatt: {
                one: "{0} W",
                other: "{0} W"
            },
            powerMilliwatt: {
                one: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: _4l2532,
            pressureHectopascal: _4l2545,
            pressureMillimeterOfMercury: {
                one: "{0} mm Hg",
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0} psi",
                other: "{0} psi"
            },
            pressureInchHg: {
                one: "{0} in Hg",
                other: "{0} in Hg"
            },
            pressureMillibar: _4l2563,
            speedKilometerPerHour: _4l2564,
            speedMeterPerSecond: _4l2546,
            speedMilePerHour: _4l2565,
            temperatureGeneric: _4l256,
            temperatureCelsius: _4l2533,
            temperatureFahrenheit: _4l2534,
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: _4l2547,
            volumeCubicMeter: {
                one: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: _4l2548,
            volumeCubicYard: {
                one: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: {
                one: "{0} in³",
                other: "{0} in³"
            },
            volumeMegaliter: {
                one: "{0} Ml",
                other: "{0} Ml"
            },
            volumeHectoliter: {
                one: "{0} hl",
                other: "{0} hl"
            },
            volumeLiter: _4l2516,
            volumeDeciliter: {
                one: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} cl",
                other: "{0} cl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                other: "{0} ml"
            },
            volumeAcreFoot: {
                one: "{0} ac ft",
                other: "{0} ac ft"
            },
            volumeGallon: {
                one: "{0} gal",
                other: "{0} gal"
            },
            volumeQuart: {
                one: "{0} qt",
                other: "{0} qt"
            },
            volumePint: {
                one: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: _4l2581,
            volumeFluidOunce: {
                one: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} spl",
                other: "{0} spl"
            },
            volumeTeaspoon: {
                one: "{0} tl",
                other: "{0} tl"
            },
            angleRevolution: {
                other: "{0} rev"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            lengthMileScandinavian: {
                other: "{0} smi"
            },
            massStone: {
                other: "{0} st"
            },
            speedKnot: {
                other: "{0} kn"
            },
            volumePintMetric: {
                other: "{0} mpt"
            },
            volumeCupMetric: {
                other: "{0} mc"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                one: "{0}G",
                other: "{0}G"
            },
            angleDegree: _4l256,
            angleArcMinute: _4l257,
            angleArcSecond: _4l258,
            areaSquareKilometer: _4l2541,
            areaHectare: _4l2521,
            areaSquareMeter: _4l2522,
            areaSquareMile: _4l2542,
            areaAcre: _4l2591,
            areaSquareFoot: _4l2543,
            "consumptionLiterPer-100kilometers": _4l25100,
            durationYear: _4l2512,
            durationMonth: {
                one: "{0} k",
                other: "{0} k"
            },
            durationWeek: {
                one: "{0} n",
                other: "{0} n"
            },
            durationDay: {
                one: "{0} p",
                other: "{0} p"
            },
            durationHour: _4l2513,
            durationMinute: _4l2544,
            durationSecond: {
                one: "{0} s",
                other: "{0} s"
            },
            durationMillisecond: _4l2524,
            lengthKilometer: _4l2525,
            lengthMeter: _4l2514,
            lengthCentimeter: _4l2526,
            lengthMillimeter: _4l2527,
            lengthPicometer: _4l2528,
            lengthMile: _4l2577,
            lengthYard: _4l2578,
            lengthFoot: _4l2579,
            lengthInch: _4l2580,
            lengthLightYear: _4l25105,
            massKilogram: _4l2529,
            massGram: _4l2515,
            massTon: _4l2583,
            massPound: _4l2530,
            massOunce: _4l2531,
            powerKilowatt: {
                one: "{0}kW",
                other: "{0}kW"
            },
            powerWatt: {
                one: "{0}W",
                other: "{0}W"
            },
            powerHorsepower: _4l2532,
            pressureHectopascal: _4l2545,
            pressureInchHg: {
                one: "{0} toll Hg",
                other: "{0} tolli Hg"
            },
            pressureMillibar: _4l2563,
            speedKilometerPerHour: _4l2564,
            speedMeterPerSecond: _4l2546,
            speedMilePerHour: _4l2565,
            temperatureCelsius: _4l2533,
            temperatureFahrenheit: _4l2534,
            volumeCubicKilometer: _4l2547,
            volumeCubicMile: _4l2548,
            volumeLiter: _4l2516
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "−HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "({0})",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} (+1)",
        standard: "{0} (+0)"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "š", "z", "ž", "t", "u", "v", "w", "õ", "ä", "ö", "ü", "x", "y" ],
        auxiliary: [ "á", "à", "â", "å", "ā", "æ", "ç", "é", "è", "ê", "ë", "ē", "í", "ì", "î", "ï", "ī", "ñ", "ó", "ò", "ŏ", "ô", "ø", "ō", "œ", "ú", "ù", "û", "ū" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "Š", "Z", "Ž", "T", "U", "V", "Õ", "Ä", "Ö", "Ü", "X", "Y" ],
        punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "(", ")", "\\[", "\\]", "\\{", "\\}" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0} … {1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _4l25504,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _4l25552,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _4l25552,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _4l25504,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _4l25504,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _4l25504,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _4l25504,
        digits: "renderEthiopic"
    },
    finance: _4l25506,
    fullwide: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _4l25504,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _4l25504,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _4l25504,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _4l25504,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _4l25513,
    hansfin: _4l25515,
    hant: _4l25513,
    hantfin: _4l25515,
    hebr: {
        symbols: _4l25504,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _4l25504,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _4l25513,
    jpanfin: _4l25515,
    kali: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _4l25504,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _4l25504,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _4l25504,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _4l25504,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _4l25504,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _4l25504,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _4l25504,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _4l25504,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _4l25506,
    nkoo: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _4l25504,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _4l25504,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _4l25504,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _4l25504,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _4l25504,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _4l25504,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _4l25506,
    vaii: {
        symbols: _4l25504,
        formats: _4l25552,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _4l25504,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _4l25544,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4l25547,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _4l25532,
        dayPeriods: _4l25535,
        monthNames: _4l25540,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _4l25519,
        fields: _4l25555
    },
    chinese: _4l25558,
    coptic: {
        dateFormats: _4l25544,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4l25547,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _4l25532,
        dayPeriods: _4l25535,
        monthNames: {
            format: _4l25525,
            standAlone: _4l25525
        },
        eraNames: _4l25135,
        quarterNames: _4l25519,
        fields: _4l25555
    },
    dangi: _4l25558,
    ethioaa: _4l25556,
    ethiopic: {
        dateFormats: _4l25544,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4l25547,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _4l25532,
        dayPeriods: _4l25535,
        monthNames: {
            format: _4l25527,
            standAlone: _4l25527
        },
        eraNames: _4l25135,
        quarterNames: _4l25519,
        fields: _4l25555
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d. MMMM y",
                longDate: "d. MMMM y",
                mediumDate: "d. MMM y",
                shortDate: "dd.MM.yy",
                fullTime: "H:mm.ss zzzz",
                longTime: "H:mm.ss z",
                mediumTime: "H:mm.ss",
                shortTime: "H:mm",
                shortDateTime: "dd.MM.yy H:mm",
                mediumDateTime: "d. MMM y H:mm.ss",
                longDateTime: "d. MMMM y H:mm.ss z",
                fullDateTime: "EEEE, d. MMMM y H:mm.ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E, d",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm.ss a",
                EHms: "E HH:mm.ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d. MMM y G",
                GyMMMEd: "E, d. MMMM y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm.ss a",
                Hms: "H:mm.ss",
                hmsv: "h:mm.ss a v",
                Hmsv: "HH:mm.ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "M",
                Md: "d.M",
                MEd: "E, d.M",
                MMM: "MMMM",
                MMMd: "d. MMM",
                MMMEd: "E, d. MMM",
                MMMMd: "d. MMMM",
                MMMMEd: "E, d. MMMM",
                mmss: "mm.ss",
                ms: "mm.ss",
                y: "y",
                yM: "M.y",
                yMd: "d.M.y",
                yMEd: "E, d.M.y",
                yMMM: "MMM y",
                yMMMd: "d. MMM y",
                yMMMEd: "E, d. MMMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _4l259,
            H: {
                H: "HH–HH"
            },
            hm: _4l25144,
            Hm: _4l2571,
            hmv: _4l25157,
            Hmv: _4l2595,
            hv: _4l2539,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "MM–MM"
            },
            Md: _4l2572,
            MEd: _4l25127,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _4l2590,
            MMMEd: _4l25145,
            y: {
                y: "y–y"
            },
            yM: {
                M: "MM.y–MM.y",
                y: "MM.y–MM.y"
            },
            yMd: {
                d: "dd.MM.y–dd.MM.y",
                M: "dd.MM.y–dd.MM.y",
                y: "dd.MM.y–dd.MM.y"
            },
            yMEd: {
                d: "E, dd.MM.y – E, dd.MM.y",
                M: "E, dd.MM.y – E, dd.MM.y",
                y: "E, dd.MM.y – E, dd.MM.y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "d.–d. MMM y",
                M: "d. MMM – d. MMM y",
                y: "d. MMM y – d. MMM y"
            },
            yMMMEd: {
                d: "E, d. MMM – E, d. MMM y",
                M: "E, d. MMM – E, d. MMM y",
                y: "E, d. MMM y – E, d. MMM y"
            },
            yMMMM: {
                M: "MMMM–MMMM y",
                y: "MMMM y – MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _4l25532,
        dayPeriods: _4l25535,
        monthNames: _4l25540,
        eraNames: {
            wide: [ "enne Kristust", "pärast Kristust" ],
            abbreviated: [ "eKr", "pKr" ]
        },
        quarterNames: _4l25519,
        fields: _4l25555
    },
    hebrew: {
        dateFormats: _4l25544,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4l25547,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _4l25532,
        dayPeriods: _4l25535,
        monthNames: {
            format: _4l25522,
            standAlone: _4l25522
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _4l25519,
        fields: _4l25555
    },
    indian: {
        dateFormats: _4l25544,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4l25547,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _4l25532,
        dayPeriods: _4l25535,
        monthNames: {
            format: _4l25528,
            standAlone: _4l25528
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _4l25519,
        fields: _4l25555
    },
    islamic: _4l25557,
    "islamic-umalqura": _4l25557,
    "islamic-tbla": _4l25557,
    "islamic-civil": _4l25557,
    "islamic-rgsa": _4l25557,
    iso8601: _4l25556,
    japanese: {
        dateFormats: _4l25544,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4l25547,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _4l25532,
        dayPeriods: _4l25535,
        monthNames: _4l25540,
        eraNames: {
            wide: _4l25553,
            abbreviated: _4l25553
        },
        quarterNames: _4l25519,
        fields: _4l25555
    },
    persian: {
        dateFormats: _4l25544,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4l25547,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _4l25532,
        dayPeriods: _4l25535,
        monthNames: {
            format: _4l25524,
            standAlone: _4l25524
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _4l25519,
        fields: _4l25555
    },
    roc: {
        dateFormats: _4l25544,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4l25547,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _4l25532,
        dayPeriods: _4l25535,
        monthNames: _4l25540,
        eraNames: {
            wide: _4l2511,
            abbreviated: _4l2511
        },
        quarterNames: _4l25519,
        fields: _4l25555
    },
    islamicc: _4l25556
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length;
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 1 && v === 0) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinal(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "miinus " + this.renderSpelloutCardinal(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinal(Math.floor(n)) + " koma " + this.renderSpelloutCardinal(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinal(Math.floor(n / 1e15)) + " biljardit" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinal(n % 1e15));
    if (n >= 1e15) return this.renderSpelloutCardinal(Math.floor(n / 1e15)) + " biljard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinal(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinal(Math.floor(n / 1e12)) + " biljonit" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinal(n % 1e12));
    if (n >= 1e12) return this.renderSpelloutCardinal(Math.floor(n / 1e12)) + " biljon" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinal(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinal(Math.floor(n / 1e9)) + " miljardit" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinal(n % 1e9));
    if (n >= 1e9) return this.renderSpelloutCardinal(Math.floor(n / 1e9)) + " miljard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinal(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinal(Math.floor(n / 1e6)) + " miljonit" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinal(n % 1e6));
    if (n >= 1e6) return this.renderSpelloutCardinal(Math.floor(n / 1e6)) + " miljon" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinal(n % 1e6));
    if (n >= 1e3) return this.renderSpelloutCardinal(Math.floor(n / 1e3)) + " tuhat" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 100) return this.renderSpelloutCardinal(Math.floor(n / 100)) + "sada" + (n === 100 ? "" : " " + this.renderSpelloutCardinal(n % 100));
    if (n >= 20) return this.renderSpelloutCardinal(Math.floor(n / 10)) + "kümmend" + (n === 20 ? "" : " " + this.renderSpelloutCardinal(n % 10));
    if (n >= 11) return this.renderSpelloutCardinal(n % 10) + "teist";
    if (n >= 10) return "kümme";
    if (n >= 9) return "üheksa";
    if (n >= 8) return "kaheksa";
    if (n >= 7) return "seitse";
    if (n >= 6) return "kuus";
    if (n >= 5) return "viis";
    if (n >= 4) return "neli";
    if (n >= 3) return "kolm";
    if (n >= 2) return "kaks";
    if (n >= 1) return "üks";
    if (n >= 0) return "null";
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 30), {
    id: "America/Mazatlan",
    regionId: "013",
    utcStandardOffsetSeconds: -25200,
    displayName: "Mazatlán",
    countryId: "MX"
}, P.timeZones.slice(31, 41), P.timeZones[42], {
    id: "Pacific/Galapagos",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Galápagos",
    countryId: "EC"
}, P.timeZones.slice(44, 46), {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Lihavõttesaar",
    countryId: "CL"
}, P.timeZones.slice(46, 49), P.timeZones[51], {
    id: "America/Merida",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mérida",
    countryId: "MX"
}, {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "México",
    countryId: "MX"
}, P.timeZones.slice(52, 62), {
    id: "America/Bogota",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Bogotá",
    countryId: "CO"
}, {
    id: "America/Cancun",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Cancún",
    countryId: "MX"
}, P.timeZones.slice(64, 66), {
    id: "America/Eirunepe",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Eirunepé",
    countryId: "BR"
}, P.timeZones.slice(67, 69), {
    id: "America/Havana",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Havanna",
    countryId: "CU"
}, P.timeZones.slice(70, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones.slice(91, 97), {
    id: "America/Cuiaba",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Cuiabá",
    countryId: "BR"
}, {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 117), {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Barthélemy",
    countryId: "BL"
}, {
    id: "America/St_Kitts",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Kitts",
    countryId: "KN"
}, {
    id: "America/St_Lucia",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Lucia",
    countryId: "LC"
}, {
    id: "America/St_Thomas",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Thomas",
    countryId: "VI"
}, {
    id: "America/St_Vincent",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Vincent",
    countryId: "VC"
}, P.timeZones.slice(117, 119), P.timeZones.slice(124, 126), {
    id: "America/St_Johns",
    regionId: "021",
    utcStandardOffsetSeconds: -12600,
    displayName: "Saint John’s",
    countryId: "CA"
}, {
    id: "America/Araguaina",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Araguaína",
    countryId: "BR"
}, P.timeZones[128], {
    id: "America/Belem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Belém",
    countryId: "BR"
}, P.timeZones.slice(130, 137), {
    id: "America/Maceio",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Maceió",
    countryId: "BR"
}, P.timeZones.slice(138, 145), P.timeZones[146], {
    id: "America/Argentina/Rio_Gallegos",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Río Gallegos",
    countryId: "AR"
}, P.timeZones.slice(147, 150), {
    id: "America/Santarem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Santarém",
    countryId: "BR"
}, P.timeZones[152], {
    id: "America/Sao_Paulo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "São Paulo",
    countryId: "BR"
}, {
    id: "America/Argentina/Tucuman",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Tucumán",
    countryId: "AR"
}, P.timeZones[154], {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Lõuna-Georgia",
    countryId: "GS"
}, P.timeZones.slice(155, 157), {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Assoorid",
    countryId: "PT"
}, P.timeZones[160], {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Roheneemesaared",
    countryId: "CV"
}, P.timeZones.slice(161, 166), P.timeZones.slice(167, 174), P.timeZones[175], {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Kanaari saared",
    countryId: "ES"
}, {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lissabon",
    countryId: "PT"
}, P.timeZones.slice(177, 180), {
    id: "Europe/Isle_of_Man",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Mani saar",
    countryId: "IM"
}, P.timeZones.slice(180, 183), {
    id: "Atlantic/Reykjavik",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Reykjavík",
    countryId: "IS"
}, {
    id: "Atlantic/St_Helena",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Saint Helena",
    countryId: "SH"
}, {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Alžiir",
    countryId: "DZ"
}, P.timeZones.slice(188, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrad",
    countryId: "RS"
}, {
    id: "Europe/Berlin",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Berliin",
    countryId: "DE"
}, P.timeZones.slice(193, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Brüssel",
    countryId: "BE"
}, P.timeZones.slice(196, 200), P.timeZones.slice(201, 205), {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Kopenhaagen",
    countryId: "DK"
}, P.timeZones.slice(205, 218), {
    id: "Europe/Paris",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Pariis",
    countryId: "FR"
}, P.timeZones.slice(219, 221), {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Praha",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Rooma",
    countryId: "IT"
}, P.timeZones.slice(223, 227), {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, P.timeZones.slice(228, 230), {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Varssavi",
    countryId: "PL"
}, {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Vatikan",
    countryId: "VA"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Viin",
    countryId: "AT"
}, P.timeZones[233], {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zürich",
    countryId: "CH"
}, {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Ateena",
    countryId: "GR"
}, P.timeZones.slice(236, 238), P.timeZones[239], {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bukarest",
    countryId: "RO"
}, {
    id: "Europe/Chisinau",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Chișinău",
    countryId: "MD"
}, P.timeZones.slice(242, 247), {
    id: "Europe/Helsinki",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Helsingi",
    countryId: "FI"
}, {
    id: "Asia/Jerusalem",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Jeruusalemm",
    countryId: "IL"
}, P.timeZones.slice(249, 251), {
    id: "Africa/Cairo",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kairo",
    countryId: "EG"
}, P.timeZones.slice(251, 257), {
    id: "Europe/Mariehamn",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Maarianhamina",
    countryId: "AX"
}, P.timeZones[257], P.timeZones.slice(259, 261), {
    id: "Asia/Nicosia",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Nikosia",
    countryId: "CY"
}, {
    id: "Europe/Riga",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Riia",
    countryId: "LV"
}, P.timeZones.slice(263, 268), {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Addis Abeba",
    countryId: "ET"
}, P.timeZones.slice(269, 272), {
    id: "Asia/Riyadh",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Ar-Riyāḑ",
    countryId: "SA"
}, P.timeZones[272], {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdad",
    countryId: "IQ"
}, {
    id: "Asia/Bahrain",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bahrein",
    countryId: "BH"
}, P.timeZones[275], {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damaskus",
    countryId: "SY"
}, P.timeZones.slice(277, 279), P.timeZones[280], {
    id: "Asia/Qatar",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Katar",
    countryId: "QA"
}, P.timeZones[281], {
    id: "Asia/Kuwait",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Kuveit",
    countryId: "KW"
}, P.timeZones.slice(283, 286), {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moskva",
    countryId: "RU"
}, P.timeZones[287], P.timeZones.slice(290, 293), {
    id: "Europe/Istanbul",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "İstanbul",
    countryId: "TR"
}, {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Teheran",
    countryId: "IR"
}, P.timeZones[294], {
    id: "Asia/Baku",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Bakuu",
    countryId: "AZ"
}, P.timeZones[296], {
    id: "Asia/Yerevan",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Jerevan",
    countryId: "AM"
}, P.timeZones[297], {
    id: "Asia/Muscat",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Masqaţ",
    countryId: "OM"
}, P.timeZones[298], {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Réunion",
    countryId: "RE"
}, P.timeZones.slice(301, 303), {
    id: "Asia/Tbilisi",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Thbilisi",
    countryId: "GE"
}, P.timeZones[304], P.timeZones[306], {
    id: "Asia/Aqtau",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aktau",
    countryId: "KZ"
}, {
    id: "Asia/Aqtobe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aktöbe",
    countryId: "KZ"
}, P.timeZones[310], {
    id: "Asia/Ashgabat",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aşgabat",
    countryId: "TM"
}, {
    id: "Asia/Dushanbe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Dušanbe",
    countryId: "TJ"
}, {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Jekaterinburg",
    countryId: "RU"
}, P.timeZones.slice(312, 314), {
    id: "Asia/Qyzylorda",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Kõzõlorda",
    countryId: "KZ"
}, {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Maldiivid",
    countryId: "MV"
}, P.timeZones.slice(315, 317), P.timeZones[318], {
    id: "Asia/Tashkent",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Taškent",
    countryId: "UZ"
}, P.timeZones.slice(321, 324), {
    id: "Asia/Almaty",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Almatõ",
    countryId: "KZ"
}, {
    id: "Asia/Bishkek",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Biškek",
    countryId: "KG"
}, P.timeZones.slice(326, 331), P.timeZones[332], {
    id: "Asia/Urumqi",
    regionId: "030",
    utcStandardOffsetSeconds: 21600,
    displayName: "Ürümqi",
    countryId: "CN"
}, P.timeZones.slice(333, 337), P.timeZones.slice(338, 342), {
    id: "Indian/Christmas",
    utcStandardOffsetSeconds: 25200,
    displayName: "Jõulusaar",
    countryId: "CX"
}, {
    id: "Asia/Krasnoyarsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Krasnojarsk",
    countryId: "RU"
}, P.timeZones.slice(343, 350), {
    id: "Asia/Hong_Kong",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Hongkong",
    countryId: "HK"
}, P.timeZones.slice(352, 360), {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Singapur",
    countryId: "SG"
}, P.timeZones[361], {
    id: "Asia/Choibalsan",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Tšojbalsan",
    countryId: "MN"
}, P.timeZones.slice(362, 364), P.timeZones[365], {
    id: "Asia/Khandyga",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Handõga",
    countryId: "RU"
}, {
    id: "Asia/Yakutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jakutsk",
    countryId: "RU"
}, P.timeZones[366], P.timeZones.slice(368, 370), {
    id: "Asia/Seoul",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Soul",
    countryId: "KR"
}, {
    id: "Asia/Tokyo",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tōkyō",
    countryId: "JP"
}, {
    id: "Asia/Chita",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tšita",
    countryId: "RU"
}, P.timeZones.slice(373, 399), {
    id: "Asia/Sakhalin",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Sahhalin",
    countryId: "RU"
}, {
    id: "Asia/Srednekolymsk",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Srednekolõmsk",
    countryId: "RU"
}, {
    id: "Asia/Anadyr",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Anadõr",
    countryId: "RU"
}, P.timeZones[402], {
    id: "Pacific/Fiji",
    regionId: "054",
    utcStandardOffsetSeconds: 43200,
    displayName: "Fidži",
    countryId: "FJ"
}, P.timeZones[404], {
    id: "Asia/Kamchatka",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Kamtšatka",
    countryId: "RU"
}, P.timeZones.slice(406, 419));

inter.territories = [ _4l25390, _4l25374, _4l25334, _4l25306, _4l25270, _4l25271, _4l25398, _4l25383, _4l25452, _4l25425, _4l25238, _4l25202, _4l25272, _4l25141, _4l25409, _4l25442, _4l25307, _4l25273, _4l25173, _4l25156, _4l25362, _4l25335, _4l25426, _4l25239, _4l25203, _4l25240, _4l25336, _4l25274, _4l25174, _4l25204, _4l25205, _4l25175, _4l25241, _4l25206, _4l25275, _4l25446, _4l25276, _4l25151, _4l25308, _4l25277, _4l25410, _4l25207, _4l25309, _4l25363, _4l25242, _4l25158, _4l25159, _4l25278, _4l25364, _4l25337, _4l25243, _4l25375, _4l25152, _4l25279, _4l25280, _4l25427, _4l25244, _4l25176, _4l25245, _4l25411, _4l25350, _4l25246, _4l25281, _4l25391, _4l25399, _4l25177, _4l25338, _4l25365, _4l25178, _4l25208, _4l25179, _4l25310, _4l25247, _4l25248, _4l25311, _4l25339, _4l25166, _4l25312, _4l25282, _4l25209, _4l25376, _4l25210, _4l25180, _4l25366, _4l25181, _4l25313, _4l25249, _4l25460, _4l25283, _4l25458, _4l25314, _4l25419, _4l25407, _4l25420, _4l25315, _4l25250, _4l25251, _4l25182, _4l25340, _4l25183, _4l25184, _4l25211, _4l25252, _4l25212, _4l25253, _4l25213, _4l25214, _4l25316, _4l25142, _4l25412, _4l25377, _4l25284, _4l25254, _4l25155, _4l25215, _4l25449, _4l25317, _4l25185, _4l25216, _4l25428, _4l25433, _4l25413, _4l25434, _4l25285, _4l25286, _4l25287, _4l25384, _4l25149, _4l25255, _4l25217, _4l25186, _4l25218, _4l25341, _4l25219, _4l25167, _4l25187, _4l25256, _4l25288, _4l25378, _4l25289, _4l25220, _4l25342, _4l25168, _4l25435, _4l25421, _4l25436, _4l25367, _4l25437, _4l25443, _4l25422, _4l25444, _4l25438, _4l25450, _4l25351, _4l25368, _4l25447, _4l25343, _4l25344, _4l25290, _4l25221, _4l25318, _4l25169, _4l25188, _4l25319, _4l25222, _4l25400, _4l25345, _4l25352, _4l25320, _4l25257, _4l25258, _4l25414, _4l25353, _4l25462, _4l25259, _4l25223, _4l25321, _4l25346, _4l25347, _4l25322, _4l25392, _4l25291, _4l25189, _4l25190, _4l25323, _4l25292, _4l25191, _4l25170, _4l25260, _4l25192, _4l25401, {
    id: "QO",
    displayName: "Okeaania hajasaared",
    regionId: "009",
    hasTimeZones: false
}, _4l25193, _4l25408, _4l25293, _4l25393, _4l25224, _4l25294, _4l25194, _4l25402, _4l25415, _4l25195, _4l25295, _4l25416, _4l25171, _4l25429, _4l25354, _4l25355, _4l25439, _4l25440, _4l25356, _4l25394, _4l25395, _4l25225, _4l25296, _4l25226, _4l25261, _4l25403, _4l25404, _4l25369, _4l25430, _4l25357, _4l25451, _4l25461, _4l25370, _4l25297, _4l25227, _4l25196, _4l25348, _4l25379, _4l25324, _4l25262, _4l25228, _4l25371, _4l25298, _4l25372, _4l25325, _4l25326, _4l25299, _4l25197, _4l25327, _4l25229, _4l25300, _4l25380, _4l25328, _4l25441, _4l25431, _4l25230, _4l25198, _4l25358, _4l25165, _4l25231, _4l25329, _4l25172, _4l25263, _4l25199, _4l25417, _4l25160, _4l25301, _4l25396, _4l25232, _4l25200, _4l25373, _4l25201, _4l25233, _4l25234, _4l25405, _4l25235, _4l25264, _4l25236, _4l25265, _4l25349, _4l25385, _4l25359, _4l25330, _4l25266, _4l25267, _4l25268, _4l25331, _4l25269, _4l25406, _4l25302, _4l25136, _4l25303, _4l25237 ];

inter.regions = [ _4l25390, _4l25374, _4l25398, _4l25452, _4l25426, _4l25391, _4l25419, _4l25407, _4l25420, _4l25412, _4l25449, _4l25428, _4l25413, _4l25434, _4l25435, _4l25421, _4l25436, _4l25437, _4l25422, _4l25444, _4l25438, _4l25414, _4l25462, _4l25401, _4l25415, _4l25439, _4l25440, _4l25136 ];

inter.countries = [ _4l25334, _4l25306, _4l25270, _4l25271, _4l25383, _4l25425, _4l25238, _4l25202, _4l25272, _4l25141, _4l25409, _4l25442, _4l25307, _4l25273, _4l25173, _4l25156, _4l25362, _4l25335, _4l25239, _4l25203, _4l25240, _4l25336, _4l25274, _4l25174, _4l25204, _4l25205, _4l25175, _4l25241, _4l25206, _4l25275, _4l25446, _4l25276, _4l25151, _4l25308, _4l25277, _4l25410, _4l25207, _4l25309, _4l25363, _4l25242, _4l25158, _4l25159, _4l25278, _4l25364, _4l25337, _4l25243, _4l25375, _4l25152, _4l25279, _4l25280, _4l25427, _4l25244, _4l25176, _4l25245, _4l25411, _4l25350, _4l25246, _4l25281, _4l25399, _4l25177, _4l25338, _4l25365, _4l25178, _4l25208, _4l25179, _4l25310, _4l25247, _4l25248, _4l25311, _4l25339, _4l25166, _4l25312, _4l25282, _4l25209, _4l25376, _4l25210, _4l25180, _4l25366, _4l25181, _4l25313, _4l25249, _4l25460, _4l25283, _4l25458, _4l25314, _4l25315, _4l25250, _4l25251, _4l25182, _4l25340, _4l25183, _4l25184, _4l25211, _4l25252, _4l25212, _4l25253, _4l25213, _4l25214, _4l25316, _4l25142, _4l25377, _4l25284, _4l25254, _4l25155, _4l25215, _4l25317, _4l25185, _4l25216, _4l25433, _4l25285, _4l25286, _4l25287, _4l25384, _4l25149, _4l25255, _4l25217, _4l25186, _4l25218, _4l25341, _4l25219, _4l25167, _4l25187, _4l25256, _4l25288, _4l25378, _4l25289, _4l25220, _4l25342, _4l25168, _4l25367, _4l25443, _4l25450, _4l25351, _4l25368, _4l25447, _4l25343, _4l25344, _4l25290, _4l25221, _4l25318, _4l25169, _4l25188, _4l25319, _4l25222, _4l25400, _4l25345, _4l25352, _4l25320, _4l25257, _4l25258, _4l25353, _4l25259, _4l25223, _4l25321, _4l25346, _4l25347, _4l25322, _4l25392, _4l25291, _4l25189, _4l25190, _4l25323, _4l25292, _4l25191, _4l25170, _4l25260, _4l25192, _4l25193, _4l25408, _4l25293, _4l25393, _4l25224, _4l25294, _4l25194, _4l25402, _4l25195, _4l25295, _4l25416, _4l25171, _4l25429, _4l25354, _4l25355, _4l25356, _4l25394, _4l25395, _4l25225, _4l25296, _4l25226, _4l25261, _4l25403, _4l25404, _4l25369, _4l25430, _4l25357, _4l25451, _4l25461, _4l25370, _4l25297, _4l25227, _4l25196, _4l25348, _4l25379, _4l25324, _4l25262, _4l25228, _4l25371, _4l25298, _4l25372, _4l25325, _4l25326, _4l25299, _4l25197, _4l25327, _4l25229, _4l25300, _4l25380, _4l25328, _4l25441, _4l25431, _4l25230, _4l25198, _4l25358, _4l25165, _4l25231, _4l25329, _4l25172, _4l25263, _4l25199, _4l25417, _4l25160, _4l25301, _4l25396, _4l25232, _4l25200, _4l25373, _4l25201, _4l25233, _4l25234, _4l25405, _4l25235, _4l25264, _4l25236, _4l25265, _4l25349, _4l25385, _4l25359, _4l25330, _4l25266, _4l25267, _4l25268, _4l25331, _4l25269, _4l25406, _4l25302, _4l25303, _4l25237 ];

inter.languages = [ {
    id: "ab",
    displayName: "abhaasi"
}, {
    id: "ada",
    displayName: "adangme"
}, {
    id: "ady",
    displayName: "adõgee"
}, {
    id: "aa",
    displayName: "afari"
}, {
    id: "afh",
    displayName: "afrihili"
}, {
    id: "af",
    displayName: "afrikaani",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "aghemi",
    nativeDisplayName: "Aghem"
}, {
    id: "ay",
    displayName: "aimara"
}, {
    id: "ain",
    displayName: "ainu"
}, {
    id: "akk",
    displayName: "akadi"
}, {
    id: "ak",
    displayName: "akani",
    nativeDisplayName: "Akan"
}, {
    id: "bss",
    displayName: "akoose"
}, {
    id: "akz",
    displayName: "alabama"
}, {
    id: "nds",
    displayName: "alamsaksa"
}, {
    id: "sli",
    displayName: "alamsileesia"
}, {
    id: "ale",
    displayName: "aleuudi"
}, {
    id: "alt",
    displayName: "altai"
}, {
    id: "arq",
    displayName: "Alžeeria araabia"
}, {
    id: "ase",
    displayName: "Ameerika viipekeel"
}, {
    id: "en_us",
    displayName: "Ameerika inglise",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "Inari saami",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "anp",
    displayName: "angika"
}, {
    id: "njo",
    displayName: "ao"
}, {
    id: "an",
    displayName: "aragoni"
}, {
    id: "arc",
    displayName: "aramea"
}, {
    id: "aro",
    displayName: "araona"
}, {
    id: "arp",
    displayName: "arapaho"
}, {
    id: "arw",
    displayName: "aravaki"
}, {
    id: "rup",
    displayName: "aromuuni"
}, {
    id: "ast",
    displayName: "astuuria",
    nativeDisplayName: "asturianu"
}, {
    id: "cch",
    displayName: "atsami"
}, {
    id: "ace",
    displayName: "atšehi"
}, {
    id: "ach",
    displayName: "atšoli"
}, {
    id: "en_au",
    displayName: "Austraalia inglise",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "avaari"
}, {
    id: "awa",
    displayName: "avadhi"
}, {
    id: "ae",
    displayName: "avesta"
}, {
    id: "az",
    displayName: "aserbaidžaani",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "bfq",
    displayName: "badaga"
}, {
    id: "bfd",
    displayName: "bafuti"
}, {
    id: "ms",
    displayName: "malai",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bqi",
    displayName: "bahtiari"
}, {
    id: "bar",
    displayName: "baieri"
}, {
    id: "ban",
    displayName: "bali"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bax",
    displayName: "bamuni"
}, {
    id: "bjn",
    displayName: "bandžari"
}, {
    id: "bbc",
    displayName: "bataki"
}, {
    id: "ba",
    displayName: "baškiiri"
}, {
    id: "bej",
    displayName: "bedža"
}, {
    id: "pau",
    displayName: "belau"
}, {
    id: "bal",
    displayName: "belutši"
}, {
    id: "bew",
    displayName: "betavi"
}, {
    id: "bho",
    displayName: "bhodžpuri"
}, {
    id: "bik",
    displayName: "bikoli"
}, {
    id: "byn",
    displayName: "bilini"
}, {
    id: "bi",
    displayName: "bislama"
}, {
    id: "bpy",
    displayName: "bišnuprija"
}, {
    id: "zbl",
    displayName: "Blissi sümbolid"
}, {
    id: "bs",
    displayName: "bosnia",
    nativeDisplayName: "bosanski"
}, {
    id: "bra",
    displayName: "bradži"
}, {
    id: "brh",
    displayName: "brahui"
}, {
    id: "br",
    displayName: "bretooni",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "Briti inglise",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "bugi"
}, {
    id: "bum",
    displayName: "bulu"
}, {
    id: "bua",
    displayName: "burjaadi"
}, {
    id: "frc",
    displayName: "cajun’i"
}, {
    id: "en_ca",
    displayName: "Kanada inglise",
    nativeDisplayName: "Canadian English"
}, {
    id: "ca",
    displayName: "katalaani",
    nativeDisplayName: "català"
}, {
    id: "kde",
    displayName: "makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "sn",
    displayName: "šona",
    nativeDisplayName: "chiShona"
}, {
    id: "cy",
    displayName: "kõmri",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "taani",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "dargi"
}, {
    id: "se",
    displayName: "põhjasaami",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "dzg",
    displayName: "daza"
}, {
    id: "del",
    displayName: "delavari"
}, {
    id: "de",
    displayName: "saksa",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "dinka"
}, {
    id: "dyu",
    displayName: "djula"
}, {
    id: "doi",
    displayName: "dogri"
}, {
    id: "dgr",
    displayName: "dogribi"
}, {
    id: "dsb",
    displayName: "alamsorbi",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "bin",
    displayName: "edo"
}, {
    id: "elx",
    displayName: "eelami"
}, {
    id: "et",
    displayName: "eesti",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efiki"
}, {
    id: "egy",
    displayName: "egiptuse"
}, {
    id: "arz",
    displayName: "Egiptuse araabia"
}, {
    id: "eka",
    displayName: "ekadžuki"
}, {
    id: "guz",
    displayName: "gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "egl",
    displayName: "emiilia"
}, {
    id: "en",
    displayName: "inglise",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "ersa"
}, {
    id: "es",
    displayName: "hispaania",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "Euroopa hispaania",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "Mehhiko hispaania",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "Ladina-Ameerika hispaania",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "ext",
    displayName: "estremenju"
}, {
    id: "gez",
    displayName: "etioopia"
}, {
    id: "eu",
    displayName: "baski",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "evondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ee",
    displayName: "eve",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "fangi"
}, {
    id: "fat",
    displayName: "fanti"
}, {
    id: "gur",
    displayName: "farefare"
}, {
    id: "fj",
    displayName: "fidži"
}, {
    id: "hif",
    displayName: "Fidži hindi"
}, {
    id: "fil",
    displayName: "filipiini",
    nativeDisplayName: "Filipino"
}, {
    id: "phn",
    displayName: "foiniikia"
}, {
    id: "fon",
    displayName: "foni"
}, {
    id: "frp",
    displayName: "frankoprovansi"
}, {
    id: "fr",
    displayName: "prantsuse",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "Kanada prantsuse",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "Šveitsi prantsuse",
    nativeDisplayName: "français suisse"
}, {
    id: "fur",
    displayName: "friuuli",
    nativeDisplayName: "furlan"
}, {
    id: "fo",
    displayName: "fääri",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "gaa"
}, {
    id: "ga",
    displayName: "iiri",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "mänksi",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "gagauusi"
}, {
    id: "gay",
    displayName: "gajo"
}, {
    id: "gl",
    displayName: "galeegi",
    nativeDisplayName: "galego"
}, {
    id: "gba",
    displayName: "gbaja"
}, {
    id: "aln",
    displayName: "geegi"
}, {
    id: "bbj",
    displayName: "ghomala"
}, {
    id: "ki",
    displayName: "kikuju",
    nativeDisplayName: "Gikuyu"
}, {
    id: "glk",
    displayName: "gilaki"
}, {
    id: "gon",
    displayName: "gondi"
}, {
    id: "got",
    displayName: "gooti"
}, {
    id: "gor",
    displayName: "gorontalo"
}, {
    id: "grb",
    displayName: "grebo"
}, {
    id: "gn",
    displayName: "guaranii"
}, {
    id: "gwi",
    displayName: "gvitšini"
}, {
    id: "gd",
    displayName: "gaeli",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "hai",
    displayName: "haida"
}, {
    id: "ht",
    displayName: "haiti"
}, {
    id: "ha",
    displayName: "hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "hz",
    displayName: "herero"
}, {
    id: "hit",
    displayName: "heti"
}, {
    id: "bez",
    displayName: "bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hil",
    displayName: "hiligainoni"
}, {
    id: "ho",
    displayName: "hirimotu"
}, {
    id: "hmn",
    displayName: "hmongi"
}, {
    id: "nds_nl",
    displayName: "Hollandi alamsaksa"
}, {
    id: "hsb",
    displayName: "ülemsorbi",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "horvaadi",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "hupa"
}, {
    id: "iba",
    displayName: "ibani"
}, {
    id: "ibb",
    displayName: "ibibio"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "frs",
    displayName: "idafriisi"
}, {
    id: "io",
    displayName: "ido"
}, {
    id: "ig",
    displayName: "ibo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "iloko"
}, {
    id: "id",
    displayName: "indoneesia",
    nativeDisplayName: "Indonesia"
}, {
    id: "inh",
    displayName: "inguši"
}, {
    id: "ik",
    displayName: "injupiaki"
}, {
    id: "ia",
    displayName: "interlingua"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "iu",
    displayName: "inuktituti"
}, {
    id: "sbp",
    displayName: "sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "põhjandebele",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "suulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "izh",
    displayName: "isuri"
}, {
    id: "it",
    displayName: "itaalia",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "jaava"
}, {
    id: "jam",
    displayName: "Jamaica kreoolkeel"
}, {
    id: "yao",
    displayName: "jao"
}, {
    id: "yap",
    displayName: "japi"
}, {
    id: "ybb",
    displayName: "jemba"
}, {
    id: "kaj",
    displayName: "jju"
}, {
    id: "dyo",
    displayName: "fonji",
    nativeDisplayName: "joola"
}, {
    id: "jrb",
    displayName: "juudiaraabia"
}, {
    id: "jpr",
    displayName: "juudipärsia"
}, {
    id: "jut",
    displayName: "jüüti"
}, {
    id: "kaw",
    displayName: "kaavi"
}, {
    id: "kbd",
    displayName: "kabardi-tšerkessi"
}, {
    id: "kea",
    displayName: "kabuverdianu",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "cad",
    displayName: "kado"
}, {
    id: "kgp",
    displayName: "kaingangi"
}, {
    id: "cay",
    displayName: "kajuka"
}, {
    id: "kkj",
    displayName: "kako",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "grööni",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kalendžini",
    nativeDisplayName: "Kalenjin"
}, {
    id: "xal",
    displayName: "kalmõki"
}, {
    id: "kbl",
    displayName: "kanembu"
}, {
    id: "gan",
    displayName: "kani"
}, {
    id: "kr",
    displayName: "kanuri"
}, {
    id: "cps",
    displayName: "kapisnoni"
}, {
    id: "kaa",
    displayName: "karakalpaki"
}, {
    id: "krc",
    displayName: "karatšai-balkaari"
}, {
    id: "car",
    displayName: "kariibi"
}, {
    id: "krl",
    displayName: "karjala"
}, {
    id: "kac",
    displayName: "katšini"
}, {
    id: "csb",
    displayName: "kašuubi"
}, {
    id: "kw",
    displayName: "korni",
    nativeDisplayName: "kernewek"
}, {
    id: "dtp",
    displayName: "keskdusuni"
}, {
    id: "dum",
    displayName: "keskhollandi"
}, {
    id: "mga",
    displayName: "keskiiri"
}, {
    id: "enm",
    displayName: "keskinglise"
}, {
    id: "esu",
    displayName: "keskjupiki"
}, {
    id: "frm",
    displayName: "keskprantsuse"
}, {
    id: "gmh",
    displayName: "keskülemsaksa"
}, {
    id: "kha",
    displayName: "khasi"
}, {
    id: "naq",
    displayName: "nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "khw",
    displayName: "khovari"
}, {
    id: "rof",
    displayName: "rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "matšame",
    nativeDisplayName: "Kimachame"
}, {
    id: "krj",
    displayName: "kinaraia"
}, {
    id: "rw",
    displayName: "ruanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asu",
    nativeDisplayName: "Kipare"
}, {
    id: "gil",
    displayName: "kiribati"
}, {
    id: "rwk",
    displayName: "rvaa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "šambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "suahiili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "Kongo suahiili",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "davida",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "quc",
    displayName: "kitše"
}, {
    id: "lzh",
    displayName: "klassikaline hiina"
}, {
    id: "tlh",
    displayName: "klingoni"
}, {
    id: "sms",
    displayName: "koltasaami"
}, {
    id: "kv",
    displayName: "komi"
}, {
    id: "bkm",
    displayName: "komi (Aafrika)"
}, {
    id: "swb",
    displayName: "komoori"
}, {
    id: "kg",
    displayName: "kongo"
}, {
    id: "xh",
    displayName: "koosa"
}, {
    id: "cop",
    displayName: "kopti"
}, {
    id: "kfo",
    displayName: "koro"
}, {
    id: "co",
    displayName: "korsika"
}, {
    id: "kos",
    displayName: "kosrae"
}, {
    id: "khq",
    displayName: "koyra chiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "koyraboro senni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "kpe",
    displayName: "kpelle"
}, {
    id: "mfe",
    displayName: "Mauritiuse kreoolkeel",
    nativeDisplayName: "kreol morisien"
}, {
    id: "cr",
    displayName: "krii"
}, {
    id: "crh",
    displayName: "krimmitatari"
}, {
    id: "kri",
    displayName: "krio"
}, {
    id: "kum",
    displayName: "kumõki"
}, {
    id: "ku",
    displayName: "kurdi"
}, {
    id: "kru",
    displayName: "kuruhhi"
}, {
    id: "kut",
    displayName: "kutenai"
}, {
    id: "kj",
    displayName: "kvanjama"
}, {
    id: "nmg",
    displayName: "kwasio",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "vundžo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "kiu",
    displayName: "kõrmandžki"
}, {
    id: "ksh",
    displayName: "kölni",
    nativeDisplayName: "Kölsch"
}, {
    id: "ebu",
    displayName: "embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "lad",
    displayName: "ladiino"
}, {
    id: "la",
    displayName: "ladina"
}, {
    id: "lah",
    displayName: "lahnda"
}, {
    id: "lkt",
    displayName: "lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lam",
    displayName: "lamba"
}, {
    id: "ltg",
    displayName: "latgali"
}, {
    id: "lv",
    displayName: "läti",
    nativeDisplayName: "latviešu"
}, {
    id: "lzz",
    displayName: "lazi"
}, {
    id: "to",
    displayName: "tonga",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lez",
    displayName: "lesgi"
}, {
    id: "lt",
    displayName: "leedu",
    nativeDisplayName: "lietuvių"
}, {
    id: "lij",
    displayName: "liguuri"
}, {
    id: "liv",
    displayName: "liivi"
}, {
    id: "li",
    displayName: "limburgi"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "lmo",
    displayName: "lombardi"
}, {
    id: "loz",
    displayName: "lozi"
}, {
    id: "jbo",
    displayName: "ložban"
}, {
    id: "lg",
    displayName: "ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "luisenjo"
}, {
    id: "smj",
    displayName: "Lule saami"
}, {
    id: "lua",
    displayName: "lulua"
}, {
    id: "luy",
    displayName: "luhja",
    nativeDisplayName: "Luluhia"
}, {
    id: "lun",
    displayName: "lunda"
}, {
    id: "lus",
    displayName: "lušei"
}, {
    id: "bgn",
    displayName: "läänebelutši"
}, {
    id: "vls",
    displayName: "lääneflaami"
}, {
    id: "lb",
    displayName: "letseburgi",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "sdh",
    displayName: "lõunakurdi"
}, {
    id: "nan",
    displayName: "lõunamini"
}, {
    id: "nr",
    displayName: "lõunandebele"
}, {
    id: "sma",
    displayName: "lõunasaami"
}, {
    id: "st",
    displayName: "lõunasotho"
}, {
    id: "ttt",
    displayName: "lõunataadi"
}, {
    id: "mas",
    displayName: "masai",
    nativeDisplayName: "Maa"
}, {
    id: "mde",
    displayName: "maba"
}, {
    id: "mad",
    displayName: "madura"
}, {
    id: "maf",
    displayName: "mafa"
}, {
    id: "mag",
    displayName: "magahi"
}, {
    id: "hu",
    displayName: "ungari",
    nativeDisplayName: "magyar"
}, {
    id: "vmf",
    displayName: "Maini frangi"
}, {
    id: "mai",
    displayName: "maithili"
}, {
    id: "mak",
    displayName: "makassari"
}, {
    id: "mgh",
    displayName: "makhuwa-meetto",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "malagassi",
    nativeDisplayName: "Malagasy"
}, {
    id: "dv",
    displayName: "maldiivi"
}, {
    id: "man",
    displayName: "malinke"
}, {
    id: "mt",
    displayName: "malta",
    nativeDisplayName: "Malti"
}, {
    id: "mdr",
    displayName: "mandari"
}, {
    id: "mnc",
    displayName: "mandžu"
}, {
    id: "mni",
    displayName: "manipuri"
}, {
    id: "mi",
    displayName: "maoori"
}, {
    id: "arn",
    displayName: "mapudunguni"
}, {
    id: "chm",
    displayName: "mari"
}, {
    id: "ary",
    displayName: "Maroko araabia"
}, {
    id: "mwr",
    displayName: "marvari"
}, {
    id: "mh",
    displayName: "maršalli"
}, {
    id: "mus",
    displayName: "maskogi"
}, {
    id: "kmb",
    displayName: "mbundu"
}, {
    id: "byv",
    displayName: "medumba"
}, {
    id: "xmf",
    displayName: "megreli"
}, {
    id: "men",
    displayName: "mende"
}, {
    id: "pdt",
    displayName: "mennoniidisaksa"
}, {
    id: "mwv",
    displayName: "mentavei"
}, {
    id: "mgo",
    displayName: "meta",
    nativeDisplayName: "metaʼ"
}, {
    id: "fit",
    displayName: "meä"
}, {
    id: "mic",
    displayName: "mikmaki"
}, {
    id: "min",
    displayName: "minangkabau"
}, {
    id: "mwl",
    displayName: "miranda"
}, {
    id: "zxx",
    displayName: "mittekeeleline"
}, {
    id: "mul",
    displayName: "mitu keelt"
}, {
    id: "mye",
    displayName: "mjene"
}, {
    id: "moh",
    displayName: "mohoogi"
}, {
    id: "mdf",
    displayName: "mokša"
}, {
    id: "ro_md",
    displayName: "moldova",
    nativeDisplayName: "moldovenească"
}, {
    id: "lol",
    displayName: "mongo"
}, {
    id: "mos",
    displayName: "more"
}, {
    id: "mua",
    displayName: "mundangi",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "bla",
    displayName: "mustjalaindiaani"
}, {
    id: "rom",
    displayName: "mustlaskeel"
}, {
    id: "mrj",
    displayName: "mäemari"
}, {
    id: "und",
    displayName: "määramata keel"
}, {
    id: "nap",
    displayName: "napoli"
}, {
    id: "na",
    displayName: "nauru"
}, {
    id: "nv",
    displayName: "navaho"
}, {
    id: "jgo",
    displayName: "ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "ng",
    displayName: "ndonga"
}, {
    id: "nl",
    displayName: "hollandi",
    nativeDisplayName: "Nederlands"
}, {
    id: "new",
    displayName: "nevari"
}, {
    id: "sba",
    displayName: "ngambai"
}, {
    id: "nia",
    displayName: "niasi"
}, {
    id: "niu",
    displayName: "niue"
}, {
    id: "nym",
    displayName: "njamvesi"
}, {
    id: "ny",
    displayName: "njandža"
}, {
    id: "yrl",
    displayName: "njengatu"
}, {
    id: "nyo",
    displayName: "njoro"
}, {
    id: "nqo",
    displayName: "nkoo"
}, {
    id: "nog",
    displayName: "nogai"
}, {
    id: "no",
    displayName: "norra"
}, {
    id: "nb",
    displayName: "norra bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "nov",
    displayName: "noviaal"
}, {
    id: "yav",
    displayName: "yangbeni",
    nativeDisplayName: "nuasue"
}, {
    id: "nn",
    displayName: "uusnorra",
    nativeDisplayName: "nynorsk"
}, {
    id: "nzi",
    displayName: "nzima"
}, {
    id: "oj",
    displayName: "odžibvei"
}, {
    id: "xog",
    displayName: "soga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "oseidži"
}, {
    id: "ota",
    displayName: "osmanitürgi"
}, {
    id: "uz",
    displayName: "usbeki",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pi",
    displayName: "paali"
}, {
    id: "pal",
    displayName: "pahlavi"
}, {
    id: "pam",
    displayName: "pampanga"
}, {
    id: "pag",
    displayName: "pangasinani"
}, {
    id: "pap",
    displayName: "papiamento"
}, {
    id: "nso",
    displayName: "pedi"
}, {
    id: "pdc",
    displayName: "Pennsylvania saksa"
}, {
    id: "koi",
    displayName: "permikomi"
}, {
    id: "pfl",
    displayName: "Pfalzi"
}, {
    id: "pms",
    displayName: "piemonte"
}, {
    id: "pcd",
    displayName: "pikardi"
}, {
    id: "pl",
    displayName: "poola",
    nativeDisplayName: "polski"
}, {
    id: "pnt",
    displayName: "pontose"
}, {
    id: "pon",
    displayName: "poonpei"
}, {
    id: "pt",
    displayName: "portugali",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "Brasiilia portugali",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "Euroopa portugali",
    nativeDisplayName: "português europeu"
}, {
    id: "oc",
    displayName: "provansi"
}, {
    id: "prg",
    displayName: "preisi",
    nativeDisplayName: "prūsiskan"
}, {
    id: "ff",
    displayName: "fula",
    nativeDisplayName: "Pulaar"
}, {
    id: "frr",
    displayName: "põhjafriisi"
}, {
    id: "raj",
    displayName: "radžastani"
}, {
    id: "rap",
    displayName: "rapanui"
}, {
    id: "rar",
    displayName: "rarotonga"
}, {
    id: "rif",
    displayName: "riifi"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "rgn",
    displayName: "romanja"
}, {
    id: "ro",
    displayName: "rumeenia",
    nativeDisplayName: "română"
}, {
    id: "root",
    displayName: "root"
}, {
    id: "rtm",
    displayName: "rotuma"
}, {
    id: "rug",
    displayName: "roviana"
}, {
    id: "cgg",
    displayName: "tšiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "romanši",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "ketšua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nkole",
    nativeDisplayName: "Runyankore"
}, {
    id: "rue",
    displayName: "russiini"
}, {
    id: "ssy",
    displayName: "saho"
}, {
    id: "kho",
    displayName: "saka"
}, {
    id: "sam",
    displayName: "Samaaria aramea"
}, {
    id: "sm",
    displayName: "samoa"
}, {
    id: "sad",
    displayName: "sandave"
}, {
    id: "sa",
    displayName: "sanskriti"
}, {
    id: "sat",
    displayName: "santali"
}, {
    id: "zap",
    displayName: "sapoteegi"
}, {
    id: "sc",
    displayName: "sardi"
}, {
    id: "sas",
    displayName: "sasaki"
}, {
    id: "stq",
    displayName: "saterfriisi"
}, {
    id: "saz",
    displayName: "sauraštra"
}, {
    id: "de_ch",
    displayName: "Šveitsi ülemsaksa",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "šveitsisaksa",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "ceb",
    displayName: "sebu"
}, {
    id: "sly",
    displayName: "selajari"
}, {
    id: "seh",
    displayName: "sena",
    nativeDisplayName: "sena"
}, {
    id: "see",
    displayName: "seneka"
}, {
    id: "sh",
    displayName: "serbia-horvaadi"
}, {
    id: "srr",
    displayName: "sereri"
}, {
    id: "sei",
    displayName: "seri"
}, {
    id: "sq",
    displayName: "albaania",
    nativeDisplayName: "shqip"
}, {
    id: "nnh",
    displayName: "ngiembooni",
    nativeDisplayName: "Shwóŋò ngiembɔɔn"
}, {
    id: "sid",
    displayName: "sidamo"
}, {
    id: "szl",
    displayName: "sileesia"
}, {
    id: "sd",
    displayName: "sindhi"
}, {
    id: "scn",
    displayName: "sitsiilia"
}, {
    id: "dak",
    displayName: "siuu"
}, {
    id: "hsn",
    displayName: "sjangi"
}, {
    id: "den",
    displayName: "sleivi"
}, {
    id: "sk",
    displayName: "slovaki",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "sloveeni",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "sogdi"
}, {
    id: "snk",
    displayName: "soninke"
}, {
    id: "so",
    displayName: "somaali",
    nativeDisplayName: "Soomaali"
}, {
    id: "srn",
    displayName: "sranani"
}, {
    id: "suk",
    displayName: "sukuma"
}, {
    id: "sux",
    displayName: "sumeri"
}, {
    id: "su",
    displayName: "sunda"
}, {
    id: "zun",
    displayName: "sunji"
}, {
    id: "fi",
    displayName: "soome",
    nativeDisplayName: "suomi"
}, {
    id: "sus",
    displayName: "susu"
}, {
    id: "ss",
    displayName: "svaasi"
}, {
    id: "sv",
    displayName: "rootsi",
    nativeDisplayName: "svenska"
}, {
    id: "sg",
    displayName: "sango",
    nativeDisplayName: "Sängö"
}, {
    id: "sel",
    displayName: "sölkupi"
}, {
    id: "syr",
    displayName: "süüria"
}, {
    id: "tg",
    displayName: "tadžiki"
}, {
    id: "tl",
    displayName: "tagalogi"
}, {
    id: "ty",
    displayName: "tahiti"
}, {
    id: "tly",
    displayName: "talõši"
}, {
    id: "tzm",
    displayName: "tamasikti",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "tmh",
    displayName: "tamašeki"
}, {
    id: "kab",
    displayName: "kabiili",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "trv",
    displayName: "taroko"
}, {
    id: "twq",
    displayName: "taswaqi",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "tatari"
}, {
    id: "tem",
    displayName: "temne"
}, {
    id: "ter",
    displayName: "tereno"
}, {
    id: "tet",
    displayName: "tetumi"
}, {
    id: "nus",
    displayName: "nueri",
    nativeDisplayName: "Thok Nath"
}, {
    id: "tig",
    displayName: "tigree"
}, {
    id: "tiv",
    displayName: "tivi"
}, {
    id: "vi",
    displayName: "vietnami",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "kcg",
    displayName: "tjapi"
}, {
    id: "tli",
    displayName: "tlingiti"
}, {
    id: "tkl",
    displayName: "tokelau"
}, {
    id: "tkr",
    displayName: "tsahhi"
}, {
    id: "tsd",
    displayName: "tsakoonia"
}, {
    id: "lu",
    displayName: "luba",
    nativeDisplayName: "Tshiluba"
}, {
    id: "ts",
    displayName: "tsonga"
}, {
    id: "tn",
    displayName: "tsvana"
}, {
    id: "tcy",
    displayName: "tulu"
}, {
    id: "tum",
    displayName: "tumbuka"
}, {
    id: "aeb",
    displayName: "Tuneesia araabia"
}, {
    id: "tru",
    displayName: "turojo"
}, {
    id: "tvl",
    displayName: "tuvalu"
}, {
    id: "tw",
    displayName: "tvii"
}, {
    id: "tyv",
    displayName: "tõva"
}, {
    id: "tk",
    displayName: "türkmeeni",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "türgi",
    nativeDisplayName: "Türkçe"
}, {
    id: "shu",
    displayName: "Tšaadi araabia"
}, {
    id: "chg",
    displayName: "tšagatai"
}, {
    id: "ch",
    displayName: "tšamorro"
}, {
    id: "chb",
    displayName: "tšibtša"
}, {
    id: "tsi",
    displayName: "tšimši"
}, {
    id: "chn",
    displayName: "tšinuki žargoon"
}, {
    id: "chp",
    displayName: "tšipevai"
}, {
    id: "tog",
    displayName: "tšitonga"
}, {
    id: "cho",
    displayName: "tšokto"
}, {
    id: "za",
    displayName: "tšuangi"
}, {
    id: "chk",
    displayName: "tšuugi"
}, {
    id: "cv",
    displayName: "tšuvaši"
}, {
    id: "udm",
    displayName: "udmurdi"
}, {
    id: "uga",
    displayName: "ugariti"
}, {
    id: "umb",
    displayName: "umbundu"
}, {
    id: "wuu",
    displayName: "uu"
}, {
    id: "tpi",
    displayName: "uusmelaneesia"
}, {
    id: "vot",
    displayName: "vadja"
}, {
    id: "guc",
    displayName: "vajuu"
}, {
    id: "wa",
    displayName: "vallooni"
}, {
    id: "sga",
    displayName: "vanaiiri"
}, {
    id: "ang",
    displayName: "vanainglise"
}, {
    id: "grc",
    displayName: "vanakreeka"
}, {
    id: "nwc",
    displayName: "vananevari"
}, {
    id: "fro",
    displayName: "vanaprantsuse"
}, {
    id: "pro",
    displayName: "vanaprovansi"
}, {
    id: "peo",
    displayName: "vanapärsia"
}, {
    id: "non",
    displayName: "vanapõhjala"
}, {
    id: "syc",
    displayName: "vanasüüria"
}, {
    id: "goh",
    displayName: "vanaülemsaksa"
}, {
    id: "war",
    displayName: "varai"
}, {
    id: "wbp",
    displayName: "varlpiri"
}, {
    id: "was",
    displayName: "vašo"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "vec",
    displayName: "veneti"
}, {
    id: "vep",
    displayName: "vepsa"
}, {
    id: "nl_be",
    displayName: "flaami",
    nativeDisplayName: "Vlaams"
}, {
    id: "wal",
    displayName: "volaita"
}, {
    id: "vo",
    displayName: "volapüki",
    nativeDisplayName: "Volapük"
}, {
    id: "wo",
    displayName: "volofi"
}, {
    id: "vro",
    displayName: "võru"
}, {
    id: "wae",
    displayName: "walseri",
    nativeDisplayName: "Walser"
}, {
    id: "fy",
    displayName: "läänefriisi",
    nativeDisplayName: "West-Frysk"
}, {
    id: "dje",
    displayName: "zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "zaza"
}, {
    id: "zea",
    displayName: "zeelandi"
}, {
    id: "zen",
    displayName: "zenaga"
}, {
    id: "yo",
    displayName: "joruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islandi",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "Austria saksa",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "tšehhi",
    nativeDisplayName: "čeština"
}, {
    id: "chy",
    displayName: "šaieeni"
}, {
    id: "shn",
    displayName: "šani"
}, {
    id: "sco",
    displayName: "šoti"
}, {
    id: "sgs",
    displayName: "žemaidi"
}, {
    id: "bas",
    displayName: "basa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "havai",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "kreeka",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "valgevene",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bulgaaria",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "osseedi",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "kirgiisi",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "makedoonia",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongoli",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "tšetšeeni",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "vene",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "jakuudi",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "serbia",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ukraina",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "kirikuslaavi",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "kasahhi",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armeenia",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "jidiši",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "heebrea",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uiguuri",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "araabia",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "araabia (tänapäevane)",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "pärsia",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "põhjaluri",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "mazandaraani",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "puštu",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "sorani",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "kašmiiri",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepali",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "assami",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengali",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "pandžabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gudžarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "oria",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamili",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malajalami",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "singali",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "tai",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "lao",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tiibeti",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "birma",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "gruusia",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrinja",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amhari",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "khmeeri",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "tamasikti (Maroko)",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "šilha",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "hiina",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "jaapani",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "hiina (lihtsustatud)",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "kantoni",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "hiina (traditsiooniline)",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "Sichuani jii",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "tšerokii",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "korea",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Hluw",
    displayName: "Anatoolia hieroglüüfkiri"
}, {
    id: "Blis",
    displayName: "Blissi sümbolid"
}, {
    id: "Cirt",
    displayName: "Cirthi"
}, {
    id: "Dupl",
    displayName: "Duployé kiirkiri"
}, {
    id: "Elba",
    displayName: "Elbasani"
}, {
    id: "Hatr",
    displayName: "Hatra"
}, {
    id: "Inds",
    displayName: "Induse"
}, {
    id: "Cans",
    displayName: "Kanada põlisrahvaste ühtlustatud silpkiri"
}, {
    id: "Cprt",
    displayName: "Küprose silpkiri"
}, {
    id: "Sarb",
    displayName: "Lõuna-Araabia"
}, {
    id: "Moon",
    displayName: "Mooni"
}, {
    id: "Mult",
    displayName: "Multani"
}, {
    id: "Nbat",
    displayName: "Nabatea"
}, {
    id: "Orkh",
    displayName: "Orhoni"
}, {
    id: "Palm",
    displayName: "Palmyra"
}, {
    id: "Plrd",
    displayName: "Pollardi miao"
}, {
    id: "Narb",
    displayName: "Põhja-Araabia"
}, {
    id: "Samr",
    displayName: "Samaaria"
}, {
    id: "Shaw",
    displayName: "Shaw’ kiri"
}, {
    id: "Teng",
    displayName: "Tengwari"
}, {
    id: "Afak",
    displayName: "afaka"
}, {
    id: "Ahom",
    displayName: "ahomi"
}, {
    id: "Aghb",
    displayName: "albaani"
}, {
    id: "Arab",
    displayName: "araabia"
}, {
    id: "Armn",
    displayName: "armeenia"
}, {
    id: "Avst",
    displayName: "avesta"
}, {
    id: "Bali",
    displayName: "bali"
}, {
    id: "Bamu",
    displayName: "bamumi"
}, {
    id: "Bass",
    displayName: "bassa"
}, {
    id: "Batk",
    displayName: "bataki"
}, {
    id: "Beng",
    displayName: "bengali"
}, {
    id: "Mymr",
    displayName: "birma"
}, {
    id: "Bopo",
    displayName: "bopomofo"
}, {
    id: "Brah",
    displayName: "braahmi"
}, {
    id: "Bugi",
    displayName: "bugi"
}, {
    id: "Buhd",
    displayName: "buhidi"
}, {
    id: "Dsrt",
    displayName: "desereti"
}, {
    id: "Deva",
    displayName: "devanaagari"
}, {
    id: "Egyd",
    displayName: "egiptuse demootiline"
}, {
    id: "Egyh",
    displayName: "egiptuse hieraatiline"
}, {
    id: "Egyp",
    displayName: "egiptuse hieroglüüfkiri"
}, {
    id: "Ethi",
    displayName: "etioopia"
}, {
    id: "Phnx",
    displayName: "foiniikia"
}, {
    id: "Glag",
    displayName: "glagoolitsa"
}, {
    id: "Goth",
    displayName: "gooti"
}, {
    id: "Gran",
    displayName: "grantha"
}, {
    id: "Geor",
    displayName: "gruusia"
}, {
    id: "Gujr",
    displayName: "gudžarati"
}, {
    id: "Guru",
    displayName: "gurmukhi"
}, {
    id: "Hani",
    displayName: "hani"
}, {
    id: "Hano",
    displayName: "hanunoo"
}, {
    id: "Hebr",
    displayName: "heebrea"
}, {
    id: "Hans",
    displayName: "hiina lihtsustatud"
}, {
    id: "Hant",
    displayName: "hiina traditsiooniline"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Khoj",
    displayName: "hodžki"
}, {
    id: "Wara",
    displayName: "hoo"
}, {
    id: "Sind",
    displayName: "hudavadi"
}, {
    id: "Geok",
    displayName: "hutsuri"
}, {
    id: "Syrn",
    displayName: "idasüüria"
}, {
    id: "Jpan",
    displayName: "jaapani"
}, {
    id: "Hrkt",
    displayName: "jaapani silpkirjad"
}, {
    id: "Java",
    displayName: "jaava"
}, {
    id: "Yiii",
    displayName: "jii"
}, {
    id: "Cari",
    displayName: "kaaria"
}, {
    id: "Kthi",
    displayName: "kaithi"
}, {
    id: "Kali",
    displayName: "kaja-lii"
}, {
    id: "Knda",
    displayName: "kannada"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Khar",
    displayName: "kharoshthi"
}, {
    id: "Khmr",
    displayName: "khmeeri"
}, {
    id: "Cyrl",
    displayName: "kirillitsa"
}, {
    id: "Zxxx",
    displayName: "kirjakeeleta"
}, {
    id: "Copt",
    displayName: "kopti"
}, {
    id: "Hang",
    displayName: "korea"
}, {
    id: "Kore",
    displayName: "korea segakiri"
}, {
    id: "Kpel",
    displayName: "kpelle"
}, {
    id: "Grek",
    displayName: "kreeka"
}, {
    id: "Cyrs",
    displayName: "kürilliline kirikuslaavi"
}, {
    id: "Latn",
    displayName: "ladina"
}, {
    id: "Latf",
    displayName: "ladina fraktuurkiri"
}, {
    id: "Latg",
    displayName: "ladina gaeli"
}, {
    id: "Laoo",
    displayName: "lao"
}, {
    id: "Lepc",
    displayName: "leptša"
}, {
    id: "Limb",
    displayName: "limbu"
}, {
    id: "Lina",
    displayName: "lineaarkiri A"
}, {
    id: "Linb",
    displayName: "lineaarkiri B"
}, {
    id: "Lisu",
    displayName: "lisu"
}, {
    id: "Loma",
    displayName: "loma"
}, {
    id: "Syrj",
    displayName: "läänesüüria"
}, {
    id: "Lydi",
    displayName: "lüüdia"
}, {
    id: "Lyci",
    displayName: "lüükia"
}, {
    id: "Maya",
    displayName: "maaja hieroglüüfkiri"
}, {
    id: "Mahj",
    displayName: "mahaadžani"
}, {
    id: "Mlym",
    displayName: "malajalami"
}, {
    id: "Mand",
    displayName: "mandea"
}, {
    id: "Mani",
    displayName: "mani"
}, {
    id: "Zmth",
    displayName: "matemaatiline tähistus"
}, {
    id: "Mtei",
    displayName: "meitei"
}, {
    id: "Mend",
    displayName: "mende"
}, {
    id: "Mero",
    displayName: "meroe"
}, {
    id: "Merc",
    displayName: "meroe kursiivkiri"
}, {
    id: "Modi",
    displayName: "modi"
}, {
    id: "Mong",
    displayName: "mongoli"
}, {
    id: "Mroo",
    displayName: "mruu"
}, {
    id: "Zzzz",
    displayName: "määramata kiri"
}, {
    id: "Nkgb",
    displayName: "nasi"
}, {
    id: "Nkoo",
    displayName: "nkoo"
}, {
    id: "Visp",
    displayName: "nähtava kõne"
}, {
    id: "Nshu",
    displayName: "nüšu"
}, {
    id: "Ogam",
    displayName: "ogam"
}, {
    id: "Orya",
    displayName: "oria"
}, {
    id: "Osma",
    displayName: "osmani"
}, {
    id: "Phlp",
    displayName: "pahlavi psalmikiri"
}, {
    id: "Phlv",
    displayName: "pahlavi raamatukiri"
}, {
    id: "Phli",
    displayName: "pahlavi raidkiri"
}, {
    id: "Prti",
    displayName: "partia raidkiri"
}, {
    id: "Hmng",
    displayName: "phahau-hmongi kiri"
}, {
    id: "Phag",
    displayName: "phakpa"
}, {
    id: "Brai",
    displayName: "punktkiri"
}, {
    id: "Zinh",
    displayName: "päritud"
}, {
    id: "Rjng",
    displayName: "redžangi"
}, {
    id: "Roro",
    displayName: "rongorongo"
}, {
    id: "Runr",
    displayName: "ruunikiri"
}, {
    id: "Olck",
    displayName: "santali"
}, {
    id: "Sara",
    displayName: "sarati"
}, {
    id: "Saur",
    displayName: "sauraštra"
}, {
    id: "Sidd",
    displayName: "siddhami"
}, {
    id: "Sylo",
    displayName: "siloti"
}, {
    id: "Sinh",
    displayName: "singali"
}, {
    id: "Sora",
    displayName: "sora"
}, {
    id: "Xsux",
    displayName: "sumeri-akadi kiilkiri"
}, {
    id: "Sund",
    displayName: "sunda"
}, {
    id: "Zsym",
    displayName: "sümbolid"
}, {
    id: "Syrc",
    displayName: "süüria"
}, {
    id: "Syre",
    displayName: "süüria estrangelo"
}, {
    id: "Takr",
    displayName: "taakri"
}, {
    id: "Thaa",
    displayName: "taana"
}, {
    id: "Tglg",
    displayName: "tagalogi"
}, {
    id: "Tagb",
    displayName: "tagbanva"
}, {
    id: "Thai",
    displayName: "tai"
}, {
    id: "Tale",
    displayName: "tai-löö"
}, {
    id: "Lana",
    displayName: "tai-thami"
}, {
    id: "Tavt",
    displayName: "tai-vieti"
}, {
    id: "Taml",
    displayName: "tamili"
}, {
    id: "Tang",
    displayName: "tanguudi"
}, {
    id: "Telu",
    displayName: "telugu"
}, {
    id: "Tfng",
    displayName: "tifinagi"
}, {
    id: "Tibt",
    displayName: "tiibeti"
}, {
    id: "Tirh",
    displayName: "tirhuta"
}, {
    id: "Cakm",
    displayName: "tšaakma"
}, {
    id: "Cham",
    displayName: "tšaami"
}, {
    id: "Cher",
    displayName: "tšerokii"
}, {
    id: "Jurc",
    displayName: "tšurtšeni"
}, {
    id: "Ugar",
    displayName: "ugariti"
}, {
    id: "Talu",
    displayName: "uus tai-lõõ"
}, {
    id: "Vaii",
    displayName: "vai"
}, {
    id: "Armi",
    displayName: "vanaaramea"
}, {
    id: "Ital",
    displayName: "vanaitali"
}, {
    id: "Perm",
    displayName: "vanapermi"
}, {
    id: "Xpeo",
    displayName: "vanapärsia"
}, {
    id: "Hung",
    displayName: "vanaungari"
}, {
    id: "Sgnw",
    displayName: "viipekiri"
}, {
    id: "Wole",
    displayName: "voleai"
}, {
    id: "Zyyy",
    displayName: "üldine"
}, {
    id: "Shrd",
    displayName: "šaarada"
} ];

inter.currencies = [ {
    id: "AFN",
    displayName: "Afganistani afgaani",
    symbol: "AFN",
    one: "Afganistani afgaani",
    other: "Afganistani afgaanit"
}, {
    id: "AFA",
    displayName: "Afganistani afgaani (1927–2002)",
    one: "Afganistani afgaani (1927–2002)",
    other: "Afganistani afgaanit (1927–2002)"
}, {
    id: "ALL",
    displayName: "Albaania lekk",
    symbol: "ALL",
    one: "Albaania lekk",
    other: "Albaania lekki"
}, {
    id: "ALK",
    displayName: "Albaania lekk (1946–1965)",
    one: "Albaania lekk (1946–1965)",
    other: "Albaania lekki (1946–1965)"
}, {
    id: "DZD",
    displayName: "Alžeeria dinaar",
    symbol: "DZD",
    one: "Alžeeria dinaar",
    other: "Alžeeria dinaari"
}, {
    id: "ADP",
    displayName: "Andorra peseeta",
    one: "Andorra peseeta",
    other: "Andorra peseetat"
}, {
    id: "AOA",
    displayName: "Angola kvanza",
    symbol: "AOA",
    one: "Angola kvanza",
    other: "Angola kvanzat"
}, {
    id: "AOK",
    displayName: "Angola kvanza (1977–1990)",
    one: "Angola kvanza (1977–1990)",
    other: "Angola kvanzat (1977–1990)"
}, {
    id: "AON",
    displayName: "Angola kvanza (1990–2000)",
    one: "Angola kvanza (1990–2000)",
    other: "Angola kvanzat (1990–2000)"
}, {
    id: "AOR",
    displayName: "Angola reformitud kvanza, 1995–1999"
}, {
    id: "AED",
    displayName: "Araabia Ühendemiraatide dirhem",
    symbol: "AED",
    one: "Araabia Ühendemiraatide dirhem",
    other: "Araabia Ühendemiraatide dirhemit"
}, {
    id: "ARA",
    displayName: "Argentina austral"
}, {
    id: "ARS",
    displayName: "Argentina peeso",
    symbol: "ARS",
    one: "Argentina peeso",
    other: "Argentina peesot"
}, {
    id: "ARM",
    displayName: "Argentina peeso (1881–1970)",
    one: "Argentina peeso (1881–1970)",
    other: "Argentina peesot (1881–1970)"
}, {
    id: "ARP",
    displayName: "Argentina peeso (1983–1985)",
    one: "Argentina peeso (1983–1985)",
    other: "Argentina peesot (1983–1985)"
}, {
    id: "AMD",
    displayName: "Armeenia dramm",
    symbol: "AMD",
    one: "Armeenia dramm",
    other: "Armeenia drammi"
}, {
    id: "AWG",
    displayName: "Aruba kulden",
    symbol: "AWG",
    one: "Aruba kulden",
    other: "Aruba kuldnat"
}, {
    id: "AZN",
    displayName: "Aserbaidžaani manat",
    symbol: "AZN",
    one: "Aserbaidžaani manat",
    other: "Aserbaidžaani manatit"
}, {
    id: "AZM",
    displayName: "Aserbaidžaani manat (1993–2006)",
    one: "Aserbaidžaani manat (1993–2006)",
    other: "Aserbaidžaani manatit (1993–2006)"
}, {
    id: "AUD",
    displayName: "Austraalia dollar",
    symbol: "AU$",
    one: "Austraalia dollar",
    other: "Austraalia dollarit"
}, {
    id: "ATS",
    displayName: "Austria šilling",
    one: "Austria šilling",
    other: "Austria šillingit"
}, {
    id: "BSD",
    displayName: "Bahama dollar",
    symbol: "BSD",
    one: "Bahama dollar",
    other: "Bahama dollarit"
}, {
    id: "BHD",
    displayName: "Bahreini dinaar",
    symbol: "BHD",
    one: "Bahreini dinaar",
    other: "Bahreini dinaari"
}, {
    id: "BDT",
    displayName: "Bangladeshi taka",
    symbol: "BDT",
    one: "Bangladeshi taka",
    other: "Bangladeshi takat"
}, {
    id: "BBD",
    displayName: "Barbadose dollar",
    symbol: "BBD",
    one: "Barbadose dollar",
    other: "Barbadose dollarit"
}, {
    id: "BEL",
    displayName: "Belgia arveldusfrank"
}, {
    id: "BEF",
    displayName: "Belgia frank",
    one: "Belgia frank",
    other: "Belgia franki"
}, {
    id: "BEC",
    displayName: "Belgia konverteeritav frank",
    one: "Belgia konverteeritav frank",
    other: "Belgia konverteeritavat franki"
}, {
    id: "BZD",
    displayName: "Belize’i dollar",
    symbol: "BZD",
    one: "Belize’i dollar",
    other: "Belize’i dollarit"
}, {
    id: "BMD",
    displayName: "Bermuda dollar",
    symbol: "BMD",
    one: "Bermuda dollar",
    other: "Bermuda dollarit"
}, {
    id: "BTN",
    displayName: "Bhutani ngultrum",
    symbol: "BTN",
    one: "Bhutani ngultrum",
    other: "Bhutani ngultrumit"
}, {
    id: "BUK",
    displayName: "Birma kjatt",
    one: "Birma kjatt",
    other: "Birma kjatti"
}, {
    id: "BOB",
    displayName: "Boliivia boliviaano",
    symbol: "BOB",
    one: "Boliivia boliviaano",
    other: "Boliivia boliviaanot"
}, {
    id: "BOL",
    displayName: "Boliivia boliviaano (1863–1963)",
    one: "Boliivia boliviaano (1863–1963)",
    other: "Boliivia boliviaanot (1863–1963)"
}, {
    id: "BOP",
    displayName: "Boliivia peeso",
    one: "Boliivia peeso",
    other: "Boliivia peesot"
}, {
    id: "BAD",
    displayName: "Bosnia ja Hertsegoviina dinaar (1992–1994)",
    one: "Bosnia ja Hertsegoviina dinaar (1992–1994)",
    other: "Bosnia ja Hertsegoviina dinaari (1992–1994)"
}, {
    id: "BAM",
    displayName: "Bosnia ja Hertsegoviina konverteeritav mark",
    symbol: "BAM",
    one: "Bosnia ja Hertsegoviina konverteeritav mark",
    other: "Bosnia ja Hertsegoviina konverteeritavat marka"
}, {
    id: "BAN",
    displayName: "Bosnia ja Hertsegoviina uus dinaar (1994–1997)",
    one: "Bosnia ja Hertsegoviina uus dinaar (1994–1997)",
    other: "Bosnia ja Hertsegoviina uut dinaari (1994–1997)"
}, {
    id: "BWP",
    displayName: "Botswana pula",
    symbol: "BWP",
    one: "Botswana pula",
    other: "Botswana pulat"
}, {
    id: "BRC",
    displayName: "Brasiilia krusado"
}, {
    id: "BRZ",
    displayName: "Brasiilia kruseiro (1942–1967)",
    one: "Brasiilia kruseiro (1942–1967)",
    other: "Brasiilia kruseirot (1942–1967)"
}, {
    id: "BRE",
    displayName: "Brasiilia kruseiro (1990–1993)",
    one: "Brasiilia kruseiro (1990–1993)",
    other: "Brasiilia kruseirot (1990–1993)"
}, {
    id: "BRR",
    displayName: "Brasiilia kruseiro (1993–1994)",
    one: "Brasiilia kruseiro (1993–1994)",
    other: "Brasiilia kruseirot (1993–1994)"
}, {
    id: "BRL",
    displayName: "Brasiilia reaal",
    symbol: "R$",
    one: "Brasiilia reaal",
    other: "Brasiilia reaali"
}, {
    id: "BRB",
    displayName: "Brasiilia uus kruseiro (1967–1986)",
    one: "Brasiilia uus kruseiro (1967–1986)",
    other: "Brasiilia uut kruseirot (1967–1986)"
}, {
    id: "BND",
    displayName: "Brunei dollar",
    symbol: "BND",
    one: "Brunei dollar",
    other: "Brunei dollarit"
}, {
    id: "BGN",
    displayName: "Bulgaaria leev",
    symbol: "BGN",
    one: "Bulgaaria leev",
    other: "Bulgaaria leevi"
}, {
    id: "BGO",
    displayName: "Bulgaaria leev (1879–1952)",
    one: "Bulgaaria leev (1879–1952)",
    other: "Bulgaaria leevi (1879–1952)"
}, {
    id: "BGL",
    displayName: "Bulgaaria püsiv leev"
}, {
    id: "BIF",
    displayName: "Burundi frank",
    symbol: "BIF",
    one: "Burundi frank",
    other: "Burundi franki"
}, {
    id: "XPF",
    displayName: "CFP frank",
    symbol: "CFPF",
    one: "CFP frank",
    other: "CFP franki"
}, {
    id: "CVE",
    displayName: "Cabo Verde eskuudo",
    symbol: "CVE",
    one: "Cabo Verde eskuudo",
    other: "Cabo Verde eskuudot"
}, {
    id: "COP",
    displayName: "Colombia peeso",
    symbol: "COP",
    one: "Colombia peeso",
    other: "Colombia peesot"
}, {
    id: "CRC",
    displayName: "Costa Rica koloon",
    symbol: "CRC",
    one: "Costa Rica koloon",
    other: "Costa Rica kolooni"
}, {
    id: "DJF",
    displayName: "Djibouti frank",
    symbol: "DJF",
    one: "Djibouti frank",
    other: "Djibouti franki"
}, {
    id: "DOP",
    displayName: "Dominikaani peeso",
    symbol: "DOP",
    one: "Dominikaani peeso",
    other: "Dominikaani peesot"
}, {
    id: "XBA",
    displayName: "EURCO"
}, {
    id: "ECS",
    displayName: "Ecuadori sukre",
    one: "Ecuadori sukre",
    other: "Ecuadori sukret"
}, {
    id: "EEK",
    displayName: "Eesti kroon",
    symbol: "kr",
    one: "Eesti kroon",
    other: "Eesti krooni"
}, {
    id: "EGP",
    displayName: "Egiptuse nael",
    symbol: "EGP",
    one: "Egiptuse nael",
    other: "Egiptuse naela"
}, {
    id: "SVC",
    displayName: "El Salvadori koloon",
    one: "El Salvadori koloon",
    other: "El Salvadori kolooni"
}, {
    id: "ERN",
    displayName: "Eritrea nakfa",
    symbol: "ERN",
    one: "Eritrea nakfa",
    other: "Eritrea nakfat"
}, {
    id: "ETB",
    displayName: "Etioopia birr",
    symbol: "ETB",
    one: "Etioopia birr",
    other: "Etioopia birri"
}, {
    id: "XBC",
    displayName: "Euroopa rahaline arvestusühik (XBC)"
}, {
    id: "XBD",
    displayName: "Euroopa rahaline arvestusühik (XBD)"
}, {
    id: "XBB",
    displayName: "Euroopa rahaühik"
}, {
    id: "FKP",
    displayName: "Falklandi saarte nael",
    symbol: "FKP",
    one: "Falklandi saarte nael",
    other: "Falklandi saarte naela"
}, {
    id: "FJD",
    displayName: "Fidži dollar",
    symbol: "FJD",
    one: "Fidži dollar",
    other: "Fidži dollarit"
}, {
    id: "PHP",
    displayName: "Filipiini peeso",
    symbol: "PHP",
    one: "Filipiini peeso",
    other: "Filipiini peesot"
}, {
    id: "GMD",
    displayName: "Gambia dalasi",
    symbol: "GMD",
    one: "Gambia dalasi",
    other: "Gambia dalasit"
}, {
    id: "GHS",
    displayName: "Ghana sedi",
    symbol: "GHS",
    one: "Ghana sedi",
    other: "Ghana sedit"
}, {
    id: "GHC",
    displayName: "Ghana sedi (1979–2007)",
    one: "Ghana sedi (1979–2007)",
    other: "Ghana sedit (1979–2007)"
}, {
    id: "GIP",
    displayName: "Gibraltari nael",
    symbol: "GIP",
    one: "Gibraltari nael",
    other: "Gibraltari naela"
}, {
    id: "GEL",
    displayName: "Gruusia lari",
    symbol: "GEL",
    one: "Gruusia lari",
    other: "Gruusia lari"
}, {
    id: "GTQ",
    displayName: "Guatemala ketsaal",
    symbol: "GTQ",
    one: "Guatemala ketsaal",
    other: "Guatemala ketsaali"
}, {
    id: "GNF",
    displayName: "Guinea frank",
    symbol: "GNF",
    one: "Guinea frank",
    other: "Guinea franki"
}, {
    id: "GNS",
    displayName: "Guinea syli"
}, {
    id: "GWP",
    displayName: "Guinea-Bissau peeso",
    one: "Guinea-Bissau peeso",
    other: "Guinea-Bissau peesot"
}, {
    id: "GYD",
    displayName: "Guyana dollar",
    symbol: "GYD",
    one: "Guyana dollar",
    other: "Guyana dollarit"
}, {
    id: "HTG",
    displayName: "Haiti gurd",
    symbol: "HTG",
    one: "Haiti gurd",
    other: "Haiti gurdi"
}, {
    id: "CNY",
    displayName: "Hiina jüaan",
    symbol: "CN¥",
    one: "Hiina jüaan",
    other: "Hiina jüaani"
}, {
    id: "ESP",
    displayName: "Hispaania peseeta",
    symbol: "₧",
    one: "Hispaania peseeta",
    other: "Hispaania peseetat"
}, {
    id: "ANG",
    displayName: "Hollandi Antillide kulden",
    symbol: "ANG",
    one: "Hollandi Antillide kulden",
    other: "Hollandi Antillide kuldnat"
}, {
    id: "NLG",
    displayName: "Hollandi kulden",
    one: "Hollandi kulden",
    other: "Hollandi kuldnat"
}, {
    id: "HNL",
    displayName: "Hondurase lempiira",
    symbol: "HNL",
    one: "Hondurase lempiira",
    other: "Hondurase lempiirat"
}, {
    id: "HKD",
    displayName: "Hongkongi dollar",
    symbol: "HK$",
    one: "Hongkongi dollar",
    other: "Hongkongi dollarit"
}, {
    id: "HRD",
    displayName: "Horvaatia dinaar",
    one: "Horvaatia dinaar",
    other: "Horvaatia dinaari"
}, {
    id: "HRK",
    displayName: "Horvaatia kuna",
    symbol: "HRK",
    one: "Horvaatia kuna",
    other: "Horvaatia kuna"
}, {
    id: "XCD",
    displayName: "Ida-Kariibi dollar",
    symbol: "EC$",
    one: "Ida-Kariibi dollar",
    other: "Ida-Kariibi dollarit"
}, {
    id: "DDM",
    displayName: "Ida-Saksa mark",
    one: "Ida-Saksa mark",
    other: "Ida-Saksa marka"
}, {
    id: "IEP",
    displayName: "Iiri nael",
    one: "Iiri nael",
    other: "Iiri naela"
}, {
    id: "ILP",
    displayName: "Iisraeli nael",
    one: "Iisraeli nael",
    other: "Iisraeli naela"
}, {
    id: "ILR",
    displayName: "Iisraeli seekel (1980–1985)",
    one: "Iisraeli seekel (1980–1985)",
    other: "Iisraeli seekelit (1980–1985)"
}, {
    id: "ILS",
    displayName: "Iisraeli uus seekel",
    symbol: "₪",
    one: "Iisraeli uus seekel",
    other: "Iisraeli uut seeklit"
}, {
    id: "INR",
    displayName: "India ruupia",
    symbol: "₹",
    one: "India ruupia",
    other: "India ruupiat"
}, {
    id: "IDR",
    displayName: "Indoneesia ruupia",
    symbol: "IDR",
    one: "Indoneesia ruupia",
    other: "Indoneesia ruupiat"
}, {
    id: "IQD",
    displayName: "Iraagi dinaar",
    symbol: "IQD",
    one: "Iraagi dinaar",
    other: "Iraagi dinaari"
}, {
    id: "IRR",
    displayName: "Iraani riaal",
    symbol: "IRR",
    one: "Iraani riaal",
    other: "Iraani riaali"
}, {
    id: "ISK",
    displayName: "Islandi kroon",
    symbol: "ISK",
    one: "Islandi kroon",
    other: "Islandi krooni"
}, {
    id: "ISJ",
    displayName: "Islandi kroon (1918–1981)",
    one: "Islandi kroon (1918–1981)",
    other: "Islandi krooni (1918–1981)"
}, {
    id: "ITL",
    displayName: "Itaalia liir",
    one: "Itaalia liir",
    other: "Itaalia liiri"
}, {
    id: "JPY",
    displayName: "Jaapani jeen",
    symbol: "¥",
    one: "Jaapani jeen",
    other: "Jaapani jeeni"
}, {
    id: "JMD",
    displayName: "Jamaica dollar",
    symbol: "JMD",
    one: "Jamaica dollar",
    other: "Jamaica dollarit"
}, {
    id: "YDD",
    displayName: "Jeemeni dinaar",
    one: "Jeemeni dinaar",
    other: "Jeemeni dinaari"
}, {
    id: "YER",
    displayName: "Jeemeni riaal",
    symbol: "YER",
    one: "Jeemeni riaal",
    other: "Jeemeni riaali"
}, {
    id: "JOD",
    displayName: "Jordaania dinaar",
    symbol: "JOD",
    one: "Jordaania dinaar",
    other: "Jordaania dinaari"
}, {
    id: "YUN",
    displayName: "Jugoslaavia konverteeritav dinaar (1990–1992)",
    one: "Jugoslaavia konverteeritav dinaar (1990–1992)",
    other: "Jugoslaavia konverteeritavat dinaari (1990–1992)"
}, {
    id: "YUM",
    displayName: "Jugoslaavia uus dinaar (1994–2002)",
    one: "Jugoslaavia uus dinaar (1994–2002)",
    other: "Jugoslaavia uut dinaari (1994–2002)"
}, {
    id: "KYD",
    displayName: "Kaimanisaarte dollar",
    symbol: "KYD",
    one: "Kaimanisaarte dollar",
    other: "Kaimanisaarte dollarit"
}, {
    id: "KHR",
    displayName: "Kambodža riaal",
    symbol: "KHR",
    one: "Kambodža riaal",
    other: "Kambodža riaali"
}, {
    id: "CAD",
    displayName: "Kanada dollar",
    symbol: "CA$",
    one: "Kanada dollar",
    other: "Kanada dollarit"
}, {
    id: "KZT",
    displayName: "Kasahstani tenge",
    symbol: "KZT",
    one: "Kasahstani tenge",
    other: "Kasahstani tenget"
}, {
    id: "QAR",
    displayName: "Katari riaal",
    symbol: "QAR",
    one: "Katari riaal",
    other: "Katari riaali"
}, {
    id: "KES",
    displayName: "Keenia šilling",
    symbol: "KES",
    one: "Keenia šilling",
    other: "Keenia šillingit"
}, {
    id: "XAF",
    displayName: "Kesk-Aafrika CFA frank",
    symbol: "FCFA",
    one: "Kesk-Aafrika CFA frank",
    other: "Kesk-Aafrika CFA franki"
}, {
    id: "KMF",
    displayName: "Komoori frank",
    symbol: "KMF",
    one: "Komoori frank",
    other: "Komoori franki"
}, {
    id: "CDF",
    displayName: "Kongo frank",
    symbol: "CDF",
    one: "Kongo frank",
    other: "Kongo franki"
}, {
    id: "GRD",
    displayName: "Kreeka drahm",
    one: "Kreeka drahm",
    other: "Kreeka drahmi"
}, {
    id: "CUC",
    displayName: "Kuuba konverteeritav peeso",
    symbol: "CUC",
    one: "Kuuba konverteeritav peeso",
    other: "Kuuba konverteeritavat peesot"
}, {
    id: "CUP",
    displayName: "Kuuba peeso",
    symbol: "CUP",
    one: "Kuuba peeso",
    other: "Kuuba peesot"
}, {
    id: "KWD",
    displayName: "Kuveidi dinaar",
    symbol: "KWD",
    one: "Kuveidi dinaar",
    other: "Kuveidi dinaari"
}, {
    id: "KGS",
    displayName: "Kõrgõzstani somm",
    symbol: "KGS",
    one: "Kõrgõzstani somm",
    other: "Kõrgõzstani sommi"
}, {
    id: "CYP",
    displayName: "Küprose nael",
    one: "Küprose nael",
    other: "Küprose naela"
}, {
    id: "LAK",
    displayName: "Laose kiip",
    symbol: "LAK",
    one: "Laose kiip",
    other: "Laose kiipi"
}, {
    id: "LTL",
    displayName: "Leedu litt",
    symbol: "LTL",
    one: "Leedu litt",
    other: "Leedu litti"
}, {
    id: "LSL",
    displayName: "Lesotho loti",
    one: "Lesotho loti",
    other: "Lesotho lotit"
}, {
    id: "LRD",
    displayName: "Libeeria dollar",
    symbol: "LRD",
    one: "Libeeria dollar",
    other: "Libeeria dollarit"
}, {
    id: "LBP",
    displayName: "Liibanoni nael",
    symbol: "LBP",
    one: "Liibanoni nael",
    other: "Liibanoni naela"
}, {
    id: "LYD",
    displayName: "Liibüa dinaar",
    symbol: "LYD",
    one: "Liibüa dinaar",
    other: "Liibüa dinaari"
}, {
    id: "LUF",
    displayName: "Luksemburgi frank",
    one: "Luksemburgi frank",
    other: "Luksemburgi franki"
}, {
    id: "LUC",
    displayName: "Luksemburgi konverteeritav frank",
    one: "Luksemburgi konverteeritav frank",
    other: "Luksemburgi konverteeritavat franki"
}, {
    id: "LVL",
    displayName: "Läti latt",
    symbol: "LVL",
    one: "Läti latt",
    other: "Läti latti"
}, {
    id: "LVR",
    displayName: "Läti rubla",
    one: "Läti rubla",
    other: "Läti rubla"
}, {
    id: "XOF",
    displayName: "Lääne-Aafrika CFA frank",
    symbol: "CFA",
    one: "Lääne-Aafrika CFA frank",
    other: "Lääne-Aafrika CFA franki"
}, {
    id: "ZAR",
    displayName: "Lõuna-Aafrika rand",
    symbol: "ZAR",
    one: "Lõuna-Aafrika rand",
    other: "Lõuna-Aafrika randi"
}, {
    id: "KRW",
    displayName: "Lõuna-Korea vonn",
    symbol: "₩",
    one: "Lõuna-Korea vonn",
    other: "Lõuna-Korea vonni"
}, {
    id: "KRO",
    displayName: "Lõuna-Korea vonn (1945–1953)",
    one: "Lõuna-Korea vonn (1945–1953)",
    other: "Lõuna-Korea vonni (1945–1953)"
}, {
    id: "SSP",
    displayName: "Lõuna-Sudaani nael",
    symbol: "SSP",
    one: "Lõuna-Sudaani nael",
    other: "Lõuna-Sudaani naela"
}, {
    id: "MOP",
    displayName: "Macau pataaka",
    symbol: "MOP",
    one: "Macau pataaka",
    other: "Macau pataakat"
}, {
    id: "MGF",
    displayName: "Madagaskar frank",
    one: "Madagaskar frank",
    other: "Madagaskar franki"
}, {
    id: "MGA",
    displayName: "Madagaskari ariari",
    symbol: "MGA",
    one: "Madagaskari ariari",
    other: "Madagaskari ariarit"
}, {
    id: "MKD",
    displayName: "Makedoonia dinaar",
    symbol: "MKD",
    one: "Makedoonia dinaar",
    other: "Makedoonia dinaari"
}, {
    id: "MKN",
    displayName: "Makedoonia dinaar (1992–1993)",
    one: "Makedoonia dinaar (1992–1993)",
    other: "Makedoonia dinaari (1992–1993)"
}, {
    id: "MYR",
    displayName: "Malaisia ringgit",
    symbol: "MYR",
    one: "Malaisia ringgit",
    other: "Malaisia ringgitit"
}, {
    id: "MWK",
    displayName: "Malawi kvatša",
    symbol: "MWK",
    one: "Malawi kvatša",
    other: "Malawi kvatšat"
}, {
    id: "MVR",
    displayName: "Maldiivi ruupia",
    symbol: "MVR",
    one: "Maldiivi ruupia",
    other: "Maldiivi ruupiat"
}, {
    id: "MVP",
    displayName: "Maldiivi ruupia (1947–1981)",
    one: "Maldiivi ruupia (1947–1981)",
    other: "Maldiivi ruupiat (1947–1981)"
}, {
    id: "MLF",
    displayName: "Mali frank",
    one: "Mali frank",
    other: "Mali franki"
}, {
    id: "MTL",
    displayName: "Malta liir",
    one: "Malta liir",
    other: "Malta liiri"
}, {
    id: "MTP",
    displayName: "Malta nael",
    one: "Malta nael",
    other: "Malta naela"
}, {
    id: "MAD",
    displayName: "Maroko dirhem",
    symbol: "MAD",
    one: "Maroko dirhem",
    other: "Maroko dirhemit"
}, {
    id: "MAF",
    displayName: "Maroko frank",
    one: "Maroko frank",
    other: "Maroko franki"
}, {
    id: "MRO",
    displayName: "Mauritaania ugia",
    symbol: "MRO",
    one: "Mauritaania ugia",
    other: "Mauritaania ugiat"
}, {
    id: "MUR",
    displayName: "Mauritiuse ruupia",
    symbol: "MUR",
    one: "Mauritiuse ruupia",
    other: "Mauritiuse ruupiat"
}, {
    id: "MXN",
    displayName: "Mehhiko peeso",
    symbol: "MX$",
    one: "Mehhiko peeso",
    other: "Mehhiko peesot"
}, {
    id: "MXP",
    displayName: "Mehhiko peeso (1861–1992)",
    one: "Mehhiko peeso (1861–1992)",
    other: "Mehhiko peesot (1861–1992)"
}, {
    id: "MDL",
    displayName: "Moldova leu",
    symbol: "MDL",
    one: "Moldova leu",
    other: "Moldova leud"
}, {
    id: "MCF",
    displayName: "Monaco frank",
    one: "Monaco frank",
    other: "Monaco franki"
}, {
    id: "MNT",
    displayName: "Mongoolia tugrik",
    symbol: "MNT",
    one: "Mongoolia tugrik",
    other: "Mongoolia tugrikut"
}, {
    id: "MZE",
    displayName: "Mosambiigi eskuudo",
    one: "Mosambiigi eskuudo",
    other: "Mosambiigi eskuudot"
}, {
    id: "MZN",
    displayName: "Mosambiigi metikal",
    symbol: "MZN",
    one: "Mosambiigi metikal",
    other: "Mosambiigi metikali"
}, {
    id: "MZM",
    displayName: "Mosambiigi metikal (1980–2006)",
    one: "Mosambiigi metikal (1980–2006)",
    other: "Mosambiigi metikali (1980–2006)"
}, {
    id: "MMK",
    displayName: "Myanmari kjatt",
    symbol: "MMK",
    one: "Myanmari kjatt",
    other: "Myanmari kjatti"
}, {
    id: "SUR",
    displayName: "NSVL-i rubla"
}, {
    id: "NAD",
    displayName: "Namiibia dollar",
    symbol: "NAD",
    one: "Namiibia dollar",
    other: "Namiibia dollarit"
}, {
    id: "NPR",
    displayName: "Nepali ruupia",
    symbol: "NPR",
    one: "Nepali ruupia",
    other: "Nepali ruupiat"
}, {
    id: "NIO",
    displayName: "Nicaragua kordoba",
    symbol: "NIO",
    one: "Nicaragua kordoba",
    other: "Nicaragua kordobad"
}, {
    id: "NIC",
    displayName: "Nicaragua kordoba (1988–1991)",
    one: "Nicaragua kordoba (1988–1991)",
    other: "Nicaragua kordobat (1988–1991)"
}, {
    id: "NGN",
    displayName: "Nigeeria naira",
    symbol: "NGN",
    one: "Nigeeria naira",
    other: "Nigeeria nairat"
}, {
    id: "NOK",
    displayName: "Norra kroon",
    symbol: "NOK",
    one: "Norra kroon",
    other: "Norra krooni"
}, {
    id: "OMR",
    displayName: "Omaani riaal",
    symbol: "OMR",
    one: "Omaani riaal",
    other: "Omaani riaali"
}, {
    id: "PGK",
    displayName: "Paapua Uus-Guinea kina",
    symbol: "PGK",
    one: "Paapua Uus-Guinea kina",
    other: "Paapua Uus-Guinea kinat"
}, {
    id: "PKR",
    displayName: "Pakistani ruupia",
    symbol: "PKR",
    one: "Pakistani ruupia",
    other: "Pakistani ruupiat"
}, {
    id: "PAB",
    displayName: "Panama balboa",
    symbol: "PAB",
    one: "Panama balboa",
    other: "Panama balboad"
}, {
    id: "PYG",
    displayName: "Paraguay guaranii",
    symbol: "PYG",
    one: "Paraguay guaranii",
    other: "Paraguay guaraniid"
}, {
    id: "PEI",
    displayName: "Peruu inti"
}, {
    id: "PES",
    displayName: "Peruu soll (1863–1965)",
    one: "Peruu soll (1863–1965)",
    other: "Peruu solli (1863–1965)"
}, {
    id: "PEN",
    displayName: "Peruu uus soll",
    symbol: "PEN",
    one: "Peruu uus soll",
    other: "Peruu uut solli"
}, {
    id: "PLN",
    displayName: "Poola zlott",
    symbol: "PLN",
    one: "Poola zlott",
    other: "Poola zlotti"
}, {
    id: "PLZ",
    displayName: "Poola zlott (1950–1995)",
    one: "Poola zlott (1950–1995)",
    other: "Poola zlotti (1950–1995)"
}, {
    id: "GWE",
    displayName: "Portugali Guinea eskuudo",
    one: "Portugali Guinea eskuudo",
    other: "Portugali Guinea eskuudot"
}, {
    id: "PTE",
    displayName: "Portugali eskuudo",
    one: "Portugali eskuudo",
    other: "Portugali eskuudot"
}, {
    id: "XFU",
    displayName: "Prantsuse UIC-frank"
}, {
    id: "FRF",
    displayName: "Prantsuse frank",
    one: "Prantsuse frank",
    other: "Prantsuse franki"
}, {
    id: "XFO",
    displayName: "Prantsuse kuldfrank",
    one: "Prantsuse kuldfrank",
    other: "Prantsuse kuldfranki"
}, {
    id: "KPW",
    displayName: "Põhja-Korea vonn",
    symbol: "KPW",
    one: "Põhja-Korea vonn",
    other: "Põhja-Korea vonni"
}, {
    id: "XDR",
    displayName: "Rahvusvahelise Valuutafondi arvestusühik"
}, {
    id: "RHD",
    displayName: "Rodeesia dollar",
    one: "Rodeesia dollar",
    other: "Rodeesia dollarit"
}, {
    id: "SEK",
    displayName: "Rootsi kroon",
    symbol: "SEK",
    one: "Rootsi kroon",
    other: "Rootsi krooni"
}, {
    id: "RON",
    displayName: "Rumeenia leu",
    symbol: "RON",
    one: "Rumeenia leu",
    other: "Rumeenia leud"
}, {
    id: "ROL",
    displayName: "Rumeenia leu (1952–2006)",
    one: "Rumeenia leu (1952–2006)",
    other: "Rumeenia leud (1952–2006)"
}, {
    id: "RWF",
    displayName: "Rwanda frank",
    symbol: "RWF",
    one: "Rwanda frank",
    other: "Rwanda franki"
}, {
    id: "SBD",
    displayName: "Saalomoni Saarte dollar",
    symbol: "SBD",
    one: "Saalomoni Saarte dollar",
    other: "Saalomoni Saarte dollarit"
}, {
    id: "SHP",
    displayName: "Saint Helena nael",
    symbol: "SHP",
    one: "Saint Helena nael",
    other: "Saint Helena naela"
}, {
    id: "ZRZ",
    displayName: "Sairi zaire"
}, {
    id: "DEM",
    displayName: "Saksa mark",
    one: "Saksa mark",
    other: "Saksa marka"
}, {
    id: "ZMW",
    displayName: "Sambia kvatša",
    symbol: "ZMW",
    one: "Sambia kvatša",
    other: "Sambia kvatšat"
}, {
    id: "ZMK",
    displayName: "Sambia kvatša (1968–2012)",
    one: "Sambia kvatša (1968–2012)",
    other: "Sambia kvatšat (1968–2012)"
}, {
    id: "WST",
    displayName: "Samoa taala",
    symbol: "WST",
    one: "Samoa taala",
    other: "Samoa taalat"
}, {
    id: "SAR",
    displayName: "Saudi Araabia riaal",
    symbol: "SAR",
    one: "Saudi Araabia riaal",
    other: "Saudi Araabia riaali"
}, {
    id: "SCR",
    displayName: "Seišelli ruupia",
    symbol: "SCR",
    one: "Seišelli ruupia",
    other: "Seišelli ruupiat"
}, {
    id: "RSD",
    displayName: "Serbia dinaar",
    symbol: "RSD",
    one: "Serbia dinaar",
    other: "Serbia dinaari"
}, {
    id: "CSD",
    displayName: "Serbia dinaar (2002–2006)",
    one: "Serbia dinaar (2002–2006)",
    other: "Serbia dinaari (2002–2006)"
}, {
    id: "SLL",
    displayName: "Sierra Leone leoone",
    symbol: "SLL",
    one: "Sierra Leone leoone",
    other: "Sierra Leone leoonet"
}, {
    id: "SGD",
    displayName: "Singapuri dollar",
    symbol: "SGD",
    one: "Singapuri dollar",
    other: "Singapuri dollarit"
}, {
    id: "SKK",
    displayName: "Slovaki kroon",
    one: "Slovaki kroon",
    other: "Slovaki krooni"
}, {
    id: "SIT",
    displayName: "Sloveenia tolar",
    one: "Sloveenia tolar",
    other: "Sloveenia tolarit"
}, {
    id: "SOS",
    displayName: "Somaalia šilling",
    symbol: "SOS",
    one: "Somaalia šilling",
    other: "Somaalia šillingit"
}, {
    id: "FIM",
    displayName: "Soome mark",
    one: "Soome mark",
    other: "Soome marka"
}, {
    id: "LKR",
    displayName: "Sri Lanka ruupia",
    symbol: "LKR",
    one: "Sri Lanka ruupia",
    other: "Sri Lanka ruupiat"
}, {
    id: "SDD",
    displayName: "Sudaani dinaar (1992–2007)",
    one: "Sudaani dinaar (1992–2007)",
    other: "Sudaani dinaari (1992–2007)"
}, {
    id: "SDG",
    displayName: "Sudaani nael",
    symbol: "SDG",
    one: "Sudaani nael",
    other: "Sudaani naela"
}, {
    id: "SDP",
    displayName: "Sudaani nael (1957–1998)",
    one: "Sudaani nael (1957–1998)",
    other: "Sudaani naela (1957–1998)"
}, {
    id: "SRD",
    displayName: "Suriname dollar",
    symbol: "SRD",
    one: "Suriname dollar",
    other: "Suriname dollarit"
}, {
    id: "SRG",
    displayName: "Suriname kulden",
    one: "Suriname kulden",
    other: "Suriname kuldnat"
}, {
    id: "GBP",
    displayName: "Suurbritannia naelsterling",
    symbol: "£",
    one: "Suurbritannia naelsterling",
    other: "Suurbritannia naelsterlingit"
}, {
    id: "SZL",
    displayName: "Svaasimaa lilangeni",
    symbol: "SZL",
    one: "Svaasimaa lilangeni",
    other: "Svaasimaa lilangenit"
}, {
    id: "STD",
    displayName: "São Tomé ja Príncipe dobra",
    symbol: "STD",
    one: "São Tomé ja Príncipe dobra",
    other: "São Tomé ja Príncipe dobrat"
}, {
    id: "SYP",
    displayName: "Süüria nael",
    symbol: "SYP",
    one: "Süüria nael",
    other: "Süüria naela"
}, {
    id: "DKK",
    displayName: "Taani kroon",
    symbol: "DKK",
    one: "Taani kroon",
    other: "Taani krooni"
}, {
    id: "TJR",
    displayName: "Tadžikistani rubla",
    one: "Tadžikistani rubla",
    other: "Tadžikistani rubla"
}, {
    id: "TJS",
    displayName: "Tadžikistani somoni",
    symbol: "TJS",
    one: "Tadžikistani somoni",
    other: "Tadžikistani somonit"
}, {
    id: "THB",
    displayName: "Tai baat",
    symbol: "฿",
    one: "Tai baat",
    other: "Tai baati"
}, {
    id: "TWD",
    displayName: "Taiwani dollar",
    symbol: "NT$",
    one: "Taiwani dollar",
    other: "Taiwani dollarit"
}, {
    id: "TZS",
    displayName: "Tansaania šilling",
    symbol: "TZS",
    one: "Tansaania šilling",
    other: "Tansaania šillingit"
}, {
    id: "TPE",
    displayName: "Timori eskuudo",
    one: "Timori eskuudo",
    other: "Timori eskuudot"
}, {
    id: "TOP",
    displayName: "Tonga pa’anga",
    symbol: "TOP",
    one: "Tonga pa’anga",
    other: "Tonga pa’angat"
}, {
    id: "TTD",
    displayName: "Trinidadi ja Tobago dollar",
    symbol: "TTD",
    one: "Trinidadi ja Tobago dollar",
    other: "Trinidadi ja Tobago dollarit"
}, {
    id: "TND",
    displayName: "Tuneesia dinaar",
    symbol: "TND",
    one: "Tuneesia dinaar",
    other: "Tuneesia dinaari"
}, {
    id: "TRY",
    displayName: "Türgi liir",
    symbol: "TRY",
    one: "Türgi liir",
    other: "Türgi liiri"
}, {
    id: "TRL",
    displayName: "Türgi liir (1922–2005)",
    one: "Türgi liir (1922–2005)",
    other: "Türgi liiri (1922–2005)"
}, {
    id: "TMT",
    displayName: "Türkmenistani manat",
    symbol: "TMT",
    one: "Türkmenistani manat",
    other: "Türkmenistani manatit"
}, {
    id: "TMM",
    displayName: "Türkmenistani manat (1993–2009)",
    one: "Türkmenistani manat (1993–2009)",
    other: "Türkmenistani manatit (1993–2009)"
}, {
    id: "CZK",
    displayName: "Tšehhi kroon",
    symbol: "CZK",
    one: "Tšehhi kroon",
    other: "Tšehhi krooni"
}, {
    id: "CLE",
    displayName: "Tšiili eskuudo",
    one: "Tšiili eskuudo",
    other: "Tšiili eskuudot"
}, {
    id: "CLP",
    displayName: "Tšiili peeso",
    symbol: "CLP",
    one: "Tšiili peeso",
    other: "Tšiili peesot"
}, {
    id: "USD",
    displayName: "USA dollar",
    symbol: "$",
    one: "USA dollar",
    other: "USA dollarit"
}, {
    id: "USN",
    displayName: "USA järgmise päeva dollar"
}, {
    id: "USS",
    displayName: "USA sama päeva dollar"
}, {
    id: "UGX",
    displayName: "Uganda šilling",
    symbol: "UGX",
    one: "Uganda šilling",
    other: "Uganda šillingit"
}, {
    id: "UGS",
    displayName: "Uganda šilling (1966–1987)",
    one: "Uganda šilling (1966–1987)",
    other: "Uganda šillingit (1966–1987)"
}, {
    id: "UAH",
    displayName: "Ukraina grivna",
    symbol: "UAH",
    one: "Ukraina grivna",
    other: "Ukraina grivnat"
}, {
    id: "UAK",
    displayName: "Ukraina karbovanets"
}, {
    id: "HUF",
    displayName: "Ungari forint",
    symbol: "HUF",
    one: "Ungari forint",
    other: "Ungari forintit"
}, {
    id: "UYU",
    displayName: "Uruguay peeso",
    symbol: "UYU",
    one: "Uruguay peeso",
    other: "Uruguay peesot"
}, {
    id: "UYP",
    displayName: "Uruguay peeso (1975–1993)",
    one: "Uruguay peeso (1975–1993)",
    other: "Uruguay peesot (1975–1993)"
}, {
    id: "UZS",
    displayName: "Usbekistani somm",
    symbol: "UZS",
    one: "Usbekistani somm",
    other: "Usbekistani sommi"
}, {
    id: "NZD",
    displayName: "Uus-Meremaa dollar",
    symbol: "NZ$",
    one: "Uus-Meremaa dollar",
    other: "Uus-Meremaa dollarit"
}, {
    id: "BYR",
    displayName: "Valgevene rubla",
    symbol: "BYR",
    one: "Valgevene rubla",
    other: "Valgevene rubla"
}, {
    id: "BYB",
    displayName: "Valgevene uus rubla (1994–1999)",
    one: "Valgevene uus rubla (1994–1999)",
    other: "Valgevene uut rubla (1994–1999)"
}, {
    id: "VUV",
    displayName: "Vanuatu vatu",
    symbol: "VUV",
    one: "Vanuatu vatu",
    other: "Vanuatu vatut"
}, {
    id: "RUB",
    displayName: "Venemaa rubla",
    symbol: "RUB",
    one: "Venemaa rubla",
    other: "Venemaa rubla"
}, {
    id: "RUR",
    displayName: "Venemaa rubla (1991–1998)",
    symbol: "р."
}, {
    id: "VEF",
    displayName: "Venezuela boliivar",
    symbol: "VEF",
    one: "Venezuela boliivar",
    other: "Venezuela boliivarit"
}, {
    id: "VEB",
    displayName: "Venezuela boliivar (1871–2008)",
    one: "Venezuela boliivar (1871–2008)",
    other: "Venezuela boliivarit (1871–2008)"
}, {
    id: "VND",
    displayName: "Vietnami dong",
    symbol: "₫",
    one: "Vietnami dong",
    other: "Vietnami dongi"
}, {
    id: "VNN",
    displayName: "Vietnami dong (1978–1985)",
    one: "Vietnami dong (1978–1985)",
    other: "Vietnami dongi (1978–1985)"
}, {
    id: "ZWD",
    displayName: "Zimbabwe dollar (1980–2008)",
    one: "Zimbabwe dollar (1980–2008)",
    other: "Zimbabwe dollarit (1980–2008)"
}, {
    id: "ZWR",
    displayName: "Zimbabwe dollar (2008)",
    one: "Zimbabwe dollar (2008)",
    other: "Zimbabwe dollarit (2008)"
}, {
    id: "ZWL",
    displayName: "Zimbabwe dollar (2009)",
    one: "Zimbabwe dollar (2009)",
    other: "Zimbabwe dollarit (2009)"
}, {
    id: "XEU",
    displayName: "eküü",
    one: "eküü",
    other: "eküüd"
}, {
    id: "EUR",
    displayName: "euro",
    symbol: "€",
    one: "euro",
    other: "eurot"
}, {
    id: "XAG",
    displayName: "hõbe",
    one: "troiunts hõbedat",
    other: "troiuntsi hõbedat"
}, {
    id: "XAU",
    displayName: "kuld",
    one: "troiunts kulda",
    other: "troiuntsi kulda"
}, {
    id: "XXX",
    displayName: "määramata rahaühik",
    one: "(määramata rahaühik)",
    other: "(määramata rahaühikut)"
}, {
    id: "XPD",
    displayName: "pallaadium",
    one: "troiunts pallaadiumit",
    other: "troiuntsi pallaadiumit"
}, {
    id: "XPT",
    displayName: "plaatina",
    one: "troiunts plaatinat",
    other: "troiuntsi plaatinat"
}, {
    id: "XTS",
    displayName: "vääringute testkood"
}, {
    id: "CHF",
    displayName: "Šveitsi frank",
    symbol: "CHF",
    one: "Šveitsi frank",
    other: "Šveitsi franki"
} ];

module.exports = inter;