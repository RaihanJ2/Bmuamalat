function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _8xa71 = {
    "default": "#,##0 %"
}, _8xa72 = {
    displayName: "epoca"
}, _8xa73 = {
    all: {
        leap: "{0}bis"
    }
}, _8xa74 = {
    one: "0K ¤",
    other: "0K ¤"
}, _8xa75 = {
    one: "0M ¤",
    other: "0M ¤"
}, _8xa76 = {
    one: "0G ¤",
    other: "0G ¤"
}, _8xa77 = {
    one: "0T ¤",
    other: "0T ¤"
}, _8xa78 = {
    a: "h a – h a",
    h: "h–h a"
}, _8xa79 = [ "Before R.O.C.", "R.O.C." ], _8xa710 = {
    one: "{0} g",
    other: "{0} g"
}, _8xa711 = {
    one: "{0} l",
    other: "{0} l"
}, _8xa712 = {
    one: "00K ¤",
    other: "00K ¤"
}, _8xa713 = {
    one: "00M ¤",
    other: "00M ¤"
}, _8xa714 = {
    one: "00G ¤",
    other: "00G ¤"
}, _8xa715 = {
    one: "00T ¤",
    other: "00T ¤"
}, _8xa716 = {
    displayName: "di da l’emna"
}, _8xa717 = {
    displayName: "zona d’urari"
}, _8xa718 = {
    one: "{0} kg",
    other: "{0} kg"
}, _8xa719 = {
    one: "000K ¤",
    other: "000K ¤"
}, _8xa720 = {
    one: "000M ¤",
    other: "000M ¤"
}, _8xa721 = {
    one: "000G ¤",
    other: "000G ¤"
}, _8xa722 = {
    one: "000T ¤",
    other: "000T ¤"
}, _8xa723 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _8xa724 = [ "D", "G", "M", "M", "G", "V", "S" ], _8xa725 = {
    one: "{0} di",
    other: "{0} dis"
}, _8xa726 = {
    displayName: "mesadad dal di"
}, _8xa727 = {
    M: "MM – MM.y",
    y: "MM.y – MM.y"
}, _8xa728 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _8xa729 = {
    one: "{0} onn",
    other: "{0} onns"
}, _8xa730 = {
    one: "{0} ura",
    other: "{0} uras"
}, _8xa731 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _8xa732 = {
    one: "{0} mais",
    other: "{0} mais"
}, _8xa733 = {
    one: "{0} km/h",
    other: "{0} km/h"
}, _8xa734 = {
    M: "MM.y – MM.y",
    y: "MM.y – MM.y"
}, _8xa735 = {
    M: "MMM–MMM y",
    y: "MMM y – MMM y"
}, _8xa736 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _8xa737 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _8xa738 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _8xa739 = {
    one: "{0} emna",
    other: "{0} emnas"
}, _8xa740 = {
    d: "d.–d. MMM",
    M: "d. MMM – d. MMM"
}, _8xa741 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _8xa742 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _8xa743 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _8xa744 = [ "du", "gli", "ma", "me", "gie", "ve", "so" ], _8xa745 = {
    d: "dd.MM. – dd.MM.",
    M: "dd.MM. – dd.MM."
}, _8xa746 = {
    "0": "this year",
    "1": "next year",
    "-1": "last year"
}, _8xa747 = {
    "0": "this week",
    "1": "next week",
    "-1": "last week"
}, _8xa748 = {
    future: {
        other: "+{0} y"
    },
    past: {
        other: "-{0} y"
    }
}, _8xa749 = {
    future: {
        other: "+{0} m"
    },
    past: {
        other: "-{0} m"
    }
}, _8xa750 = {
    future: {
        other: "+{0} w"
    },
    past: {
        other: "-{0} w"
    }
}, _8xa751 = {
    future: {
        other: "+{0} d"
    },
    past: {
        other: "-{0} d"
    }
}, _8xa752 = {
    future: {
        other: "+{0} h"
    },
    past: {
        other: "-{0} h"
    }
}, _8xa753 = {
    future: {
        other: "+{0} s"
    },
    past: {
        other: "-{0} s"
    }
}, _8xa754 = {
    future: {
        other: "+{0} Q"
    },
    past: {
        other: "-{0} Q"
    }
}, _8xa755 = {
    id: "001",
    displayName: "mund",
    hasTimeZones: false
}, _8xa756 = {
    d: "E, d. – E, d. MMM",
    M: "E, d. MMM – E, d. MMM"
}, _8xa757 = [ "S", "F", "M", "A", "M", "Z", "F", "A", "S", "O", "N", "D" ], _8xa758 = {
    "0": "this month",
    "1": "next month",
    "-1": "last month"
}, _8xa759 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _8xa760 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _8xa761 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _8xa762 = {
    future: {
        other: "+{0} min"
    },
    past: {
        other: "-{0} min"
    }
}, _8xa763 = {
    "0": "this Sunday",
    "1": "next Sunday",
    "-1": "last Sunday"
}, _8xa764 = {
    "0": "this Monday",
    "1": "next Monday",
    "-1": "last Monday"
}, _8xa765 = {
    "0": "this Friday",
    "1": "next Friday",
    "-1": "last Friday"
}, _8xa766 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _8xa767 = {
    id: "AQ",
    displayName: "Antarctica",
    hasTimeZones: true
}, _8xa768 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _8xa769 = {
    d: "E, dd.MM. – E, dd.MM.",
    M: "E, dd.MM. – E, dd.MM."
}, _8xa770 = [ "1. quartal", "2. quartal", "3. quartal", "4. quartal" ], _8xa771 = {
    id: "CC",
    displayName: "Inslas Cocos",
    hasTimeZones: true
}, _8xa772 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _8xa773 = {
    "0": "this Tuesday",
    "1": "next Tuesday",
    "-1": "last Tuesday"
}, _8xa774 = {
    id: "BV",
    displayName: "Insla Bouvet",
    hasTimeZones: false
}, _8xa775 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _8xa776 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _8xa777 = {
    "0": "this Thursday",
    "1": "next Thursday",
    "-1": "last Thursday"
}, _8xa778 = {
    "0": "this Saturday",
    "1": "next Saturday",
    "-1": "last Saturday"
}, _8xa779 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _8xa780 = {
    "0": "oz",
    "1": "damaun",
    "2": "puschmaun",
    "-2": "stersas",
    "-1": "ier"
}, _8xa781 = {
    id: "CX",
    displayName: "Insla da Christmas",
    hasTimeZones: true
}, _8xa782 = {
    "0": "this Wednesday",
    "1": "next Wednesday",
    "-1": "last Wednesday"
}, _8xa783 = {
    id: "CU",
    displayName: "Cuba",
    regionId: "029",
    hasTimeZones: true
}, _8xa784 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _8xa785 = {
    id: "IQ",
    displayName: "Irac",
    regionId: "145",
    hasTimeZones: true
}, _8xa786 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _8xa787 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _8xa788 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _8xa789 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _8xa790 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _8xa791 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _8xa792 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _8xa793 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _8xa794 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _8xa795 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _8xa796 = {
    id: "CN",
    displayName: "China",
    regionId: "030",
    hasTimeZones: true
}, _8xa797 = {
    id: "CY",
    displayName: "Cipra",
    regionId: "145",
    hasTimeZones: true
}, _8xa798 = {
    id: "CG",
    displayName: "Congo",
    regionId: "017",
    hasTimeZones: true
}, _8xa799 = {
    id: "GA",
    displayName: "Gabun",
    regionId: "017",
    hasTimeZones: true
}, _8xa7100 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _8xa7101 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _8xa7102 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _8xa7103 = {
    id: "YE",
    displayName: "Jemen",
    regionId: "145",
    hasTimeZones: true
}, _8xa7104 = {
    id: "QA",
    displayName: "Katar",
    regionId: "145",
    hasTimeZones: true
}, _8xa7105 = {
    id: "KE",
    displayName: "Kenia",
    regionId: "014",
    hasTimeZones: true
}, _8xa7106 = {
    id: "LY",
    displayName: "Libia",
    regionId: "015",
    hasTimeZones: true
}, _8xa7107 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _8xa7108 = {
    id: "MA",
    displayName: "Maroc",
    regionId: "015",
    hasTimeZones: true
}, _8xa7109 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _8xa7110 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _8xa7111 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _8xa7112 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _8xa7113 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _8xa7114 = {
    id: "SY",
    displayName: "Siria",
    regionId: "145",
    hasTimeZones: true
}, _8xa7115 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _8xa7116 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _8xa7117 = {
    d: "d.–d. MMM y",
    M: "d. MMM – d. MMM y",
    y: "d. MMM y – d. MMM y"
}, _8xa7118 = {
    relative: _8xa763
}, _8xa7119 = {
    relative: _8xa764
}, _8xa7120 = {
    relative: _8xa765
}, _8xa7121 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _8xa7122 = {
    id: "BE",
    displayName: "Belgia",
    regionId: "155",
    hasTimeZones: true
}, _8xa7123 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _8xa7124 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _8xa7125 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _8xa7126 = {
    id: "CA",
    displayName: "Canada",
    regionId: "021",
    hasTimeZones: true
}, _8xa7127 = {
    id: "EG",
    displayName: "Egipta",
    regionId: "015",
    hasTimeZones: true
}, _8xa7128 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _8xa7129 = {
    id: "JP",
    displayName: "Giapun",
    regionId: "030",
    hasTimeZones: true
}, _8xa7130 = {
    id: "GR",
    displayName: "Grezia",
    regionId: "039",
    hasTimeZones: true
}, _8xa7131 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _8xa7132 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _8xa7133 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _8xa7134 = {
    id: "IT",
    displayName: "Italia",
    regionId: "039",
    hasTimeZones: true
}, _8xa7135 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _8xa7136 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _8xa7137 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _8xa7138 = {
    id: "MX",
    displayName: "Mexico",
    regionId: "013",
    hasTimeZones: true
}, _8xa7139 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _8xa7140 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _8xa7141 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _8xa7142 = {
    id: "RU",
    displayName: "Russia",
    regionId: "151",
    hasTimeZones: true
}, _8xa7143 = {
    id: "ZM",
    displayName: "Sambia",
    regionId: "014",
    hasTimeZones: true
}, _8xa7144 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _8xa7145 = {
    id: "ES",
    displayName: "Spagna",
    regionId: "039",
    hasTimeZones: true
}, _8xa7146 = {
    id: "SE",
    displayName: "Svezia",
    regionId: "154",
    hasTimeZones: true
}, _8xa7147 = {
    id: "CH",
    displayName: "Svizra",
    regionId: "155",
    hasTimeZones: true
}, _8xa7148 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _8xa7149 = {
    id: "TD",
    displayName: "Tschad",
    regionId: "017",
    hasTimeZones: true
}, _8xa7150 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _8xa7151 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _8xa7152 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _8xa7153 = {
    id: "DZ",
    displayName: "Algeria",
    regionId: "015",
    hasTimeZones: true
}, _8xa7154 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _8xa7155 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _8xa7156 = {
    id: "AT",
    displayName: "Austria",
    regionId: "155",
    hasTimeZones: true
}, _8xa7157 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _8xa7158 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _8xa7159 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _8xa7160 = {
    id: "BR",
    displayName: "Brasila",
    regionId: "005",
    hasTimeZones: true
}, _8xa7161 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _8xa7162 = {
    id: "CM",
    displayName: "Camerun",
    regionId: "017",
    hasTimeZones: true
}, _8xa7163 = {
    id: "KM",
    displayName: "Comoras",
    regionId: "014",
    hasTimeZones: true
}, _8xa7164 = {
    id: "HR",
    displayName: "Croazia",
    regionId: "039",
    hasTimeZones: true
}, _8xa7165 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _8xa7166 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _8xa7167 = {
    id: "EE",
    displayName: "Estonia",
    regionId: "154",
    hasTimeZones: true
}, _8xa7168 = {
    id: "ET",
    displayName: "Etiopia",
    regionId: "014",
    hasTimeZones: true
}, _8xa7169 = {
    id: "FJ",
    displayName: "Fidschi",
    regionId: "054",
    hasTimeZones: true
}, _8xa7170 = {
    id: "GE",
    displayName: "Georgia",
    regionId: "145",
    hasTimeZones: true
}, _8xa7171 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _8xa7172 = {
    id: "IE",
    displayName: "Irlanda",
    regionId: "154",
    hasTimeZones: true
}, _8xa7173 = {
    id: "IS",
    displayName: "Islanda",
    regionId: "154",
    hasTimeZones: true
}, _8xa7174 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _8xa7175 = {
    id: "LB",
    displayName: "Libanon",
    regionId: "145",
    hasTimeZones: true
}, _8xa7176 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _8xa7177 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _8xa7178 = {
    id: "MM",
    displayName: "Myanmar",
    regionId: "035",
    hasTimeZones: true
}, _8xa7179 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _8xa7180 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _8xa7181 = {
    id: "PL",
    displayName: "Pologna",
    regionId: "151",
    hasTimeZones: true
}, _8xa7182 = {
    id: "RO",
    displayName: "Rumenia",
    regionId: "151",
    hasTimeZones: true
}, _8xa7183 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _8xa7184 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _8xa7185 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _8xa7186 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _8xa7187 = {
    id: "TR",
    displayName: "Tirchia",
    regionId: "145",
    hasTimeZones: true
}, _8xa7188 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _8xa7189 = {
    id: "TN",
    displayName: "Tunesia",
    regionId: "015",
    hasTimeZones: true
}, _8xa7190 = {
    id: "UA",
    displayName: "Ucraina",
    regionId: "151",
    hasTimeZones: true
}, _8xa7191 = {
    id: "HU",
    displayName: "Ungaria",
    regionId: "151",
    hasTimeZones: true
}, _8xa7192 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _8xa7193 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _8xa7194 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _8xa7195 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _8xa7196 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _8xa7197 = {
    id: "BM",
    displayName: "Bermudas",
    regionId: "021",
    hasTimeZones: true
}, _8xa7198 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _8xa7199 = {
    id: "BG",
    displayName: "Bulgaria",
    regionId: "151",
    hasTimeZones: true
}, _8xa7200 = {
    id: "CV",
    displayName: "Cap Verd",
    regionId: "011",
    hasTimeZones: true
}, _8xa7201 = {
    id: "CO",
    displayName: "Columbia",
    regionId: "005",
    hasTimeZones: true
}, _8xa7202 = {
    id: "DK",
    displayName: "Danemarc",
    regionId: "154",
    hasTimeZones: true
}, _8xa7203 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _8xa7204 = {
    id: "FI",
    displayName: "Finlanda",
    regionId: "154",
    hasTimeZones: true
}, _8xa7205 = {
    id: "DE",
    displayName: "Germania",
    regionId: "155",
    hasTimeZones: true
}, _8xa7206 = {
    id: "JM",
    displayName: "Giamaica",
    regionId: "029",
    hasTimeZones: true
}, _8xa7207 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _8xa7208 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _8xa7209 = {
    id: "JO",
    displayName: "Jordania",
    regionId: "145",
    hasTimeZones: true
}, _8xa7210 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _8xa7211 = {
    id: "LV",
    displayName: "Lettonia",
    regionId: "154",
    hasTimeZones: true
}, _8xa7212 = {
    id: "LT",
    displayName: "Lituania",
    regionId: "154",
    hasTimeZones: true
}, _8xa7213 = {
    id: "MY",
    displayName: "Malaisia",
    regionId: "035",
    hasTimeZones: true
}, _8xa7214 = {
    id: "MV",
    displayName: "Maldivas",
    regionId: "034",
    hasTimeZones: true
}, _8xa7215 = {
    id: "MD",
    displayName: "Moldavia",
    regionId: "151",
    hasTimeZones: true
}, _8xa7216 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _8xa7217 = {
    id: "MZ",
    displayName: "Mosambic",
    regionId: "014",
    hasTimeZones: true
}, _8xa7218 = {
    id: "NO",
    displayName: "Norvegia",
    regionId: "154",
    hasTimeZones: true
}, _8xa7219 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _8xa7220 = {
    id: "PY",
    displayName: "Paraguai",
    regionId: "005",
    hasTimeZones: true
}, _8xa7221 = {
    id: "PN",
    displayName: "Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _8xa7222 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _8xa7223 = {
    id: "ZW",
    displayName: "Simbabwe",
    regionId: "014",
    hasTimeZones: true
}, _8xa7224 = {
    id: "SG",
    displayName: "Singapur",
    regionId: "035",
    hasTimeZones: true
}, _8xa7225 = {
    id: "SI",
    displayName: "Slovenia",
    regionId: "039",
    hasTimeZones: true
}, _8xa7226 = {
    id: "TH",
    displayName: "Tailanda",
    regionId: "035",
    hasTimeZones: true
}, _8xa7227 = {
    id: "TZ",
    displayName: "Tansania",
    regionId: "014",
    hasTimeZones: true
}, _8xa7228 = {
    relative: _8xa773
}, _8xa7229 = {
    id: "AU",
    displayName: "Australia",
    regionId: "053",
    hasTimeZones: true
}, _8xa7230 = {
    id: "DJ",
    displayName: "Dschibuti",
    regionId: "014",
    hasTimeZones: true
}, _8xa7231 = {
    id: "FR",
    displayName: "Frantscha",
    regionId: "155",
    hasTimeZones: true
}, _8xa7232 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _8xa7233 = {
    id: "GL",
    displayName: "Grönlanda",
    regionId: "021",
    hasTimeZones: true
}, _8xa7234 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _8xa7235 = {
    id: "ID",
    displayName: "Indonesia",
    regionId: "035",
    hasTimeZones: true
}, _8xa7236 = {
    id: "LU",
    displayName: "Luxemburg",
    regionId: "155",
    hasTimeZones: true
}, _8xa7237 = {
    id: "MK",
    displayName: "Macedonia",
    regionId: "039",
    hasTimeZones: true
}, _8xa7238 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _8xa7239 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _8xa7240 = {
    id: "SB",
    displayName: "Salomonas",
    regionId: "054",
    hasTimeZones: true
}, _8xa7241 = {
    id: "SK",
    displayName: "Slovachia",
    regionId: "151",
    hasTimeZones: true
}, _8xa7242 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _8xa7243 = {
    id: "SZ",
    displayName: "Swaziland",
    regionId: "018",
    hasTimeZones: true
}, _8xa7244 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _8xa7245 = {
    d: "dd.MM.y – dd.MM.y",
    M: "dd.MM.y – dd.MM.y",
    y: "dd.MM.y – dd.MM.y"
}, _8xa7246 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _8xa7247 = {
    id: "AR",
    displayName: "Argentinia",
    regionId: "005",
    hasTimeZones: true
}, _8xa7248 = {
    id: "KH",
    displayName: "Cambodscha",
    regionId: "035",
    hasTimeZones: true
}, _8xa7249 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _8xa7250 = {
    id: "PH",
    displayName: "Filippinas",
    regionId: "035",
    hasTimeZones: true
}, _8xa7251 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _8xa7252 = {
    id: "KZ",
    displayName: "Kasachstan",
    regionId: "143",
    hasTimeZones: true
}, _8xa7253 = {
    id: "MG",
    displayName: "Madagascar",
    regionId: "014",
    hasTimeZones: true
}, _8xa7254 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _8xa7255 = {
    id: "MR",
    displayName: "Mauretania",
    regionId: "011",
    hasTimeZones: true
}, _8xa7256 = {
    id: "FM",
    displayName: "Micronesia",
    regionId: "057",
    hasTimeZones: true
}, _8xa7257 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _8xa7258 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _8xa7259 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _8xa7260 = {
    id: "SC",
    displayName: "Seychellas",
    regionId: "014",
    hasTimeZones: true
}, _8xa7261 = {
    id: "UZ",
    displayName: "Usbekistan",
    regionId: "143",
    hasTimeZones: true
}, _8xa7262 = {
    id: "AF",
    displayName: "Afghanistan",
    regionId: "034",
    hasTimeZones: true
}, _8xa7263 = {
    id: "BD",
    displayName: "Bangladesch",
    regionId: "034",
    hasTimeZones: true
}, _8xa7264 = {
    id: "BY",
    displayName: "Bielorussia",
    regionId: "151",
    hasTimeZones: true
}, _8xa7265 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _8xa7266 = {
    id: "CK",
    displayName: "Inslas Cook",
    regionId: "061",
    hasTimeZones: true
}, _8xa7267 = {
    id: "NL",
    displayName: "Pajais Bass",
    regionId: "155",
    hasTimeZones: true
}, _8xa7268 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _8xa7269 = {
    id: "LC",
    displayName: "Saint Lucia",
    regionId: "029",
    hasTimeZones: true
}, _8xa7270 = {
    id: "SH",
    displayName: "Sontg’Elena",
    regionId: "011",
    hasTimeZones: true
}, _8xa7271 = {
    relative: _8xa777
}, _8xa7272 = {
    relative: _8xa778
}, _8xa7273 = {
    id: "142",
    displayName: "Asia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _8xa7274 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _8xa7275 = {
    id: "CI",
    displayName: "Costa d’Ivur",
    regionId: "011",
    hasTimeZones: true
}, _8xa7276 = {
    id: "IM",
    displayName: "Insla da Man",
    regionId: "154",
    hasTimeZones: true
}, _8xa7277 = {
    id: "AX",
    displayName: "Inslas Aland",
    regionId: "154",
    hasTimeZones: true
}, _8xa7278 = {
    id: "FO",
    displayName: "Inslas Feroe",
    regionId: "154",
    hasTimeZones: true
}, _8xa7279 = {
    id: "KG",
    displayName: "Kirghisistan",
    regionId: "143",
    hasTimeZones: true
}, _8xa7280 = {
    id: "NZ",
    displayName: "Nova Zelanda",
    regionId: "053",
    hasTimeZones: true
}, _8xa7281 = {
    id: "MF",
    displayName: "Saint Martin",
    regionId: "029",
    hasTimeZones: true
}, _8xa7282 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _8xa7283 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _8xa7284 = {
    id: "AZ",
    displayName: "Aserbaidschan",
    regionId: "145",
    hasTimeZones: true
}, _8xa7285 = {
    id: "KR",
    displayName: "Corea dal Sid",
    regionId: "030",
    hasTimeZones: true
}, _8xa7286 = {
    id: "GW",
    displayName: "Guinea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _8xa7287 = {
    id: "NF",
    displayName: "Insla Norfolk",
    regionId: "053",
    hasTimeZones: true
}, _8xa7288 = {
    id: "KY",
    displayName: "Inslas Cayman",
    regionId: "029",
    hasTimeZones: true
}, _8xa7289 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _8xa7290 = {
    id: "GB",
    displayName: "Reginavel Unì",
    regionId: "154",
    hasTimeZones: true
}, _8xa7291 = {
    id: "SS",
    displayName: "Sudan dal Sid",
    regionId: "014",
    hasTimeZones: true
}, _8xa7292 = {
    id: "TJ",
    displayName: "Tadschikistan",
    regionId: "143",
    hasTimeZones: true
}, _8xa7293 = [ "dumengia", "glindesdi", "mardi", "mesemna", "gievgia", "venderdi", "sonda" ], _8xa7294 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _8xa7295 = {
    id: "002",
    displayName: "Africa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _8xa7296 = {
    id: "ZA",
    displayName: "Africa dal Sid",
    regionId: "018",
    hasTimeZones: true
}, _8xa7297 = {
    id: "SA",
    displayName: "Arabia Saudita",
    regionId: "145",
    hasTimeZones: true
}, _8xa7298 = {
    id: "KP",
    displayName: "Corea dal Nord",
    regionId: "030",
    hasTimeZones: true
}, _8xa7299 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _8xa7300 = {
    id: "NC",
    displayName: "Nova Caledonia",
    regionId: "054",
    hasTimeZones: true
}, _8xa7301 = {
    id: "BL",
    displayName: "Son Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _8xa7302 = {
    id: "TL",
    displayName: "Timor da l’Ost",
    regionId: "035",
    hasTimeZones: true
}, _8xa7303 = {
    relative: _8xa782
}, _8xa7304 = {
    id: "GF",
    displayName: "Guyana Franzosa",
    regionId: "005",
    hasTimeZones: true
}, _8xa7305 = {
    id: "HM",
    displayName: "Inslas da Heard e da McDonlad",
    hasTimeZones: false
}, _8xa7306 = {
    id: "009",
    displayName: "Oceania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _8xa7307 = {
    id: "AS",
    displayName: "Samoa Americana",
    regionId: "061",
    hasTimeZones: true
}, _8xa7308 = {
    id: "TF",
    displayName: "Territoris Franzos Meridiunals",
    hasTimeZones: true
}, _8xa7309 = {
    id: "WF",
    displayName: "Wallis e Futuna",
    regionId: "061",
    hasTimeZones: true
}, _8xa7310 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _8xa7311 = {
    id: "029",
    displayName: "Caribica",
    hasTimeZones: false,
    parentRegionId: "019"
}, _8xa7312 = {
    id: "AG",
    displayName: "Antigua e Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _8xa7313 = {
    id: "VA",
    displayName: "Citad dal Vatican",
    regionId: "039",
    hasTimeZones: true
}, _8xa7314 = {
    id: "054",
    displayName: "Melanesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _8xa7315 = {
    id: "PG",
    displayName: "Papua Nova Guinea",
    regionId: "054",
    hasTimeZones: true
}, _8xa7316 = {
    id: "061",
    displayName: "Polinesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _8xa7317 = {
    id: "CZ",
    displayName: "Republica Tscheca",
    regionId: "151",
    hasTimeZones: true
}, _8xa7318 = {
    id: "TT",
    displayName: "Trinidad e Tobago",
    regionId: "029",
    hasTimeZones: true
}, _8xa7319 = {
    id: "GQ",
    displayName: "Guinea Equatoriala",
    regionId: "017",
    hasTimeZones: true
}, _8xa7320 = {
    id: "MH",
    displayName: "Inslas da Marshall",
    regionId: "057",
    hasTimeZones: true
}, _8xa7321 = {
    id: "PF",
    displayName: "Polinesia Franzosa",
    regionId: "061",
    hasTimeZones: true
}, _8xa7322 = {
    id: "EH",
    displayName: "Sahara Occidentala",
    regionId: "015",
    hasTimeZones: true
}, _8xa7323 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _8xa7324 = {
    id: "AE",
    displayName: "Emirats Arabs Unids",
    regionId: "145",
    hasTimeZones: true
}, _8xa7325 = {
    id: "FK",
    displayName: "Inslas dal Falkland",
    regionId: "005",
    hasTimeZones: true
}, _8xa7326 = {
    id: "KN",
    displayName: "Saint Kitts e Nevis",
    regionId: "029",
    hasTimeZones: true
}, _8xa7327 = {
    id: "ST",
    displayName: "São Tomé e Principe",
    regionId: "017",
    hasTimeZones: true
}, _8xa7328 = {
    id: "034",
    displayName: "Asia dal Sid",
    hasTimeZones: false,
    parentRegionId: "142"
}, _8xa7329 = {
    id: "BA",
    displayName: "Bosnia ed Erzegovina",
    regionId: "039",
    hasTimeZones: true
}, _8xa7330 = {
    id: "DO",
    displayName: "Republica Dominicana",
    regionId: "029",
    hasTimeZones: true
}, _8xa7331 = {
    id: "SJ",
    displayName: "Svalbard e Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _8xa7332 = {
    id: "143",
    displayName: "Asia Centrala",
    hasTimeZones: false,
    parentRegionId: "142"
}, _8xa7333 = {
    id: "030",
    displayName: "Asia da l’Ost",
    hasTimeZones: false,
    parentRegionId: "142"
}, _8xa7334 = {
    id: "145",
    displayName: "Asia dal Vest",
    hasTimeZones: false,
    parentRegionId: "142"
}, _8xa7335 = {
    id: "TC",
    displayName: "Inslas Turks e Caicos",
    regionId: "029",
    hasTimeZones: true
}, _8xa7336 = {
    id: "IO",
    displayName: "Territori Britannic en l’Ocean Indic",
    hasTimeZones: true
}, _8xa7337 = {
    id: "PS",
    displayName: "Territori Palestinais",
    regionId: "145",
    hasTimeZones: true
}, _8xa7338 = {
    abbreviated: {
        am: "am",
        pm: "sm"
    },
    narrow: {
        am: "am",
        pm: "sm"
    },
    wide: {
        am: "am",
        pm: "sm"
    }
}, _8xa7339 = {
    id: "039",
    displayName: "Europa dal Sid",
    hasTimeZones: false,
    parentRegionId: "150"
}, _8xa7340 = {
    displayName: "ura",
    relativeTime: _8xa752
}, _8xa7341 = {
    id: "017",
    displayName: "Africa Centrala",
    hasTimeZones: false,
    parentRegionId: "002"
}, _8xa7342 = {
    id: "014",
    displayName: "Africa da l’Ost",
    hasTimeZones: false,
    parentRegionId: "002"
}, _8xa7343 = {
    id: "015",
    displayName: "Africa dal Nord",
    hasTimeZones: false,
    parentRegionId: "002"
}, _8xa7344 = {
    id: "011",
    displayName: "Africa dal Vest",
    hasTimeZones: false,
    parentRegionId: "002"
}, _8xa7345 = {
    id: "005",
    displayName: "America dal Sid",
    hasTimeZones: false,
    parentRegionId: "019"
}, _8xa7346 = {
    id: "035",
    displayName: "Asia dal Sidost",
    hasTimeZones: false,
    parentRegionId: "142"
}, _8xa7347 = {
    id: "154",
    displayName: "Europa dal Nord",
    hasTimeZones: false,
    parentRegionId: "150"
}, _8xa7348 = {
    id: "155",
    displayName: "Europa dal Vest",
    hasTimeZones: false,
    parentRegionId: "150"
}, _8xa7349 = {
    id: "PM",
    displayName: "Saint Pierre e Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _8xa7350 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _8xa7351 = {
    id: "013",
    displayName: "America Centrala",
    hasTimeZones: false,
    parentRegionId: "019"
}, _8xa7352 = {
    id: "151",
    displayName: "Europa Orientala",
    hasTimeZones: false,
    parentRegionId: "150"
}, _8xa7353 = {
    id: "MP",
    displayName: "Inslas Mariannas dal Nord",
    regionId: "057",
    hasTimeZones: true
}, _8xa7354 = {
    id: "CF",
    displayName: "Republica Centralafricana",
    regionId: "017",
    hasTimeZones: true
}, _8xa7355 = {
    id: "US",
    displayName: "Stadis Unids da l’America",
    regionId: "021",
    hasTimeZones: true
}, _8xa7356 = {
    d: "E, d. – E, d. MMM y",
    M: "E, d. MMM – E, d. MMM y",
    y: "E, d. MMM y – E, d. MMM y"
}, _8xa7357 = {
    id: "018",
    displayName: "Africa Meridiunala",
    hasTimeZones: false,
    parentRegionId: "002"
}, _8xa7358 = {
    id: "VI",
    displayName: "Inslas Verginas Americanas",
    regionId: "029",
    hasTimeZones: true
}, _8xa7359 = {
    id: "057",
    displayName: "Regiun Micronesica",
    hasTimeZones: false,
    parentRegionId: "009"
}, _8xa7360 = {
    id: "VG",
    displayName: "Inslas Verginas Britannicas",
    regionId: "029",
    hasTimeZones: true
}, _8xa7361 = {
    d: "E, dd.MM.y – E, dd.MM.y",
    M: "E, dd.MM.y – E, dd.MM.y",
    y: "E, dd.MM.y – E, dd.MM.y"
}, _8xa7362 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _8xa7363 = {
    displayName: "minuta",
    relativeTime: _8xa762
}, _8xa7364 = {
    id: "GS",
    displayName: "Georgia dal Sid e las Inslas Sandwich dal Sid",
    hasTimeZones: true
}, _8xa7365 = {
    id: "VC",
    displayName: "Saint Vincent e las Grenadinas",
    regionId: "029",
    hasTimeZones: true
}, _8xa7366 = {
    id: "CD",
    displayName: "Republica Democratica dal Congo",
    regionId: "017",
    hasTimeZones: true
}, _8xa7367 = {
    id: "053",
    displayName: "Australia e Nova Zelanda",
    hasTimeZones: false,
    parentRegionId: "009"
}, _8xa7368 = [ "schan.", "favr.", "mars", "avr.", "matg", "zercl.", "fan.", "avust", "sett.", "oct.", "nov.", "dec." ], _8xa7369 = {
    displayName: "secunda",
    relative: [ "now" ],
    relativeTime: _8xa753
}, _8xa7370 = {
    id: "UM",
    displayName: "Inslas pitschnas perifericas dals Stadis Unids da l’America",
    hasTimeZones: true
}, _8xa7371 = {
    id: "MO",
    displayName: "Regiun d’administraziun speziala Macao, China",
    regionId: "030",
    hasTimeZones: true
}, _8xa7372 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _8xa7373 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _8xa7374 = {
    id: "HK",
    displayName: "Regiun d’administraziun speziala da Hongkong, China",
    regionId: "030",
    hasTimeZones: true
}, _8xa7375 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _8xa7376 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _8xa7377 = [ "schaner", "favrer", "mars", "avrigl", "matg", "zercladur", "fanadur", "avust", "settember", "october", "november", "december" ], _8xa7378 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _8xa7379 = {
    id: "019",
    displayName: "America dal Nord, America Centrala ed America dal Sid",
    hasTimeZones: false,
    parentRegionId: "001"
}, _8xa7380 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _8xa7381 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _8xa7382 = {
    displayName: "onn",
    relative: _8xa746,
    relativeTime: _8xa748
}, _8xa7383 = {
    displayName: "emna",
    relative: _8xa747,
    relativeTime: _8xa750
}, _8xa7384 = {
    displayName: "mais",
    relative: _8xa758,
    relativeTime: _8xa749
}, _8xa7385 = {
    displayName: "Tag",
    relative: _8xa780,
    relativeTime: _8xa751
}, _8xa7386 = {
    displayName: "Quarter",
    relative: _8xa772,
    relativeTime: _8xa754
}, _8xa7387 = {
    abbreviated: _8xa770,
    narrow: [ "1", "2", "3", "4" ],
    wide: _8xa770
}, _8xa7388 = {
    decimal: ".",
    group: "’",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "−",
    exponential: "E",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    superscriptingExponent: "×",
    timeSeparator: ":"
}, _8xa7389 = {
    format: _8xa7338,
    standAlone: _8xa7338
}, _8xa7390 = {
    symbols: _8xa7388
}, _8xa7391 = {
    format: _8xa7294,
    numeric: _8xa73,
    standAlone: _8xa7294
}, _8xa7392 = {
    abbreviated: _8xa744,
    narrow: _8xa724,
    wide: _8xa7293,
    "short": _8xa744
}, _8xa7393 = {
    symbols: _8xa7388,
    digits: "renderSpelloutCardinal"
}, _8xa7394 = {
    "1000": {
        other: "0K"
    },
    "10000": {
        other: "00K"
    },
    "100000": {
        other: "000K"
    },
    "1000000": {
        other: "0M"
    },
    "10000000": {
        other: "00M"
    },
    "100000000": {
        other: "000M"
    },
    "1000000000": {
        other: "0G"
    },
    "10000000000": {
        other: "00G"
    },
    "100000000000": {
        other: "000G"
    },
    "1000000000000": {
        other: "0T"
    },
    "10000000000000": {
        other: "00T"
    },
    "100000000000000": {
        other: "000T"
    }
}, _8xa7395 = {
    symbols: _8xa7388,
    digits: "renderSpelloutCardinalFinancial"
}, _8xa7396 = {
    abbreviated: _8xa7310,
    narrow: _8xa766,
    wide: _8xa7310
}, _8xa7397 = {
    abbreviated: _8xa7323,
    narrow: _8xa7323,
    wide: _8xa7323
}, _8xa7398 = {
    format: _8xa7397
}, _8xa7399 = {
    abbreviated: _8xa7368,
    narrow: _8xa757,
    wide: _8xa7377
}, _8xa7400 = {
    abbreviated: _8xa7373,
    narrow: _8xa776,
    wide: _8xa7373
}, _8xa7401 = {
    abbreviated: _8xa7375,
    narrow: _8xa766,
    wide: _8xa7375
}, _8xa7402 = {
    abbreviated: _8xa7376,
    narrow: _8xa776,
    wide: _8xa7376
}, _8xa7403 = {
    abbreviated: _8xa7372,
    narrow: _8xa766,
    wide: _8xa7381
}, _8xa7404 = {
    abbreviated: _8xa7378,
    narrow: _8xa776,
    wide: _8xa7378
}, _8xa7405 = {
    abbreviated: _8xa7380,
    narrow: _8xa766,
    wide: _8xa7380
}, _8xa7406 = {
    format: _8xa7387,
    standAlone: _8xa7387
}, _8xa7407 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _8xa7408 = {
    fullDate: "EEEE, 'ils' d 'da' MMMM y G",
    longDate: "d 'da' MMMM y G",
    mediumDate: "dd-MM-y G",
    shortDate: "dd-MM-yy GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd-MM-yy GGGGG HH:mm",
    mediumDateTime: "dd-MM-y G HH:mm:ss",
    longDateTime: "d 'da' MMMM y G HH:mm:ss z",
    fullDateTime: "EEEE, 'ils' d 'da' MMMM y G HH:mm:ss zzzz"
}, _8xa7409 = {
    "1000": _8xa74,
    "10000": _8xa712,
    "100000": _8xa719,
    "1000000": _8xa75,
    "10000000": _8xa713,
    "100000000": _8xa720,
    "1000000000": _8xa76,
    "10000000000": _8xa714,
    "100000000000": _8xa721,
    "1000000000000": _8xa77,
    "10000000000000": _8xa715,
    "100000000000000": _8xa722
}, _8xa7410 = {
    format: _8xa7392,
    standAlone: _8xa7392
}, _8xa7411 = {
    format: _8xa7396,
    standAlone: _8xa7396
}, _8xa7412 = {
    "long": _8xa7394,
    "short": _8xa7394,
    "default": "#,##0.###"
}, _8xa7413 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _8xa7414 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _8xa7415 = {
    format: _8xa7399,
    standAlone: _8xa7399
}, _8xa7416 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _8xa7417 = {
    format: _8xa7403,
    standAlone: _8xa7403
}, _8xa7418 = {
    d: "d",
    Ed: "E d.",
    H: "H",
    HHmm: "HH:mm",
    HHmmss: "HH:mm:ss",
    Hm: "H:mm",
    M: "L",
    Md: "d.M.",
    MEd: "E, d.M.",
    MMd: "d.MM.",
    MMdd: "dd.MM.",
    MMM: "LLL",
    MMMd: "d. MMM",
    MMMEd: "E d. MMM",
    MMMMd: "d. MMMM",
    MMMMEd: "E d. MMMM",
    mmss: "mm:ss",
    ms: "mm:ss",
    y: "y",
    yM: "y-M",
    yMEd: "E, y-M-d",
    yMM: "MM.y",
    yMMdd: "dd.MM.y",
    yMMM: "MMM y",
    yMMMEd: "E, d. MMM y",
    yMMMM: "MMMM y",
    yQQQ: "QQQ y",
    yQQQQ: "QQQQ y",
    E: "ccc",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss",
    Gy: "G y",
    GyMMM: "G y MMM",
    GyMMMd: "G y MMM d",
    GyMMMEd: "G y MMM d, E",
    h: "h a",
    hm: "h:mm a",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    yyyy: "G y",
    yyyyM: "GGGGG y-MM",
    yyyyMd: "GGGGG y-MM-dd",
    yyyyMEd: "GGGGG y-MM-dd, E",
    yyyyMMM: "G y MMM",
    yyyyMMMd: "G y MMM d",
    yyyyMMMEd: "G y MMM d, E",
    yyyyMMMM: "G y MMMM",
    yyyyQQQ: "G y QQQ",
    yyyyQQQQ: "G y QQQQ"
}, _8xa7419 = {
    basic: _8xa7407,
    cldr: _8xa7413
}, _8xa7420 = {
    d: {
        d: "d–d"
    },
    h: _8xa78,
    H: {
        H: "HH–HH"
    },
    hm: _8xa768,
    Hm: _8xa736,
    hmv: _8xa779,
    Hmv: _8xa741,
    hv: _8xa723,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _8xa742,
    MEd: _8xa759,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _8xa728,
    MMMEd: _8xa760,
    y: {
        y: "U–U"
    },
    yM: _8xa737,
    yMd: _8xa7246,
    yMEd: _8xa7362,
    yMMM: _8xa738,
    yMMMd: _8xa775,
    yMMMEd: _8xa7350,
    yMMMM: _8xa743
}, _8xa7421 = {
    d: {
        d: "d.–d."
    },
    h: _8xa78,
    hm: _8xa768,
    hmv: _8xa779,
    hv: _8xa723,
    M: {
        M: "M.–M."
    },
    Md: _8xa745,
    MEd: _8xa769,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _8xa740,
    MMMEd: _8xa756,
    y: {
        y: "y–y"
    },
    yM: _8xa734,
    yMd: _8xa7245,
    yMEd: _8xa7361,
    yMMM: _8xa735,
    yMMMd: _8xa7117,
    yMMMEd: _8xa7356,
    yMMMM: _8xa727,
    H: {
        H: "HH–HH"
    },
    Hm: _8xa736,
    Hmv: _8xa741,
    Hv: {
        H: "HH–HH v"
    }
}, _8xa7422 = {
    basic: _8xa7408,
    cldr: _8xa7418
}, _8xa7423 = {
    beforeCurrency: _8xa7414,
    afterCurrency: _8xa7414
}, _8xa7424 = {
    "short": _8xa7409,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _8xa7423
}, _8xa7425 = {
    era: _8xa72,
    year: _8xa7382,
    month: _8xa7384,
    week: _8xa7383,
    day: _8xa7385,
    weekday: _8xa716,
    dayperiod: _8xa726,
    hour: _8xa7340,
    minute: _8xa7363,
    second: _8xa7369,
    zone: _8xa717,
    quarter: _8xa7386,
    sun: _8xa7118,
    mon: _8xa7119,
    tue: _8xa7228,
    wed: _8xa7303,
    thu: _8xa7271,
    fri: _8xa7120,
    sat: _8xa7272
}, _8xa7426 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _8xa7425
}, _8xa7427 = {
    abbreviated: _8xa7416,
    narrow: _8xa7416,
    wide: _8xa7416
}, _8xa7428 = {
    format: _8xa7427
}, _8xa7429 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _8xa7412,
    currency: _8xa7424,
    percent: _8xa71
}, _8xa7430 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _8xa7431 = {
    dateFormats: _8xa7422,
    datePartsOrder: "dmy",
    dateIntervalFormats: _8xa7421,
    dateIntervalFallbackFormat: "{0} - {1}",
    dayNames: _8xa7410,
    dayPeriods: _8xa7389,
    monthNames: _8xa7417,
    eraNames: _8xa731,
    quarterNames: _8xa7406,
    fields: _8xa7425
}, _8xa7432 = {
    dayParts: _8xa7398,
    days: _8xa7428,
    months: _8xa7428,
    years: _8xa7428,
    zodiacs: _8xa7398
}, _8xa7433 = {
    dateFormats: _8xa7419,
    datePartsOrder: "md",
    dateIntervalFormats: _8xa7420,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _8xa7410,
    dayPeriods: _8xa7389,
    cyclicNames: _8xa7432,
    monthNames: _8xa7411,
    monthPatterns: _8xa7391,
    quarterNames: _8xa7406,
    fields: _8xa7425
};

inter.id = "rm";

inter.delimiters = {
    quotationStart: "«",
    quotationEnd: "»",
    alternateQuotationStart: "‹",
    alternateQuotationEnd: "›"
};

inter.unitPatterns = {
    "long": {
        unit: {
            durationYear: _8xa729,
            durationMonth: _8xa732,
            durationWeek: _8xa739,
            durationDay: _8xa725,
            durationHour: _8xa730,
            durationMinute: {
                one: "{0} minuta",
                other: "{0} minutas"
            },
            durationSecond: {
                one: "{0} secunda",
                other: "{0} secundas"
            },
            durationMillisecond: {
                one: "{0} millisecunda",
                other: "{0} millisecundas"
            },
            lengthKilometer: {
                one: "{0} kilometer",
                other: "{0} kilometers"
            },
            lengthMeter: {
                one: "{0} meter",
                other: "{0} meters"
            },
            lengthCentimeter: {
                one: "{0} centimeter",
                other: "{0} centimeters"
            },
            lengthMillimeter: {
                one: "{0} millimeter",
                other: "{0} millimeters"
            },
            massKilogram: {
                one: "{0} kilogram",
                other: "{0} kilograms"
            },
            massGram: {
                one: "{0} gram",
                other: "{0} grams"
            },
            speedKilometerPerHour: {
                one: "{0} kilometer per ura",
                other: "{0} kilometers per ura"
            },
            temperatureCelsius: {
                one: "{0} grad celsius",
                other: "{0} grads celsius"
            },
            volumeLiter: {
                one: "{0} liter",
                other: "{0} liters"
            }
        }
    },
    "short": {
        unit: {
            durationYear: _8xa729,
            durationMonth: _8xa732,
            durationWeek: _8xa739,
            durationDay: _8xa725,
            durationHour: _8xa730,
            durationMinute: {
                one: "{0} min.",
                other: "{0} mins."
            },
            durationSecond: {
                one: "{0} sec.",
                other: "{0} secs."
            },
            durationMillisecond: {
                one: "{0} ms",
                other: "{0} ms"
            },
            lengthKilometer: {
                one: "{0} km",
                other: "{0} km"
            },
            lengthMeter: {
                one: "{0} m",
                other: "{0} m"
            },
            lengthCentimeter: {
                one: "{0} cm",
                other: "{0} cm"
            },
            lengthMillimeter: {
                one: "{0} mm",
                other: "{0} mm"
            },
            massKilogram: _8xa718,
            massGram: _8xa710,
            speedKilometerPerHour: _8xa733,
            temperatureCelsius: {
                one: "{0} °C",
                other: "{0} °C"
            },
            volumeLiter: _8xa711,
            accelerationGForce: {
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                other: "{0} m/s²"
            },
            angleRevolution: {
                other: "{0} rev"
            },
            angleRadian: {
                other: "{0} rad"
            },
            angleDegree: {
                other: "{0}°"
            },
            angleArcMinute: {
                other: "{0}′"
            },
            angleArcSecond: {
                other: "{0}″"
            },
            areaSquareKilometer: {
                other: "{0} km²"
            },
            areaHectare: {
                other: "{0} ha"
            },
            areaSquareMeter: {
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                other: "{0} cm²"
            },
            areaSquareMile: {
                other: "{0} mi²"
            },
            areaAcre: {
                other: "{0} ac"
            },
            areaSquareYard: {
                other: "{0} yd²"
            },
            areaSquareFoot: {
                other: "{0} ft²"
            },
            areaSquareInch: {
                other: "{0} in²"
            },
            concentrKarat: {
                other: "{0} kt"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionLiterPerKilometer: {
                other: "{0} L/km"
            },
            "consumptionLiterPer-100kilometers": {
                other: "{0} L/100km"
            },
            consumptionMilePerGallon: {
                other: "{0} mpg US"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            digitalTerabyte: {
                other: "{0} TB"
            },
            digitalTerabit: {
                other: "{0} Tb"
            },
            digitalGigabyte: {
                other: "{0} GB"
            },
            digitalGigabit: {
                other: "{0} Gb"
            },
            digitalMegabyte: {
                other: "{0} MB"
            },
            digitalMegabit: {
                other: "{0} Mb"
            },
            digitalKilobyte: {
                other: "{0} kB"
            },
            digitalKilobit: {
                other: "{0} kb"
            },
            digitalByte: {
                other: "{0} byte"
            },
            digitalBit: {
                other: "{0} bit"
            },
            durationCentury: {
                other: "{0} c"
            },
            durationMicrosecond: {
                other: "{0} μs"
            },
            durationNanosecond: {
                other: "{0} ns"
            },
            electricAmpere: {
                other: "{0} A"
            },
            electricMilliampere: {
                other: "{0} mA"
            },
            electricOhm: {
                other: "{0} Ω"
            },
            electricVolt: {
                other: "{0} V"
            },
            energyKilocalorie: {
                other: "{0} kcal"
            },
            energyCalorie: {
                other: "{0} cal"
            },
            energyFoodcalorie: {
                other: "{0} Cal"
            },
            energyKilojoule: {
                other: "{0} kJ"
            },
            energyJoule: {
                other: "{0} J"
            },
            energyKilowattHour: {
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                other: "{0} kHz"
            },
            frequencyHertz: {
                other: "{0} Hz"
            },
            lengthDecimeter: {
                other: "{0} dm"
            },
            lengthMicrometer: {
                other: "{0} µm"
            },
            lengthNanometer: {
                other: "{0} nm"
            },
            lengthPicometer: {
                other: "{0} pm"
            },
            lengthMile: {
                other: "{0} mi"
            },
            lengthYard: {
                other: "{0} yd"
            },
            lengthFoot: {
                other: "{0} ft"
            },
            lengthInch: {
                other: "{0} in"
            },
            lengthParsec: {
                other: "{0} pc"
            },
            lengthLightYear: {
                other: "{0} ly"
            },
            lengthAstronomicalUnit: {
                other: "{0} au"
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            lengthNauticalMile: {
                other: "{0} nmi"
            },
            lengthMileScandinavian: {
                other: "{0} smi"
            },
            lightLux: {
                other: "{0} lx"
            },
            massMetricTon: {
                other: "{0} t"
            },
            massMilligram: {
                other: "{0} mg"
            },
            massMicrogram: {
                other: "{0} µg"
            },
            massTon: {
                other: "{0} tn"
            },
            massStone: {
                other: "{0} st"
            },
            massPound: {
                other: "{0} lb"
            },
            massOunce: {
                other: "{0} oz"
            },
            massOunceTroy: {
                other: "{0} oz t"
            },
            massCarat: {
                other: "{0} CD"
            },
            powerGigawatt: {
                other: "{0} GW"
            },
            powerMegawatt: {
                other: "{0} MW"
            },
            powerKilowatt: {
                other: "{0} kW"
            },
            powerWatt: {
                other: "{0} W"
            },
            powerMilliwatt: {
                other: "{0} mW"
            },
            powerHorsepower: {
                other: "{0} hp"
            },
            pressureHectopascal: {
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                other: "{0} psi"
            },
            pressureInchHg: {
                other: "{0} inHg"
            },
            pressureMillibar: {
                other: "{0} mbar"
            },
            speedMeterPerSecond: {
                other: "{0} m/s"
            },
            speedMilePerHour: {
                other: "{0} mi/h"
            },
            speedKnot: {
                other: "{0} kn"
            },
            temperatureGeneric: {
                other: "{0}°"
            },
            temperatureFahrenheit: {
                other: "{0}°F"
            },
            temperatureKelvin: {
                other: "{0} K"
            },
            volumeCubicKilometer: {
                other: "{0} km³"
            },
            volumeCubicMeter: {
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                other: "{0} cm³"
            },
            volumeCubicMile: {
                other: "{0} mi³"
            },
            volumeCubicYard: {
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                other: "{0} ft³"
            },
            volumeCubicInch: {
                other: "{0} in³"
            },
            volumeMegaliter: {
                other: "{0} ML"
            },
            volumeHectoliter: {
                other: "{0} hL"
            },
            volumeDeciliter: {
                other: "{0} dL"
            },
            volumeCentiliter: {
                other: "{0} cL"
            },
            volumeMilliliter: {
                other: "{0} mL"
            },
            volumePintMetric: {
                other: "{0} mpt"
            },
            volumeCupMetric: {
                other: "{0} mc"
            },
            volumeAcreFoot: {
                other: "{0} ac ft"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallon: {
                other: "{0} gal US"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            },
            volumeQuart: {
                other: "{0} qt"
            },
            volumePint: {
                other: "{0} pt"
            },
            volumeCup: {
                other: "{0} c"
            },
            volumeFluidOunce: {
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                other: "{0} tbsp"
            },
            volumeTeaspoon: {
                other: "{0} tsp"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            durationYear: {
                one: "{0} onns",
                other: "{0} onns"
            },
            durationMonth: _8xa732,
            durationWeek: {
                one: "{0} emnas",
                other: "{0} emnas"
            },
            durationDay: {
                one: "{0} dis",
                other: "{0} dis"
            },
            durationHour: {
                one: "{0} uras",
                other: "{0} uras"
            },
            durationMinute: {
                one: "{0} mins.",
                other: "{0} mins."
            },
            durationSecond: {
                one: "{0} secs.",
                other: "{0} secs."
            },
            durationMillisecond: {
                one: "{0}ms",
                other: "{0}ms"
            },
            lengthKilometer: {
                one: "{0}km",
                other: "{0}km"
            },
            lengthMeter: {
                one: "{0}m",
                other: "{0}m"
            },
            lengthCentimeter: {
                one: "{0}cm",
                other: "{0}cm"
            },
            lengthMillimeter: {
                one: "{0}mm",
                other: "{0}mm"
            },
            massKilogram: _8xa718,
            massGram: _8xa710,
            speedKilometerPerHour: _8xa733,
            temperatureCelsius: {
                one: "{0}°C",
                other: "{0}°C"
            },
            volumeLiter: _8xa711
        }
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "à", "b", "c", "d", "e", "é", "è", "f", "g", "h", "i", "ì", "j", "k", "l", "m", "n", "o", "ò", "p", "q", "r", "s", "t", "u", "ù", "v", "w", "x", "y", "z" ],
        auxiliary: [ "á", "ă", "â", "å", "ä", "ā", "æ", "ç", "ĕ", "ê", "ë", "ē", "í", "ĭ", "î", "ï", "ī", "ñ", "ó", "ŏ", "ô", "ö", "ø", "ō", "œ", "ú", "ŭ", "û", "ü", "ū", "ÿ" ],
        index: [ "A", "À", "B", "C", "D", "E", "É", "È", "F", "G", "H", "I", "Ì", "J", "K", "L", "M", "N", "O", "Ò", "P", "Q", "R", "S", "T", "U", "Ù", "V", "W", "X", "Y", "Z" ],
        punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "(", ")", "\\[", "\\]", "\\{", "\\}" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _8xa7388,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _8xa7429,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _8xa7429,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _8xa7388,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _8xa7388,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _8xa7388,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _8xa7388,
        digits: "renderEthiopic"
    },
    finance: _8xa7390,
    fullwide: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _8xa7388,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _8xa7388,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _8xa7388,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _8xa7388,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _8xa7393,
    hansfin: _8xa7395,
    hant: _8xa7393,
    hantfin: _8xa7395,
    hebr: {
        symbols: _8xa7388,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _8xa7388,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _8xa7393,
    jpanfin: _8xa7395,
    kali: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _8xa7388,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _8xa7388,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _8xa7388,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _8xa7388,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _8xa7388,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _8xa7388,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _8xa7388,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _8xa7388,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _8xa7390,
    nkoo: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _8xa7388,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _8xa7388,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _8xa7388,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _8xa7388,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _8xa7388,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _8xa7388,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _8xa7390,
    vaii: {
        symbols: _8xa7388,
        formats: _8xa7429,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _8xa7388,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _8xa7422,
        datePartsOrder: "dmy",
        dateIntervalFormats: _8xa7421,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _8xa7410,
        dayPeriods: _8xa7389,
        monthNames: _8xa7415,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _8xa7406,
        fields: _8xa7425
    },
    chinese: _8xa7433,
    coptic: {
        dateFormats: _8xa7422,
        datePartsOrder: "dmy",
        dateIntervalFormats: _8xa7421,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _8xa7410,
        dayPeriods: _8xa7389,
        monthNames: {
            format: _8xa7402,
            standAlone: _8xa7402
        },
        eraNames: _8xa761,
        quarterNames: _8xa7406,
        fields: _8xa7425
    },
    dangi: _8xa7433,
    ethioaa: _8xa7426,
    ethiopic: {
        dateFormats: _8xa7422,
        datePartsOrder: "dmy",
        dateIntervalFormats: _8xa7421,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _8xa7410,
        dayPeriods: _8xa7389,
        monthNames: {
            format: _8xa7404,
            standAlone: _8xa7404
        },
        eraNames: _8xa761,
        quarterNames: _8xa7406,
        fields: _8xa7425
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, 'ils' d 'da' MMMM y",
                longDate: "d 'da' MMMM y",
                mediumDate: "dd-MM-y",
                shortDate: "dd-MM-yy",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "dd-MM-yy HH:mm",
                mediumDateTime: "dd-MM-y HH:mm:ss",
                longDateTime: "d 'da' MMMM y HH:mm:ss z",
                fullDateTime: "EEEE, 'ils' d 'da' MMMM y HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                Ed: "E d.",
                H: "H",
                HHmm: "HH:mm",
                HHmmss: "HH:mm:ss",
                Hm: "H:mm",
                M: "L",
                Md: "d.M.",
                MEd: "E, d.M.",
                MMd: "d.MM.",
                MMdd: "dd.MM.",
                MMM: "LLL",
                MMMd: "d. MMM",
                MMMEd: "E d. MMM",
                MMMMd: "d. MMMM",
                MMMMEd: "E d. MMMM",
                mmss: "mm:ss",
                ms: "mm:ss",
                y: "y",
                yM: "y-M",
                yMEd: "E, y-M-d",
                yMM: "MM.y",
                yMMdd: "dd.MM.y",
                yMMM: "MMM y",
                yMMMEd: "E, d. MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y",
                E: "ccc",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                hm: "h:mm a",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                yMd: "y-MM-dd",
                yMMMd: "y MMM d"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: _8xa7421,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _8xa7410,
        dayPeriods: _8xa7389,
        monthNames: _8xa7415,
        eraNames: {
            wide: [ "avant Cristus", "suenter Cristus" ],
            abbreviated: [ "av. Cr.", "s. Cr." ]
        },
        quarterNames: _8xa7406,
        fields: _8xa7425
    },
    hebrew: {
        dateFormats: _8xa7422,
        datePartsOrder: "dmy",
        dateIntervalFormats: _8xa7421,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _8xa7410,
        dayPeriods: _8xa7389,
        monthNames: {
            format: _8xa7400,
            standAlone: _8xa7400
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _8xa7406,
        fields: _8xa7425
    },
    indian: {
        dateFormats: _8xa7422,
        datePartsOrder: "dmy",
        dateIntervalFormats: _8xa7421,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _8xa7410,
        dayPeriods: _8xa7389,
        monthNames: {
            format: _8xa7405,
            standAlone: _8xa7405
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _8xa7406,
        fields: _8xa7425
    },
    islamic: _8xa7431,
    "islamic-umalqura": _8xa7431,
    "islamic-tbla": _8xa7431,
    "islamic-civil": _8xa7431,
    "islamic-rgsa": _8xa7431,
    iso8601: _8xa7426,
    japanese: {
        dateFormats: _8xa7422,
        datePartsOrder: "dmy",
        dateIntervalFormats: _8xa7421,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _8xa7410,
        dayPeriods: _8xa7389,
        monthNames: _8xa7415,
        eraNames: {
            wide: _8xa7430,
            abbreviated: _8xa7430
        },
        quarterNames: _8xa7406,
        fields: _8xa7425
    },
    persian: {
        dateFormats: _8xa7422,
        datePartsOrder: "dmy",
        dateIntervalFormats: _8xa7421,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _8xa7410,
        dayPeriods: _8xa7389,
        monthNames: {
            format: _8xa7401,
            standAlone: _8xa7401
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _8xa7406,
        fields: _8xa7425
    },
    roc: {
        dateFormats: _8xa7422,
        datePartsOrder: "dmy",
        dateIntervalFormats: _8xa7421,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _8xa7410,
        dayPeriods: _8xa7389,
        monthNames: _8xa7415,
        eraNames: {
            wide: _8xa79,
            abbreviated: _8xa79
        },
        quarterNames: _8xa7406,
        fields: _8xa7425
    },
    islamicc: _8xa7426
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat({
    id: "Pacific/Niue",
    regionId: "061",
    utcStandardOffsetSeconds: -39600,
    displayName: "Alofi",
    countryId: "NU"
}, P.timeZones[0], P.timeZones.slice(2, 8), {
    id: "America/Anchorage",
    regionId: "021",
    utcStandardOffsetSeconds: -32400,
    displayName: "Alasca",
    countryId: "US"
}, P.timeZones.slice(10, 13), {
    id: "Pacific/Gambier",
    regionId: "061",
    utcStandardOffsetSeconds: -32400,
    displayName: "Rikitea",
    countryId: "PF"
}, P.timeZones.slice(13, 30), {
    id: "America/Mazatlan",
    regionId: "013",
    utcStandardOffsetSeconds: -25200,
    displayName: "Mazatlán",
    countryId: "MX"
}, P.timeZones.slice(31, 35), {
    id: "America/Belize",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Belmopan",
    countryId: "BZ"
}, P.timeZones[36], P.timeZones.slice(38, 40), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Citad da Mexico",
    countryId: "MX"
}, {
    id: "Pacific/Galapagos",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Galápagos",
    countryId: "EC"
}, P.timeZones[44], {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Insla da Pasca",
    countryId: "CL"
}, {
    id: "America/Indiana/Knox",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Knox",
    countryId: "US"
}, P.timeZones.slice(46, 49), P.timeZones[51], {
    id: "America/Merida",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mérida",
    countryId: "MX"
}, {
    id: "America/North_Dakota/Center",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "North Dakota (Central)",
    countryId: "US"
}, {
    id: "America/North_Dakota/New_Salem",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "North Dakota (New Salem)",
    countryId: "US"
}, P.timeZones.slice(53, 57), {
    id: "America/El_Salvador",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Salvador",
    countryId: "SV"
}, {
    id: "America/Costa_Rica",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "San José",
    countryId: "CR"
}, P.timeZones.slice(57, 59), {
    id: "America/Indiana/Tell_City",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Tell City",
    countryId: "US"
}, P.timeZones.slice(60, 63), {
    id: "America/Cancun",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Cancún",
    countryId: "MX"
}, {
    id: "America/Grand_Turk",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Cockburn Town",
    countryId: "TC"
}, P.timeZones[65], {
    id: "America/Eirunepe",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Eirunepé",
    countryId: "BR"
}, {
    id: "America/Jamaica",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Giamaica",
    countryId: "JM"
}, P.timeZones.slice(68, 71), {
    id: "America/Cayman",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Inslas Cayman",
    countryId: "KY"
}, P.timeZones[71], P.timeZones.slice(73, 75), {
    id: "America/Indiana/Marengo",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Marengo",
    countryId: "US"
}, {
    id: "America/Kentucky/Monticello",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Monticello",
    countryId: "US"
}, P.timeZones.slice(77, 80), {
    id: "America/Indiana/Petersburg",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Petersburg",
    countryId: "US"
}, P.timeZones.slice(81, 84), {
    id: "America/Indiana/Vevay",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Vevay",
    countryId: "US"
}, {
    id: "America/Indiana/Vincennes",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Vincennes",
    countryId: "US"
}, {
    id: "America/Indiana/Winamac",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Winamac",
    countryId: "US"
}, P.timeZones[88], {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones[91], {
    id: "America/Guadeloupe",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Basse-Terre",
    countryId: "GP"
}, {
    id: "Atlantic/Bermuda",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Bermudas",
    countryId: "BM"
}, P.timeZones.slice(93, 95), {
    id: "America/Montserrat",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Brades",
    countryId: "MS"
}, P.timeZones.slice(95, 97), {
    id: "America/Cuiaba",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Cuiabá",
    countryId: "BR"
}, {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 103), P.timeZones.slice(104, 113), {
    id: "America/Aruba",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Oranjestad",
    countryId: "AW"
}, {
    id: "America/Port_of_Spain",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Port-of-Spain",
    countryId: "TT"
}, P.timeZones.slice(115, 117), {
    id: "America/Tortola",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Road Town",
    countryId: "VG"
}, {
    id: "America/St_Kitts",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Kitts",
    countryId: "KN"
}, {
    id: "America/St_Thomas",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Thomas",
    countryId: "VI"
}, {
    id: "America/St_Vincent",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Vincent",
    countryId: "VC"
}, {
    id: "America/St_Lucia",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Santa Lucia",
    countryId: "LC"
}, P.timeZones.slice(117, 120), {
    id: "America/Anguilla",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "The Valley",
    countryId: "AI"
}, P.timeZones[124], {
    id: "America/St_Johns",
    regionId: "021",
    utcStandardOffsetSeconds: -12600,
    displayName: "Saint John’s",
    countryId: "CA"
}, {
    id: "America/Araguaina",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Araguaína",
    countryId: "BR"
}, P.timeZones[128], {
    id: "America/Belem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Belém",
    countryId: "BR"
}, P.timeZones.slice(130, 139), P.timeZones.slice(140, 143), {
    id: "Atlantic/Stanley",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Port Stanley",
    countryId: "FK"
}, P.timeZones.slice(143, 147), {
    id: "America/Miquelon",
    regionId: "021",
    utcStandardOffsetSeconds: -10800,
    displayName: "Saint Pierre",
    countryId: "PM"
}, P.timeZones[147], {
    id: "America/Argentina/San_Juan",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "San Juan, Argentinia",
    countryId: "AR"
}, P.timeZones.slice(149, 151), {
    id: "America/Sao_Paulo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "São Paulo",
    countryId: "BR"
}, {
    id: "America/Argentina/Tucuman",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Tucumán",
    countryId: "AR"
}, {
    id: "America/Argentina/Ushuaia",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Ushuaïa",
    countryId: "AR"
}, {
    id: "America/Noronha",
    regionId: "005",
    utcStandardOffsetSeconds: -7200,
    displayName: "Fernando de Noronha",
    countryId: "BR"
}, {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Georgia dal Sid",
    countryId: "GS"
}, P.timeZones[156], {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azoras",
    countryId: "PT"
}, {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Cap Verd",
    countryId: "CV"
}, P.timeZones.slice(160, 166), P.timeZones.slice(167, 170), {
    id: "Europe/Isle_of_Man",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Douglas",
    countryId: "IM"
}, P.timeZones.slice(170, 173), {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Inslas Canarias",
    countryId: "ES"
}, {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lissabon",
    countryId: "PT"
}, {
    id: "Africa/Lome",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Lomé",
    countryId: "TG"
}, {
    id: "Europe/London",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Londra",
    countryId: "GB"
}, P.timeZones.slice(179, 184), {
    id: "Europe/Jersey",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Saint Helier",
    countryId: "JE"
}, {
    id: "Europe/Guernsey",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Saint Peter Port",
    countryId: "GG"
}, {
    id: "Atlantic/St_Helena",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Sontg’elena",
    countryId: "SH"
}, {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Algier",
    countryId: "DZ"
}, P.timeZones.slice(188, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bruxelles",
    countryId: "BE"
}, P.timeZones.slice(196, 200), {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Citad dal Vatican",
    countryId: "VA"
}, {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Copenhaghen",
    countryId: "DK"
}, P.timeZones[201], {
    id: "Africa/El_Aaiun",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "El Ayun",
    countryId: "EH"
}, P.timeZones.slice(203, 210), {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luxemburg",
    countryId: "LU"
}, P.timeZones.slice(211, 222), {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Roma",
    countryId: "IT"
}, P.timeZones.slice(223, 227), {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, P.timeZones[228], {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Turitg",
    countryId: "CH"
}, P.timeZones[229], {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Varsovia",
    countryId: "PL"
}, P.timeZones[231], P.timeZones[233], {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Athen",
    countryId: "GR"
}, P.timeZones.slice(236, 238), {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bucarest",
    countryId: "RO"
}, P.timeZones.slice(239, 252), {
    id: "Africa/Khartoum",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Khartum",
    countryId: "SD"
}, P.timeZones.slice(253, 268), {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Addis Abeba",
    countryId: "ET"
}, P.timeZones.slice(269, 273), {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdad",
    countryId: "IQ"
}, P.timeZones[274], {
    id: "Indian/Comoro",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Comoras",
    countryId: "KM"
}, P.timeZones[276], {
    id: "Africa/Dar_es_Salaam",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Daressalam",
    countryId: "TZ"
}, {
    id: "Africa/Djibouti",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Dschibuti",
    countryId: "DJ"
}, P.timeZones.slice(279, 285), {
    id: "Africa/Mogadishu",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Mogadischu",
    countryId: "SO"
}, {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moscau",
    countryId: "RU"
}, P.timeZones.slice(287, 289), {
    id: "Asia/Riyadh",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Riyad",
    countryId: "SA"
}, {
    id: "Antarctica/Syowa",
    utcStandardOffsetSeconds: 10800,
    displayName: "Showa",
    countryId: "AQ"
}, P.timeZones[290], P.timeZones[292], {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Teheran",
    countryId: "IR"
}, P.timeZones.slice(294, 297), {
    id: "Asia/Yerevan",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Jerevan",
    countryId: "AM"
}, P.timeZones[297], {
    id: "Asia/Muscat",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Mascate",
    countryId: "OM"
}, P.timeZones[298], {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Réunion",
    countryId: "RE"
}, P.timeZones.slice(301, 305), P.timeZones.slice(306, 308), {
    id: "Asia/Aqtobe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aqtöbe",
    countryId: "KZ"
}, P.timeZones[310], {
    id: "Asia/Ashgabat",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aşgabat",
    countryId: "TM"
}, {
    id: "Asia/Dushanbe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Duschanbe",
    countryId: "TJ"
}, {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Jekaterinburg",
    countryId: "RU"
}, {
    id: "Asia/Karachi",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Karatschi",
    countryId: "PK"
}, {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Maldivas",
    countryId: "MV"
}, P.timeZones.slice(315, 317), {
    id: "Indian/Kerguelen",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Port-aux-Français",
    countryId: "TF"
}, P.timeZones[317], {
    id: "Asia/Samarkand",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Samarcanda",
    countryId: "UZ"
}, {
    id: "Asia/Tashkent",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Taschkent",
    countryId: "UZ"
}, P.timeZones.slice(321, 325), {
    id: "Asia/Bishkek",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Bischkek",
    countryId: "KG"
}, P.timeZones[327], {
    id: "Indian/Chagos",
    utcStandardOffsetSeconds: 21600,
    displayName: "Diego Garcia",
    countryId: "IO"
}, P.timeZones.slice(328, 331), P.timeZones[332], {
    id: "Asia/Urumqi",
    regionId: "030",
    utcStandardOffsetSeconds: 21600,
    displayName: "Ürümqi",
    countryId: "CN"
}, {
    id: "Indian/Cocos",
    utcStandardOffsetSeconds: 23400,
    displayName: "West Island",
    countryId: "CC"
}, P.timeZones.slice(334, 337), P.timeZones[338], {
    id: "Indian/Christmas",
    utcStandardOffsetSeconds: 25200,
    displayName: "Flying Fish Cove",
    countryId: "CX"
}, P.timeZones.slice(339, 342), {
    id: "Asia/Krasnoyarsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Krasnojarsk",
    countryId: "RU"
}, P.timeZones[343], {
    id: "Asia/Novosibirsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Nowosibirsk",
    countryId: "RU"
}, P.timeZones.slice(345, 349), {
    id: "Asia/Brunei",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Bandar Seri Begawan",
    countryId: "BN"
}, {
    id: "Asia/Hong_Kong",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Hongkong",
    countryId: "HK"
}, P.timeZones.slice(352, 355), {
    id: "Asia/Macau",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Macao",
    countryId: "MO"
}, {
    id: "Asia/Makassar",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Macassar",
    countryId: "ID"
}, P.timeZones.slice(357, 360), {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Singapur",
    countryId: "SG"
}, P.timeZones[361], {
    id: "Asia/Choibalsan",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Tschoibalsan",
    countryId: "MN"
}, P.timeZones.slice(362, 366), {
    id: "Asia/Yakutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jakutsk",
    countryId: "RU"
}, P.timeZones.slice(366, 368), {
    id: "Pacific/Palau",
    regionId: "057",
    utcStandardOffsetSeconds: 32400,
    displayName: "Melekok",
    countryId: "PW"
}, P.timeZones[369], {
    id: "Asia/Seoul",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Seul",
    countryId: "KR"
}, {
    id: "Asia/Tokyo",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tokio",
    countryId: "JP"
}, P.timeZones.slice(373, 379), {
    id: "Pacific/Guam",
    regionId: "057",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Hagåtña",
    countryId: "GU"
}, P.timeZones.slice(380, 393), {
    id: "Pacific/Guadalcanal",
    regionId: "054",
    utcStandardOffsetSeconds: 39600,
    displayName: "Honiara",
    countryId: "SB"
}, {
    id: "Pacific/Norfolk",
    regionId: "053",
    utcStandardOffsetSeconds: 39600,
    displayName: "Kingston",
    countryId: "NF"
}, P.timeZones[395], {
    id: "Pacific/Noumea",
    regionId: "054",
    utcStandardOffsetSeconds: 39600,
    displayName: "Nouméa",
    countryId: "NC"
}, P.timeZones[398], {
    id: "Asia/Sakhalin",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Sachalin",
    countryId: "RU"
}, P.timeZones[400], {
    id: "Pacific/Kosrae",
    regionId: "057",
    utcStandardOffsetSeconds: 39600,
    displayName: "Tofol",
    countryId: "FM"
}, P.timeZones.slice(401, 403), {
    id: "Pacific/Fiji",
    regionId: "054",
    utcStandardOffsetSeconds: 43200,
    displayName: "Fidschi",
    countryId: "FJ"
}, P.timeZones[404], {
    id: "Asia/Kamchatka",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Kamtschatka",
    countryId: "RU"
}, P.timeZones[406], {
    id: "Antarctica/McMurdo",
    utcStandardOffsetSeconds: 43200,
    displayName: "Mac Murdo",
    countryId: "AQ"
}, P.timeZones[407], {
    id: "Pacific/Wallis",
    regionId: "061",
    utcStandardOffsetSeconds: 43200,
    displayName: "Matāʻutu",
    countryId: "WF"
}, {
    id: "Pacific/Tarawa",
    regionId: "057",
    utcStandardOffsetSeconds: 43200,
    displayName: "South Tarawa",
    countryId: "KI"
}, P.timeZones[411], {
    id: "Pacific/Nauru",
    regionId: "057",
    utcStandardOffsetSeconds: 43200,
    displayName: "Yaren",
    countryId: "NR"
}, P.timeZones.slice(413, 417), {
    id: "Pacific/Tongatapu",
    regionId: "061",
    utcStandardOffsetSeconds: 46800,
    displayName: "Nukuʻalofa",
    countryId: "TO"
}, P.timeZones[418]);

inter.territories = [ _8xa7262, _8xa7295, _8xa7341, _8xa7357, _8xa7342, _8xa7343, _8xa7296, _8xa7344, _8xa7152, _8xa7153, _8xa7351, _8xa7379, _8xa7345, _8xa7154, _8xa7121, _8xa7195, _8xa767, _8xa7312, _8xa7297, _8xa7247, _8xa7155, _8xa793, _8xa7284, _8xa7273, _8xa7332, _8xa7333, _8xa7328, _8xa7346, _8xa7334, _8xa7229, _8xa7367, _8xa7156, _8xa7157, _8xa7158, _8xa7263, _8xa7196, _8xa7122, _8xa7123, _8xa794, _8xa7197, _8xa7124, _8xa7264, _8xa7159, _8xa7329, _8xa7198, _8xa7160, _8xa7125, _8xa7199, _8xa7274, _8xa7161, _8xa7248, _8xa7162, _8xa7126, _8xa7200, _8xa7311, _8xa795, _8xa796, _8xa797, _8xa7313, _8xa7201, _8xa7163, _8xa798, _8xa7298, _8xa7285, _8xa7249, _8xa7275, _8xa7164, _8xa783, _8xa7202, _8xa7203, _8xa7230, _8xa7165, _8xa7127, _8xa7265, _8xa7324, _8xa7166, _8xa7167, _8xa7168, _8xa7299, _8xa7352, _8xa7347, _8xa7339, _8xa7348, _8xa7169, _8xa7250, _8xa7204, _8xa7231, _8xa799, _8xa7128, _8xa7170, _8xa7364, _8xa7205, _8xa7100, _8xa7206, _8xa7129, _8xa7232, _8xa7171, _8xa7130, _8xa7233, _8xa7251, _8xa784, _8xa7234, _8xa7207, _8xa7131, _8xa7319, _8xa7286, _8xa7132, _8xa7304, _8xa7101, _8xa7208, _8xa7102, _8xa7235, _8xa774, _8xa7287, _8xa781, _8xa7276, _8xa7277, _8xa7288, _8xa771, _8xa7266, _8xa7278, _8xa7353, _8xa7335, _8xa7358, _8xa7360, _8xa7305, _8xa7320, _8xa7325, _8xa7370, _8xa785, _8xa786, _8xa7172, _8xa7173, _8xa7133, _8xa7134, _8xa7103, _8xa7135, _8xa7209, _8xa7252, _8xa7104, _8xa7105, _8xa7279, _8xa7210, _8xa7136, _8xa787, _8xa7174, _8xa7211, _8xa7175, _8xa7176, _8xa7106, _8xa7289, _8xa7212, _8xa7236, _8xa7237, _8xa7253, _8xa7213, _8xa7137, _8xa7214, _8xa788, _8xa7107, _8xa7108, _8xa7254, _8xa7255, _8xa7238, _8xa7177, _8xa7314, _8xa7138, _8xa7256, _8xa7215, _8xa7139, _8xa7216, _8xa7257, _8xa7258, _8xa7217, _8xa7178, _8xa7179, _8xa7109, _8xa7110, _8xa7239, _8xa7111, _8xa7180, _8xa789, _8xa7218, _8xa7300, _8xa7280, _8xa7306, {
    id: "QO",
    displayName: "Oceania Periferica",
    regionId: "009",
    hasTimeZones: false
}, _8xa790, _8xa7267, _8xa7219, _8xa7112, _8xa7140, _8xa7315, _8xa7220, _8xa791, _8xa7221, _8xa7316, _8xa7321, _8xa7181, _8xa7222, _8xa7268, _8xa7290, _8xa7359, _8xa7371, _8xa7374, _8xa7354, _8xa7366, _8xa7330, _8xa7317, _8xa7141, _8xa7182, _8xa7142, _8xa7183, _8xa7322, _8xa7326, _8xa7269, _8xa7281, _8xa7349, _8xa7365, _8xa7240, _8xa7143, _8xa7113, _8xa7307, _8xa7259, _8xa7184, _8xa7144, _8xa7260, _8xa7282, _8xa7223, _8xa7224, _8xa7114, _8xa7241, _8xa7225, _8xa7185, _8xa7301, _8xa7270, _8xa7145, _8xa7242, _8xa7355, _8xa7115, _8xa7291, _8xa7186, _8xa7331, _8xa7146, _8xa7147, _8xa7243, _8xa7327, _8xa7292, _8xa7226, _8xa7148, _8xa7227, _8xa7336, _8xa7337, _8xa7308, _8xa7302, _8xa7187, _8xa792, _8xa7188, _8xa7116, _8xa7318, _8xa7149, _8xa7189, _8xa7283, _8xa7150, _8xa7190, _8xa7151, _8xa7191, _8xa7192, _8xa7261, _8xa7193, _8xa7244, _8xa7194, _8xa7309, _8xa755 ];

inter.regions = [ _8xa7295, _8xa7341, _8xa7357, _8xa7342, _8xa7343, _8xa7344, _8xa7351, _8xa7379, _8xa7345, _8xa7273, _8xa7332, _8xa7333, _8xa7328, _8xa7346, _8xa7334, _8xa7367, _8xa7311, _8xa7299, _8xa7352, _8xa7347, _8xa7339, _8xa7348, _8xa7314, _8xa7306, _8xa7316, _8xa7359, _8xa755 ];

inter.countries = [ _8xa7262, _8xa7296, _8xa7152, _8xa7153, _8xa7154, _8xa7121, _8xa7195, _8xa767, _8xa7312, _8xa7297, _8xa7247, _8xa7155, _8xa793, _8xa7284, _8xa7229, _8xa7156, _8xa7157, _8xa7158, _8xa7263, _8xa7196, _8xa7122, _8xa7123, _8xa794, _8xa7197, _8xa7124, _8xa7264, _8xa7159, _8xa7329, _8xa7198, _8xa7160, _8xa7125, _8xa7199, _8xa7274, _8xa7161, _8xa7248, _8xa7162, _8xa7126, _8xa7200, _8xa795, _8xa796, _8xa797, _8xa7313, _8xa7201, _8xa7163, _8xa798, _8xa7298, _8xa7285, _8xa7249, _8xa7275, _8xa7164, _8xa783, _8xa7202, _8xa7203, _8xa7230, _8xa7165, _8xa7127, _8xa7265, _8xa7324, _8xa7166, _8xa7167, _8xa7168, _8xa7169, _8xa7250, _8xa7204, _8xa7231, _8xa799, _8xa7128, _8xa7170, _8xa7364, _8xa7205, _8xa7100, _8xa7206, _8xa7129, _8xa7232, _8xa7171, _8xa7130, _8xa7233, _8xa7251, _8xa784, _8xa7234, _8xa7207, _8xa7131, _8xa7319, _8xa7286, _8xa7132, _8xa7304, _8xa7101, _8xa7208, _8xa7102, _8xa7235, _8xa774, _8xa7287, _8xa781, _8xa7276, _8xa7277, _8xa7288, _8xa771, _8xa7266, _8xa7278, _8xa7353, _8xa7335, _8xa7358, _8xa7360, _8xa7305, _8xa7320, _8xa7325, _8xa7370, _8xa785, _8xa786, _8xa7172, _8xa7173, _8xa7133, _8xa7134, _8xa7103, _8xa7135, _8xa7209, _8xa7252, _8xa7104, _8xa7105, _8xa7279, _8xa7210, _8xa7136, _8xa787, _8xa7174, _8xa7211, _8xa7175, _8xa7176, _8xa7106, _8xa7289, _8xa7212, _8xa7236, _8xa7237, _8xa7253, _8xa7213, _8xa7137, _8xa7214, _8xa788, _8xa7107, _8xa7108, _8xa7254, _8xa7255, _8xa7238, _8xa7177, _8xa7138, _8xa7256, _8xa7215, _8xa7139, _8xa7216, _8xa7257, _8xa7258, _8xa7217, _8xa7178, _8xa7179, _8xa7109, _8xa7110, _8xa7239, _8xa7111, _8xa7180, _8xa789, _8xa7218, _8xa7300, _8xa7280, _8xa790, _8xa7267, _8xa7219, _8xa7112, _8xa7140, _8xa7315, _8xa7220, _8xa791, _8xa7221, _8xa7321, _8xa7181, _8xa7222, _8xa7268, _8xa7290, _8xa7371, _8xa7374, _8xa7354, _8xa7366, _8xa7330, _8xa7317, _8xa7141, _8xa7182, _8xa7142, _8xa7183, _8xa7322, _8xa7326, _8xa7269, _8xa7281, _8xa7349, _8xa7365, _8xa7240, _8xa7143, _8xa7113, _8xa7307, _8xa7259, _8xa7184, _8xa7144, _8xa7260, _8xa7282, _8xa7223, _8xa7224, _8xa7114, _8xa7241, _8xa7225, _8xa7185, _8xa7301, _8xa7270, _8xa7145, _8xa7242, _8xa7355, _8xa7115, _8xa7291, _8xa7186, _8xa7331, _8xa7146, _8xa7147, _8xa7243, _8xa7327, _8xa7292, _8xa7226, _8xa7148, _8xa7227, _8xa7336, _8xa7337, _8xa7308, _8xa7302, _8xa7187, _8xa792, _8xa7188, _8xa7116, _8xa7318, _8xa7149, _8xa7189, _8xa7283, _8xa7150, _8xa7190, _8xa7151, _8xa7191, _8xa7192, _8xa7261, _8xa7193, _8xa7244, _8xa7194, _8xa7309 ];

inter.languages = [ {
    id: "ab",
    displayName: "abchasian"
}, {
    id: "akk",
    displayName: "accadic"
}, {
    id: "ace",
    displayName: "aceh"
}, {
    id: "ach",
    displayName: "acoli"
}, {
    id: "ady",
    displayName: "adygai"
}, {
    id: "aa",
    displayName: "afar"
}, {
    id: "afh",
    displayName: "afrihili"
}, {
    id: "af",
    displayName: "afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "ain",
    displayName: "ainu"
}, {
    id: "ak",
    displayName: "akan",
    nativeDisplayName: "Akan"
}, {
    id: "ale",
    displayName: "aleutic"
}, {
    id: "alt",
    displayName: "altaic dal sid"
}, {
    id: "en_us",
    displayName: "englais american",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "sami inari",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "ada",
    displayName: "andangme"
}, {
    id: "anp",
    displayName: "angika"
}, {
    id: "an",
    displayName: "aragonais"
}, {
    id: "arc",
    displayName: "arameic"
}, {
    id: "sam",
    displayName: "arameic samaritan"
}, {
    id: "arp",
    displayName: "arapaho"
}, {
    id: "arn",
    displayName: "araucanic"
}, {
    id: "arw",
    displayName: "arawak"
}, {
    id: "rup",
    displayName: "aromunic"
}, {
    id: "ast",
    displayName: "asturian",
    nativeDisplayName: "asturianu"
}, {
    id: "cch",
    displayName: "atsam"
}, {
    id: "en_au",
    displayName: "englais australian",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "avaric"
}, {
    id: "ae",
    displayName: "avestic"
}, {
    id: "awa",
    displayName: "awadhi"
}, {
    id: "ay",
    displayName: "aymara"
}, {
    id: "az",
    displayName: "aserbeidschanic",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "malaic",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "ban",
    displayName: "balinais"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "ba",
    displayName: "baschkir"
}, {
    id: "nds",
    displayName: "bass tudestg"
}, {
    id: "bej",
    displayName: "bedscha"
}, {
    id: "bal",
    displayName: "belutschi"
}, {
    id: "bho",
    displayName: "bhojpuri"
}, {
    id: "bik",
    displayName: "bikol"
}, {
    id: "bin",
    displayName: "bini"
}, {
    id: "bi",
    displayName: "bislama"
}, {
    id: "byn",
    displayName: "blin"
}, {
    id: "bs",
    displayName: "bosniac",
    nativeDisplayName: "bosanski"
}, {
    id: "bra",
    displayName: "braj"
}, {
    id: "br",
    displayName: "breton",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "englais britannic",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "bugi"
}, {
    id: "bua",
    displayName: "buriat"
}, {
    id: "cad",
    displayName: "caddo"
}, {
    id: "en_ca",
    displayName: "englais canadais",
    nativeDisplayName: "Canadian English"
}, {
    id: "krl",
    displayName: "carelian"
}, {
    id: "car",
    displayName: "caribic"
}, {
    id: "ca",
    displayName: "catalan",
    nativeDisplayName: "català"
}, {
    id: "ceb",
    displayName: "cebuano"
}, {
    id: "ch",
    displayName: "chamorro"
}, {
    id: "chy",
    displayName: "cheyenne"
}, {
    id: "chb",
    displayName: "chibcha"
}, {
    id: "chp",
    displayName: "chipewyan"
}, {
    id: "sn",
    displayName: "shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cho",
    displayName: "choctaw"
}, {
    id: "chk",
    displayName: "chuukais"
}, {
    id: "cop",
    displayName: "coptic"
}, {
    id: "co",
    displayName: "cors"
}, {
    id: "cr",
    displayName: "cree"
}, {
    id: "mus",
    displayName: "creek"
}, {
    id: "ku",
    displayName: "curd"
}, {
    id: "cy",
    displayName: "kimric",
    nativeDisplayName: "Cymraeg"
}, {
    id: "dak",
    displayName: "dakota"
}, {
    id: "da",
    displayName: "danais",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "dargwa"
}, {
    id: "se",
    displayName: "sami dal nord",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "del",
    displayName: "delaware"
}, {
    id: "de",
    displayName: "tudestg",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "dinka"
}, {
    id: "dyu",
    displayName: "diula"
}, {
    id: "doi",
    displayName: "dogri"
}, {
    id: "dgr",
    displayName: "dogrib"
}, {
    id: "dsb",
    displayName: "bass sorb",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "eston",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efik"
}, {
    id: "egy",
    displayName: "egipzian vegl"
}, {
    id: "eka",
    displayName: "ekajuk"
}, {
    id: "elx",
    displayName: "elamitic"
}, {
    id: "enm",
    displayName: "englais mesaun"
}, {
    id: "ang",
    displayName: "englais vegl"
}, {
    id: "en",
    displayName: "englais",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "erzya"
}, {
    id: "es",
    displayName: "spagnol",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "spagnol iberic",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "spagnol mexican",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "spagnol latinamerican",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "hit",
    displayName: "ettitic"
}, {
    id: "eu",
    displayName: "basc",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ee",
    displayName: "ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "fang"
}, {
    id: "fat",
    displayName: "fanti"
}, {
    id: "phn",
    displayName: "fenizian"
}, {
    id: "fj",
    displayName: "fidschian"
}, {
    id: "fil",
    displayName: "filippino",
    nativeDisplayName: "Filipino"
}, {
    id: "fon",
    displayName: "fon"
}, {
    id: "frm",
    displayName: "franzos mesaun"
}, {
    id: "fro",
    displayName: "franzos vegl"
}, {
    id: "fr",
    displayName: "franzos",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "franzos canadais",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "franzos svizzer",
    nativeDisplayName: "français suisse"
}, {
    id: "frs",
    displayName: "fris da l’ost"
}, {
    id: "frr",
    displayName: "fris dal nord"
}, {
    id: "fur",
    displayName: "friulan",
    nativeDisplayName: "furlan"
}, {
    id: "fo",
    displayName: "ferrais",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "ga"
}, {
    id: "ga",
    displayName: "irlandais",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gl",
    displayName: "galician",
    nativeDisplayName: "galego"
}, {
    id: "gay",
    displayName: "gayo"
}, {
    id: "gba",
    displayName: "gbaya"
}, {
    id: "gez",
    displayName: "geez"
}, {
    id: "ki",
    displayName: "kikuyu",
    nativeDisplayName: "Gikuyu"
}, {
    id: "gil",
    displayName: "gilbertais"
}, {
    id: "jrb",
    displayName: "giudaic-arab"
}, {
    id: "jpr",
    displayName: "giudaic-persian"
}, {
    id: "gon",
    displayName: "gondi"
}, {
    id: "gor",
    displayName: "gorontalo"
}, {
    id: "got",
    displayName: "gotic"
}, {
    id: "grb",
    displayName: "grebo"
}, {
    id: "grc",
    displayName: "grec vegl"
}, {
    id: "gn",
    displayName: "guarani"
}, {
    id: "gwi",
    displayName: "gwichʼin"
}, {
    id: "gd",
    displayName: "gaelic scot",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "hai",
    displayName: "haida"
}, {
    id: "ht",
    displayName: "haitian"
}, {
    id: "ha",
    displayName: "haussa",
    nativeDisplayName: "Hausa"
}, {
    id: "hz",
    displayName: "herero"
}, {
    id: "hil",
    displayName: "hiligaynon"
}, {
    id: "ho",
    displayName: "hiri motu"
}, {
    id: "hmn",
    displayName: "hmong"
}, {
    id: "hsb",
    displayName: "aut sorb",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "croat",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "hupa"
}, {
    id: "iba",
    displayName: "iban"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "io",
    displayName: "ido"
}, {
    id: "ig",
    displayName: "igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "ilocano"
}, {
    id: "id",
    displayName: "indonais",
    nativeDisplayName: "Indonesia"
}, {
    id: "inh",
    displayName: "ingush"
}, {
    id: "ia",
    displayName: "interlingua"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "iu",
    displayName: "inuktitut"
}, {
    id: "ik",
    displayName: "inupiak"
}, {
    id: "mga",
    displayName: "irlandais mesaun"
}, {
    id: "sga",
    displayName: "irlandais vegl"
}, {
    id: "nd",
    displayName: "ndebele dal nord",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "talian",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "javanais"
}, {
    id: "kaj",
    displayName: "jju"
}, {
    id: "kbd",
    displayName: "kabardic"
}, {
    id: "kac",
    displayName: "kachin"
}, {
    id: "kl",
    displayName: "grönlandais",
    nativeDisplayName: "kalaallisut"
}, {
    id: "xal",
    displayName: "kalmuk"
}, {
    id: "kr",
    displayName: "kanuri"
}, {
    id: "krc",
    displayName: "karachay-balkar"
}, {
    id: "kaa",
    displayName: "karakalpak"
}, {
    id: "csb",
    displayName: "kaschubic"
}, {
    id: "kaw",
    displayName: "kawi"
}, {
    id: "kw",
    displayName: "cornic",
    nativeDisplayName: "kernewek"
}, {
    id: "kha",
    displayName: "khasi"
}, {
    id: "kho",
    displayName: "khotanais"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "kmb",
    displayName: "kimbundu"
}, {
    id: "rw",
    displayName: "kinyarwanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "sw",
    displayName: "suahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "tlh",
    displayName: "klingonic"
}, {
    id: "kv",
    displayName: "komi"
}, {
    id: "kg",
    displayName: "kongo"
}, {
    id: "kfo",
    displayName: "koro"
}, {
    id: "kos",
    displayName: "kosraean"
}, {
    id: "kpe",
    displayName: "kpelle"
}, {
    id: "kj",
    displayName: "kuanyama"
}, {
    id: "kum",
    displayName: "kumuk"
}, {
    id: "kru",
    displayName: "kurukh"
}, {
    id: "kut",
    displayName: "kutenai"
}, {
    id: "lad",
    displayName: "ladino"
}, {
    id: "lah",
    displayName: "lahnda"
}, {
    id: "lam",
    displayName: "lamba"
}, {
    id: "la",
    displayName: "latin"
}, {
    id: "lv",
    displayName: "letton",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "tonga",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lez",
    displayName: "lezghian"
}, {
    id: "lt",
    displayName: "lituan",
    nativeDisplayName: "lietuvių"
}, {
    id: "li",
    displayName: "limburgais"
}, {
    id: "tog",
    displayName: "lingua tsonga"
}, {
    id: "und",
    displayName: "linguas betg determinadas"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "jbo",
    displayName: "lojban"
}, {
    id: "lol",
    displayName: "lomongo"
}, {
    id: "loz",
    displayName: "lozi"
}, {
    id: "lua",
    displayName: "luba-lulua"
}, {
    id: "lg",
    displayName: "ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "luiseno"
}, {
    id: "lun",
    displayName: "lunda"
}, {
    id: "lus",
    displayName: "lushai"
}, {
    id: "lb",
    displayName: "luxemburgais",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "masai",
    nativeDisplayName: "Maa"
}, {
    id: "mad",
    displayName: "madurais"
}, {
    id: "mag",
    displayName: "magahi"
}, {
    id: "hu",
    displayName: "ungarais",
    nativeDisplayName: "magyar"
}, {
    id: "mai",
    displayName: "maithili"
}, {
    id: "mak",
    displayName: "makassar"
}, {
    id: "mg",
    displayName: "malagassi",
    nativeDisplayName: "Malagasy"
}, {
    id: "dv",
    displayName: "maledivic"
}, {
    id: "mt",
    displayName: "maltais",
    nativeDisplayName: "Malti"
}, {
    id: "mnc",
    displayName: "manchu"
}, {
    id: "mdr",
    displayName: "mandar"
}, {
    id: "man",
    displayName: "mandingo"
}, {
    id: "mni",
    displayName: "manipuri"
}, {
    id: "mi",
    displayName: "maori"
}, {
    id: "chm",
    displayName: "mari"
}, {
    id: "mh",
    displayName: "marschallais"
}, {
    id: "mwr",
    displayName: "marwari"
}, {
    id: "umb",
    displayName: "mbundu"
}, {
    id: "men",
    displayName: "mende"
}, {
    id: "mic",
    displayName: "micmac"
}, {
    id: "min",
    displayName: "minangkabau"
}, {
    id: "mwl",
    displayName: "mirandais"
}, {
    id: "moh",
    displayName: "mohawk"
}, {
    id: "mdf",
    displayName: "moksha"
}, {
    id: "ro_md",
    displayName: "moldav",
    nativeDisplayName: "moldovenească"
}, {
    id: "mos",
    displayName: "mossi"
}, {
    id: "zxx",
    displayName: "nagins cuntegns linguistics"
}, {
    id: "na",
    displayName: "nauru"
}, {
    id: "nv",
    displayName: "navajo"
}, {
    id: "nr",
    displayName: "ndebele dal sid"
}, {
    id: "ng",
    displayName: "ndonga"
}, {
    id: "nap",
    displayName: "neapolitan"
}, {
    id: "nl",
    displayName: "ollandais",
    nativeDisplayName: "Nederlands"
}, {
    id: "new",
    displayName: "newari"
}, {
    id: "nwc",
    displayName: "newari classic"
}, {
    id: "nia",
    displayName: "nias"
}, {
    id: "niu",
    displayName: "niue"
}, {
    id: "nog",
    displayName: "nogai"
}, {
    id: "non",
    displayName: "nordic vegl"
}, {
    id: "nb",
    displayName: "norvegais bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "norvegiais"
}, {
    id: "nym",
    displayName: "nyamwezi"
}, {
    id: "ny",
    displayName: "nyanja"
}, {
    id: "nn",
    displayName: "norvegiais nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "nyo",
    displayName: "nyoro"
}, {
    id: "nzi",
    displayName: "nzima"
}, {
    id: "nqo",
    displayName: "n’ko"
}, {
    id: "oc",
    displayName: "occitan"
}, {
    id: "oj",
    displayName: "ojibwa"
}, {
    id: "dum",
    displayName: "ollandais mesaun"
}, {
    id: "om",
    displayName: "oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "osage"
}, {
    id: "uz",
    displayName: "usbec",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pal",
    displayName: "pahlavi"
}, {
    id: "pau",
    displayName: "palau"
}, {
    id: "pi",
    displayName: "pali"
}, {
    id: "pam",
    displayName: "pampanga"
}, {
    id: "pag",
    displayName: "pangasinan"
}, {
    id: "pap",
    displayName: "papiamento"
}, {
    id: "chn",
    displayName: "patuà chinook"
}, {
    id: "peo",
    displayName: "persian vegl"
}, {
    id: "mul",
    displayName: "pluriling"
}, {
    id: "pl",
    displayName: "polac",
    nativeDisplayName: "polski"
}, {
    id: "pon",
    displayName: "ponapean"
}, {
    id: "pt",
    displayName: "portugais",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "portugais brasilian",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "portugais iberian",
    nativeDisplayName: "português europeu"
}, {
    id: "pro",
    displayName: "provenzal vegl"
}, {
    id: "ff",
    displayName: "fulah",
    nativeDisplayName: "Pulaar"
}, {
    id: "raj",
    displayName: "rajasthani"
}, {
    id: "rap",
    displayName: "rapanui"
}, {
    id: "rar",
    displayName: "rarotonga"
}, {
    id: "rom",
    displayName: "romani"
}, {
    id: "ro",
    displayName: "rumen",
    nativeDisplayName: "română"
}, {
    id: "rm",
    displayName: "rumantsch",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "quechua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "sma",
    displayName: "sami dal sid"
}, {
    id: "smj",
    displayName: "sami lule"
}, {
    id: "sms",
    displayName: "sami skolt"
}, {
    id: "sm",
    displayName: "samoan"
}, {
    id: "sad",
    displayName: "sandawe"
}, {
    id: "sa",
    displayName: "sanscrit"
}, {
    id: "sat",
    displayName: "santali"
}, {
    id: "sc",
    displayName: "sard"
}, {
    id: "sas",
    displayName: "sasak"
}, {
    id: "gsw",
    displayName: "tudestg svizzer",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "sco",
    displayName: "scot"
}, {
    id: "sel",
    displayName: "selkup"
}, {
    id: "sh",
    displayName: "serbo-croat"
}, {
    id: "srr",
    displayName: "serer"
}, {
    id: "shn",
    displayName: "shan"
}, {
    id: "sq",
    displayName: "albanais",
    nativeDisplayName: "shqip"
}, {
    id: "scn",
    displayName: "sicilian"
}, {
    id: "sid",
    displayName: "sidamo"
}, {
    id: "bla",
    displayName: "siksika"
}, {
    id: "zbl",
    displayName: "simbols da Bliss"
}, {
    id: "sd",
    displayName: "sindhi"
}, {
    id: "syr",
    displayName: "siric"
}, {
    id: "syc",
    displayName: "siric classic"
}, {
    id: "den",
    displayName: "slavey"
}, {
    id: "sk",
    displayName: "slovac",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "sloven",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "sogdian"
}, {
    id: "snk",
    displayName: "soninke"
}, {
    id: "so",
    displayName: "somali",
    nativeDisplayName: "Soomaali"
}, {
    id: "nso",
    displayName: "sotho dal nord"
}, {
    id: "st",
    displayName: "sotho dal sid"
}, {
    id: "srn",
    displayName: "sranan tongo"
}, {
    id: "suk",
    displayName: "sukuma"
}, {
    id: "sux",
    displayName: "sumeric"
}, {
    id: "su",
    displayName: "sundanais"
}, {
    id: "fi",
    displayName: "finlandais",
    nativeDisplayName: "suomi"
}, {
    id: "sus",
    displayName: "susu"
}, {
    id: "sv",
    displayName: "svedais",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "swazi"
}, {
    id: "sg",
    displayName: "sango",
    nativeDisplayName: "Sängö"
}, {
    id: "tg",
    displayName: "tadjik"
}, {
    id: "tl",
    displayName: "tagalog"
}, {
    id: "ty",
    displayName: "tahitian"
}, {
    id: "tmh",
    displayName: "tamasheq"
}, {
    id: "kab",
    displayName: "kabyle",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "tt",
    displayName: "tatar"
}, {
    id: "tem",
    displayName: "temne"
}, {
    id: "ter",
    displayName: "tereno"
}, {
    id: "tet",
    displayName: "tetum"
}, {
    id: "tig",
    displayName: "tigre"
}, {
    id: "crh",
    displayName: "tirc crimean"
}, {
    id: "ota",
    displayName: "tirc ottoman"
}, {
    id: "tiv",
    displayName: "tiv"
}, {
    id: "vi",
    displayName: "vietnamais",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tli",
    displayName: "tlingit"
}, {
    id: "tpi",
    displayName: "tok pisin"
}, {
    id: "tkl",
    displayName: "tokelau"
}, {
    id: "chg",
    displayName: "tschagataic"
}, {
    id: "cv",
    displayName: "tschuvasch"
}, {
    id: "lu",
    displayName: "luba-katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tsi",
    displayName: "tsimshian"
}, {
    id: "ts",
    displayName: "tsonga"
}, {
    id: "tn",
    displayName: "tswana"
}, {
    id: "gmh",
    displayName: "tudestg mesaun"
}, {
    id: "tum",
    displayName: "tumbuka"
}, {
    id: "tvl",
    displayName: "tuvalu"
}, {
    id: "tyv",
    displayName: "tuvinian"
}, {
    id: "tw",
    displayName: "twi"
}, {
    id: "kcg",
    displayName: "tyap"
}, {
    id: "tk",
    displayName: "turkmen",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "tirc",
    nativeDisplayName: "Türkçe"
}, {
    id: "udm",
    displayName: "udmurt"
}, {
    id: "uga",
    displayName: "ugaritic"
}, {
    id: "wa",
    displayName: "vallon"
}, {
    id: "goh",
    displayName: "vegl tudestg da scrittira"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "nl_be",
    displayName: "flam",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "volapuk",
    nativeDisplayName: "Volapük"
}, {
    id: "vot",
    displayName: "votic"
}, {
    id: "wal",
    displayName: "walamo"
}, {
    id: "war",
    displayName: "waray"
}, {
    id: "was",
    displayName: "washo"
}, {
    id: "fy",
    displayName: "fris",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "wolof"
}, {
    id: "xh",
    displayName: "xhosa"
}, {
    id: "yao",
    displayName: "yao"
}, {
    id: "yap",
    displayName: "yapais"
}, {
    id: "zap",
    displayName: "zapotec"
}, {
    id: "zza",
    displayName: "zaza"
}, {
    id: "zen",
    displayName: "zenaga"
}, {
    id: "za",
    displayName: "zhuang"
}, {
    id: "zun",
    displayName: "zuni"
}, {
    id: "yo",
    displayName: "yoruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islandais",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "tudestg austriac",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "tschec",
    nativeDisplayName: "čeština"
}, {
    id: "bas",
    displayName: "basaa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "hawaian",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "grec",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "bieloruss",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bulgar",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "ossetic",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "kirghis",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "macedon",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongolic",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "tschetschen",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "russ",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "jakut",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "serb",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ucranais",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "slav da baselgia",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "casac",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armen",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "jiddic",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "ebraic",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uiguric",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "arab",
    nativeDisplayName: "العربية"
}, {
    id: "fa",
    displayName: "persian",
    nativeDisplayName: "فارسی"
}, {
    id: "ps",
    displayName: "paschto",
    nativeDisplayName: "پښتو"
}, {
    id: "ks",
    displayName: "kashmiri",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepalais",
    nativeDisplayName: "नेपाली"
}, {
    id: "mr",
    displayName: "marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "assami",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengal",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "punjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gujarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malayalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "singalais",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "tailandais",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "laot",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibetan",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "birman",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "georgian",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrinya",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amaric",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "cambodschan",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zh",
    displayName: "chinais",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "giapunais",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "chinais simplifitgà",
    nativeDisplayName: "简体中文"
}, {
    id: "zh_hant",
    displayName: "chinais tradiziunal",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "sichuan yi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "cherokee",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "corean",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Visp",
    displayName: "alfabet visibel"
}, {
    id: "Arab",
    displayName: "arab"
}, {
    id: "Armi",
    displayName: "arameic imperial"
}, {
    id: "Armn",
    displayName: "armen"
}, {
    id: "Avst",
    displayName: "avestic"
}, {
    id: "Bali",
    displayName: "balinais"
}, {
    id: "Batk",
    displayName: "batak"
}, {
    id: "Beng",
    displayName: "bengal"
}, {
    id: "Zyyy",
    displayName: "betg determinà"
}, {
    id: "Bopo",
    displayName: "bopomofo"
}, {
    id: "Brah",
    displayName: "brahmi"
}, {
    id: "Bugi",
    displayName: "buginais"
}, {
    id: "Buhd",
    displayName: "buhid"
}, {
    id: "Mymr",
    displayName: "burmais"
}, {
    id: "Cari",
    displayName: "carian"
}, {
    id: "Cakm",
    displayName: "chakma"
}, {
    id: "Cham",
    displayName: "cham"
}, {
    id: "Cher",
    displayName: "cherokee"
}, {
    id: "Cprt",
    displayName: "cipriot"
}, {
    id: "Cyrl",
    displayName: "cirillic"
}, {
    id: "Cirt",
    displayName: "cirth"
}, {
    id: "Copt",
    displayName: "coptic"
}, {
    id: "Kore",
    displayName: "corean"
}, {
    id: "Dsrt",
    displayName: "deseret"
}, {
    id: "Deva",
    displayName: "devanagari"
}, {
    id: "Hebr",
    displayName: "ebraic"
}, {
    id: "Egyd",
    displayName: "egipzian demotic"
}, {
    id: "Egyh",
    displayName: "egipzian ieratic"
}, {
    id: "Zinh",
    displayName: "ertà"
}, {
    id: "Ethi",
    displayName: "etiopic"
}, {
    id: "Phnx",
    displayName: "fenizian"
}, {
    id: "Plrd",
    displayName: "fonetica da Pollard"
}, {
    id: "Geor",
    displayName: "georgian"
}, {
    id: "Jpan",
    displayName: "giapunais"
}, {
    id: "Glag",
    displayName: "glagolitic"
}, {
    id: "Goth",
    displayName: "gotic"
}, {
    id: "Grek",
    displayName: "grec"
}, {
    id: "Gujr",
    displayName: "gujarati"
}, {
    id: "Guru",
    displayName: "gurmukhi"
}, {
    id: "Hani",
    displayName: "han"
}, {
    id: "Hang",
    displayName: "hangul"
}, {
    id: "Hano",
    displayName: "hanunoo"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Egyp",
    displayName: "ieroglifas egipzianas"
}, {
    id: "Maya",
    displayName: "ieroglifas maya"
}, {
    id: "Inds",
    displayName: "indus"
}, {
    id: "Ital",
    displayName: "italic vegl"
}, {
    id: "Java",
    displayName: "javanais"
}, {
    id: "Kthi",
    displayName: "kaithi"
}, {
    id: "Knda",
    displayName: "kannada"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Hrkt",
    displayName: "katanaka u hiragana"
}, {
    id: "Kali",
    displayName: "kayah li"
}, {
    id: "Khar",
    displayName: "kharoshthi"
}, {
    id: "Khmr",
    displayName: "khmer/cambodschan"
}, {
    id: "Geok",
    displayName: "kutsuri"
}, {
    id: "Lana",
    displayName: "lanna"
}, {
    id: "Laoo",
    displayName: "laot"
}, {
    id: "Latn",
    displayName: "latin"
}, {
    id: "Latg",
    displayName: "latin (scrittira gaelica)"
}, {
    id: "Latf",
    displayName: "latin (scrittira gotica)"
}, {
    id: "Lepc",
    displayName: "lepcha"
}, {
    id: "Lyci",
    displayName: "lichic"
}, {
    id: "Lydi",
    displayName: "lidic"
}, {
    id: "Limb",
    displayName: "limbu"
}, {
    id: "Lina",
    displayName: "linear A"
}, {
    id: "Linb",
    displayName: "linear B"
}, {
    id: "Sgnw",
    displayName: "lingua da segns"
}, {
    id: "Zxxx",
    displayName: "linguas na scrittas"
}, {
    id: "Mlym",
    displayName: "malaisian"
}, {
    id: "Mand",
    displayName: "mandaic"
}, {
    id: "Mani",
    displayName: "manicheic"
}, {
    id: "Mtei",
    displayName: "meetei mayek"
}, {
    id: "Mero",
    displayName: "meroitic"
}, {
    id: "Mong",
    displayName: "mongolic"
}, {
    id: "Moon",
    displayName: "moon"
}, {
    id: "Zmth",
    displayName: "notaziun matematica"
}, {
    id: "Nkoo",
    displayName: "n’ko"
}, {
    id: "Ogam",
    displayName: "ogham"
}, {
    id: "Olck",
    displayName: "ol chiki"
}, {
    id: "Orya",
    displayName: "oriya"
}, {
    id: "Orkh",
    displayName: "orkhon"
}, {
    id: "Osma",
    displayName: "osman"
}, {
    id: "Hmng",
    displayName: "pahawn hmong"
}, {
    id: "Phlv",
    displayName: "pahlavi da cudeschs"
}, {
    id: "Phlp",
    displayName: "pahlavi da psalms"
}, {
    id: "Phli",
    displayName: "pahlavi dad inscripziuns"
}, {
    id: "Prti",
    displayName: "partic dad inscripziuns"
}, {
    id: "Perm",
    displayName: "permic vegl"
}, {
    id: "Xpeo",
    displayName: "persian vegl"
}, {
    id: "Phag",
    displayName: "phags-pa"
}, {
    id: "Rjng",
    displayName: "rejang"
}, {
    id: "Roro",
    displayName: "rongorongo"
}, {
    id: "Runr",
    displayName: "runic"
}, {
    id: "Samr",
    displayName: "samaritan"
}, {
    id: "Sara",
    displayName: "sarati"
}, {
    id: "Saur",
    displayName: "saurashtra"
}, {
    id: "Xsux",
    displayName: "scrittira a cugn sumeric-accadica"
}, {
    id: "Hans",
    displayName: "scrittira chinaisa simplifitgada"
}, {
    id: "Hant",
    displayName: "scrittira chinaisa tradiziunala"
}, {
    id: "Brai",
    displayName: "scrittira da Braille"
}, {
    id: "Zzzz",
    displayName: "scrittira nunenconuschenta u nunvalaivla"
}, {
    id: "Shaw",
    displayName: "shavian"
}, {
    id: "Zsym",
    displayName: "simbols"
}, {
    id: "Cans",
    displayName: "simbols autoctons canadais unifitgads"
}, {
    id: "Blis",
    displayName: "simbols da Bliss"
}, {
    id: "Sinh",
    displayName: "singalais"
}, {
    id: "Syrc",
    displayName: "siric"
}, {
    id: "Syrn",
    displayName: "siric da l’ost"
}, {
    id: "Syrj",
    displayName: "siric dal vest"
}, {
    id: "Syre",
    displayName: "siric estrangelo"
}, {
    id: "Cyrs",
    displayName: "slav da baselgia vegl"
}, {
    id: "Sund",
    displayName: "sundanais"
}, {
    id: "Sylo",
    displayName: "syloti nagri"
}, {
    id: "Tglg",
    displayName: "tagalog"
}, {
    id: "Tagb",
    displayName: "tagbanwa"
}, {
    id: "Tale",
    displayName: "tai le"
}, {
    id: "Talu",
    displayName: "tai lue"
}, {
    id: "Tavt",
    displayName: "tai viet"
}, {
    id: "Thai",
    displayName: "tailandais"
}, {
    id: "Taml",
    displayName: "tamil"
}, {
    id: "Telu",
    displayName: "telugu"
}, {
    id: "Teng",
    displayName: "tengwar"
}, {
    id: "Thaa",
    displayName: "thaana"
}, {
    id: "Tibt",
    displayName: "tibetan"
}, {
    id: "Tfng",
    displayName: "tifinagh"
}, {
    id: "Ugar",
    displayName: "ugaritic"
}, {
    id: "Hung",
    displayName: "ungarais vegl"
}, {
    id: "Vaii",
    displayName: "vaii"
}, {
    id: "Yiii",
    displayName: "yi"
} ];

inter.currencies = [ {
    id: "BUK",
    displayName: "Kyat burmais"
}, {
    id: "MMK",
    displayName: "Kyat dal Myanmar",
    symbol: "K"
}, {
    id: "AFN",
    displayName: "afghani"
}, {
    id: "AFA",
    displayName: "afghani (1927–2002)"
}, {
    id: "XAG",
    displayName: "argient"
}, {
    id: "MGA",
    displayName: "ariary madagasc",
    symbol: "Ar"
}, {
    id: "XAU",
    displayName: "aur"
}, {
    id: "ARA",
    displayName: "austral argentin"
}, {
    id: "THB",
    displayName: "baht tailandais",
    symbol: "฿"
}, {
    id: "PAB",
    displayName: "balboa dal Panama"
}, {
    id: "ETB",
    displayName: "birr etiopic"
}, {
    id: "VEF",
    displayName: "bolivar venezuelan",
    symbol: "Bs"
}, {
    id: "VEB",
    displayName: "bolivar venezuelan (1871–2008)"
}, {
    id: "BOB",
    displayName: "boliviano",
    symbol: "Bs"
}, {
    id: "GHS",
    displayName: "cedi ghanais"
}, {
    id: "GHC",
    displayName: "cedi ghanais (1979–2007)"
}, {
    id: "XTS",
    displayName: "code per verifitgar la valuta"
}, {
    id: "CRC",
    displayName: "colon da la Costa Rica",
    symbol: "₡"
}, {
    id: "SVC",
    displayName: "colon da l’El Salvador"
}, {
    id: "NIC",
    displayName: "cordoba nicaraguan"
}, {
    id: "NIO",
    displayName: "cordoba oro nicaraguan",
    symbol: "C$"
}, {
    id: "DKK",
    displayName: "cruna danaisa",
    symbol: "DKK",
    one: "cruna danaisa",
    other: "cruna danaisa"
}, {
    id: "EEK",
    displayName: "cruna estona",
    symbol: "EEK",
    one: "cruna estona",
    other: "cruna estona"
}, {
    id: "ISK",
    displayName: "cruna islandaisa",
    symbol: "ISK",
    one: "cruna islandaisa",
    other: "cruna islandaisa"
}, {
    id: "NOK",
    displayName: "cruna norvegiaisa",
    symbol: "NOK",
    one: "cruna norvegiaisa",
    other: "cruna norvegiaisa"
}, {
    id: "SKK",
    displayName: "cruna slovaca"
}, {
    id: "SEK",
    displayName: "cruna svedaisa",
    symbol: "SEK",
    one: "cruna svedaisa",
    other: "cruna svedaisa"
}, {
    id: "CZK",
    displayName: "cruna tscheca",
    symbol: "Kč"
}, {
    id: "CSK",
    displayName: "cruna tschecoslovaca"
}, {
    id: "BRC",
    displayName: "cruzado brasilian"
}, {
    id: "BRN",
    displayName: "cruzado novo brasilian"
}, {
    id: "BRR",
    displayName: "cruzeiro brasilian"
}, {
    id: "BRE",
    displayName: "cruzeiro brasilian (1990–1993)"
}, {
    id: "BRB",
    displayName: "cruzeiro novo brasilian (1967–1986)"
}, {
    id: "MDC",
    displayName: "cupon moldav"
}, {
    id: "GMD",
    displayName: "dalasi gambic"
}, {
    id: "DZD",
    displayName: "dinar algerian"
}, {
    id: "HRD",
    displayName: "dinar croat"
}, {
    id: "BAD",
    displayName: "dinar da la Bosnia ed Erzegovina"
}, {
    id: "MKD",
    displayName: "dinar da la Macedonia"
}, {
    id: "BHD",
    displayName: "dinar dal Bahrain"
}, {
    id: "YDD",
    displayName: "dinar dal Jemen"
}, {
    id: "KWD",
    displayName: "dinar dal Kuwait"
}, {
    id: "IQD",
    displayName: "dinar iracais"
}, {
    id: "JOD",
    displayName: "dinar jordanic"
}, {
    id: "YUD",
    displayName: "dinar jugoslav (1966–1990)"
}, {
    id: "YUN",
    displayName: "dinar jugoslav convertibel"
}, {
    id: "YUR",
    displayName: "dinar jugoslav refurmà"
}, {
    id: "LYD",
    displayName: "dinar libic"
}, {
    id: "RSD",
    displayName: "dinar serb"
}, {
    id: "SDD",
    displayName: "dinar sudanais"
}, {
    id: "TND",
    displayName: "dinar tunesian"
}, {
    id: "AED",
    displayName: "dirham dals Emirats Arabs Unids"
}, {
    id: "MAD",
    displayName: "dirham marocan"
}, {
    id: "STD",
    displayName: "dobra da São Tomé e Principe",
    symbol: "Db"
}, {
    id: "AUD",
    displayName: "dollar australian",
    symbol: "A$",
    one: "dollar australian",
    other: "dollar australian"
}, {
    id: "CAD",
    displayName: "dollar canadais",
    symbol: "CA$",
    one: "dollar canadais",
    other: "dollar canadais"
}, {
    id: "BBD",
    displayName: "dollar da Barbados",
    symbol: "$"
}, {
    id: "HKD",
    displayName: "dollar da Hongkong",
    symbol: "HK$"
}, {
    id: "TTD",
    displayName: "dollar da Trinidad e Tobago",
    symbol: "$"
}, {
    id: "XCD",
    displayName: "dollar da la Caribica Orientala",
    symbol: "EC$",
    one: "dollar da la Caribica Orientala",
    other: "dollar da la Caribica Orientala"
}, {
    id: "GYD",
    displayName: "dollar da la Guyana",
    symbol: "$"
}, {
    id: "NZD",
    displayName: "dollar da la Nova Zelanda",
    symbol: "NZ$"
}, {
    id: "BSD",
    displayName: "dollar da las Bahamas",
    symbol: "$"
}, {
    id: "BMD",
    displayName: "dollar da las Bermudas",
    symbol: "$"
}, {
    id: "KYD",
    displayName: "dollar da las Inslas Cayman",
    symbol: "KYD",
    one: "dollar da las Inslas Cayman",
    other: "dollar da las Inslas Cayman"
}, {
    id: "SBD",
    displayName: "dollar da las Salomonas",
    symbol: "$"
}, {
    id: "BZD",
    displayName: "dollar dal Belize",
    symbol: "$"
}, {
    id: "BND",
    displayName: "dollar dal Brunei",
    symbol: "$"
}, {
    id: "FJD",
    displayName: "dollar dal Fidschi",
    symbol: "$"
}, {
    id: "ZWD",
    displayName: "dollar dal Simbabwe"
}, {
    id: "SGD",
    displayName: "dollar dal Singapur",
    symbol: "$"
}, {
    id: "USD",
    displayName: "dollar dals Stadis Unids da l’America",
    symbol: "$",
    one: "dollar dals Stadis Unids da l’America",
    other: "dollar dals Stadis Unids da l’America"
}, {
    id: "USS",
    displayName: "dollar dals Stadis Unids da l’America (medem di)"
}, {
    id: "USN",
    displayName: "dollar dals Stadis Unids da l’America (proxim di)"
}, {
    id: "JMD",
    displayName: "dollar giamaican",
    symbol: "JMD",
    one: "dollar giamaican",
    other: "dollar giamaican"
}, {
    id: "LRD",
    displayName: "dollar liberian",
    symbol: "$"
}, {
    id: "NAD",
    displayName: "dollar namibian",
    symbol: "$"
}, {
    id: "RHD",
    displayName: "dollar rodesian"
}, {
    id: "SRD",
    displayName: "dollar surinam",
    symbol: "$"
}, {
    id: "VND",
    displayName: "dong vietnamais",
    symbol: "₫"
}, {
    id: "GRD",
    displayName: "drachma greca"
}, {
    id: "AMD",
    displayName: "dram armen"
}, {
    id: "XDR",
    displayName: "dretgs da prelevaziun spezials"
}, {
    id: "GQE",
    displayName: "ekwele da la Guinea Equatoriala"
}, {
    id: "CLE",
    displayName: "escudo chilen"
}, {
    id: "TPE",
    displayName: "escudo da Timor"
}, {
    id: "GWE",
    displayName: "escudo da la Guinea Portugaisa"
}, {
    id: "CVE",
    displayName: "escudo dal Cap Verd"
}, {
    id: "MZE",
    displayName: "escudo dal mozambican"
}, {
    id: "PTE",
    displayName: "escudo portugais"
}, {
    id: "EUR",
    displayName: "euro",
    symbol: "€",
    one: "euro",
    other: "euro"
}, {
    id: "CHE",
    displayName: "euro WIR"
}, {
    id: "ANG",
    displayName: "flurin da las Antillas Olandaisas"
}, {
    id: "AWG",
    displayName: "flurin da l’Aruba"
}, {
    id: "NLG",
    displayName: "flurin ollandais"
}, {
    id: "SRG",
    displayName: "flurin surinam"
}, {
    id: "XRE",
    displayName: "fonds RINET"
}, {
    id: "HUF",
    displayName: "forint ungarais",
    symbol: "Ft"
}, {
    id: "XOF",
    displayName: "franc CFA BCEAO",
    symbol: "CFA"
}, {
    id: "XAF",
    displayName: "franc CFA BEAC",
    symbol: "FCFA"
}, {
    id: "XPF",
    displayName: "franc CFP",
    symbol: "CFPF"
}, {
    id: "XFU",
    displayName: "franc UIC franzos"
}, {
    id: "CHW",
    displayName: "franc WIR"
}, {
    id: "BEF",
    displayName: "franc beltg"
}, {
    id: "BEC",
    displayName: "franc beltg (convertibel)"
}, {
    id: "BEL",
    displayName: "franc beltg (finanzial)"
}, {
    id: "KMF",
    displayName: "franc comorian",
    symbol: "CF"
}, {
    id: "CDF",
    displayName: "franc congolais"
}, {
    id: "LUC",
    displayName: "franc convertibel luxemburgais"
}, {
    id: "GNF",
    displayName: "franc da la Guinea",
    symbol: "FG"
}, {
    id: "BIF",
    displayName: "franc dal Burundi"
}, {
    id: "DJF",
    displayName: "franc dal Dschibuti"
}, {
    id: "MLF",
    displayName: "franc dal Mali"
}, {
    id: "XFO",
    displayName: "franc d’aur franzos"
}, {
    id: "LUL",
    displayName: "franc finanzial luxemburgais"
}, {
    id: "FRF",
    displayName: "franc franzos"
}, {
    id: "LUF",
    displayName: "franc luxemburgais"
}, {
    id: "MGF",
    displayName: "franc madagasc"
}, {
    id: "MAF",
    displayName: "franc marocan"
}, {
    id: "MCF",
    displayName: "franc monegas"
}, {
    id: "RWF",
    displayName: "franc ruandais",
    symbol: "RF"
}, {
    id: "CHF",
    displayName: "franc svizzer",
    symbol: "CHF",
    one: "franc svizzer",
    other: "franc svizzer"
}, {
    id: "CYP",
    displayName: "glivra cipriota"
}, {
    id: "GIP",
    displayName: "glivra da Gibraltar",
    symbol: "£"
}, {
    id: "SHP",
    displayName: "glivra da Sontg’Elena",
    symbol: "£"
}, {
    id: "FKP",
    displayName: "glivra dal Falkland",
    symbol: "£"
}, {
    id: "EGP",
    displayName: "glivra egipziana",
    symbol: "E£"
}, {
    id: "IEP",
    displayName: "glivra indonaisa",
    symbol: "IEP",
    one: "glivra indonaisa",
    other: "glivra indonaisa"
}, {
    id: "ILP",
    displayName: "glivra israeliana"
}, {
    id: "LBP",
    displayName: "glivra libanaisa",
    symbol: "L£"
}, {
    id: "MTP",
    displayName: "glivra maltaisa"
}, {
    id: "SYP",
    displayName: "glivra siriana",
    symbol: "£"
}, {
    id: "GBP",
    displayName: "glivra sterlina",
    symbol: "£",
    one: "glivra sterlina",
    other: "glivra sterlina"
}, {
    id: "SDG",
    displayName: "glivra sudanaisa"
}, {
    id: "SDP",
    displayName: "glivra sudanaisa (1956–2007)"
}, {
    id: "HTG",
    displayName: "gourde haitian"
}, {
    id: "PYG",
    displayName: "guarani paraguaian",
    symbol: "₲"
}, {
    id: "UAH",
    displayName: "hryvnia ucranais",
    symbol: "₴"
}, {
    id: "KRH",
    displayName: "hwan da la Corea dal Sid"
}, {
    id: "PEI",
    displayName: "inti peruan"
}, {
    id: "UAK",
    displayName: "karbovanetz ucranais"
}, {
    id: "PGK",
    displayName: "kina da la Papua Nova Guinea"
}, {
    id: "LAK",
    displayName: "kip laot",
    symbol: "₭"
}, {
    id: "HRK",
    displayName: "kuna croata",
    symbol: "kn"
}, {
    id: "GEK",
    displayName: "kupon larit georgian"
}, {
    id: "ZMW",
    displayName: "kwacha da la sambia",
    symbol: "ZK"
}, {
    id: "ZMK",
    displayName: "kwacha da la sambia (1968–2012)"
}, {
    id: "MWK",
    displayName: "kwacha dal Malawi"
}, {
    id: "AOA",
    displayName: "kwanza angolan",
    symbol: "Kz"
}, {
    id: "AOK",
    displayName: "kwanza angolan (1977–1990)"
}, {
    id: "AOR",
    displayName: "kwanza angolan reajustado"
}, {
    id: "GEL",
    displayName: "lari georgian",
    symbol: "₾"
}, {
    id: "LVL",
    displayName: "lats letton",
    symbol: "Ls"
}, {
    id: "ALL",
    displayName: "lek"
}, {
    id: "ALK",
    displayName: "lek albanais (1947–1961)"
}, {
    id: "HNL",
    displayName: "lempira hondurian",
    symbol: "HNL",
    one: "lempira hondurian",
    other: "lempira hondurian"
}, {
    id: "SLL",
    displayName: "leone da la Sierra Leone"
}, {
    id: "MDL",
    displayName: "leu moldav"
}, {
    id: "RON",
    displayName: "leu rumen"
}, {
    id: "BGL",
    displayName: "lev bulgar"
}, {
    id: "BGM",
    displayName: "lev bulgar socialistic"
}, {
    id: "SZL",
    displayName: "lilangeni dal Swaziland"
}, {
    id: "MTL",
    displayName: "lira maltaisa"
}, {
    id: "ITL",
    displayName: "lira taliana"
}, {
    id: "TRL",
    displayName: "lira tirca"
}, {
    id: "LTL",
    displayName: "litas lituan",
    symbol: "Lt"
}, {
    id: "LSL",
    displayName: "loti dal Lesotho"
}, {
    id: "AZN",
    displayName: "manat aserbaidschanic"
}, {
    id: "AZM",
    displayName: "manat aserbaidschanic (1993–2006)"
}, {
    id: "TMM",
    displayName: "manat turkmen"
}, {
    id: "BAM",
    displayName: "marc convertibel bosniac",
    symbol: "KM"
}, {
    id: "DDM",
    displayName: "marc da la Germania da l’Ost"
}, {
    id: "FIM",
    displayName: "marc finlandais",
    symbol: "FIM",
    one: "marc finlandais",
    other: "marc finlandais"
}, {
    id: "DEM",
    displayName: "marc tudestg"
}, {
    id: "MZN",
    displayName: "metical dal mozambican"
}, {
    id: "BOV",
    displayName: "mvdol bolivian"
}, {
    id: "NGN",
    displayName: "naira nigeriana",
    symbol: "₦"
}, {
    id: "ERN",
    displayName: "nakfa eritreic"
}, {
    id: "BTN",
    displayName: "ngultrum butanais"
}, {
    id: "BAN",
    displayName: "nov dinar da la Bosnia ed Erzegovina"
}, {
    id: "YUM",
    displayName: "nov dinar jugoslav"
}, {
    id: "TWD",
    displayName: "nov dollar taiwanais",
    symbol: "NT$"
}, {
    id: "AON",
    displayName: "nov kwanza angolan"
}, {
    id: "BGN",
    displayName: "nov lev bulgar"
}, {
    id: "UYP",
    displayName: "nov peso da l’Uruguay (1975–1993)"
}, {
    id: "BYB",
    displayName: "nov rubel bieloruss (1994–1999)"
}, {
    id: "PEN",
    displayName: "nov sol peruan"
}, {
    id: "ZRN",
    displayName: "nov zaire dal Zaire"
}, {
    id: "TRY",
    displayName: "nova lira tirca",
    symbol: "TRY",
    one: "nova lira tirca",
    other: "nova lira tirca"
}, {
    id: "MRO",
    displayName: "ouguiya da la Mauretania"
}, {
    id: "XPD",
    displayName: "palladi"
}, {
    id: "MOP",
    displayName: "pataca dal Macao"
}, {
    id: "TOP",
    displayName: "pa’anga da Tonga",
    symbol: "T$"
}, {
    id: "ADP",
    displayName: "peseta andorrana"
}, {
    id: "ESP",
    displayName: "peseta spagnola",
    symbol: "₧"
}, {
    id: "ESA",
    displayName: "peseta spagnola (conto A)"
}, {
    id: "ESB",
    displayName: "peseta spagnola (conto convertibel)"
}, {
    id: "ARS",
    displayName: "peso argentin",
    symbol: "$"
}, {
    id: "ARP",
    displayName: "peso argentin (1983–1985)"
}, {
    id: "ARL",
    displayName: "peso argentin ley"
}, {
    id: "ARM",
    displayName: "peso argentin moneda nacional"
}, {
    id: "BOP",
    displayName: "peso bolivian"
}, {
    id: "CLP",
    displayName: "peso chilen",
    symbol: "$"
}, {
    id: "COP",
    displayName: "peso columbian",
    symbol: "$"
}, {
    id: "CUP",
    displayName: "peso cuban",
    symbol: "$"
}, {
    id: "GWP",
    displayName: "peso da la Guinea-Bissau"
}, {
    id: "UYU",
    displayName: "peso da l’Uruguay",
    symbol: "$"
}, {
    id: "UYI",
    displayName: "peso da l’Uruguay (unidades indexadas)"
}, {
    id: "DOP",
    displayName: "peso dominican",
    symbol: "$"
}, {
    id: "MXP",
    displayName: "peso d’argient mexican (1861–1992)"
}, {
    id: "PHP",
    displayName: "peso filippin",
    symbol: "₱"
}, {
    id: "MXN",
    displayName: "peso mexican",
    symbol: "MX$",
    one: "peso mexican",
    other: "peso mexican"
}, {
    id: "XPT",
    displayName: "platin"
}, {
    id: "BWP",
    displayName: "pula da la Botswana",
    symbol: "P"
}, {
    id: "GTQ",
    displayName: "quetzal da la Guatemala",
    symbol: "Q"
}, {
    id: "ZAR",
    displayName: "rand sidafrican",
    symbol: "R"
}, {
    id: "ZAL",
    displayName: "rand sidafrican (finanzial)"
}, {
    id: "BRL",
    displayName: "real brasilian",
    symbol: "R$"
}, {
    id: "OMR",
    displayName: "rial da l’Oman"
}, {
    id: "YER",
    displayName: "rial dal Jemen"
}, {
    id: "IRR",
    displayName: "rial iranais"
}, {
    id: "KHR",
    displayName: "riel cambodschan",
    symbol: "៛"
}, {
    id: "MYR",
    displayName: "ringgit da la Malaisia",
    symbol: "RM"
}, {
    id: "QAR",
    displayName: "riyal da Katar"
}, {
    id: "SAR",
    displayName: "riyal saudit",
    symbol: "SAR",
    one: "riyal saudit",
    other: "riyal saudit"
}, {
    id: "BYR",
    displayName: "rubel bieloruss",
    symbol: "р."
}, {
    id: "TJR",
    displayName: "rubel dal Tadschikistan"
}, {
    id: "LVR",
    displayName: "rubel letton"
}, {
    id: "RUB",
    displayName: "rubel russ (nov)",
    symbol: "RUB",
    one: "rubel russ (nov)",
    other: "rubel russ (nov)"
}, {
    id: "RUR",
    displayName: "rubel russ (vegl)",
    symbol: "RUR",
    one: "rubel russ (vegl)",
    other: "rubel russ (vegl)"
}, {
    id: "SUR",
    displayName: "rubel sovietic"
}, {
    id: "MVR",
    displayName: "rufiyaa da las Maledivas"
}, {
    id: "LKR",
    displayName: "rupia da la Sri Lanka",
    symbol: "Rs"
}, {
    id: "MVP",
    displayName: "rupia da las Maledivas"
}, {
    id: "SCR",
    displayName: "rupia da las Seychellas"
}, {
    id: "MUR",
    displayName: "rupia dal Mauritius",
    symbol: "Rs"
}, {
    id: "INR",
    displayName: "rupia indica",
    symbol: "₹"
}, {
    id: "IDR",
    displayName: "rupia indonaisa",
    symbol: "Rp"
}, {
    id: "NPR",
    displayName: "rupia nepalaisa",
    symbol: "Rs"
}, {
    id: "PKR",
    displayName: "rupia pakistana",
    symbol: "Rs"
}, {
    id: "ATS",
    displayName: "schilling austriac"
}, {
    id: "KES",
    displayName: "schilling kenian"
}, {
    id: "SOS",
    displayName: "schilling somalian"
}, {
    id: "TZS",
    displayName: "schilling tansanian"
}, {
    id: "UGS",
    displayName: "schilling ucranais"
}, {
    id: "UGX",
    displayName: "schilling ugandais"
}, {
    id: "ILS",
    displayName: "sheqel",
    symbol: "₪"
}, {
    id: "PES",
    displayName: "sol peruan"
}, {
    id: "KGS",
    displayName: "som kirghis"
}, {
    id: "TJS",
    displayName: "somoni dal Tadschikistan"
}, {
    id: "ECS",
    displayName: "sucre equadorian"
}, {
    id: "UZS",
    displayName: "sum usbec"
}, {
    id: "GNS",
    displayName: "syli da la Guinea"
}, {
    id: "BDT",
    displayName: "taka bangladais",
    symbol: "৳"
}, {
    id: "WST",
    displayName: "tala da la Samoa"
}, {
    id: "LTT",
    displayName: "talonas lituan"
}, {
    id: "KZT",
    displayName: "tenge casac",
    symbol: "₸"
}, {
    id: "SIT",
    displayName: "tolar sloven"
}, {
    id: "MNT",
    displayName: "tugrik mongolic",
    symbol: "₮"
}, {
    id: "MXV",
    displayName: "unidad de inversion mexicana (UDI)"
}, {
    id: "COU",
    displayName: "unidad de valor real"
}, {
    id: "CLF",
    displayName: "unidades de fomento chilenas"
}, {
    id: "ECV",
    displayName: "unitad da scuntrada da l’Ecuador"
}, {
    id: "XBC",
    displayName: "unitad dal quint europeica (XBC)"
}, {
    id: "XBD",
    displayName: "unitad dal quint europeica (XBD)"
}, {
    id: "XBA",
    displayName: "unitad europeica cumponida"
}, {
    id: "XEU",
    displayName: "unitad monetara europeica",
    symbol: "XEU",
    one: "unitad monetara europeica",
    other: "unitads monetaras europeicas"
}, {
    id: "XXX",
    displayName: "valuta nunenconuschenta",
    one: "valuta nunenconuschenta",
    other: "valuta nunenconuschenta"
}, {
    id: "VUV",
    displayName: "vatu dal Vanuatu"
}, {
    id: "BOL",
    displayName: "vegl boliviano"
}, {
    id: "BRZ",
    displayName: "vegl cruzeiro brasilian"
}, {
    id: "MKN",
    displayName: "vegl dinar macedon"
}, {
    id: "CSD",
    displayName: "vegl dinar serb"
}, {
    id: "VNN",
    displayName: "vegl dong vietnamais"
}, {
    id: "ROL",
    displayName: "vegl leu rumen"
}, {
    id: "BGO",
    displayName: "vegl lev bulgar"
}, {
    id: "MZM",
    displayName: "vegl metical mozambican"
}, {
    id: "ILR",
    displayName: "vegl sheqel israelian"
}, {
    id: "KRO",
    displayName: "vegl won da la Corea dal Sid"
}, {
    id: "ISJ",
    displayName: "veglia cruna islandaisa",
    symbol: "ISJ",
    one: "veglia cruna islandaisa",
    other: "veglia cruna islandaisa"
}, {
    id: "KPW",
    displayName: "won da la Corea dal Nord",
    symbol: "₩"
}, {
    id: "KRW",
    displayName: "won da la Corea dal Sid",
    symbol: "₩"
}, {
    id: "JPY",
    displayName: "yen giapunais",
    symbol: "JP¥"
}, {
    id: "CNY",
    displayName: "yuan renminbi chinais",
    symbol: "CN¥"
}, {
    id: "ZRZ",
    displayName: "zaire dal Zaire"
}, {
    id: "PLN",
    displayName: "zloty polac",
    symbol: "PLN",
    one: "zloty polac",
    other: "zloty polac"
}, {
    id: "PLZ",
    displayName: "zloty polac (1950–1995)",
    one: "zloty polac (1950–1995)",
    other: "zloty polac (1950–1995)"
} ];

module.exports = inter;