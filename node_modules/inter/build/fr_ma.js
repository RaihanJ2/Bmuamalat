function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./fr.js"), inter = defaults({
    renderers: {}
}, P);

var _50gj1 = {
    "default": "#,##0 %"
}, _50gj2 = [ "T1", "T2", "T3", "T4" ], _50gj3 = {
    all: {
        leap: "{0}bis"
    }
}, _50gj4 = {
    displayName: "cadran"
}, _50gj5 = {
    one: "0 k",
    other: "0 k"
}, _50gj6 = {
    one: "0 M",
    other: "0 M"
}, _50gj7 = {
    one: "00 k",
    other: "00 k"
}, _50gj8 = {
    one: "00 M",
    other: "00 M"
}, _50gj9 = {
    one: "0 Md",
    other: "0 Md"
}, _50gj10 = {
    one: "0 Bn",
    other: "0 Bn"
}, _50gj11 = {
    a: "h a – h a",
    h: "h–h a"
}, _50gj12 = {
    one: "000 k",
    other: "000 k"
}, _50gj13 = {
    one: "000 M",
    other: "000 M"
}, _50gj14 = {
    one: "00 Md",
    other: "00 Md"
}, _50gj15 = {
    one: "00 Bn",
    other: "00 Bn"
}, _50gj16 = {
    one: "0 k ¤",
    other: "0 k ¤"
}, _50gj17 = {
    one: "0 M ¤",
    other: "0 M ¤"
}, _50gj18 = {
    a: "h a – h a",
    h: "h – h a"
}, _50gj19 = {
    one: "+{0}h",
    other: "+{0}h"
}, _50gj20 = {
    one: "−{0}h",
    other: "−{0}h"
}, _50gj21 = {
    one: "000 Md",
    other: "000 Md"
}, _50gj22 = {
    one: "000 Bn",
    other: "000 Bn"
}, _50gj23 = {
    one: "00 k ¤",
    other: "00 k ¤"
}, _50gj24 = {
    one: "00 M ¤",
    other: "00 M ¤"
}, _50gj25 = {
    one: "0 Md ¤",
    other: "0 Md ¤"
}, _50gj26 = {
    one: "0 Bn ¤",
    other: "0 Bn ¤"
}, _50gj27 = [ "D", "L", "M", "M", "J", "V", "S" ], _50gj28 = {
    one: "+{0} a",
    other: "+{0} a"
}, _50gj29 = {
    one: "-{0} a",
    other: "-{0} a"
}, _50gj30 = {
    one: "+{0} j",
    other: "+{0} j"
}, _50gj31 = {
    one: "-{0} j",
    other: "-{0} j"
}, _50gj32 = {
    one: "+{0} s",
    other: "+{0} s"
}, _50gj33 = {
    one: "-{0} s",
    other: "-{0} s"
}, _50gj34 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _50gj35 = {
    displayName: "fuseau horaire"
}, _50gj36 = {
    one: "000 k ¤",
    other: "000 k ¤"
}, _50gj37 = {
    one: "000 M ¤",
    other: "000 M ¤"
}, _50gj38 = {
    one: "00 Md ¤",
    other: "00 Md ¤"
}, _50gj39 = {
    one: "00 Bn ¤",
    other: "00 Bn ¤"
}, _50gj40 = {
    a: "h a – h a v",
    h: "h – h a v"
}, _50gj41 = {
    d: "d–d MMM",
    M: "d MMM – d MMM"
}, _50gj42 = {
    one: "+{0} m.",
    other: "+{0} m."
}, _50gj43 = {
    one: "-{0} m.",
    other: "-{0} m."
}, _50gj44 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _50gj45 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _50gj46 = {
    one: "0 millier",
    other: "0 mille"
}, _50gj47 = {
    one: "00 mille",
    other: "00 mille"
}, _50gj48 = {
    one: "000 Md ¤",
    other: "000 Md ¤"
}, _50gj49 = {
    one: "000 Bn ¤",
    other: "000 Bn ¤"
}, _50gj50 = {
    one: "+{0} min",
    other: "+{0} min"
}, _50gj51 = {
    one: "-{0} min",
    other: "-{0} min"
}, _50gj52 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _50gj53 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _50gj54 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _50gj55 = {
    displayName: "jour de la semaine"
}, _50gj56 = {
    one: "000 mille",
    other: "000 mille"
}, _50gj57 = {
    M: "MM/y – MM/y G",
    y: "M/y – M/y G"
}, _50gj58 = {
    one: "+{0} sem.",
    other: "+{0} sem."
}, _50gj59 = {
    one: "-{0} sem.",
    other: "-{0} sem."
}, _50gj60 = {
    one: "0 million",
    other: "0 millions"
}, _50gj61 = {
    one: "0 billion",
    other: "0 billions"
}, _50gj62 = [ "di", "lu", "ma", "me", "je", "ve", "sa" ], _50gj63 = {
    H: "HH:mm – HH:mm",
    m: "HH:mm – HH:mm"
}, _50gj64 = {
    d: "dd/MM – dd/MM",
    M: "dd/MM – dd/MM"
}, _50gj65 = {
    M: "MMM–MMM y G",
    y: "MMM y – MMM y G"
}, _50gj66 = {
    one: "dans {0} a",
    other: "dans {0} a"
}, _50gj67 = {
    one: "+{0} trim.",
    other: "+{0} trim."
}, _50gj68 = {
    one: "-{0} trim.",
    other: "-{0} trim."
}, _50gj69 = {
    one: "dans {0} j",
    other: "dans {0} j"
}, _50gj70 = {
    one: "dans {0} h",
    other: "dans {0} h"
}, _50gj71 = {
    one: "dans {0} s",
    other: "dans {0} s"
}, _50gj72 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _50gj73 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _50gj74 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _50gj75 = {
    one: "00 million",
    other: "00 millions"
}, _50gj76 = {
    one: "0 milliard",
    other: "0 milliards"
}, _50gj77 = {
    one: "00 billions",
    other: "00 billions"
}, _50gj78 = {
    "0": "ce tr",
    "1": "tr proch",
    "-1": "tr dern"
}, _50gj79 = {
    one: "dans {0} m.",
    other: "dans {0} m."
}, _50gj80 = {
    one: "000 million",
    other: "000 millions"
}, _50gj81 = {
    one: "00 milliard",
    other: "00 milliards"
}, _50gj82 = {
    one: "dans {0} an",
    other: "dans {0} ans"
}, _50gj83 = {
    one: "000 billions",
    other: "000 billions"
}, _50gj84 = {
    H: "HH:mm – HH:mm v",
    m: "HH:mm – HH:mm v"
}, _50gj85 = {
    one: "il y a {0} a",
    other: "il y a {0} a"
}, _50gj86 = {
    one: "il y a {0} j",
    other: "il y a {0} j"
}, _50gj87 = {
    one: "il y a {0} h",
    other: "il y a {0} h"
}, _50gj88 = {
    one: "dans {0} min",
    other: "dans {0} min"
}, _50gj89 = {
    one: "il y a {0} s",
    other: "il y a {0} s"
}, _50gj90 = {
    "0": "ce dim",
    "1": "dim proch",
    "-1": "dim dern"
}, _50gj91 = {
    "0": "ce lun",
    "1": "lun proch",
    "-1": "lun dern"
}, _50gj92 = {
    "0": "ce mar",
    "1": "mar proch",
    "-1": "mar dern"
}, _50gj93 = {
    "0": "ce mer",
    "1": "mer proch",
    "-1": "mer dern"
}, _50gj94 = {
    "0": "ce jeu",
    "1": "jeu proch",
    "-1": "jeu dern"
}, _50gj95 = {
    "0": "ce ven",
    "1": "ven proch",
    "-1": "ven dern"
}, _50gj96 = {
    "0": "ce sam",
    "1": "sam proch",
    "-1": "sam dern"
}, _50gj97 = {
    one: "000 milliards",
    other: "000 milliards"
}, _50gj98 = {
    M: "MMMM – MMMM y G",
    y: "MMMM y – MMMM y G"
}, _50gj99 = {
    one: "dans {0} mois",
    other: "dans {0} mois"
}, _50gj100 = {
    one: "il y a {0} m.",
    other: "il y a {0} m."
}, _50gj101 = {
    one: "dans {0} sem.",
    other: "dans {0} sem."
}, _50gj102 = {
    one: "il y a {0} an",
    other: "il y a {0} ans"
}, _50gj103 = {
    one: "dans {0} jour",
    other: "dans {0} jours"
}, _50gj104 = {
    d: "E dd/MM – E dd/MM",
    M: "E dd/MM – E dd/MM"
}, _50gj105 = {
    d: "E d MMM – E d MMM",
    M: "E d MMM – E d MMM"
}, _50gj106 = {
    one: "dans {0} trim.",
    other: "dans {0} trim."
}, _50gj107 = {
    one: "il y a {0} min",
    other: "il y a {0} min"
}, _50gj108 = {
    one: "dans {0} heure",
    other: "dans {0} heures"
}, _50gj109 = {
    one: "il y a {0} mois",
    other: "il y a {0} mois"
}, _50gj110 = {
    one: "il y a {0} sem.",
    other: "il y a {0} sem."
}, _50gj111 = {
    one: "il y a {0} jour",
    other: "il y a {0} jours"
}, _50gj112 = {
    one: "dans {0} minute",
    other: "dans {0} minutes"
}, _50gj113 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _50gj114 = {
    one: "il y a {0} trim.",
    other: "il y a {0} trim."
}, _50gj115 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _50gj116 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _50gj117 = [ "C", "V", "J", "Ā", "S", "B", "Ā", "K", "M", "P", "M", "P" ], _50gj118 = [ "dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam." ], _50gj119 = {
    one: "dans {0} semaine",
    other: "dans {0} semaines"
}, _50gj120 = {
    one: "il y a {0} heure",
    other: "il y a {0} heures"
}, _50gj121 = {
    one: "dans {0} seconde",
    other: "dans {0} secondes"
}, _50gj122 = {
    "0": "ce dim.",
    "1": "dim. prochain",
    "-1": "dim. dernier"
}, _50gj123 = {
    "0": "ce lun.",
    "1": "lun. prochain",
    "-1": "lun. dernier"
}, _50gj124 = {
    "0": "ce mar.",
    "1": "mar. prochain",
    "-1": "mar. dernier"
}, _50gj125 = {
    "0": "ce mer.",
    "1": "mer. prochain",
    "-1": "mer. dernier"
}, _50gj126 = {
    "0": "ce jeu.",
    "1": "jeu. prochain",
    "-1": "jeu. dernier"
}, _50gj127 = {
    "0": "ce ven.",
    "1": "ven. prochain",
    "-1": "ven. dernier"
}, _50gj128 = {
    "0": "ce sam.",
    "1": "sam. prochain",
    "-1": "sam. dernier"
}, _50gj129 = {
    one: "il y a {0} minute",
    other: "il y a {0} minutes"
}, _50gj130 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _50gj131 = {
    relative: _50gj90
}, _50gj132 = {
    relative: _50gj91
}, _50gj133 = {
    relative: _50gj92
}, _50gj134 = {
    relative: _50gj93
}, _50gj135 = {
    relative: _50gj94
}, _50gj136 = {
    relative: _50gj95
}, _50gj137 = {
    relative: _50gj96
}, _50gj138 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _50gj139 = [ "T", "B", "H", "K", "T", "A", "B", "B", "B", "B", "A", "M", "N" ], _50gj140 = [ "M", "T", "H", "T", "T", "Y", "M", "M", "G", "S", "H", "N", "P" ], _50gj141 = [ "T", "H", "K", "T", "S", "A", "A", "N", "I", "S", "T", "A", "E" ], _50gj142 = {
    one: "dans {0} trimestre",
    other: "dans {0} trimestres"
}, _50gj143 = {
    one: "il y a {0} semaine",
    other: "il y a {0} semaines"
}, _50gj144 = {
    one: "il y a {0} seconde",
    other: "il y a {0} secondes"
}, _50gj145 = {
    "0": "ce lundi",
    "1": "lundi prochain",
    "-1": "lundi dernier"
}, _50gj146 = {
    "0": "ce mardi",
    "1": "mardi prochain",
    "-1": "mardi dernier"
}, _50gj147 = {
    "0": "ce jeudi",
    "1": "jeudi prochain",
    "-1": "jeudi dernier"
}, _50gj148 = {
    "0": "ce trim.",
    "1": "le trim. proch.",
    "-1": "le trim. dern."
}, _50gj149 = {
    a: "h:mm a – h:mm a",
    h: "h:mm – h:mm a",
    m: "h:mm – h:mm a"
}, _50gj150 = {
    "0": "ce samedi",
    "1": "samedi prochain",
    "-1": "samedi dernier"
}, _50gj151 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _50gj152 = {
    one: "il y a {0} trimestre",
    other: "il y a {0} trimestres"
}, _50gj153 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _50gj154 = {
    "0": "ce mois-ci",
    "1": "le mois prochain",
    "-1": "le mois dernier"
}, _50gj155 = [ "1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre" ], _50gj156 = {
    relative: _50gj122
}, _50gj157 = {
    relative: _50gj123
}, _50gj158 = {
    relative: _50gj124
}, _50gj159 = {
    relative: _50gj125
}, _50gj160 = {
    relative: _50gj126
}, _50gj161 = {
    relative: _50gj127
}, _50gj162 = {
    relative: _50gj128
}, _50gj163 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm – h:mm a v",
    m: "h:mm – h:mm a v"
}, _50gj164 = {
    d: "d–d MMM y G",
    M: "d MMM – d MMM y G",
    y: "d MMM y – d MMM y G"
}, _50gj165 = {
    "0": "cette année",
    "1": "l’année prochaine",
    "-1": "l’année dernière"
}, _50gj166 = {
    "0": "ce dimanche",
    "1": "dimanche prochain",
    "-1": "dimanche dernier"
}, _50gj167 = {
    "0": "ce mercredi",
    "1": "mercredi prochain",
    "-1": "mercredi dernier"
}, _50gj168 = {
    "0": "ce vendredi",
    "1": "vendredi prochain",
    "-1": "vendredi dernier"
}, _50gj169 = {
    d: "d/M/y – d/M/y G",
    M: "d/M/y – d/M/y G",
    y: "dd/MM/y – dd/MM/y G"
}, _50gj170 = {
    relative: _50gj145
}, _50gj171 = {
    relative: _50gj146
}, _50gj172 = {
    relative: _50gj147
}, _50gj173 = [ "dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi" ], _50gj174 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _50gj175 = {
    relative: _50gj150
}, _50gj176 = {
    future: _50gj19,
    past: _50gj20
}, _50gj177 = {
    "0": "cette semaine",
    "1": "la semaine prochaine",
    "-1": "la semaine dernière"
}, _50gj178 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _50gj179 = {
    future: _50gj28,
    past: _50gj29
}, _50gj180 = {
    future: _50gj30,
    past: _50gj31
}, _50gj181 = {
    future: _50gj32,
    past: _50gj33
}, _50gj182 = {
    relative: _50gj166
}, _50gj183 = {
    relative: _50gj167
}, _50gj184 = {
    relative: _50gj168
}, _50gj185 = {
    "0": "ce trimestre-ci",
    "1": "le trimestre prochain",
    "-1": "le trimestre dernier"
}, _50gj186 = {
    "0": "aujourd’hui",
    "1": "demain",
    "2": "après-demain",
    "-2": "avant-hier",
    "-1": "hier"
}, _50gj187 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _50gj188 = {
    d: "E d – E d MMM y G",
    M: "E d MMM – E d MMM y G",
    y: "E d MMM y – E d MMM y G"
}, _50gj189 = {
    future: _50gj42,
    past: _50gj43
}, _50gj190 = {
    future: _50gj50,
    past: _50gj51
}, _50gj191 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _50gj192 = {
    d: "E dd/MM/y – E dd/MM/y G",
    M: "E dd/MM/y – E dd/MM/y G",
    y: "E dd/MM/y – E dd/MM/y G"
}, _50gj193 = {
    future: _50gj58,
    past: _50gj59
}, _50gj194 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _50gj195 = [ "jan.", "fév.", "mar.", "avr.", "mai", "jui.", "juil.", "août", "sept.", "oct.", "nov.", "déc." ], _50gj196 = [ "1yuè", "2yuè", "3yuè", "4yuè", "5yuè", "6yuè", "7yuè", "8yuè", "9yuè", "10yuè", "11yuè", "12yuè" ], _50gj197 = {
    future: _50gj67,
    past: _50gj68
}, _50gj198 = [ "mäs.", "teq.", "hed.", "tah.", "ter", "yäk.", "mäg.", "miy.", "gue.", "sän.", "ham.", "näh.", "pag." ], _50gj199 = [ "tis.", "hes.", "kis.", "téb.", "sché.", "ad.I", "adar", "nis.", "iyar", "siv.", "tam.", "ab", "ell." ], _50gj200 = [ "chai.", "vai.", "jyai.", "āsha.", "shrā.", "bhā.", "āshw.", "kār.", "mār.", "pau.", "māgh", "phāl." ], _50gj201 = {
    future: _50gj66,
    past: _50gj85
}, _50gj202 = {
    future: _50gj69,
    past: _50gj86
}, _50gj203 = {
    future: _50gj70,
    past: _50gj87
}, _50gj204 = {
    future: _50gj71,
    past: _50gj89
}, _50gj205 = {
    future: _50gj79,
    past: _50gj100
}, _50gj206 = {
    future: _50gj82,
    past: _50gj102
}, _50gj207 = {
    displayName: "h",
    relativeTime: _50gj176
}, _50gj208 = {
    future: _50gj88,
    past: _50gj107
}, _50gj209 = [ "tout", "bâb.", "hât.", "kya.", "toub.", "amsh.", "barma.", "barmo.", "bash.", "ba’o.", "abî.", "mis.", "al-n." ], _50gj210 = {
    displayName: "a",
    relativeTime: _50gj179
}, _50gj211 = {
    displayName: "j",
    relativeTime: _50gj180
}, _50gj212 = {
    displayName: "s",
    relativeTime: _50gj181
}, _50gj213 = {
    future: _50gj99,
    past: _50gj109
}, _50gj214 = {
    future: _50gj101,
    past: _50gj110
}, _50gj215 = {
    future: _50gj103,
    past: _50gj111
}, _50gj216 = {
    future: _50gj106,
    past: _50gj114
}, _50gj217 = {
    displayName: "m.",
    relativeTime: _50gj189
}, _50gj218 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _50gj219 = {
    midnight: "min.",
    am: "AM",
    noon: "midi",
    pm: "PM",
    morning1: "mat.",
    afternoon1: "ap.m.",
    evening1: "soir",
    night1: "nuit"
}, _50gj220 = [ "janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre" ], _50gj221 = {
    future: _50gj108,
    past: _50gj120
}, _50gj222 = [ "zhēngyuè", "èryuè", "sānyuè", "sìyuè", "wǔyuè", "liùyuè", "qīyuè", "bāyuè", "jiǔyuè", "shíyuè", "shíyīyuè", "shí’èryuè" ], _50gj223 = [ "Tisseri", "Hesvan", "Kislev", "Tébeth", "Schébat", "Adar I", "Adar", "Nissan", "Iyar", "Sivan", "Tamouz", "Ab", "Elloul" ], _50gj224 = {
    displayName: "min",
    relativeTime: _50gj190
}, _50gj225 = {
    future: _50gj112,
    past: _50gj129
}, _50gj226 = [ "mouh.", "saf.", "rab. aw.", "rab. th.", "joum. oul.", "joum. tha.", "raj.", "chaa.", "ram.", "chaw.", "dhou. q.", "dhou. h." ], _50gj227 = [ "mouh.", "saf.", "rab. aw.", "rab. th.", "joum. ou.", "joum. th.", "raj.", "chaa.", "ram.", "chaw.", "dhou. qi.", "dhou. hi." ], _50gj228 = {
    midnight: "minuit",
    am: "AM",
    noon: "midi",
    pm: "PM",
    morning1: "matin",
    afternoon1: "après-midi",
    evening1: "soir",
    night1: "nuit"
}, _50gj229 = {
    future: _50gj119,
    past: _50gj143
}, _50gj230 = {
    displayName: "sem.",
    relativeTime: _50gj193
}, _50gj231 = {
    future: _50gj121,
    past: _50gj144
}, _50gj232 = [ "tout", "bâbâ", "hâtour", "kyakh", "toubah", "amshîr", "barmahât", "barmoudah", "bashans", "ba’ounah", "abîb", "misra", "al-nasi" ], _50gj233 = [ "mäskäräm", "teqemt", "hedar", "tahesas", "ter", "yäkatit", "mägabit", "miyazya", "guenbot", "säné", "hamlé", "nähasé", "pagumén" ], _50gj234 = {
    displayName: "j",
    relativeTime: _50gj202
}, _50gj235 = {
    displayName: "h",
    relativeTime: _50gj203
}, _50gj236 = {
    displayName: "s",
    relativeTime: _50gj204
}, _50gj237 = [ "chaitra", "vaishākh", "jyaishtha", "āshādha", "shrāvana", "bhādrapad", "āshwin", "kārtik", "mārgashīrsha", "paush", "māgh", "phālgun" ], _50gj238 = {
    displayName: "ann.",
    relativeTime: _50gj201
}, _50gj239 = {
    future: _50gj142,
    past: _50gj152
}, _50gj240 = {
    abbreviated: _50gj2,
    narrow: [ "1", "2", "3", "4" ],
    wide: _50gj155
}, _50gj241 = {
    displayName: "m.",
    relativeTime: _50gj205
}, _50gj242 = {
    displayName: "min",
    relativeTime: _50gj208
}, _50gj243 = {
    am: "a.m.",
    pm: "p.m.",
    midnight: "minuit",
    noon: "midi",
    morning1: "du matin",
    afternoon1: "de l’après-midi",
    evening1: "du soir",
    night1: "de nuit"
}, _50gj244 = {
    displayName: "sem.",
    relativeTime: _50gj214
}, _50gj245 = {
    displayName: "heure",
    relativeTime: _50gj221
}, _50gj246 = {
    displayName: "minute",
    relativeTime: _50gj225
}, _50gj247 = [ "mouharram", "safar", "rabia al awal", "rabia ath-thani", "joumada al oula", "joumada ath-thania", "rajab", "chaabane", "ramadan", "chawwal", "dhou al qi`da", "dhou al-hijja" ], _50gj248 = {
    group: ".",
    decimal: ",",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _50gj249 = {
    displayName: "trim.",
    relative: _50gj78,
    relativeTime: _50gj197
}, _50gj250 = {
    group: ".",
    decimal: "٫",
    list: "؛",
    percentSign: "٪",
    plusSign: "‏+",
    minusSign: "‏−",
    exponential: "اس",
    superscriptingExponent: "×",
    perMille: "؉",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _50gj251 = {
    displayName: "seconde",
    relative: [ "maintenant" ],
    relativeTime: _50gj231
}, _50gj252 = {
    symbols: _50gj250
}, _50gj253 = {
    format: _50gj178,
    numeric: _50gj3,
    standAlone: _50gj178
}, _50gj254 = {
    displayName: "année",
    relative: _50gj165,
    relativeTime: _50gj206
}, _50gj255 = {
    displayName: "mois",
    relative: _50gj154,
    relativeTime: _50gj213
}, _50gj256 = {
    displayName: "trim.",
    relative: _50gj148,
    relativeTime: _50gj216
}, _50gj257 = {
    symbols: _50gj250,
    digits: "renderSpelloutCardinal"
}, _50gj258 = {
    abbreviated: _50gj118,
    narrow: _50gj27,
    wide: _50gj173,
    "short": _50gj62
}, _50gj259 = {
    symbols: _50gj250,
    digits: "renderSpelloutCardinalFinancial"
}, _50gj260 = {
    displayName: "jour",
    relative: _50gj186,
    relativeTime: _50gj215
}, _50gj261 = {
    displayName: "semaine",
    relative: _50gj177,
    relativeTime: _50gj229
}, _50gj262 = {
    displayName: "trimestre",
    relative: _50gj185,
    relativeTime: _50gj239
}, _50gj263 = {
    abbreviated: _50gj187,
    narrow: _50gj187,
    wide: _50gj187
}, _50gj264 = {
    format: _50gj263
}, _50gj265 = {
    abbreviated: _50gj195,
    narrow: _50gj113,
    wide: _50gj220
}, _50gj266 = {
    format: _50gj240,
    standAlone: _50gj240
}, _50gj267 = {
    abbreviated: _50gj196,
    narrow: _50gj130,
    wide: _50gj222
}, _50gj268 = {
    abbreviated: _50gj199,
    narrow: _50gj141,
    wide: _50gj223
}, _50gj269 = {
    abbreviated: _50gj198,
    narrow: _50gj140,
    wide: _50gj233
}, _50gj270 = {
    abbreviated: _50gj200,
    narrow: _50gj117,
    wide: _50gj237
}, _50gj271 = {
    abbreviated: _50gj218,
    narrow: _50gj130,
    wide: _50gj218
}, _50gj272 = {
    abbreviated: _50gj209,
    narrow: _50gj139,
    wide: _50gj232
}, _50gj273 = {
    fullDate: "EEEE d MMMM U",
    longDate: "d MMMM U",
    mediumDate: "d MMM U",
    shortDate: "d/M/y",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "d/M/y HH:mm",
    mediumDateTime: "d MMM U HH:mm:ss",
    longDateTime: "d MMMM U HH:mm:ss z",
    fullDateTime: "EEEE d MMMM U HH:mm:ss zzzz"
}, _50gj274 = {
    abbreviated: _50gj226,
    narrow: _50gj130,
    wide: _50gj247
}, _50gj275 = {
    abbreviated: _50gj227,
    narrow: _50gj130,
    wide: _50gj247
}, _50gj276 = {
    abbreviated: _50gj219,
    narrow: _50gj219,
    wide: _50gj228
}, _50gj277 = {
    "1000": _50gj5,
    "10000": _50gj7,
    "100000": _50gj12,
    "1000000": _50gj6,
    "10000000": _50gj8,
    "100000000": _50gj13,
    "1000000000": _50gj9,
    "10000000000": _50gj14,
    "100000000000": _50gj21,
    "1000000000000": _50gj10,
    "10000000000000": _50gj15,
    "100000000000000": _50gj22
}, _50gj278 = {
    abbreviated: _50gj219,
    narrow: _50gj219,
    wide: _50gj243
}, _50gj279 = {
    "1000": _50gj16,
    "10000": _50gj23,
    "100000": _50gj36,
    "1000000": _50gj17,
    "10000000": _50gj24,
    "100000000": _50gj37,
    "1000000000": _50gj25,
    "10000000000": _50gj38,
    "100000000000": _50gj48,
    "1000000000000": _50gj26,
    "10000000000000": _50gj39,
    "100000000000000": _50gj49
}, _50gj280 = {
    format: _50gj258,
    standAlone: _50gj258
}, _50gj281 = {
    Gy: "U",
    GyMMM: "MMM U",
    GyMMMd: "d MMM U",
    GyMMMEd: "E d MMM U",
    M: "L",
    Md: "d/M",
    MEd: "E d/M",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E d MMM",
    MMMMd: "d MMMM",
    ms: "mm:ss",
    y: "U",
    yMd: "d/M/y",
    yyyy: "U",
    yyyyM: "M/y",
    yyyyMd: "d/M/y",
    yyyyMEd: "E d/M/y",
    yyyyMMM: "MMM U",
    yyyyMMMd: "d MMM U",
    yyyyMMMEd: "E d MMM U",
    yyyyMMMM: "MMMM U",
    yyyyQQQ: "QQQ U",
    yyyyQQQQ: "QQQQ U",
    d: "d",
    E: "ccc",
    Ed: "d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d"
}, _50gj282 = {
    "1000": _50gj46,
    "10000": _50gj47,
    "100000": _50gj56,
    "1000000": _50gj60,
    "10000000": _50gj75,
    "100000000": _50gj80,
    "1000000000": _50gj76,
    "10000000000": _50gj81,
    "100000000000": _50gj97,
    "1000000000000": _50gj61,
    "10000000000000": _50gj77,
    "100000000000000": _50gj83
}, _50gj283 = {
    d: "d",
    E: "ccc",
    Ed: "E d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E d MMM y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "d/M",
    MEd: "E d/M",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E d MMM",
    MMMMd: "d MMMM",
    ms: "mm:ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M/y GGGGG",
    yyyyMd: "d/M/y GGGGG",
    yyyyMEd: "E d/M/y GGGGG",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E d MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _50gj284 = {
    d: "d",
    E: "ccc",
    Ed: "E d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E d MMM y G",
    M: "L",
    Md: "dd/MM",
    MEd: "E dd/MM",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E d MMM",
    MMMMd: "d MMMM",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M/y GGGGG",
    yyyyMd: "d/M/y GGGGG",
    yyyyMEd: "E d/M/y GGGGG",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E d MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    ms: "mm:ss",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _50gj285 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _50gj286 = {
    format: _50gj265,
    standAlone: _50gj265
}, _50gj287 = {
    basic: P.calendars.buddhist.dateFormats.basic,
    cldr: _50gj283
}, _50gj288 = {
    basic: P.calendars.buddhist.dateFormats.basic,
    cldr: _50gj284
}, _50gj289 = {
    format: _50gj267,
    standAlone: _50gj267
}, _50gj290 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _50gj291 = {
    format: _50gj274,
    standAlone: _50gj275
}, _50gj292 = {
    format: _50gj278,
    standAlone: _50gj276
}, _50gj293 = {
    basic: _50gj273,
    cldr: _50gj281
}, _50gj294 = {
    "long": _50gj282,
    "short": _50gj277,
    "default": "#,##0.###"
}, _50gj295 = {
    d: {
        d: "d–d"
    },
    h: _50gj11,
    H: {
        H: "HH–HH"
    },
    hm: _50gj138,
    Hm: _50gj52,
    hmv: _50gj153,
    Hmv: _50gj72,
    hv: _50gj34,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _50gj73,
    MEd: _50gj115,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _50gj44,
    MMMEd: _50gj116,
    y: {
        y: "U–U"
    },
    yM: _50gj53,
    yMd: _50gj174,
    yMEd: _50gj194,
    yMMM: _50gj54,
    yMMMd: _50gj151,
    yMMMEd: _50gj191,
    yMMMM: _50gj74
}, _50gj296 = {
    d: {
        d: "d – d"
    },
    h: _50gj18,
    H: {
        H: "HH – HH"
    },
    hm: _50gj149,
    Hm: _50gj63,
    hmv: _50gj163,
    Hmv: _50gj84,
    hv: _50gj40,
    Hv: {
        H: "HH – HH v"
    },
    M: {
        M: "M – M"
    },
    Md: _50gj64,
    MEd: _50gj104,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _50gj41,
    MMMEd: _50gj105,
    y: {
        y: "y – y G"
    },
    yM: _50gj57,
    yMd: _50gj169,
    yMEd: _50gj192,
    yMMM: _50gj65,
    yMMMd: _50gj164,
    yMMMEd: _50gj188,
    yMMMM: _50gj98
}, _50gj297 = {
    beforeCurrency: _50gj285,
    afterCurrency: _50gj285
}, _50gj298 = {
    "short": _50gj279,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _50gj297
}, _50gj299 = {
    abbreviated: _50gj290,
    narrow: _50gj290,
    wide: _50gj290
}, _50gj300 = {
    format: _50gj299
}, _50gj301 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _50gj294,
    currency: _50gj298,
    percent: _50gj1
}, _50gj302 = {
    era: {
        displayName: "ère"
    },
    year: _50gj254,
    "year-short": _50gj238,
    "year-narrow": _50gj210,
    quarter: _50gj262,
    "quarter-short": _50gj256,
    "quarter-narrow": _50gj249,
    month: _50gj255,
    "month-short": _50gj241,
    "month-narrow": _50gj217,
    week: _50gj261,
    "week-short": _50gj244,
    "week-narrow": _50gj230,
    day: _50gj260,
    "day-short": _50gj234,
    "day-narrow": _50gj211,
    weekday: _50gj55,
    dayperiod: _50gj4,
    hour: _50gj245,
    "hour-short": _50gj235,
    "hour-narrow": _50gj207,
    minute: _50gj246,
    "minute-short": _50gj242,
    "minute-narrow": _50gj224,
    second: _50gj251,
    "second-short": _50gj236,
    "second-narrow": _50gj212,
    zone: _50gj35,
    sun: _50gj182,
    "sun-short": _50gj156,
    "sun-narrow": _50gj131,
    mon: _50gj170,
    "mon-short": _50gj157,
    "mon-narrow": _50gj132,
    tue: _50gj171,
    "tue-short": _50gj158,
    "tue-narrow": _50gj133,
    wed: _50gj183,
    "wed-short": _50gj159,
    "wed-narrow": _50gj134,
    thu: _50gj172,
    "thu-short": _50gj160,
    "thu-narrow": _50gj135,
    fri: _50gj184,
    "fri-short": _50gj161,
    "fri-narrow": _50gj136,
    sat: _50gj175,
    "sat-short": _50gj162,
    "sat-narrow": _50gj137
}, _50gj303 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _50gj302
}, _50gj304 = {
    dayParts: _50gj264,
    days: _50gj300,
    months: _50gj300,
    years: _50gj300,
    zodiacs: _50gj264
}, _50gj305 = {
    dateFormats: _50gj288,
    datePartsOrder: "dmy",
    dateIntervalFormats: _50gj296,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _50gj280,
    dayPeriods: _50gj292,
    monthNames: _50gj291,
    eraNames: _50gj45,
    quarterNames: _50gj266,
    fields: _50gj302
}, _50gj306 = {
    dateFormats: _50gj293,
    datePartsOrder: "dmy",
    dateIntervalFormats: _50gj295,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _50gj280,
    dayPeriods: _50gj292,
    cyclicNames: _50gj304,
    monthNames: _50gj289,
    monthPatterns: _50gj253,
    quarterNames: _50gj266,
    fields: _50gj302
};

inter.id = "fr_ma";

inter.numbers = {
    ahom: {
        symbols: _50gj250,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _50gj301,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+",
            minusSign: "‎−",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _50gj301,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _50gj250,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _50gj250,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _50gj250,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _50gj250,
        digits: "renderEthiopic"
    },
    finance: _50gj252,
    fullwide: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _50gj250,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _50gj250,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _50gj250,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _50gj250,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _50gj257,
    hansfin: _50gj259,
    hant: _50gj257,
    hantfin: _50gj259,
    hebr: {
        symbols: _50gj250,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _50gj250,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _50gj257,
    jpanfin: _50gj259,
    kali: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _50gj250,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _50gj250,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _50gj250,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _50gj250,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _50gj250,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _50gj250,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _50gj250,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _50gj250,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _50gj252,
    nkoo: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _50gj250,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _50gj250,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _50gj250,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _50gj250,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _50gj250,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _50gj250,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _50gj252,
    vaii: {
        symbols: _50gj248,
        formats: _50gj301,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _50gj250,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "dmy",
        dateIntervalFormats: _50gj296,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _50gj280,
        dayPeriods: _50gj292,
        monthNames: _50gj286,
        eraNames: {
            wide: [ "ère bouddhiste" ],
            abbreviated: [ "ère b." ]
        },
        quarterNames: _50gj266,
        fields: _50gj302
    },
    chinese: _50gj306,
    coptic: {
        dateFormats: _50gj287,
        datePartsOrder: "dmy",
        dateIntervalFormats: _50gj296,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _50gj280,
        dayPeriods: _50gj292,
        monthNames: {
            format: _50gj272,
            standAlone: _50gj272
        },
        eraNames: {
            wide: [ "avant Dioclétien", "après Dioclétien" ],
            abbreviated: [ "av. D.", "ap. D." ]
        },
        quarterNames: _50gj266,
        fields: _50gj302
    },
    dangi: _50gj306,
    ethioaa: _50gj303,
    ethiopic: {
        dateFormats: _50gj287,
        datePartsOrder: "dmy",
        dateIntervalFormats: _50gj296,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _50gj280,
        dayPeriods: _50gj292,
        monthNames: {
            format: _50gj269,
            standAlone: _50gj269
        },
        eraNames: {
            wide: [ "avant l’Incarnation", "après l’Incarnation" ],
            abbreviated: [ "av. Inc.", "ap. Inc." ]
        },
        quarterNames: _50gj266,
        fields: _50gj302
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE d MMMM y",
                longDate: "d MMMM y",
                mediumDate: "d MMM y",
                shortDate: "dd/MM/y",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "dd/MM/y HH:mm",
                mediumDateTime: "d MMM y 'à' HH:mm:ss",
                longDateTime: "d MMMM y 'à' HH:mm:ss z",
                fullDateTime: "EEEE d MMMM y 'à' HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "E",
                Ed: "E d",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E d MMM y G",
                h: "h a",
                H: "HH 'h'",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "dd/MM",
                MEd: "E dd/MM",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E d MMM",
                MMMMd: "d MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "MM/y",
                yMd: "dd/MM/y",
                yMEd: "E dd/MM/y",
                yMMM: "MMM y",
                yMMMd: "d MMM y",
                yMMMEd: "E d MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _50gj18,
            H: {
                H: "HH – HH"
            },
            hm: _50gj149,
            Hm: _50gj63,
            hmv: _50gj163,
            Hmv: _50gj84,
            hv: _50gj40,
            Hv: {
                H: "HH – HH v"
            },
            M: {
                M: "M–M"
            },
            Md: _50gj64,
            MEd: _50gj104,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _50gj41,
            MMMEd: {
                d: "E d – E d MMM",
                M: "E d MMM – E d MMM"
            },
            y: {
                y: "y–y"
            },
            yM: {
                M: "MM/y – MM/y",
                y: "MM/y – MM/y"
            },
            yMd: {
                d: "dd/MM/y – dd/MM/y",
                M: "dd/MM/y – dd/MM/y",
                y: "dd/MM/y – dd/MM/y"
            },
            yMEd: {
                d: "E dd/MM/y – E dd/MM/y",
                M: "E dd/MM/y – E dd/MM/y",
                y: "E dd/MM/y – E dd/MM/y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "d–d MMM y",
                M: "d MMM – d MMM y",
                y: "d MMM y – d MMM y"
            },
            yMMMEd: {
                d: "E d – E d MMM y",
                M: "E d MMM – E d MMM y",
                y: "E d MMM y – E d MMM y"
            },
            yMMMM: {
                M: "MMMM – MMMM y",
                y: "MMMM y – MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _50gj280,
        dayPeriods: _50gj292,
        monthNames: _50gj286,
        eraNames: {
            wide: [ "avant Jésus-Christ", "après Jésus-Christ" ],
            abbreviated: [ "av. J.-C.", "ap. J.-C." ]
        },
        quarterNames: _50gj266,
        fields: _50gj302
    },
    hebrew: {
        dateFormats: _50gj287,
        datePartsOrder: "dmy",
        dateIntervalFormats: _50gj296,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _50gj280,
        dayPeriods: _50gj292,
        monthNames: {
            format: _50gj268,
            standAlone: _50gj268
        },
        eraNames: {
            wide: [ "Anno Mundi" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _50gj266,
        fields: _50gj302
    },
    indian: {
        dateFormats: _50gj287,
        datePartsOrder: "dmy",
        dateIntervalFormats: _50gj296,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _50gj280,
        dayPeriods: _50gj292,
        monthNames: {
            format: _50gj270,
            standAlone: _50gj270
        },
        eraNames: {
            wide: [ "SAKA" ],
            abbreviated: [ "SAKA" ]
        },
        quarterNames: _50gj266,
        fields: _50gj302
    },
    islamic: _50gj305,
    "islamic-umalqura": _50gj305,
    "islamic-tbla": _50gj305,
    "islamic-civil": _50gj305,
    "islamic-rgsa": _50gj305,
    iso8601: _50gj303,
    japanese: {
        dateFormats: {
            basic: {
                fullDate: "EEEE d MMMM y G",
                longDate: "d MMMM y G",
                mediumDate: "d MMM y G",
                shortDate: "dd/MM/y GGGGG",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "dd/MM/y GGGGG HH:mm",
                mediumDateTime: "d MMM y G HH:mm:ss",
                longDateTime: "d MMMM y G HH:mm:ss z",
                fullDateTime: "EEEE d MMMM y G HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E d",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E d MMM y G",
                M: "L",
                Md: "d/M",
                MEd: "E d/M",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E d MMM",
                MMMMd: "d MMMM",
                y: "y G",
                yyyy: "y G",
                yyyyM: "M/y GGGGG",
                yyyyMd: "d/M/y GGGGG",
                yyyyMEd: "E d/M/y GGGGG",
                yyyyMMM: "MMM y G",
                yyyyMMMd: "d MMM y G",
                yyyyMMMEd: "E d MMM y G",
                yyyyMMMM: "MMMM y G",
                yyyyQQQ: "QQQ y G",
                yyyyQQQQ: "QQQQ y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                ms: "mm:ss",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: _50gj296,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _50gj280,
        dayPeriods: _50gj292,
        monthNames: _50gj286,
        eraNames: {
            wide: [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tempyō (729–749)", "Tempyō-kampō (749-749)", "Tempyō-shōhō (749-757)", "Tempyō-hōji (757-765)", "Temphō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kemmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōryaku (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ],
            abbreviated: [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ]
        },
        quarterNames: _50gj266,
        fields: _50gj302
    },
    persian: {
        dateFormats: _50gj287,
        datePartsOrder: "dmy",
        dateIntervalFormats: _50gj296,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _50gj280,
        dayPeriods: _50gj292,
        monthNames: {
            format: _50gj271,
            standAlone: _50gj271
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _50gj266,
        fields: _50gj302
    },
    roc: {
        dateFormats: _50gj287,
        datePartsOrder: "dmy",
        dateIntervalFormats: _50gj296,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _50gj280,
        dayPeriods: _50gj292,
        monthNames: _50gj286,
        eraNames: {
            wide: [ "avant RdC", "RdC" ],
            abbreviated: [ "avant RdC", "RdC" ]
        },
        quarterNames: _50gj266,
        fields: _50gj302
    },
    islamicc: _50gj303
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n));
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 0 || i === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderDigitsOrdinalMasculine(n);
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinalMasculine(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderDigitsOrdinalMasculine = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinalMasculine(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + this.renderDordMascabbrev(n);
};

inter.renderSpelloutCardinalMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "moins " + this.renderSpelloutCardinalMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculine(Math.floor(n)) + " virgule " + this.renderSpelloutCardinalMasculine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutLeading(Math.floor(n / 1e15)) + " billiards" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 1e15) return "un billiard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutLeading(Math.floor(n / 1e12)) + " billions" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 1e12) return "un billion" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutLeading(Math.floor(n / 1e9)) + " milliards" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 1e9) return "un milliard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutLeading(Math.floor(n / 1e6)) + " millions" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 1e6) return "un million" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutLeading(Math.floor(n / 1e3)) + " mille" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 1e3) return "mille" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinalMasculine(Math.floor(n / 100)) + " cent" + this.renderCentsM(n % 100);
    if (n >= 100) return "cent" + (n === 100 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 80) return "quatre-vingt" + this.renderSubcentsM(n % 10);
    if (n >= 60) return "soixante" + (n === 60 ? "" : "-" + this.renderEtUn(n % 10));
    if (n >= 50) return "cinquante" + (n === 50 ? "" : "-" + this.renderEtUn(n % 10));
    if (n >= 40) return "quarante" + (n === 40 ? "" : "-" + this.renderEtUn(n % 10));
    if (n >= 30) return "trente" + (n === 30 ? "" : "-" + this.renderEtUn(n % 10));
    if (n >= 20) return "vingt" + (n === 20 ? "" : "-" + this.renderEtUn(n % 10));
    if (n >= 17) return "dix-" + this.renderSpelloutCardinalMasculine(n % 10);
    if (n >= 16) return "seize";
    if (n >= 15) return "quinze";
    if (n >= 14) return "quatorze";
    if (n >= 13) return "treize";
    if (n >= 12) return "douze";
    if (n >= 11) return "onze";
    if (n >= 10) return "dix";
    if (n >= 9) return "neuf";
    if (n >= 8) return "huit";
    if (n >= 7) return "sept";
    if (n >= 6) return "six";
    if (n >= 5) return "cinq";
    if (n >= 4) return "quatre";
    if (n >= 3) return "trois";
    if (n >= 2) return "deux";
    if (n >= 1) return "un";
    if (n >= 0) return "zéro";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderDordMascabbrev = function(n) {
    if (n >= 2) return "e";
    if (n >= 1) return "er";
    if (n >= 0) return "e";
};

inter.renderSpelloutLeading = function(n) {
    if (n >= 1e3) return this.renderSpelloutCardinalMasculine(n);
    if (n >= 200) return this.renderSpelloutLeading(Math.floor(n / 100)) + " cent" + (n === 200 ? "" : " " + this.renderSpelloutLeading(n % 100));
    if (n >= 100) return "cent" + (n === 100 ? "" : " " + this.renderSpelloutLeading(n % 100));
    if (n >= 80) return "quatre-vingt" + (n === 80 ? "" : "-" + this.renderSpelloutLeading(n % 10));
    if (n >= 0) return this.renderSpelloutCardinalMasculine(n);
};

inter.renderCentsM = function(n) {
    if (n >= 1) return " " + this.renderSpelloutCardinalMasculine(n);
    if (n >= 0) return "s";
};

inter.renderSubcentsM = function(n) {
    if (n >= 1) return "-" + this.renderSpelloutCardinalMasculine(n);
    if (n >= 0) return "s";
};

inter.renderEtUn = function(n) {
    if (n >= 12) return this.renderSpelloutCardinalMasculine(n);
    if (n >= 11) return "et-onze";
    if (n >= 2) return this.renderSpelloutCardinalMasculine(n);
    if (n >= 1) return "et-un";
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

module.exports = inter;