function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _74871 = [ "Q1", "Q2", "Q3", "Q4" ], _74872 = {
    displayName: "چارأک"
}, _74873 = {
    displayName: "ھأفتە"
}, _74874 = {
    displayName: "دئیقە"
}, _74875 = {
    displayName: "ثانیە"
}, _74876 = {
    all: {
        leap: "{0}bis"
    }
}, _74877 = {
    displayName: "راساگە"
}, _74878 = {
    displayName: "گات روٙز"
}, _74879 = {
    a: "h a – h a",
    h: "h–h a"
}, _748710 = {
    displayName: "روٙز ھأفتە"
}, _748711 = [ "Before R.O.C.", "R.O.C." ], _748712 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _748713 = [ "S", "M", "T", "W", "T", "F", "S" ], _748714 = [ "چارأک أڤأل", "Q2", "Q3", "Q4" ], _748715 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _748716 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _748717 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _748718 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _748719 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _748720 = {
    "0": "أمروٙ",
    "1": "شوٙصوٙ",
    "-1": "دیروٙز"
}, _748721 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _748722 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _748723 = {
    M: "G y MMM–MMM",
    y: "G y MMM – y MMM"
}, _748724 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _748725 = {
    M: "G y MMMM–MMMM",
    y: "G y MMMM – y MMMM"
}, _748726 = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ], _748727 = {
    M: "GGGGG y-MM – y-MM",
    y: "GGGGG y-MM – y-MM"
}, _748728 = {
    "0": "this year",
    "1": "next year",
    "-1": "last year"
}, _748729 = {
    "0": "this week",
    "1": "next week",
    "-1": "last week"
}, _748730 = {
    future: {
        other: "+{0} y"
    },
    past: {
        other: "-{0} y"
    }
}, _748731 = {
    future: {
        other: "+{0} Q"
    },
    past: {
        other: "-{0} Q"
    }
}, _748732 = {
    future: {
        other: "+{0} m"
    },
    past: {
        other: "-{0} m"
    }
}, _748733 = {
    future: {
        other: "+{0} w"
    },
    past: {
        other: "-{0} w"
    }
}, _748734 = {
    future: {
        other: "+{0} d"
    },
    past: {
        other: "-{0} d"
    }
}, _748735 = {
    future: {
        other: "+{0} h"
    },
    past: {
        other: "-{0} h"
    }
}, _748736 = {
    future: {
        other: "+{0} s"
    },
    past: {
        other: "-{0} s"
    }
}, _748737 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _748738 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _748739 = {
    "0": "this month",
    "1": "next month",
    "-1": "last month"
}, _748740 = {
    id: "001",
    displayName: "دونیا",
    hasTimeZones: false
}, _748741 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _748742 = {
    future: {
        other: "+{0} min"
    },
    past: {
        other: "-{0} min"
    }
}, _748743 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _748744 = {
    "0": "this Sunday",
    "1": "next Sunday",
    "-1": "last Sunday"
}, _748745 = {
    "0": "this Monday",
    "1": "next Monday",
    "-1": "last Monday"
}, _748746 = {
    "0": "this Friday",
    "1": "next Friday",
    "-1": "last Friday"
}, _748747 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _748748 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _748749 = {
    "0": "this Tuesday",
    "1": "next Tuesday",
    "-1": "last Tuesday"
}, _748750 = [ "چارأک أڤأل", "چارأک دویوم", "چارأک سئیوم", "چارأک چاروم" ], _748751 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _748752 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _748753 = {
    "0": "this Thursday",
    "1": "next Thursday",
    "-1": "last Thursday"
}, _748754 = {
    "0": "this Saturday",
    "1": "next Saturday",
    "-1": "last Saturday"
}, _748755 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _748756 = {
    id: "CN",
    displayName: "چین",
    regionId: "030",
    hasTimeZones: true
}, _748757 = {
    id: "IN",
    displayName: "ھئن",
    regionId: "034",
    hasTimeZones: true
}, _748758 = {
    "0": "this Wednesday",
    "1": "next Wednesday",
    "-1": "last Wednesday"
}, _748759 = {
    id: "DE",
    displayName: "آلمان",
    regionId: "155",
    hasTimeZones: true
}, _748760 = {
    d: "G y MMM d–d",
    M: "G y MMM d – MMM d",
    y: "G y MMM d – y MMM d"
}, _748761 = {
    relative: _748744
}, _748762 = {
    relative: _748745
}, _748763 = {
    relative: _748746
}, _748764 = {
    id: "JP",
    displayName: "جاپوٙن",
    regionId: "030",
    hasTimeZones: true
}, _748765 = {
    id: "RU",
    displayName: "روٙسیە",
    regionId: "151",
    hasTimeZones: true
}, _748766 = {
    id: "IT",
    displayName: "ئیتالیا",
    regionId: "039",
    hasTimeZones: true
}, _748767 = {
    id: "BR",
    displayName: "بئرئزیل",
    regionId: "005",
    hasTimeZones: true
}, _748768 = {
    id: "FR",
    displayName: "فأرانسە",
    regionId: "155",
    hasTimeZones: true
}, _748769 = {
    relative: _748749
}, _748770 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _748771 = {
    relative: _748753
}, _748772 = {
    relative: _748754
}, _748773 = {
    id: "142",
    displayName: "آسیا",
    hasTimeZones: false,
    parentRegionId: "001"
}, _748774 = {
    id: "GB",
    displayName: "بیریتانیا گأپ",
    regionId: "154",
    hasTimeZones: true
}, _748775 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _748776 = {
    id: "002",
    displayName: "ئفریقا",
    hasTimeZones: false,
    parentRegionId: "001"
}, _748777 = {
    id: "019",
    displayName: "ئمریکا",
    hasTimeZones: false,
    parentRegionId: "001"
}, _748778 = {
    relative: _748758
}, _748779 = {
    id: "150",
    displayName: "ئوروٙپا",
    hasTimeZones: false,
    parentRegionId: "001"
}, _748780 = {
    id: "029",
    displayName: "کارائیب",
    hasTimeZones: false,
    parentRegionId: "019"
}, _748781 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _748782 = {
    id: "US",
    displayName: "ڤولاتیا یأکاگئرتە",
    regionId: "021",
    hasTimeZones: true
}, _748783 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _748784 = {
    id: "021",
    displayName: "ئمریکا ڤارو",
    hasTimeZones: false,
    parentRegionId: "019"
}, _748785 = {
    id: "005",
    displayName: "ئمریکا ھارگە",
    hasTimeZones: false,
    parentRegionId: "019"
}, _748786 = {
    id: "013",
    displayName: "مینجا ئمریکا",
    hasTimeZones: false,
    parentRegionId: "019"
}, _748787 = {
    abbreviated: {
        am: "AM",
        pm: "PM"
    },
    narrow: {
        am: "AM",
        pm: "PM"
    },
    wide: {
        am: "AM",
        pm: "PM"
    }
}, _748788 = {
    displayName: "ساأت",
    relativeTime: _748735
}, _748789 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _748790 = {
    d: "GGGGG y-MM-dd – y-MM-dd",
    M: "GGGGG y-MM-dd – y-MM-dd",
    y: "GGGGG y-MM-dd – y-MM-dd"
}, _748791 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _748792 = {
    id: "009",
    displayName: "ھوم پئڤأند جأھوٙن آڤ",
    hasTimeZones: false,
    parentRegionId: "001"
}, _748793 = {
    displayName: "دئیقە",
    relativeTime: _748742
}, _748794 = {
    d: "G y MMM d, E – MMM d, E",
    M: "G y MMM d, E – MMM d, E",
    y: "G y MMM d, E – y MMM d, E"
}, _748795 = {
    abbreviated: _74871,
    narrow: [ "1", "2", "3", "4" ],
    wide: _74871
}, _748796 = {
    displayName: "ثانیە",
    relative: [ "now" ],
    relativeTime: _748736
}, _748797 = [ "جانڤیە", "فئڤریە", "مارس", "آڤریل", "مئی", "جوٙأن", "جوٙلا", "آگوست", "سئپتامر", "ئوکتوڤر", "نوڤامر", "دئسامر" ], _748798 = {
    d: "GGGGG y-MM-dd, E – y-MM-dd, E",
    M: "GGGGG y-MM-dd, E – y-MM-dd, E",
    y: "GGGGG y-MM-dd, E – y-MM-dd, E"
}, _748799 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _7487100 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _7487101 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _7487102 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _7487103 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _7487104 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _7487105 = {
    displayName: "روٙز",
    relative: _748720,
    relativeTime: _748734
}, _7487106 = {
    abbreviated: _748714,
    narrow: [ "1", "2", "3", "4" ],
    wide: _748750
}, _7487107 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _7487108 = {
    displayName: "سال",
    relative: _748728,
    relativeTime: _748730
}, _7487109 = {
    displayName: "ما",
    relative: _748739,
    relativeTime: _748732
}, _7487110 = {
    displayName: "ھأفتە",
    relative: _748729,
    relativeTime: _748733
}, _7487111 = {
    displayName: "چارأک",
    relative: _748748,
    relativeTime: _748731
}, _7487112 = {
    decimal: ".",
    group: ",",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    list: ";",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _7487113 = {
    decimal: ".",
    group: ",",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    list: "؛",
    exponential: "اس",
    superscriptingExponent: "×",
    perMille: "؉",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _7487114 = {
    format: _748787,
    standAlone: _748787
}, _7487115 = {
    symbols: _7487113
}, _7487116 = {
    format: _748775,
    numeric: _74876,
    standAlone: _748775
}, _7487117 = {
    abbreviated: _748726,
    narrow: _748713,
    wide: _748726,
    "short": _748726
}, _7487118 = {
    symbols: _7487113,
    digits: "renderSpelloutCardinal"
}, _7487119 = {
    "1000": {
        other: "0K"
    },
    "10000": {
        other: "00K"
    },
    "100000": {
        other: "000K"
    },
    "1000000": {
        other: "0M"
    },
    "10000000": {
        other: "00M"
    },
    "100000000": {
        other: "000M"
    },
    "1000000000": {
        other: "0G"
    },
    "10000000000": {
        other: "00G"
    },
    "100000000000": {
        other: "000G"
    },
    "1000000000000": {
        other: "0T"
    },
    "10000000000000": {
        other: "00T"
    },
    "100000000000000": {
        other: "000T"
    }
}, _7487120 = {
    symbols: _7487113,
    digits: "renderSpelloutCardinalFinancial"
}, _7487121 = {
    abbreviated: _748781,
    narrow: _748743,
    wide: _748781
}, _7487122 = {
    format: _748795,
    standAlone: _7487106
}, _7487123 = {
    "1000": {
        other: "¤ 0K"
    },
    "10000": {
        other: "¤ 00K"
    },
    "100000": {
        other: "¤ 000K"
    },
    "1000000": {
        other: "¤ 0M"
    },
    "10000000": {
        other: "¤ 00M"
    },
    "100000000": {
        other: "¤ 000M"
    },
    "1000000000": {
        other: "¤ 0G"
    },
    "10000000000": {
        other: "¤ 00G"
    },
    "100000000000": {
        other: "¤ 000G"
    },
    "1000000000000": {
        other: "¤ 0T"
    },
    "10000000000000": {
        other: "¤ 00T"
    },
    "100000000000000": {
        other: "¤ 000T"
    }
}, _7487124 = {
    abbreviated: _748783,
    narrow: _748783,
    wide: _748783
}, _7487125 = {
    format: _7487124
}, _7487126 = {
    abbreviated: _748797,
    narrow: _748743,
    wide: _748797
}, _7487127 = {
    abbreviated: _7487100,
    narrow: _748752,
    wide: _7487100
}, _7487128 = {
    abbreviated: _7487101,
    narrow: _748743,
    wide: _7487101
}, _7487129 = {
    abbreviated: _7487102,
    narrow: _748752,
    wide: _7487102
}, _7487130 = {
    abbreviated: _748799,
    narrow: _748743,
    wide: _7487107
}, _7487131 = {
    abbreviated: _7487103,
    narrow: _748752,
    wide: _7487103
}, _7487132 = {
    abbreviated: _7487104,
    narrow: _748743,
    wide: _7487104
}, _7487133 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _7487134 = {
    format: _7487117,
    standAlone: _7487117
}, _7487135 = {
    format: _7487121,
    standAlone: _7487121
}, _7487136 = {
    "long": _7487119,
    "short": _7487119,
    "default": "#,##0.###"
}, _7487137 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _7487138 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _7487139 = {
    format: _7487126,
    standAlone: _7487126
}, _7487140 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _7487141 = {
    format: _7487130,
    standAlone: _7487130
}, _7487142 = {
    basic: _7487133,
    cldr: _7487137
}, _7487143 = {
    d: {
        d: "d–d"
    },
    h: _74879,
    H: {
        H: "HH–HH"
    },
    hm: _748747,
    Hm: _748717,
    hmv: _748755,
    Hmv: _748721,
    hv: _748712,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _748722,
    MEd: _748737,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _748715,
    MMMEd: _748738,
    y: {
        y: "U–U"
    },
    yM: _748718,
    yMd: _748770,
    yMEd: _748791,
    yMMM: _748719,
    yMMMd: _748751,
    yMMMEd: _748789,
    yMMMM: _748724
}, _7487144 = {
    d: {
        d: "d–d"
    },
    h: _74879,
    H: {
        H: "HH–HH"
    },
    hm: _748747,
    Hm: _748717,
    hmv: _748755,
    Hmv: _748721,
    hv: _748712,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _748722,
    MEd: _748737,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _748715,
    MMMEd: _748738,
    y: {
        y: "G y–y"
    },
    yM: _748727,
    yMd: _748790,
    yMEd: _748798,
    yMMM: _748723,
    yMMMd: _748760,
    yMMMEd: _748794,
    yMMMM: _748725
}, _7487145 = {
    beforeCurrency: _7487138,
    afterCurrency: _7487138
}, _7487146 = {
    "short": _7487123,
    "default": "¤ #,##0.00",
    other: "{0} {1}",
    currencySpacing: _7487145
}, _7487147 = {
    abbreviated: _7487140,
    narrow: _7487140,
    wide: _7487140
}, _7487148 = {
    format: _7487147
}, _7487149 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _7487136,
    currency: _7487146,
    percent: {
        "default": "#,##0%"
    }
}, _7487150 = {
    era: {
        displayName: "سأرۉ"
    },
    year: _7487108,
    "year-short": {
        displayName: "سال"
    },
    "year-narrow": {
        displayName: "سال"
    },
    quarter: _7487111,
    "quarter-short": _74872,
    "quarter-narrow": _74872,
    month: _7487109,
    "month-short": {
        displayName: "ما"
    },
    "month-narrow": {
        displayName: "ما"
    },
    week: _7487110,
    "week-short": _74873,
    "week-narrow": _74873,
    day: _7487105,
    "day-short": {
        displayName: "روٙز"
    },
    "day-narrow": {
        displayName: "روٙز"
    },
    weekday: _748710,
    dayperiod: _74878,
    hour: _748788,
    "hour-short": {
        displayName: "ساأت"
    },
    "hour-narrow": {
        displayName: "ساأت"
    },
    minute: _748793,
    "minute-short": _74874,
    "minute-narrow": _74874,
    second: _748796,
    "second-short": _74875,
    "second-narrow": _74875,
    zone: _74877,
    sun: _748761,
    mon: _748762,
    tue: _748769,
    wed: _748778,
    thu: _748771,
    fri: _748763,
    sat: _748772
}, _7487151 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _7487150
}, _7487152 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _7487153 = {
    dateFormats: P.calendars.buddhist.dateFormats,
    datePartsOrder: "ymd",
    dateIntervalFormats: _7487144,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _7487134,
    dayPeriods: _7487114,
    monthNames: _7487141,
    eraNames: _748716,
    quarterNames: _7487122,
    fields: _7487150
}, _7487154 = {
    dayParts: _7487125,
    days: _7487148,
    months: _7487148,
    years: _7487148,
    zodiacs: _7487125
}, _7487155 = {
    dateFormats: _7487142,
    datePartsOrder: "md",
    dateIntervalFormats: _7487143,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _7487134,
    dayPeriods: _7487114,
    cyclicNames: _7487154,
    monthNames: _7487135,
    monthPatterns: _7487116,
    quarterNames: _7487122,
    fields: _7487150
};

inter.id = "lrc";

inter.characters = {
    exemplar: {
        "default": [ "\\u0659", "\\u065B", "آ", "أ", "ؤ", "ئ", "ا", "ب", "پ", "ت", "ث", "ج", "چ", "ح", "خ", "د", "ذ", "ر", "ز", "ژ", "س", "ش", "ص", "ض", "ط", "ظ", "ع", "غ", "ف", "ڤ", "ق", "ک", "گ", "ل", "م", "ن", "ھ", "ە", "و", "ۉ", "ۊ", "ی", "ؽ" ],
        auxiliary: [ "\\u200B\\u200C\\u200D\\u200E\\u200F", "\\u064B", "\\u064C", "\\u064D", "\\u064E", "\\u064F", "\\u0650", "\\u0651", "\\u0652", "\\u0654", "إ", "ة", "ك", "ه", "ى", "ي" ],
        index: [ "آ", "ا", "ب", "پ", "ت", "ث", "ج", "چ", "ح", "خ", "د", "ذ", "ر", "ز", "ژ", "س", "ش", "ص", "ض", "ط", "ظ", "ع", "غ", "ف", "ق", "ک", "گ", "ل", "م", "ن", "ھ", "و", "ی" ],
        punctuation: [ "\\-", "‐", "،", "٫", "٬", "؛", "\\:", "!", "؟", ".", "…", "‹", "›", "«", "»", "(", ")", "\\[", "\\]", "*", "/", "\\\\" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _7487113,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _7487149,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _7487149,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _7487113,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _7487113,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _7487113,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _7487113,
        digits: "renderEthiopic"
    },
    finance: _7487115,
    fullwide: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _7487113,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _7487113,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _7487113,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _7487113,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _7487118,
    hansfin: _7487120,
    hant: _7487118,
    hantfin: _7487120,
    hebr: {
        symbols: _7487113,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _7487113,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _7487118,
    jpanfin: _7487120,
    kali: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _7487113,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _7487113,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _7487113,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _7487113,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _7487113,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _7487113,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _7487113,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _7487113,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _7487115,
    nkoo: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _7487113,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _7487113,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _7487113,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _7487113,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _7487113,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _7487113,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _7487115,
    vaii: {
        symbols: _7487112,
        formats: _7487149,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _7487113,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.defaultNumberSystemId = "arabext";

inter.calendars = {
    buddhist: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _7487144,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7487134,
        dayPeriods: _7487114,
        monthNames: _7487139,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _7487122,
        fields: _7487150
    },
    chinese: _7487155,
    coptic: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _7487144,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7487134,
        dayPeriods: _7487114,
        monthNames: {
            format: _7487129,
            standAlone: _7487129
        },
        eraNames: _748741,
        quarterNames: _7487122,
        fields: _7487150
    },
    dangi: _7487155,
    ethioaa: _7487151,
    ethiopic: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _7487144,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7487134,
        dayPeriods: _7487114,
        monthNames: {
            format: _7487131,
            standAlone: _7487131
        },
        eraNames: _748741,
        quarterNames: _7487122,
        fields: _7487150
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "y MMMM d, EEEE",
                longDate: "y MMMM d",
                mediumDate: "y MMM d",
                shortDate: "y-MM-dd",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "y-MM-dd HH:mm",
                mediumDateTime: "y MMM d HH:mm:ss",
                longDateTime: "y MMMM d HH:mm:ss z",
                fullDateTime: "y MMMM d, EEEE HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "d, E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "MM-dd",
                MEd: "MM-dd, E",
                MMM: "LLL",
                MMMd: "MMM d",
                MMMEd: "MMM d, E",
                MMMMd: "MMMM d",
                ms: "mm:ss",
                y: "y",
                yM: "y-MM",
                yMd: "y-MM-dd",
                yMEd: "y-MM-dd, E",
                yMMM: "y MMM",
                yMMMd: "y MMM d",
                yMMMEd: "y MMM d, E",
                yMMMM: "y MMMM",
                yQQQ: "y QQQ",
                yQQQQ: "y QQQQ"
            }
        },
        datePartsOrder: "ymd",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _74879,
            H: {
                H: "HH–HH"
            },
            hm: _748747,
            Hm: _748717,
            hmv: _748755,
            Hmv: _748721,
            hv: _748712,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "MM–MM"
            },
            Md: _748722,
            MEd: _748737,
            MMM: {
                M: "LLL–LLL"
            },
            MMMd: _748715,
            MMMEd: _748738,
            y: {
                y: "y–y"
            },
            yM: _748718,
            yMd: _748770,
            yMEd: _748791,
            yMMM: {
                M: "y MMM–MMM",
                y: "y MMM – y MMM"
            },
            yMMMd: {
                d: "y MMM d–d",
                M: "y MMM d – MMM d",
                y: "y MMM d – y MMM d"
            },
            yMMMEd: {
                d: "y MMM d, E – MMM d, E",
                M: "y MMM d, E – MMM d, E",
                y: "y MMM d, E – y MMM d, E"
            },
            yMMMM: {
                M: "y MMMM–MMMM",
                y: "y MMMM – y MMMM"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7487134,
        dayPeriods: _7487114,
        monthNames: _7487139,
        eraNames: {
            wide: [ "BCE", "CE" ],
            abbreviated: [ "BCE", "CE" ]
        },
        quarterNames: _7487122,
        fields: _7487150
    },
    hebrew: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _7487144,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7487134,
        dayPeriods: _7487114,
        monthNames: {
            format: _7487127,
            standAlone: _7487127
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _7487122,
        fields: _7487150
    },
    indian: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _7487144,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7487134,
        dayPeriods: _7487114,
        monthNames: {
            format: _7487132,
            standAlone: _7487132
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _7487122,
        fields: _7487150
    },
    islamic: _7487153,
    "islamic-umalqura": _7487153,
    "islamic-tbla": _7487153,
    "islamic-civil": _7487153,
    "islamic-rgsa": _7487153,
    iso8601: _7487151,
    japanese: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _7487144,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7487134,
        dayPeriods: _7487114,
        monthNames: _7487139,
        eraNames: {
            wide: _7487152,
            abbreviated: _7487152
        },
        quarterNames: _7487122,
        fields: _7487150
    },
    persian: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _7487144,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7487134,
        dayPeriods: _7487114,
        monthNames: {
            format: _7487128,
            standAlone: _7487128
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _7487122,
        fields: _7487150
    },
    roc: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _7487144,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _7487134,
        dayPeriods: _7487114,
        monthNames: _7487139,
        eraNames: {
            wide: _748711,
            abbreviated: _748711
        },
        quarterNames: _7487122,
        fields: _7487150
    },
    islamicc: _7487151
};

inter.pluralRule = function(n) {};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.territories = [ _748773, _748759, _748776, _748777, _748784, _748785, _748779, _748766, _748767, _748774, _748764, _748740, _748765, _748768, _748786, _748756, _748782, _748780, _748757, _748792 ];

inter.regions = [ _748773, _748776, _748777, _748784, _748785, _748779, _748740, _748786, _748780, _748792 ];

inter.countries = [ _748759, _748766, _748767, _748774, _748764, _748765, _748768, _748756, _748782, _748757 ];

inter.languages = [ {
    id: "af",
    displayName: "آفریکانس",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "آقئم",
    nativeDisplayName: "Aghem"
}, {
    id: "ak",
    displayName: "آکان",
    nativeDisplayName: "Akan"
}, {
    id: "en_us",
    displayName: "ئینگیلیسی ئمریکایی",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "ئیناری سامی",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "en_au",
    displayName: "ئینگیلیسی ئوستارالیایی",
    nativeDisplayName: "Australian English"
}, {
    id: "az",
    displayName: "آذأربایئجانی ھارگە",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "مالایی",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bm",
    displayName: "بامبارا",
    nativeDisplayName: "bamanakan"
}, {
    id: "bs",
    displayName: "بوسنیایی",
    nativeDisplayName: "bosanski"
}, {
    id: "br",
    displayName: "بئرئتون",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "ئینگیلیسی بئریتانیایی",
    nativeDisplayName: "British English"
}, {
    id: "en_ca",
    displayName: "ئینگیلیسی کانادایی",
    nativeDisplayName: "Canadian English"
}, {
    id: "ca",
    displayName: "کاتالان",
    nativeDisplayName: "català"
}, {
    id: "kde",
    displayName: "ماکوٙندئ",
    nativeDisplayName: "Chimakonde"
}, {
    id: "sn",
    displayName: "شونا",
    nativeDisplayName: "chiShona"
}, {
    id: "cy",
    displayName: "ڤئلزی",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "دانمارکی",
    nativeDisplayName: "dansk"
}, {
    id: "se",
    displayName: "سامی شومالی",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "de",
    displayName: "آلمانی",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "لوٙ",
    nativeDisplayName: "Dholuo"
}, {
    id: "dsb",
    displayName: "سوربی ھاری",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "دوٙالا",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "ئستونیایی",
    nativeDisplayName: "eesti"
}, {
    id: "guz",
    displayName: "گوٙسی",
    nativeDisplayName: "Ekegusii"
}, {
    id: "en",
    displayName: "ئینگیلیسی",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "ئسپانیایی",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "ئسپانیایی ئوروٙپا",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "ئسپانیایی مئکزیک",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "ئسپانیایی ئمریکا لاتین",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "ئسپئرانتو",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "باسکی",
    nativeDisplayName: "euskara"
}, {
    id: "ee",
    displayName: "ئڤئ",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fil",
    displayName: "فیلیپینی",
    nativeDisplayName: "Filipino"
}, {
    id: "fr",
    displayName: "فآرانسئ ئی",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "فآرانسئ ئی کانادا",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "فآرانسئ ئی سوٙییس",
    nativeDisplayName: "français suisse"
}, {
    id: "fo",
    displayName: "فاروٙسی",
    nativeDisplayName: "føroyskt"
}, {
    id: "ga",
    displayName: "ئیرلأندی",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "مانکس",
    nativeDisplayName: "Gaelg"
}, {
    id: "gl",
    displayName: "گالیسی",
    nativeDisplayName: "galego"
}, {
    id: "ki",
    displayName: "کیکیوٙ",
    nativeDisplayName: "Gikuyu"
}, {
    id: "ha",
    displayName: "ھائوسا",
    nativeDisplayName: "Hausa"
}, {
    id: "bez",
    displayName: "بئنا",
    nativeDisplayName: "Hibena"
}, {
    id: "hsb",
    displayName: "سوربی ڤارو",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "کوروڤاتی",
    nativeDisplayName: "hrvatski"
}, {
    id: "bem",
    displayName: "بیما",
    nativeDisplayName: "Ichibemba"
}, {
    id: "ig",
    displayName: "ئیگبو",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "راندی",
    nativeDisplayName: "Ikirundi"
}, {
    id: "id",
    displayName: "أندونئزیایی",
    nativeDisplayName: "Indonesia"
}, {
    id: "sbp",
    displayName: "سانگوٙ",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "نئدئبئلئ شومالی",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "زولو",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "ئیتالیایی",
    nativeDisplayName: "italiano"
}, {
    id: "dyo",
    displayName: "جولا فوٙنیی",
    nativeDisplayName: "joola"
}, {
    id: "kea",
    displayName: "کاباردینو",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kl",
    displayName: "کالالیسوٙت",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "کالئجین",
    nativeDisplayName: "Kalenjin"
}, {
    id: "kw",
    displayName: "کورنیش",
    nativeDisplayName: "kernewek"
}, {
    id: "naq",
    displayName: "ناما",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "rof",
    displayName: "رومبو",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "کامبا",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "ماچامئ",
    nativeDisplayName: "Kimachame"
}, {
    id: "rw",
    displayName: "کینیاروآندا",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "آسوٙ",
    nativeDisplayName: "Kipare"
}, {
    id: "rwk",
    displayName: "رئڤا",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "سامبوٙروٙ",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "شامبالا",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "سأڤاحیلی",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "سأڤاحیلی کونگو",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "تایتا",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "تئسو",
    nativeDisplayName: "Kiteso"
}, {
    id: "khq",
    displayName: "کی یورا چینی",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "کیارابورو سئنی",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "mfe",
    displayName: "موٙریسی",
    nativeDisplayName: "kreol morisien"
}, {
    id: "nmg",
    displayName: "کئڤاسیوٙ",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "ڤوٙنجوٙ",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ebu",
    displayName: "ئمبو",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "مئرو",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "لانگی",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "lkt",
    displayName: "لاکوٙتا",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lv",
    displayName: "لاتوڤیایی",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "توٙنگان",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lt",
    displayName: "لیتوڤانیایی",
    nativeDisplayName: "lietuvių"
}, {
    id: "ln",
    displayName: "لینگالا",
    nativeDisplayName: "lingála"
}, {
    id: "lg",
    displayName: "گاندا",
    nativeDisplayName: "Luganda"
}, {
    id: "luy",
    displayName: "لوٙئیا",
    nativeDisplayName: "Luluhia"
}, {
    id: "lb",
    displayName: "لوٙکزامبوٙرگی",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "ماسایی",
    nativeDisplayName: "Maa"
}, {
    id: "hu",
    displayName: "مأجاری",
    nativeDisplayName: "magyar"
}, {
    id: "mgh",
    displayName: "ماخوڤا میتو",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "مالاگاشی",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "مالتی",
    nativeDisplayName: "Malti"
}, {
    id: "mgo",
    displayName: "مئتاٛ",
    nativeDisplayName: "metaʼ"
}, {
    id: "ro_md",
    displayName: "رومانیایی مولداڤی",
    nativeDisplayName: "moldovenească"
}, {
    id: "mua",
    displayName: "موٙندانگ",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "jgo",
    displayName: "نئگوٙمبا",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "nl",
    displayName: "ھولأندی",
    nativeDisplayName: "Nederlands"
}, {
    id: "nb",
    displayName: "نورڤئجی بوٙکمال",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "nn",
    displayName: "نورڤئجی نینورسک",
    nativeDisplayName: "nynorsk"
}, {
    id: "xog",
    displayName: "سوٙگا",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "ئوروموٙ",
    nativeDisplayName: "Oromoo"
}, {
    id: "uz",
    displayName: "ئوزبأکی",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pl",
    displayName: "لأھئستانی",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "پورتئغالی",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "پورتئغالی بئرئزیل",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "پورتئغالی ئوروٙپایی",
    nativeDisplayName: "português europeu"
}, {
    id: "ksf",
    displayName: "بافیا",
    nativeDisplayName: "rikpa"
}, {
    id: "ro",
    displayName: "رومانیایی",
    nativeDisplayName: "română"
}, {
    id: "cgg",
    displayName: "چیگا",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "رومانش",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "کوچوٙا",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "نیان کوٙلئ",
    nativeDisplayName: "Runyankore"
}, {
    id: "de_ch",
    displayName: "آلمانی سوٙییسی",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "آلمانی سوٙئیسی",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "seh",
    displayName: "سئنا",
    nativeDisplayName: "sena"
}, {
    id: "sq",
    displayName: "آلبانی",
    nativeDisplayName: "shqip"
}, {
    id: "sk",
    displayName: "ئسلوڤاکی",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "ئسلوڤئنیایی",
    nativeDisplayName: "slovenščina"
}, {
    id: "so",
    displayName: "سوٙمالی",
    nativeDisplayName: "Soomaali"
}, {
    id: "fi",
    displayName: "فأنلاندی",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "سوٙئدی",
    nativeDisplayName: "svenska"
}, {
    id: "sg",
    displayName: "سانگو",
    nativeDisplayName: "Sängö"
}, {
    id: "tzm",
    displayName: "تامازیغ مینجایی",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "کابیلئ",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "twq",
    displayName: "تاساڤاق",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "nus",
    displayName: "نیوٙئر",
    nativeDisplayName: "Thok Nath"
}, {
    id: "vi",
    displayName: "ڤییئتنامی",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "lu",
    displayName: "لوٙبا کاتانگا",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tk",
    displayName: "تورکأمأنی",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "تورکی",
    nativeDisplayName: "Türkçe"
}, {
    id: "nl_be",
    displayName: "فئلاماندی",
    nativeDisplayName: "Vlaams"
}, {
    id: "fy",
    displayName: "فئریسی أفتونئشین",
    nativeDisplayName: "West-Frysk"
}, {
    id: "dje",
    displayName: "زارما",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "yo",
    displayName: "یوروبا",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "ئیسلأندی",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "آلمانی ئوتریشی",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "haw",
    displayName: "ھاڤایی",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "یوٙنانی",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "بئلاروٙسی",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "بولغاری",
    nativeDisplayName: "български"
}, {
    id: "ky",
    displayName: "قئرقیزی",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "مأقدوٙنی",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "موغولی",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "چئچئنی",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "روٙسی",
    nativeDisplayName: "русский"
}, {
    id: "sr",
    displayName: "سئربی",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ئوکراینی",
    nativeDisplayName: "українська"
}, {
    id: "kk",
    displayName: "قأزاق",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "أرمأنی",
    nativeDisplayName: "հայերեն"
}, {
    id: "he",
    displayName: "عئبری",
    nativeDisplayName: "עברית"
}, {
    id: "ab",
    displayName: "آذأربایئجانی"
}, {
    id: "az_arab",
    displayName: "آذأری ھارگە"
}, {
    id: "nds_nl",
    displayName: "آلمانی ھارگە جا"
}, {
    id: "nds",
    displayName: "آلمانی ھاری"
}, {
    id: "sms",
    displayName: "ئسکولت سامی"
}, {
    id: "ug",
    displayName: "ئویغوٙر",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "iu",
    displayName: "ئینوکتیتوٙت"
}, {
    id: "ur",
    displayName: "ئوردوٙ",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "أرأڤی",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "عروی مدرن",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "bgn",
    displayName: "بألوٙچی أقتوٙنئشین"
}, {
    id: "ba",
    displayName: "باشکیری"
}, {
    id: "zxx",
    displayName: "بی نئشوٙ"
}, {
    id: "tt",
    displayName: "تاتار"
}, {
    id: "tg",
    displayName: "تاجیکی"
}, {
    id: "jv",
    displayName: "جاڤئ یی"
}, {
    id: "xh",
    displayName: "خوٙسا"
}, {
    id: "und",
    displayName: "زوٙن نادیار"
}, {
    id: "sd",
    displayName: "سئندی"
}, {
    id: "sma",
    displayName: "سامی ھارگە"
}, {
    id: "sa",
    displayName: "سانسکئریت"
}, {
    id: "su",
    displayName: "سوٙدانی"
}, {
    id: "fa",
    displayName: "فارسی",
    nativeDisplayName: "فارسی"
}, {
    id: "fj",
    displayName: "فیجی"
}, {
    id: "la",
    displayName: "لاتین"
}, {
    id: "smj",
    displayName: "لۉلئ سامی"
}, {
    id: "lrc",
    displayName: "لۊری شومالی",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mi",
    displayName: "مائوری"
}, {
    id: "mzn",
    displayName: "مازأندأرانی",
    nativeDisplayName: "مازرونی"
}, {
    id: "arn",
    displayName: "ماپوٙچئ"
}, {
    id: "moh",
    displayName: "موٙھاڤک"
}, {
    id: "nqo",
    displayName: "نئکوٙ"
}, {
    id: "ps",
    displayName: "پأشتوٙ",
    nativeDisplayName: "پښتو"
}, {
    id: "cv",
    displayName: "چواشی"
}, {
    id: "wbp",
    displayName: "ڤارلپیری"
}, {
    id: "wo",
    displayName: "ڤولوف"
}, {
    id: "ku",
    displayName: "کوردی کورمانجی"
}, {
    id: "sdh",
    displayName: "کوردی ھارگە"
}, {
    id: "ckb",
    displayName: "کوردی سوٙرانی",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "co",
    displayName: "کوریسکان"
}, {
    id: "koi",
    displayName: "کومی پئرمیاک"
}, {
    id: "ks",
    displayName: "کأشمیری",
    nativeDisplayName: "کٲشُر"
}, {
    id: "quc",
    displayName: "کیچی"
}, {
    id: "gag",
    displayName: "گاگائوز"
}, {
    id: "gn",
    displayName: "گوٙآرانی"
}, {
    id: "ht",
    displayName: "ھاییتی"
}, {
    id: "kok",
    displayName: "کوٙنکانی",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "نئپالی",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "بودو",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "مأراتی",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "ھئنی",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "آسامی",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "بأنگالی",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "پأنجابی",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "گوجأراتی",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "ئوریا",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "تامیل",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "تئلئگو",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "کاناد",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "مالایام",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "سینھالا",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "تایلأندی",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "لاو",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "تأبأتی",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "زوٙنگخا",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "بئرمئ یی",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "گورجی",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "تیگرینیا",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "أمھأری",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "خئمئر",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "تامازیغ مأراکئشی",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "تاچئلھیت",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "چینی",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "جاپوٙنی",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "چینی سادە بیە",
    nativeDisplayName: "简体中文"
}, {
    id: "zh_hant",
    displayName: "چینی سونأتی",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "سی چوان یی",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "ڤای",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "چوروٙکی",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "کورئ یی",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Armn",
    displayName: "أرمأنی"
}, {
    id: "Ethi",
    displayName: "ئتوٙیوٙپیایی"
}, {
    id: "Orya",
    displayName: "ئوریا"
}, {
    id: "Beng",
    displayName: "بأنگالی"
}, {
    id: "Brai",
    displayName: "بئرئیل"
}, {
    id: "Bopo",
    displayName: "بوٙپوٙ"
}, {
    id: "Tibt",
    displayName: "تأبأتی"
}, {
    id: "Telu",
    displayName: "تئلئگو"
}, {
    id: "Taml",
    displayName: "تامیل"
}, {
    id: "Thaa",
    displayName: "تانا"
}, {
    id: "Thai",
    displayName: "تایلأندی"
}, {
    id: "Zyyy",
    displayName: "جائوفتاأ"
}, {
    id: "Jpan",
    displayName: "جاپوٙنی"
}, {
    id: "Khmr",
    displayName: "خئمئر"
}, {
    id: "Deva",
    displayName: "دیڤانگأری"
}, {
    id: "Hans",
    displayName: "سادە بیە"
}, {
    id: "Hant",
    displayName: "سونأتی"
}, {
    id: "Cyrl",
    displayName: "سیریلیک"
}, {
    id: "Sinh",
    displayName: "سیناھالا"
}, {
    id: "Arab",
    displayName: "عأرأڤی"
}, {
    id: "Hebr",
    displayName: "عئبری"
}, {
    id: "Laoo",
    displayName: "لائو"
}, {
    id: "Latn",
    displayName: "لاتین"
}, {
    id: "Mlym",
    displayName: "مالایام"
}, {
    id: "Mong",
    displayName: "موغولی"
}, {
    id: "Mymr",
    displayName: "میانمار"
}, {
    id: "Zsym",
    displayName: "نئشوٙنە یا"
}, {
    id: "Zxxx",
    displayName: "نیسئسە نأبیە"
}, {
    id: "Zzzz",
    displayName: "نیسئسە نادیار"
}, {
    id: "Kana",
    displayName: "کاتانگا"
}, {
    id: "Knda",
    displayName: "کانادا"
}, {
    id: "Kore",
    displayName: "کورئ یی"
}, {
    id: "Gujr",
    displayName: "گوجأراتی"
}, {
    id: "Geor",
    displayName: "گورجی"
}, {
    id: "Guru",
    displayName: "گوٙروٙمخی"
}, {
    id: "Hang",
    displayName: "ھانگوٙل"
}, {
    id: "Hani",
    displayName: "ھانی"
}, {
    id: "Hira",
    displayName: "ھیراگانا"
}, {
    id: "Grek",
    displayName: "یوٙنانی"
} ];

inter.currencies = [ {
    id: "USD",
    displayName: "USD",
    symbol: "US$",
    other: "USD"
}, {
    id: "BRL",
    displayName: "رئال بئرئزیل",
    symbol: "R$",
    other: "رئال بئرئزیل"
}, {
    id: "RUB",
    displayName: "روٙبل روٙسیه",
    symbol: "RUB",
    other: "روٙبل روٙسیه"
}, {
    id: "INR",
    displayName: "روٙپیه هئن",
    symbol: "₹",
    other: "روٙپیه هئن"
}, {
    id: "GBP",
    displayName: "پوند بئریتانیا",
    symbol: "£",
    other: "پوند بئریتانیا"
}, {
    id: "XXX",
    displayName: "پیل نادیار",
    other: "پیل نادیار"
}, {
    id: "JPY",
    displayName: "یئن جاپوٙن",
    symbol: "JP¥",
    other: "یئن جاپوٙن"
}, {
    id: "CNY",
    displayName: "یوان چین",
    symbol: "CN¥",
    other: "یوان چین"
}, {
    id: "EUR",
    displayName: "یورو",
    symbol: "€",
    other: "یورو"
} ];

module.exports = inter;