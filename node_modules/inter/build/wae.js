function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _4x241 = [ "Q1", "Q2", "Q3", "Q4" ], _4x242 = {
    displayName: "Epoča"
}, _4x243 = {
    displayName: "AM/PM"
}, _4x244 = {
    all: {
        leap: "{0}bis"
    }
}, _4x245 = {
    displayName: "Wučetag"
}, _4x246 = {
    displayName: "Zitzóna"
}, _4x247 = {
    one: "¤ 0K",
    other: "¤ 0K"
}, _4x248 = {
    one: "¤ 0M",
    other: "¤ 0M"
}, _4x249 = {
    one: "¤ 0G",
    other: "¤ 0G"
}, _4x2410 = {
    one: "¤ 0T",
    other: "¤ 0T"
}, _4x2411 = {
    a: "h a – h a",
    h: "h–h a"
}, _4x2412 = [ "Before R.O.C.", "R.O.C." ], _4x2413 = {
    one: "¤ 00K",
    other: "¤ 00K"
}, _4x2414 = {
    one: "¤ 00M",
    other: "¤ 00M"
}, _4x2415 = {
    one: "¤ 00G",
    other: "¤ 00G"
}, _4x2416 = {
    one: "¤ 00T",
    other: "¤ 00T"
}, _4x2417 = {
    a: "h a – h a",
    h: "h – h a"
}, _4x2418 = {
    one: "¤ 000K",
    other: "¤ 000K"
}, _4x2419 = {
    one: "¤ 000M",
    other: "¤ 000M"
}, _4x2420 = {
    one: "¤ 000G",
    other: "¤ 000G"
}, _4x2421 = {
    one: "¤ 000T",
    other: "¤ 000T"
}, _4x2422 = [ "S", "M", "Z", "M", "F", "F", "S" ], _4x2423 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _4x2424 = {
    a: "h a – h a v",
    h: "h – h a v"
}, _4x2425 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _4x2426 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _4x2427 = {
    d: "d. – d. MMM",
    M: "d. – d. MMM"
}, _4x2428 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _4x2429 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _4x2430 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _4x2431 = {
    M: "MMM – MMM y",
    y: "MMM y – MMM y"
}, _4x2432 = {
    one: "I {0} jár",
    other: "I {0} jár"
}, _4x2433 = {
    one: "i {0} tag",
    other: "i {0} täg"
}, _4x2434 = {
    H: "HH:mm – HH:mm",
    m: "HH:mm – HH:mm"
}, _4x2435 = {
    one: "i {0} wuča",
    other: "i {0} wučä"
}, _4x2436 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _4x2437 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _4x2438 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _4x2439 = {
    M: "MMMM – MMMM y",
    y: "MMMM y – MMMM y"
}, _4x2440 = {
    one: "vor {0} jár",
    other: "cor {0} jár"
}, _4x2441 = {
    one: "I {0} mánet",
    other: "I {0} mánet"
}, _4x2442 = {
    one: "vor {0} tag",
    other: "vor {0} täg"
}, _4x2443 = {
    one: "i {0} stund",
    other: "i {0} stunde"
}, _4x2444 = {
    H: "HH:mm – HH:mm v",
    m: "HH:mm – HH:mm v"
}, _4x2445 = {
    d: "d. MMM – d. MMM",
    M: "d. MMM – d. MMM"
}, _4x2446 = {
    one: "vor {0} wuča",
    other: "cor {0} wučä"
}, _4x2447 = {
    one: "i {0} minüta",
    other: "i {0} minüte"
}, _4x2448 = {
    one: "i {0} sekund",
    other: "i {0} sekunde"
}, _4x2449 = [ "Sun", "Män", "Ziš", "Mit", "Fró", "Fri", "Sam" ], _4x2450 = {
    one: "vor {0} mánet",
    other: "vor {0} mánet"
}, _4x2451 = {
    one: "vor {0} stund",
    other: "vor {0} stunde"
}, _4x2452 = {
    one: "vor {0} minüta",
    other: "vor {0} minüte"
}, _4x2453 = {
    "0": "this year",
    "1": "next year",
    "-1": "last year"
}, _4x2454 = {
    "0": "this week",
    "1": "next week",
    "-1": "last week"
}, _4x2455 = {
    one: "vor {0} sekund",
    other: "vor {0} sekunde"
}, _4x2456 = {
    future: {
        other: "+{0} Q"
    },
    past: {
        other: "-{0} Q"
    }
}, _4x2457 = {
    id: "001",
    displayName: "Wäld",
    hasTimeZones: false
}, _4x2458 = [ "J", "H", "M", "A", "M", "B", "H", "Ö", "H", "W", "W", "C" ], _4x2459 = {
    "0": "this month",
    "1": "next month",
    "-1": "last month"
}, _4x2460 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _4x2461 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _4x2462 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _4x2463 = {
    id: "AQ",
    displayName: "Antarktis",
    hasTimeZones: true
}, _4x2464 = {
    "0": "this Sunday",
    "1": "next Sunday",
    "-1": "last Sunday"
}, _4x2465 = {
    "0": "this Monday",
    "1": "next Monday",
    "-1": "last Monday"
}, _4x2466 = {
    "0": "this Friday",
    "1": "next Friday",
    "-1": "last Friday"
}, _4x2467 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _4x2468 = {
    id: "CC",
    displayName: "Kokosinslä",
    hasTimeZones: true
}, _4x2469 = {
    d: "E, d. MMM – E, d. MMM",
    M: "E, d. MMM – E, d. MMM"
}, _4x2470 = [ "1. quartal", "2. quartal", "3. quartal", "4. quartal" ], _4x2471 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _4x2472 = {
    id: "BV",
    displayName: "Bouvetinsla",
    hasTimeZones: false
}, _4x2473 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _4x2474 = {
    "0": "this Tuesday",
    "1": "next Tuesday",
    "-1": "last Tuesday"
}, _4x2475 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _4x2476 = {
    id: "CX",
    displayName: "Wienäčtsinslä",
    hasTimeZones: true
}, _4x2477 = {
    a: "h:mm a – h:mm a",
    h: "h:mm – h:mm a",
    m: "h:mm – h:mm a"
}, _4x2478 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _4x2479 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _4x2480 = {
    id: "IC",
    displayName: "Kanariše Inslä",
    hasTimeZones: false
}, _4x2481 = {
    "0": "this Thursday",
    "1": "next Thursday",
    "-1": "last Thursday"
}, _4x2482 = {
    "0": "this Saturday",
    "1": "next Saturday",
    "-1": "last Saturday"
}, _4x2483 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _4x2484 = {
    id: "CP",
    displayName: "Clipperton Insla",
    hasTimeZones: false
}, _4x2485 = {
    id: "AC",
    displayName: "Himmelfártsinsla",
    hasTimeZones: false
}, _4x2486 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _4x2487 = {
    id: "UM",
    displayName: "Amerikaniš Ozeanie",
    hasTimeZones: true
}, _4x2488 = {
    id: "EA",
    displayName: "Ceuta und Melilla",
    hasTimeZones: false
}, _4x2489 = {
    "0": "this Wednesday",
    "1": "next Wednesday",
    "-1": "last Wednesday"
}, _4x2490 = {
    id: "GH",
    displayName: "Gana",
    regionId: "011",
    hasTimeZones: true
}, _4x2491 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _4x2492 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _4x2493 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _4x2494 = {
    id: "YE",
    displayName: "Jéme",
    regionId: "145",
    hasTimeZones: true
}, _4x2495 = {
    id: "CU",
    displayName: "Kuba",
    regionId: "029",
    hasTimeZones: true
}, _4x2496 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _4x2497 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _4x2498 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _4x2499 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _4x24100 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _4x24101 = {
    id: "PL",
    displayName: "Pole",
    regionId: "151",
    hasTimeZones: true
}, _4x24102 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _4x24103 = {
    id: "TD",
    displayName: "Tšad",
    regionId: "017",
    hasTimeZones: true
}, _4x24104 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _4x24105 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _4x24106 = {
    id: "MM",
    displayName: "Burma",
    regionId: "035",
    hasTimeZones: true
}, _4x24107 = {
    id: "CN",
    displayName: "China",
    regionId: "030",
    hasTimeZones: true
}, _4x24108 = {
    id: "FJ",
    displayName: "Fidši",
    regionId: "054",
    hasTimeZones: true
}, _4x24109 = {
    id: "FO",
    displayName: "Färöe",
    regionId: "154",
    hasTimeZones: true
}, _4x24110 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _4x24111 = {
    id: "GN",
    displayName: "Ginea",
    regionId: "011",
    hasTimeZones: true
}, _4x24112 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _4x24113 = {
    id: "IN",
    displayName: "Indie",
    regionId: "034",
    hasTimeZones: true
}, _4x24114 = {
    id: "JP",
    displayName: "Japan",
    regionId: "030",
    hasTimeZones: true
}, _4x24115 = {
    id: "QA",
    displayName: "Katar",
    regionId: "145",
    hasTimeZones: true
}, _4x24116 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _4x24117 = {
    id: "LY",
    displayName: "Lübie",
    regionId: "015",
    hasTimeZones: true
}, _4x24118 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _4x24119 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _4x24120 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _4x24121 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _4x24122 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _4x24123 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _4x24124 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _4x24125 = {
    id: "SY",
    displayName: "Sürie",
    regionId: "145",
    hasTimeZones: true
}, _4x24126 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _4x24127 = {
    id: "CL",
    displayName: "Tšile",
    regionId: "005",
    hasTimeZones: true
}, _4x24128 = {
    id: "CY",
    displayName: "Zypre",
    regionId: "145",
    hasTimeZones: true
}, _4x24129 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm – h:mm a v",
    m: "h:mm – h:mm a v"
}, _4x24130 = {
    relative: _4x2464
}, _4x24131 = {
    relative: _4x2465
}, _4x24132 = {
    relative: _4x2466
}, _4x24133 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _4x24134 = {
    id: "BE",
    displayName: "Belgie",
    regionId: "155",
    hasTimeZones: true
}, _4x24135 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _4x24136 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _4x24137 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _4x24138 = {
    id: "EG",
    displayName: "Egypte",
    regionId: "015",
    hasTimeZones: true
}, _4x24139 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _4x24140 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _4x24141 = {
    id: "NL",
    displayName: "Holand",
    regionId: "155",
    hasTimeZones: true
}, _4x24142 = {
    id: "IE",
    displayName: "Irland",
    regionId: "154",
    hasTimeZones: true
}, _4x24143 = {
    id: "IS",
    displayName: "Island",
    regionId: "154",
    hasTimeZones: true
}, _4x24144 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _4x24145 = {
    id: "IT",
    displayName: "Italie",
    regionId: "039",
    hasTimeZones: true
}, _4x24146 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _4x24147 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _4x24148 = {
    id: "KM",
    displayName: "Komore",
    regionId: "014",
    hasTimeZones: true
}, _4x24149 = {
    id: "KW",
    displayName: "Kuweit",
    regionId: "145",
    hasTimeZones: true
}, _4x24150 = {
    id: "LT",
    displayName: "Litaue",
    regionId: "154",
    hasTimeZones: true
}, _4x24151 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _4x24152 = {
    id: "MA",
    displayName: "Maroko",
    regionId: "015",
    hasTimeZones: true
}, _4x24153 = {
    id: "MX",
    displayName: "Mexiko",
    regionId: "013",
    hasTimeZones: true
}, _4x24154 = {
    id: "MD",
    displayName: "Moldau",
    regionId: "151",
    hasTimeZones: true
}, _4x24155 = {
    id: "MC",
    displayName: "Monago",
    regionId: "155",
    hasTimeZones: true
}, _4x24156 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _4x24157 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _4x24158 = {
    id: "ZM",
    displayName: "Sambia",
    regionId: "014",
    hasTimeZones: true
}, _4x24159 = {
    id: "CH",
    displayName: "Schwiz",
    regionId: "155",
    hasTimeZones: true
}, _4x24160 = {
    id: "RS",
    displayName: "Serbie",
    regionId: "039",
    hasTimeZones: true
}, _4x24161 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _4x24162 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _4x24163 = {
    id: "TR",
    displayName: "Türkei",
    regionId: "145",
    hasTimeZones: true
}, _4x24164 = {
    id: "CZ",
    displayName: "Tšečie",
    regionId: "151",
    hasTimeZones: true
}, _4x24165 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _4x24166 = {
    id: "HU",
    displayName: "Ungare",
    regionId: "151",
    hasTimeZones: true
}, _4x24167 = {
    id: "AT",
    displayName: "Öštrič",
    regionId: "155",
    hasTimeZones: true
}, _4x24168 = {
    "0": "Hitte",
    "1": "Móre",
    "2": "Ubermóre",
    "-2": "Vorgešter",
    "-1": "Gešter"
}, _4x24169 = {
    id: "AL",
    displayName: "Albanie",
    regionId: "039",
    hasTimeZones: true
}, _4x24170 = {
    id: "DZ",
    displayName: "Algerie",
    regionId: "015",
    hasTimeZones: true
}, _4x24171 = {
    id: "US",
    displayName: "Amerika",
    regionId: "021",
    hasTimeZones: true
}, _4x24172 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _4x24173 = {
    id: "AM",
    displayName: "Armenie",
    regionId: "145",
    hasTimeZones: true
}, _4x24174 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _4x24175 = {
    id: "BH",
    displayName: "Bačrain",
    regionId: "145",
    hasTimeZones: true
}, _4x24176 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _4x24177 = {
    id: "BO",
    displayName: "Boliwie",
    regionId: "005",
    hasTimeZones: true
}, _4x24178 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _4x24179 = {
    id: "DJ",
    displayName: "Dšibuti",
    regionId: "014",
    hasTimeZones: true
}, _4x24180 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _4x24181 = {
    id: "GB",
    displayName: "England",
    regionId: "154",
    hasTimeZones: true
}, _4x24182 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _4x24183 = {
    id: "EE",
    displayName: "Eštland",
    regionId: "154",
    hasTimeZones: true
}, _4x24184 = {
    id: "GE",
    displayName: "Georgie",
    regionId: "145",
    hasTimeZones: true
}, _4x24185 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _4x24186 = {
    id: "JM",
    displayName: "Jamaika",
    regionId: "029",
    hasTimeZones: true
}, _4x24187 = {
    id: "CM",
    displayName: "Kamerun",
    regionId: "017",
    hasTimeZones: true
}, _4x24188 = {
    id: "HR",
    displayName: "Kroatie",
    regionId: "039",
    hasTimeZones: true
}, _4x24189 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _4x24190 = {
    id: "LB",
    displayName: "Libanon",
    regionId: "145",
    hasTimeZones: true
}, _4x24191 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _4x24192 = {
    id: "YT",
    displayName: "Moyette",
    regionId: "014",
    hasTimeZones: true
}, _4x24193 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _4x24194 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _4x24195 = {
    id: "NO",
    displayName: "Norwäge",
    regionId: "154",
    hasTimeZones: true
}, _4x24196 = {
    id: "RO",
    displayName: "Rumänie",
    regionId: "151",
    hasTimeZones: true
}, _4x24197 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _4x24198 = {
    id: "SE",
    displayName: "Schwede",
    regionId: "154",
    hasTimeZones: true
}, _4x24199 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _4x24200 = {
    id: "SC",
    displayName: "Sečelle",
    regionId: "014",
    hasTimeZones: true
}, _4x24201 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _4x24202 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _4x24203 = {
    id: "TN",
    displayName: "Tunesie",
    regionId: "015",
    hasTimeZones: true
}, _4x24204 = {
    id: "UA",
    displayName: "Ukraine",
    regionId: "151",
    hasTimeZones: true
}, _4x24205 = {
    id: "UY",
    displayName: "Urugauy",
    regionId: "005",
    hasTimeZones: true
}, _4x24206 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _4x24207 = {
    id: "VA",
    displayName: "Vatikan",
    regionId: "039",
    hasTimeZones: true
}, _4x24208 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _4x24209 = {
    d: "d. – d. MMM y",
    M: "d. MMM – d. MMM y",
    y: "d. MMM y – d. MMM y"
}, _4x24210 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _4x24211 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _4x24212 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _4x24213 = {
    id: "BR",
    displayName: "Brasilie",
    regionId: "005",
    hasTimeZones: true
}, _4x24214 = {
    id: "BG",
    displayName: "Bulgarie",
    regionId: "151",
    hasTimeZones: true
}, _4x24215 = {
    id: "DM",
    displayName: "Doninica",
    regionId: "029",
    hasTimeZones: true
}, _4x24216 = {
    id: "DK",
    displayName: "Dänemark",
    regionId: "154",
    hasTimeZones: true
}, _4x24217 = {
    id: "ET",
    displayName: "Ethiopie",
    regionId: "014",
    hasTimeZones: true
}, _4x24218 = {
    id: "FI",
    displayName: "Finnland",
    regionId: "154",
    hasTimeZones: true
}, _4x24219 = {
    id: "FR",
    displayName: "Frankrič",
    regionId: "155",
    hasTimeZones: true
}, _4x24220 = {
    id: "GL",
    displayName: "Grönland",
    regionId: "021",
    hasTimeZones: true
}, _4x24221 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _4x24222 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _4x24223 = {
    id: "JO",
    displayName: "Jordanie",
    regionId: "145",
    hasTimeZones: true
}, _4x24224 = {
    id: "KH",
    displayName: "Kambodša",
    regionId: "035",
    hasTimeZones: true
}, _4x24225 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _4x24226 = {
    id: "CO",
    displayName: "Kolumbie",
    regionId: "005",
    hasTimeZones: true
}, _4x24227 = {
    id: "LV",
    displayName: "Lettland",
    regionId: "154",
    hasTimeZones: true
}, _4x24228 = {
    id: "LU",
    displayName: "Luxeburg",
    regionId: "155",
    hasTimeZones: true
}, _4x24229 = {
    id: "MY",
    displayName: "Malaysia",
    regionId: "035",
    hasTimeZones: true
}, _4x24230 = {
    id: "MV",
    displayName: "Malediwe",
    regionId: "034",
    hasTimeZones: true
}, _4x24231 = {
    id: "MN",
    displayName: "Mongolei",
    regionId: "030",
    hasTimeZones: true
}, _4x24232 = {
    id: "MZ",
    displayName: "Mosambik",
    regionId: "014",
    hasTimeZones: true
}, _4x24233 = {
    id: "TL",
    displayName: "Ošttimor",
    regionId: "035",
    hasTimeZones: true
}, _4x24234 = {
    id: "PK",
    displayName: "Pakištan",
    regionId: "034",
    hasTimeZones: true
}, _4x24235 = {
    id: "PY",
    displayName: "Paraguai",
    regionId: "005",
    hasTimeZones: true
}, _4x24236 = {
    id: "PN",
    displayName: "Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _4x24237 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _4x24238 = {
    id: "RU",
    displayName: "Russland",
    regionId: "151",
    hasTimeZones: true
}, _4x24239 = {
    id: "SB",
    displayName: "Salomone",
    regionId: "054",
    hasTimeZones: true
}, _4x24240 = {
    id: "ES",
    displayName: "Schpanie",
    regionId: "039",
    hasTimeZones: true
}, _4x24241 = {
    id: "ZW",
    displayName: "Simbabwe",
    regionId: "014",
    hasTimeZones: true
}, _4x24242 = {
    id: "SG",
    displayName: "Singapur",
    regionId: "035",
    hasTimeZones: true
}, _4x24243 = {
    id: "SK",
    displayName: "Slowakei",
    regionId: "151",
    hasTimeZones: true
}, _4x24244 = {
    id: "SI",
    displayName: "Slowenie",
    regionId: "039",
    hasTimeZones: true
}, _4x24245 = {
    id: "SR",
    displayName: "Suriname",
    regionId: "005",
    hasTimeZones: true
}, _4x24246 = {
    id: "KR",
    displayName: "Südkorea",
    regionId: "030",
    hasTimeZones: true
}, _4x24247 = {
    id: "TZ",
    displayName: "Tansania",
    regionId: "014",
    hasTimeZones: true
}, _4x24248 = {
    id: "TH",
    displayName: "Thailand",
    regionId: "035",
    hasTimeZones: true
}, _4x24249 = {
    id: "DE",
    displayName: "Titšland",
    regionId: "155",
    hasTimeZones: true
}, _4x24250 = {
    relative: _4x2474
}, _4x24251 = {
    id: "AU",
    displayName: "Australie",
    regionId: "053",
    hasTimeZones: true
}, _4x24252 = {
    id: "BD",
    displayName: "Bangladeš",
    regionId: "034",
    hasTimeZones: true
}, _4x24253 = {
    id: "CK",
    displayName: "Cookinslä",
    regionId: "061",
    hasTimeZones: true
}, _4x24254 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _4x24255 = {
    id: "GR",
    displayName: "Gričeland",
    regionId: "039",
    hasTimeZones: true
}, _4x24256 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _4x24257 = {
    id: "ID",
    displayName: "Indonesie",
    regionId: "035",
    hasTimeZones: true
}, _4x24258 = {
    id: "CV",
    displayName: "Kap Verde",
    regionId: "011",
    hasTimeZones: true
}, _4x24259 = {
    id: "KZ",
    displayName: "Kasačstan",
    regionId: "143",
    hasTimeZones: true
}, _4x24260 = {
    id: "KG",
    displayName: "Kirgištan",
    regionId: "143",
    hasTimeZones: true
}, _4x24261 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _4x24262 = {
    id: "MK",
    displayName: "Mazedonie",
    regionId: "039",
    hasTimeZones: true
}, _4x24263 = {
    id: "MS",
    displayName: "Monserrat",
    regionId: "029",
    hasTimeZones: true
}, _4x24264 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _4x24265 = {
    id: "NZ",
    displayName: "Niwséland",
    regionId: "053",
    hasTimeZones: true
}, _4x24266 = {
    id: "KP",
    displayName: "Nordkorea",
    regionId: "030",
    hasTimeZones: true
}, _4x24267 = {
    id: "PS",
    displayName: "Paleština",
    regionId: "145",
    hasTimeZones: true
}, _4x24268 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _4x24269 = {
    id: "LC",
    displayName: "St. Lucia",
    regionId: "029",
    hasTimeZones: true
}, _4x24270 = {
    id: "SZ",
    displayName: "Swasiland",
    regionId: "018",
    hasTimeZones: true
}, _4x24271 = {
    id: "ZA",
    displayName: "Südafrika",
    regionId: "018",
    hasTimeZones: true
}, _4x24272 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _4x24273 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _4x24274 = {
    id: "AF",
    displayName: "Afganištan",
    regionId: "034",
    hasTimeZones: true
}, _4x24275 = {
    id: "AX",
    displayName: "Alandinslä",
    regionId: "154",
    hasTimeZones: true
}, _4x24276 = {
    id: "AR",
    displayName: "Argentinie",
    regionId: "005",
    hasTimeZones: true
}, _4x24277 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _4x24278 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _4x24279 = {
    id: "LI",
    displayName: "Liečteštei",
    regionId: "155",
    hasTimeZones: true
}, _4x24280 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _4x24281 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _4x24282 = {
    id: "MR",
    displayName: "Mauretanie",
    regionId: "011",
    hasTimeZones: true
}, _4x24283 = {
    id: "FM",
    displayName: "Mikronesie",
    regionId: "057",
    hasTimeZones: true
}, _4x24284 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _4x24285 = {
    id: "PH",
    displayName: "Philippine",
    regionId: "035",
    hasTimeZones: true
}, _4x24286 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _4x24287 = {
    id: "SH",
    displayName: "St. Helena",
    regionId: "011",
    hasTimeZones: true
}, _4x24288 = {
    id: "MF",
    displayName: "St. Martin",
    regionId: "029",
    hasTimeZones: true
}, _4x24289 = {
    id: "UZ",
    displayName: "Usbekištan",
    regionId: "143",
    hasTimeZones: true
}, _4x24290 = {
    id: "EH",
    displayName: "Weštsahara",
    regionId: "015",
    hasTimeZones: true
}, _4x24291 = [ "Sunntag", "Mäntag", "Zištag", "Mittwuč", "Fróntag", "Fritag", "Samštag" ], _4x24292 = {
    id: "AZ",
    displayName: "Aserbaidšan",
    regionId: "145",
    hasTimeZones: true
}, _4x24293 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _4x24294 = {
    id: "HM",
    displayName: "Heard- und McDonald-Inslä",
    hasTimeZones: false
}, _4x24295 = {
    id: "IM",
    displayName: "Isle of Man",
    regionId: "154",
    hasTimeZones: true
}, _4x24296 = {
    id: "KY",
    displayName: "Kaimaninslä",
    regionId: "029",
    hasTimeZones: true
}, _4x24297 = {
    id: "MH",
    displayName: "Maršalinslä",
    regionId: "057",
    hasTimeZones: true
}, _4x24298 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _4x24299 = {
    id: "TJ",
    displayName: "Tadšikistan",
    regionId: "143",
    hasTimeZones: true
}, _4x24300 = {
    id: "BY",
    displayName: "Wísrussland",
    regionId: "151",
    hasTimeZones: true
}, _4x24301 = {
    relative: _4x2481
}, _4x24302 = {
    relative: _4x2482
}, _4x24303 = {
    id: "142",
    displayName: "Asie",
    hasTimeZones: false,
    parentRegionId: "001"
}, _4x24304 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _4x24305 = {
    id: "CI",
    displayName: "Elfebeiküšta",
    regionId: "011",
    hasTimeZones: true
}, _4x24306 = {
    id: "GW",
    displayName: "Ginea Bissau",
    regionId: "011",
    hasTimeZones: true
}, _4x24307 = {
    id: "NC",
    displayName: "Niwkaledonie",
    regionId: "054",
    hasTimeZones: true
}, _4x24308 = {
    id: "NF",
    displayName: "Norfolkinsla",
    regionId: "053",
    hasTimeZones: true
}, _4x24309 = {
    id: "SA",
    displayName: "Saudi Arabie",
    regionId: "145",
    hasTimeZones: true
}, _4x24310 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _4x24311 = {
    id: "TM",
    displayName: "Turkmeništan",
    regionId: "143",
    hasTimeZones: true
}, _4x24312 = {
    id: "FK",
    displayName: "Falklandinslä",
    regionId: "005",
    hasTimeZones: true
}, _4x24313 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _4x24314 = {
    id: "002",
    displayName: "Afrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _4x24315 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _4x24316 = {
    id: "CD",
    displayName: "Kongo-Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _4x24317 = {
    id: "PG",
    displayName: "Papua Niwginea",
    regionId: "054",
    hasTimeZones: true
}, _4x24318 = {
    relative: _4x2489
}, _4x24319 = {
    id: "GQ",
    displayName: "Equatorialginea",
    regionId: "017",
    hasTimeZones: true
}, _4x24320 = {
    id: "029",
    displayName: "Karibik",
    hasTimeZones: false,
    parentRegionId: "019"
}, _4x24321 = {
    id: "009",
    displayName: "Ozeanie",
    hasTimeZones: false,
    parentRegionId: "001"
}, _4x24322 = {
    id: "030",
    displayName: "Oštasie",
    hasTimeZones: false,
    parentRegionId: "142"
}, _4x24323 = {
    id: "034",
    displayName: "Südasie",
    hasTimeZones: false,
    parentRegionId: "142"
}, _4x24324 = [ "Jen", "Hor", "Mär", "Abr", "Mei", "Brá", "Hei", "Öig", "Her", "Wím", "Win", "Chr" ], _4x24325 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _4x24326 = {
    id: "AS",
    displayName: "Amerikaniš Samoa",
    regionId: "061",
    hasTimeZones: true
}, _4x24327 = {
    id: "GF",
    displayName: "Französiš Guiana",
    regionId: "005",
    hasTimeZones: true
}, _4x24328 = {
    id: "MP",
    displayName: "Nördliči Mariane",
    regionId: "057",
    hasTimeZones: true
}, _4x24329 = {
    id: "145",
    displayName: "Weštasie",
    hasTimeZones: false,
    parentRegionId: "142"
}, _4x24330 = {
    id: "CG",
    displayName: "Kongo Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _4x24331 = {
    id: "054",
    displayName: "Melanesie",
    hasTimeZones: false,
    parentRegionId: "009"
}, _4x24332 = {
    id: "014",
    displayName: "Oštafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _4x24333 = {
    id: "151",
    displayName: "Ošteuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _4x24334 = {
    id: "061",
    displayName: "Polinesie",
    hasTimeZones: false,
    parentRegionId: "009"
}, _4x24335 = {
    id: "039",
    displayName: "Südeuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _4x24336 = {
    id: "WF",
    displayName: "Wallis und Futuna",
    regionId: "061",
    hasTimeZones: true
}, _4x24337 = {
    id: "015",
    displayName: "Nordafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _4x24338 = {
    id: "154",
    displayName: "Nordeuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _4x24339 = {
    id: "005",
    displayName: "Südamerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _4x24340 = {
    id: "035",
    displayName: "Südoštasie",
    hasTimeZones: false,
    parentRegionId: "142"
}, _4x24341 = {
    id: "011",
    displayName: "Weštafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _4x24342 = {
    id: "155",
    displayName: "Wešteuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _4x24343 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _4x24344 = {
    id: "AG",
    displayName: "Antigua und Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _4x24345 = {
    id: "PF",
    displayName: "Französiš Polinesie",
    regionId: "061",
    hasTimeZones: true
}, _4x24346 = {
    id: "KN",
    displayName: "St. Kitts und Nevis",
    regionId: "029",
    hasTimeZones: true
}, _4x24347 = {
    id: "TT",
    displayName: "Trinidad und Tobago",
    regionId: "029",
    hasTimeZones: true
}, _4x24348 = {
    id: "143",
    displayName: "Zentralasie",
    hasTimeZones: false,
    parentRegionId: "142"
}, _4x24349 = {
    id: "TF",
    displayName: "Französiši Süd- und Antarktisgebiet",
    hasTimeZones: true
}, _4x24350 = {
    id: "017",
    displayName: "Mittelafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _4x24351 = {
    id: "IO",
    displayName: "Britišes Territorium em indiše Ozean",
    hasTimeZones: true
}, _4x24352 = {
    id: "DO",
    displayName: "Dominikaniši Rebublik",
    regionId: "029",
    hasTimeZones: true
}, _4x24353 = {
    id: "ST",
    displayName: "São Tomé and Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _4x24354 = {
    id: "GS",
    displayName: "Südgeorgie und d’südliče Senwičinslä",
    hasTimeZones: true
}, _4x24355 = {
    abbreviated: {
        am: "AM",
        pm: "PM"
    },
    narrow: {
        am: "AM",
        pm: "PM"
    },
    wide: {
        am: "AM",
        pm: "PM"
    }
}, _4x24356 = {
    id: "BA",
    displayName: "Bosnie und Herzegovina",
    regionId: "039",
    hasTimeZones: true
}, _4x24357 = {
    id: "VG",
    displayName: "Britiši Jungfröiwinslä",
    regionId: "029",
    hasTimeZones: true
}, _4x24358 = {
    id: "BL",
    displayName: "St. Bartholomäus-Insla",
    regionId: "029",
    hasTimeZones: true
}, _4x24359 = {
    id: "SJ",
    displayName: "Svalbard und Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _4x24360 = {
    id: "018",
    displayName: "Südličs Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _4x24361 = {
    id: "TC",
    displayName: "Turks- und Caicosinslä",
    regionId: "029",
    hasTimeZones: true
}, _4x24362 = {
    id: "013",
    displayName: "Zentralamerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _4x24363 = {
    id: "PM",
    displayName: "St. Pierre und Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _4x24364 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _4x24365 = {
    id: "021",
    displayName: "Nördličs Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _4x24366 = {
    id: "AE",
    displayName: "Vereinigti Arabiše Emirat",
    regionId: "145",
    hasTimeZones: true
}, _4x24367 = {
    d: "E, d. – E, d. MMM y",
    M: "E, d. MMM – E, d. MMM y",
    y: "E, d. MMM y – E, d. MMM y"
}, _4x24368 = {
    id: "VI",
    displayName: "Amerikaniši Jungfröiwinslä",
    regionId: "029",
    hasTimeZones: true
}, _4x24369 = {
    id: "MO",
    displayName: "Sonderverwaltigszona Makau",
    regionId: "030",
    hasTimeZones: true
}, _4x24370 = {
    id: "CF",
    displayName: "Zentralafrikaniši Rebublik",
    regionId: "017",
    hasTimeZones: true
}, _4x24371 = {
    id: "VC",
    displayName: "St. Vincent und d’Grenadine",
    regionId: "029",
    hasTimeZones: true
}, _4x24372 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _4x24373 = {
    id: "019",
    displayName: "Amerikaniš Kontinänt",
    hasTimeZones: false,
    parentRegionId: "001"
}, _4x24374 = {
    id: "HK",
    displayName: "Sonderverwaltigszona Hongkong",
    regionId: "030",
    hasTimeZones: true
}, _4x24375 = {
    id: "053",
    displayName: "Auštralie und Niwséland",
    hasTimeZones: false,
    parentRegionId: "009"
}, _4x24376 = {
    future: _4x2432,
    past: _4x2440
}, _4x24377 = {
    future: _4x2433,
    past: _4x2442
}, _4x24378 = {
    id: "057",
    displayName: "Mikronesišes Inselgebiet",
    hasTimeZones: false,
    parentRegionId: "009"
}, _4x24379 = {
    d: "E, d. MMM y – E, d. MMM y",
    M: "E, d. MMM y – E, d. MMM y",
    y: "E, d. MMM y – E, d. MMM y"
}, _4x24380 = {
    future: _4x2435,
    past: _4x2446
}, _4x24381 = {
    future: _4x2441,
    past: _4x2450
}, _4x24382 = {
    future: _4x2443,
    past: _4x2451
}, _4x24383 = {
    future: _4x2447,
    past: _4x2452
}, _4x24384 = {
    future: _4x2448,
    past: _4x2455
}, _4x24385 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _4x24386 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _4x24387 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _4x24388 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _4x24389 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _4x24390 = {
    abbreviated: _4x241,
    narrow: [ "1", "2", "3", "4" ],
    wide: _4x2470
}, _4x24391 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _4x24392 = [ "Jenner", "Hornig", "Märze", "Abrille", "Meije", "Bráčet", "Heiwet", "Öigšte", "Herbštmánet", "Wímánet", "Wintermánet", "Chrištmánet" ], _4x24393 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _4x24394 = {
    displayName: "Schtund",
    relativeTime: _4x24382
}, _4x24395 = {
    displayName: "Mínütta",
    relativeTime: _4x24383
}, _4x24396 = {
    displayName: "Quarter",
    relative: _4x2473,
    relativeTime: _4x2456
}, _4x24397 = {
    displayName: "Sekunda",
    relative: [ "now" ],
    relativeTime: _4x24384
}, _4x24398 = {
    decimal: ",",
    group: "’",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _4x24399 = {
    decimal: ",",
    group: "’",
    list: "؛",
    percentSign: "٪",
    plusSign: "‏+",
    minusSign: "‏-",
    exponential: "اس",
    superscriptingExponent: "×",
    perMille: "؉",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _4x24400 = {
    displayName: "Jár",
    relative: _4x2453,
    relativeTime: _4x24376
}, _4x24401 = {
    format: _4x24355,
    standAlone: _4x24355
}, _4x24402 = {
    displayName: "Wuča",
    relative: _4x2454,
    relativeTime: _4x24380
}, _4x24403 = {
    symbols: _4x24399
}, _4x24404 = {
    displayName: "Mánet",
    relative: _4x2459,
    relativeTime: _4x24381
}, _4x24405 = {
    format: _4x24313,
    numeric: _4x244,
    standAlone: _4x24313
}, _4x24406 = {
    displayName: "Tag",
    relative: _4x24168,
    relativeTime: _4x24377
}, _4x24407 = {
    symbols: _4x24399,
    digits: "renderSpelloutCardinal"
}, _4x24408 = {
    abbreviated: _4x2449,
    narrow: _4x2422,
    wide: _4x24291,
    "short": _4x2449
}, _4x24409 = {
    "1000": {
        other: "0K"
    },
    "10000": {
        other: "00K"
    },
    "100000": {
        other: "000K"
    },
    "1000000": {
        other: "0M"
    },
    "10000000": {
        other: "00M"
    },
    "100000000": {
        other: "000M"
    },
    "1000000000": {
        other: "0G"
    },
    "10000000000": {
        other: "00G"
    },
    "100000000000": {
        other: "000G"
    },
    "1000000000000": {
        other: "0T"
    },
    "10000000000000": {
        other: "00T"
    },
    "100000000000000": {
        other: "000T"
    }
}, _4x24410 = {
    symbols: _4x24399,
    digits: "renderSpelloutCardinalFinancial"
}, _4x24411 = {
    abbreviated: _4x24325,
    narrow: _4x2467,
    wide: _4x24325
}, _4x24412 = {
    abbreviated: _4x24343,
    narrow: _4x24343,
    wide: _4x24343
}, _4x24413 = {
    format: _4x24390,
    standAlone: _4x24390
}, _4x24414 = {
    format: _4x24412
}, _4x24415 = {
    abbreviated: _4x24324,
    narrow: _4x2458,
    wide: _4x24392
}, _4x24416 = {
    abbreviated: _4x24386,
    narrow: _4x2479,
    wide: _4x24386
}, _4x24417 = {
    abbreviated: _4x24387,
    narrow: _4x2467,
    wide: _4x24387
}, _4x24418 = {
    abbreviated: _4x24388,
    narrow: _4x2479,
    wide: _4x24388
}, _4x24419 = {
    abbreviated: _4x24385,
    narrow: _4x2467,
    wide: _4x24393
}, _4x24420 = {
    abbreviated: _4x24389,
    narrow: _4x2479,
    wide: _4x24389
}, _4x24421 = {
    abbreviated: _4x24391,
    narrow: _4x2467,
    wide: _4x24391
}, _4x24422 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _4x24423 = {
    fullDate: "EEEE, d. MMMM y G",
    longDate: "d. MMMM y G",
    mediumDate: "d. MMM y G",
    shortDate: "GGGGG y-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "GGGGG y-MM-dd HH:mm",
    mediumDateTime: "d. MMM y G HH:mm:ss",
    longDateTime: "d. MMMM y G HH:mm:ss z",
    fullDateTime: "EEEE, d. MMMM y G HH:mm:ss zzzz"
}, _4x24424 = {
    "1000": _4x247,
    "10000": _4x2413,
    "100000": _4x2418,
    "1000000": _4x248,
    "10000000": _4x2414,
    "100000000": _4x2419,
    "1000000000": _4x249,
    "10000000000": _4x2415,
    "100000000000": _4x2420,
    "1000000000000": _4x2410,
    "10000000000000": _4x2416,
    "100000000000000": _4x2421
}, _4x24425 = {
    format: _4x24408,
    standAlone: _4x24408
}, _4x24426 = {
    format: _4x24411,
    standAlone: _4x24411
}, _4x24427 = {
    "long": _4x24409,
    "short": _4x24409,
    "default": "#,##0.###"
}, _4x24428 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _4x24429 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _4x24430 = {
    format: _4x24415,
    standAlone: _4x24415
}, _4x24431 = {
    Ed: "E d.",
    h: "h a",
    hm: "h:mm a",
    hms: "h:mm:ss a",
    M: "LLL",
    Md: "d. MMM",
    MEd: "E, d. MMM",
    MMMd: "d. MMM",
    MMMEd: "E, d. MMM",
    yMMM: "MMM y",
    yMMMd: "d. MMM y",
    yMMMEd: "E, d. MMM y",
    d: "d",
    E: "ccc",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss",
    Gy: "G y",
    GyMMM: "G y MMM",
    GyMMMd: "G y MMM d",
    GyMMMEd: "G y MMM d, E",
    H: "HH",
    Hm: "HH:mm",
    Hms: "HH:mm:ss",
    MMM: "LLL",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    y: "G y",
    yyyy: "G y",
    yyyyM: "GGGGG y-MM",
    yyyyMd: "GGGGG y-MM-dd",
    yyyyMEd: "GGGGG y-MM-dd, E",
    yyyyMMM: "G y MMM",
    yyyyMMMd: "G y MMM d",
    yyyyMMMEd: "G y MMM d, E",
    yyyyMMMM: "G y MMMM",
    yyyyQQQ: "G y QQQ",
    yyyyQQQQ: "G y QQQQ"
}, _4x24432 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _4x24433 = {
    format: _4x24419,
    standAlone: _4x24419
}, _4x24434 = {
    basic: _4x24422,
    cldr: _4x24428
}, _4x24435 = {
    basic: _4x24423,
    cldr: _4x24431
}, _4x24436 = {
    d: {
        d: "d–d"
    },
    h: _4x2411,
    H: {
        H: "HH–HH"
    },
    hm: _4x2471,
    Hm: _4x2429,
    hmv: _4x2483,
    Hmv: _4x2436,
    hv: _4x2423,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _4x2437,
    MEd: _4x2460,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _4x2425,
    MMMEd: _4x2461,
    y: {
        y: "U–U"
    },
    yM: _4x2428,
    yMd: _4x24273,
    yMEd: _4x24372,
    yMMM: _4x2430,
    yMMMd: _4x2478,
    yMMMEd: _4x24364,
    yMMMM: _4x2438
}, _4x24437 = {
    d: {
        d: "d – d"
    },
    h: _4x2417,
    H: {
        H: "HH – HH"
    },
    hm: _4x2477,
    Hm: _4x2434,
    hmv: _4x24129,
    Hmv: _4x2444,
    hv: _4x2424,
    Hv: {
        H: "HH – HH v"
    },
    M: {
        M: "MMM – MMM"
    },
    Md: _4x2445,
    MEd: _4x2469,
    MMM: {
        M: "MMM – MMM"
    },
    MMMd: _4x2427,
    MMMEd: _4x2469,
    y: {
        y: "y – y"
    },
    yM: _4x2428,
    yMd: _4x24273,
    yMEd: _4x24379,
    yMMM: _4x2431,
    yMMMd: _4x24209,
    yMMMEd: _4x24367,
    yMMMM: _4x2439
}, _4x24438 = {
    beforeCurrency: _4x24429,
    afterCurrency: _4x24429
}, _4x24439 = {
    "short": _4x24424,
    "default": "¤ #,##0.00",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _4x24438
}, _4x24440 = {
    abbreviated: _4x24432,
    narrow: _4x24432,
    wide: _4x24432
}, _4x24441 = {
    format: _4x24440
}, _4x24442 = {
    era: _4x242,
    year: _4x24400,
    month: _4x24404,
    week: _4x24402,
    day: _4x24406,
    weekday: _4x245,
    dayperiod: _4x243,
    hour: _4x24394,
    minute: _4x24395,
    second: _4x24397,
    zone: _4x246,
    quarter: _4x24396,
    sun: _4x24130,
    mon: _4x24131,
    tue: _4x24250,
    wed: _4x24318,
    thu: _4x24301,
    fri: _4x24132,
    sat: _4x24302
}, _4x24443 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _4x24442
}, _4x24444 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _4x24427,
    currency: _4x24439,
    percent: {
        "default": "#,##0%"
    }
}, _4x24445 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _4x24446 = {
    dateFormats: _4x24435,
    datePartsOrder: "ymd",
    dateIntervalFormats: _4x24437,
    dateIntervalFallbackFormat: "{0} - {1}",
    dayNames: _4x24425,
    dayPeriods: _4x24401,
    monthNames: _4x24433,
    eraNames: _4x2426,
    quarterNames: _4x24413,
    fields: _4x24442
}, _4x24447 = {
    dayParts: _4x24414,
    days: _4x24441,
    months: _4x24441,
    years: _4x24441,
    zodiacs: _4x24414
}, _4x24448 = {
    dateFormats: _4x24434,
    datePartsOrder: "md",
    dateIntervalFormats: _4x24436,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _4x24425,
    dayPeriods: _4x24401,
    cyclicNames: _4x24447,
    monthNames: _4x24426,
    monthPatterns: _4x24405,
    quarterNames: _4x24413,
    fields: _4x24442
};

inter.id = "wae";

inter.delimiters = {
    quotationStart: "«",
    quotationEnd: "»",
    alternateQuotationStart: "‹",
    alternateQuotationEnd: "›"
};

inter.listPatterns = {
    "default": {
        "2": "{0} und {1}",
        end: "{0} und {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}"
    }
};

inter.unitPatterns = {
    "long": {
        unit: {
            durationYear: {
                one: "{0} jár",
                other: "{0} jár"
            },
            durationMonth: {
                one: "{0} mánet",
                other: "{0} mánet"
            },
            durationWeek: {
                one: "{0} wuča",
                other: "{0} wučä"
            },
            durationDay: {
                one: "{0} täg",
                other: "{0} täg"
            },
            durationHour: {
                one: "{0} stund",
                other: "{0} stunde"
            },
            durationMinute: {
                one: "{0} minüta",
                other: "{0} minüte"
            },
            durationSecond: {
                one: "{0} sekund",
                other: "{0} sekunde"
            }
        }
    },
    "short": P.unitPatterns.short
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "{0} zit",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} (+1)",
        standard: "{0} (+0)"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "á", "ä", "ã", "b", "c", "č", "d", "e", "é", "f", "g", "h", "i", "í", "j", "k", "l", "m", "n", "o", "ó", "ö", "õ", "p", "q", "r", "s", "š", "t", "u", "ú", "ü", "ũ", "v", "w", "x", "y", "z" ],
        auxiliary: [ "à", "ă", "â", "å", "ā", "æ", "ç", "è", "ĕ", "ê", "ë", "ē", "ì", "ĭ", "î", "ï", "ī", "ñ", "ò", "ŏ", "ô", "ø", "ō", "œ", "ß", "ù", "ŭ", "û", "ū", "ÿ" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ],
        punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "(", ")", "\\[", "\\]", "\\{", "\\}" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _4x24399,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _4x24444,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _4x24444,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _4x24399,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _4x24399,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _4x24399,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _4x24399,
        digits: "renderEthiopic"
    },
    finance: _4x24403,
    fullwide: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _4x24399,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _4x24399,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _4x24399,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _4x24399,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _4x24407,
    hansfin: _4x24410,
    hant: _4x24407,
    hantfin: _4x24410,
    hebr: {
        symbols: _4x24399,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _4x24399,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _4x24407,
    jpanfin: _4x24410,
    kali: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _4x24399,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _4x24399,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _4x24399,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _4x24399,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _4x24399,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _4x24399,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _4x24399,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _4x24399,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _4x24403,
    nkoo: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _4x24399,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _4x24399,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _4x24399,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _4x24399,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _4x24399,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _4x24399,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _4x24403,
    vaii: {
        symbols: _4x24398,
        formats: _4x24444,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _4x24399,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _4x24435,
        datePartsOrder: "ymd",
        dateIntervalFormats: _4x24437,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _4x24425,
        dayPeriods: _4x24401,
        monthNames: _4x24430,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _4x24413,
        fields: _4x24442
    },
    chinese: _4x24448,
    coptic: {
        dateFormats: _4x24435,
        datePartsOrder: "ymd",
        dateIntervalFormats: _4x24437,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _4x24425,
        dayPeriods: _4x24401,
        monthNames: {
            format: _4x24418,
            standAlone: _4x24418
        },
        eraNames: _4x2462,
        quarterNames: _4x24413,
        fields: _4x24442
    },
    dangi: _4x24448,
    ethioaa: _4x24443,
    ethiopic: {
        dateFormats: _4x24435,
        datePartsOrder: "ymd",
        dateIntervalFormats: _4x24437,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _4x24425,
        dayPeriods: _4x24401,
        monthNames: {
            format: _4x24420,
            standAlone: _4x24420
        },
        eraNames: _4x2462,
        quarterNames: _4x24413,
        fields: _4x24442
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d. MMMM y",
                longDate: "d. MMMM y",
                mediumDate: "d. MMM y",
                shortDate: "y-MM-dd",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "y-MM-dd HH:mm",
                mediumDateTime: "d. MMM y HH:mm:ss",
                longDateTime: "d. MMMM y HH:mm:ss z",
                fullDateTime: "EEEE, d. MMMM y HH:mm:ss zzzz"
            },
            cldr: {
                Ed: "E d.",
                h: "h a",
                hm: "h:mm a",
                hms: "h:mm:ss a",
                M: "LLL",
                Md: "d. MMM",
                MEd: "E, d. MMM",
                MMMd: "d. MMM",
                MMMEd: "E, d. MMM",
                yMMM: "MMM y",
                yMMMd: "d. MMM y",
                yMMMEd: "E, d. MMM y",
                d: "d",
                E: "ccc",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                H: "HH",
                Hm: "HH:mm",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                MMM: "LLL",
                MMMMd: "MMMM d",
                ms: "mm:ss",
                y: "y",
                yM: "y-MM",
                yMd: "y-MM-dd",
                yMEd: "y-MM-dd, E",
                yMMMM: "y MMMM",
                yQQQ: "y QQQ",
                yQQQQ: "y QQQQ"
            }
        },
        datePartsOrder: "ymd",
        dateIntervalFormats: _4x24437,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _4x24425,
        dayPeriods: _4x24401,
        monthNames: _4x24430,
        eraNames: {
            wide: [ "v. Chr.", "n. Chr" ],
            abbreviated: [ "v. Chr.", "n. Chr" ]
        },
        quarterNames: _4x24413,
        fields: _4x24442
    },
    hebrew: {
        dateFormats: _4x24435,
        datePartsOrder: "ymd",
        dateIntervalFormats: _4x24437,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _4x24425,
        dayPeriods: _4x24401,
        monthNames: {
            format: _4x24416,
            standAlone: _4x24416
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _4x24413,
        fields: _4x24442
    },
    indian: {
        dateFormats: _4x24435,
        datePartsOrder: "ymd",
        dateIntervalFormats: _4x24437,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _4x24425,
        dayPeriods: _4x24401,
        monthNames: {
            format: _4x24421,
            standAlone: _4x24421
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _4x24413,
        fields: _4x24442
    },
    islamic: _4x24446,
    "islamic-umalqura": _4x24446,
    "islamic-tbla": _4x24446,
    "islamic-civil": _4x24446,
    "islamic-rgsa": _4x24446,
    iso8601: _4x24443,
    japanese: {
        dateFormats: _4x24435,
        datePartsOrder: "ymd",
        dateIntervalFormats: _4x24437,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _4x24425,
        dayPeriods: _4x24401,
        monthNames: _4x24430,
        eraNames: {
            wide: _4x24445,
            abbreviated: _4x24445
        },
        quarterNames: _4x24413,
        fields: _4x24442
    },
    persian: {
        dateFormats: _4x24435,
        datePartsOrder: "ymd",
        dateIntervalFormats: _4x24437,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _4x24425,
        dayPeriods: _4x24401,
        monthNames: {
            format: _4x24417,
            standAlone: _4x24417
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _4x24413,
        fields: _4x24442
    },
    roc: {
        dateFormats: _4x24435,
        datePartsOrder: "ymd",
        dateIntervalFormats: _4x24437,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _4x24425,
        dayPeriods: _4x24401,
        monthNames: _4x24430,
        eraNames: {
            wide: _4x2412,
            abbreviated: _4x2412
        },
        quarterNames: _4x24413,
        fields: _4x24442
    },
    islamicc: _4x24443
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 64), P.timeZones.slice(65, 69), {
    id: "America/Havana",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Hawanna",
    countryId: "CU"
}, P.timeZones.slice(70, 72), {
    id: "America/Jamaica",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Jamaika",
    countryId: "JM"
}, {
    id: "America/Cayman",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Kaimaninsla",
    countryId: "KY"
}, P.timeZones.slice(73, 113), {
    id: "America/Montserrat",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Monserat",
    countryId: "MS"
}, P.timeZones.slice(114, 162), {
    id: "Africa/Accra",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Akra",
    countryId: "GH"
}, P.timeZones.slice(163, 182), {
    id: "Atlantic/Reykjavik",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Rikjawik",
    countryId: "IS"
}, P.timeZones.slice(184, 187), {
    id: "Africa/Ouagadougou",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Wagadugu",
    countryId: "BF"
}, {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Algier",
    countryId: "DZ"
}, {
    id: "Europe/Amsterdam",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Amšterdam",
    countryId: "NL"
}, P.timeZones.slice(189, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrad",
    countryId: "RS"
}, P.timeZones.slice(192, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Brüssel",
    countryId: "BE"
}, {
    id: "Europe/Budapest",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Budapešt",
    countryId: "HU"
}, P.timeZones.slice(197, 200), P.timeZones.slice(201, 205), {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Kopehage",
    countryId: "DK"
}, P.timeZones[205], {
    id: "Europe/Ljubljana",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Laibač",
    countryId: "SI"
}, P.timeZones[206], P.timeZones.slice(208, 221), {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Prag",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Rom",
    countryId: "IT"
}, P.timeZones.slice(223, 227), {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tiran",
    countryId: "AL"
}, P.timeZones.slice(228, 230), {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Vatikan",
    countryId: "VA"
}, {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Waršau",
    countryId: "PL"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Wien",
    countryId: "AT"
}, P.timeZones[233], {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zürič",
    countryId: "CH"
}, P.timeZones.slice(235, 238), P.timeZones[239], {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bukarešt",
    countryId: "RO"
}, P.timeZones.slice(241, 251), {
    id: "Africa/Cairo",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kairo",
    countryId: "EG"
}, {
    id: "Africa/Khartoum",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kartum",
    countryId: "SD"
}, P.timeZones.slice(253, 255), {
    id: "Europe/Kaliningrad",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Königsbärg",
    countryId: "RU"
}, P.timeZones.slice(255, 262), {
    id: "Europe/Tallinn",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Reval",
    countryId: "EE"
}, P.timeZones.slice(262, 264), {
    id: "Africa/Tripoli",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Tripolis",
    countryId: "LY"
}, {
    id: "Europe/Vilnius",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Wilna",
    countryId: "LT"
}, P.timeZones.slice(267, 273), {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdad",
    countryId: "IQ"
}, P.timeZones.slice(274, 276), {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damaskus",
    countryId: "SY"
}, P.timeZones[277], {
    id: "Africa/Djibouti",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Dšibuti",
    countryId: "DJ"
}, P.timeZones.slice(280, 282), {
    id: "Europe/Istanbul",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Konštantinopel",
    countryId: "TR"
}, P.timeZones.slice(282, 285), {
    id: "Africa/Mogadishu",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Mogadišu",
    countryId: "SO"
}, P.timeZones.slice(286, 292), {
    id: "Europe/Volgograd",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Wolgograd",
    countryId: "RU"
}, P.timeZones.slice(293, 351), {
    id: "Asia/Hong_Kong",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Hongkong",
    countryId: "HK"
}, P.timeZones.slice(352, 360), {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Singapur",
    countryId: "SG"
}, P.timeZones.slice(361, 371), {
    id: "Asia/Tokyo",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tokio",
    countryId: "JP"
}, P.timeZones.slice(372, 386), {
    id: "Australia/Sydney",
    regionId: "053",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Sidnei",
    countryId: "AU"
}, P.timeZones.slice(387, 419));

inter.territories = [ _4x24274, _4x24314, _4x24275, _4x24169, _4x24170, _4x24171, _4x24373, _4x2487, _4x24326, _4x24368, _4x24172, _4x24133, _4x24210, _4x2463, _4x24344, _4x24276, _4x24173, _4x24104, _4x24292, _4x24303, _4x24251, _4x24375, _4x24174, _4x24252, _4x24211, _4x24175, _4x24134, _4x24135, _4x24105, _4x24176, _4x24136, _4x24177, _4x24356, _4x24212, _4x2472, _4x24213, _4x24351, _4x24357, _4x24137, _4x24214, _4x24304, _4x24106, _4x24178, _4x2488, _4x24107, _4x2484, _4x24253, _4x24277, _4x2475, _4x24352, _4x24215, _4x24216, _4x24179, _4x24180, _4x24138, _4x24293, _4x24305, _4x24181, _4x24319, _4x24182, _4x24217, _4x24315, _4x24183, _4x24312, _4x24108, _4x24218, _4x24219, _4x24327, _4x24345, _4x24349, _4x24109, _4x24110, _4x24139, _4x2490, _4x24184, _4x24254, _4x24111, _4x24306, _4x24185, _4x24255, _4x24220, _4x24278, _4x2491, _4x24256, _4x24221, _4x24140, _4x24112, _4x24294, _4x2485, _4x24141, _4x24222, _4x24113, _4x24257, _4x2492, _4x2493, _4x24142, _4x24143, _4x24295, _4x24144, _4x24145, _4x24186, _4x24114, _4x24146, _4x24223, _4x2494, _4x24296, _4x24224, _4x24187, _4x24147, _4x2480, _4x24258, _4x24320, _4x24259, _4x24115, _4x24116, _4x24260, _4x24225, _4x2468, _4x24226, _4x24148, _4x24330, _4x24316, _4x24188, _4x2495, _4x24149, _4x2496, _4x24189, _4x24227, _4x24190, _4x24191, _4x24279, _4x24150, _4x24228, _4x24117, _4x24280, _4x24151, _4x24229, _4x24230, _4x2497, _4x24118, _4x24152, _4x24281, _4x24297, _4x24282, _4x24261, _4x24262, _4x24331, _4x24153, _4x24283, _4x24378, _4x24350, _4x24154, _4x24155, _4x24231, _4x24263, _4x24284, _4x24232, _4x24192, _4x24193, _4x24119, _4x24120, _4x24264, _4x24121, _4x24194, _4x2498, _4x24307, _4x24265, _4x24337, _4x24338, _4x24266, _4x24308, _4x24195, _4x24328, _4x24365, _4x2499, _4x24321, _4x24332, _4x24322, _4x24333, _4x24233, _4x24234, _4x24122, _4x24267, _4x24156, _4x24317, _4x24235, _4x24100, _4x24285, _4x24236, _4x24101, _4x24334, _4x24237, _4x24298, _4x24157, _4x24196, _4x24238, _4x24197, _4x24239, _4x24158, _4x24123, _4x24286, _4x24309, _4x24240, _4x24198, _4x24159, _4x24199, _4x24160, _4x24200, _4x24310, _4x24241, _4x24242, _4x24243, _4x24244, _4x24201, _4x24374, _4x24369, _4x24268, _4x24358, _4x24287, _4x24346, _4x24269, _4x24288, _4x24363, _4x24371, _4x24124, _4x24245, _4x24359, _4x24270, _4x24353, _4x24271, _4x24339, _4x24323, _4x24335, _4x24354, _4x24246, _4x24360, _4x24340, _4x24125, _4x24299, _4x24161, _4x24247, _4x24248, _4x24249, _4x24102, _4x24202, _4x24126, _4x24347, _4x2486, _4x24203, _4x24311, _4x24361, _4x24162, _4x24163, _4x24103, _4x24164, _4x24127, _4x24165, _4x24204, _4x24166, _4x24205, _4x24289, _4x24206, _4x24207, _4x24272, _4x24366, _4x24208, _4x24336, _4x24341, _4x24329, _4x24342, _4x24290, _4x2476, _4x2457, _4x24300, _4x24370, _4x24362, _4x24348, _4x24128, _4x24167, {
    id: "QO",
    displayName: "Üssers Ozeanie",
    regionId: "009",
    hasTimeZones: false
} ];

inter.regions = [ _4x24314, _4x24373, _4x24303, _4x24375, _4x24315, _4x24320, _4x24331, _4x24378, _4x24350, _4x24337, _4x24338, _4x24365, _4x24321, _4x24332, _4x24322, _4x24333, _4x24334, _4x24339, _4x24323, _4x24335, _4x24360, _4x24340, _4x24341, _4x24329, _4x24342, _4x2457, _4x24362, _4x24348 ];

inter.countries = [ _4x24274, _4x24275, _4x24169, _4x24170, _4x24171, _4x2487, _4x24326, _4x24368, _4x24172, _4x24133, _4x24210, _4x2463, _4x24344, _4x24276, _4x24173, _4x24104, _4x24292, _4x24251, _4x24174, _4x24252, _4x24211, _4x24175, _4x24134, _4x24135, _4x24105, _4x24176, _4x24136, _4x24177, _4x24356, _4x24212, _4x2472, _4x24213, _4x24351, _4x24357, _4x24137, _4x24214, _4x24304, _4x24106, _4x24178, _4x2488, _4x24107, _4x2484, _4x24253, _4x24277, _4x2475, _4x24352, _4x24215, _4x24216, _4x24179, _4x24180, _4x24138, _4x24293, _4x24305, _4x24181, _4x24319, _4x24182, _4x24217, _4x24183, _4x24312, _4x24108, _4x24218, _4x24219, _4x24327, _4x24345, _4x24349, _4x24109, _4x24110, _4x24139, _4x2490, _4x24184, _4x24254, _4x24111, _4x24306, _4x24185, _4x24255, _4x24220, _4x24278, _4x2491, _4x24256, _4x24221, _4x24140, _4x24112, _4x24294, _4x2485, _4x24141, _4x24222, _4x24113, _4x24257, _4x2492, _4x2493, _4x24142, _4x24143, _4x24295, _4x24144, _4x24145, _4x24186, _4x24114, _4x24146, _4x24223, _4x2494, _4x24296, _4x24224, _4x24187, _4x24147, _4x2480, _4x24258, _4x24259, _4x24115, _4x24116, _4x24260, _4x24225, _4x2468, _4x24226, _4x24148, _4x24330, _4x24316, _4x24188, _4x2495, _4x24149, _4x2496, _4x24189, _4x24227, _4x24190, _4x24191, _4x24279, _4x24150, _4x24228, _4x24117, _4x24280, _4x24151, _4x24229, _4x24230, _4x2497, _4x24118, _4x24152, _4x24281, _4x24297, _4x24282, _4x24261, _4x24262, _4x24153, _4x24283, _4x24154, _4x24155, _4x24231, _4x24263, _4x24284, _4x24232, _4x24192, _4x24193, _4x24119, _4x24120, _4x24264, _4x24121, _4x24194, _4x2498, _4x24307, _4x24265, _4x24266, _4x24308, _4x24195, _4x24328, _4x2499, _4x24233, _4x24234, _4x24122, _4x24267, _4x24156, _4x24317, _4x24235, _4x24100, _4x24285, _4x24236, _4x24101, _4x24237, _4x24298, _4x24157, _4x24196, _4x24238, _4x24197, _4x24239, _4x24158, _4x24123, _4x24286, _4x24309, _4x24240, _4x24198, _4x24159, _4x24199, _4x24160, _4x24200, _4x24310, _4x24241, _4x24242, _4x24243, _4x24244, _4x24201, _4x24374, _4x24369, _4x24268, _4x24358, _4x24287, _4x24346, _4x24269, _4x24288, _4x24363, _4x24371, _4x24124, _4x24245, _4x24359, _4x24270, _4x24353, _4x24271, _4x24354, _4x24246, _4x24125, _4x24299, _4x24161, _4x24247, _4x24248, _4x24249, _4x24102, _4x24202, _4x24126, _4x24347, _4x2486, _4x24203, _4x24311, _4x24361, _4x24162, _4x24163, _4x24103, _4x24164, _4x24127, _4x24165, _4x24204, _4x24166, _4x24205, _4x24289, _4x24206, _4x24207, _4x24272, _4x24366, _4x24208, _4x24336, _4x24290, _4x2476, _4x24300, _4x24370, _4x24128, _4x24167 ];

inter.languages = [ {
    id: "ab",
    displayName: "Abčasiš"
}, {
    id: "af",
    displayName: "Afrikáns",
    nativeDisplayName: "Afrikaans"
}, {
    id: "en_us",
    displayName: "Amerikanišes Engliš",
    nativeDisplayName: "American English"
}, {
    id: "en_au",
    displayName: "Auštrališes Engliš",
    nativeDisplayName: "Australian English"
}, {
    id: "ay",
    displayName: "Aymara"
}, {
    id: "az",
    displayName: "Serbaidšaniš",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "Malaíš",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bs",
    displayName: "Bosniš",
    nativeDisplayName: "bosanski"
}, {
    id: "en_gb",
    displayName: "Britišes Engliš",
    nativeDisplayName: "British English"
}, {
    id: "en_ca",
    displayName: "Kanadišes Engliš",
    nativeDisplayName: "Canadian English"
}, {
    id: "ca",
    displayName: "Katalaniš",
    nativeDisplayName: "català"
}, {
    id: "sn",
    displayName: "Shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cy",
    displayName: "Walisiš",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "Däniš",
    nativeDisplayName: "dansk"
}, {
    id: "se",
    displayName: "Nordsamiš",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "de",
    displayName: "Titš",
    nativeDisplayName: "Deutsch"
}, {
    id: "et",
    displayName: "Estniš",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "Efik"
}, {
    id: "en",
    displayName: "Engliš",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "Schpaniš",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "Iberišes Schpaniš",
    nativeDisplayName: "español de España"
}, {
    id: "es_419",
    displayName: "Latiamerikanišes Schpaniš",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eu",
    displayName: "Baskiš",
    nativeDisplayName: "euskara"
}, {
    id: "fj",
    displayName: "Fidšianiš"
}, {
    id: "fil",
    displayName: "Filipiniš",
    nativeDisplayName: "Filipino"
}, {
    id: "fr",
    displayName: "Wälš",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "Kanadišes Wälš",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "Schwizer Wälš",
    nativeDisplayName: "français suisse"
}, {
    id: "ga",
    displayName: "Iriš",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gl",
    displayName: "Galiziš",
    nativeDisplayName: "galego"
}, {
    id: "gn",
    displayName: "Guarani"
}, {
    id: "ht",
    displayName: "Haitianiš"
}, {
    id: "ha",
    displayName: "Hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "hr",
    displayName: "Kroatiš",
    nativeDisplayName: "hrvatski"
}, {
    id: "ig",
    displayName: "Igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "Rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "id",
    displayName: "Indonesiš",
    nativeDisplayName: "Indonesia"
}, {
    id: "nd",
    displayName: "Nordndebele",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "Zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "Italieniš",
    nativeDisplayName: "italiano"
}, {
    id: "rw",
    displayName: "Ruandiš",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "sw",
    displayName: "Suaheliš",
    nativeDisplayName: "Kiswahili"
}, {
    id: "ku",
    displayName: "Kurdiš"
}, {
    id: "la",
    displayName: "Latiniš"
}, {
    id: "lv",
    displayName: "Lettiš",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "Tonga",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lt",
    displayName: "Litauiš",
    nativeDisplayName: "lietuvių"
}, {
    id: "ln",
    displayName: "Lingala",
    nativeDisplayName: "lingála"
}, {
    id: "lb",
    displayName: "Luxemburgiš",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "hu",
    displayName: "Ungariš",
    nativeDisplayName: "magyar"
}, {
    id: "mg",
    displayName: "Malagási",
    nativeDisplayName: "Malagasy"
}, {
    id: "dv",
    displayName: "Malediwiš"
}, {
    id: "mt",
    displayName: "Maltesiš",
    nativeDisplayName: "Malti"
}, {
    id: "mi",
    displayName: "Maori"
}, {
    id: "nl",
    displayName: "Holändiš",
    nativeDisplayName: "Nederlands"
}, {
    id: "tpi",
    displayName: "Niwmelanesiš"
}, {
    id: "nso",
    displayName: "Nordsotho"
}, {
    id: "nb",
    displayName: "Norwegiš Bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "ny",
    displayName: "Nyanja"
}, {
    id: "nn",
    displayName: "Norwegiš Nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "uz",
    displayName: "Usbekiš",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pl",
    displayName: "Polniš",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "Portugisiš",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "Brasilianišes Portugisiš",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "Iberišes Portugisiš",
    nativeDisplayName: "português europeu"
}, {
    id: "ro",
    displayName: "Rumäniš",
    nativeDisplayName: "română"
}, {
    id: "rm",
    displayName: "Rätromaniš",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "Quečua",
    nativeDisplayName: "Runasimi"
}, {
    id: "sm",
    displayName: "Samoaniš"
}, {
    id: "sa",
    displayName: "Sanskrit"
}, {
    id: "de_ch",
    displayName: "Schwizer Hočtitš",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "sq",
    displayName: "Albaniš",
    nativeDisplayName: "shqip"
}, {
    id: "sd",
    displayName: "Sindhi"
}, {
    id: "sk",
    displayName: "Slowakiš",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "Sloweniš",
    nativeDisplayName: "slovenščina"
}, {
    id: "so",
    displayName: "Somališ",
    nativeDisplayName: "Soomaali"
}, {
    id: "su",
    displayName: "Sundanesiš"
}, {
    id: "fi",
    displayName: "Finiš",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "Schwediš",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "Swazi"
}, {
    id: "sg",
    displayName: "Sango",
    nativeDisplayName: "Sängö"
}, {
    id: "st",
    displayName: "Südsotho"
}, {
    id: "tg",
    displayName: "Tadšikiš"
}, {
    id: "ty",
    displayName: "Taitiš"
}, {
    id: "tet",
    displayName: "Tetum"
}, {
    id: "vi",
    displayName: "Vietnamesiš",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "ts",
    displayName: "Tsonga"
}, {
    id: "tn",
    displayName: "Tswana"
}, {
    id: "tk",
    displayName: "Turkmeniš",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "Türkiš",
    nativeDisplayName: "Türkçe"
}, {
    id: "und",
    displayName: "Unbekannti Schprač"
}, {
    id: "ve",
    displayName: "Venda"
}, {
    id: "nl_be",
    displayName: "Flämiš",
    nativeDisplayName: "Vlaams"
}, {
    id: "wae",
    displayName: "Walser",
    nativeDisplayName: "Walser"
}, {
    id: "wo",
    displayName: "Wolof"
}, {
    id: "xh",
    displayName: "Xhosa"
}, {
    id: "yo",
    displayName: "Yoruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "Iisländiš",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "Öštričišes Titš",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "Tšečiš",
    nativeDisplayName: "čeština"
}, {
    id: "haw",
    displayName: "Hawaíaniš",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "Gričiš",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "Wísrussiš",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "Bulgariš",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "Osétiš",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "Kirgisiš",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "Mazedoniš",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "Mongoliš",
    nativeDisplayName: "монгол"
}, {
    id: "ru",
    displayName: "Rusiš",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "Jakutiš",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "Serbiš",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "Ukrainiš",
    nativeDisplayName: "українська"
}, {
    id: "kk",
    displayName: "Kazačiš",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "Armeniš",
    nativeDisplayName: "հայերեն"
}, {
    id: "he",
    displayName: "Hebräiš",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "Uiguriš",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "Urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "Arabiš",
    nativeDisplayName: "العربية"
}, {
    id: "fa",
    displayName: "Persiš",
    nativeDisplayName: "فارسی"
}, {
    id: "ps",
    displayName: "Paštu",
    nativeDisplayName: "پښتو"
}, {
    id: "ks",
    displayName: "Kašmiriš",
    nativeDisplayName: "کٲشُر"
}, {
    id: "ne",
    displayName: "Nepalesiš",
    nativeDisplayName: "नेपाली"
}, {
    id: "mr",
    displayName: "Marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "Hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "Assamesiš",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "Bengališ",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "Pandšabiš",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "Gujarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "Oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "Tamiliš",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "Telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "Kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "Malayalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "Singalesiš",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "Thailändiš",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "Laotiš",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "Tibetiš",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "Butaniš",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "Burmesiš",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "Georgiš",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "Tigrinja",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "Amhariš",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "Kambodšaniš",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zh",
    displayName: "Chinesiš",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "Japaniš",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "Vereifačts Chinesiš",
    nativeDisplayName: "简体中文"
}, {
    id: "zh_hant",
    displayName: "Traditionells Chinesiš",
    nativeDisplayName: "繁體中文"
}, {
    id: "ko",
    displayName: "Koreaniš",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Arab",
    displayName: "Arabiš"
}, {
    id: "Armn",
    displayName: "Armeniš"
}, {
    id: "Beng",
    displayName: "Bengališ"
}, {
    id: "Mymr",
    displayName: "Burmesiš"
}, {
    id: "Deva",
    displayName: "Devanagari"
}, {
    id: "Ethi",
    displayName: "Ethiopiš"
}, {
    id: "Geor",
    displayName: "Georgiš"
}, {
    id: "Grek",
    displayName: "Gričiš"
}, {
    id: "Gujr",
    displayName: "Gujarati"
}, {
    id: "Hebr",
    displayName: "Hebräiš"
}, {
    id: "Jpan",
    displayName: "Japaniš"
}, {
    id: "Knda",
    displayName: "Kannada"
}, {
    id: "Khmr",
    displayName: "Khmer"
}, {
    id: "Cyrl",
    displayName: "Kirilliš"
}, {
    id: "Kore",
    displayName: "Korianiš"
}, {
    id: "Laoo",
    displayName: "Laotiš"
}, {
    id: "Latn",
    displayName: "Latiniš"
}, {
    id: "Mlym",
    displayName: "Malaisiš"
}, {
    id: "Orya",
    displayName: "Oriya"
}, {
    id: "Zxxx",
    displayName: "Schriftlos"
}, {
    id: "Sinh",
    displayName: "Singalesiš"
}, {
    id: "Taml",
    displayName: "Tamiliš"
}, {
    id: "Telu",
    displayName: "Telugu"
}, {
    id: "Thai",
    displayName: "Thai"
}, {
    id: "Thaa",
    displayName: "Thána"
}, {
    id: "Hant",
    displayName: "Traditionell"
}, {
    id: "Zzzz",
    displayName: "Unkodierti Schrift"
}, {
    id: "Hans",
    displayName: "Vereifačt"
} ];

inter.currencies = [ {
    id: "BRL",
    displayName: "Brasilianiši Real",
    symbol: "R$",
    one: "Brasilianišä Real",
    other: "Brasilianiši Real"
}, {
    id: "CNY",
    displayName: "Chinesiši Yuan",
    symbol: "CN¥",
    one: "Chinesišä Yuan",
    other: "Chinesiši Yuan"
}, {
    id: "USD",
    displayName: "Dollar",
    symbol: "$",
    one: "Dollar",
    other: "Dollar"
}, {
    id: "EUR",
    displayName: "Euro",
    symbol: "€",
    one: "Euro",
    other: "Euro"
}, {
    id: "INR",
    displayName: "Indiši Rupie",
    symbol: "₹",
    one: "Indišä Rupie",
    other: "Indiši Rupie"
}, {
    id: "GBP",
    displayName: "Pfund",
    symbol: "£",
    one: "Pfund",
    other: "Pfund"
}, {
    id: "RUB",
    displayName: "Rubel",
    symbol: "₽",
    one: "Rubel",
    other: "Rubel"
}, {
    id: "XXX",
    displayName: "Unbekannti Wãrig",
    one: "Unbekannti Wãrig",
    other: "Unbekannti Wãrig"
}, {
    id: "JPY",
    displayName: "Yen",
    symbol: "¥",
    one: "Yen",
    other: "Yen"
} ];

module.exports = inter;