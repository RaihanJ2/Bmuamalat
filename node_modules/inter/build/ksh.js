function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _9qqw1 = {
    "default": "#,##0 %"
}, _9qqw2 = {
    am: "v.m.",
    pm: "n.m."
}, _9qqw3 = {
    all: {
        leap: "{0}bis"
    }
}, _9qqw4 = {
    displayName: "Zickzohn"
}, _9qqw5 = {
    a: "h a – h a",
    h: "h–h a"
}, _9qqw6 = {
    displayName: "Daachteil"
}, _9qqw7 = {
    displayName: "Wochedaach"
}, _9qqw8 = [ "Before R.O.C.", "R.O.C." ], _9qqw9 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _9qqw10 = [ "S", "M", "D", "M", "D", "F", "S" ], _9qqw11 = [ "1.Q.", "2.Q.", "3.Q.", "4.Q." ], _9qqw12 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _9qqw13 = {
    am: "Vormittag",
    pm: "Nachmittag"
}, _9qqw14 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _9qqw15 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _9qqw16 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _9qqw17 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _9qqw18 = {
    M: "MMM–MMM y",
    y: "MMM. y – MMM. y"
}, _9qqw19 = [ "Su", "Mo", "Di", "Me", "Du", "Fr", "Sa" ], _9qqw20 = {
    zero: "{0}°",
    one: "{0}°",
    other: "{0}°"
}, _9qqw21 = {
    zero: "{0}′",
    one: "{0}′",
    other: "{0}′"
}, _9qqw22 = {
    zero: "{0}″",
    one: "{0}″",
    other: "{0}″"
}, _9qqw23 = {
    zero: "{0}m",
    one: "{0}m",
    other: "{0}m"
}, _9qqw24 = {
    M: "MMMM–MMMM y",
    y: "MMMM y – MMMM y"
}, _9qqw25 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _9qqw26 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _9qqw27 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _9qqw28 = {
    zero: "{0}°F",
    one: "{0}°F",
    other: "{0}°F"
}, _9qqw29 = {
    zero: "0 tsd",
    one: "0 tsd",
    other: "0 tsd"
}, _9qqw30 = {
    zero: "0 Mio",
    one: "0 Mio",
    other: "0 Mio"
}, _9qqw31 = {
    zero: "0 Mrd",
    one: "0 Mrd",
    other: "0 Mrd"
}, _9qqw32 = {
    zero: "0 Bio",
    one: "0 Bio",
    other: "0 Bio"
}, _9qqw33 = {
    zero: "{0} ac",
    one: "{0} ac",
    other: "{0} ac"
}, _9qqw34 = {
    zero: "{0} mi",
    one: "{0} mi",
    other: "{0} mi"
}, _9qqw35 = {
    zero: "00 tsd",
    one: "00 tsd",
    other: "00 tsd"
}, _9qqw36 = {
    zero: "00 Mio",
    one: "00 Mio",
    other: "00 Mio"
}, _9qqw37 = {
    zero: "00 Mrd",
    one: "00 Mrd",
    other: "00 Mrd"
}, _9qqw38 = {
    zero: "00 Bio",
    one: "00 Bio",
    other: "00 Bio"
}, _9qqw39 = [ "Su.", "Mo.", "Di.", "Me.", "Du.", "Fr.", "Sa." ], _9qqw40 = {
    M: "GGGGG y-MM – y-MM",
    y: "GGGGG y-MM – y-MM"
}, _9qqw41 = {
    am: "Uhr vörmiddaachs",
    pm: "Uhr nommendaachs"
}, _9qqw42 = {
    zero: "{0} mi²",
    one: "{0} mi²",
    other: "{0} mi²"
}, _9qqw43 = {
    zero: "{0} ft²",
    one: "{0} ft²",
    other: "{0} ft²"
}, _9qqw44 = {
    zero: "{0} mi³",
    one: "{0} mi³",
    other: "{0} mi³"
}, _9qqw45 = {
    zero: "000 tsd",
    one: "000 tsd",
    other: "000 tsd"
}, _9qqw46 = {
    zero: "000 Mio",
    one: "000 Mio",
    other: "000 Mio"
}, _9qqw47 = {
    zero: "000 Mrd",
    one: "000 Mrd",
    other: "000 Mrd"
}, _9qqw48 = {
    zero: "000 Bio",
    one: "000 Bio",
    other: "000 Bio"
}, _9qqw49 = {
    zero: "0 tsd ¤",
    one: "0 tsd ¤",
    other: "0 tsd ¤"
}, _9qqw50 = {
    zero: "0 Mio ¤",
    one: "0 Mio ¤",
    other: "0 Mio ¤"
}, _9qqw51 = {
    zero: "0 Mrd ¤",
    one: "0 Mrd ¤",
    other: "0 Mrd ¤"
}, _9qqw52 = {
    zero: "0 Bio ¤",
    one: "0 Bio ¤",
    other: "0 Bio ¤"
}, _9qqw53 = {
    future: {
        other: "+{0} y"
    },
    past: {
        other: "-{0} y"
    }
}, _9qqw54 = {
    future: {
        other: "+{0} m"
    },
    past: {
        other: "-{0} m"
    }
}, _9qqw55 = {
    "0": "di Woch",
    "1": "nächste Woche",
    "-1": "läz Woch"
}, _9qqw56 = {
    future: {
        other: "+{0} w"
    },
    past: {
        other: "-{0} w"
    }
}, _9qqw57 = {
    future: {
        other: "+{0} d"
    },
    past: {
        other: "-{0} d"
    }
}, _9qqw58 = {
    future: {
        other: "+{0} h"
    },
    past: {
        other: "-{0} h"
    }
}, _9qqw59 = {
    future: {
        other: "+{0} s"
    },
    past: {
        other: "-{0} s"
    }
}, _9qqw60 = {
    future: {
        other: "+{0} Q"
    },
    past: {
        other: "-{0} Q"
    }
}, _9qqw61 = {
    zero: "{0} Voss",
    one: "{0} Voss",
    other: "{0} Voss"
}, _9qqw62 = {
    zero: "{0} Dumm",
    one: "{0} Dumm",
    other: "{0} Dumm"
}, _9qqw63 = {
    zero: "{0} inHg",
    one: "{0} inHg",
    other: "{0} inHg"
}, _9qqw64 = {
    zero: "{0} mi/h",
    one: "{0} mi/h",
    other: "{0} mi/h"
}, _9qqw65 = {
    zero: "00 tsd ¤",
    one: "00 tsd ¤",
    other: "00 tsd ¤"
}, _9qqw66 = {
    zero: "00 Mio ¤",
    one: "00 Mio ¤",
    other: "00 Mio ¤"
}, _9qqw67 = {
    zero: "00 Mrd ¤",
    one: "00 Mrd ¤",
    other: "00 Mrd ¤"
}, _9qqw68 = {
    zero: "00 Bio ¤",
    one: "00 Bio ¤",
    other: "00 Bio ¤"
}, _9qqw69 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _9qqw70 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _9qqw71 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _9qqw72 = {
    "0": "diese Johr",
    "1": "nächste Johr",
    "-1": "läz Johr"
}, _9qqw73 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _9qqw74 = {
    id: "001",
    displayName: "de Ääd",
    hasTimeZones: false
}, _9qqw75 = {
    zero: "{0} Unzen",
    one: "{0} Unze",
    other: "{0} Unzen"
}, _9qqw76 = {
    future: {
        other: "+{0} min"
    },
    past: {
        other: "-{0} min"
    }
}, _9qqw77 = {
    id: "AC",
    displayName: "Aßension",
    hasTimeZones: false
}, _9qqw78 = {
    zero: "{0} Pfund",
    one: "{0} Pfund",
    other: "{0} Pfund"
}, _9qqw79 = {
    zero: "0 Dousend",
    one: "0 Dousend",
    other: "0 Dousend"
}, _9qqw80 = {
    zero: "000 tsd ¤",
    one: "000 tsd ¤",
    other: "000 tsd ¤"
}, _9qqw81 = {
    zero: "000 Mio ¤",
    one: "000 Mio ¤",
    other: "000 Mio ¤"
}, _9qqw82 = {
    zero: "000 Mrd ¤",
    one: "000 Mrd ¤",
    other: "000 Mrd ¤"
}, _9qqw83 = {
    zero: "000 Bio ¤",
    one: "000 Bio ¤",
    other: "000 Bio ¤"
}, _9qqw84 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _9qqw85 = {
    id: "AQ",
    displayName: "der Södpol",
    hasTimeZones: true
}, _9qqw86 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _9qqw87 = {
    zero: "00 Dousend",
    one: "00 Dousend",
    other: "00 Dousend"
}, _9qqw88 = {
    zero: "0 Billjuhn",
    one: "0 Billjuhn",
    other: "0 Billjuhn"
}, _9qqw89 = {
    "0": "diese Mohnd",
    "1": "nächste Mohnd",
    "-1": "lätzde Mohnd"
}, _9qqw90 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _9qqw91 = {
    zero: "0 Milljuhne",
    one: "0 Million",
    other: "0 Milljuhne"
}, _9qqw92 = {
    zero: "0 Milljard",
    one: "0 Milliarde",
    other: "0 Milljarde"
}, _9qqw93 = [ "1. Quattaal", "2. Quattaal", "3. Quattaal", "4. Quattaal" ], _9qqw94 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _9qqw95 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _9qqw96 = {
    id: "BV",
    displayName: "de Buvee-Ensel",
    hasTimeZones: false
}, _9qqw97 = {
    zero: "000 Dousend",
    one: "000 Dousend",
    other: "000 Dousend"
}, _9qqw98 = {
    zero: "00 Billjuhn",
    one: "00 Billion",
    other: "00 Billionen"
}, _9qqw99 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _9qqw100 = {
    id: "TA",
    displayName: "Tristan da Cunja",
    hasTimeZones: false
}, _9qqw101 = {
    id: "CC",
    displayName: "de Kokkos-Enselle",
    hasTimeZones: true
}, _9qqw102 = {
    id: "EA",
    displayName: "Ze’uta un Meliija",
    hasTimeZones: false
}, _9qqw103 = {
    zero: "00 Milljuhne",
    one: "00 Milljuhne",
    other: "00 Millionen"
}, _9qqw104 = {
    zero: "000 Billjuhn",
    one: "000 Billion",
    other: "000 Billionen"
}, _9qqw105 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _9qqw106 = {
    id: "CU",
    displayName: "Kuba",
    regionId: "029",
    hasTimeZones: true
}, _9qqw107 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _9qqw108 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _9qqw109 = {
    id: "PL",
    displayName: "Pole",
    regionId: "151",
    hasTimeZones: true
}, _9qqw110 = {
    id: "CX",
    displayName: "de Weihnaachs-Ensel",
    hasTimeZones: true
}, _9qqw111 = {
    zero: "00 Milljarde",
    one: "00 Milljarde",
    other: "00 Milliarden"
}, _9qqw112 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _9qqw113 = {
    id: "MM",
    displayName: "Birma",
    regionId: "035",
    hasTimeZones: true
}, _9qqw114 = {
    id: "GH",
    displayName: "Jaana",
    regionId: "011",
    hasTimeZones: true
}, _9qqw115 = {
    id: "JP",
    displayName: "Japan",
    regionId: "030",
    hasTimeZones: true
}, _9qqw116 = {
    id: "GU",
    displayName: "Juham",
    regionId: "057",
    hasTimeZones: true
}, _9qqw117 = {
    id: "YE",
    displayName: "Jämme",
    regionId: "145",
    hasTimeZones: true
}, _9qqw118 = {
    id: "QA",
    displayName: "Kataa",
    regionId: "145",
    hasTimeZones: true
}, _9qqw119 = {
    id: "LA",
    displayName: "La’os",
    regionId: "035",
    hasTimeZones: true
}, _9qqw120 = {
    id: "ML",
    displayName: "Maali",
    regionId: "011",
    hasTimeZones: true
}, _9qqw121 = {
    id: "MO",
    displayName: "Makau",
    regionId: "030",
    hasTimeZones: true
}, _9qqw122 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _9qqw123 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _9qqw124 = {
    id: "NE",
    displayName: "Nijer",
    regionId: "011",
    hasTimeZones: true
}, _9qqw125 = {
    id: "TG",
    displayName: "Toojo",
    regionId: "011",
    hasTimeZones: true
}, _9qqw126 = {
    id: "CP",
    displayName: "de Klipperton-Ensel",
    hasTimeZones: false
}, _9qqw127 = {
    d: "G y MMM d–d",
    M: "G y MMM d – MMM d",
    y: "G y MMM d – y MMM d"
}, _9qqw128 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _9qqw129 = {
    id: "BE",
    displayName: "Bellje",
    regionId: "155",
    hasTimeZones: true
}, _9qqw130 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _9qqw131 = {
    id: "IN",
    displayName: "Indije",
    regionId: "034",
    hasTimeZones: true
}, _9qqw132 = {
    id: "IS",
    displayName: "Ißland",
    regionId: "154",
    hasTimeZones: true
}, _9qqw133 = {
    id: "IL",
    displayName: "Ißraäl",
    regionId: "145",
    hasTimeZones: true
}, _9qqw134 = {
    id: "GA",
    displayName: "Jabuhn",
    regionId: "017",
    hasTimeZones: true
}, _9qqw135 = {
    id: "JE",
    displayName: "Jööseh",
    regionId: "154",
    hasTimeZones: true
}, _9qqw136 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _9qqw137 = {
    id: "KW",
    displayName: "Kuweit",
    regionId: "145",
    hasTimeZones: true
}, _9qqw138 = {
    id: "YT",
    displayName: "Majott",
    regionId: "014",
    hasTimeZones: true
}, _9qqw139 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _9qqw140 = {
    id: "MX",
    displayName: "Mäxiko",
    regionId: "013",
    hasTimeZones: true
}, _9qqw141 = {
    id: "NP",
    displayName: "Nepall",
    regionId: "034",
    hasTimeZones: true
}, _9qqw142 = {
    id: "PW",
    displayName: "Pallau",
    regionId: "057",
    hasTimeZones: true
}, _9qqw143 = {
    id: "PE",
    displayName: "Perruh",
    regionId: "005",
    hasTimeZones: true
}, _9qqw144 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _9qqw145 = {
    id: "SY",
    displayName: "Sürije",
    regionId: "145",
    hasTimeZones: true
}, _9qqw146 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _9qqw147 = {
    id: "TO",
    displayName: "Tongga",
    regionId: "061",
    hasTimeZones: true
}, _9qqw148 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _9qqw149 = {
    id: "UG",
    displayName: "Ujanda",
    regionId: "014",
    hasTimeZones: true
}, _9qqw150 = {
    id: "HU",
    displayName: "Unjann",
    regionId: "151",
    hasTimeZones: true
}, _9qqw151 = {
    id: "EG",
    displayName: "Äjüpte",
    regionId: "015",
    hasTimeZones: true
}, _9qqw152 = {
    id: "EE",
    displayName: "Äßland",
    regionId: "154",
    hasTimeZones: true
}, _9qqw153 = {
    zero: "000 Milljuhne",
    one: "000 Milljuhne",
    other: "000 Millionen"
}, _9qqw154 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _9qqw155 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _9qqw156 = {
    id: "BT",
    displayName: "Buttaan",
    regionId: "034",
    hasTimeZones: true
}, _9qqw157 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _9qqw158 = {
    id: "HT",
    displayName: "Ha’itti",
    regionId: "029",
    hasTimeZones: true
}, _9qqw159 = {
    id: "IE",
    displayName: "Irrland",
    regionId: "154",
    hasTimeZones: true
}, _9qqw160 = {
    id: "GM",
    displayName: "Jambija",
    regionId: "011",
    hasTimeZones: true
}, _9qqw161 = {
    id: "GN",
    displayName: "Jinneha",
    regionId: "011",
    hasTimeZones: true
}, _9qqw162 = {
    id: "GY",
    displayName: "Jujaana",
    regionId: "005",
    hasTimeZones: true
}, _9qqw163 = {
    id: "GG",
    displayName: "Jöönsei",
    regionId: "154",
    hasTimeZones: true
}, _9qqw164 = {
    id: "KE",
    displayName: "Keenija",
    regionId: "014",
    hasTimeZones: true
}, _9qqw165 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _9qqw166 = {
    id: "LS",
    displayName: "Lesooto",
    regionId: "018",
    hasTimeZones: true
}, _9qqw167 = {
    id: "LY",
    displayName: "Libbije",
    regionId: "015",
    hasTimeZones: true
}, _9qqw168 = {
    id: "LT",
    displayName: "Littaue",
    regionId: "154",
    hasTimeZones: true
}, _9qqw169 = {
    id: "LV",
    displayName: "Lätland",
    regionId: "154",
    hasTimeZones: true
}, _9qqw170 = {
    id: "MA",
    displayName: "Marokko",
    regionId: "015",
    hasTimeZones: true
}, _9qqw171 = {
    id: "MC",
    displayName: "Monakko",
    regionId: "155",
    hasTimeZones: true
}, _9qqw172 = {
    id: "PA",
    displayName: "Pannama",
    regionId: "013",
    hasTimeZones: true
}, _9qqw173 = {
    id: "IR",
    displayName: "Persije",
    regionId: "034",
    hasTimeZones: true
}, _9qqw174 = {
    id: "RU",
    displayName: "Rußland",
    regionId: "151",
    hasTimeZones: true
}, _9qqw175 = {
    id: "ZM",
    displayName: "Sambija",
    regionId: "014",
    hasTimeZones: true
}, _9qqw176 = {
    id: "WS",
    displayName: "Sammoha",
    regionId: "061",
    hasTimeZones: true
}, _9qqw177 = {
    id: "CL",
    displayName: "Schiile",
    regionId: "005",
    hasTimeZones: true
}, _9qqw178 = {
    id: "CN",
    displayName: "Schiina",
    regionId: "030",
    hasTimeZones: true
}, _9qqw179 = {
    id: "RS",
    displayName: "Särbije",
    regionId: "039",
    hasTimeZones: true
}, _9qqw180 = {
    id: "TH",
    displayName: "Tailand",
    regionId: "035",
    hasTimeZones: true
}, _9qqw181 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _9qqw182 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _9qqw183 = {
    id: "CY",
    displayName: "Züppere",
    regionId: "145",
    hasTimeZones: true
}, _9qqw184 = {
    id: "DG",
    displayName: "de Diego-Garcia-Ensel",
    hasTimeZones: false
}, _9qqw185 = {
    id: "EC",
    displayName: "Äkwador",
    regionId: "005",
    hasTimeZones: true
}, _9qqw186 = {
    zero: "000 Milljarde",
    one: "000 Milliarde",
    other: "000 Milliarden"
}, _9qqw187 = {
    id: "AO",
    displayName: "Angjoola",
    regionId: "017",
    hasTimeZones: true
}, _9qqw188 = {
    id: "BH",
    displayName: "Bachrain",
    regionId: "145",
    hasTimeZones: true
}, _9qqw189 = {
    id: "BW",
    displayName: "Bozwaana",
    regionId: "018",
    hasTimeZones: true
}, _9qqw190 = {
    id: "DK",
    displayName: "Dänemark",
    regionId: "154",
    hasTimeZones: true
}, _9qqw191 = {
    id: "FI",
    displayName: "Finnland",
    regionId: "154",
    hasTimeZones: true
}, _9qqw192 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _9qqw193 = {
    id: "HK",
    displayName: "Hongkong",
    regionId: "030",
    hasTimeZones: true
}, _9qqw194 = {
    id: "IT",
    displayName: "Itaalije",
    regionId: "039",
    hasTimeZones: true
}, _9qqw195 = {
    id: "JM",
    displayName: "Jammaika",
    regionId: "029",
    hasTimeZones: true
}, _9qqw196 = {
    id: "GD",
    displayName: "Jrenaada",
    regionId: "029",
    hasTimeZones: true
}, _9qqw197 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _9qqw198 = {
    id: "MZ",
    displayName: "Mosambik",
    regionId: "014",
    hasTimeZones: true
}, _9qqw199 = {
    id: "TL",
    displayName: "Oß-Timor",
    regionId: "035",
    hasTimeZones: true
}, _9qqw200 = {
    id: "SE",
    displayName: "Schweede",
    regionId: "154",
    hasTimeZones: true
}, _9qqw201 = {
    id: "ZW",
    displayName: "Simbabwe",
    regionId: "014",
    hasTimeZones: true
}, _9qqw202 = {
    id: "SR",
    displayName: "Sürinamm",
    regionId: "005",
    hasTimeZones: true
}, _9qqw203 = {
    id: "UY",
    displayName: "Urrujwai",
    regionId: "005",
    hasTimeZones: true
}, _9qqw204 = {
    id: "IC",
    displayName: "de Kannaresche Enselle",
    hasTimeZones: false
}, _9qqw205 = {
    id: "BJ",
    displayName: "dä Benin",
    regionId: "011",
    hasTimeZones: true
}, _9qqw206 = {
    id: "ER",
    displayName: "Äritreja",
    regionId: "014",
    hasTimeZones: true
}, _9qqw207 = {
    id: "SK",
    displayName: "ẞlovakei",
    regionId: "151",
    hasTimeZones: true
}, _9qqw208 = {
    id: "AL",
    displayName: "Albaanije",
    regionId: "039",
    hasTimeZones: true
}, _9qqw209 = {
    id: "AI",
    displayName: "Anggwilla",
    regionId: "029",
    hasTimeZones: true
}, _9qqw210 = {
    id: "BR",
    displayName: "Brasilije",
    regionId: "005",
    hasTimeZones: true
}, _9qqw211 = {
    id: "DM",
    displayName: "Dominnika",
    regionId: "029",
    hasTimeZones: true
}, _9qqw212 = {
    id: "GE",
    displayName: "Jeorrjije",
    regionId: "145",
    hasTimeZones: true
}, _9qqw213 = {
    id: "GL",
    displayName: "Jröhnland",
    regionId: "021",
    hasTimeZones: true
}, _9qqw214 = {
    id: "GP",
    displayName: "Juadelupp",
    regionId: "029",
    hasTimeZones: true
}, _9qqw215 = {
    id: "CM",
    displayName: "Kammeruhn",
    regionId: "017",
    hasTimeZones: true
}, _9qqw216 = {
    id: "CO",
    displayName: "Kolumbije",
    regionId: "005",
    hasTimeZones: true
}, _9qqw217 = {
    id: "CR",
    displayName: "Kostarika",
    regionId: "013",
    hasTimeZones: true
}, _9qqw218 = {
    id: "HR",
    displayName: "Krowazije",
    regionId: "039",
    hasTimeZones: true
}, _9qqw219 = {
    id: "LB",
    displayName: "Lebbannon",
    regionId: "145",
    hasTimeZones: true
}, _9qqw220 = {
    id: "LR",
    displayName: "Libeerija",
    regionId: "011",
    hasTimeZones: true
}, _9qqw221 = {
    id: "MQ",
    displayName: "Machtinik",
    regionId: "029",
    hasTimeZones: true
}, _9qqw222 = {
    id: "MY",
    displayName: "Malaisije",
    regionId: "035",
    hasTimeZones: true
}, _9qqw223 = {
    id: "MN",
    displayName: "Mongjolei",
    regionId: "030",
    hasTimeZones: true
}, _9qqw224 = {
    id: "NA",
    displayName: "Namiibije",
    regionId: "018",
    hasTimeZones: true
}, _9qqw225 = {
    id: "NO",
    displayName: "Norrweeje",
    regionId: "154",
    hasTimeZones: true
}, _9qqw226 = {
    id: "PK",
    displayName: "Pakistahn",
    regionId: "034",
    hasTimeZones: true
}, _9qqw227 = {
    id: "PS",
    displayName: "Palästina",
    regionId: "145",
    hasTimeZones: true
}, _9qqw228 = {
    id: "RE",
    displayName: "Rehunjohn",
    regionId: "014",
    hasTimeZones: true
}, _9qqw229 = {
    id: "RO",
    displayName: "Romäänije",
    regionId: "151",
    hasTimeZones: true
}, _9qqw230 = {
    id: "SO",
    displayName: "Somaalije",
    regionId: "014",
    hasTimeZones: true
}, _9qqw231 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _9qqw232 = {
    id: "SS",
    displayName: "Södsudahn",
    regionId: "014",
    hasTimeZones: true
}, _9qqw233 = {
    id: "TZ",
    displayName: "Tansanija",
    regionId: "014",
    hasTimeZones: true
}, _9qqw234 = {
    id: "TN",
    displayName: "Tuneesije",
    regionId: "015",
    hasTimeZones: true
}, _9qqw235 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _9qqw236 = {
    id: "VN",
    displayName: "Vijätnamm",
    regionId: "035",
    hasTimeZones: true
}, _9qqw237 = {
    id: "TR",
    displayName: "de Törkei",
    regionId: "145",
    hasTimeZones: true
}, _9qqw238 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _9qqw239 = {
    id: "DZ",
    displayName: "Alljeerije",
    regionId: "015",
    hasTimeZones: true
}, _9qqw240 = {
    id: "AM",
    displayName: "Arrmeenije",
    regionId: "145",
    hasTimeZones: true
}, _9qqw241 = {
    id: "BO",
    displayName: "Bolliivije",
    regionId: "005",
    hasTimeZones: true
}, _9qqw242 = {
    id: "DJ",
    displayName: "Dschibutti",
    regionId: "014",
    hasTimeZones: true
}, _9qqw243 = {
    id: "PH",
    displayName: "Fillipiine",
    regionId: "035",
    hasTimeZones: true
}, _9qqw244 = {
    id: "FR",
    displayName: "Frankrisch",
    regionId: "155",
    hasTimeZones: true
}, _9qqw245 = {
    id: "GI",
    displayName: "Jibralltaa",
    regionId: "039",
    hasTimeZones: true
}, _9qqw246 = {
    id: "JO",
    displayName: "Jordaanije",
    regionId: "145",
    hasTimeZones: true
}, _9qqw247 = {
    id: "KH",
    displayName: "Kambodscha",
    regionId: "035",
    hasTimeZones: true
}, _9qqw248 = {
    id: "MG",
    displayName: "Maddajaska",
    regionId: "014",
    hasTimeZones: true
}, _9qqw249 = {
    id: "MV",
    displayName: "Mallediive",
    regionId: "034",
    hasTimeZones: true
}, _9qqw250 = {
    id: "MU",
    displayName: "Maurizijus",
    regionId: "014",
    hasTimeZones: true
}, _9qqw251 = {
    id: "MD",
    displayName: "Moldaavije",
    regionId: "151",
    hasTimeZones: true
}, _9qqw252 = {
    id: "MS",
    displayName: "Mongßerrat",
    regionId: "029",
    hasTimeZones: true
}, _9qqw253 = {
    id: "NZ",
    displayName: "Neuseeland",
    regionId: "053",
    hasTimeZones: true
}, _9qqw254 = {
    id: "NG",
    displayName: "Nikaraagua",
    regionId: "011",
    hasTimeZones: true
}, _9qqw255 = {
    id: "SD",
    displayName: "Noodsudahn",
    regionId: "015",
    hasTimeZones: true
}, _9qqw256 = {
    id: "PY",
    displayName: "Parraguwai",
    regionId: "005",
    hasTimeZones: true
}, _9qqw257 = {
    id: "PT",
    displayName: "Pochtojall",
    regionId: "039",
    hasTimeZones: true
}, _9qqw258 = {
    id: "PR",
    displayName: "Pochtoriko",
    regionId: "029",
    hasTimeZones: true
}, _9qqw259 = {
    id: "SM",
    displayName: "San-Marino",
    regionId: "039",
    hasTimeZones: true
}, _9qqw260 = {
    id: "ES",
    displayName: "Schpaanije",
    regionId: "039",
    hasTimeZones: true
}, _9qqw261 = {
    id: "SG",
    displayName: "Singjapuur",
    regionId: "035",
    hasTimeZones: true
}, _9qqw262 = {
    id: "KR",
    displayName: "Söd-Koreja",
    regionId: "030",
    hasTimeZones: true
}, _9qqw263 = {
    id: "EH",
    displayName: "Wäß-Sahara",
    regionId: "015",
    hasTimeZones: true
}, _9qqw264 = {
    id: "BS",
    displayName: "de Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _9qqw265 = {
    id: "CH",
    displayName: "de Schweiz",
    regionId: "155",
    hasTimeZones: true
}, _9qqw266 = {
    id: "AT",
    displayName: "Öösterisch",
    regionId: "155",
    hasTimeZones: true
}, _9qqw267 = {
    id: "SI",
    displayName: "ẞloveenije",
    regionId: "039",
    hasTimeZones: true
}, _9qqw268 = {
    id: "SZ",
    displayName: "ẞwaasiland",
    regionId: "018",
    hasTimeZones: true
}, _9qqw269 = {
    "0": "hück",
    "1": "morje",
    "2": "övvermorje",
    "-2": "vörjestere",
    "-1": "jestere"
}, _9qqw270 = {
    id: "AU",
    displayName: "Austraalije",
    regionId: "053",
    hasTimeZones: true
}, _9qqw271 = {
    id: "BD",
    displayName: "Bangladesch",
    regionId: "034",
    hasTimeZones: true
}, _9qqw272 = {
    id: "BG",
    displayName: "Bulljaarije",
    regionId: "151",
    hasTimeZones: true
}, _9qqw273 = {
    id: "DE",
    displayName: "Doütschland",
    regionId: "155",
    hasTimeZones: true
}, _9qqw274 = {
    id: "ID",
    displayName: "Indoneesije",
    regionId: "035",
    hasTimeZones: true
}, _9qqw275 = {
    id: "GT",
    displayName: "Juwatemaala",
    regionId: "013",
    hasTimeZones: true
}, _9qqw276 = {
    id: "KZ",
    displayName: "Kassakstahn",
    regionId: "143",
    hasTimeZones: true
}, _9qqw277 = {
    id: "KG",
    displayName: "Kirrjiisije",
    regionId: "143",
    hasTimeZones: true
}, _9qqw278 = {
    id: "LU",
    displayName: "Luxembursch",
    regionId: "155",
    hasTimeZones: true
}, _9qqw279 = {
    id: "MK",
    displayName: "Mazedoonije",
    regionId: "039",
    hasTimeZones: true
}, _9qqw280 = {
    id: "NI",
    displayName: "Nikaraaguwa",
    regionId: "013",
    hasTimeZones: true
}, _9qqw281 = {
    id: "KP",
    displayName: "Nood-Koreja",
    regionId: "030",
    hasTimeZones: true
}, _9qqw282 = {
    id: "BY",
    displayName: "Wießrußland",
    regionId: "151",
    hasTimeZones: true
}, _9qqw283 = {
    id: "BM",
    displayName: "de Bermudas",
    regionId: "021",
    hasTimeZones: true
}, _9qqw284 = {
    id: "KM",
    displayName: "de Kommoore",
    regionId: "014",
    hasTimeZones: true
}, _9qqw285 = {
    id: "TD",
    displayName: "der Tschadd",
    regionId: "017",
    hasTimeZones: true
}, _9qqw286 = {
    id: "ET",
    displayName: "Ättijoopije",
    regionId: "014",
    hasTimeZones: true
}, _9qqw287 = {
    id: "AF",
    displayName: "Afjaanistahn",
    regionId: "034",
    hasTimeZones: true
}, _9qqw288 = {
    id: "AR",
    displayName: "Ajjentiinije",
    regionId: "005",
    hasTimeZones: true
}, _9qqw289 = {
    id: "GR",
    displayName: "Jriescheland",
    regionId: "039",
    hasTimeZones: true
}, _9qqw290 = {
    id: "MR",
    displayName: "Mautitaanije",
    regionId: "011",
    hasTimeZones: true
}, _9qqw291 = {
    id: "FM",
    displayName: "Mikroneesije",
    regionId: "057",
    hasTimeZones: true
}, _9qqw292 = {
    id: "UZ",
    displayName: "Ußbeekistahn",
    regionId: "143",
    hasTimeZones: true
}, _9qqw293 = {
    id: "SX",
    displayName: "Zint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _9qqw294 = {
    id: "IM",
    displayName: "de Ensel Män",
    regionId: "154",
    hasTimeZones: true
}, _9qqw295 = {
    id: "NL",
    displayName: "de Nederläng",
    regionId: "155",
    hasTimeZones: true
}, _9qqw296 = {
    id: "UA",
    displayName: "de Ukra’iine",
    regionId: "151",
    hasTimeZones: true
}, _9qqw297 = {
    id: "SV",
    displayName: "Äl Slavadoor",
    regionId: "013",
    hasTimeZones: true
}, _9qqw298 = {
    id: "TF",
    displayName: "Franzüüsesche Södsee-Enselle",
    hasTimeZones: true
}, _9qqw299 = {
    id: "GW",
    displayName: "Jinneha_Bißau",
    regionId: "011",
    hasTimeZones: true
}, _9qqw300 = {
    id: "NC",
    displayName: "Neuschottland",
    regionId: "054",
    hasTimeZones: true
}, _9qqw301 = {
    id: "SL",
    displayName: "Sjärra Lejone",
    regionId: "011",
    hasTimeZones: true
}, _9qqw302 = {
    id: "TM",
    displayName: "Turkmenistahn",
    regionId: "143",
    hasTimeZones: true
}, _9qqw303 = {
    id: "SC",
    displayName: "de Seischälle",
    regionId: "014",
    hasTimeZones: true
}, _9qqw304 = {
    id: "CZ",
    displayName: "de Tschäschei",
    regionId: "151",
    hasTimeZones: true
}, _9qqw305 = {
    id: "SN",
    displayName: "der Sennejall",
    regionId: "011",
    hasTimeZones: true
}, _9qqw306 = {
    id: "VA",
    displayName: "der Vattikahn",
    regionId: "039",
    hasTimeZones: true
}, _9qqw307 = {
    id: "CI",
    displayName: "Älfebeijn-Köß",
    regionId: "011",
    hasTimeZones: true
}, _9qqw308 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _9qqw309 = {
    id: "142",
    displayName: "Aasije",
    hasTimeZones: false,
    parentRegionId: "001"
}, _9qqw310 = {
    id: "BF",
    displayName: "Bukkinna-Faase",
    regionId: "011",
    hasTimeZones: true
}, _9qqw311 = {
    id: "LI",
    displayName: "Lischteschtein",
    regionId: "155",
    hasTimeZones: true
}, _9qqw312 = {
    id: "TJ",
    displayName: "Tadschikistahn",
    regionId: "143",
    hasTimeZones: true
}, _9qqw313 = {
    id: "ME",
    displayName: "et Monteneejro",
    regionId: "039",
    hasTimeZones: true
}, _9qqw314 = {
    id: "002",
    displayName: "Affrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _9qqw315 = {
    id: "AZ",
    displayName: "Asserbaidschahn",
    regionId: "145",
    hasTimeZones: true
}, _9qqw316 = {
    id: "150",
    displayName: "Europpa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _9qqw317 = {
    id: "SA",
    displayName: "Saudi Arraabije",
    regionId: "145",
    hasTimeZones: true
}, _9qqw318 = {
    id: "CK",
    displayName: "de Kuuk-Enselle",
    regionId: "061",
    hasTimeZones: true
}, _9qqw319 = {
    id: "NF",
    displayName: "de Noofok-Ensel",
    regionId: "053",
    hasTimeZones: true
}, _9qqw320 = [ "Jan", "Fäb", "Mäz", "Apr", "Mäi", "Jun", "Jul", "Ouj", "Säp", "Okt", "Nov", "Dez" ], _9qqw321 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _9qqw322 = {
    id: "GB",
    displayName: "Jruußbrettannije",
    regionId: "154",
    hasTimeZones: true
}, _9qqw323 = {
    id: "WF",
    displayName: "Wallis un Futuna",
    regionId: "061",
    hasTimeZones: true
}, _9qqw324 = {
    id: "PN",
    displayName: "de Pitkärn-Ensel",
    regionId: "061",
    hasTimeZones: true
}, _9qqw325 = {
    id: "019",
    displayName: "Ammärrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _9qqw326 = {
    id: "030",
    displayName: "Oß-Aasije",
    hasTimeZones: false,
    parentRegionId: "142"
}, _9qqw327 = {
    id: "PG",
    displayName: "Papuwa Neujineeja",
    regionId: "054",
    hasTimeZones: true
}, _9qqw328 = {
    id: "BB",
    displayName: "de Ensel Barbados",
    regionId: "029",
    hasTimeZones: true
}, _9qqw329 = {
    id: "FO",
    displayName: "de Färrör-Enselle",
    regionId: "154",
    hasTimeZones: true
}, _9qqw330 = {
    id: "KY",
    displayName: "de Kaiman-Enselle",
    regionId: "029",
    hasTimeZones: true
}, _9qqw331 = {
    id: "AX",
    displayName: "de Ohland-Enselle",
    regionId: "154",
    hasTimeZones: true
}, _9qqw332 = {
    id: "AG",
    displayName: "Antigwa un Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _9qqw333 = {
    id: "009",
    displayName: "Ozejaanije",
    hasTimeZones: false,
    parentRegionId: "001"
}, _9qqw334 = {
    id: "014",
    displayName: "Oß-Affrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _9qqw335 = {
    id: "151",
    displayName: "Oß-Europpa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _9qqw336 = {
    id: "034",
    displayName: "Söd-Aasije",
    hasTimeZones: false,
    parentRegionId: "142"
}, _9qqw337 = {
    id: "145",
    displayName: "Wäß-Aasije",
    hasTimeZones: false,
    parentRegionId: "142"
}, _9qqw338 = {
    id: "FJ",
    displayName: "de Fidschi-Endelle",
    regionId: "054",
    hasTimeZones: true
}, _9qqw339 = {
    id: "GQ",
    displayName: "Äquatorial Jineeja",
    regionId: "017",
    hasTimeZones: true
}, _9qqw340 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _9qqw341 = {
    id: "061",
    displayName: "Polineesije",
    hasTimeZones: false,
    parentRegionId: "009"
}, _9qqw342 = {
    id: "018",
    displayName: "Söd-Affrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _9qqw343 = {
    id: "039",
    displayName: "Söd-Europpa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _9qqw344 = {
    id: "TT",
    displayName: "Trinidad un Tobääjo",
    regionId: "029",
    hasTimeZones: true
}, _9qqw345 = {
    id: "011",
    displayName: "Wäß-Affrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _9qqw346 = {
    id: "155",
    displayName: "Wäß-Europpa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _9qqw347 = {
    id: "KN",
    displayName: "Zint Kitts un Nevis",
    regionId: "029",
    hasTimeZones: true
}, _9qqw348 = {
    id: "FK",
    displayName: "de Falkland-Enselle",
    regionId: "005",
    hasTimeZones: true
}, _9qqw349 = {
    id: "029",
    displayName: "de Karribik",
    hasTimeZones: false,
    parentRegionId: "019"
}, _9qqw350 = {
    id: "SB",
    displayName: "de Solomone-Enselle",
    regionId: "054",
    hasTimeZones: true
}, _9qqw351 = {
    id: "GF",
    displayName: "Franzüüsesch Jujaana",
    regionId: "005",
    hasTimeZones: true
}, _9qqw352 = {
    id: "143",
    displayName: "Meddelaasije",
    hasTimeZones: false,
    parentRegionId: "142"
}, _9qqw353 = {
    id: "054",
    displayName: "Mellaneesije",
    hasTimeZones: false,
    parentRegionId: "009"
}, _9qqw354 = {
    id: "015",
    displayName: "Nood-Affrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _9qqw355 = {
    id: "154",
    displayName: "Nood-Europpa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _9qqw356 = {
    id: "005",
    displayName: "Söd-Amärrika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _9qqw357 = {
    id: "MF",
    displayName: "de Zint-Määtes-Ensel",
    regionId: "029",
    hasTimeZones: true
}, _9qqw358 = {
    id: "035",
    displayName: "Söd-Oß-Aasije",
    hasTimeZones: false,
    parentRegionId: "142"
}, _9qqw359 = {
    id: "SH",
    displayName: "de Ensel Zint Hellena",
    regionId: "011",
    hasTimeZones: true
}, _9qqw360 = {
    id: "LC",
    displayName: "de Ensel Zint-Lutscha",
    regionId: "029",
    hasTimeZones: true
}, _9qqw361 = {
    id: "MH",
    displayName: "de Machschall-Enselle",
    regionId: "057",
    hasTimeZones: true
}, _9qqw362 = {
    id: "CD",
    displayName: "dä Konggo (Kinschasa)",
    regionId: "017",
    hasTimeZones: true
}, _9qqw363 = {
    d: "E y-MM-dd – E y-MM-dd",
    M: "E y-MM-dd – E y-MM-dd",
    y: "E y-MM-dd – E y-MM-dd"
}, _9qqw364 = {
    "0": "Metwoch diese Woche",
    "1": "Metwoch nächste Woche",
    "-1": "Metwoch letzte Woche"
}, _9qqw365 = {
    id: "AS",
    displayName: "Ammerikaanesch Sammoha",
    regionId: "061",
    hasTimeZones: true
}, _9qqw366 = {
    id: "BA",
    displayName: "Boßnije un Herzegovina",
    regionId: "039",
    hasTimeZones: true
}, _9qqw367 = {
    id: "017",
    displayName: "Meddel-Affrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _9qqw368 = {
    id: "PM",
    displayName: "Zint Pjäär un Mikelong",
    regionId: "021",
    hasTimeZones: true
}, _9qqw369 = {
    id: "ZA",
    displayName: "de Republik Södaffrika",
    regionId: "018",
    hasTimeZones: true
}, _9qqw370 = {
    id: "CG",
    displayName: "dä Konggo (Brassavill)",
    regionId: "017",
    hasTimeZones: true
}, _9qqw371 = {
    id: "013",
    displayName: "Meddelammärrika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _9qqw372 = {
    id: "HM",
    displayName: "de Heart Ensel un de McDonald-Enselle",
    hasTimeZones: false
}, _9qqw373 = {
    id: "CV",
    displayName: "de kapvärdesche Enselle",
    regionId: "011",
    hasTimeZones: true
}, _9qqw374 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _9qqw375 = {
    id: "BL",
    displayName: "de Zint Battälmi-Enselle",
    regionId: "029",
    hasTimeZones: true
}, _9qqw376 = {
    id: "PF",
    displayName: "Franzüüsesch Pollineesije",
    regionId: "061",
    hasTimeZones: true
}, _9qqw377 = {
    id: "BQ",
    displayName: "de karribbesche Nederläng",
    regionId: "029",
    hasTimeZones: true
}, _9qqw378 = {
    id: "IO",
    displayName: "Brettesche Besezunge em indesche Oozejahn",
    hasTimeZones: true
}, _9qqw379 = {
    id: "ST",
    displayName: "Zint Tommeh un Printschipe",
    regionId: "017",
    hasTimeZones: true
}, _9qqw380 = {
    id: "TC",
    displayName: "de Enselle Turks un Kaikos",
    regionId: "029",
    hasTimeZones: true
}, _9qqw381 = [ "Jan.", "Fäb.", "Mäz.", "Apr.", "Mäi", "Jun.", "Jul.", "Ouj.", "Säp.", "Okt.", "Nov.", "Dez." ], _9qqw382 = {
    displayName: "Schtund",
    relativeTime: _9qqw58
}, _9qqw383 = {
    d: "GGGGG y-MM-dd – y-MM-dd",
    M: "GGGGG y-MM-dd – y-MM-dd",
    y: "GGGGG y-MM-dd – y-MM-dd"
}, _9qqw384 = {
    "0": "Sunndaach diese Woche",
    "1": "Sunndaach nächste Woche",
    "-1": "Sunndaach letzte Woche"
}, _9qqw385 = {
    "0": "Moondaach diese Woche",
    "1": "Moondaach nächste Woche",
    "-1": "Moondaach letzte Woche"
}, _9qqw386 = {
    "0": "Friidaach diese Woche",
    "1": "Friidaach nächste Woche",
    "-1": "Friidaach letzte Woche"
}, _9qqw387 = {
    "0": "Samsdaach diese Woche",
    "1": "Samsdaach nächste Woche",
    "-1": "Samsdaach letzte Woche"
}, _9qqw388 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _9qqw389 = {
    id: "VG",
    displayName: "de brettesche Juffer-Enselle",
    regionId: "029",
    hasTimeZones: true
}, _9qqw390 = {
    id: "DO",
    displayName: "de Dommenekaanesche Reppublik",
    regionId: "029",
    hasTimeZones: true
}, _9qqw391 = [ "Sunndaach", "Moondaach", "Dinnsdaach", "Metwoch", "Dunnersdaach", "Friidaach", "Samsdaach" ], _9qqw392 = {
    displayName: "Menutt",
    relativeTime: _9qqw76
}, _9qqw393 = {
    id: "GS",
    displayName: "Söd-Jeorjie un de södlijje Botteramms-Enselle",
    hasTimeZones: true
}, _9qqw394 = {
    id: "MP",
    displayName: "de nöödlijje Marijanne-Enselle",
    regionId: "057",
    hasTimeZones: true
}, _9qqw395 = {
    id: "021",
    displayName: "der Norde vun Amärrika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _9qqw396 = {
    "0": "Dinnsdaach diese Woche",
    "1": "Dinnsdaach nächste Woche",
    "-1": "Dinnsdaach letzte Woche"
}, _9qqw397 = {
    id: "AE",
    displayName: "Vereinschte Arrabesche Emmirate",
    regionId: "145",
    hasTimeZones: true
}, _9qqw398 = {
    id: "SJ",
    displayName: "de Enselle Svalbard un Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _9qqw399 = {
    relative: _9qqw364
}, _9qqw400 = {
    id: "053",
    displayName: "de Rejjohn öm Austraalije",
    hasTimeZones: false,
    parentRegionId: "009"
}, _9qqw401 = {
    id: "057",
    displayName: "de Rejohn vun Mikroneeseje",
    hasTimeZones: false,
    parentRegionId: "009"
}, _9qqw402 = {
    id: "CF",
    displayName: "de Zäntraalaffrikaanesche Republik",
    regionId: "017",
    hasTimeZones: true
}, _9qqw403 = {
    id: "VI",
    displayName: "de ammärrikahnesche Juffer-Enselle",
    regionId: "029",
    hasTimeZones: true
}, _9qqw404 = {
    "0": "Dunnersdaach diese Woche",
    "1": "Dunnersdaach nächste Woche",
    "-1": "Dunnersdaach letzte Woche"
}, _9qqw405 = {
    id: "VC",
    displayName: "Zint Vinzänz un de Jrenadines-Enselle",
    regionId: "029",
    hasTimeZones: true
}, _9qqw406 = {
    id: "US",
    displayName: "de vereineschte Schtaate vun Ammärrika",
    regionId: "021",
    hasTimeZones: true
}, _9qqw407 = {
    relative: _9qqw384
}, _9qqw408 = {
    relative: _9qqw385
}, _9qqw409 = {
    relative: _9qqw386
}, _9qqw410 = {
    relative: _9qqw387
}, _9qqw411 = {
    relative: _9qqw396
}, _9qqw412 = {
    displayName: "Sekond",
    relative: [ "now" ],
    relativeTime: _9qqw59
}, _9qqw413 = {
    abbreviated: _9qqw2,
    narrow: _9qqw2,
    wide: _9qqw13
}, _9qqw414 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _9qqw415 = {
    relative: _9qqw404
}, _9qqw416 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _9qqw417 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _9qqw418 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _9qqw419 = [ "Jannewa", "Fäbrowa", "Määz", "Aprell", "Mäi", "Juuni", "Juuli", "Oujoß", "Septämber", "Oktoober", "Novämber", "Dezämber" ], _9qqw420 = {
    id: "UM",
    displayName: "de Vereineschte Schtaate vun Amärrika ier ußerhallef jelääje Enselsche",
    hasTimeZones: true
}, _9qqw421 = {
    abbreviated: _9qqw2,
    narrow: _9qqw2,
    wide: _9qqw41
}, _9qqw422 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _9qqw423 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _9qqw424 = {
    abbreviated: _9qqw11,
    narrow: [ "1", "2", "3", "4" ],
    wide: _9qqw93
}, _9qqw425 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _9qqw426 = {
    displayName: "Woch",
    relative: _9qqw55,
    relativeTime: _9qqw56
}, _9qqw427 = {
    displayName: "Johr",
    relative: _9qqw72,
    relativeTime: _9qqw53
}, _9qqw428 = {
    displayName: "Mohnd",
    relative: _9qqw89,
    relativeTime: _9qqw54
}, _9qqw429 = {
    displayName: "Quarter",
    relative: _9qqw90,
    relativeTime: _9qqw60
}, _9qqw430 = {
    displayName: "Daach",
    relative: _9qqw269,
    relativeTime: _9qqw57
}, _9qqw431 = {
    decimal: ",",
    group: " ",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "−",
    exponential: "×10^",
    perMille: "‰",
    infinity: "∞",
    nan: "¤¤¤",
    superscriptingExponent: "×",
    timeSeparator: ":"
}, _9qqw432 = {
    symbols: _9qqw431
}, _9qqw433 = {
    format: _9qqw308,
    numeric: _9qqw3,
    standAlone: _9qqw308
}, _9qqw434 = {
    symbols: _9qqw431,
    digits: "renderSpelloutCardinal"
}, _9qqw435 = {
    symbols: _9qqw431,
    digits: "renderSpelloutCardinalFinancial"
}, _9qqw436 = {
    abbreviated: _9qqw321,
    narrow: _9qqw84,
    wide: _9qqw321
}, _9qqw437 = {
    abbreviated: _9qqw39,
    narrow: _9qqw10,
    wide: _9qqw391,
    "short": _9qqw19
}, _9qqw438 = {
    format: _9qqw421,
    standAlone: _9qqw413
}, _9qqw439 = {
    abbreviated: _9qqw340,
    narrow: _9qqw340,
    wide: _9qqw340
}, _9qqw440 = {
    abbreviated: _9qqw320,
    narrow: _9qqw71,
    wide: _9qqw419
}, _9qqw441 = {
    format: _9qqw439
}, _9qqw442 = {
    abbreviated: _9qqw381,
    narrow: _9qqw71,
    wide: _9qqw419
}, _9qqw443 = {
    format: _9qqw424,
    standAlone: _9qqw424
}, _9qqw444 = {
    abbreviated: _9qqw416,
    narrow: _9qqw95,
    wide: _9qqw416
}, _9qqw445 = {
    abbreviated: _9qqw417,
    narrow: _9qqw84,
    wide: _9qqw417
}, _9qqw446 = {
    abbreviated: _9qqw418,
    narrow: _9qqw95,
    wide: _9qqw418
}, _9qqw447 = {
    abbreviated: _9qqw414,
    narrow: _9qqw84,
    wide: _9qqw425
}, _9qqw448 = {
    abbreviated: _9qqw422,
    narrow: _9qqw95,
    wide: _9qqw422
}, _9qqw449 = {
    abbreviated: _9qqw423,
    narrow: _9qqw84,
    wide: _9qqw423
}, _9qqw450 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _9qqw451 = {
    fullDate: "EEEE, 'dä' d. MMMM y G",
    longDate: "d. MMMM y G",
    mediumDate: "d. MMM. y G",
    shortDate: "d. M. y GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "d. M. y GGGGG HH:mm",
    mediumDateTime: "d. MMM. y G HH:mm:ss",
    longDateTime: "d. MMMM y G HH:mm:ss z",
    fullDateTime: "EEEE, 'dä' d. MMMM y G HH:mm:ss zzzz"
}, _9qqw452 = {
    format: _9qqw436,
    standAlone: _9qqw436
}, _9qqw453 = {
    format: _9qqw437,
    standAlone: _9qqw437
}, _9qqw454 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _9qqw455 = {
    format: _9qqw440,
    standAlone: _9qqw442
}, _9qqw456 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _9qqw457 = {
    "1000": _9qqw29,
    "10000": _9qqw35,
    "100000": _9qqw45,
    "1000000": _9qqw30,
    "10000000": _9qqw36,
    "100000000": _9qqw46,
    "1000000000": _9qqw31,
    "10000000000": _9qqw37,
    "100000000000": _9qqw47,
    "1000000000000": _9qqw32,
    "10000000000000": _9qqw38,
    "100000000000000": _9qqw48
}, _9qqw458 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _9qqw459 = {
    format: _9qqw447,
    standAlone: _9qqw447
}, _9qqw460 = {
    "1000": _9qqw49,
    "10000": _9qqw65,
    "100000": _9qqw80,
    "1000000": _9qqw50,
    "10000000": _9qqw66,
    "100000000": _9qqw81,
    "1000000000": _9qqw51,
    "10000000000": _9qqw67,
    "100000000000": _9qqw82,
    "1000000000000": _9qqw52,
    "10000000000000": _9qqw68,
    "100000000000000": _9qqw83
}, _9qqw461 = {
    d: "d",
    Ed: "E 'dä' d.",
    hm: "h:mm a",
    Hm: "H:mm",
    hms: "h:mm:ss a",
    Hms: "H:mm:ss",
    M: "L",
    MEd: "E d. M.",
    MMM: "LLL",
    MMMd: "d. MMM",
    MMMEd: "E d. MMM",
    MMMMd: "d. MMMM",
    ms: "mm:ss",
    y: "y",
    yM: "Y-MM",
    yMd: "y-MM-dd",
    yMEd: "E y-MM-dd",
    yMMM: "MMM y",
    yMMMd: "d. MMM. y",
    yMMMEd: "E d. MMM. y",
    yMMMM: "MMMM y",
    yQQQ: "QQQy",
    yQQQQ: "QQQQ y",
    E: "ccc",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss",
    Gy: "G y",
    GyMMM: "G y MMM",
    GyMMMd: "G y MMM d",
    GyMMMEd: "G y MMM d, E",
    h: "h a",
    H: "HH",
    Md: "MM-dd",
    yyyy: "G y",
    yyyyM: "GGGGG y-MM",
    yyyyMd: "GGGGG y-MM-dd",
    yyyyMEd: "GGGGG y-MM-dd, E",
    yyyyMMM: "G y MMM",
    yyyyMMMd: "G y MMM d",
    yyyyMMMEd: "G y MMM d, E",
    yyyyMMMM: "G y MMMM",
    yyyyQQQ: "G y QQQ",
    yyyyQQQQ: "G y QQQQ"
}, _9qqw462 = {
    "1000": _9qqw79,
    "10000": _9qqw87,
    "100000": _9qqw97,
    "1000000": _9qqw91,
    "10000000": _9qqw103,
    "100000000": _9qqw153,
    "1000000000": _9qqw92,
    "10000000000": _9qqw111,
    "100000000000": _9qqw186,
    "1000000000000": _9qqw88,
    "10000000000000": _9qqw98,
    "100000000000000": _9qqw104
}, _9qqw463 = {
    basic: _9qqw450,
    cldr: _9qqw454
}, _9qqw464 = {
    d: {
        d: "d–d"
    },
    h: _9qqw5,
    H: {
        H: "HH–HH"
    },
    hm: _9qqw86,
    Hm: _9qqw15,
    hmv: _9qqw99,
    Hmv: _9qqw25,
    hv: _9qqw9,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _9qqw26,
    MEd: _9qqw69,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _9qqw12,
    MMMEd: _9qqw70,
    y: {
        y: "U–U"
    },
    yM: _9qqw16,
    yMd: _9qqw238,
    yMEd: _9qqw388,
    yMMM: _9qqw17,
    yMMMd: _9qqw94,
    yMMMEd: _9qqw374,
    yMMMM: _9qqw27
}, _9qqw465 = {
    d: {
        d: "d–d"
    },
    hm: _9qqw86,
    M: {
        M: "M–M"
    },
    Md: {
        d: "dd. – dd. MM."
    },
    MMM: {
        M: "LLL–LLL"
    },
    y: {
        y: "y–y"
    },
    yMEd: _9qqw363,
    yMMM: _9qqw18,
    yMMMEd: _9qqw363,
    yMMMM: _9qqw24,
    h: _9qqw5,
    H: {
        H: "HH–HH"
    },
    Hm: _9qqw15,
    hmv: _9qqw99,
    Hmv: _9qqw25,
    hv: _9qqw9,
    Hv: {
        H: "HH–HH v"
    },
    MEd: _9qqw69,
    MMMd: _9qqw12,
    MMMEd: _9qqw70,
    yM: _9qqw40,
    yMd: _9qqw383,
    yMMMd: _9qqw127
}, _9qqw466 = {
    basic: _9qqw451,
    cldr: _9qqw461
}, _9qqw467 = {
    beforeCurrency: _9qqw456,
    afterCurrency: _9qqw456
}, _9qqw468 = {
    "long": _9qqw462,
    "short": _9qqw457,
    "default": "#,##0.###"
}, _9qqw469 = {
    abbreviated: _9qqw458,
    narrow: _9qqw458,
    wide: _9qqw458
}, _9qqw470 = {
    format: _9qqw469
}, _9qqw471 = {
    era: {
        displayName: "Era"
    },
    year: _9qqw427,
    month: _9qqw428,
    week: _9qqw426,
    day: _9qqw430,
    weekday: _9qqw7,
    dayperiod: _9qqw6,
    hour: _9qqw382,
    minute: _9qqw392,
    second: _9qqw412,
    zone: _9qqw4,
    quarter: _9qqw429,
    sun: _9qqw407,
    mon: _9qqw408,
    tue: _9qqw411,
    wed: _9qqw399,
    thu: _9qqw415,
    fri: _9qqw409,
    sat: _9qqw410
}, _9qqw472 = {
    "short": _9qqw460,
    "default": "#,##0.00 ¤",
    zero: "{0} {1}",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _9qqw467
}, _9qqw473 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _9qqw471
}, _9qqw474 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _9qqw468,
    currency: _9qqw472,
    percent: _9qqw1
}, _9qqw475 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _9qqw476 = {
    dateFormats: _9qqw466,
    datePartsOrder: "dmy",
    dateIntervalFormats: _9qqw465,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _9qqw453,
    dayPeriods: _9qqw438,
    monthNames: _9qqw459,
    eraNames: _9qqw14,
    quarterNames: _9qqw443,
    fields: _9qqw471
}, _9qqw477 = {
    dayParts: _9qqw441,
    days: _9qqw470,
    months: _9qqw470,
    years: _9qqw470,
    zodiacs: _9qqw441
}, _9qqw478 = {
    dateFormats: _9qqw463,
    datePartsOrder: "md",
    dateIntervalFormats: _9qqw464,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _9qqw453,
    dayPeriods: _9qqw438,
    cyclicNames: _9qqw477,
    monthNames: _9qqw452,
    monthPatterns: _9qqw433,
    quarterNames: _9qqw443,
    fields: _9qqw471
};

inter.id = "ksh";

inter.delimiters = {
    quotationStart: "„",
    quotationEnd: "“",
    alternateQuotationStart: "‚",
    alternateQuotationEnd: "‘"
};

inter.listPatterns = {
    "default": {
        "2": "{0} un {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0} un {1}"
    },
    unit: P.listPatterns.default,
    unitNarrow: {
        "2": "{0} {1}",
        start: "{0} {1}",
        middle: "{0} {1}",
        end: "{0} {1}"
    },
    unitShort: P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                zero: "{0}-fache Erdbeschleunigung",
                one: "{0}-fache Erdbeschleunigung",
                other: "{0}-fache Erdbeschleunigung"
            },
            angleDegree: {
                zero: "{0} Graad",
                one: "{0} Graad",
                other: "{0} Graad"
            },
            angleArcMinute: {
                zero: "{0} Winkelmenutte",
                one: "{0} Winkelmenutte",
                other: "{0} Winkelmenutte"
            },
            angleArcSecond: {
                zero: "{0} Winkelsekunde",
                one: "{0} Winkelsekunde",
                other: "{0} Winkelsekunde"
            },
            areaSquareKilometer: {
                zero: "{0} Quadratkilometer",
                one: "{0} Quadratkilometer",
                other: "{0} Quadratkilometer"
            },
            areaHectare: {
                zero: "{0} hektar",
                one: "{0} hektar",
                other: "{0} hektar"
            },
            areaSquareMeter: {
                zero: "{0} Quadratmeter",
                one: "{0} Quadratmeter",
                other: "{0} Quadratmeter"
            },
            areaSquareMile: {
                zero: "{0} englischen Quadratmeilen",
                one: "{0} englische Quadratmeile",
                other: "{0} englischen Quadratmeilen"
            },
            areaAcre: {
                zero: "{0} angloamerikanischen Acre",
                one: "{0} angloamerikanische Acre",
                other: "{0} angloamerikanischen Acre"
            },
            areaSquareFoot: {
                zero: "{0} Quadratvoss",
                one: "{0} Quadratvoss",
                other: "{0} Quadratvoss"
            },
            durationYear: {
                zero: "{0} Johre",
                one: "{0} Johre",
                other: "{0} Johre"
            },
            durationMonth: {
                zero: "{0} Mohnde",
                one: "{0} Mohnde",
                other: "{0} Mohnde"
            },
            durationWeek: {
                zero: "{0} Woche",
                one: "{0} Woche",
                other: "{0} Woche"
            },
            durationDay: {
                zero: "{0} Dääsch",
                one: "{0} Dääsch",
                other: "{0} Dääsch"
            },
            durationHour: {
                zero: "{0} Schtunde",
                one: "{0} Schtunde",
                other: "{0} Schtunde"
            },
            durationMinute: {
                zero: "{0} Menutte",
                one: "{0} Menutte",
                other: "{0} Menutte"
            },
            durationSecond: {
                zero: "{0} Sekunde",
                one: "{0} Sekunde",
                other: "{0} Sekunde"
            },
            durationMillisecond: {
                zero: "{0} Millisekunde",
                one: "{0} Millisekunde",
                other: "{0} Millisekunde"
            },
            lengthKilometer: {
                zero: "{0} Kilometer",
                one: "{0} Kilometer",
                other: "{0} Kilometer"
            },
            lengthMeter: {
                zero: "{0} Meter",
                one: "{0} Meter",
                other: "{0} Meter"
            },
            lengthCentimeter: {
                zero: "{0} Zentimeter",
                one: "{0} Zentimeter",
                other: "{0} Zentimeter"
            },
            lengthMillimeter: {
                zero: "{0} Millimeter",
                one: "{0} Millimeter",
                other: "{0} Millimeter"
            },
            lengthPicometer: {
                zero: "{0} Pikometer",
                one: "{0} Pikometer",
                other: "{0} Pikometer"
            },
            lengthMile: {
                zero: "{0} englischen Meilen",
                one: "{0} englische Meile",
                other: "{0} englischen Meilen"
            },
            lengthFoot: _9qqw61,
            lengthInch: _9qqw62,
            massKilogram: {
                zero: "{0} Kilogramm",
                one: "{0} Kilogramm",
                other: "{0} Kilogramm"
            },
            massGram: {
                zero: "{0} Gramm",
                one: "{0} Gramm",
                other: "{0} Gramm"
            },
            massPound: _9qqw78,
            massOunce: _9qqw75,
            powerKilowatt: {
                zero: "{0} Kilowatt",
                one: "{0} Kilowatt",
                other: "{0} Kilowatt"
            },
            powerWatt: {
                zero: "{0} Watt",
                one: "{0} Watt",
                other: "{0} Watt"
            },
            powerHorsepower: {
                zero: "{0} Pferdestärken",
                one: "{0} Pferdestärke",
                other: "{0} Pferdestärken"
            },
            pressureHectopascal: {
                zero: "{0} Hektopascal",
                one: "{0} Hektopascal",
                other: "{0} Hektopascal"
            },
            pressureInchHg: {
                zero: "{0} Dumm Quecksilbersäule",
                one: "{0} Dumm Quecksilbersäule",
                other: "{0} Dumm Quecksilbersäule"
            },
            pressureMillibar: {
                zero: "{0} Millibar",
                one: "{0} Millibar",
                other: "{0} Millibar"
            },
            speedKilometerPerHour: {
                zero: "{0} Kilometer pro Schtunde",
                one: "{0} Kilometer pro Schtunde",
                other: "{0} Kilometer pro Schtunde"
            },
            speedMeterPerSecond: {
                zero: "{0} Meter pro Sekunde",
                one: "{0} Meter pro Sekunde",
                other: "{0} Meter pro Sekunde"
            },
            speedMilePerHour: {
                zero: "{0} englischen Meilen pro Schtunde",
                one: "{0} englische Meile pro Schtunde",
                other: "{0} englischen Meilen pro Schtunde"
            },
            temperatureCelsius: {
                zero: "{0} Graad Celsius",
                one: "{0} Graad Celsius",
                other: "{0} Graad Celsius"
            },
            temperatureFahrenheit: {
                zero: "{0} Graad Fahrenheit",
                one: "{0} Graad Fahrenheit",
                other: "{0} Graad Fahrenheit"
            },
            volumeCubicKilometer: {
                zero: "{0} Kubikkilometer",
                one: "{0} Kubikkilometer",
                other: "{0} Kubikkilometer"
            },
            volumeCubicMile: {
                zero: "{0} englischen Kubikmeilen",
                one: "{0} englische Kubikmeile",
                other: "{0} englischen Kubikmeilen"
            },
            volumeLiter: {
                zero: "{0} Liter",
                one: "{0} Liter",
                other: "{0} Liter"
            }
        },
        compoundUnit: {
            per: "{0} pro {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                zero: "{0} G",
                one: "{0} G",
                other: "{0} G"
            },
            angleDegree: _9qqw20,
            angleArcMinute: _9qqw21,
            angleArcSecond: _9qqw22,
            areaSquareKilometer: {
                zero: "{0} km²",
                one: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                zero: "{0} ha",
                one: "{0} ha",
                other: "{0} ha"
            },
            areaSquareMeter: {
                zero: "{0} m²",
                one: "{0} m²",
                other: "{0} m²"
            },
            areaSquareMile: _9qqw42,
            areaAcre: _9qqw33,
            areaSquareFoot: _9qqw43,
            durationDay: {
                zero: "{0} d",
                one: "{0} d",
                other: "{0} d"
            },
            durationHour: {
                zero: "{0} h",
                one: "{0} h",
                other: "{0} h"
            },
            durationMinute: {
                zero: "{0} min",
                one: "{0} min",
                other: "{0} min"
            },
            durationSecond: {
                zero: "{0} s",
                one: "{0} s",
                other: "{0} s"
            },
            durationMillisecond: {
                zero: "{0} ms",
                one: "{0} ms",
                other: "{0} ms"
            },
            lengthKilometer: {
                zero: "{0} km",
                one: "{0} km",
                other: "{0} km"
            },
            lengthMeter: {
                zero: "{0} m",
                one: "{0} m",
                other: "{0} m"
            },
            lengthCentimeter: {
                zero: "{0} cm",
                one: "{0} cm",
                other: "{0} cm"
            },
            lengthMillimeter: {
                zero: "{0} mm",
                one: "{0} mm",
                other: "{0} mm"
            },
            lengthPicometer: {
                zero: "{0} pm",
                one: "{0} pm",
                other: "{0} pm"
            },
            lengthMile: _9qqw34,
            lengthFoot: _9qqw61,
            lengthInch: _9qqw62,
            massKilogram: {
                zero: "{0} kg",
                one: "{0} kg",
                other: "{0} kg"
            },
            massGram: {
                zero: "{0} g",
                one: "{0} g",
                other: "{0} g"
            },
            massPound: _9qqw78,
            massOunce: _9qqw75,
            powerKilowatt: {
                zero: "{0} kW",
                one: "{0} kW",
                other: "{0} kW"
            },
            powerWatt: {
                zero: "{0} W",
                one: "{0} W",
                other: "{0} W"
            },
            powerHorsepower: {
                zero: "{0} PS",
                one: "{0} PS",
                other: "{0} PS"
            },
            pressureHectopascal: {
                zero: "{0} hPa",
                one: "{0} hPa",
                other: "{0} hPa"
            },
            pressureInchHg: _9qqw63,
            pressureMillibar: {
                zero: "{0} mbar",
                one: "{0} mbar",
                other: "{0} mbar"
            },
            speedKilometerPerHour: {
                zero: "{0} km/h",
                one: "{0} km/h",
                other: "{0} km/h"
            },
            speedMeterPerSecond: {
                zero: "{0} m/s",
                one: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: _9qqw64,
            temperatureCelsius: {
                zero: "{0}°C",
                one: "{0}°C",
                other: "{0}°C"
            },
            temperatureFahrenheit: _9qqw28,
            volumeCubicKilometer: {
                zero: "{0} km³",
                one: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMile: _9qqw44,
            volumeLiter: {
                zero: "{0} l",
                one: "{0} l",
                other: "{0} l"
            },
            accelerationMeterPerSecondSquared: {
                other: "{0} m/s²"
            },
            angleRevolution: {
                other: "{0} rev"
            },
            angleRadian: {
                other: "{0} rad"
            },
            areaSquareCentimeter: {
                other: "{0} cm²"
            },
            areaSquareYard: {
                other: "{0} yd²"
            },
            areaSquareInch: {
                other: "{0} in²"
            },
            concentrKarat: {
                other: "{0} kt"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionLiterPerKilometer: {
                other: "{0} L/km"
            },
            "consumptionLiterPer-100kilometers": {
                other: "{0} L/100km"
            },
            consumptionMilePerGallon: {
                other: "{0} mpg US"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            digitalTerabyte: {
                other: "{0} TB"
            },
            digitalTerabit: {
                other: "{0} Tb"
            },
            digitalGigabyte: {
                other: "{0} GB"
            },
            digitalGigabit: {
                other: "{0} Gb"
            },
            digitalMegabyte: {
                other: "{0} MB"
            },
            digitalMegabit: {
                other: "{0} Mb"
            },
            digitalKilobyte: {
                other: "{0} kB"
            },
            digitalKilobit: {
                other: "{0} kb"
            },
            digitalByte: {
                other: "{0} byte"
            },
            digitalBit: {
                other: "{0} bit"
            },
            durationCentury: {
                other: "{0} c"
            },
            durationYear: {
                other: "{0} y"
            },
            durationMonth: {
                other: "{0} m"
            },
            durationWeek: {
                other: "{0} w"
            },
            durationMicrosecond: {
                other: "{0} μs"
            },
            durationNanosecond: {
                other: "{0} ns"
            },
            electricAmpere: {
                other: "{0} A"
            },
            electricMilliampere: {
                other: "{0} mA"
            },
            electricOhm: {
                other: "{0} Ω"
            },
            electricVolt: {
                other: "{0} V"
            },
            energyKilocalorie: {
                other: "{0} kcal"
            },
            energyCalorie: {
                other: "{0} cal"
            },
            energyFoodcalorie: {
                other: "{0} Cal"
            },
            energyKilojoule: {
                other: "{0} kJ"
            },
            energyJoule: {
                other: "{0} J"
            },
            energyKilowattHour: {
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                other: "{0} kHz"
            },
            frequencyHertz: {
                other: "{0} Hz"
            },
            lengthDecimeter: {
                other: "{0} dm"
            },
            lengthMicrometer: {
                other: "{0} µm"
            },
            lengthNanometer: {
                other: "{0} nm"
            },
            lengthYard: {
                other: "{0} yd"
            },
            lengthParsec: {
                other: "{0} pc"
            },
            lengthLightYear: {
                other: "{0} ly"
            },
            lengthAstronomicalUnit: {
                other: "{0} au"
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            lengthNauticalMile: {
                other: "{0} nmi"
            },
            lengthMileScandinavian: {
                other: "{0} smi"
            },
            lightLux: {
                other: "{0} lx"
            },
            massMetricTon: {
                other: "{0} t"
            },
            massMilligram: {
                other: "{0} mg"
            },
            massMicrogram: {
                other: "{0} µg"
            },
            massTon: {
                other: "{0} tn"
            },
            massStone: {
                other: "{0} st"
            },
            massOunceTroy: {
                other: "{0} oz t"
            },
            massCarat: {
                other: "{0} CD"
            },
            powerGigawatt: {
                other: "{0} GW"
            },
            powerMegawatt: {
                other: "{0} MW"
            },
            powerMilliwatt: {
                other: "{0} mW"
            },
            pressureMillimeterOfMercury: {
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                other: "{0} psi"
            },
            speedKnot: {
                other: "{0} kn"
            },
            temperatureGeneric: {
                other: "{0}°"
            },
            temperatureKelvin: {
                other: "{0} K"
            },
            volumeCubicMeter: {
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                other: "{0} cm³"
            },
            volumeCubicYard: {
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                other: "{0} ft³"
            },
            volumeCubicInch: {
                other: "{0} in³"
            },
            volumeMegaliter: {
                other: "{0} ML"
            },
            volumeHectoliter: {
                other: "{0} hL"
            },
            volumeDeciliter: {
                other: "{0} dL"
            },
            volumeCentiliter: {
                other: "{0} cL"
            },
            volumeMilliliter: {
                other: "{0} mL"
            },
            volumePintMetric: {
                other: "{0} mpt"
            },
            volumeCupMetric: {
                other: "{0} mc"
            },
            volumeAcreFoot: {
                other: "{0} ac ft"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallon: {
                other: "{0} gal US"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            },
            volumeQuart: {
                other: "{0} qt"
            },
            volumePint: {
                other: "{0} pt"
            },
            volumeCup: {
                other: "{0} c"
            },
            volumeFluidOunce: {
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                other: "{0} tbsp"
            },
            volumeTeaspoon: {
                other: "{0} tsp"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                zero: "{0}G",
                one: "{0}G",
                other: "{0}G"
            },
            angleDegree: _9qqw20,
            angleArcMinute: _9qqw21,
            angleArcSecond: _9qqw22,
            areaSquareKilometer: {
                zero: "{0}km²",
                one: "{0}km²",
                other: "{0}km²"
            },
            areaHectare: {
                zero: "{0}ha",
                one: "{0}ha",
                other: "{0}ha"
            },
            areaSquareMeter: {
                zero: "{0}m²",
                one: "{0}m²",
                other: "{0}m²"
            },
            areaSquareMile: _9qqw42,
            areaAcre: _9qqw33,
            areaSquareFoot: _9qqw43,
            durationDay: {
                zero: "{0}d",
                one: "{0}d",
                other: "{0}d"
            },
            durationHour: {
                zero: "{0}h",
                one: "{0}h",
                other: "{0}h"
            },
            durationMinute: _9qqw23,
            durationSecond: {
                zero: "{0}s",
                one: "{0}s",
                other: "{0}s"
            },
            durationMillisecond: {
                zero: "{0}ms",
                one: "{0}ms",
                other: "{0}ms"
            },
            lengthKilometer: {
                zero: "{0}km",
                one: "{0}km",
                other: "{0}km"
            },
            lengthMeter: _9qqw23,
            lengthCentimeter: {
                zero: "{0}cm",
                one: "{0}cm",
                other: "{0}cm"
            },
            lengthMillimeter: {
                zero: "{0}mm",
                one: "{0}mm",
                other: "{0}mm"
            },
            lengthPicometer: {
                zero: "{0}pm",
                one: "{0}pm",
                other: "{0}pm"
            },
            lengthMile: _9qqw34,
            lengthFoot: _9qqw61,
            lengthInch: _9qqw62,
            massKilogram: {
                zero: "{0}kg",
                one: "{0}kg",
                other: "{0}kg"
            },
            massGram: {
                zero: "{0}g",
                one: "{0}g",
                other: "{0}g"
            },
            massPound: _9qqw78,
            massOunce: _9qqw75,
            powerKilowatt: {
                zero: "{0}kW",
                one: "{0}kW",
                other: "{0}kW"
            },
            powerWatt: {
                zero: "{0}W",
                one: "{0}W",
                other: "{0}W"
            },
            powerHorsepower: {
                zero: "{0}PS",
                one: "{0}PS",
                other: "{0}PS"
            },
            pressureHectopascal: {
                zero: "{0}hPa",
                one: "{0}hPa",
                other: "{0}hPa"
            },
            pressureInchHg: _9qqw63,
            pressureMillibar: {
                zero: "{0}mbar",
                one: "{0}mbar",
                other: "{0}mbar"
            },
            speedKilometerPerHour: {
                zero: "{0}km/h",
                one: "{0}km/h",
                other: "{0}km/h"
            },
            speedMeterPerSecond: {
                zero: "{0}m/s",
                one: "{0}m/s",
                other: "{0}m/s"
            },
            speedMilePerHour: _9qqw64,
            temperatureCelsius: _9qqw20,
            temperatureFahrenheit: _9qqw28,
            volumeCubicKilometer: {
                zero: "{0}km³",
                one: "{0}km³",
                other: "{0}km³"
            },
            volumeCubicMile: _9qqw44,
            volumeLiter: {
                zero: "{0}L",
                one: "{0}L",
                other: "{0}L"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "Zick vun {0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "Summerzick vun {0}",
        standard: "Schtandattzick vun {0}"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "å", "ä", "æ", "b", "c", "d", "e", "ë", "ė", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "ö", "œ", "p", "q", "r", "s", "ß", "t", "u", "ů", "ü", "v", "w", "x", "y", "z" ],
        auxiliary: [ "á", "à", "ă", "â", "ã", "ā", "ç", "é", "è", "ĕ", "ê", "ē", "ğ", "í", "ì", "ĭ", "î", "ï", "ī", "ĳ", "ı", "ł", "ñ", "ó", "ò", "ŏ", "ô", "ø", "ō", "ú", "ù", "ŭ", "û", "ū", "ÿ" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ],
        punctuation: [ "_", "‐", "–", "—", "⸗", ",", ";", "\\:", "!", "?", ".", "…", "'", "‘", "‚", '"', "“", "„", "(", ")", "\\[", "\\]", "\\{", "\\}", "§", "@", "*", "/", "\\&", "#", "%", "†", "‡", "°", "<", "=", ">", "~", "\\$" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _9qqw431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _9qqw474,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _9qqw474,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _9qqw431,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _9qqw431,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _9qqw431,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _9qqw431,
        digits: "renderEthiopic"
    },
    finance: _9qqw432,
    fullwide: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _9qqw431,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _9qqw431,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _9qqw431,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _9qqw431,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _9qqw434,
    hansfin: _9qqw435,
    hant: _9qqw434,
    hantfin: _9qqw435,
    hebr: {
        symbols: _9qqw431,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _9qqw431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _9qqw434,
    jpanfin: _9qqw435,
    kali: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _9qqw431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _9qqw431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _9qqw431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _9qqw431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _9qqw431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _9qqw431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _9qqw431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _9qqw431,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _9qqw432,
    nkoo: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _9qqw431,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _9qqw431,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _9qqw431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _9qqw431,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _9qqw431,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _9qqw431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _9qqw432,
    vaii: {
        symbols: _9qqw431,
        formats: _9qqw474,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _9qqw431,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d. MMMM y G",
                longDate: "d. MMMM y G",
                mediumDate: "d. MMM. y G",
                shortDate: "d. M. y GGGGG",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "d. M. y GGGGG HH:mm",
                mediumDateTime: "d. MMM. y G HH:mm:ss",
                longDateTime: "d. MMMM y G HH:mm:ss z",
                fullDateTime: "EEEE, d. MMMM y G HH:mm:ss zzzz"
            },
            cldr: _9qqw461
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: _9qqw465,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9qqw453,
        dayPeriods: _9qqw438,
        monthNames: _9qqw455,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _9qqw443,
        fields: _9qqw471
    },
    chinese: _9qqw478,
    coptic: {
        dateFormats: _9qqw466,
        datePartsOrder: "dmy",
        dateIntervalFormats: _9qqw465,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9qqw453,
        dayPeriods: _9qqw438,
        monthNames: {
            format: _9qqw446,
            standAlone: _9qqw446
        },
        eraNames: _9qqw73,
        quarterNames: _9qqw443,
        fields: _9qqw471
    },
    dangi: _9qqw478,
    ethioaa: _9qqw473,
    ethiopic: {
        dateFormats: _9qqw466,
        datePartsOrder: "dmy",
        dateIntervalFormats: _9qqw465,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9qqw453,
        dayPeriods: _9qqw438,
        monthNames: {
            format: _9qqw448,
            standAlone: _9qqw448
        },
        eraNames: _9qqw73,
        quarterNames: _9qqw443,
        fields: _9qqw471
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, 'dä' d. MMMM y",
                longDate: "d. MMMM y",
                mediumDate: "d. MMM. y",
                shortDate: "d. M. y",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "d. M. y HH:mm",
                mediumDateTime: "d. MMM. y HH:mm:ss",
                longDateTime: "d. MMMM y HH:mm:ss z",
                fullDateTime: "EEEE, 'dä' d. MMMM y HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                Ed: "E 'dä' d.",
                hm: "h:mm a",
                Hm: "H:mm",
                hms: "h:mm:ss a",
                Hms: "H:mm:ss",
                M: "L",
                MEd: "E d. M.",
                MMM: "LLL",
                MMMd: "d. MMM",
                MMMEd: "E d. MMM",
                MMMMd: "d. MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "Y-MM",
                yMd: "y-MM-dd",
                yMEd: "E y-MM-dd",
                yMMM: "MMM y",
                yMMMd: "d. MMM. y",
                yMMMEd: "E d. MMM. y",
                yMMMM: "MMMM y",
                yQQQ: "QQQy",
                yQQQQ: "QQQQ y",
                E: "ccc",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                H: "HH",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                Md: "MM-dd"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            hm: _9qqw86,
            M: {
                M: "M–M"
            },
            Md: {
                d: "dd. – dd. MM."
            },
            MMM: {
                M: "LLL–LLL"
            },
            y: {
                y: "y–y"
            },
            yMEd: _9qqw363,
            yMMM: _9qqw18,
            yMMMEd: _9qqw363,
            yMMMM: _9qqw24,
            h: _9qqw5,
            H: {
                H: "HH–HH"
            },
            Hm: _9qqw15,
            hmv: _9qqw99,
            Hmv: _9qqw25,
            hv: _9qqw9,
            Hv: {
                H: "HH–HH v"
            },
            MEd: _9qqw69,
            MMMd: _9qqw12,
            MMMEd: _9qqw70,
            yM: _9qqw16,
            yMd: _9qqw238,
            yMMMd: {
                d: "y MMM d–d",
                M: "y MMM d – MMM d",
                y: "y MMM d – y MMM d"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9qqw453,
        dayPeriods: _9qqw438,
        monthNames: _9qqw455,
        eraNames: {
            wide: [ "vür Chrestus", "noh Chrestus" ],
            abbreviated: [ "v. Chr.", "n. Chr." ]
        },
        quarterNames: _9qqw443,
        fields: _9qqw471
    },
    hebrew: {
        dateFormats: _9qqw466,
        datePartsOrder: "dmy",
        dateIntervalFormats: _9qqw465,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9qqw453,
        dayPeriods: _9qqw438,
        monthNames: {
            format: _9qqw444,
            standAlone: _9qqw444
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _9qqw443,
        fields: _9qqw471
    },
    indian: {
        dateFormats: _9qqw466,
        datePartsOrder: "dmy",
        dateIntervalFormats: _9qqw465,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9qqw453,
        dayPeriods: _9qqw438,
        monthNames: {
            format: _9qqw449,
            standAlone: _9qqw449
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _9qqw443,
        fields: _9qqw471
    },
    islamic: _9qqw476,
    "islamic-umalqura": _9qqw476,
    "islamic-tbla": _9qqw476,
    "islamic-civil": _9qqw476,
    "islamic-rgsa": _9qqw476,
    iso8601: _9qqw473,
    japanese: {
        dateFormats: _9qqw466,
        datePartsOrder: "dmy",
        dateIntervalFormats: _9qqw465,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9qqw453,
        dayPeriods: _9qqw438,
        monthNames: _9qqw455,
        eraNames: {
            wide: _9qqw475,
            abbreviated: _9qqw475
        },
        quarterNames: _9qqw443,
        fields: _9qqw471
    },
    persian: {
        dateFormats: _9qqw466,
        datePartsOrder: "dmy",
        dateIntervalFormats: _9qqw465,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9qqw453,
        dayPeriods: _9qqw438,
        monthNames: {
            format: _9qqw445,
            standAlone: _9qqw445
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _9qqw443,
        fields: _9qqw471
    },
    roc: {
        dateFormats: _9qqw466,
        datePartsOrder: "dmy",
        dateIntervalFormats: _9qqw465,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _9qqw453,
        dayPeriods: _9qqw438,
        monthNames: _9qqw455,
        eraNames: {
            wide: _9qqw8,
            abbreviated: _9qqw8
        },
        quarterNames: _9qqw443,
        fields: _9qqw471
    },
    islamicc: _9qqw473
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 0) return "zero";
    if (n === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 4), {
    id: "Pacific/Honolulu",
    regionId: "021",
    utcStandardOffsetSeconds: -36e3,
    displayName: "Honululu",
    countryId: "US"
}, P.timeZones.slice(5, 10), {
    id: "America/Yakutat",
    regionId: "021",
    utcStandardOffsetSeconds: -32400,
    displayName: "Jakutat",
    countryId: "US"
}, P.timeZones.slice(10, 14), P.timeZones[15], {
    id: "Pacific/Pitcairn",
    regionId: "061",
    utcStandardOffsetSeconds: -28800,
    displayName: "Pitkern",
    countryId: "PN"
}, P.timeZones.slice(17, 36), {
    id: "America/North_Dakota/Beulah",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Beulah en Nood Dakota",
    countryId: "US"
}, P.timeZones.slice(38, 40), P.timeZones.slice(41, 43), P.timeZones[44], {
    id: "Pacific/Galapagos",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Jalappajos",
    countryId: "EC"
}, {
    id: "America/Indiana/Knox",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Knox en Indiana",
    countryId: "US"
}, {
    id: "America/Costa_Rica",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Koßtaricka",
    countryId: "CR"
}, P.timeZones.slice(46, 50), P.timeZones[51], {
    id: "America/North_Dakota/New_Salem",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Neu Salem en Nood Dakota",
    countryId: "US"
}, P.timeZones.slice(53, 57), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Schtadt Mexiko",
    countryId: "MX"
}, P.timeZones.slice(57, 59), {
    id: "America/Indiana/Tell_City",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Tell City en Indiana",
    countryId: "US"
}, P.timeZones[60], {
    id: "America/North_Dakota/Center",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Zenter en Nood Dakota",
    countryId: "US"
}, P.timeZones.slice(61, 68), P.timeZones.slice(69, 73), {
    id: "America/Guayaquil",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Juayaquil",
    countryId: "EC"
}, P.timeZones.slice(73, 75), {
    id: "America/Indiana/Marengo",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Marengo en Indiana",
    countryId: "US"
}, {
    id: "America/Kentucky/Monticello",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Monticello en Kentucky",
    countryId: "US"
}, P.timeZones.slice(77, 80), {
    id: "America/Indiana/Petersburg",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Petersburg en Indiana",
    countryId: "US"
}, P.timeZones.slice(81, 84), {
    id: "America/Indiana/Vevay",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Vevay en Indiana",
    countryId: "US"
}, {
    id: "America/Indiana/Vincennes",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Vincennes en Indiana",
    countryId: "US"
}, {
    id: "America/Indiana/Winamac",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Winamac en Indiana",
    countryId: "US"
}, P.timeZones.slice(87, 117), {
    id: "America/St_Lucia",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Santa Lutschiija",
    countryId: "LC"
}, P.timeZones.slice(117, 119), P.timeZones.slice(124, 126), {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Zint Barthélemy",
    countryId: "BL"
}, {
    id: "America/St_Kitts",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Zint Kitts",
    countryId: "KN"
}, {
    id: "America/St_Thomas",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Zint Thomas",
    countryId: "VI"
}, {
    id: "America/St_Vincent",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Zint Vintschänt",
    countryId: "VC"
}, {
    id: "America/St_Johns",
    regionId: "021",
    utcStandardOffsetSeconds: -12600,
    displayName: "Zint John’s",
    countryId: "CA"
}, P.timeZones.slice(127, 158), {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azoore",
    countryId: "PT"
}, P.timeZones[160], {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Kap Verde",
    countryId: "CV"
}, P.timeZones.slice(161, 166), P.timeZones.slice(167, 171), {
    id: "Europe/Isle_of_Man",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Ensel Män",
    countryId: "IM"
}, P.timeZones.slice(171, 173), {
    id: "Europe/Guernsey",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Jöönsei",
    countryId: "GG"
}, {
    id: "Europe/Jersey",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Jöösei",
    countryId: "JE"
}, {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Kannaare",
    countryId: "ES"
}, {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lissabon",
    countryId: "PT"
}, P.timeZones.slice(177, 185), P.timeZones[186], {
    id: "Atlantic/St_Helena",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Zint Helena",
    countryId: "SH"
}, P.timeZones.slice(187, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Beljrad",
    countryId: "RS"
}, P.timeZones.slice(192, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Brüssel",
    countryId: "BE"
}, P.timeZones.slice(196, 200), P.timeZones.slice(201, 203), {
    id: "Europe/Gibraltar",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Jibraltaa",
    countryId: "GI"
}, P.timeZones[204], {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Kopenharen",
    countryId: "DK"
}, {
    id: "Africa/Lagos",
    regionId: "011",
    utcStandardOffsetSeconds: 3600,
    displayName: "Laajos",
    countryId: "NG"
}, P.timeZones.slice(206, 210), {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luxembursch",
    countryId: "LU"
}, P.timeZones.slice(211, 221), {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Prag",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Rom",
    countryId: "IT"
}, {
    id: "Europe/Zagreb",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Sagreb",
    countryId: "HR"
}, P.timeZones.slice(223, 227), {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tiraana",
    countryId: "AL"
}, P.timeZones.slice(228, 230), {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Warschau",
    countryId: "PL"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Wien",
    countryId: "AT"
}, {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Züresch",
    countryId: "CH"
}, {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "der Vatikahn",
    countryId: "VA"
}, {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Athen",
    countryId: "GR"
}, P.timeZones.slice(236, 238), P.timeZones[239], {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bukarest",
    countryId: "RO"
}, P.timeZones.slice(241, 244), P.timeZones.slice(245, 248), {
    id: "Asia/Gaza",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Jaasa",
    countryId: "PS"
}, P.timeZones.slice(248, 251), {
    id: "Africa/Cairo",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kaijro",
    countryId: "EG"
}, {
    id: "Europe/Kaliningrad",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kalinninjraad",
    countryId: "RU"
}, P.timeZones.slice(252, 261), {
    id: "Asia/Nicosia",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Nikosija",
    countryId: "CY"
}, {
    id: "Europe/Riga",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Riija",
    countryId: "LV"
}, P.timeZones.slice(263, 267), {
    id: "Africa/Windhoek",
    regionId: "018",
    utcStandardOffsetSeconds: 7200,
    displayName: "Windhuk",
    countryId: "NA"
}, P.timeZones.slice(268, 273), {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdad",
    countryId: "IQ"
}, P.timeZones.slice(274, 276), {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damaskus",
    countryId: "SY"
}, P.timeZones.slice(277, 279), {
    id: "Europe/Istanbul",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Istambul",
    countryId: "TR"
}, P.timeZones.slice(280, 286), {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moskau",
    countryId: "RU"
}, P.timeZones.slice(287, 289), {
    id: "Asia/Riyadh",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Rijad",
    countryId: "SA"
}, {
    id: "Antarctica/Syowa",
    utcStandardOffsetSeconds: 10800,
    displayName: "Schoowa-Schtazjohn op dä Ensel Onjul",
    countryId: "AQ"
}, P.timeZones[290], {
    id: "Europe/Volgograd",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Woljojrad",
    countryId: "RU"
}, P.timeZones.slice(293, 297), {
    id: "Asia/Yerevan",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Eriwan",
    countryId: "AM"
}, P.timeZones.slice(297, 303), {
    id: "Asia/Tbilisi",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Tiblis",
    countryId: "GE"
}, P.timeZones[304], P.timeZones.slice(306, 308), {
    id: "Asia/Aqtobe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aqtöbe",
    countryId: "KZ"
}, {
    id: "Asia/Ashgabat",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Asshgabat",
    countryId: "TM"
}, P.timeZones[310], {
    id: "Asia/Dushanbe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Duschanbe",
    countryId: "TJ"
}, {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Jekaterinburg",
    countryId: "RU"
}, P.timeZones.slice(312, 314), {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Malldive",
    countryId: "MV"
}, P.timeZones.slice(315, 317), {
    id: "Asia/Qyzylorda",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Qysylorda",
    countryId: "KZ"
}, P.timeZones[318], {
    id: "Asia/Tashkent",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Taschkent",
    countryId: "UZ"
}, P.timeZones.slice(321, 325), {
    id: "Asia/Bishkek",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Bischkek",
    countryId: "KG"
}, P.timeZones.slice(326, 331), {
    id: "Asia/Urumqi",
    regionId: "030",
    utcStandardOffsetSeconds: 21600,
    displayName: "Urrumptschi",
    countryId: "CN"
}, {
    id: "Antarctica/Vostok",
    utcStandardOffsetSeconds: 21600,
    displayName: "Wostok",
    countryId: "AQ"
}, P.timeZones.slice(333, 342), {
    id: "Asia/Krasnoyarsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Krasnojarsk",
    countryId: "RU"
}, P.timeZones.slice(343, 345), {
    id: "Asia/Phnom_Penh",
    regionId: "035",
    utcStandardOffsetSeconds: 25200,
    displayName: "Pnom Penh",
    countryId: "KH"
}, P.timeZones.slice(346, 351), {
    id: "Asia/Hong_Kong",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Hongkong",
    countryId: "HK"
}, P.timeZones.slice(352, 359), {
    id: "Asia/Shanghai",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Schanghai",
    countryId: "CN"
}, {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Singjapuur",
    countryId: "SG"
}, P.timeZones[361], {
    id: "Asia/Ulaanbaatar",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Ulan Bator",
    countryId: "MN"
}, P.timeZones.slice(363, 366), {
    id: "Asia/Yakutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jakutsk",
    countryId: "RU"
}, P.timeZones.slice(366, 372), P.timeZones.slice(373, 378), {
    id: "Antarctica/DumontDUrville",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Dumont-d’Urville-Schtazjohn",
    countryId: "AQ"
}, P.timeZones[380], {
    id: "Pacific/Guam",
    regionId: "057",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Juam",
    countryId: "GU"
}, P.timeZones.slice(381, 388), {
    id: "Asia/Vladivostok",
    regionId: "151",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Wladiwostok",
    countryId: "RU"
}, P.timeZones.slice(389, 405), {
    id: "Asia/Kamchatka",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Kamschattka",
    countryId: "RU"
}, P.timeZones.slice(406, 419));

inter.territories = [ _9qqw309, _9qqw314, _9qqw287, _9qqw288, _9qqw208, _9qqw239, _9qqw365, _9qqw325, _9qqw154, _9qqw209, _9qqw187, _9qqw332, _9qqw240, _9qqw112, _9qqw315, _9qqw270, _9qqw77, _9qqw188, _9qqw271, _9qqw128, _9qqw129, _9qqw113, _9qqw241, _9qqw189, _9qqw366, _9qqw210, _9qqw378, _9qqw130, _9qqw310, _9qqw272, _9qqw155, _9qqw156, _9qqw157, _9qqw211, _9qqw273, _9qqw242, _9qqw190, _9qqw316, _9qqw243, _9qqw191, _9qqw244, _9qqw351, _9qqw376, _9qqw298, _9qqw158, _9qqw192, _9qqw193, _9qqw131, _9qqw274, _9qqw105, _9qqw159, _9qqw194, _9qqw132, _9qqw133, _9qqw114, _9qqw134, _9qqw160, _9qqw195, _9qqw115, _9qqw212, _9qqw245, _9qqw161, _9qqw299, _9qqw246, _9qqw196, _9qqw289, _9qqw322, _9qqw213, _9qqw214, _9qqw116, _9qqw162, _9qqw275, _9qqw117, _9qqw163, _9qqw135, _9qqw247, _9qqw215, _9qqw136, _9qqw276, _9qqw118, _9qqw164, _9qqw197, _9qqw277, _9qqw216, _9qqw165, _9qqw217, _9qqw218, _9qqw106, _9qqw137, _9qqw119, _9qqw219, _9qqw166, _9qqw167, _9qqw220, _9qqw311, _9qqw168, _9qqw278, _9qqw169, _9qqw120, _9qqw221, _9qqw248, _9qqw138, _9qqw121, _9qqw222, _9qqw139, _9qqw249, _9qqw122, _9qqw170, _9qqw250, _9qqw290, _9qqw279, _9qqw367, _9qqw352, _9qqw371, _9qqw353, _9qqw291, _9qqw251, _9qqw171, _9qqw223, _9qqw252, _9qqw198, _9qqw140, _9qqw224, _9qqw123, _9qqw141, _9qqw300, _9qqw253, _9qqw124, _9qqw254, _9qqw280, _9qqw107, _9qqw354, _9qqw355, _9qqw281, _9qqw255, _9qqw225, _9qqw108, _9qqw333, {
    id: "QO",
    displayName: "Ozejaanije ußerhallef",
    regionId: "009",
    hasTimeZones: false
}, _9qqw326, _9qqw334, _9qqw335, _9qqw199, _9qqw226, _9qqw142, _9qqw227, _9qqw172, _9qqw327, _9qqw256, _9qqw143, _9qqw173, _9qqw257, _9qqw258, _9qqw109, _9qqw341, _9qqw228, _9qqw229, _9qqw144, _9qqw174, _9qqw175, _9qqw176, _9qqw259, _9qqw317, _9qqw177, _9qqw178, _9qqw260, _9qqw200, _9qqw201, _9qqw261, _9qqw301, _9qqw230, _9qqw231, _9qqw179, _9qqw336, _9qqw342, _9qqw356, _9qqw343, _9qqw393, _9qqw262, _9qqw358, _9qqw232, _9qqw145, _9qqw202, _9qqw312, _9qqw180, _9qqw146, _9qqw233, _9qqw181, _9qqw147, _9qqw125, _9qqw344, _9qqw100, _9qqw234, _9qqw302, _9qqw148, _9qqw149, _9qqw150, _9qqw203, _9qqw292, _9qqw182, _9qqw235, _9qqw397, _9qqw236, _9qqw323, _9qqw282, _9qqw337, _9qqw345, _9qqw346, _9qqw263, _9qqw102, _9qqw347, _9qqw293, _9qqw368, _9qqw379, _9qqw405, _9qqw183, _9qqw264, _9qqw283, _9qqw96, _9qqw184, _9qqw390, _9qqw328, _9qqw294, _9qqw359, _9qqw360, _9qqw398, _9qqw380, _9qqw348, _9qqw338, _9qqw329, _9qqw372, _9qqw330, _9qqw204, _9qqw349, _9qqw126, _9qqw101, _9qqw284, _9qqw318, _9qqw361, _9qqw295, _9qqw319, _9qqw331, _9qqw324, _9qqw400, _9qqw401, _9qqw369, _9qqw265, _9qqw303, _9qqw350, _9qqw304, _9qqw237, _9qqw296, _9qqw420, _9qqw110, _9qqw375, _9qqw357, _9qqw402, _9qqw403, _9qqw389, _9qqw373, _9qqw377, _9qqw394, _9qqw406, _9qqw74, _9qqw395, _9qqw305, _9qqw85, _9qqw285, _9qqw306, _9qqw205, _9qqw370, _9qqw362, _9qqw313, _9qqw151, _9qqw185, _9qqw297, _9qqw307, _9qqw339, _9qqw206, _9qqw286, _9qqw152, _9qqw266, _9qqw207, _9qqw267, _9qqw268 ];

inter.regions = [ _9qqw309, _9qqw314, _9qqw325, _9qqw316, _9qqw367, _9qqw352, _9qqw371, _9qqw353, _9qqw354, _9qqw355, _9qqw333, _9qqw326, _9qqw334, _9qqw335, _9qqw341, _9qqw336, _9qqw342, _9qqw356, _9qqw343, _9qqw358, _9qqw337, _9qqw345, _9qqw346, _9qqw349, _9qqw400, _9qqw401, _9qqw74, _9qqw395 ];

inter.countries = [ _9qqw287, _9qqw288, _9qqw208, _9qqw239, _9qqw365, _9qqw154, _9qqw209, _9qqw187, _9qqw332, _9qqw240, _9qqw112, _9qqw315, _9qqw270, _9qqw77, _9qqw188, _9qqw271, _9qqw128, _9qqw129, _9qqw113, _9qqw241, _9qqw189, _9qqw366, _9qqw210, _9qqw378, _9qqw130, _9qqw310, _9qqw272, _9qqw155, _9qqw156, _9qqw157, _9qqw211, _9qqw273, _9qqw242, _9qqw190, _9qqw243, _9qqw191, _9qqw244, _9qqw351, _9qqw376, _9qqw298, _9qqw158, _9qqw192, _9qqw193, _9qqw131, _9qqw274, _9qqw105, _9qqw159, _9qqw194, _9qqw132, _9qqw133, _9qqw114, _9qqw134, _9qqw160, _9qqw195, _9qqw115, _9qqw212, _9qqw245, _9qqw161, _9qqw299, _9qqw246, _9qqw196, _9qqw289, _9qqw322, _9qqw213, _9qqw214, _9qqw116, _9qqw162, _9qqw275, _9qqw117, _9qqw163, _9qqw135, _9qqw247, _9qqw215, _9qqw136, _9qqw276, _9qqw118, _9qqw164, _9qqw197, _9qqw277, _9qqw216, _9qqw165, _9qqw217, _9qqw218, _9qqw106, _9qqw137, _9qqw119, _9qqw219, _9qqw166, _9qqw167, _9qqw220, _9qqw311, _9qqw168, _9qqw278, _9qqw169, _9qqw120, _9qqw221, _9qqw248, _9qqw138, _9qqw121, _9qqw222, _9qqw139, _9qqw249, _9qqw122, _9qqw170, _9qqw250, _9qqw290, _9qqw279, _9qqw291, _9qqw251, _9qqw171, _9qqw223, _9qqw252, _9qqw198, _9qqw140, _9qqw224, _9qqw123, _9qqw141, _9qqw300, _9qqw253, _9qqw124, _9qqw254, _9qqw280, _9qqw107, _9qqw281, _9qqw255, _9qqw225, _9qqw108, _9qqw199, _9qqw226, _9qqw142, _9qqw227, _9qqw172, _9qqw327, _9qqw256, _9qqw143, _9qqw173, _9qqw257, _9qqw258, _9qqw109, _9qqw228, _9qqw229, _9qqw144, _9qqw174, _9qqw175, _9qqw176, _9qqw259, _9qqw317, _9qqw177, _9qqw178, _9qqw260, _9qqw200, _9qqw201, _9qqw261, _9qqw301, _9qqw230, _9qqw231, _9qqw179, _9qqw393, _9qqw262, _9qqw232, _9qqw145, _9qqw202, _9qqw312, _9qqw180, _9qqw146, _9qqw233, _9qqw181, _9qqw147, _9qqw125, _9qqw344, _9qqw100, _9qqw234, _9qqw302, _9qqw148, _9qqw149, _9qqw150, _9qqw203, _9qqw292, _9qqw182, _9qqw235, _9qqw397, _9qqw236, _9qqw323, _9qqw282, _9qqw263, _9qqw102, _9qqw347, _9qqw293, _9qqw368, _9qqw379, _9qqw405, _9qqw183, _9qqw264, _9qqw283, _9qqw96, _9qqw184, _9qqw390, _9qqw328, _9qqw294, _9qqw359, _9qqw360, _9qqw398, _9qqw380, _9qqw348, _9qqw338, _9qqw329, _9qqw372, _9qqw330, _9qqw204, _9qqw126, _9qqw101, _9qqw284, _9qqw318, _9qqw361, _9qqw295, _9qqw319, _9qqw331, _9qqw324, _9qqw369, _9qqw265, _9qqw303, _9qqw350, _9qqw304, _9qqw237, _9qqw296, _9qqw420, _9qqw110, _9qqw375, _9qqw357, _9qqw402, _9qqw403, _9qqw389, _9qqw373, _9qqw377, _9qqw394, _9qqw406, _9qqw305, _9qqw85, _9qqw285, _9qqw306, _9qqw205, _9qqw370, _9qqw362, _9qqw313, _9qqw151, _9qqw185, _9qqw297, _9qqw307, _9qqw339, _9qqw206, _9qqw286, _9qqw152, _9qqw266, _9qqw207, _9qqw267, _9qqw268 ];

inter.languages = [ {
    id: "und",
    displayName: "-onbikannte-Schprooch-"
}, {
    id: "mul",
    displayName: "-ongerscheidlijje Schprooche-"
}, {
    id: "ab",
    displayName: "Abchahsesch"
}, {
    id: "aa",
    displayName: "Afahresch"
}, {
    id: "afh",
    displayName: "Afrehihlesch"
}, {
    id: "af",
    displayName: "Afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "egy",
    displayName: "Ahl Äjiptesch"
}, {
    id: "ang",
    displayName: "Ahl Änglesch"
}, {
    id: "ay",
    displayName: "Aimahresch"
}, {
    id: "akk",
    displayName: "Akahdesch"
}, {
    id: "ak",
    displayName: "Akahnesch",
    nativeDisplayName: "Akan"
}, {
    id: "ale",
    displayName: "Ale’uhtesch"
}, {
    id: "arq",
    displayName: "Aljehresch Arahbesch"
}, {
    id: "en_us",
    displayName: "Amärrekaanesch Änglesch",
    nativeDisplayName: "American English"
}, {
    id: "ase",
    displayName: "Amärrekahnesche Blendeschprohch"
}, {
    id: "an",
    displayName: "Arrajonehsesch"
}, {
    id: "ace",
    displayName: "Aschenehsesch"
}, {
    id: "ast",
    displayName: "Astuhrejahnesch",
    nativeDisplayName: "asturianu"
}, {
    id: "en_au",
    displayName: "Änglesch uß Außtraalije",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "Avahresch"
}, {
    id: "ae",
    displayName: "Avästahnesch"
}, {
    id: "az",
    displayName: "Asserbaidschahnesch",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "Mallaijesch",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bar",
    displayName: "Bairesch"
}, {
    id: "ban",
    displayName: "Balinehsesch"
}, {
    id: "bm",
    displayName: "Bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "ba",
    displayName: "Baschkihresch"
}, {
    id: "bal",
    displayName: "Beluhtschesch"
}, {
    id: "bpy",
    displayName: "Bischnuprejahnesch"
}, {
    id: "bs",
    displayName: "Boßnesch",
    nativeDisplayName: "bosanski"
}, {
    id: "brh",
    displayName: "Brahuijesch"
}, {
    id: "bra",
    displayName: "Brajesch"
}, {
    id: "br",
    displayName: "Bettohnesch",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "Änglesch uß Jruußbrettannije",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "Bujinehsesch"
}, {
    id: "bua",
    displayName: "Burejahtesch"
}, {
    id: "en_ca",
    displayName: "Änglesch uß Kanada",
    nativeDisplayName: "Canadian English"
}, {
    id: "ca",
    displayName: "Kattalahnesch",
    nativeDisplayName: "català"
}, {
    id: "sn",
    displayName: "Schi-Schona",
    nativeDisplayName: "chiShona"
}, {
    id: "cy",
    displayName: "Wallihsesch",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "Dähnesch",
    nativeDisplayName: "dansk"
}, {
    id: "dzg",
    displayName: "Dassajahnesch"
}, {
    id: "se",
    displayName: "Nood-Lappländesch",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "lah",
    displayName: "de Landa-Schprooche"
}, {
    id: "de",
    displayName: "Deutsch",
    nativeDisplayName: "Deutsch"
}, {
    id: "dv",
    displayName: "Divehjesch"
}, {
    id: "dsb",
    displayName: "Niddersorbesch",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "et",
    displayName: "Äßnesch",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "Efik"
}, {
    id: "egl",
    displayName: "Emilijahnesch"
}, {
    id: "inh",
    displayName: "Engjuschesch"
}, {
    id: "en",
    displayName: "Änglesch",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "Schpahnesch",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "Schpahnesch en Schpahneje",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "Schpahnesch en Mäxikoh",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "Schpaanesch uß Latting-Ammärrika",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "Esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "Baskesch",
    nativeDisplayName: "euskara"
}, {
    id: "ee",
    displayName: "Ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fj",
    displayName: "Fidschesch"
}, {
    id: "fil",
    displayName: "fil",
    nativeDisplayName: "Filipino"
}, {
    id: "fr",
    displayName: "Franzüüsesch",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "Franzüüsesch uß Kanada",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "Franzüüsesch uß de Schweijz",
    nativeDisplayName: "français suisse"
}, {
    id: "fo",
    displayName: "Färröeresch",
    nativeDisplayName: "føroyskt"
}, {
    id: "ga",
    displayName: "Ieresch",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gl",
    displayName: "Jalliizesch",
    nativeDisplayName: "galego"
}, {
    id: "ha",
    displayName: "Haußa",
    nativeDisplayName: "Hausa"
}, {
    id: "ht",
    displayName: "Ha’iitesch"
}, {
    id: "bez",
    displayName: "Bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hr",
    displayName: "Krowatesch",
    nativeDisplayName: "hrvatski"
}, {
    id: "bem",
    displayName: "Bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "io",
    displayName: "Ido"
}, {
    id: "ig",
    displayName: "Igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "K-Rundesch",
    nativeDisplayName: "Ikirundi"
}, {
    id: "id",
    displayName: "Indoneesesch",
    nativeDisplayName: "Indonesia"
}, {
    id: "izh",
    displayName: "Ingjrijahnesch"
}, {
    id: "iu",
    displayName: "Inuktitut"
}, {
    id: "xh",
    displayName: "Isi-Khoosa"
}, {
    id: "nd",
    displayName: "Nood-Ndebele",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "Suulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "Etalljänesch",
    nativeDisplayName: "italiano"
}, {
    id: "jam",
    displayName: "Jamaikahnesch-Änglesch"
}, {
    id: "jv",
    displayName: "Javahnesch"
}, {
    id: "gn",
    displayName: "Juwaraanesch"
}, {
    id: "jpr",
    displayName: "Jühdesch-Pärsesch"
}, {
    id: "jut",
    displayName: "Jütesch"
}, {
    id: "kea",
    displayName: "Kapvärdesch",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "csb",
    displayName: "Kaschuhbesch"
}, {
    id: "zxx",
    displayName: "kein Schprooch"
}, {
    id: "rof",
    displayName: "Kirombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "rw",
    displayName: "Kinja-Ruandesch",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "Pare",
    nativeDisplayName: "Kipare"
}, {
    id: "sw",
    displayName: "Suaheelesch",
    nativeDisplayName: "Kiswahili"
}, {
    id: "swb",
    displayName: "Kommooresch"
}, {
    id: "cop",
    displayName: "Koptesch"
}, {
    id: "co",
    displayName: "Korsesch"
}, {
    id: "ku",
    displayName: "Kurdesch"
}, {
    id: "ksh",
    displayName: "Kölsch",
    nativeDisplayName: "Kölsch"
}, {
    id: "ebu",
    displayName: "Embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "la",
    displayName: "Lateijnesch"
}, {
    id: "lv",
    displayName: "Lättesch",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "Tongjaanesch",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lt",
    displayName: "Littouesch",
    nativeDisplayName: "lietuvių"
}, {
    id: "ln",
    displayName: "Lingjalla",
    nativeDisplayName: "lingála"
}, {
    id: "jbo",
    displayName: "Lodschbahn"
}, {
    id: "luy",
    displayName: "Luyjanesch",
    nativeDisplayName: "Luluhia"
}, {
    id: "lb",
    displayName: "Luxemborjesch",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mi",
    displayName: "Maahori"
}, {
    id: "hu",
    displayName: "Unjarresch",
    nativeDisplayName: "magyar"
}, {
    id: "mg",
    displayName: "Madajaßkesch",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "Malteesesch",
    nativeDisplayName: "Malti"
}, {
    id: "ary",
    displayName: "Marokahnesch Arahbesch"
}, {
    id: "dum",
    displayName: "Meddelnehderlängsch"
}, {
    id: "enm",
    displayName: "Meddelänglesch"
}, {
    id: "nl",
    displayName: "Holländesch",
    nativeDisplayName: "Nederlands"
}, {
    id: "nso",
    displayName: "Nood-Sooto"
}, {
    id: "no",
    displayName: "Norrweejesch"
}, {
    id: "nb",
    displayName: "Norrweejesch Bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "nn",
    displayName: "Neu-Norrweejesch",
    nativeDisplayName: "nynorsk"
}, {
    id: "uz",
    displayName: "Ußbeekesch",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pl",
    displayName: "Pollnesch",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "Pochtojesesch",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "Brasilljaanesch Pochtojesesch",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "Pochtojesesch uß Pochtojall",
    nativeDisplayName: "português europeu"
}, {
    id: "ro",
    displayName: "Rumänesch",
    nativeDisplayName: "română"
}, {
    id: "rm",
    displayName: "Rätoromaanesch",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "Kättschowa",
    nativeDisplayName: "Runasimi"
}, {
    id: "sm",
    displayName: "Sammohanesch"
}, {
    id: "sa",
    displayName: "Sanskrit"
}, {
    id: "ny",
    displayName: "Schi-Schewa"
}, {
    id: "de_ch",
    displayName: "Deutsch uß de Schweijz",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "Schwitzerdütsch",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "tn",
    displayName: "Se-Zwaanesch"
}, {
    id: "sq",
    displayName: "Albaanesch",
    nativeDisplayName: "shqip"
}, {
    id: "ss",
    displayName: "Si-Swatesch"
}, {
    id: "su",
    displayName: "Sindaneesesch"
}, {
    id: "sd",
    displayName: "Sinndi"
}, {
    id: "sk",
    displayName: "ẞlovakesch",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "ẞloveenesch",
    nativeDisplayName: "slovenščina"
}, {
    id: "so",
    displayName: "Somaalesch",
    nativeDisplayName: "Soomaali"
}, {
    id: "fi",
    displayName: "Finnesch",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "Schweedesch",
    nativeDisplayName: "svenska"
}, {
    id: "sg",
    displayName: "Sangjo",
    nativeDisplayName: "Sängö"
}, {
    id: "sh",
    displayName: "Särbokowatesch"
}, {
    id: "st",
    displayName: "Söd-Sooto"
}, {
    id: "az_arab",
    displayName: "Södasserbaidschahnesch"
}, {
    id: "tg",
    displayName: "Tadschiikesch"
}, {
    id: "tl",
    displayName: "Tagalog"
}, {
    id: "ty",
    displayName: "Tahitesch"
}, {
    id: "tt",
    displayName: "Tattaaresch"
}, {
    id: "tet",
    displayName: "Tetumsch"
}, {
    id: "vi",
    displayName: "Vijätnammeesesch",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "aeb",
    displayName: "Tonehsesch Arahbesch"
}, {
    id: "tpi",
    displayName: "Took Pisin"
}, {
    id: "cv",
    displayName: "Tschowaschesch"
}, {
    id: "tk",
    displayName: "Törkmeenesch",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "Törkesch",
    nativeDisplayName: "Türkçe"
}, {
    id: "nl_be",
    displayName: "Flämesch",
    nativeDisplayName: "Vlaams"
}, {
    id: "wae",
    displayName: "Walserdütsch",
    nativeDisplayName: "Walser"
}, {
    id: "ve",
    displayName: "Wenda"
}, {
    id: "fy",
    displayName: "Wäßfriisesch",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "Woloff"
}, {
    id: "ts",
    displayName: "Xi-Zongjanesch"
}, {
    id: "esu",
    displayName: "Zätrahl-Jupik"
}, {
    id: "arz",
    displayName: "Äjiptesch Arahbesch"
}, {
    id: "yo",
    displayName: "Joruuba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "Ißländesch",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "Deutsch uß Ößterich",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "Tschäschesch",
    nativeDisplayName: "čeština"
}, {
    id: "haw",
    displayName: "Hauajaanesch",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "Jrihschesch",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "Wiißrußesch",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "Bulljaaresch",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "Oßeetesch",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "Kirjihsesch",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "Mazedoonesch",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "Mongjolesch",
    nativeDisplayName: "монгол"
}, {
    id: "ru",
    displayName: "Rußßesch",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "Jackutesch",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "Särbesch",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "Ukrainesch",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "Kerscheßlahwesch",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "Kassakesch",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "Armeenesch",
    nativeDisplayName: "հայերեն"
}, {
    id: "he",
    displayName: "Hebräjesch",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "Uj’juuersch",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "Urdu/Hindi",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "Arahbesch",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "Schtandatt Arahbesch",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "Pärsesch",
    nativeDisplayName: "فارسی"
}, {
    id: "ps",
    displayName: "Paschtuunesch",
    nativeDisplayName: "پښتو"
}, {
    id: "ks",
    displayName: "Kaschmieresch",
    nativeDisplayName: "کٲشُر"
}, {
    id: "ne",
    displayName: "Nepallessesch",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "Boddo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "Marraatesch",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "Hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "Aßamehsesch",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "Bängjaalesch",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "Panschaabesch",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "Gutscharatesch",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "Oriija",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "Tamiilesch",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "Telluuju",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "Kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "Mallajalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "Singjaleesesch",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "Tailändesch",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "Lahootesch",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "Tibehtesch",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "Butahnesch",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "Burmessesch",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "Je’orjesch",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "Tijrenejaanesch",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "Amhahresch",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "Khmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zh",
    displayName: "Schineesesch",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "Japaanesch",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "Schineesesch en de eijfacher Schreff",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "Kanton-Schineesesch",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "Schineesesch en de tradizjonälle Schreff",
    nativeDisplayName: "繁體中文"
}, {
    id: "ko",
    displayName: "Korrejaanesch",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Zsym",
    displayName: "-Zeiche ävver kein Schreff-"
}, {
    id: "Zxxx",
    displayName: "-jaa keij Schreff-"
}, {
    id: "Zzzz",
    displayName: "-onbikannte Schreff-"
}, {
    id: "Zyyy",
    displayName: "-öhnß en Schreff-"
}, {
    id: "Brai",
    displayName: "Blindeschreff"
}, {
    id: "Khmr",
    displayName: "Khmer-Schreff"
}, {
    id: "Armn",
    displayName: "armeenesche Schreff"
}, {
    id: "Arab",
    displayName: "arraabesche Schreff"
}, {
    id: "Mymr",
    displayName: "birmaanesche Schreff"
}, {
    id: "Beng",
    displayName: "bängjaalesche Schreff"
}, {
    id: "Hans",
    displayName: "eijfacher"
}, {
    id: "Jpan",
    displayName: "en japaanesche Schreff"
}, {
    id: "Hani",
    displayName: "en schineesesche Schreff"
}, {
    id: "Hebr",
    displayName: "hebrääjesche Schreff"
}, {
    id: "Deva",
    displayName: "indesche Devanajari-Schreff"
}, {
    id: "Guru",
    displayName: "indesche Gurmukhi-Schreff"
}, {
    id: "Knda",
    displayName: "indesche Kannada-Schreff"
}, {
    id: "Mlym",
    displayName: "indesche Malajalam-Schreff"
}, {
    id: "Orya",
    displayName: "indesche Orija-Schreff"
}, {
    id: "Telu",
    displayName: "indesche Telugu-Schreff"
}, {
    id: "Hira",
    displayName: "japaanesche Hiddajaana-Schreff"
}, {
    id: "Kana",
    displayName: "japaanesche Kattakaana-Schreff"
}, {
    id: "Geor",
    displayName: "je’orrjesche Schreff"
}, {
    id: "Grek",
    displayName: "jriischesche Schreff"
}, {
    id: "Gujr",
    displayName: "jujaraatesche Schreff"
}, {
    id: "Hang",
    displayName: "korrejaanesche Schreff"
}, {
    id: "Kore",
    displayName: "korrejaanesche Schreff udder en schineesesche Schreff"
}, {
    id: "Cyrl",
    displayName: "kürrellesche Schreff"
}, {
    id: "Laoo",
    displayName: "lahootesche Schreff"
}, {
    id: "Latn",
    displayName: "lateinesche Schreff"
}, {
    id: "Thaa",
    displayName: "malledivesche Taana-Schreff"
}, {
    id: "Mong",
    displayName: "mongjoolesche Schreff"
}, {
    id: "Bopo",
    displayName: "schineeseche Ömschreff Bopomofo"
}, {
    id: "Sinh",
    displayName: "singjaleesesche Schreff"
}, {
    id: "Thai",
    displayName: "tailändesche Schreff"
}, {
    id: "Taml",
    displayName: "tamiilesche Schreff"
}, {
    id: "Tibt",
    displayName: "tibeetesche Schreff"
}, {
    id: "Hant",
    displayName: "tradizjonäll"
}, {
    id: "Ethi",
    displayName: "ätejoopesche Schreff"
} ];

inter.currencies = [ {
    id: "AFN",
    displayName: "Afjahni"
}, {
    id: "AZN",
    displayName: "Asserbaidschaani Manat"
}, {
    id: "AZM",
    displayName: "Asserbaidschaani Manat (1993–2006)"
}, {
    id: "BHD",
    displayName: "Bachrainesche Denaa"
}, {
    id: "BBD",
    displayName: "Barbados-Dollaa",
    symbol: "$"
}, {
    id: "BMD",
    displayName: "Bermuuda-Dollaa",
    symbol: "$"
}, {
    id: "BOB",
    displayName: "Bollivijano",
    symbol: "Bs",
    zero: "Bollivijano",
    one: "Bollivijano",
    other: "Bollivijano"
}, {
    id: "BND",
    displayName: "Brunei-Dollaa",
    symbol: "$",
    zero: "Brunei-Dollaaa",
    one: "Brunei-Dollaaa",
    other: "Brunei-Dollaaa"
}, {
    id: "STD",
    displayName: "Dobra vun São Tomé un Príncipe",
    symbol: "Db",
    zero: "Dobra vun São Tomé un Príncipe",
    one: "Dobra vun São Tomé un Príncipe",
    other: "Dobra vun São Tomé un Príncipe"
}, {
    id: "TTD",
    displayName: "Dollaa uß Trinidad un Tobääjo",
    symbol: "$",
    zero: "Dollaa uß Trinidad un Tobääjo",
    one: "Dollaa uß Trinidad un Tobääjo",
    other: "Dollaa uß Trinidad un Tobääjo"
}, {
    id: "EUR",
    displayName: "Euro",
    symbol: "€"
}, {
    id: "FJD",
    displayName: "Fidschi-Dollaa",
    symbol: "$"
}, {
    id: "DJF",
    displayName: "Frang uß Dschibuti"
}, {
    id: "XOF",
    displayName: "Frang uß de Älfebeinköß",
    symbol: "CFA"
}, {
    id: "HKD",
    displayName: "Hongkong-Dollaa",
    symbol: "HK$"
}, {
    id: "GNF",
    displayName: "Jineea-Frang",
    symbol: "FG",
    zero: "Jineea-Franke",
    one: "Jineea-Franke",
    other: "Jineea-Franke"
}, {
    id: "XAU",
    displayName: "Jold"
}, {
    id: "JOD",
    displayName: "Jordaanesche Dollaa"
}, {
    id: "GYD",
    displayName: "Juaana-Dollaa",
    symbol: "$"
}, {
    id: "KYD",
    displayName: "Kaimann-Dollaa",
    symbol: "$"
}, {
    id: "KES",
    displayName: "Kenjaanesche Schillinge",
    zero: "Kenjaanesche Schillinge",
    one: "Kenjaanesche Schillinge",
    other: "Kenjaanesche Schillinge"
}, {
    id: "XAF",
    displayName: "Kmmeruhner Frang",
    symbol: "FCFA"
}, {
    id: "ERN",
    displayName: "Nafka uß Erritreja"
}, {
    id: "XPD",
    displayName: "Palladijum"
}, {
    id: "XPT",
    displayName: "Plaatin"
}, {
    id: "FKP",
    displayName: "Pongk vun de Falkland-Enselle",
    symbol: "£"
}, {
    id: "BWP",
    displayName: "Pula us Bozwaana",
    symbol: "P"
}, {
    id: "XAG",
    displayName: "Sellver"
}, {
    id: "BDT",
    displayName: "Taka us Bangladäsch",
    symbol: "৳"
}, {
    id: "XTS",
    displayName: "Währong zum Prööfe"
}, {
    id: "SHP",
    displayName: "Zint-Hellena-Pongk",
    symbol: "£"
}, {
    id: "ARS",
    displayName: "ajentiinesche Peeso",
    symbol: "$",
    zero: "ajentiinesche Peesos",
    one: "ajentiinesche Peesos",
    other: "ajentiinesche Peesos"
}, {
    id: "ALL",
    displayName: "albaanesche Lek"
}, {
    id: "DZD",
    displayName: "aljeresche Denaa"
}, {
    id: "USD",
    displayName: "ammärrikaanesche Dollaa",
    symbol: "US$"
}, {
    id: "AOA",
    displayName: "angjolaanesche Kwansa",
    symbol: "Kz"
}, {
    id: "AMD",
    displayName: "armeenesche Dram"
}, {
    id: "AWG",
    displayName: "arubesche Florin"
}, {
    id: "SVC",
    displayName: "asalvadorejaanesche Cosan"
}, {
    id: "AUD",
    displayName: "austraalesche Dollaa",
    symbol: "A$"
}, {
    id: "BSD",
    displayName: "bahama’sche Dollaa",
    symbol: "$"
}, {
    id: "BZD",
    displayName: "belizjaanesche Dollaa",
    symbol: "$",
    zero: "Belizjaanesche Dollaa",
    one: "Belizjaanesche Dollaa",
    other: "Belizjaanesche Dollaa"
}, {
    id: "BTN",
    displayName: "bhutanesesche Ngultrum",
    zero: "Bhutanesesche Ngultrum",
    one: "Bhutanesesche Ngultrum",
    other: "Bhutanesesche Ngultrum"
}, {
    id: "BRL",
    displayName: "brasilljaanesche Real",
    symbol: "R$"
}, {
    id: "GBP",
    displayName: "brittesche £",
    symbol: "£"
}, {
    id: "BGN",
    displayName: "buljaaresche Lev"
}, {
    id: "MMK",
    displayName: "burmeesesche Kyat",
    symbol: "K"
}, {
    id: "BIF",
    displayName: "burundesche Frang"
}, {
    id: "AED",
    displayName: "de vereineschte arraabesche Emiraate ier Dirham"
}, {
    id: "DOP",
    displayName: "dommenikaanesche Peesos",
    symbol: "$",
    zero: "dommenikaanesche Peesos",
    one: "dommenikaanesche Peeso",
    other: "dommenikaanesche Peesos"
}, {
    id: "DKK",
    displayName: "dänesche Kruhne",
    symbol: "kr",
    zero: "dänesche Kruhne",
    one: "dänesche Kruhne",
    other: "dänesche Kruhne"
}, {
    id: "PHP",
    displayName: "fillipiinesche Pesos",
    symbol: "₱",
    zero: "fillipiinesche Pesos",
    one: "fillipiinesche Pesos",
    other: "fillipiinesche Pesos"
}, {
    id: "XFO",
    displayName: "franzüüsesche Joldfranke"
}, {
    id: "HTG",
    displayName: "haiitesche Gourde"
}, {
    id: "HNL",
    displayName: "hondureanesche Lempira",
    symbol: "L"
}, {
    id: "INR",
    displayName: "indesche Ruupije",
    symbol: "₹"
}, {
    id: "IDR",
    displayName: "indoneesesche Ruupije",
    symbol: "Rp"
}, {
    id: "IQD",
    displayName: "iraakesche Denaa"
}, {
    id: "ISK",
    displayName: "ißländesche Kruhne",
    symbol: "kr",
    zero: "ißländesche Kruhne",
    one: "ißländesche Kruhne",
    other: "ißländesche Kruhne"
}, {
    id: "ILS",
    displayName: "ißraeelesche Schekel",
    symbol: "₪"
}, {
    id: "JMD",
    displayName: "jamaikaanesche Dollaa",
    symbol: "$"
}, {
    id: "GMD",
    displayName: "jambesche Dalasi"
}, {
    id: "GHS",
    displayName: "janaaesche Cedi"
}, {
    id: "JPY",
    displayName: "japaanesche Jen",
    symbol: "JP¥"
}, {
    id: "YER",
    displayName: "jemenitesche Rijal"
}, {
    id: "GEL",
    displayName: "jeorjesche Lari",
    symbol: "₾",
    zero: "jeorjesche LAri",
    one: "jeorjesche LAri",
    other: "jeorjesche LAri"
}, {
    id: "GIP",
    displayName: "jibraltaa’sche Pongk",
    symbol: "£"
}, {
    id: "GTQ",
    displayName: "juatemalesche Quetzal",
    symbol: "Q"
}, {
    id: "KHR",
    displayName: "kambodschaanesche Riel",
    symbol: "៛"
}, {
    id: "CAD",
    displayName: "kannaadesche Dollaa",
    symbol: "CA$"
}, {
    id: "CVE",
    displayName: "kapverdesche Eskuudos",
    zero: "kapverdesche Eskuudos",
    one: "kapverdesche Eskuudos",
    other: "kapverdesche Eskuudos"
}, {
    id: "KZT",
    displayName: "kasakesche Tenge",
    symbol: "₸",
    zero: "kasakstaanesche Tenge",
    one: "kasakstaanesche Tenge",
    other: "kasakstaanesche Tenge"
}, {
    id: "QAR",
    displayName: "kataaresche Rijal"
}, {
    id: "KGS",
    displayName: "kirjiisesche Som"
}, {
    id: "COP",
    displayName: "kolumbesche Peso",
    symbol: "$",
    zero: "kolumbesche Pesos",
    one: "kolumbesche Pesos",
    other: "kolumbesche Pesos"
}, {
    id: "KMF",
    displayName: "kommooresche Frang",
    symbol: "CF"
}, {
    id: "CDF",
    displayName: "kongjoleesesche Frang"
}, {
    id: "CRC",
    displayName: "koßtarikaanesche Colón",
    symbol: "₡",
    zero: "Kaßtarikaanesche Colón",
    one: "Kaßtarikaanesche Colón",
    other: "Kaßtarikaanesche Colón"
}, {
    id: "HRK",
    displayName: "krowaatesche Kuna",
    symbol: "kn"
}, {
    id: "CUP",
    displayName: "kubaanesche Peesos",
    symbol: "$",
    zero: "kubaanesche Peesos",
    one: "kubaanesche Peesos",
    other: "kubaanesche Peesos"
}, {
    id: "KWD",
    displayName: "kuwaitesche Denaa"
}, {
    id: "LSL",
    displayName: "lesoothesche Loti"
}, {
    id: "LBP",
    displayName: "libaneesesche Pongk",
    symbol: "L£"
}, {
    id: "LRD",
    displayName: "liberijaanesche Dollaa",
    symbol: "$"
}, {
    id: "LYD",
    displayName: "libesche Denaa"
}, {
    id: "LTL",
    displayName: "littouesche Litas",
    symbol: "Lt"
}, {
    id: "LAK",
    displayName: "loaatesche Kip",
    symbol: "₭"
}, {
    id: "LVL",
    displayName: "lättesche Lats",
    symbol: "Ls"
}, {
    id: "MGA",
    displayName: "madajaskesche Ariary",
    symbol: "Ar"
}, {
    id: "MOP",
    displayName: "makaneesesche Pataca"
}, {
    id: "MWK",
    displayName: "malaawesche Kwache"
}, {
    id: "MYR",
    displayName: "malaisesche Ringgit",
    symbol: "RM"
}, {
    id: "MVR",
    displayName: "mallediivesche Rufiyaa"
}, {
    id: "MAD",
    displayName: "marrokaanesche Dirhamm"
}, {
    id: "MRO",
    displayName: "mauretanesche Ouguiya"
}, {
    id: "MUR",
    displayName: "maurizjahnesche Ruupije",
    symbol: "Rs"
}, {
    id: "MKD",
    displayName: "mazedoonesche Denaa"
}, {
    id: "MXN",
    displayName: "mexekaanesche Peeso",
    symbol: "MX$",
    zero: "mexekaanesche Peeso",
    one: "mexekaanesche Peeso",
    other: "mexekaanesche Peeso"
}, {
    id: "MDL",
    displayName: "moldaavesche Leu"
}, {
    id: "MNT",
    displayName: "mongjoolesche Tugrik",
    symbol: "₮"
}, {
    id: "MZM",
    displayName: "mosambikaanesche Metical (1980–2006)"
}, {
    id: "MZN",
    displayName: "mossambikaanesche Metical"
}, {
    id: "NAD",
    displayName: "namiibesche Dollaa",
    symbol: "$"
}, {
    id: "ANG",
    displayName: "neederlängsch antillesche Jullde"
}, {
    id: "NPR",
    displayName: "nepaleesesche Ruupije",
    symbol: "Rs"
}, {
    id: "TWD",
    displayName: "neu taiwaneesesche Dollaa",
    symbol: "NT$"
}, {
    id: "NZD",
    displayName: "neuseeländesche Dollaa",
    symbol: "NZ$"
}, {
    id: "NGN",
    displayName: "nijerijaanesche Naira",
    symbol: "₦"
}, {
    id: "NIO",
    displayName: "nikarajaanesche Córdoba",
    symbol: "C$",
    zero: "nikarajaanesche Córdoba",
    one: "nikarajaanesche Córdoba",
    other: "nikarajaanesche Córdoba"
}, {
    id: "KPW",
    displayName: "noodkorejaansche Won",
    symbol: "₩"
}, {
    id: "NOK",
    displayName: "norrweejesche Kruhne",
    symbol: "kr",
    zero: "norrweejesche Kruhne",
    one: "norrweejesche Kruhne",
    other: "norrweejesche Kruhne"
}, {
    id: "OMR",
    displayName: "ommaanesche Rijal"
}, {
    id: "XXX",
    displayName: "onbikannte Währong"
}, {
    id: "XCD",
    displayName: "oß-karribbesche Dollaa",
    symbol: "EC$"
}, {
    id: "PKR",
    displayName: "pakestaanesche Ruupije",
    symbol: "Rs"
}, {
    id: "PAB",
    displayName: "pannameesesche Balboa",
    zero: "pannameesesche Balboa",
    one: "pannameesesche Balboa",
    other: "pannameesesche Balboa"
}, {
    id: "PGK",
    displayName: "papua neujinejaanesche Kina"
}, {
    id: "PYG",
    displayName: "parajuaanesche Juarani",
    symbol: "₲"
}, {
    id: "PEN",
    displayName: "perruaanesche Nuevo Sol"
}, {
    id: "IRR",
    displayName: "persesche Rial"
}, {
    id: "XPF",
    displayName: "polineesesche Frang",
    symbol: "CFPF",
    zero: "polineesesche Frang",
    one: "polineesesche Frang",
    other: "polineesesche Frang"
}, {
    id: "PLN",
    displayName: "polnesche Złoty",
    symbol: "zł",
    zero: "polnesche Złoty",
    one: "polnesche Złoty",
    other: "polnesche Złoty"
}, {
    id: "RON",
    displayName: "romäänesche Leu"
}, {
    id: "ROL",
    displayName: "romäänesche Leu (1952–2006)"
}, {
    id: "RWF",
    displayName: "ruandesche Frang",
    symbol: "RF"
}, {
    id: "RUB",
    displayName: "russesche Ruubel",
    symbol: "₽"
}, {
    id: "ZMW",
    displayName: "sambesche Kwacha",
    symbol: "ZK"
}, {
    id: "ZMK",
    displayName: "sambesche Kwacha (1968–2012)"
}, {
    id: "WST",
    displayName: "samowaanesche Tala"
}, {
    id: "SAR",
    displayName: "saudesche Rijal"
}, {
    id: "CLP",
    displayName: "schileenesche Peeso",
    symbol: "$",
    zero: "schileenesche Peesos",
    one: "schileenesche Peesos",
    other: "schileenesche Peesos"
}, {
    id: "CNY",
    displayName: "schineesesche Yuan Renminbi",
    symbol: "CN¥"
}, {
    id: "LKR",
    displayName: "schrilankesche Ruupije",
    symbol: "Rs",
    zero: "schri-lankesche Ruupije",
    one: "schri-lankesche Ruupije",
    other: "schri-lankesche Ruupije"
}, {
    id: "SEK",
    displayName: "schweedesche Kruhne",
    symbol: "kr",
    zero: "schweedesche Kruhne",
    one: "schweedesche Kruhne",
    other: "schweedesche Kruhne"
}, {
    id: "CHF",
    displayName: "schweijzer Fränkli"
}, {
    id: "SCR",
    displayName: "seischellesche Ruupije"
}, {
    id: "ZWD",
    displayName: "simbabwesche Dollaa (1980–2008)"
}, {
    id: "ZWL",
    displayName: "simbabwesche Dollaa (2009)"
}, {
    id: "SGD",
    displayName: "singjapurejaanesche Dollaa",
    symbol: "$"
}, {
    id: "SBD",
    displayName: "solomonesche Dollaa",
    symbol: "$"
}, {
    id: "SOS",
    displayName: "somaalesche Schillenge",
    zero: "somaalesche Schillenge",
    one: "somaalesche Schillenge",
    other: "somaalesche Schillenge"
}, {
    id: "SDG",
    displayName: "sudaneesesche Pongk"
}, {
    id: "SZL",
    displayName: "swasiländesche Lilangeni"
}, {
    id: "RSD",
    displayName: "särbesche Denaare"
}, {
    id: "ZAR",
    displayName: "södaffrekaanesche Rand",
    symbol: "R"
}, {
    id: "SSP",
    displayName: "södsudaneesesche Pongk",
    symbol: "£",
    zero: "södsudaneesesche Pongk",
    one: "södsudaneesesche Pongk",
    other: "södsudaneesesche Pongk"
}, {
    id: "KRW",
    displayName: "söödkorejaansche Won",
    symbol: "₩"
}, {
    id: "SRD",
    displayName: "sürinameesesche Dollaa",
    symbol: "$"
}, {
    id: "SYP",
    displayName: "süüresche Pund",
    symbol: "£"
}, {
    id: "TJS",
    displayName: "tadschikißtaanesche Somoni"
}, {
    id: "THB",
    displayName: "tailändesche Baht",
    symbol: "฿"
}, {
    id: "TZS",
    displayName: "tansaanesche Schillenge",
    zero: "tansaanesche Schillenge",
    one: "tansaanesche Schillenge",
    other: "tansaanesche Schillenge"
}, {
    id: "TOP",
    displayName: "tongjanes Paʻangache",
    symbol: "T$"
}, {
    id: "CZK",
    displayName: "tschäschesche Kruhne",
    symbol: "Kč",
    zero: "tschäschesche Kruhne",
    one: "tschäschesche Kruhne",
    other: "tschäschesche Kruhne"
}, {
    id: "TND",
    displayName: "tuneesesche Denaa"
}, {
    id: "TMT",
    displayName: "turkmeneßtaanesche Manat",
    zero: "turkmeneßtaanesche Manat",
    one: "turkmeneßtaanesche Manat",
    other: "turkmeneßtaanesche Manat"
}, {
    id: "TMM",
    displayName: "turkmeneßtaanesche Manat (1993–2009)"
}, {
    id: "TRY",
    displayName: "törkesche Liire",
    symbol: "₺"
}, {
    id: "UGX",
    displayName: "ujandesche Schillenge",
    zero: "ujandesche Schillenge",
    one: "ujandesche Schillenge",
    other: "ujandesche Schillenge"
}, {
    id: "UAH",
    displayName: "ukraijnesche Hryvnia",
    symbol: "₴"
}, {
    id: "HUF",
    displayName: "unjarresche Forint",
    symbol: "Ft"
}, {
    id: "UYU",
    displayName: "urrujuwaische Peeso",
    symbol: "$",
    zero: "urrujuwaische Peeso",
    one: "urrujuwaische Peeso",
    other: "urrujuwaische Peeso"
}, {
    id: "UZS",
    displayName: "ußbeekesche Som"
}, {
    id: "VUV",
    displayName: "vanuatesche Vatu"
}, {
    id: "VEF",
    displayName: "venezuelaanesche Bolívar",
    symbol: "Bs"
}, {
    id: "VND",
    displayName: "vijätnammeesesche Dong",
    symbol: "₫"
}, {
    id: "BYR",
    displayName: "wiißrußesche Rubel",
    symbol: "р."
}, {
    id: "EEK",
    displayName: "Äßnesche Kruhne"
}, {
    id: "SKK",
    displayName: "ßlovaakesche Kruhne"
}, {
    id: "EGP",
    displayName: "äjiptesche Pongk",
    symbol: "E£"
}, {
    id: "ETB",
    displayName: "ätejoopesche Birr"
}, {
    id: "BAM",
    displayName: "ömtuuschbaa Mark us Boßnije un dä Hächejovvina",
    symbol: "KM",
    zero: "öpmtuuschbaa Mark us Boßnije un dä Hächejovvina",
    one: "öpmtuuschbaa Mark us Boßnije un dä Hächejovvina",
    other: "öpmtuuschbaa Mark us Boßnije un dä Hächejovvina"
}, {
    id: "CUC",
    displayName: "ömtuuschbaa kubaanesche Pesos",
    symbol: "$",
    zero: "ömtuuschbaa kubaanesche Pesos",
    one: "ömtuuschbaa kubaanesche Pesos",
    other: "ömtuuschbaa kubaanesche Pesos"
}, {
    id: "SLL",
    displayName: "ẞjärra-lejoneesesche Leone"
} ];

module.exports = inter;