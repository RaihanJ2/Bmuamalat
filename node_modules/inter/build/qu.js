function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _5nuc1 = {
    "default": "#,##0 %"
}, _5nuc2 = {
    am: "a.m.",
    pm: "p.m."
}, _5nuc3 = [ "Q1", "Q2", "Q3", "Q4" ], _5nuc4 = {
    all: {
        leap: "{0}bis"
    }
}, _5nuc5 = {
    a: "h a – h a",
    h: "h–h a"
}, _5nuc6 = {
    displayName: "Dayperiod"
}, _5nuc7 = [ "Before R.O.C.", "R.O.C." ], _5nuc8 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _5nuc9 = [ "D", "L", "M", "X", "J", "V", "S" ], _5nuc10 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _5nuc11 = {
    displayName: "Day of the Week"
}, _5nuc12 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _5nuc13 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _5nuc14 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _5nuc15 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _5nuc16 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _5nuc17 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _5nuc18 = {
    M: "G y MMM–MMM",
    y: "G y MMM – y MMM"
}, _5nuc19 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _5nuc20 = {
    M: "G y MMMM–MMMM",
    y: "G y MMMM – y MMMM"
}, _5nuc21 = {
    "0": "today",
    "1": "tomorrow",
    "-1": "yesterday"
}, _5nuc22 = [ "Dom", "Lun", "Mar", "Mié", "Jue", "Vie", "Sab" ], _5nuc23 = {
    M: "GGGGG y-MM – y-MM",
    y: "GGGGG y-MM – y-MM"
}, _5nuc24 = {
    "0": "this year",
    "1": "next year",
    "-1": "last year"
}, _5nuc25 = {
    "0": "this week",
    "1": "next week",
    "-1": "last week"
}, _5nuc26 = {
    future: {
        other: "+{0} y"
    },
    past: {
        other: "-{0} y"
    }
}, _5nuc27 = {
    future: {
        other: "+{0} Q"
    },
    past: {
        other: "-{0} Q"
    }
}, _5nuc28 = {
    future: {
        other: "+{0} m"
    },
    past: {
        other: "-{0} m"
    }
}, _5nuc29 = {
    future: {
        other: "+{0} w"
    },
    past: {
        other: "-{0} w"
    }
}, _5nuc30 = {
    future: {
        other: "+{0} d"
    },
    past: {
        other: "-{0} d"
    }
}, _5nuc31 = {
    future: {
        other: "+{0} h"
    },
    past: {
        other: "-{0} h"
    }
}, _5nuc32 = {
    future: {
        other: "+{0} s"
    },
    past: {
        other: "-{0} s"
    }
}, _5nuc33 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _5nuc34 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _5nuc35 = {
    "0": "this month",
    "1": "next month",
    "-1": "last month"
}, _5nuc36 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _5nuc37 = {
    future: {
        other: "+{0} min"
    },
    past: {
        other: "-{0} min"
    }
}, _5nuc38 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _5nuc39 = {
    "0": "this Sunday",
    "1": "next Sunday",
    "-1": "last Sunday"
}, _5nuc40 = {
    "0": "this Monday",
    "1": "next Monday",
    "-1": "last Monday"
}, _5nuc41 = {
    "0": "this Friday",
    "1": "next Friday",
    "-1": "last Friday"
}, _5nuc42 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _5nuc43 = {
    id: "CC",
    displayName: "Islas Cocos",
    hasTimeZones: true
}, _5nuc44 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _5nuc45 = {
    "0": "this Tuesday",
    "1": "next Tuesday",
    "-1": "last Tuesday"
}, _5nuc46 = {
    id: "CX",
    displayName: "Isla Christmas",
    hasTimeZones: true
}, _5nuc47 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _5nuc48 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _5nuc49 = {
    "0": "this Thursday",
    "1": "next Thursday",
    "-1": "last Thursday"
}, _5nuc50 = {
    "0": "this Saturday",
    "1": "next Saturday",
    "-1": "last Saturday"
}, _5nuc51 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _5nuc52 = {
    "0": "this Wednesday",
    "1": "next Wednesday",
    "-1": "last Wednesday"
}, _5nuc53 = {
    id: "TD",
    displayName: "Chad",
    regionId: "017",
    hasTimeZones: true
}, _5nuc54 = {
    id: "CU",
    displayName: "Cuba",
    regionId: "029",
    hasTimeZones: true
}, _5nuc55 = {
    id: "FJ",
    displayName: "Fiyi",
    regionId: "054",
    hasTimeZones: true
}, _5nuc56 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _5nuc57 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _5nuc58 = {
    id: "IR",
    displayName: "Irán",
    regionId: "034",
    hasTimeZones: true
}, _5nuc59 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _5nuc60 = {
    id: "ML",
    displayName: "Malí",
    regionId: "011",
    hasTimeZones: true
}, _5nuc61 = {
    id: "OM",
    displayName: "Omán",
    regionId: "145",
    hasTimeZones: true
}, _5nuc62 = {
    id: "PE",
    displayName: "Perú",
    regionId: "005",
    hasTimeZones: true
}, _5nuc63 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _5nuc64 = {
    id: "BJ",
    displayName: "Benín",
    regionId: "011",
    hasTimeZones: true
}, _5nuc65 = {
    id: "BT",
    displayName: "Bután",
    regionId: "034",
    hasTimeZones: true
}, _5nuc66 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _5nuc67 = {
    id: "CN",
    displayName: "China",
    regionId: "030",
    hasTimeZones: true
}, _5nuc68 = {
    id: "CG",
    displayName: "Congo",
    regionId: "017",
    hasTimeZones: true
}, _5nuc69 = {
    id: "GA",
    displayName: "Gabón",
    regionId: "017",
    hasTimeZones: true
}, _5nuc70 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _5nuc71 = {
    id: "HT",
    displayName: "Haití",
    regionId: "029",
    hasTimeZones: true
}, _5nuc72 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _5nuc73 = {
    id: "KE",
    displayName: "Kenia",
    regionId: "014",
    hasTimeZones: true
}, _5nuc74 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _5nuc75 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _5nuc76 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _5nuc77 = {
    id: "NE",
    displayName: "Níger",
    regionId: "011",
    hasTimeZones: true
}, _5nuc78 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _5nuc79 = {
    id: "RU",
    displayName: "Rusia",
    regionId: "151",
    hasTimeZones: true
}, _5nuc80 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _5nuc81 = {
    id: "SY",
    displayName: "Siria",
    regionId: "145",
    hasTimeZones: true
}, _5nuc82 = {
    id: "SD",
    displayName: "Sudán",
    regionId: "015",
    hasTimeZones: true
}, _5nuc83 = {
    id: "CH",
    displayName: "Suiza",
    regionId: "155",
    hasTimeZones: true
}, _5nuc84 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _5nuc85 = {
    id: "TN",
    displayName: "Túnez",
    regionId: "015",
    hasTimeZones: true
}, _5nuc86 = {
    id: "YE",
    displayName: "Yemen",
    regionId: "145",
    hasTimeZones: true
}, _5nuc87 = {
    d: "G y MMM d–d",
    M: "G y MMM d – MMM d",
    y: "G y MMM d – y MMM d"
}, _5nuc88 = {
    relative: _5nuc39
}, _5nuc89 = {
    relative: _5nuc40
}, _5nuc90 = {
    relative: _5nuc41
}, _5nuc91 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _5nuc92 = {
    id: "BH",
    displayName: "Baréin",
    regionId: "145",
    hasTimeZones: true
}, _5nuc93 = {
    id: "BR",
    displayName: "Brasil",
    regionId: "005",
    hasTimeZones: true
}, _5nuc94 = {
    id: "BN",
    displayName: "Brunéi",
    regionId: "035",
    hasTimeZones: true
}, _5nuc95 = {
    id: "CY",
    displayName: "Chipre",
    regionId: "145",
    hasTimeZones: true
}, _5nuc96 = {
    id: "EG",
    displayName: "Egipto",
    regionId: "015",
    hasTimeZones: true
}, _5nuc97 = {
    id: "ES",
    displayName: "España",
    regionId: "039",
    hasTimeZones: true
}, _5nuc98 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _5nuc99 = {
    id: "GR",
    displayName: "Grecia",
    regionId: "039",
    hasTimeZones: true
}, _5nuc100 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _5nuc101 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _5nuc102 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _5nuc103 = {
    id: "IT",
    displayName: "Italia",
    regionId: "039",
    hasTimeZones: true
}, _5nuc104 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _5nuc105 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _5nuc106 = {
    id: "LS",
    displayName: "Lesoto",
    regionId: "018",
    hasTimeZones: true
}, _5nuc107 = {
    id: "LB",
    displayName: "Líbano",
    regionId: "145",
    hasTimeZones: true
}, _5nuc108 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _5nuc109 = {
    id: "MX",
    displayName: "México",
    regionId: "013",
    hasTimeZones: true
}, _5nuc110 = {
    id: "MC",
    displayName: "Mónaco",
    regionId: "155",
    hasTimeZones: true
}, _5nuc111 = {
    id: "PW",
    displayName: "Palaos",
    regionId: "057",
    hasTimeZones: true
}, _5nuc112 = {
    id: "PA",
    displayName: "Panamá",
    regionId: "013",
    hasTimeZones: true
}, _5nuc113 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _5nuc114 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _5nuc115 = {
    id: "SE",
    displayName: "Suecia",
    regionId: "154",
    hasTimeZones: true
}, _5nuc116 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _5nuc117 = {
    id: "DJ",
    displayName: "Yibuti",
    regionId: "014",
    hasTimeZones: true
}, _5nuc118 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _5nuc119 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _5nuc120 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _5nuc121 = {
    id: "DZ",
    displayName: "Argelia",
    regionId: "015",
    hasTimeZones: true
}, _5nuc122 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _5nuc123 = {
    id: "AT",
    displayName: "Austria",
    regionId: "155",
    hasTimeZones: true
}, _5nuc124 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _5nuc125 = {
    id: "BY",
    displayName: "Belarús",
    regionId: "151",
    hasTimeZones: true
}, _5nuc126 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _5nuc127 = {
    id: "BQ",
    displayName: "Bonaire",
    regionId: "029",
    hasTimeZones: true
}, _5nuc128 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _5nuc129 = {
    id: "BE",
    displayName: "Bélgica",
    regionId: "155",
    hasTimeZones: true
}, _5nuc130 = {
    id: "KH",
    displayName: "Camboya",
    regionId: "035",
    hasTimeZones: true
}, _5nuc131 = {
    id: "CM",
    displayName: "Camerún",
    regionId: "017",
    hasTimeZones: true
}, _5nuc132 = {
    id: "KM",
    displayName: "Comoras",
    regionId: "014",
    hasTimeZones: true
}, _5nuc133 = {
    id: "HR",
    displayName: "Croacia",
    regionId: "039",
    hasTimeZones: true
}, _5nuc134 = {
    id: "CW",
    displayName: "Curazao",
    regionId: "029",
    hasTimeZones: true
}, _5nuc135 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _5nuc136 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _5nuc137 = {
    id: "EE",
    displayName: "Estonia",
    regionId: "154",
    hasTimeZones: true
}, _5nuc138 = {
    id: "ET",
    displayName: "Etiopía",
    regionId: "014",
    hasTimeZones: true
}, _5nuc139 = {
    id: "FR",
    displayName: "Francia",
    regionId: "155",
    hasTimeZones: true
}, _5nuc140 = {
    id: "LV",
    displayName: "Letonia",
    regionId: "154",
    hasTimeZones: true
}, _5nuc141 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _5nuc142 = {
    id: "MD",
    displayName: "Moldova",
    regionId: "151",
    hasTimeZones: true
}, _5nuc143 = {
    id: "MM",
    displayName: "Myanmar",
    regionId: "035",
    hasTimeZones: true
}, _5nuc144 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _5nuc145 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _5nuc146 = {
    id: "NO",
    displayName: "Noruega",
    regionId: "154",
    hasTimeZones: true
}, _5nuc147 = {
    id: "PL",
    displayName: "Polonia",
    regionId: "151",
    hasTimeZones: true
}, _5nuc148 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _5nuc149 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _5nuc150 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _5nuc151 = {
    id: "TR",
    displayName: "Turquía",
    regionId: "145",
    hasTimeZones: true
}, _5nuc152 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _5nuc153 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _5nuc154 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _5nuc155 = {
    id: "DE",
    displayName: "Alemania",
    regionId: "155",
    hasTimeZones: true
}, _5nuc156 = {
    id: "BW",
    displayName: "Botsuana",
    regionId: "018",
    hasTimeZones: true
}, _5nuc157 = {
    id: "BG",
    displayName: "Bulgaria",
    regionId: "151",
    hasTimeZones: true
}, _5nuc158 = {
    id: "CO",
    displayName: "Colombia",
    regionId: "005",
    hasTimeZones: true
}, _5nuc159 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _5nuc160 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _5nuc161 = {
    id: "IS",
    displayName: "Islandia",
    regionId: "154",
    hasTimeZones: true
}, _5nuc162 = {
    id: "HM",
    displayName: "Islas Heard y McDonald",
    hasTimeZones: false
}, _5nuc163 = {
    id: "JO",
    displayName: "Jordania",
    regionId: "145",
    hasTimeZones: true
}, _5nuc164 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _5nuc165 = {
    id: "LT",
    displayName: "Lituania",
    regionId: "154",
    hasTimeZones: true
}, _5nuc166 = {
    id: "MV",
    displayName: "Maldivas",
    regionId: "034",
    hasTimeZones: true
}, _5nuc167 = {
    id: "MU",
    displayName: "Mauricio",
    regionId: "014",
    hasTimeZones: true
}, _5nuc168 = {
    id: "PK",
    displayName: "Pakistán",
    regionId: "034",
    hasTimeZones: true
}, _5nuc169 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _5nuc170 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _5nuc171 = {
    id: "SG",
    displayName: "Singapur",
    regionId: "035",
    hasTimeZones: true
}, _5nuc172 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _5nuc173 = {
    id: "ZW",
    displayName: "Zimbabue",
    regionId: "014",
    hasTimeZones: true
}, _5nuc174 = {
    relative: _5nuc45
}, _5nuc175 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _5nuc176 = {
    id: "AU",
    displayName: "Australia",
    regionId: "053",
    hasTimeZones: true
}, _5nuc177 = {
    id: "DK",
    displayName: "Dinamarca",
    regionId: "154",
    hasTimeZones: true
}, _5nuc178 = {
    id: "SI",
    displayName: "Eslovenia",
    regionId: "039",
    hasTimeZones: true
}, _5nuc179 = {
    id: "PH",
    displayName: "Filipinas",
    regionId: "035",
    hasTimeZones: true
}, _5nuc180 = {
    id: "FI",
    displayName: "Finlandia",
    regionId: "154",
    hasTimeZones: true
}, _5nuc181 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _5nuc182 = {
    id: "GG",
    displayName: "Guernesey",
    regionId: "154",
    hasTimeZones: true
}, _5nuc183 = {
    id: "ID",
    displayName: "Indonesia",
    regionId: "035",
    hasTimeZones: true
}, _5nuc184 = {
    id: "MO",
    displayName: "Macao RAE",
    regionId: "030",
    hasTimeZones: true
}, _5nuc185 = {
    id: "MA",
    displayName: "Marruecos",
    regionId: "015",
    hasTimeZones: true
}, _5nuc186 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _5nuc187 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _5nuc188 = {
    id: "ZA",
    displayName: "Sudáfrica",
    regionId: "018",
    hasTimeZones: true
}, _5nuc189 = {
    id: "TH",
    displayName: "Tailandia",
    regionId: "035",
    hasTimeZones: true
}, _5nuc190 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _5nuc191 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _5nuc192 = {
    id: "AF",
    displayName: "Afganistán",
    regionId: "034",
    hasTimeZones: true
}, _5nuc193 = {
    id: "AZ",
    displayName: "Azerbaiyán",
    regionId: "145",
    hasTimeZones: true
}, _5nuc194 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _5nuc195 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _5nuc196 = {
    id: "SK",
    displayName: "Eslovaquia",
    regionId: "151",
    hasTimeZones: true
}, _5nuc197 = {
    id: "KZ",
    displayName: "Kazajistán",
    regionId: "143",
    hasTimeZones: true
}, _5nuc198 = {
    id: "KG",
    displayName: "Kirguistán",
    regionId: "143",
    hasTimeZones: true
}, _5nuc199 = {
    id: "LU",
    displayName: "Luxemburgo",
    regionId: "155",
    hasTimeZones: true
}, _5nuc200 = {
    id: "MG",
    displayName: "Madagascar",
    regionId: "014",
    hasTimeZones: true
}, _5nuc201 = {
    id: "MR",
    displayName: "Mauritania",
    regionId: "011",
    hasTimeZones: true
}, _5nuc202 = {
    id: "FM",
    displayName: "Micronesia",
    regionId: "057",
    hasTimeZones: true
}, _5nuc203 = {
    id: "MZ",
    displayName: "Mozambique",
    regionId: "014",
    hasTimeZones: true
}, _5nuc204 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _5nuc205 = {
    id: "MF",
    displayName: "San Martín",
    regionId: "029",
    hasTimeZones: true
}, _5nuc206 = {
    id: "SC",
    displayName: "Seychelles",
    regionId: "014",
    hasTimeZones: true
}, _5nuc207 = {
    id: "TJ",
    displayName: "Tayikistán",
    regionId: "143",
    hasTimeZones: true
}, _5nuc208 = {
    id: "UZ",
    displayName: "Uzbekistán",
    regionId: "143",
    hasTimeZones: true
}, _5nuc209 = [ "Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado" ], _5nuc210 = {
    id: "CD",
    displayName: "Congo (RDC)",
    regionId: "017",
    hasTimeZones: true
}, _5nuc211 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _5nuc212 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _5nuc213 = {
    id: "GB",
    displayName: "Reino Unido",
    regionId: "154",
    hasTimeZones: true
}, _5nuc214 = {
    id: "SZ",
    displayName: "Suazilandia",
    regionId: "018",
    hasTimeZones: true
}, _5nuc215 = {
    id: "TL",
    displayName: "Timor-Leste",
    regionId: "035",
    hasTimeZones: true
}, _5nuc216 = {
    relative: _5nuc49
}, _5nuc217 = {
    relative: _5nuc50
}, _5nuc218 = {
    id: "SA",
    displayName: "Arabia Saudí",
    regionId: "145",
    hasTimeZones: true
}, _5nuc219 = {
    id: "GW",
    displayName: "Guinea-Bisáu",
    regionId: "011",
    hasTimeZones: true
}, _5nuc220 = {
    id: "NF",
    displayName: "Isla Norfolk",
    regionId: "053",
    hasTimeZones: true
}, _5nuc221 = {
    id: "NL",
    displayName: "Países Bajos",
    regionId: "155",
    hasTimeZones: true
}, _5nuc222 = {
    id: "SL",
    displayName: "Sierra Leona",
    regionId: "011",
    hasTimeZones: true
}, _5nuc223 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _5nuc224 = {
    id: "KR",
    displayName: "Corea del Sur",
    regionId: "030",
    hasTimeZones: true
}, _5nuc225 = {
    id: "CI",
    displayName: "Côte d’Ivoire",
    regionId: "011",
    hasTimeZones: true
}, _5nuc226 = {
    id: "MK",
    displayName: "ERY Macedonia",
    regionId: "039",
    hasTimeZones: true
}, _5nuc227 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _5nuc228 = {
    id: "SS",
    displayName: "Sudán del Sur",
    regionId: "014",
    hasTimeZones: true
}, _5nuc229 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _5nuc230 = {
    id: "US",
    displayName: "Estados Unidos",
    regionId: "021",
    hasTimeZones: true
}, _5nuc231 = {
    id: "MH",
    displayName: "Islas Marshall",
    regionId: "057",
    hasTimeZones: true
}, _5nuc232 = {
    id: "PN",
    displayName: "Islas Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _5nuc233 = {
    relative: _5nuc52
}, _5nuc234 = {
    id: "KP",
    displayName: "Corea del Norte",
    regionId: "030",
    hasTimeZones: true
}, _5nuc235 = {
    id: "HK",
    displayName: "Hong Kong (RAE)",
    regionId: "030",
    hasTimeZones: true
}, _5nuc236 = {
    id: "NC",
    displayName: "Nueva Caledonia",
    regionId: "054",
    hasTimeZones: true
}, _5nuc237 = {
    id: "AS",
    displayName: "Samoa Americana",
    regionId: "061",
    hasTimeZones: true
}, _5nuc238 = {
    id: "WF",
    displayName: "Wallis y Futuna",
    regionId: "061",
    hasTimeZones: true
}, _5nuc239 = [ "Qul", "Hat", "Pau", "Ayr", "Aym", "Int", "Ant", "Qha", "Uma", "Kan", "Aya", "Kap" ], _5nuc240 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _5nuc241 = {
    id: "TF",
    displayName: "Territorios Australes Franceses",
    hasTimeZones: true
}, _5nuc242 = {
    id: "GQ",
    displayName: "Guinea Ecuatorial",
    regionId: "017",
    hasTimeZones: true
}, _5nuc243 = {
    id: "TT",
    displayName: "Trinidad y Tobago",
    regionId: "029",
    hasTimeZones: true
}, _5nuc244 = {
    id: "PG",
    displayName: "Papúa Nueva Guinea",
    regionId: "054",
    hasTimeZones: true
}, _5nuc245 = {
    id: "PF",
    displayName: "Polinesia Francesa",
    regionId: "061",
    hasTimeZones: true
}, _5nuc246 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _5nuc247 = {
    id: "PS",
    displayName: "Palestina Kamachikuq",
    regionId: "145",
    hasTimeZones: true
}, _5nuc248 = {
    id: "PM",
    displayName: "San Pedro y Miquelón",
    regionId: "021",
    hasTimeZones: true
}, _5nuc249 = {
    id: "VI",
    displayName: "EE.UU. Islas Vírgenes",
    regionId: "029",
    hasTimeZones: true
}, _5nuc250 = {
    id: "UM",
    displayName: "Islas menores alejadas de los EE.UU.",
    hasTimeZones: true
}, _5nuc251 = {
    id: "ST",
    displayName: "Santo Tomé y Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _5nuc252 = {
    id: "KN",
    displayName: "San Cristóbal y Nieves",
    regionId: "029",
    hasTimeZones: true
}, _5nuc253 = {
    displayName: "Hour",
    relativeTime: _5nuc31
}, _5nuc254 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _5nuc255 = {
    id: "MP",
    displayName: "Islas Marianas del Norte",
    regionId: "057",
    hasTimeZones: true
}, _5nuc256 = {
    d: "GGGGG y-MM-dd – y-MM-dd",
    M: "GGGGG y-MM-dd – y-MM-dd",
    y: "GGGGG y-MM-dd – y-MM-dd"
}, _5nuc257 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _5nuc258 = {
    d: "G y MMM d, E – MMM d, E",
    M: "G y MMM d, E – MMM d, E",
    y: "G y MMM d, E – y MMM d, E"
}, _5nuc259 = {
    abbreviated: _5nuc3,
    narrow: [ "1", "2", "3", "4" ],
    wide: _5nuc3
}, _5nuc260 = {
    displayName: "Minute",
    relativeTime: _5nuc37
}, _5nuc261 = {
    id: "VA",
    displayName: "Santa Sede (Ciudad del Vaticano)",
    regionId: "039",
    hasTimeZones: true
}, _5nuc262 = {
    abbreviated: _5nuc2,
    narrow: _5nuc2,
    wide: _5nuc2
}, _5nuc263 = {
    displayName: "Second",
    relative: [ "now" ],
    relativeTime: _5nuc32
}, _5nuc264 = {
    d: "GGGGG y-MM-dd, E – y-MM-dd, E",
    M: "GGGGG y-MM-dd, E – y-MM-dd, E",
    y: "GGGGG y-MM-dd, E – y-MM-dd, E"
}, _5nuc265 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _5nuc266 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _5nuc267 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _5nuc268 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _5nuc269 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _5nuc270 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _5nuc271 = {
    displayName: "Day",
    relative: _5nuc21,
    relativeTime: _5nuc30
}, _5nuc272 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _5nuc273 = {
    displayName: "Year",
    relative: _5nuc24,
    relativeTime: _5nuc26
}, _5nuc274 = {
    displayName: "Week",
    relative: _5nuc25,
    relativeTime: _5nuc29
}, _5nuc275 = {
    displayName: "Month",
    relative: _5nuc35,
    relativeTime: _5nuc28
}, _5nuc276 = {
    displayName: "Quarter",
    relative: _5nuc44,
    relativeTime: _5nuc27
}, _5nuc277 = [ "Qulla puquy", "Hatun puquy", "Pauqar waray", "Ayriwa", "Aymuray", "Inti raymi", "Anta Sitwa", "Qhapaq Sitwa", "Uma raymi", "Kantaray", "Ayamarqʼa", "Kapaq Raymi" ], _5nuc278 = {
    decimal: ".",
    group: ",",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    list: "؛",
    timeSeparator: ":"
}, _5nuc279 = {
    decimal: ".",
    group: ",",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    list: ";",
    timeSeparator: ":"
}, _5nuc280 = {
    symbols: _5nuc278
}, _5nuc281 = {
    format: _5nuc229,
    numeric: _5nuc4,
    standAlone: _5nuc229
}, _5nuc282 = {
    format: _5nuc259,
    standAlone: _5nuc259
}, _5nuc283 = {
    format: _5nuc262,
    standAlone: _5nuc262
}, _5nuc284 = {
    symbols: _5nuc278,
    digits: "renderSpelloutCardinal"
}, _5nuc285 = {
    abbreviated: _5nuc22,
    narrow: _5nuc9,
    wide: _5nuc209,
    "short": _5nuc22
}, _5nuc286 = {
    "1000": {
        other: "0K"
    },
    "10000": {
        other: "00K"
    },
    "100000": {
        other: "000K"
    },
    "1000000": {
        other: "0M"
    },
    "10000000": {
        other: "00M"
    },
    "100000000": {
        other: "000M"
    },
    "1000000000": {
        other: "0G"
    },
    "10000000000": {
        other: "00G"
    },
    "100000000000": {
        other: "000G"
    },
    "1000000000000": {
        other: "0T"
    },
    "10000000000000": {
        other: "00T"
    },
    "100000000000000": {
        other: "000T"
    }
}, _5nuc287 = {
    symbols: _5nuc278,
    digits: "renderSpelloutCardinalFinancial"
}, _5nuc288 = {
    abbreviated: _5nuc240,
    narrow: _5nuc38,
    wide: _5nuc240
}, _5nuc289 = {
    "1000": {
        other: "¤ 0K"
    },
    "10000": {
        other: "¤ 00K"
    },
    "100000": {
        other: "¤ 000K"
    },
    "1000000": {
        other: "¤ 0M"
    },
    "10000000": {
        other: "¤ 00M"
    },
    "100000000": {
        other: "¤ 000M"
    },
    "1000000000": {
        other: "¤ 0G"
    },
    "10000000000": {
        other: "¤ 00G"
    },
    "100000000000": {
        other: "¤ 000G"
    },
    "1000000000000": {
        other: "¤ 0T"
    },
    "10000000000000": {
        other: "¤ 00T"
    },
    "100000000000000": {
        other: "¤ 000T"
    }
}, _5nuc290 = {
    abbreviated: _5nuc246,
    narrow: _5nuc246,
    wide: _5nuc246
}, _5nuc291 = {
    format: _5nuc290
}, _5nuc292 = {
    abbreviated: _5nuc266,
    narrow: _5nuc48,
    wide: _5nuc266
}, _5nuc293 = {
    abbreviated: _5nuc267,
    narrow: _5nuc38,
    wide: _5nuc267
}, _5nuc294 = {
    abbreviated: _5nuc239,
    narrow: _5nuc38,
    wide: _5nuc277
}, _5nuc295 = {
    abbreviated: _5nuc268,
    narrow: _5nuc48,
    wide: _5nuc268
}, _5nuc296 = {
    abbreviated: _5nuc265,
    narrow: _5nuc38,
    wide: _5nuc272
}, _5nuc297 = {
    abbreviated: _5nuc269,
    narrow: _5nuc48,
    wide: _5nuc269
}, _5nuc298 = {
    abbreviated: _5nuc270,
    narrow: _5nuc38,
    wide: _5nuc270
}, _5nuc299 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _5nuc300 = {
    format: _5nuc285,
    standAlone: _5nuc285
}, _5nuc301 = {
    format: _5nuc288,
    standAlone: _5nuc288
}, _5nuc302 = {
    "long": _5nuc286,
    "short": _5nuc286,
    "default": "#,##0.###"
}, _5nuc303 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _5nuc304 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _5nuc305 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _5nuc306 = {
    format: _5nuc294,
    standAlone: _5nuc294
}, _5nuc307 = {
    format: _5nuc296,
    standAlone: _5nuc296
}, _5nuc308 = {
    basic: _5nuc299,
    cldr: _5nuc303
}, _5nuc309 = {
    d: {
        d: "d–d"
    },
    h: _5nuc5,
    H: {
        H: "HH–HH"
    },
    hm: _5nuc42,
    Hm: _5nuc13,
    hmv: _5nuc51,
    Hmv: _5nuc16,
    hv: _5nuc8,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _5nuc17,
    MEd: _5nuc33,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _5nuc10,
    MMMEd: _5nuc34,
    y: {
        y: "U–U"
    },
    yM: _5nuc14,
    yMd: _5nuc191,
    yMEd: _5nuc257,
    yMMM: _5nuc15,
    yMMMd: _5nuc47,
    yMMMEd: _5nuc254,
    yMMMM: _5nuc19
}, _5nuc310 = {
    d: {
        d: "d–d"
    },
    h: _5nuc5,
    H: {
        H: "HH–HH"
    },
    hm: _5nuc42,
    Hm: _5nuc13,
    hmv: _5nuc51,
    Hmv: _5nuc16,
    hv: _5nuc8,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _5nuc17,
    MEd: _5nuc33,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _5nuc10,
    MMMEd: _5nuc34,
    y: {
        y: "G y–y"
    },
    yM: _5nuc23,
    yMd: _5nuc256,
    yMEd: _5nuc264,
    yMMM: _5nuc18,
    yMMMd: _5nuc87,
    yMMMEd: _5nuc258,
    yMMMM: _5nuc20
}, _5nuc311 = {
    beforeCurrency: _5nuc304,
    afterCurrency: _5nuc304
}, _5nuc312 = {
    "short": _5nuc289,
    "default": "¤ #,##0.00",
    other: "{0} {1}",
    currencySpacing: _5nuc311
}, _5nuc313 = {
    era: {
        displayName: "Era"
    },
    year: _5nuc273,
    quarter: _5nuc276,
    month: _5nuc275,
    week: _5nuc274,
    day: _5nuc271,
    weekday: _5nuc11,
    dayperiod: _5nuc6,
    hour: _5nuc253,
    minute: _5nuc260,
    second: _5nuc263,
    zone: {
        displayName: "Zone"
    },
    sun: _5nuc88,
    mon: _5nuc89,
    tue: _5nuc174,
    wed: _5nuc233,
    thu: _5nuc216,
    fri: _5nuc90,
    sat: _5nuc217
}, _5nuc314 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _5nuc313
}, _5nuc315 = {
    abbreviated: _5nuc305,
    narrow: _5nuc305,
    wide: _5nuc305
}, _5nuc316 = {
    format: _5nuc315
}, _5nuc317 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _5nuc302,
    currency: _5nuc312,
    percent: _5nuc1
}, _5nuc318 = {
    dateFormats: P.calendars.buddhist.dateFormats,
    datePartsOrder: "ymd",
    dateIntervalFormats: _5nuc310,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _5nuc300,
    dayPeriods: _5nuc283,
    monthNames: _5nuc307,
    eraNames: _5nuc12,
    quarterNames: _5nuc282,
    fields: _5nuc313
}, _5nuc319 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _5nuc320 = {
    dayParts: _5nuc291,
    days: _5nuc316,
    months: _5nuc316,
    years: _5nuc316,
    zodiacs: _5nuc291
}, _5nuc321 = {
    dateFormats: _5nuc308,
    datePartsOrder: "md",
    dateIntervalFormats: _5nuc309,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _5nuc300,
    dayPeriods: _5nuc283,
    cyclicNames: _5nuc320,
    monthNames: _5nuc301,
    monthPatterns: _5nuc281,
    quarterNames: _5nuc282,
    fields: _5nuc313
}, _5nuc322 = [ _5nuc192, _5nuc119, _5nuc155, _5nuc120, _5nuc91, _5nuc218, _5nuc121, _5nuc175, _5nuc122, _5nuc176, _5nuc123, _5nuc193, _5nuc124, _5nuc194, _5nuc92, _5nuc125, _5nuc64, _5nuc126, _5nuc127, _5nuc156, _5nuc93, _5nuc94, _5nuc157, _5nuc128, _5nuc65, _5nuc129, _5nuc130, _5nuc131, _5nuc53, _5nuc66, _5nuc67, _5nuc95, _5nuc158, _5nuc132, _5nuc68, _5nuc210, _5nuc234, _5nuc224, _5nuc195, _5nuc133, _5nuc54, _5nuc134, _5nuc225, _5nuc177, _5nuc159, _5nuc249, _5nuc226, _5nuc135, _5nuc96, _5nuc211, _5nuc136, _5nuc196, _5nuc178, _5nuc97, _5nuc230, _5nuc137, _5nuc138, _5nuc179, _5nuc180, _5nuc55, _5nuc139, _5nuc69, _5nuc98, _5nuc70, _5nuc99, _5nuc56, _5nuc181, _5nuc182, _5nuc100, _5nuc242, _5nuc219, _5nuc101, _5nuc71, _5nuc160, _5nuc235, _5nuc72, _5nuc183, _5nuc57, _5nuc58, _5nuc46, _5nuc220, _5nuc161, _5nuc43, _5nuc162, _5nuc255, _5nuc231, _5nuc232, _5nuc250, _5nuc102, _5nuc103, _5nuc104, _5nuc163, _5nuc197, _5nuc73, _5nuc198, _5nuc164, _5nuc105, _5nuc59, _5nuc106, _5nuc140, _5nuc141, _5nuc227, _5nuc165, _5nuc199, _5nuc107, _5nuc184, _5nuc200, _5nuc108, _5nuc166, _5nuc74, _5nuc60, _5nuc185, _5nuc167, _5nuc201, _5nuc202, _5nuc142, _5nuc203, _5nuc143, _5nuc109, _5nuc110, _5nuc144, _5nuc75, _5nuc76, _5nuc186, _5nuc145, _5nuc146, _5nuc236, _5nuc77, _5nuc61, _5nuc168, _5nuc111, _5nuc247, _5nuc112, _5nuc244, _5nuc169, _5nuc221, _5nuc62, _5nuc245, _5nuc147, _5nuc170, _5nuc212, _5nuc78, _5nuc213, _5nuc113, _5nuc79, _5nuc80, _5nuc237, _5nuc252, _5nuc204, _5nuc205, _5nuc248, _5nuc261, _5nuc251, _5nuc148, _5nuc114, _5nuc206, _5nuc222, _5nuc171, _5nuc223, _5nuc81, _5nuc149, _5nuc187, _5nuc214, _5nuc188, _5nuc82, _5nuc228, _5nuc115, _5nuc83, _5nuc150, _5nuc189, _5nuc172, _5nuc207, _5nuc241, _5nuc215, _5nuc63, _5nuc84, _5nuc243, _5nuc151, _5nuc85, _5nuc116, _5nuc152, _5nuc208, _5nuc153, _5nuc190, _5nuc154, _5nuc238, _5nuc86, _5nuc117, _5nuc118, _5nuc173 ];

inter.id = "qu";

inter.characters = {
    exemplar: {
        "default": [ "a", "{ch}", "{chʼ}", "h", "i", "k", "{kʼ}", "l", "{ll}", "m", "n", "ñ", "p", "{pʼ}", "q", "{qʼ}", "s", "t", "{tʼ}", "u", "w", "y" ],
        auxiliary: [ "á", "à", "ă", "â", "å", "ä", "ã", "ā", "æ", "b", "c", "ç", "d", "e", "é", "è", "ĕ", "ê", "ë", "ē", "f", "g", "í", "ì", "ĭ", "î", "ï", "ī", "j", "o", "ó", "ò", "ŏ", "ô", "ö", "ø", "ō", "œ", "r", "ú", "ù", "ŭ", "û", "ü", "ū", "v", "x", "ÿ", "z" ],
        index: [ "A", "{Ch}", "H", "I", "K", "L", "{Ll}", "M", "N", "Ñ", "P", "Q", "S", "T", "U", "W", "Y" ],
        punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "(", ")", "\\[", "\\]", "\\{", "\\}" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _5nuc278,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _5nuc317,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _5nuc317,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _5nuc278,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _5nuc278,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _5nuc278,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _5nuc278,
        digits: "renderEthiopic"
    },
    finance: _5nuc280,
    fullwide: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _5nuc278,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _5nuc278,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _5nuc278,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _5nuc278,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _5nuc284,
    hansfin: _5nuc287,
    hant: _5nuc284,
    hantfin: _5nuc287,
    hebr: {
        symbols: _5nuc278,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _5nuc278,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _5nuc284,
    jpanfin: _5nuc287,
    kali: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _5nuc278,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _5nuc278,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _5nuc278,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _5nuc278,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _5nuc278,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _5nuc278,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _5nuc278,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _5nuc278,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _5nuc280,
    nkoo: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _5nuc278,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _5nuc278,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _5nuc278,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _5nuc278,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _5nuc278,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _5nuc278,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _5nuc280,
    vaii: {
        symbols: _5nuc279,
        formats: _5nuc317,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _5nuc278,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5nuc310,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5nuc300,
        dayPeriods: _5nuc283,
        monthNames: _5nuc306,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _5nuc282,
        fields: _5nuc313
    },
    chinese: _5nuc321,
    coptic: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5nuc310,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5nuc300,
        dayPeriods: _5nuc283,
        monthNames: {
            format: _5nuc295,
            standAlone: _5nuc295
        },
        eraNames: _5nuc36,
        quarterNames: _5nuc282,
        fields: _5nuc313
    },
    dangi: _5nuc321,
    ethioaa: _5nuc314,
    ethiopic: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5nuc310,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5nuc300,
        dayPeriods: _5nuc283,
        monthNames: {
            format: _5nuc297,
            standAlone: _5nuc297
        },
        eraNames: _5nuc36,
        quarterNames: _5nuc282,
        fields: _5nuc313
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d MMMM, y",
                shortDate: "dd/MM/y",
                longDate: "y MMMM d",
                mediumDate: "y MMM d",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "dd/MM/y HH:mm",
                mediumDateTime: "y MMM d HH:mm:ss",
                longDateTime: "y MMMM d HH:mm:ss z",
                fullDateTime: "EEEE, d MMMM, y HH:mm:ss zzzz"
            },
            cldr: {
                yMd: "dd-MM-y",
                yMMMEd: "E, d MMM, y",
                d: "d",
                E: "ccc",
                Ed: "d, E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "MM-dd",
                MEd: "MM-dd, E",
                MMM: "LLL",
                MMMd: "MMM d",
                MMMEd: "MMM d, E",
                MMMMd: "MMMM d",
                ms: "mm:ss",
                y: "y",
                yM: "y-MM",
                yMEd: "y-MM-dd, E",
                yMMM: "y MMM",
                yMMMd: "y MMM d",
                yMMMM: "y MMMM",
                yQQQ: "y QQQ",
                yQQQQ: "y QQQQ"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _5nuc5,
            H: {
                H: "HH–HH"
            },
            hm: _5nuc42,
            Hm: _5nuc13,
            hmv: _5nuc51,
            Hmv: _5nuc16,
            hv: _5nuc8,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "MM–MM"
            },
            Md: _5nuc17,
            MEd: _5nuc33,
            MMM: {
                M: "LLL–LLL"
            },
            MMMd: _5nuc10,
            MMMEd: _5nuc34,
            y: {
                y: "y–y"
            },
            yM: _5nuc14,
            yMd: _5nuc191,
            yMEd: _5nuc257,
            yMMM: {
                M: "y MMM–MMM",
                y: "y MMM – y MMM"
            },
            yMMMd: {
                d: "y MMM d–d",
                M: "y MMM d – MMM d",
                y: "y MMM d – y MMM d"
            },
            yMMMEd: {
                d: "y MMM d, E – MMM d, E",
                M: "y MMM d, E – MMM d, E",
                y: "y MMM d, E – y MMM d, E"
            },
            yMMMM: {
                M: "y MMMM–MMMM",
                y: "y MMMM – y MMMM"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5nuc300,
        dayPeriods: _5nuc283,
        monthNames: _5nuc306,
        eraNames: {
            wide: [ "BCE", "d.C." ],
            abbreviated: [ "BCE", "d.C." ]
        },
        quarterNames: _5nuc282,
        fields: _5nuc313
    },
    hebrew: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5nuc310,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5nuc300,
        dayPeriods: _5nuc283,
        monthNames: {
            format: _5nuc292,
            standAlone: _5nuc292
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _5nuc282,
        fields: _5nuc313
    },
    indian: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5nuc310,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5nuc300,
        dayPeriods: _5nuc283,
        monthNames: {
            format: _5nuc298,
            standAlone: _5nuc298
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _5nuc282,
        fields: _5nuc313
    },
    islamic: _5nuc318,
    "islamic-umalqura": _5nuc318,
    "islamic-tbla": _5nuc318,
    "islamic-civil": _5nuc318,
    "islamic-rgsa": _5nuc318,
    iso8601: _5nuc314,
    japanese: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5nuc310,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5nuc300,
        dayPeriods: _5nuc283,
        monthNames: _5nuc306,
        eraNames: {
            wide: _5nuc319,
            abbreviated: _5nuc319
        },
        quarterNames: _5nuc282,
        fields: _5nuc313
    },
    persian: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5nuc310,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5nuc300,
        dayPeriods: _5nuc283,
        monthNames: {
            format: _5nuc293,
            standAlone: _5nuc293
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _5nuc282,
        fields: _5nuc313
    },
    roc: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5nuc310,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5nuc300,
        dayPeriods: _5nuc283,
        monthNames: _5nuc306,
        eraNames: {
            wide: _5nuc7,
            abbreviated: _5nuc7
        },
        quarterNames: _5nuc282,
        fields: _5nuc313
    },
    islamicc: _5nuc314
};

inter.pluralRule = function(n) {};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.territories = _5nuc322;

inter.countries = _5nuc322;

inter.languages = [ {
    id: "af",
    displayName: "Afrikaans Simi",
    nativeDisplayName: "Afrikaans"
}, {
    id: "smn",
    displayName: "Sami Inari Simi",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "az",
    displayName: "Azerbaiyano Simi",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "Malayo Simi",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "ba",
    displayName: "Baskir Simi"
}, {
    id: "bs",
    displayName: "Bosnio Simi",
    nativeDisplayName: "bosanski"
}, {
    id: "br",
    displayName: "Breton Simi",
    nativeDisplayName: "brezhoneg"
}, {
    id: "ca",
    displayName: "Catalan Simi",
    nativeDisplayName: "català"
}, {
    id: "co",
    displayName: "Corso Simi"
}, {
    id: "cy",
    displayName: "Gales Simi",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "Danes Simi",
    nativeDisplayName: "dansk"
}, {
    id: "se",
    displayName: "Chincha Sami Simi",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "de",
    displayName: "Aleman Simi",
    nativeDisplayName: "Deutsch"
}, {
    id: "dv",
    displayName: "Divehi Simi"
}, {
    id: "dsb",
    displayName: "Bajo Sorbio Simi",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "et",
    displayName: "Estonio Simi",
    nativeDisplayName: "eesti"
}, {
    id: "en",
    displayName: "Ingles Simi",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "Español Simi",
    nativeDisplayName: "español"
}, {
    id: "eu",
    displayName: "Euskera Simi",
    nativeDisplayName: "euskara"
}, {
    id: "fil",
    displayName: "Filipino Simi",
    nativeDisplayName: "Filipino"
}, {
    id: "fr",
    displayName: "Frances Simi",
    nativeDisplayName: "français"
}, {
    id: "fo",
    displayName: "Feroes Simi",
    nativeDisplayName: "føroyskt"
}, {
    id: "ga",
    displayName: "Irlandes Simi",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gl",
    displayName: "Gallego Simi",
    nativeDisplayName: "galego"
}, {
    id: "gd",
    displayName: "Gaelico Escoces Simi",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "ht",
    displayName: "Haitiano Criollo Simi"
}, {
    id: "ha",
    displayName: "Hausa Simi",
    nativeDisplayName: "Hausa"
}, {
    id: "hmn",
    displayName: "Hmong Daw Simi"
}, {
    id: "hsb",
    displayName: "Alto Sorbio Simi",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "Croata Simi",
    nativeDisplayName: "hrvatski"
}, {
    id: "ig",
    displayName: "Igbo Simi",
    nativeDisplayName: "Igbo"
}, {
    id: "id",
    displayName: "Indonesio Simi",
    nativeDisplayName: "Indonesia"
}, {
    id: "iu",
    displayName: "Inuktitut Simi"
}, {
    id: "xh",
    displayName: "Isixhosa Simi"
}, {
    id: "zu",
    displayName: "Isizulu Simi",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "Italiano Simi",
    nativeDisplayName: "italiano"
}, {
    id: "kl",
    displayName: "Groenlandes Simi",
    nativeDisplayName: "kalaallisut"
}, {
    id: "rw",
    displayName: "Kinyarwanda Simi",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "sw",
    displayName: "Suajili Simi",
    nativeDisplayName: "Kiswahili"
}, {
    id: "quc",
    displayName: "Kʼicheʼ Simi"
}, {
    id: "lv",
    displayName: "Leton Simi",
    nativeDisplayName: "latviešu"
}, {
    id: "lt",
    displayName: "Lituano Simi",
    nativeDisplayName: "lietuvių"
}, {
    id: "lb",
    displayName: "Luxemburgues Simi",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "hu",
    displayName: "Hungaro Simi",
    nativeDisplayName: "magyar"
}, {
    id: "mt",
    displayName: "Maltes Simi",
    nativeDisplayName: "Malti"
}, {
    id: "mi",
    displayName: "Maori Simi"
}, {
    id: "arn",
    displayName: "Mapuche Simi"
}, {
    id: "moh",
    displayName: "Mohawk Simi"
}, {
    id: "nl",
    displayName: "Neerlandes Simi",
    nativeDisplayName: "Nederlands"
}, {
    id: "no",
    displayName: "Noruego Simi"
}, {
    id: "oc",
    displayName: "Occitano Simi"
}, {
    id: "uz",
    displayName: "Uzbeko Simi",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pap",
    displayName: "Papiamento Simi"
}, {
    id: "pl",
    displayName: "Polaco Simi",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "Portugues Simi",
    nativeDisplayName: "português"
}, {
    id: "ff",
    displayName: "Fulah Simi",
    nativeDisplayName: "Pulaar"
}, {
    id: "sma",
    displayName: "Qulla Sami Simi"
}, {
    id: "ro",
    displayName: "Rumano Simi",
    nativeDisplayName: "română"
}, {
    id: "rm",
    displayName: "Romanche Simi",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "Runasimi",
    nativeDisplayName: "Runasimi"
}, {
    id: "smj",
    displayName: "Sami Lule Simi"
}, {
    id: "sms",
    displayName: "Sami Skolt Simi"
}, {
    id: "sa",
    displayName: "Sanscrito Simi"
}, {
    id: "gsw",
    displayName: "Alsaciano Simi",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "nso",
    displayName: "Sesotho Sa Leboa Simi"
}, {
    id: "tn",
    displayName: "Setsuana Simi"
}, {
    id: "sq",
    displayName: "Albanes Simi",
    nativeDisplayName: "shqip"
}, {
    id: "sd",
    displayName: "Sindhi Simi"
}, {
    id: "syr",
    displayName: "Siriaco Simi"
}, {
    id: "sk",
    displayName: "Eslovaco Simi",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "Esloveno Simi",
    nativeDisplayName: "slovenščina"
}, {
    id: "fi",
    displayName: "Fines Simi",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "Sueco Simi",
    nativeDisplayName: "svenska"
}, {
    id: "tt",
    displayName: "Tartaro Simi"
}, {
    id: "tg",
    displayName: "Tayiko Simi"
}, {
    id: "vi",
    displayName: "Vietnamita Simi",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tk",
    displayName: "Turcomano Simi",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "Turco Simi",
    nativeDisplayName: "Türkçe"
}, {
    id: "fy",
    displayName: "Frison Simi",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "Wolof Simi"
}, {
    id: "yo",
    displayName: "Yoruba Simi",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "Islandes Simi",
    nativeDisplayName: "íslenska"
}, {
    id: "cs",
    displayName: "Checo Simi",
    nativeDisplayName: "čeština"
}, {
    id: "el",
    displayName: "Griego Simi",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "Bielorruso Simi",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "Bulgaro Simi",
    nativeDisplayName: "български"
}, {
    id: "ky",
    displayName: "Kirghiz Simi",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "Macedonio Simi",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "Mongol Simi",
    nativeDisplayName: "монгол"
}, {
    id: "ru",
    displayName: "Ruso Simi",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "Sakha Simi",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "Serbio Simi",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "Ucraniano Simi",
    nativeDisplayName: "українська"
}, {
    id: "kk",
    displayName: "Kazajo Simi",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "Armenio Simi",
    nativeDisplayName: "հայերեն"
}, {
    id: "he",
    displayName: "Hebreo Simi",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "Uigur Simi",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "Urdu Simi",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "Arabe Simi",
    nativeDisplayName: "العربية"
}, {
    id: "fa",
    displayName: "Persa Simi",
    nativeDisplayName: "فارسی"
}, {
    id: "ps",
    displayName: "Pashto Simi",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "Chawpi Kurdo Simi",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "kok",
    displayName: "Konkani Simi",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "Nepali Simi",
    nativeDisplayName: "नेपाली"
}, {
    id: "mr",
    displayName: "Marathi Simi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "Hindi Simi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "Asames Simi",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "Bangla Simi",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "Punyabi Simi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "Gujarati Simi",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "Odia Simi",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "Tamil Simi",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "Telugu Simi",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "Kannada Simi",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "Malayalam Simi",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "Cingales Simi",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "Tailandes Simi",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "Lao Simi",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "Tibetano Simi",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "ka",
    displayName: "Georgiano Simi",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "Tigriña Simi",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "Amarico Simi",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "Khmer Simi",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zh",
    displayName: "Chino Simi",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "Japones Simi",
    nativeDisplayName: "日本語"
}, {
    id: "ii",
    displayName: "Yi Simi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "chr",
    displayName: "Cheroqui Simi",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "Coreano Simi",
    nativeDisplayName: "한국어"
} ];

module.exports = inter;