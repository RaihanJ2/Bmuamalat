function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _2k5m1 = [ "N1", "N2", "N3", "N4" ], _2k5m2 = [ "1.", "2.", "3.", "4." ], _2k5m3 = {
    all: {
        leap: "{0}bis"
    }
}, _2k5m4 = {
    one: "0 E",
    other: "0 E"
}, _2k5m5 = {
    one: "0 M",
    other: "0 M"
}, _2k5m6 = {
    one: "0 B",
    other: "0 B"
}, _2k5m7 = {
    displayName: "napszak"
}, _2k5m8 = {
    displayName: "időzóna"
}, _2k5m9 = {
    one: "{0}°",
    other: "{0}°"
}, _2k5m10 = {
    one: "{0}′",
    other: "{0}′"
}, _2k5m11 = {
    one: "{0}″",
    other: "{0}″"
}, _2k5m12 = {
    one: "00 E",
    other: "00 E"
}, _2k5m13 = {
    one: "00 M",
    other: "00 M"
}, _2k5m14 = {
    one: "00 B",
    other: "00 B"
}, _2k5m15 = {
    a: "a h – a h",
    h: "a h–h"
}, _2k5m16 = {
    displayName: "hét napja"
}, _2k5m17 = {
    a: "h a – h a",
    h: "h–h a"
}, _2k5m18 = [ "R.O.C. előtt", "R.O.C." ], _2k5m19 = {
    one: "{0} G",
    other: "{0} G"
}, _2k5m20 = {
    one: "{0} h",
    other: "{0} h"
}, _2k5m21 = {
    one: "{0} s",
    other: "{0} s"
}, _2k5m22 = {
    one: "{0} m",
    other: "{0} m"
}, _2k5m23 = {
    one: "{0} g",
    other: "{0} g"
}, _2k5m24 = {
    one: "{0} W",
    other: "{0} W"
}, _2k5m25 = {
    one: "{0} l",
    other: "{0} l"
}, _2k5m26 = {
    one: "000 E",
    other: "000 E"
}, _2k5m27 = {
    one: "000 M",
    other: "000 M"
}, _2k5m28 = {
    one: "0 Mrd",
    other: "0 Mrd"
}, _2k5m29 = {
    one: "000 B",
    other: "000 B"
}, _2k5m30 = {
    one: "0 E ¤",
    other: "0 E ¤"
}, _2k5m31 = {
    one: "0 M ¤",
    other: "0 M ¤"
}, _2k5m32 = {
    one: "0 B ¤",
    other: "0 B ¤"
}, _2k5m33 = {
    one: "{0} év",
    other: "{0} év"
}, _2k5m34 = {
    one: "{0} ha",
    other: "{0} ha"
}, _2k5m35 = {
    one: "{0} m²",
    other: "{0} m²"
}, _2k5m36 = {
    one: "{0} ms",
    other: "{0} ms"
}, _2k5m37 = {
    one: "{0} km",
    other: "{0} km"
}, _2k5m38 = {
    one: "{0} cm",
    other: "{0} cm"
}, _2k5m39 = {
    one: "{0} mm",
    other: "{0} mm"
}, _2k5m40 = {
    one: "{0} pm",
    other: "{0} pm"
}, _2k5m41 = {
    one: "{0} mf",
    other: "{0} mf"
}, _2k5m42 = {
    one: "{0} yd",
    other: "{0} yd"
}, _2k5m43 = {
    one: "{0} kg",
    other: "{0} kg"
}, _2k5m44 = {
    one: "{0} kW",
    other: "{0} kW"
}, _2k5m45 = {
    one: "{0} LE",
    other: "{0} LE"
}, _2k5m46 = {
    one: "{0} mb",
    other: "{0} mb"
}, _2k5m47 = {
    one: "{0} °C",
    other: "{0} °C"
}, _2k5m48 = {
    one: "{0} °F",
    other: "{0} °F"
}, _2k5m49 = {
    one: "0 ezer",
    other: "0 ezer"
}, _2k5m50 = {
    one: "00 Mrd",
    other: "00 Mrd"
}, _2k5m51 = {
    one: "00 E ¤",
    other: "00 E ¤"
}, _2k5m52 = {
    one: "00 M ¤",
    other: "00 M ¤"
}, _2k5m53 = {
    one: "00 B ¤",
    other: "00 B ¤"
}, _2k5m54 = {
    H: "H:mm–H:mm",
    m: "H:mm–H:mm"
}, _2k5m55 = {
    a: "a h – a h v",
    h: "a h–h v"
}, _2k5m56 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _2k5m57 = {
    one: "{0} fok",
    other: "{0} fok"
}, _2k5m58 = {
    one: "{0} bit",
    other: "{0} bit"
}, _2k5m59 = {
    one: "{0} hét",
    other: "{0} hét"
}, _2k5m60 = {
    one: "{0} nap",
    other: "{0} nap"
}, _2k5m61 = {
    one: "{0} láb",
    other: "{0} láb"
}, _2k5m62 = {
    one: "{0} km²",
    other: "{0} km²"
}, _2k5m63 = {
    one: "{0} ft²",
    other: "{0} ft²"
}, _2k5m64 = {
    one: "{0} min",
    other: "{0} min"
}, _2k5m65 = {
    one: "{0} cal",
    other: "{0} cal"
}, _2k5m66 = {
    one: "{0} hPa",
    other: "{0} hPa"
}, _2k5m67 = {
    one: "{0} m/s",
    other: "{0} m/s"
}, _2k5m68 = {
    one: "{0} mph",
    other: "{0} mph"
}, _2k5m69 = {
    one: "{0} km³",
    other: "{0} km³"
}, _2k5m70 = {
    one: "{0} mi³",
    other: "{0} mi³"
}, _2k5m71 = {
    one: "00 ezer",
    other: "00 ezer"
}, _2k5m72 = {
    one: "000 Mrd",
    other: "000 Mrd"
}, _2k5m73 = {
    one: "000 E ¤",
    other: "000 E ¤"
}, _2k5m74 = {
    one: "000 M ¤",
    other: "000 M ¤"
}, _2k5m75 = {
    one: "0 Mrd ¤",
    other: "0 Mrd ¤"
}, _2k5m76 = {
    one: "000 B ¤",
    other: "000 B ¤"
}, _2k5m77 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _2k5m78 = [ "V", "H", "K", "Sz", "Cs", "P", "Sz" ], _2k5m79 = {
    wide: [ "MF" ],
    abbreviated: [ "MF" ]
}, _2k5m80 = {
    one: "{0} bájt",
    other: "{0} bájt"
}, _2k5m81 = {
    one: "{0} font",
    other: "{0} font"
}, _2k5m82 = {
    one: "{0} inHg",
    other: "{0} inHg"
}, _2k5m83 = {
    one: "{0} km/h",
    other: "{0} km/h"
}, _2k5m84 = {
    one: "000 ezer",
    other: "000 ezer"
}, _2k5m85 = {
    one: "0 millió",
    other: "0 millió"
}, _2k5m86 = {
    one: "0 billió",
    other: "0 billió"
}, _2k5m87 = {
    one: "00 Mrd ¤",
    other: "00 Mrd ¤"
}, _2k5m88 = {
    H: "H:mm–H:mm v",
    m: "H:mm–H:mm v"
}, _2k5m89 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _2k5m90 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _2k5m91 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _2k5m92 = {
    d: "MMM d–d.",
    M: "MMM d. – MMM d."
}, _2k5m93 = [ "V", "H", "K", "Sze", "Cs", "P", "Szo" ], _2k5m94 = {
    one: "{0} karát",
    other: "{0} karát"
}, _2k5m95 = {
    one: "{0} hónap",
    other: "{0} hónap"
}, _2k5m96 = {
    one: "{0} uncia",
    other: "{0} uncia"
}, _2k5m97 = {
    one: "00 millió",
    other: "00 millió"
}, _2k5m98 = {
    one: "00 billió",
    other: "00 billió"
}, _2k5m99 = {
    one: "000 Mrd ¤",
    other: "000 Mrd ¤"
}, _2k5m100 = {
    one: "{0} napja",
    other: "{0} napja"
}, _2k5m101 = {
    one: "{0} fényév",
    other: "{0} fényév"
}, _2k5m102 = {
    one: "000 millió",
    other: "000 millió"
}, _2k5m103 = {
    one: "0 milliárd",
    other: "0 milliárd"
}, _2k5m104 = {
    one: "000 billió",
    other: "000 billió"
}, _2k5m105 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _2k5m106 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _2k5m107 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _2k5m108 = {
    d: "MM. dd–dd.",
    M: "MM. dd. – MM. dd."
}, _2k5m109 = {
    one: "{0} kalória",
    other: "{0} kalória"
}, _2k5m110 = {
    one: "{0} hüvelyk",
    other: "{0} hüvelyk"
}, _2k5m111 = {
    one: "00 milliárd",
    other: "00 milliárd"
}, _2k5m112 = {
    M: "G y. MM–MM.",
    y: "G y. MM. – y. MM."
}, _2k5m113 = {
    M: "G y. MMM–MMM",
    y: "G y. MMM – y. MMM"
}, _2k5m114 = {
    one: "000 milliárd",
    other: "000 milliárd"
}, _2k5m115 = {
    one: "{0} év múlva",
    other: "{0} év múlva"
}, _2k5m116 = {
    one: "{0} hét múlva",
    other: "{0} hét múlva"
}, _2k5m117 = {
    one: "{0} nap múlva",
    other: "{0} nap múlva"
}, _2k5m118 = {
    one: "{0} óra múlva",
    other: "{0} óra múlva"
}, _2k5m119 = {
    M: "G y. MMMM–MMMM",
    y: "G y. MMMM – y. MMMM"
}, _2k5m120 = {
    one: "{0} perc múlva",
    other: "{0} perc múlva"
}, _2k5m121 = {
    "0": "ez az év",
    "1": "következő év",
    "-1": "előző év"
}, _2k5m122 = {
    one: "{0} hónap múlva",
    other: "{0} hónap múlva"
}, _2k5m123 = {
    d: "MMM d., E – d., E",
    M: "MMM d., E – MMM d., E"
}, _2k5m124 = {
    "0": "ez a hét",
    "1": "következő hét",
    "-1": "előző hét"
}, _2k5m125 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _2k5m126 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _2k5m127 = {
    id: "001",
    displayName: "Világ",
    hasTimeZones: false
}, _2k5m128 = [ "J", "F", "M", "Á", "M", "J", "J", "A", "Sz", "O", "N", "D" ], _2k5m129 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _2k5m130 = {
    one: "{0} évvel ezelőtt",
    other: "{0} évvel ezelőtt"
}, _2k5m131 = {
    "0": "ez a kedd",
    "1": "következő kedd",
    "-1": "előző kedd"
}, _2k5m132 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _2k5m133 = {
    id: "AQ",
    displayName: "Antarktisz",
    hasTimeZones: true
}, _2k5m134 = {
    a: "a h:mm – a h:mm",
    h: "a h:mm–h:mm",
    m: "a h:mm–h:mm"
}, _2k5m135 = {
    one: "{0} negyedév múlva",
    other: "{0} negyedév múlva"
}, _2k5m136 = {
    one: "{0} héttel ezelőtt",
    other: "{0} héttel ezelőtt"
}, _2k5m137 = {
    one: "{0} nappal ezelőtt",
    other: "{0} nappal ezelőtt"
}, _2k5m138 = {
    one: "{0} órával ezelőtt",
    other: "{0} órával ezelőtt"
}, _2k5m139 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _2k5m140 = {
    "0": "ez a hónap",
    "1": "következő hónap",
    "-1": "előző hónap"
}, _2k5m141 = {
    one: "{0} perccel ezelőtt",
    other: "{0} perccel ezelőtt"
}, _2k5m142 = {
    one: "{0} másodperc múlva",
    other: "{0} másodperc múlva"
}, _2k5m143 = {
    "0": "ez a hétfő",
    "1": "következő hétfő",
    "-1": "előző hétfő"
}, _2k5m144 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _2k5m145 = {
    id: "BV",
    displayName: "Bouvet-sziget",
    hasTimeZones: false
}, _2k5m146 = {
    d: "MM. dd., E – MM. dd., E",
    M: "MM. dd., E – MM. dd., E"
}, _2k5m147 = [ "1. negyedév", "2. negyedév", "3. negyedév", "4. negyedév" ], _2k5m148 = {
    one: "{0} hónappal ezelőtt",
    other: "{0} hónappal ezelőtt"
}, _2k5m149 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _2k5m150 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _2k5m151 = {
    id: "CC",
    displayName: "Kókusz-szigetek",
    hasTimeZones: true
}, _2k5m152 = {
    "0": "ez a szerda",
    "1": "következő szerda",
    "-1": "előző szerda"
}, _2k5m153 = {
    "0": "ez a péntek",
    "1": "következő péntek",
    "-1": "előző péntek"
}, _2k5m154 = {
    id: "IC",
    displayName: "Kanári-szigetek",
    hasTimeZones: false
}, _2k5m155 = {
    id: "CX",
    displayName: "Karácsony-sziget",
    hasTimeZones: true
}, _2k5m156 = {
    a: "a h:mm – a h:mm v",
    h: "a h:mm–h:mm v",
    m: "a h:mm–h:mm v"
}, _2k5m157 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _2k5m158 = {
    id: "AC",
    displayName: "Ascension-sziget",
    hasTimeZones: false
}, _2k5m159 = {
    id: "EA",
    displayName: "Ceuta és Melilla",
    hasTimeZones: false
}, _2k5m160 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _2k5m161 = {
    id: "CP",
    displayName: "Clipperton-sziget",
    hasTimeZones: false
}, _2k5m162 = [ "I. negyedév", "II. negyedév", "III. negyedév", "IV. negyedév" ], _2k5m163 = {
    "0": "ez a szombat",
    "1": "következő szombat",
    "-1": "előző szombat"
}, _2k5m164 = {
    id: "TD",
    displayName: "Csád",
    regionId: "017",
    hasTimeZones: true
}, _2k5m165 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _2k5m166 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _2k5m167 = {
    id: "IR",
    displayName: "Irán",
    regionId: "034",
    hasTimeZones: true
}, _2k5m168 = {
    id: "CU",
    displayName: "Kuba",
    regionId: "029",
    hasTimeZones: true
}, _2k5m169 = {
    id: "CN",
    displayName: "Kína",
    regionId: "030",
    hasTimeZones: true
}, _2k5m170 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _2k5m171 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _2k5m172 = {
    id: "OM",
    displayName: "Omán",
    regionId: "145",
    hasTimeZones: true
}, _2k5m173 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _2k5m174 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _2k5m175 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _2k5m176 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _2k5m177 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _2k5m178 = {
    id: "DK",
    displayName: "Dánia",
    regionId: "154",
    hasTimeZones: true
}, _2k5m179 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _2k5m180 = {
    id: "GH",
    displayName: "Ghána",
    regionId: "011",
    hasTimeZones: true
}, _2k5m181 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _2k5m182 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _2k5m183 = {
    id: "JP",
    displayName: "Japán",
    regionId: "030",
    hasTimeZones: true
}, _2k5m184 = {
    id: "YE",
    displayName: "Jemen",
    regionId: "145",
    hasTimeZones: true
}, _2k5m185 = {
    id: "QA",
    displayName: "Katar",
    regionId: "145",
    hasTimeZones: true
}, _2k5m186 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _2k5m187 = {
    id: "LA",
    displayName: "Laosz",
    regionId: "035",
    hasTimeZones: true
}, _2k5m188 = {
    id: "LY",
    displayName: "Líbia",
    regionId: "015",
    hasTimeZones: true
}, _2k5m189 = {
    id: "MT",
    displayName: "Málta",
    regionId: "039",
    hasTimeZones: true
}, _2k5m190 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _2k5m191 = {
    id: "NP",
    displayName: "Nepál",
    regionId: "034",
    hasTimeZones: true
}, _2k5m192 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _2k5m193 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _2k5m194 = {
    id: "CH",
    displayName: "Svájc",
    regionId: "155",
    hasTimeZones: true
}, _2k5m195 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _2k5m196 = {
    one: "{0} negyedévvel ezelőtt",
    other: "{0} negyedévvel ezelőtt"
}, _2k5m197 = {
    relative: _2k5m131
}, _2k5m198 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _2k5m199 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _2k5m200 = {
    id: "BT",
    displayName: "Bhután",
    regionId: "034",
    hasTimeZones: true
}, _2k5m201 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _2k5m202 = {
    id: "CY",
    displayName: "Ciprus",
    regionId: "145",
    hasTimeZones: true
}, _2k5m203 = {
    id: "FJ",
    displayName: "Fidzsi",
    regionId: "054",
    hasTimeZones: true
}, _2k5m204 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _2k5m205 = {
    id: "GE",
    displayName: "Grúzia",
    regionId: "145",
    hasTimeZones: true
}, _2k5m206 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _2k5m207 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _2k5m208 = {
    id: "IS",
    displayName: "Izland",
    regionId: "154",
    hasTimeZones: true
}, _2k5m209 = {
    id: "IL",
    displayName: "Izrael",
    regionId: "145",
    hasTimeZones: true
}, _2k5m210 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _2k5m211 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _2k5m212 = {
    id: "KW",
    displayName: "Kuvait",
    regionId: "145",
    hasTimeZones: true
}, _2k5m213 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _2k5m214 = {
    id: "MX",
    displayName: "Mexikó",
    regionId: "013",
    hasTimeZones: true
}, _2k5m215 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _2k5m216 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _2k5m217 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _2k5m218 = {
    id: "WS",
    displayName: "Szamoa",
    regionId: "061",
    hasTimeZones: true
}, _2k5m219 = {
    id: "SD",
    displayName: "Szudán",
    regionId: "015",
    hasTimeZones: true
}, _2k5m220 = {
    id: "SY",
    displayName: "Szíria",
    regionId: "145",
    hasTimeZones: true
}, _2k5m221 = {
    id: "TW",
    displayName: "Tajvan",
    regionId: "030",
    hasTimeZones: true
}, _2k5m222 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _2k5m223 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _2k5m224 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _2k5m225 = {
    "0": "ez a negyedév",
    "1": "következő negyedév",
    "-1": "előző negyedév"
}, _2k5m226 = {
    "0": "ez a vasárnap",
    "1": "következő vasárnap",
    "-1": "előző vasárnap"
}, _2k5m227 = {
    id: "AL",
    displayName: "Albánia",
    regionId: "039",
    hasTimeZones: true
}, _2k5m228 = {
    id: "DZ",
    displayName: "Algéria",
    regionId: "015",
    hasTimeZones: true
}, _2k5m229 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _2k5m230 = {
    id: "BH",
    displayName: "Bahrein",
    regionId: "145",
    hasTimeZones: true
}, _2k5m231 = {
    id: "BE",
    displayName: "Belgium",
    regionId: "155",
    hasTimeZones: true
}, _2k5m232 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _2k5m233 = {
    id: "BO",
    displayName: "Bolívia",
    regionId: "005",
    hasTimeZones: true
}, _2k5m234 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _2k5m235 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _2k5m236 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _2k5m237 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _2k5m238 = {
    id: "ET",
    displayName: "Etiópia",
    regionId: "014",
    hasTimeZones: true
}, _2k5m239 = {
    id: "TF",
    displayName: "Francia Déli Területek",
    hasTimeZones: true
}, _2k5m240 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _2k5m241 = {
    id: "JM",
    displayName: "Jamaica",
    regionId: "029",
    hasTimeZones: true
}, _2k5m242 = {
    id: "CM",
    displayName: "Kamerun",
    regionId: "017",
    hasTimeZones: true
}, _2k5m243 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _2k5m244 = {
    id: "LB",
    displayName: "Libanon",
    regionId: "145",
    hasTimeZones: true
}, _2k5m245 = {
    id: "LR",
    displayName: "Libéria",
    regionId: "011",
    hasTimeZones: true
}, _2k5m246 = {
    id: "MA",
    displayName: "Marokkó",
    regionId: "015",
    hasTimeZones: true
}, _2k5m247 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _2k5m248 = {
    id: "MD",
    displayName: "Moldova",
    regionId: "151",
    hasTimeZones: true
}, _2k5m249 = {
    id: "NA",
    displayName: "Namíbia",
    regionId: "018",
    hasTimeZones: true
}, _2k5m250 = {
    id: "NG",
    displayName: "Nigéria",
    regionId: "011",
    hasTimeZones: true
}, _2k5m251 = {
    id: "RE",
    displayName: "Reunion",
    regionId: "014",
    hasTimeZones: true
}, _2k5m252 = {
    id: "RO",
    displayName: "Románia",
    regionId: "151",
    hasTimeZones: true
}, _2k5m253 = {
    id: "RS",
    displayName: "Szerbia",
    regionId: "039",
    hasTimeZones: true
}, _2k5m254 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _2k5m255 = {
    id: "TN",
    displayName: "Tunézia",
    regionId: "015",
    hasTimeZones: true
}, _2k5m256 = {
    id: "UA",
    displayName: "Ukrajna",
    regionId: "151",
    hasTimeZones: true
}, _2k5m257 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _2k5m258 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _2k5m259 = {
    id: "VA",
    displayName: "Vatikán",
    regionId: "039",
    hasTimeZones: true
}, _2k5m260 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _2k5m261 = {
    one: "{0} másodperccel ezelőtt",
    other: "{0} másodperccel ezelőtt"
}, _2k5m262 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _2k5m263 = {
    id: "AT",
    displayName: "Ausztria",
    regionId: "155",
    hasTimeZones: true
}, _2k5m264 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _2k5m265 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _2k5m266 = {
    id: "BR",
    displayName: "Brazília",
    regionId: "005",
    hasTimeZones: true
}, _2k5m267 = {
    id: "BG",
    displayName: "Bulgária",
    regionId: "151",
    hasTimeZones: true
}, _2k5m268 = {
    id: "DM",
    displayName: "Dominika",
    regionId: "029",
    hasTimeZones: true
}, _2k5m269 = {
    id: "DJ",
    displayName: "Dzsibuti",
    regionId: "014",
    hasTimeZones: true
}, _2k5m270 = {
    id: "EG",
    displayName: "Egyiptom",
    regionId: "015",
    hasTimeZones: true
}, _2k5m271 = {
    id: "GL",
    displayName: "Grönland",
    regionId: "021",
    hasTimeZones: true
}, _2k5m272 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _2k5m273 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _2k5m274 = {
    id: "JO",
    displayName: "Jordánia",
    regionId: "145",
    hasTimeZones: true
}, _2k5m275 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _2k5m276 = {
    id: "CO",
    displayName: "Kolumbia",
    regionId: "005",
    hasTimeZones: true
}, _2k5m277 = {
    id: "XK",
    displayName: "Koszovó",
    regionId: "039",
    hasTimeZones: false
}, _2k5m278 = {
    id: "LT",
    displayName: "Litvánia",
    regionId: "154",
    hasTimeZones: true
}, _2k5m279 = {
    id: "MY",
    displayName: "Malajzia",
    regionId: "035",
    hasTimeZones: true
}, _2k5m280 = {
    id: "MN",
    displayName: "Mongólia",
    regionId: "030",
    hasTimeZones: true
}, _2k5m281 = {
    id: "MZ",
    displayName: "Mozambik",
    regionId: "014",
    hasTimeZones: true
}, _2k5m282 = {
    id: "NO",
    displayName: "Norvégia",
    regionId: "154",
    hasTimeZones: true
}, _2k5m283 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _2k5m284 = {
    id: "SV",
    displayName: "Salvador",
    regionId: "013",
    hasTimeZones: true
}, _2k5m285 = {
    id: "SR",
    displayName: "Suriname",
    regionId: "005",
    hasTimeZones: true
}, _2k5m286 = {
    id: "SN",
    displayName: "Szenegál",
    regionId: "011",
    hasTimeZones: true
}, _2k5m287 = {
    id: "SO",
    displayName: "Szomália",
    regionId: "014",
    hasTimeZones: true
}, _2k5m288 = {
    id: "TZ",
    displayName: "Tanzánia",
    regionId: "014",
    hasTimeZones: true
}, _2k5m289 = {
    id: "TH",
    displayName: "Thaiföld",
    regionId: "035",
    hasTimeZones: true
}, _2k5m290 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _2k5m291 = {
    id: "IE",
    displayName: "Írország",
    regionId: "154",
    hasTimeZones: true
}, _2k5m292 = {
    relative: _2k5m143
}, _2k5m293 = {
    id: "AR",
    displayName: "Argentína",
    regionId: "005",
    hasTimeZones: true
}, _2k5m294 = {
    id: "BD",
    displayName: "Banglades",
    regionId: "034",
    hasTimeZones: true
}, _2k5m295 = {
    id: "KR",
    displayName: "Dél-Korea",
    regionId: "030",
    hasTimeZones: true
}, _2k5m296 = {
    id: "GI",
    displayName: "Gibraltár",
    regionId: "039",
    hasTimeZones: true
}, _2k5m297 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _2k5m298 = {
    id: "NL",
    displayName: "Hollandia",
    regionId: "155",
    hasTimeZones: true
}, _2k5m299 = {
    id: "ID",
    displayName: "Indonézia",
    regionId: "035",
    hasTimeZones: true
}, _2k5m300 = {
    id: "KH",
    displayName: "Kambodzsa",
    regionId: "035",
    hasTimeZones: true
}, _2k5m301 = {
    id: "LU",
    displayName: "Luxemburg",
    regionId: "155",
    hasTimeZones: true
}, _2k5m302 = {
    id: "MK",
    displayName: "Macedónia",
    regionId: "039",
    hasTimeZones: true
}, _2k5m303 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _2k5m304 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _2k5m305 = {
    id: "PK",
    displayName: "Pakisztán",
    regionId: "034",
    hasTimeZones: true
}, _2k5m306 = {
    id: "LK",
    displayName: "Srí Lanka",
    regionId: "034",
    hasTimeZones: true
}, _2k5m307 = {
    id: "SG",
    displayName: "Szingapúr",
    regionId: "035",
    hasTimeZones: true
}, _2k5m308 = {
    id: "SK",
    displayName: "Szlovákia",
    regionId: "151",
    hasTimeZones: true
}, _2k5m309 = {
    id: "SI",
    displayName: "Szlovénia",
    regionId: "039",
    hasTimeZones: true
}, _2k5m310 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _2k5m311 = {
    id: "NZ",
    displayName: "Új-Zéland",
    regionId: "053",
    hasTimeZones: true
}, _2k5m312 = [ "vasárnap", "hétfő", "kedd", "szerda", "csütörtök", "péntek", "szombat" ], _2k5m313 = {
    "0": "ma",
    "1": "holnap",
    "2": "holnapután",
    "-2": "tegnapelőtt",
    "-1": "tegnap"
}, _2k5m314 = {
    "0": "ez a csütörtök",
    "1": "következő csütörtök",
    "-1": "előző csütörtök"
}, _2k5m315 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _2k5m316 = {
    id: "AU",
    displayName: "Ausztrália",
    regionId: "053",
    hasTimeZones: true
}, _2k5m317 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _2k5m318 = {
    id: "CZ",
    displayName: "Csehország",
    regionId: "151",
    hasTimeZones: true
}, _2k5m319 = {
    id: "SS",
    displayName: "Dél-Szudán",
    regionId: "014",
    hasTimeZones: true
}, _2k5m320 = {
    id: "FI",
    displayName: "Finnország",
    regionId: "154",
    hasTimeZones: true
}, _2k5m321 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _2k5m322 = {
    id: "KZ",
    displayName: "Kazahsztán",
    regionId: "143",
    hasTimeZones: true
}, _2k5m323 = {
    id: "LV",
    displayName: "Lettország",
    regionId: "154",
    hasTimeZones: true
}, _2k5m324 = {
    id: "IM",
    displayName: "Man-sziget",
    regionId: "154",
    hasTimeZones: true
}, _2k5m325 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _2k5m326 = {
    id: "MR",
    displayName: "Mauritánia",
    regionId: "011",
    hasTimeZones: true
}, _2k5m327 = {
    id: "FM",
    displayName: "Mikronézia",
    regionId: "057",
    hasTimeZones: true
}, _2k5m328 = {
    id: "ME",
    displayName: "Montenegró",
    regionId: "039",
    hasTimeZones: true
}, _2k5m329 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _2k5m330 = {
    id: "PT",
    displayName: "Portugália",
    regionId: "039",
    hasTimeZones: true
}, _2k5m331 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _2k5m332 = {
    id: "SE",
    displayName: "Svédország",
    regionId: "154",
    hasTimeZones: true
}, _2k5m333 = {
    id: "SZ",
    displayName: "Szváziföld",
    regionId: "018",
    hasTimeZones: true
}, _2k5m334 = {
    id: "EE",
    displayName: "Észtország",
    regionId: "154",
    hasTimeZones: true
}, _2k5m335 = {
    "2": "{0} és {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0} és {1}"
}, _2k5m336 = {
    id: "AF",
    displayName: "Afganisztán",
    regionId: "034",
    hasTimeZones: true
}, _2k5m337 = {
    id: "IO",
    displayName: "Brit Indiai-óceáni Terület",
    hasTimeZones: true
}, _2k5m338 = {
    id: "GR",
    displayName: "Görögország",
    regionId: "039",
    hasTimeZones: true
}, _2k5m339 = {
    id: "TL",
    displayName: "Kelet-Timor",
    regionId: "035",
    hasTimeZones: true
}, _2k5m340 = {
    id: "MG",
    displayName: "Madagaszkár",
    regionId: "014",
    hasTimeZones: true
}, _2k5m341 = {
    id: "DE",
    displayName: "Németország",
    regionId: "155",
    hasTimeZones: true
}, _2k5m342 = {
    id: "IT",
    displayName: "Olaszország",
    regionId: "039",
    hasTimeZones: true
}, _2k5m343 = {
    id: "RU",
    displayName: "Oroszország",
    regionId: "151",
    hasTimeZones: true
}, _2k5m344 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _2k5m345 = {
    id: "LC",
    displayName: "Santa Lucia",
    regionId: "029",
    hasTimeZones: true
}, _2k5m346 = {
    id: "SH",
    displayName: "Szent Ilona",
    regionId: "011",
    hasTimeZones: true
}, _2k5m347 = {
    id: "TR",
    displayName: "Törökország",
    regionId: "145",
    hasTimeZones: true
}, _2k5m348 = {
    id: "KP",
    displayName: "Észak-Korea",
    regionId: "030",
    hasTimeZones: true
}, _2k5m349 = {
    id: "UZ",
    displayName: "Üzbegisztán",
    regionId: "143",
    hasTimeZones: true
}, _2k5m350 = {
    relative: _2k5m152
}, _2k5m351 = {
    relative: _2k5m153
}, _2k5m352 = {
    id: "AZ",
    displayName: "Azerbajdzsán",
    regionId: "145",
    hasTimeZones: true
}, _2k5m353 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _2k5m354 = {
    id: "HR",
    displayName: "Horvátország",
    regionId: "039",
    hasTimeZones: true
}, _2k5m355 = {
    id: "KG",
    displayName: "Kirgizisztán",
    regionId: "143",
    hasTimeZones: true
}, _2k5m356 = {
    id: "HU",
    displayName: "Magyarország",
    regionId: "151",
    hasTimeZones: true
}, _2k5m357 = {
    id: "MF",
    displayName: "Saint Martin",
    regionId: "029",
    hasTimeZones: true
}, _2k5m358 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _2k5m359 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _2k5m360 = {
    id: "SA",
    displayName: "Szaúd-Arábia",
    regionId: "145",
    hasTimeZones: true
}, _2k5m361 = {
    id: "AM",
    displayName: "Örményország",
    regionId: "145",
    hasTimeZones: true
}, _2k5m362 = {
    id: "NC",
    displayName: "Új-Kaledónia",
    regionId: "054",
    hasTimeZones: true
}, _2k5m363 = {
    id: "GW",
    displayName: "Bissau-Guinea",
    regionId: "011",
    hasTimeZones: true
}, _2k5m364 = {
    id: "CK",
    displayName: "Cook-szigetek",
    regionId: "061",
    hasTimeZones: true
}, _2k5m365 = {
    id: "FR",
    displayName: "Franciaország",
    regionId: "155",
    hasTimeZones: true
}, _2k5m366 = {
    id: "PL",
    displayName: "Lengyelország",
    regionId: "151",
    hasTimeZones: true
}, _2k5m367 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _2k5m368 = {
    id: "ES",
    displayName: "Spanyolország",
    regionId: "039",
    hasTimeZones: true
}, _2k5m369 = {
    id: "TJ",
    displayName: "Tádzsikisztán",
    regionId: "143",
    hasTimeZones: true
}, _2k5m370 = {
    id: "TM",
    displayName: "Türkmenisztán",
    regionId: "143",
    hasTimeZones: true
}, _2k5m371 = {
    id: "142",
    displayName: "Ázsia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _2k5m372 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _2k5m373 = {
    id: "002",
    displayName: "Afrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _2k5m374 = {
    id: "150",
    displayName: "Európa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _2k5m375 = {
    id: "GF",
    displayName: "Francia Guyana",
    regionId: "005",
    hasTimeZones: true
}, _2k5m376 = {
    id: "PH",
    displayName: "Fülöp-szigetek",
    regionId: "035",
    hasTimeZones: true
}, _2k5m377 = {
    id: "MO",
    displayName: "Makaó SAR Kína",
    regionId: "030",
    hasTimeZones: true
}, _2k5m378 = {
    id: "NF",
    displayName: "Norfolk-sziget",
    regionId: "053",
    hasTimeZones: true
}, _2k5m379 = {
    id: "EH",
    displayName: "Nyugat-Szahara",
    regionId: "015",
    hasTimeZones: true
}, _2k5m380 = {
    id: "AX",
    displayName: "Åland-szigetek",
    regionId: "154",
    hasTimeZones: true
}, _2k5m381 = {
    d: "G y. MMM d–d.",
    M: "G y. MMM d. – MMM d.",
    y: "G y. MMM d. – y. MMM d."
}, _2k5m382 = {
    relative: _2k5m163
}, _2k5m383 = {
    id: "019",
    displayName: "Amerika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _2k5m384 = {
    id: "AS",
    displayName: "Amerikai Szamoa",
    regionId: "061",
    hasTimeZones: true
}, _2k5m385 = {
    id: "BS",
    displayName: "Bahama-szigetek",
    regionId: "029",
    hasTimeZones: true
}, _2k5m386 = {
    id: "KM",
    displayName: "Comore-szigetek",
    regionId: "014",
    hasTimeZones: true
}, _2k5m387 = {
    id: "FO",
    displayName: "Feröer-szigetek",
    regionId: "154",
    hasTimeZones: true
}, _2k5m388 = {
    id: "KY",
    displayName: "Kajmán-szigetek",
    regionId: "029",
    hasTimeZones: true
}, _2k5m389 = {
    id: "MV",
    displayName: "Maldív-szigetek",
    regionId: "034",
    hasTimeZones: true
}, _2k5m390 = {
    id: "MM",
    displayName: "Mianmar (Burma)",
    regionId: "035",
    hasTimeZones: true
}, _2k5m391 = {
    id: "PG",
    displayName: "Pápua Új-Guinea",
    regionId: "054",
    hasTimeZones: true
}, _2k5m392 = {
    id: "009",
    displayName: "Óceánia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _2k5m393 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _2k5m394 = {
    id: "US",
    displayName: "Egyesült Államok",
    regionId: "021",
    hasTimeZones: true
}, _2k5m395 = {
    id: "CI",
    displayName: "Elefántcsontpart",
    regionId: "011",
    hasTimeZones: true
}, _2k5m396 = {
    id: "BY",
    displayName: "Fehéroroszország",
    regionId: "151",
    hasTimeZones: true
}, _2k5m397 = {
    id: "CD",
    displayName: "Kongó - Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _2k5m398 = {
    id: "BL",
    displayName: "Saint-Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _2k5m399 = {
    id: "SB",
    displayName: "Salamon-szigetek",
    regionId: "054",
    hasTimeZones: true
}, _2k5m400 = {
    id: "UM",
    displayName: "Amerikai Csendes-óceáni Szigetek",
    hasTimeZones: true
}, _2k5m401 = {
    id: "034",
    displayName: "Dél-Ázsia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _2k5m402 = {
    id: "GQ",
    displayName: "Egyenlítői-Guinea",
    regionId: "017",
    hasTimeZones: true
}, _2k5m403 = {
    id: "FK",
    displayName: "Falkland-szigetek",
    regionId: "005",
    hasTimeZones: true
}, _2k5m404 = {
    id: "PF",
    displayName: "Francia Polinézia",
    regionId: "061",
    hasTimeZones: true
}, _2k5m405 = {
    id: "HK",
    displayName: "Hongkong SAR Kína",
    regionId: "030",
    hasTimeZones: true
}, _2k5m406 = {
    id: "MH",
    displayName: "Marshall-szigetek",
    regionId: "057",
    hasTimeZones: true
}, _2k5m407 = {
    id: "054",
    displayName: "Melanézia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _2k5m408 = {
    id: "PS",
    displayName: "Palesztin Terület",
    regionId: "145",
    hasTimeZones: true
}, _2k5m409 = {
    id: "PN",
    displayName: "Pitcairn-szigetek",
    regionId: "061",
    hasTimeZones: true
}, _2k5m410 = {
    id: "061",
    displayName: "Polinézia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _2k5m411 = {
    relative: _2k5m226
}, _2k5m412 = {
    id: "AG",
    displayName: "Antigua és Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _2k5m413 = {
    id: "039",
    displayName: "Dél-Európa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _2k5m414 = {
    id: "GB",
    displayName: "Egyesült Királyság",
    regionId: "154",
    hasTimeZones: true
}, _2k5m415 = {
    id: "SC",
    displayName: "Seychelle-szigetek",
    regionId: "014",
    hasTimeZones: true
}, _2k5m416 = {
    id: "TT",
    displayName: "Trinidad és Tobago",
    regionId: "029",
    hasTimeZones: true
}, _2k5m417 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _2k5m418 = {
    id: "BA",
    displayName: "Bosznia-Hercegovina",
    regionId: "039",
    hasTimeZones: true
}, _2k5m419 = {
    id: "005",
    displayName: "Dél-Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _2k5m420 = {
    id: "HM",
    displayName: "Heard-sziget és McDonald-szigetek",
    hasTimeZones: false
}, _2k5m421 = {
    id: "030",
    displayName: "Kelet-Ázsia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _2k5m422 = {
    id: "CG",
    displayName: "Kongó - Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _2k5m423 = {
    id: "143",
    displayName: "Közép-Ázsia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _2k5m424 = {
    id: "VG",
    displayName: "Brit Virgin-szigetek",
    regionId: "029",
    hasTimeZones: true
}, _2k5m425 = {
    id: "BQ",
    displayName: "Holland Karib-térség",
    regionId: "029",
    hasTimeZones: true
}, _2k5m426 = {
    id: "029",
    displayName: "Karib-térség",
    hasTimeZones: false,
    parentRegionId: "019"
}, _2k5m427 = {
    id: "014",
    displayName: "Kelet-Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _2k5m428 = {
    id: "151",
    displayName: "Kelet-Európa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _2k5m429 = {
    id: "017",
    displayName: "Közép-Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _2k5m430 = {
    id: "145",
    displayName: "Nyugat-Ázsia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _2k5m431 = {
    id: "KN",
    displayName: "Saint Kitts és Nevis",
    regionId: "029",
    hasTimeZones: true
}, _2k5m432 = {
    id: "ST",
    displayName: "Sao Tomé és Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _2k5m433 = {
    id: "015",
    displayName: "Észak-Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _2k5m434 = {
    id: "154",
    displayName: "Észak-Európa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _2k5m435 = {
    d: "G y. MM. dd–dd.",
    M: "G y. MM. dd. – MM. dd.",
    y: "G y. MM. dd. – y. MM. dd."
}, _2k5m436 = {
    relative: _2k5m314
}, _2k5m437 = {
    id: "053",
    displayName: "Ausztrálázsia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _2k5m438 = {
    id: "DO",
    displayName: "Dominikai Köztársaság",
    regionId: "029",
    hasTimeZones: true
}, _2k5m439 = {
    id: "013",
    displayName: "Közép-Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _2k5m440 = {
    id: "011",
    displayName: "Nyugat-Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _2k5m441 = {
    id: "155",
    displayName: "Nyugat-Európa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _2k5m442 = {
    id: "CV",
    displayName: "Zöld-foki Köztársaság",
    regionId: "011",
    hasTimeZones: true
}, _2k5m443 = {
    id: "035",
    displayName: "Délkelet-Ázsia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _2k5m444 = {
    id: "ZA",
    displayName: "Dél-afrikai Köztársaság",
    regionId: "018",
    hasTimeZones: true
}, _2k5m445 = {
    id: "GS",
    displayName: "Déli-Georgia és Déli-Sandwich-szigetek",
    hasTimeZones: true
}, _2k5m446 = {
    id: "AE",
    displayName: "Egyesült Arab Emírségek",
    regionId: "145",
    hasTimeZones: true
}, _2k5m447 = {
    id: "MP",
    displayName: "Északi Mariana-szigetek",
    regionId: "057",
    hasTimeZones: true
}, _2k5m448 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _2k5m449 = {
    id: "VI",
    displayName: "Amerikai Virgin-szigetek",
    regionId: "029",
    hasTimeZones: true
}, _2k5m450 = {
    id: "PM",
    displayName: "Saint Pierre és Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _2k5m451 = {
    id: "018",
    displayName: "Afrika déli része",
    hasTimeZones: false,
    parentRegionId: "002"
}, _2k5m452 = {
    id: "CF",
    displayName: "Közép-afrikai Köztársaság",
    regionId: "017",
    hasTimeZones: true
}, _2k5m453 = {
    id: "057",
    displayName: "Mikronéziai régió",
    hasTimeZones: false,
    parentRegionId: "009"
}, _2k5m454 = {
    id: "TC",
    displayName: "Turks- és Caicos-szigetek",
    regionId: "029",
    hasTimeZones: true
}, _2k5m455 = {
    id: "WF",
    displayName: "Wallis- és Futuna-szigetek",
    regionId: "061",
    hasTimeZones: true
}, _2k5m456 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _2k5m457 = {
    id: "021",
    displayName: "Amerika északi része",
    hasTimeZones: false,
    parentRegionId: "019"
}, _2k5m458 = [ "jan.", "febr.", "márc.", "ápr.", "máj.", "jún.", "júl.", "aug.", "szept.", "okt.", "nov.", "dec." ], _2k5m459 = {
    id: "SJ",
    displayName: "Spitzbergák és Jan Mayen-szigetek",
    regionId: "154",
    hasTimeZones: true
}, _2k5m460 = {
    future: _2k5m117,
    past: _2k5m100
}, _2k5m461 = {
    id: "VC",
    displayName: "Saint Vincent és a Grenadine-szigetek",
    regionId: "029",
    hasTimeZones: true
}, _2k5m462 = {
    d: "G y. MMM d., E – MMM d., E",
    M: "G y. MMM d., E – MMM d., E",
    y: "G y. MMM d., E – y. MMM d., E"
}, _2k5m463 = {
    d: "G y. MM. dd., E – dd., E",
    M: "G y. MM. dd., E – MM. dd., E",
    y: "G y. MM. dd., E – y. MM. dd., E"
}, _2k5m464 = [ "Moh.", "Saf.", "Réb. 1", "Réb. 2", "Dsem. I", "Dsem. II", "Red.", "Sab.", "Ram.", "Sev.", "Dsül k.", "Dsül h." ], _2k5m465 = [ "Tisri", "Hesván", "Kiszlév", "Tévész", "Svát", "Ádár I", "Ádár", "Niszán", "Ijár", "Sziván", "Tamuz", "Áv", "Elul" ], _2k5m466 = {
    future: _2k5m115,
    past: _2k5m130
}, _2k5m467 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _2k5m468 = {
    future: _2k5m116,
    past: _2k5m136
}, _2k5m469 = {
    future: _2k5m117,
    past: _2k5m137
}, _2k5m470 = {
    future: _2k5m118,
    past: _2k5m138
}, _2k5m471 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _2k5m472 = {
    future: _2k5m120,
    past: _2k5m141
}, _2k5m473 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _2k5m474 = {
    future: _2k5m122,
    past: _2k5m148
}, _2k5m475 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _2k5m476 = [ "január", "február", "március", "április", "május", "június", "július", "augusztus", "szeptember", "október", "november", "december" ], _2k5m477 = [ "Moharrem", "Safar", "Rébi I", "Rébi II", "Dsemádi I", "Dsemádi II", "Redseb", "Sabán", "Ramadán", "Sevvál", "Dsül kade", "Dsül hedse" ], _2k5m478 = {
    abbreviated: _2k5m1,
    narrow: _2k5m2,
    wide: _2k5m147
}, _2k5m479 = {
    abbreviated: _2k5m1,
    narrow: _2k5m2,
    wide: _2k5m162
}, _2k5m480 = {
    future: _2k5m135,
    past: _2k5m196
}, _2k5m481 = {
    future: _2k5m142,
    past: _2k5m261
}, _2k5m482 = {
    displayName: "óra",
    relativeTime: _2k5m470
}, _2k5m483 = {
    displayName: "perc",
    relativeTime: _2k5m472
}, _2k5m484 = {
    midnight: "éjfél",
    am: "de.",
    noon: "dél",
    pm: "du.",
    morning1: "reggel",
    morning2: "délelőtt",
    afternoon1: "délután",
    evening1: "este",
    night1: "éjjel",
    night2: "hajnal"
}, _2k5m485 = [ "Moharrem", "Safar", "Rébi el avvel", "Rébi el accher", "Dsemádi el avvel", "Dsemádi el accher", "Redseb", "Sabán", "Ramadán", "Sevvál", "Dsül kade", "Dsül hedse" ], _2k5m486 = {
    midnight: "éjfél",
    am: "de.",
    noon: "dél",
    pm: "du.",
    morning1: "reggel",
    morning2: "reggel",
    afternoon1: "délután",
    evening1: "este",
    night1: "éjszaka",
    night2: "éjszaka"
}, _2k5m487 = {
    midnight: "éjfél",
    am: "de.",
    noon: "dél",
    pm: "du.",
    morning1: "reggel",
    morning2: "reggel",
    afternoon1: "délután",
    evening1: "délután",
    night1: "éjszaka",
    night2: "éjszaka"
}, _2k5m488 = {
    decimal: ",",
    group: " ",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _2k5m489 = {
    displayName: "másodperc",
    relativeTime: _2k5m481
}, _2k5m490 = {
    symbols: _2k5m488
}, _2k5m491 = {
    abbreviated: _2k5m132,
    narrow: _2k5m132,
    wide: _2k5m132
}, _2k5m492 = {
    displayName: "másodperc",
    relative: [ "most" ],
    relativeTime: _2k5m481
}, _2k5m493 = {
    format: _2k5m372,
    numeric: _2k5m3,
    standAlone: _2k5m372
}, _2k5m494 = {
    displayName: "év",
    relative: _2k5m121,
    relativeTime: _2k5m466
}, _2k5m495 = {
    displayName: "hét",
    relative: _2k5m124,
    relativeTime: _2k5m468
}, _2k5m496 = {
    displayName: "nap",
    relative: _2k5m313,
    relativeTime: _2k5m460
}, _2k5m497 = {
    abbreviated: _2k5m93,
    narrow: _2k5m78,
    wide: _2k5m312,
    "short": _2k5m93
}, _2k5m498 = {
    abbreviated: _2k5m132,
    narrow: _2k5m132,
    wide: _2k5m393
}, _2k5m499 = {
    symbols: _2k5m488,
    digits: "renderSpelloutCardinal"
}, _2k5m500 = {
    displayName: "hónap",
    relative: _2k5m140,
    relativeTime: _2k5m474
}, _2k5m501 = {
    displayName: "nap",
    relative: _2k5m313,
    relativeTime: _2k5m469
}, _2k5m502 = {
    symbols: _2k5m488,
    digits: "renderSpelloutCardinalFinancial"
}, _2k5m503 = {
    displayName: "negyedév",
    relative: _2k5m225,
    relativeTime: _2k5m480
}, _2k5m504 = {
    abbreviated: _2k5m417,
    narrow: _2k5m417,
    wide: _2k5m417
}, _2k5m505 = {
    format: _2k5m504
}, _2k5m506 = {
    format: _2k5m479,
    standAlone: _2k5m478
}, _2k5m507 = {
    abbreviated: _2k5m458,
    narrow: _2k5m128,
    wide: _2k5m476
}, _2k5m508 = {
    abbreviated: _2k5m465,
    narrow: _2k5m150,
    wide: _2k5m465
}, _2k5m509 = {
    abbreviated: _2k5m467,
    narrow: _2k5m132,
    wide: _2k5m467
}, _2k5m510 = {
    abbreviated: _2k5m471,
    narrow: _2k5m150,
    wide: _2k5m471
}, _2k5m511 = {
    abbreviated: _2k5m464,
    narrow: _2k5m132,
    wide: _2k5m477
}, _2k5m512 = {
    abbreviated: _2k5m473,
    narrow: _2k5m150,
    wide: _2k5m473
}, _2k5m513 = {
    abbreviated: _2k5m475,
    narrow: _2k5m132,
    wide: _2k5m475
}, _2k5m514 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "H:mm:ss zzzz",
    longTime: "H:mm:ss z",
    mediumTime: "H:mm:ss",
    shortTime: "H:mm",
    shortDateTime: "r-MM-dd H:mm",
    mediumDateTime: "r MMM d H:mm:ss",
    longDateTime: "r(U) MMMM d H:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE H:mm:ss zzzz"
}, _2k5m515 = {
    abbreviated: _2k5m464,
    narrow: _2k5m132,
    wide: _2k5m485
}, _2k5m516 = {
    fullDate: "G y. MMMM d., EEEE",
    longDate: "G y. MMMM d.",
    mediumDate: "G y. MMM d.",
    shortDate: "GGGGG y. M. d.",
    fullTime: "H:mm:ss zzzz",
    longTime: "H:mm:ss z",
    mediumTime: "H:mm:ss",
    shortTime: "H:mm",
    shortDateTime: "GGGGG y. M. d. H:mm",
    mediumDateTime: "G y. MMM d. H:mm:ss",
    longDateTime: "G y. MMMM d. H:mm:ss z",
    fullDateTime: "G y. MMMM d., EEEE H:mm:ss zzzz"
}, _2k5m517 = {
    "1000": _2k5m4,
    "10000": _2k5m12,
    "100000": _2k5m26,
    "1000000": _2k5m5,
    "10000000": _2k5m13,
    "100000000": _2k5m27,
    "1000000000": _2k5m28,
    "10000000000": _2k5m50,
    "100000000000": _2k5m72,
    "1000000000000": _2k5m6,
    "10000000000000": _2k5m14,
    "100000000000000": _2k5m29
}, _2k5m518 = {
    format: _2k5m498,
    standAlone: _2k5m491
}, _2k5m519 = {
    "1000": _2k5m30,
    "10000": _2k5m51,
    "100000": _2k5m73,
    "1000000": _2k5m31,
    "10000000": _2k5m52,
    "100000000": _2k5m74,
    "1000000000": _2k5m75,
    "10000000000": _2k5m87,
    "100000000000": _2k5m99,
    "1000000000000": _2k5m32,
    "10000000000000": _2k5m53,
    "100000000000000": _2k5m76
}, _2k5m520 = {
    format: _2k5m497,
    standAlone: _2k5m497
}, _2k5m521 = {
    "1000": _2k5m49,
    "10000": _2k5m71,
    "100000": _2k5m84,
    "1000000": _2k5m85,
    "10000000": _2k5m97,
    "100000000": _2k5m102,
    "1000000000": _2k5m103,
    "10000000000": _2k5m111,
    "100000000000": _2k5m114,
    "1000000000000": _2k5m86,
    "10000000000000": _2k5m98,
    "100000000000000": _2k5m104
}, _2k5m522 = {
    abbreviated: _2k5m484,
    narrow: _2k5m484,
    wide: _2k5m484
}, _2k5m523 = {
    abbreviated: _2k5m486,
    narrow: _2k5m487,
    wide: _2k5m486
}, _2k5m524 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _2k5m525 = {
    d: "d",
    E: "ccc",
    Ed: "d., E",
    Gy: "G y.",
    GyMMM: "G y. MMM",
    GyMMMd: "G y. MMM d.",
    GyMMMEd: "G y. MMM d., E",
    h: "a h",
    H: "H",
    hm: "a h:mm",
    Hm: "H:mm",
    hms: "a h:mm:ss",
    Hms: "H:mm:ss",
    M: "L",
    Md: "M. d.",
    MEd: "M. d., E",
    MMM: "LLL",
    MMMd: "MMM d.",
    MMMEd: "MMM d., E",
    MMMMd: "MMMM d.",
    ms: "mm:ss",
    y: "G y.",
    yyyy: "G y.",
    yyyyM: "G y. MM.",
    yyyyMd: "G y. MM. dd.",
    yyyyMEd: "G y. MM. dd., E",
    yyyyMMM: "G y. MMM",
    yyyyMMMd: "G y. MMM d.",
    yyyyMMMEd: "G y. MMM d., E",
    yyyyMMMM: "G y. MMMM",
    yyyyQQQ: "G y. QQQ",
    yyyyQQQQ: "G y. QQQQ",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _2k5m526 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _2k5m527 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _2k5m528 = {
    format: _2k5m507,
    standAlone: _2k5m507
}, _2k5m529 = {
    format: _2k5m515,
    standAlone: _2k5m511
}, _2k5m530 = {
    basic: _2k5m514,
    cldr: _2k5m524
}, _2k5m531 = {
    "long": _2k5m521,
    "short": _2k5m517,
    "default": "#,##0.###"
}, _2k5m532 = {
    basic: _2k5m516,
    cldr: _2k5m525
}, _2k5m533 = {
    d: {
        d: "d–d"
    },
    h: _2k5m17,
    H: {
        H: "HH–HH"
    },
    hm: _2k5m139,
    Hm: _2k5m89,
    hmv: _2k5m157,
    Hmv: _2k5m105,
    hv: _2k5m56,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _2k5m106,
    MEd: _2k5m125,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _2k5m77,
    MMMEd: _2k5m126,
    y: {
        y: "U–U"
    },
    yM: _2k5m90,
    yMd: _2k5m315,
    yMEd: _2k5m456,
    yMMM: _2k5m91,
    yMMMd: _2k5m149,
    yMMMEd: _2k5m448,
    yMMMM: _2k5m107
}, _2k5m534 = {
    format: _2k5m523,
    standAlone: _2k5m522
}, _2k5m535 = {
    d: {
        d: "d–d."
    },
    h: _2k5m15,
    H: {
        H: "H–H"
    },
    hm: _2k5m134,
    Hm: _2k5m54,
    hmv: _2k5m156,
    Hmv: _2k5m88,
    hv: _2k5m55,
    Hv: {
        H: "H–H v"
    },
    M: {
        M: "M–M."
    },
    Md: _2k5m108,
    MEd: _2k5m146,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _2k5m92,
    MMMEd: _2k5m123,
    y: {
        y: "G y–y."
    },
    yM: _2k5m112,
    yMd: _2k5m435,
    yMEd: _2k5m463,
    yMMM: _2k5m113,
    yMMMd: _2k5m381,
    yMMMEd: _2k5m462,
    yMMMM: _2k5m119
}, _2k5m536 = {
    beforeCurrency: _2k5m526,
    afterCurrency: _2k5m526
}, _2k5m537 = {
    "short": _2k5m519,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _2k5m536
}, _2k5m538 = {
    abbreviated: _2k5m527,
    narrow: _2k5m527,
    wide: _2k5m527
}, _2k5m539 = {
    format: _2k5m538
}, _2k5m540 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _2k5m531,
    currency: _2k5m537,
    percent: {
        "default": "#,##0%"
    }
}, _2k5m541 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _2k5m542 = {
    dayParts: _2k5m505,
    days: _2k5m539,
    months: _2k5m539,
    years: _2k5m539,
    zodiacs: _2k5m505
}, _2k5m543 = {
    era: {
        displayName: "éra"
    },
    year: _2k5m494,
    "year-short": _2k5m494,
    "year-narrow": _2k5m494,
    quarter: _2k5m503,
    "quarter-short": _2k5m503,
    "quarter-narrow": _2k5m503,
    month: _2k5m500,
    "month-short": _2k5m500,
    "month-narrow": _2k5m500,
    week: _2k5m495,
    "week-short": _2k5m495,
    "week-narrow": _2k5m495,
    day: _2k5m501,
    "day-short": _2k5m496,
    "day-narrow": _2k5m496,
    weekday: _2k5m16,
    dayperiod: _2k5m7,
    hour: _2k5m482,
    "hour-short": _2k5m482,
    "hour-narrow": _2k5m482,
    minute: _2k5m483,
    "minute-short": _2k5m483,
    "minute-narrow": _2k5m483,
    second: _2k5m492,
    "second-short": _2k5m489,
    "second-narrow": _2k5m489,
    zone: _2k5m8,
    sun: _2k5m411,
    "sun-short": _2k5m411,
    "sun-narrow": _2k5m411,
    mon: _2k5m292,
    "mon-short": _2k5m292,
    "mon-narrow": _2k5m292,
    tue: _2k5m197,
    "tue-short": _2k5m197,
    "tue-narrow": _2k5m197,
    wed: _2k5m350,
    "wed-short": _2k5m350,
    "wed-narrow": _2k5m350,
    thu: _2k5m436,
    "thu-short": _2k5m436,
    "thu-narrow": _2k5m436,
    fri: _2k5m351,
    "fri-short": _2k5m351,
    "fri-narrow": _2k5m351,
    sat: _2k5m382,
    "sat-short": _2k5m382,
    "sat-narrow": _2k5m382
}, _2k5m544 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _2k5m543
}, _2k5m545 = {
    dateFormats: _2k5m532,
    datePartsOrder: "ymd",
    dateIntervalFormats: _2k5m535,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _2k5m520,
    dayPeriods: _2k5m534,
    monthNames: _2k5m529,
    eraNames: _2k5m79,
    quarterNames: _2k5m506,
    fields: _2k5m543
}, _2k5m546 = {
    dateFormats: _2k5m530,
    datePartsOrder: "md",
    dateIntervalFormats: _2k5m533,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _2k5m520,
    dayPeriods: _2k5m534,
    cyclicNames: _2k5m542,
    monthNames: _2k5m518,
    monthPatterns: _2k5m493,
    quarterNames: _2k5m506,
    fields: _2k5m543
};

inter.id = "hu";

inter.delimiters = {
    quotationStart: "„",
    quotationEnd: "”",
    alternateQuotationStart: "»",
    alternateQuotationEnd: "«"
};

inter.listPatterns = {
    "default": _2k5m335,
    unit: _2k5m335,
    unitNarrow: _2k5m335,
    unitShort: _2k5m335
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} g gyorsulás",
                other: "{0} g gyorsulás"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} méter per másodpercnégyzet",
                other: "{0} méter per másodpercnégyzet"
            },
            angleRevolution: {
                one: "{0} fordulat",
                other: "{0} fordulat"
            },
            angleRadian: {
                one: "{0} radián",
                other: "{0} radián"
            },
            angleDegree: _2k5m57,
            angleArcMinute: {
                one: "{0} ívperc",
                other: "{0} ívperc"
            },
            angleArcSecond: {
                one: "{0} ívmásodperc",
                other: "{0} ívmásodperc"
            },
            areaSquareKilometer: {
                one: "{0} négyzetkilométer",
                other: "{0} négyzetkilométer"
            },
            areaHectare: {
                one: "{0} hektár",
                other: "{0} hektár"
            },
            areaSquareMeter: {
                one: "{0} négyzetméter",
                other: "{0} négyzetméter"
            },
            areaSquareCentimeter: {
                one: "{0} négyzetcentiméter",
                other: "{0} négyzetcentiméter"
            },
            areaSquareMile: {
                one: "{0} négyzetmérföld",
                other: "{0} négyzetmérföld"
            },
            areaAcre: {
                one: "{0} hold",
                other: "{0} hold"
            },
            areaSquareYard: {
                one: "{0} négyzetyard",
                other: "{0} négyzetyard"
            },
            areaSquareFoot: {
                one: "{0} négyzetláb",
                other: "{0} négyzetláb"
            },
            areaSquareInch: {
                one: "{0} négyzethüvelyk",
                other: "{0} négyzethüvelyk"
            },
            concentrKarat: _2k5m94,
            consumptionLiterPerKilometer: {
                one: "{0} liter per kilométer",
                other: "{0} liter per kilométer"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} liter/100 km",
                other: "{0} liter/100 km"
            },
            consumptionMilePerGallon: {
                one: "{0} mérföld per gallon",
                other: "{0} mérföld per gallon"
            },
            digitalTerabyte: {
                one: "{0} terabájt",
                other: "{0} terabájt"
            },
            digitalTerabit: {
                one: "{0} terabit",
                other: "{0} terabit"
            },
            digitalGigabyte: {
                one: "{0} gigabájt",
                other: "{0} gigabájt"
            },
            digitalGigabit: {
                one: "{0} gigabit",
                other: "{0} gigabit"
            },
            digitalMegabyte: {
                one: "{0} megabájt",
                other: "{0} megabájt"
            },
            digitalMegabit: {
                one: "{0} megabit",
                other: "{0} megabit"
            },
            digitalKilobyte: {
                one: "{0} kilobájt",
                other: "{0} kilobájt"
            },
            digitalKilobit: {
                one: "{0} kilobit",
                other: "{0} kilobit"
            },
            digitalByte: _2k5m80,
            digitalBit: _2k5m58,
            durationCentury: {
                one: "{0} évszázad",
                other: "{0} évszázad"
            },
            durationYear: _2k5m33,
            durationMonth: _2k5m95,
            durationWeek: _2k5m59,
            durationDay: _2k5m60,
            durationHour: {
                one: "{0} óra",
                other: "{0} óra"
            },
            durationMinute: {
                one: "{0} perc",
                other: "{0} perc"
            },
            durationSecond: {
                one: "{0} másodperc",
                other: "{0} másodperc"
            },
            durationMillisecond: {
                one: "{0} ezredmásodperc",
                other: "{0} ezredmásodperc"
            },
            durationMicrosecond: {
                one: "{0} mikroszekundum",
                other: "{0} mikroszekundum"
            },
            durationNanosecond: {
                one: "{0} nanoszekundum",
                other: "{0} nanoszekundum"
            },
            electricAmpere: {
                one: "{0} amper",
                other: "{0} amper"
            },
            electricMilliampere: {
                one: "{0} milliamper",
                other: "{0} milliamper"
            },
            electricOhm: {
                one: "{0} ohm",
                other: "{0} ohm"
            },
            electricVolt: {
                one: "{0} volt",
                other: "{0} volt"
            },
            energyKilocalorie: {
                one: "{0} kilokalória",
                other: "{0} kilokalória"
            },
            energyCalorie: _2k5m109,
            energyFoodcalorie: _2k5m109,
            energyKilojoule: {
                one: "{0} kilojoule",
                other: "{0} kilojoule"
            },
            energyJoule: {
                one: "{0} joule",
                other: "{0} joule"
            },
            energyKilowattHour: {
                one: "{0} kilowattóra",
                other: "{0} kilowattóra"
            },
            frequencyGigahertz: {
                one: "{0} gigahertz",
                other: "{0} gigahertz"
            },
            frequencyMegahertz: {
                one: "{0} megahertz",
                other: "{0} megahertz"
            },
            frequencyKilohertz: {
                one: "{0} kilohertz",
                other: "{0} kilohertz"
            },
            frequencyHertz: {
                one: "{0} hertz",
                other: "{0} hertz"
            },
            lengthKilometer: {
                one: "{0} kilométer",
                other: "{0} kilométer"
            },
            lengthMeter: {
                one: "{0} méter",
                other: "{0} méter"
            },
            lengthDecimeter: {
                one: "{0} deciméter",
                other: "{0} deciméter"
            },
            lengthCentimeter: {
                one: "{0} centiméter",
                other: "{0} centiméter"
            },
            lengthMillimeter: {
                one: "{0} milliméter",
                other: "{0} milliméter"
            },
            lengthMicrometer: {
                one: "{0} mikrométer",
                other: "{0} mikrométer"
            },
            lengthNanometer: {
                one: "{0} nanométer",
                other: "{0} nanométer"
            },
            lengthPicometer: {
                one: "{0} pikométer",
                other: "{0} pikométer"
            },
            lengthMile: {
                one: "{0} mérföld",
                other: "{0} mérföld"
            },
            lengthYard: {
                one: "{0} yard",
                other: "{0} yard"
            },
            lengthFoot: _2k5m61,
            lengthInch: _2k5m110,
            lengthParsec: {
                one: "{0} parszek",
                other: "{0} parszek"
            },
            lengthLightYear: _2k5m101,
            lengthAstronomicalUnit: {
                one: "{0} csillagászati egység",
                other: "{0} csillagászati egység"
            },
            lengthNauticalMile: {
                one: "{0} tengeri mérföld",
                other: "{0} tengeri mérföld"
            },
            lengthMileScandinavian: {
                one: "{0} svéd mérföld",
                other: "{0} svéd mérföld"
            },
            lightLux: {
                one: "{0} lux",
                other: "{0} lux"
            },
            massMetricTon: {
                one: "{0} metrikus tonna",
                other: "{0} metrikus tonna"
            },
            massKilogram: {
                one: "{0} kilogramm",
                other: "{0} kilogramm"
            },
            massGram: {
                one: "{0} gramm",
                other: "{0} gramm"
            },
            massMilligram: {
                one: "{0} milligramm",
                other: "{0} milligramm"
            },
            massMicrogram: {
                one: "{0} mikrogramm",
                other: "{0} mikrogramm"
            },
            massTon: {
                one: "{0} tonna",
                other: "{0} tonna"
            },
            massPound: _2k5m81,
            massOunce: _2k5m96,
            massOunceTroy: {
                one: "{0} troy uncia",
                other: "{0} troy uncia"
            },
            massCarat: _2k5m94,
            powerGigawatt: {
                one: "{0} gigawatt",
                other: "{0} gigawatt"
            },
            powerMegawatt: {
                one: "{0} megawatt",
                other: "{0} megawatt"
            },
            powerKilowatt: {
                one: "{0} kilowatt",
                other: "{0} kilowatt"
            },
            powerWatt: {
                one: "{0} watt",
                other: "{0} watt"
            },
            powerMilliwatt: {
                one: "{0} milliwatt",
                other: "{0} milliwatt"
            },
            powerHorsepower: {
                one: "{0} lóerő",
                other: "{0} lóerő"
            },
            pressureHectopascal: {
                one: "{0} hektopascal",
                other: "{0} hektopascal"
            },
            pressureMillimeterOfMercury: {
                one: "{0} higanymilliméter",
                other: "{0} higanymilliméter"
            },
            pressurePoundPerSquareInch: {
                one: "{0} font per négyzethüvelyk",
                other: "{0} font per négyzethüvelyk"
            },
            pressureInchHg: {
                one: "{0} higanyhüvelyk",
                other: "{0} higanyhüvelyk"
            },
            pressureMillibar: {
                one: "{0} millibar",
                other: "{0} millibar"
            },
            speedKilometerPerHour: {
                one: "{0} kilométer per óra",
                other: "{0} kilométer per óra"
            },
            speedMeterPerSecond: {
                one: "{0} méter per másodperc",
                other: "{0} méter per másodperc"
            },
            speedMilePerHour: {
                one: "{0} mérföld per óra",
                other: "{0} mérföld per óra"
            },
            speedKnot: {
                one: "{0} csomó",
                other: "{0} csomó"
            },
            temperatureGeneric: _2k5m9,
            temperatureCelsius: {
                one: "{0} Celsius-fok",
                other: "{0} Celsius-fok"
            },
            temperatureFahrenheit: {
                one: "{0} Fahrenheit-fok",
                other: "{0} Fahrenheit-fok"
            },
            temperatureKelvin: {
                one: "{0} kelvin",
                other: "{0} kelvin"
            },
            volumeCubicKilometer: {
                one: "{0} köbkilométer",
                other: "{0} köbkilométer"
            },
            volumeCubicMeter: {
                one: "{0} köbméter",
                other: "{0} köbméter"
            },
            volumeCubicCentimeter: {
                one: "{0} köbcentiméter",
                other: "{0} köbcentiméter"
            },
            volumeCubicMile: {
                one: "{0} köbmérföld",
                other: "{0} köbmérföld"
            },
            volumeCubicYard: {
                one: "{0} köbyard",
                other: "{0} köbyard"
            },
            volumeCubicFoot: {
                one: "{0} köbláb",
                other: "{0} köbláb"
            },
            volumeCubicInch: {
                one: "{0} köbhüvelyk",
                other: "{0} köbhüvelyk"
            },
            volumeMegaliter: {
                one: "{0} megaliter",
                other: "{0} megaliter"
            },
            volumeHectoliter: {
                one: "{0} hektoliter",
                other: "{0} hektoliter"
            },
            volumeLiter: {
                one: "{0} liter",
                other: "{0} liter"
            },
            volumeDeciliter: {
                one: "{0} deciliter",
                other: "{0} deciliter"
            },
            volumeCentiliter: {
                one: "{0} centiliter",
                other: "{0} centiliter"
            },
            volumeMilliliter: {
                one: "{0} milliliter",
                other: "{0} milliliter"
            },
            volumePintMetric: {
                one: "{0} metrikus pint",
                other: "{0} metrikus pint"
            },
            volumeCupMetric: {
                one: "{0} bögre",
                other: "{0} bögre"
            },
            volumeAcreFoot: {
                one: "{0} hold-láb",
                other: "{0} hold-láb"
            },
            volumeGallon: {
                one: "{0} gallon",
                other: "{0} gallon"
            },
            volumeQuart: {
                one: "{0} quart",
                other: "{0} quart"
            },
            volumePint: {
                one: "{0} pint",
                other: "{0} pint"
            },
            volumeCup: {
                one: "{0} csésze",
                other: "{0} csésze"
            },
            volumeFluidOunce: {
                one: "{0} folyadékuncia",
                other: "{0} folyadékuncia"
            },
            volumeTablespoon: {
                one: "{0} evőkanál",
                other: "{0} evőkanál"
            },
            volumeTeaspoon: {
                one: "{0} kávéskanál",
                other: "{0} kávéskanál"
            }
        },
        compoundUnit: {
            per: "{0} per {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: _2k5m19,
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: {
                one: "{0} ford.",
                other: "{0} ford."
            },
            angleRadian: {
                one: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: _2k5m57,
            angleArcMinute: _2k5m10,
            angleArcSecond: _2k5m11,
            areaSquareKilometer: _2k5m62,
            areaHectare: _2k5m34,
            areaSquareMeter: _2k5m35,
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: {
                one: "{0} mf²",
                other: "{0} mf²"
            },
            areaAcre: {
                one: "{0} kh",
                other: "{0} kh"
            },
            areaSquareYard: {
                one: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: _2k5m63,
            areaSquareInch: {
                one: "{0} in²",
                other: "{0} in²"
            },
            concentrKarat: {
                one: "{0} kt",
                other: "{0} kt"
            },
            consumptionLiterPerKilometer: {
                one: "{0} l/km",
                other: "{0} l/km"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} l/100 km",
                other: "{0} l/100km"
            },
            consumptionMilePerGallon: {
                one: "{0} mpg",
                other: "{0} mpg"
            },
            digitalTerabyte: {
                one: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: {
                one: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: {
                one: "{0} kB",
                other: "{0} kB"
            },
            digitalKilobit: {
                one: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: _2k5m80,
            digitalBit: _2k5m58,
            durationCentury: {
                one: "{0} sz.",
                other: "{0} sz."
            },
            durationYear: _2k5m33,
            durationMonth: _2k5m95,
            durationWeek: _2k5m59,
            durationDay: _2k5m60,
            durationHour: _2k5m20,
            durationMinute: _2k5m64,
            durationSecond: _2k5m21,
            durationMillisecond: _2k5m36,
            durationMicrosecond: {
                one: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: {
                one: "{0} kcal",
                other: "{0} kcal"
            },
            energyCalorie: _2k5m65,
            energyFoodcalorie: _2k5m65,
            energyKilojoule: {
                one: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: _2k5m37,
            lengthMeter: _2k5m22,
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: _2k5m38,
            lengthMillimeter: _2k5m39,
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: _2k5m40,
            lengthMile: _2k5m41,
            lengthYard: _2k5m42,
            lengthFoot: _2k5m61,
            lengthInch: _2k5m110,
            lengthParsec: {
                one: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: _2k5m101,
            lengthAstronomicalUnit: {
                one: "{0} CsE",
                other: "{0} CsE"
            },
            lengthNauticalMile: {
                one: "{0} nmi",
                other: "{0} nmi"
            },
            lengthMileScandinavian: {
                one: "{0} mil",
                other: "{0} mil"
            },
            lightLux: {
                one: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: {
                one: "{0} t",
                other: "{0} t"
            },
            massKilogram: _2k5m43,
            massGram: _2k5m23,
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} µg",
                other: "{0} µg"
            },
            massTon: {
                one: "{0} tn",
                other: "{0} tn"
            },
            massPound: {
                one: "{0} lb",
                other: "{0} lb"
            },
            massOunce: {
                one: "{0} oz",
                other: "{0} oz"
            },
            massOunceTroy: {
                one: "{0} oz t",
                other: "{0} oz t"
            },
            massCarat: {
                one: "{0} Kt",
                other: "{0} Kt"
            },
            powerGigawatt: {
                one: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: _2k5m44,
            powerWatt: _2k5m24,
            powerMilliwatt: {
                one: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: _2k5m45,
            pressureHectopascal: _2k5m66,
            pressureMillimeterOfMercury: {
                one: "{0} mm Hg",
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0} psi",
                other: "{0} psi"
            },
            pressureInchHg: _2k5m82,
            pressureMillibar: _2k5m46,
            speedKilometerPerHour: _2k5m83,
            speedMeterPerSecond: _2k5m67,
            speedMilePerHour: _2k5m68,
            speedKnot: {
                one: "{0} kn",
                other: "{0} kn"
            },
            temperatureGeneric: _2k5m9,
            temperatureCelsius: _2k5m47,
            temperatureFahrenheit: _2k5m48,
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: _2k5m69,
            volumeCubicMeter: {
                one: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: _2k5m70,
            volumeCubicYard: {
                one: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: {
                one: "{0} in³",
                other: "{0} in³"
            },
            volumeMegaliter: {
                one: "{0} Ml",
                other: "{0} Ml"
            },
            volumeHectoliter: {
                one: "{0} hl",
                other: "{0} hl"
            },
            volumeLiter: _2k5m25,
            volumeDeciliter: {
                one: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} cl",
                other: "{0} cl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                other: "{0} ml"
            },
            volumePintMetric: {
                one: "{0} mpt",
                other: "{0} mpt"
            },
            volumeCupMetric: {
                one: "{0} bg",
                other: "{0} bg"
            },
            volumeAcreFoot: {
                one: "{0} ac ft",
                other: "{0} ac ft"
            },
            volumeGallon: {
                one: "{0} gal",
                other: "{0} gal"
            },
            volumeQuart: {
                one: "{0} qt",
                other: "{0} qt"
            },
            volumePint: {
                one: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: {
                one: "{0} cs.",
                other: "{0} cs."
            },
            volumeFluidOunce: {
                one: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} ek.",
                other: "{0} ek."
            },
            volumeTeaspoon: {
                one: "{0} kk.",
                other: "{0} kk."
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            massStone: {
                other: "{0} st"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: _2k5m19,
            angleDegree: _2k5m9,
            angleArcMinute: _2k5m10,
            angleArcSecond: _2k5m11,
            areaSquareKilometer: _2k5m62,
            areaHectare: _2k5m34,
            areaSquareMeter: _2k5m35,
            areaSquareMile: {
                one: "{0} mi²",
                other: "{0} mi²"
            },
            areaAcre: {
                one: "{0} ac",
                other: "{0} ac"
            },
            areaSquareFoot: _2k5m63,
            "consumptionLiterPer-100kilometers": {
                one: "{0} l/100 km",
                other: "{0} l/100 km"
            },
            durationYear: _2k5m33,
            durationMonth: {
                one: "{0} h.",
                other: "{0} h."
            },
            durationWeek: _2k5m59,
            durationDay: _2k5m60,
            durationHour: _2k5m20,
            durationMinute: _2k5m64,
            durationSecond: _2k5m21,
            durationMillisecond: _2k5m36,
            lengthKilometer: _2k5m37,
            lengthMeter: _2k5m22,
            lengthCentimeter: _2k5m38,
            lengthMillimeter: _2k5m39,
            lengthPicometer: _2k5m40,
            lengthMile: _2k5m41,
            lengthYard: _2k5m42,
            lengthFoot: _2k5m61,
            lengthInch: _2k5m110,
            lengthLightYear: _2k5m101,
            massKilogram: _2k5m43,
            massGram: _2k5m23,
            massPound: _2k5m81,
            massOunce: _2k5m96,
            powerKilowatt: _2k5m44,
            powerWatt: _2k5m24,
            powerHorsepower: _2k5m45,
            pressureHectopascal: _2k5m66,
            pressureInchHg: _2k5m82,
            pressureMillibar: _2k5m46,
            speedKilometerPerHour: _2k5m83,
            speedMeterPerSecond: _2k5m67,
            speedMilePerHour: _2k5m68,
            temperatureCelsius: _2k5m47,
            temperatureFahrenheit: _2k5m48,
            volumeCubicKilometer: _2k5m69,
            volumeCubicMile: _2k5m70,
            volumeLiter: _2k5m25
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "{0} idő",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} nyári idő",
        standard: "{0} zónaidő"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "á", "b", "c", "{cs}", "{ccs}", "d", "{dz}", "{ddz}", "{dzs}", "{ddzs}", "e", "é", "f", "g", "{gy}", "{ggy}", "h", "i", "í", "j", "k", "l", "{ly}", "{lly}", "m", "n", "{ny}", "{nny}", "o", "ó", "ö", "ő", "p", "r", "s", "{sz}", "{ssz}", "t", "{ty}", "{tty}", "u", "ú", "ü", "ű", "v", "z", "{zs}", "{zzs}" ],
        auxiliary: [ "à", "ă", "â", "å", "ä", "ã", "ā", "æ", "ç", "è", "ĕ", "ê", "ë", "ē", "ì", "ĭ", "î", "ï", "ī", "ñ", "ò", "ŏ", "ô", "ø", "ō", "œ", "q", "ù", "ŭ", "û", "ū", "w", "x", "y", "ÿ" ],
        index: [ "A", "Á", "B", "C", "{CS}", "D", "{DZ}", "{DZS}", "E", "É", "F", "G", "{GY}", "H", "I", "Í", "J", "K", "L", "{LY}", "M", "N", "{NY}", "O", "Ó", "Ö", "Ő", "P", "Q", "R", "S", "{SZ}", "T", "{TY}", "U", "Ú", "Ü", "Ű", "V", "W", "X", "Y", "Z", "{ZS}" ],
        punctuation: [ "\\-", "–", ",", ";", "\\:", "!", "?", ".", "…", "'", "’", '"', "”", "„", "«", "»", "(", ")", "\\[", "\\]", "\\{", "\\}", "⟨", "⟩", "§", "@", "*", "/", "\\&", "#", "~", "⁒" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0}…",
        "word-initial": "…{0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _2k5m488,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _2k5m540,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _2k5m540,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _2k5m488,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _2k5m488,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _2k5m488,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _2k5m488,
        digits: "renderEthiopic"
    },
    finance: _2k5m490,
    fullwide: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _2k5m488,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _2k5m488,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _2k5m488,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _2k5m488,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _2k5m499,
    hansfin: _2k5m502,
    hant: _2k5m499,
    hantfin: _2k5m502,
    hebr: {
        symbols: _2k5m488,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _2k5m488,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _2k5m499,
    jpanfin: _2k5m502,
    kali: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _2k5m488,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _2k5m488,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _2k5m488,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _2k5m488,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _2k5m488,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _2k5m488,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _2k5m488,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _2k5m488,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _2k5m490,
    nkoo: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _2k5m488,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _2k5m488,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _2k5m488,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _2k5m488,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _2k5m488,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _2k5m488,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _2k5m490,
    vaii: {
        symbols: _2k5m488,
        formats: _2k5m540,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _2k5m488,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _2k5m532,
        datePartsOrder: "ymd",
        dateIntervalFormats: _2k5m535,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _2k5m520,
        dayPeriods: _2k5m534,
        monthNames: _2k5m528,
        eraNames: {
            wide: [ "BK" ],
            abbreviated: [ "BK" ]
        },
        quarterNames: _2k5m506,
        fields: _2k5m543
    },
    chinese: _2k5m546,
    coptic: {
        dateFormats: _2k5m532,
        datePartsOrder: "ymd",
        dateIntervalFormats: _2k5m535,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _2k5m520,
        dayPeriods: _2k5m534,
        monthNames: {
            format: _2k5m510,
            standAlone: _2k5m510
        },
        eraNames: _2k5m129,
        quarterNames: _2k5m506,
        fields: _2k5m543
    },
    dangi: _2k5m546,
    ethioaa: _2k5m544,
    ethiopic: {
        dateFormats: _2k5m532,
        datePartsOrder: "ymd",
        dateIntervalFormats: _2k5m535,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _2k5m520,
        dayPeriods: _2k5m534,
        monthNames: {
            format: _2k5m512,
            standAlone: _2k5m512
        },
        eraNames: _2k5m129,
        quarterNames: _2k5m506,
        fields: _2k5m543
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "y. MMMM d., EEEE",
                longDate: "y. MMMM d.",
                mediumDate: "y. MMM d.",
                shortDate: "y. MM. dd.",
                fullTime: "H:mm:ss zzzz",
                longTime: "H:mm:ss z",
                mediumTime: "H:mm:ss",
                shortTime: "H:mm",
                shortDateTime: "y. MM. dd. H:mm",
                mediumDateTime: "y. MMM d. H:mm:ss",
                longDateTime: "y. MMMM d. H:mm:ss z",
                fullDateTime: "y. MMMM d., EEEE H:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "d., E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y.",
                GyMMM: "G y. MMM",
                GyMMMd: "G y. MMM d.",
                GyMMMEd: "G y. MMM d., E",
                h: "a h",
                H: "H",
                hm: "a h:mm",
                Hm: "H:mm",
                hms: "a h:mm:ss",
                Hms: "H:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "M. d.",
                MEd: "M. d., E",
                MMM: "LLL",
                MMMd: "MMM d.",
                MMMEd: "MMM d., E",
                MMMMd: "MMMM d.",
                mmss: "mm:ss",
                ms: "mm:ss",
                y: "y.",
                yM: "y. M.",
                yMd: "y. MM. dd.",
                yMEd: "y. MM. dd., E",
                yMMM: "y. MMM",
                yMMMd: "y. MMM d.",
                yMMMEd: "y. MMM d., E",
                yMMMM: "y. MMMM",
                yQQQ: "y. QQQ",
                yQQQQ: "y. QQQQ"
            }
        },
        datePartsOrder: "ymd",
        dateIntervalFormats: {
            d: {
                d: "d–d."
            },
            h: _2k5m15,
            H: {
                H: "H–H"
            },
            hm: _2k5m134,
            Hm: _2k5m54,
            hmv: _2k5m156,
            Hmv: _2k5m88,
            hv: _2k5m55,
            Hv: {
                H: "H–H v"
            },
            M: {
                M: "M–M."
            },
            Md: {
                d: "M. d–d.",
                M: "M. d. – M. d."
            },
            MEd: {
                d: "M. dd., E – M. d., E",
                M: "M. d., E – M. d., E"
            },
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _2k5m92,
            MMMEd: _2k5m123,
            y: {
                y: "y–y"
            },
            yM: {
                M: "y. MM–MM.",
                y: "y. MM. – y. MM."
            },
            yMd: {
                d: "y. MM. dd–dd.",
                M: "y. MM. dd. – MM. dd.",
                y: "y. MM. dd. – y. MM. dd."
            },
            yMEd: {
                d: "y. MM. dd., E – dd., E",
                M: "y. MM. dd., E – MM. dd., E",
                y: "y. MM. dd., E – y. MM. dd., E"
            },
            yMMM: {
                M: "y. MMM–MMM",
                y: "y. MMM – y. MMM"
            },
            yMMMd: {
                d: "y. MMM d–d.",
                M: "y. MMM d. – MMM d.",
                y: "y. MMM d. – y. MMM d."
            },
            yMMMEd: {
                d: "y. MMM d., E – d., E",
                M: "y. MMM d., E – MMM d., E",
                y: "y. MMM d., E – y. MMM d., E"
            },
            yMMMM: {
                M: "y. MMMM–MMMM",
                y: "y. MMMM – y. MMMM"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _2k5m520,
        dayPeriods: _2k5m534,
        monthNames: _2k5m528,
        eraNames: {
            wide: [ "időszámításunk előtt", "időszámításunk szerint" ],
            abbreviated: [ "i. e.", "i. sz." ]
        },
        quarterNames: _2k5m506,
        fields: _2k5m543
    },
    hebrew: {
        dateFormats: _2k5m532,
        datePartsOrder: "ymd",
        dateIntervalFormats: _2k5m535,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _2k5m520,
        dayPeriods: _2k5m534,
        monthNames: {
            format: _2k5m508,
            standAlone: _2k5m508
        },
        eraNames: {
            wide: [ "TÉ" ],
            abbreviated: [ "TÉ" ]
        },
        quarterNames: _2k5m506,
        fields: _2k5m543
    },
    indian: {
        dateFormats: _2k5m532,
        datePartsOrder: "ymd",
        dateIntervalFormats: _2k5m535,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _2k5m520,
        dayPeriods: _2k5m534,
        monthNames: {
            format: _2k5m513,
            standAlone: _2k5m513
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _2k5m506,
        fields: _2k5m543
    },
    islamic: _2k5m545,
    "islamic-umalqura": _2k5m545,
    "islamic-tbla": _2k5m545,
    "islamic-civil": _2k5m545,
    "islamic-rgsa": _2k5m545,
    iso8601: _2k5m544,
    japanese: {
        dateFormats: {
            basic: {
                fullDate: "G y. MMMM d., EEEE",
                longDate: "G y. MMMM d.",
                mediumDate: "G y.MM.dd.",
                shortDate: "GGGGG y.MM.dd.",
                fullTime: "H:mm:ss zzzz",
                longTime: "H:mm:ss z",
                mediumTime: "H:mm:ss",
                shortTime: "H:mm",
                shortDateTime: "GGGGG y.MM.dd. H:mm",
                mediumDateTime: "G y.MM.dd. H:mm:ss",
                longDateTime: "G y. MMMM d. H:mm:ss z",
                fullDateTime: "G y. MMMM d., EEEE H:mm:ss zzzz"
            },
            cldr: _2k5m525
        },
        datePartsOrder: "ymd",
        dateIntervalFormats: _2k5m535,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _2k5m520,
        dayPeriods: _2k5m534,
        monthNames: _2k5m528,
        eraNames: {
            wide: _2k5m541,
            abbreviated: _2k5m541
        },
        quarterNames: _2k5m506,
        fields: _2k5m543
    },
    persian: {
        dateFormats: _2k5m532,
        datePartsOrder: "ymd",
        dateIntervalFormats: _2k5m535,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _2k5m520,
        dayPeriods: _2k5m534,
        monthNames: {
            format: _2k5m509,
            standAlone: _2k5m509
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _2k5m506,
        fields: _2k5m543
    },
    roc: {
        dateFormats: _2k5m532,
        datePartsOrder: "ymd",
        dateIntervalFormats: _2k5m535,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _2k5m520,
        dayPeriods: _2k5m534,
        monthNames: _2k5m528,
        eraNames: {
            wide: _2k5m18,
            abbreviated: _2k5m18
        },
        quarterNames: _2k5m506,
        fields: _2k5m543
    },
    islamicc: _2k5m544
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinal(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "mínusz " + this.renderSpelloutCardinal(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinal(Math.floor(n)) + " egész " + this.renderSpelloutCardinal(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return this.renderSpelloutCardinalInitial(Math.floor(n / 1e15)) + " billiárd" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinal(n % 1e15));
    if (n >= 1e12) return this.renderSpelloutCardinalInitial(Math.floor(n / 1e12)) + " billió" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinal(n % 1e12));
    if (n >= 1e9) return this.renderSpelloutCardinalInitial(Math.floor(n / 1e9)) + " milliárd" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinal(n % 1e9));
    if (n >= 1e6) return this.renderSpelloutCardinalInitial(Math.floor(n / 1e6)) + " millió" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinal(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalInitial(Math.floor(n / 1e3)) + "­ezer" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 1e3) return "ezer" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinalInitial(Math.floor(n / 100)) + "­száz" + (n === 200 ? "" : "­" + this.renderSpelloutCardinal(n % 100));
    if (n >= 100) return "száz" + (n === 100 ? "" : "­" + this.renderSpelloutCardinal(n % 100));
    if (n >= 90) return "kilencven" + (n === 90 ? "" : "­" + this.renderSpelloutCardinal(n % 10));
    if (n >= 80) return "nyolcvan" + (n === 80 ? "" : "­" + this.renderSpelloutCardinal(n % 10));
    if (n >= 70) return "hetven" + (n === 70 ? "" : "­" + this.renderSpelloutCardinal(n % 10));
    if (n >= 60) return "hatvan" + (n === 60 ? "" : "­" + this.renderSpelloutCardinal(n % 10));
    if (n >= 50) return "ötven" + (n === 50 ? "" : "­" + this.renderSpelloutCardinal(n % 10));
    if (n >= 40) return "negyven" + (n === 40 ? "" : "­" + this.renderSpelloutCardinal(n % 10));
    if (n >= 30) return "harminc" + (n === 30 ? "" : "­" + this.renderSpelloutCardinal(n % 10));
    if (n >= 21) return "huszon­" + this.renderSpelloutCardinal(n % 10);
    if (n >= 20) return "húsz";
    if (n >= 11) return "tizen­" + this.renderSpelloutCardinal(n % 10);
    if (n >= 10) return "tíz";
    if (n >= 9) return "kilenc";
    if (n >= 8) return "nyolc";
    if (n >= 7) return "hét";
    if (n >= 6) return "hat";
    if (n >= 5) return "öt";
    if (n >= 4) return "négy";
    if (n >= 3) return "három";
    if (n >= 2) return "kettő";
    if (n >= 1) return "egy";
    if (n >= 0) return "nulla";
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderSpelloutCardinalInitial = function(n) {
    if (n >= 3) return this.renderSpelloutCardinal(n);
    if (n >= 2) return "két";
    if (n >= 1) return "egy";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat({
    id: "Pacific/Midway",
    utcStandardOffsetSeconds: -39600,
    displayName: "Midway-szigetek",
    countryId: "UM"
}, P.timeZones.slice(1, 7), {
    id: "Pacific/Marquesas",
    regionId: "061",
    utcStandardOffsetSeconds: -34200,
    displayName: "Marquesas-szigetek",
    countryId: "PF"
}, P.timeZones[8], {
    id: "Pacific/Gambier",
    regionId: "061",
    utcStandardOffsetSeconds: -32400,
    displayName: "Gambier-szigetek",
    countryId: "PF"
}, P.timeZones.slice(10, 16), {
    id: "Pacific/Pitcairn",
    regionId: "061",
    utcStandardOffsetSeconds: -28800,
    displayName: "Pitcairn-szigetek",
    countryId: "PN"
}, P.timeZones.slice(17, 30), {
    id: "America/Mazatlan",
    regionId: "013",
    utcStandardOffsetSeconds: -25200,
    displayName: "Mazatlán",
    countryId: "MX"
}, P.timeZones.slice(31, 36), {
    id: "America/North_Dakota/Beulah",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Beulah, Észak-Dakota",
    countryId: "US"
}, P.timeZones.slice(38, 41), {
    id: "Pacific/Galapagos",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Galapagos-szigetek",
    countryId: "EC"
}, P.timeZones[44], {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Húsvét-szigetek",
    countryId: "CL"
}, P.timeZones[45], {
    id: "America/North_Dakota/Center",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Középső, Észak-Dakota",
    countryId: "US"
}, P.timeZones.slice(46, 49), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mexikóváros",
    countryId: "MX"
}, P.timeZones[51], {
    id: "America/Merida",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mérida",
    countryId: "MX"
}, {
    id: "America/North_Dakota/New_Salem",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "New Salem, Észak-Dakota",
    countryId: "US"
}, P.timeZones.slice(53, 57), {
    id: "America/El_Salvador",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Salvador",
    countryId: "SV"
}, P.timeZones.slice(57, 62), {
    id: "America/Bogota",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Bogotá",
    countryId: "CO"
}, {
    id: "America/Cancun",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Cancún",
    countryId: "MX"
}, P.timeZones[65], {
    id: "America/Eirunepe",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Eirunepé",
    countryId: "BR"
}, P.timeZones.slice(67, 69), {
    id: "America/Havana",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Havanna",
    countryId: "CU"
}, P.timeZones.slice(70, 73), {
    id: "America/Cayman",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Kajmán-szigetek",
    countryId: "KY"
}, P.timeZones.slice(73, 82), {
    id: "America/Rio_Branco",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Río Branco",
    countryId: "BR"
}, P.timeZones.slice(83, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones.slice(91, 97), {
    id: "America/Cuiaba",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Cuiabá",
    countryId: "BR"
}, P.timeZones[98], {
    id: "America/Dominica",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Dominika",
    countryId: "DM"
}, P.timeZones.slice(100, 117), {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint-Barthélemy",
    countryId: "BL"
}, P.timeZones.slice(117, 119), P.timeZones.slice(120, 127), {
    id: "America/Araguaina",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Araguaína",
    countryId: "BR"
}, P.timeZones[128], {
    id: "America/Belem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Belém",
    countryId: "BR"
}, P.timeZones.slice(130, 137), {
    id: "America/Maceio",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Maceió",
    countryId: "BR"
}, P.timeZones.slice(138, 145), P.timeZones[146], {
    id: "America/Argentina/Rio_Gallegos",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Río Gallegos",
    countryId: "AR"
}, P.timeZones.slice(147, 151), P.timeZones[152], {
    id: "America/Sao_Paulo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "São Paulo",
    countryId: "BR"
}, {
    id: "America/Argentina/Tucuman",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Tucumán",
    countryId: "AR"
}, P.timeZones[154], {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Déli-Georgia",
    countryId: "GS"
}, P.timeZones.slice(155, 157), {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azori-szigetek",
    countryId: "PT"
}, P.timeZones[160], {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Zöld-Foki Szigetek",
    countryId: "CV"
}, P.timeZones.slice(161, 166), P.timeZones.slice(167, 174), P.timeZones[175], {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Kanári-szigetek",
    countryId: "ES"
}, {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lisszabon",
    countryId: "PT"
}, P.timeZones.slice(177, 180), {
    id: "Europe/Isle_of_Man",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Man-sziget",
    countryId: "IM"
}, P.timeZones.slice(180, 183), {
    id: "Atlantic/Reykjavik",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Reykjavík",
    countryId: "IS"
}, {
    id: "Atlantic/St_Helena",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Szent Ilona",
    countryId: "SH"
}, {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Algír",
    countryId: "DZ"
}, {
    id: "Europe/Amsterdam",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Amszterdam",
    countryId: "NL"
}, P.timeZones.slice(189, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrád",
    countryId: "RS"
}, P.timeZones[192], P.timeZones[194], {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Brüsszel",
    countryId: "BE"
}, P.timeZones[196], {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bécs",
    countryId: "AT"
}, {
    id: "Europe/Busingen",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Büsingen",
    countryId: "DE"
}, P.timeZones.slice(198, 200), P.timeZones[201], {
    id: "Africa/El_Aaiun",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "El-Ajún",
    countryId: "EH"
}, {
    id: "Europe/Gibraltar",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Gibraltár",
    countryId: "GI"
}, P.timeZones[204], {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Koppenhága",
    countryId: "DK"
}, P.timeZones.slice(205, 210), {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luxemburg",
    countryId: "LU"
}, P.timeZones[211], {
    id: "Africa/Malabo",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "Malabó",
    countryId: "GQ"
}, P.timeZones[214], {
    id: "Europe/Malta",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Málta",
    countryId: "MT"
}, P.timeZones.slice(215, 218), P.timeZones.slice(219, 221), {
    id: "Europe/Bratislava",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Pozsony",
    countryId: "SK"
}, {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Prága",
    countryId: "CZ"
}, {
    id: "Europe/Paris",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Párizs",
    countryId: "FR"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Róma",
    countryId: "IT"
}, P.timeZones[223], P.timeZones.slice(225, 227), {
    id: "Europe/Sarajevo",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Szarajevó",
    countryId: "BA"
}, {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, {
    id: "Africa/Tunis",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tunisz",
    countryId: "TN"
}, P.timeZones[229], {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Varsó",
    countryId: "PL"
}, {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Vatikán",
    countryId: "VA"
}, {
    id: "Europe/Zagreb",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zágráb",
    countryId: "HR"
}, {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zürich",
    countryId: "CH"
}, {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Athén",
    countryId: "GR"
}, {
    id: "Asia/Beirut",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bejrút",
    countryId: "LB"
}, P.timeZones[237], P.timeZones[239], {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bukarest",
    countryId: "RO"
}, P.timeZones.slice(241, 244), {
    id: "Asia/Gaza",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Gáza",
    countryId: "PS"
}, P.timeZones.slice(245, 248), {
    id: "Asia/Jerusalem",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Jeruzsálem",
    countryId: "IL"
}, P.timeZones.slice(249, 251), {
    id: "Africa/Cairo",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kairó",
    countryId: "EG"
}, {
    id: "Europe/Kaliningrad",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kalinyingrád",
    countryId: "RU"
}, {
    id: "Africa/Khartoum",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kartúm",
    countryId: "SD"
}, P.timeZones.slice(253, 263), {
    id: "Europe/Sofia",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Szófia",
    countryId: "BG"
}, {
    id: "Europe/Tallinn",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Tallin",
    countryId: "EE"
}, P.timeZones.slice(265, 268), {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Addisz-Abeba",
    countryId: "ET"
}, {
    id: "Asia/Amman",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Ammán",
    countryId: "JO"
}, P.timeZones.slice(271, 273), {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdad",
    countryId: "IQ"
}, {
    id: "Asia/Bahrain",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bahrein",
    countryId: "BH"
}, {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damaszkusz",
    countryId: "SY"
}, {
    id: "Africa/Dar_es_Salaam",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Dar es-Salaam",
    countryId: "TZ"
}, {
    id: "Africa/Djibouti",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Dzsibuti",
    countryId: "DJ"
}, {
    id: "Europe/Istanbul",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Isztanbul",
    countryId: "TR"
}, P.timeZones[280], {
    id: "Asia/Qatar",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Katar",
    countryId: "QA"
}, P.timeZones[281], {
    id: "Indian/Comoro",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Komoró",
    countryId: "KM"
}, {
    id: "Asia/Kuwait",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Kuvait",
    countryId: "KW"
}, P.timeZones[283], {
    id: "Europe/Minsk",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Minszk",
    countryId: "BY"
}, P.timeZones[285], {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moszkva",
    countryId: "RU"
}, P.timeZones[287], {
    id: "Asia/Riyadh",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Rijád",
    countryId: "SA"
}, P.timeZones[291], {
    id: "Europe/Simferopol",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Szimferopol",
    countryId: "UA"
}, {
    id: "Europe/Volgograd",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Volgográd",
    countryId: "RU"
}, {
    id: "Asia/Aden",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Áden",
    countryId: "YE"
}, {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Teherán",
    countryId: "IR"
}, P.timeZones.slice(294, 297), {
    id: "Asia/Yerevan",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Jereván",
    countryId: "AM"
}, P.timeZones.slice(297, 300), {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Réunion",
    countryId: "RE"
}, P.timeZones[302], {
    id: "Europe/Samara",
    regionId: "151",
    utcStandardOffsetSeconds: 14400,
    displayName: "Szamara",
    countryId: "RU"
}, {
    id: "Asia/Tbilisi",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Tbiliszi",
    countryId: "GE"
}, P.timeZones[304], P.timeZones[306], {
    id: "Asia/Aqtau",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aktau",
    countryId: "KZ"
}, {
    id: "Asia/Aqtobe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aktöbe",
    countryId: "KZ"
}, {
    id: "Asia/Ashgabat",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Asgabat",
    countryId: "TM"
}, P.timeZones.slice(310, 312), {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Jekatyerinburg",
    countryId: "RU"
}, {
    id: "Asia/Karachi",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Karacsi",
    countryId: "PK"
}, P.timeZones[313], {
    id: "Asia/Qyzylorda",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Kizilorda",
    countryId: "KZ"
}, {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Maldív-szigetek",
    countryId: "MV"
}, P.timeZones.slice(315, 317), {
    id: "Asia/Samarkand",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Szamarkand",
    countryId: "UZ"
}, {
    id: "Asia/Tashkent",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Taskent",
    countryId: "UZ"
}, P.timeZones.slice(321, 324), {
    id: "Asia/Almaty",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Alma-Ata",
    countryId: "KZ"
}, {
    id: "Asia/Bishkek",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Biskek",
    countryId: "KG"
}, P.timeZones[326], {
    id: "Asia/Dhaka",
    regionId: "034",
    utcStandardOffsetSeconds: 21600,
    displayName: "Dháka",
    countryId: "BD"
}, {
    id: "Asia/Omsk",
    regionId: "151",
    utcStandardOffsetSeconds: 21600,
    displayName: "Omszk",
    countryId: "RU"
}, P.timeZones.slice(329, 331), {
    id: "Antarctica/Vostok",
    utcStandardOffsetSeconds: 21600,
    displayName: "Vosztok",
    countryId: "AQ"
}, {
    id: "Asia/Urumqi",
    regionId: "030",
    utcStandardOffsetSeconds: 21600,
    displayName: "Ürümqi",
    countryId: "CN"
}, {
    id: "Indian/Cocos",
    utcStandardOffsetSeconds: 23400,
    displayName: "Kókusz-sziget",
    countryId: "CC"
}, P.timeZones.slice(334, 337), P.timeZones.slice(338, 342), {
    id: "Indian/Christmas",
    utcStandardOffsetSeconds: 25200,
    displayName: "Karácsony-sziget",
    countryId: "CX"
}, {
    id: "Asia/Krasnoyarsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Krasznojarszk",
    countryId: "RU"
}, {
    id: "Asia/Novokuznetsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Novokuznyeck",
    countryId: "RU"
}, {
    id: "Asia/Novosibirsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Novoszibirszk",
    countryId: "RU"
}, P.timeZones.slice(345, 348), {
    id: "Asia/Vientiane",
    regionId: "035",
    utcStandardOffsetSeconds: 25200,
    displayName: "Vientián",
    countryId: "LA"
}, P.timeZones[349], {
    id: "Asia/Choibalsan",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Csojbalszan",
    countryId: "MN"
}, {
    id: "Asia/Hong_Kong",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Hongkong",
    countryId: "HK"
}, {
    id: "Asia/Irkutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 28800,
    displayName: "Irkutszk",
    countryId: "RU"
}, P.timeZones[353], {
    id: "Asia/Kuching",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Kucseng",
    countryId: "MY"
}, {
    id: "Asia/Makassar",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Makasar",
    countryId: "ID"
}, {
    id: "Asia/Macau",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Makaó",
    countryId: "MO"
}, P.timeZones.slice(357, 359), {
    id: "Asia/Shanghai",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Sanghaj",
    countryId: "CN"
}, {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Szingapúr",
    countryId: "SG"
}, {
    id: "Asia/Taipei",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Tajpej",
    countryId: "TW"
}, {
    id: "Asia/Ulaanbaatar",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Ulánbátor",
    countryId: "MN"
}, P.timeZones[363], {
    id: "Asia/Chita",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Csita",
    countryId: "RU"
}, P.timeZones[365], {
    id: "Asia/Khandyga",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Handiga",
    countryId: "RU"
}, {
    id: "Asia/Yakutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jakutszk",
    countryId: "RU"
}, P.timeZones[366], P.timeZones[368], {
    id: "Asia/Pyongyang",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Phenjan",
    countryId: "KP"
}, {
    id: "Asia/Seoul",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Szöul",
    countryId: "KR"
}, {
    id: "Asia/Tokyo",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tokió",
    countryId: "JP"
}, P.timeZones.slice(373, 387), {
    id: "Asia/Ust-Nera",
    regionId: "151",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Uszty-Nyera",
    countryId: "RU"
}, {
    id: "Asia/Vladivostok",
    regionId: "151",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Vlagyivosztok",
    countryId: "RU"
}, P.timeZones.slice(389, 394), {
    id: "Pacific/Kosrae",
    regionId: "057",
    utcStandardOffsetSeconds: 39600,
    displayName: "Kosrae-szigetek",
    countryId: "FM"
}, {
    id: "Asia/Magadan",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Magadán",
    countryId: "RU"
}, P.timeZones.slice(396, 399), {
    id: "Asia/Sakhalin",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Szahalin",
    countryId: "RU"
}, {
    id: "Asia/Srednekolymsk",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Szrednekolimszk",
    countryId: "RU"
}, {
    id: "Asia/Anadyr",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Anadir",
    countryId: "RU"
}, P.timeZones[402], {
    id: "Pacific/Fiji",
    regionId: "054",
    utcStandardOffsetSeconds: 43200,
    displayName: "Fidzsi",
    countryId: "FJ"
}, P.timeZones[404], {
    id: "Asia/Kamchatka",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Kamcsatka",
    countryId: "RU"
}, {
    id: "Pacific/Kwajalein",
    regionId: "057",
    utcStandardOffsetSeconds: 43200,
    displayName: "Kwajalein-zátony",
    countryId: "MH"
}, {
    id: "Pacific/Majuro",
    regionId: "057",
    utcStandardOffsetSeconds: 43200,
    displayName: "Majuro-zátony",
    countryId: "MH"
}, P.timeZones.slice(408, 411), {
    id: "Pacific/Wake",
    utcStandardOffsetSeconds: 43200,
    displayName: "Wake-sziget",
    countryId: "UM"
}, P.timeZones[412], {
    id: "Pacific/Chatham",
    regionId: "053",
    utcStandardOffsetSeconds: 45900,
    displayName: "Chatham-szigetek",
    countryId: "NZ"
}, P.timeZones.slice(414, 418), {
    id: "Pacific/Kiritimati",
    regionId: "057",
    utcStandardOffsetSeconds: 50400,
    displayName: "Kiritimati-sziget",
    countryId: "KI"
});

inter.territories = [ _2k5m336, _2k5m373, _2k5m451, _2k5m227, _2k5m228, _2k5m383, _2k5m457, _2k5m400, _2k5m384, _2k5m449, _2k5m229, _2k5m198, _2k5m262, _2k5m133, _2k5m412, _2k5m293, _2k5m175, _2k5m158, _2k5m263, _2k5m316, _2k5m437, _2k5m352, _2k5m385, _2k5m230, _2k5m294, _2k5m264, _2k5m231, _2k5m199, _2k5m176, _2k5m232, _2k5m200, _2k5m363, _2k5m233, _2k5m418, _2k5m265, _2k5m145, _2k5m266, _2k5m337, _2k5m424, _2k5m201, _2k5m267, _2k5m353, _2k5m234, _2k5m159, _2k5m177, _2k5m202, _2k5m161, _2k5m386, _2k5m364, _2k5m317, _2k5m318, _2k5m164, _2k5m235, _2k5m144, _2k5m268, _2k5m438, _2k5m269, _2k5m178, _2k5m419, _2k5m413, _2k5m295, _2k5m319, _2k5m444, _2k5m401, _2k5m445, _2k5m443, _2k5m236, _2k5m402, _2k5m446, _2k5m414, _2k5m394, _2k5m270, _2k5m395, _2k5m237, _2k5m238, _2k5m374, _2k5m403, _2k5m396, _2k5m387, _2k5m203, _2k5m320, _2k5m239, _2k5m375, _2k5m404, _2k5m365, _2k5m376, _2k5m179, _2k5m204, _2k5m180, _2k5m296, _2k5m240, _2k5m271, _2k5m205, _2k5m321, _2k5m165, _2k5m297, _2k5m272, _2k5m206, _2k5m207, _2k5m338, _2k5m181, _2k5m420, _2k5m425, _2k5m298, _2k5m273, _2k5m405, _2k5m354, _2k5m182, _2k5m299, _2k5m166, _2k5m167, _2k5m208, _2k5m209, _2k5m241, _2k5m183, _2k5m184, _2k5m210, _2k5m274, _2k5m388, _2k5m300, _2k5m242, _2k5m211, _2k5m154, _2k5m426, _2k5m155, _2k5m185, _2k5m322, _2k5m427, _2k5m428, _2k5m339, _2k5m421, _2k5m186, _2k5m355, _2k5m275, _2k5m276, _2k5m422, _2k5m397, _2k5m277, _2k5m168, _2k5m212, _2k5m169, _2k5m151, _2k5m429, _2k5m439, _2k5m452, _2k5m423, {
    id: "QO",
    displayName: "Külső-Óceánia",
    regionId: "009",
    hasTimeZones: false
}, _2k5m187, _2k5m366, _2k5m243, _2k5m323, _2k5m244, _2k5m245, _2k5m367, _2k5m278, _2k5m301, _2k5m188, _2k5m302, _2k5m340, _2k5m356, _2k5m377, _2k5m279, _2k5m213, _2k5m389, _2k5m170, _2k5m324, _2k5m246, _2k5m406, _2k5m325, _2k5m303, _2k5m326, _2k5m247, _2k5m407, _2k5m214, _2k5m390, _2k5m327, _2k5m453, _2k5m248, _2k5m215, _2k5m280, _2k5m328, _2k5m329, _2k5m281, _2k5m189, _2k5m249, _2k5m190, _2k5m191, _2k5m304, _2k5m192, _2k5m250, _2k5m171, _2k5m378, _2k5m282, _2k5m440, _2k5m441, _2k5m379, _2k5m430, _2k5m341, _2k5m342, _2k5m172, _2k5m343, _2k5m305, _2k5m193, _2k5m408, _2k5m216, _2k5m283, _2k5m173, _2k5m409, _2k5m410, _2k5m330, _2k5m344, _2k5m391, _2k5m251, _2k5m252, _2k5m217, _2k5m431, _2k5m357, _2k5m450, _2k5m461, _2k5m398, _2k5m399, _2k5m284, _2k5m331, _2k5m345, _2k5m432, _2k5m415, _2k5m358, _2k5m359, _2k5m368, _2k5m459, _2k5m306, _2k5m285, _2k5m194, _2k5m332, _2k5m218, _2k5m360, _2k5m286, _2k5m346, _2k5m253, _2k5m307, _2k5m308, _2k5m309, _2k5m287, _2k5m219, _2k5m333, _2k5m220, _2k5m221, _2k5m288, _2k5m289, _2k5m174, _2k5m254, _2k5m195, _2k5m416, _2k5m160, _2k5m255, _2k5m454, _2k5m222, _2k5m369, _2k5m347, _2k5m370, _2k5m223, _2k5m256, _2k5m257, _2k5m258, _2k5m259, _2k5m310, _2k5m260, _2k5m127, _2k5m455, _2k5m224, _2k5m290, _2k5m442, _2k5m371, _2k5m380, _2k5m433, _2k5m434, _2k5m348, _2k5m447, _2k5m334, _2k5m291, _2k5m392, _2k5m361, _2k5m362, _2k5m311, _2k5m349 ];

inter.regions = [ _2k5m373, _2k5m451, _2k5m383, _2k5m457, _2k5m437, _2k5m419, _2k5m413, _2k5m401, _2k5m443, _2k5m374, _2k5m426, _2k5m427, _2k5m428, _2k5m421, _2k5m429, _2k5m439, _2k5m423, _2k5m407, _2k5m453, _2k5m440, _2k5m441, _2k5m430, _2k5m410, _2k5m127, _2k5m371, _2k5m433, _2k5m434, _2k5m392 ];

inter.countries = [ _2k5m336, _2k5m227, _2k5m228, _2k5m400, _2k5m384, _2k5m449, _2k5m229, _2k5m198, _2k5m262, _2k5m133, _2k5m412, _2k5m293, _2k5m175, _2k5m158, _2k5m263, _2k5m316, _2k5m352, _2k5m385, _2k5m230, _2k5m294, _2k5m264, _2k5m231, _2k5m199, _2k5m176, _2k5m232, _2k5m200, _2k5m363, _2k5m233, _2k5m418, _2k5m265, _2k5m145, _2k5m266, _2k5m337, _2k5m424, _2k5m201, _2k5m267, _2k5m353, _2k5m234, _2k5m159, _2k5m177, _2k5m202, _2k5m161, _2k5m386, _2k5m364, _2k5m317, _2k5m318, _2k5m164, _2k5m235, _2k5m144, _2k5m268, _2k5m438, _2k5m269, _2k5m178, _2k5m295, _2k5m319, _2k5m444, _2k5m445, _2k5m236, _2k5m402, _2k5m446, _2k5m414, _2k5m394, _2k5m270, _2k5m395, _2k5m237, _2k5m238, _2k5m403, _2k5m396, _2k5m387, _2k5m203, _2k5m320, _2k5m239, _2k5m375, _2k5m404, _2k5m365, _2k5m376, _2k5m179, _2k5m204, _2k5m180, _2k5m296, _2k5m240, _2k5m271, _2k5m205, _2k5m321, _2k5m165, _2k5m297, _2k5m272, _2k5m206, _2k5m207, _2k5m338, _2k5m181, _2k5m420, _2k5m425, _2k5m298, _2k5m273, _2k5m405, _2k5m354, _2k5m182, _2k5m299, _2k5m166, _2k5m167, _2k5m208, _2k5m209, _2k5m241, _2k5m183, _2k5m184, _2k5m210, _2k5m274, _2k5m388, _2k5m300, _2k5m242, _2k5m211, _2k5m154, _2k5m155, _2k5m185, _2k5m322, _2k5m339, _2k5m186, _2k5m355, _2k5m275, _2k5m276, _2k5m422, _2k5m397, _2k5m277, _2k5m168, _2k5m212, _2k5m169, _2k5m151, _2k5m452, _2k5m187, _2k5m366, _2k5m243, _2k5m323, _2k5m244, _2k5m245, _2k5m367, _2k5m278, _2k5m301, _2k5m188, _2k5m302, _2k5m340, _2k5m356, _2k5m377, _2k5m279, _2k5m213, _2k5m389, _2k5m170, _2k5m324, _2k5m246, _2k5m406, _2k5m325, _2k5m303, _2k5m326, _2k5m247, _2k5m214, _2k5m390, _2k5m327, _2k5m248, _2k5m215, _2k5m280, _2k5m328, _2k5m329, _2k5m281, _2k5m189, _2k5m249, _2k5m190, _2k5m191, _2k5m304, _2k5m192, _2k5m250, _2k5m171, _2k5m378, _2k5m282, _2k5m379, _2k5m341, _2k5m342, _2k5m172, _2k5m343, _2k5m305, _2k5m193, _2k5m408, _2k5m216, _2k5m283, _2k5m173, _2k5m409, _2k5m330, _2k5m344, _2k5m391, _2k5m251, _2k5m252, _2k5m217, _2k5m431, _2k5m357, _2k5m450, _2k5m461, _2k5m398, _2k5m399, _2k5m284, _2k5m331, _2k5m345, _2k5m432, _2k5m415, _2k5m358, _2k5m359, _2k5m368, _2k5m459, _2k5m306, _2k5m285, _2k5m194, _2k5m332, _2k5m218, _2k5m360, _2k5m286, _2k5m346, _2k5m253, _2k5m307, _2k5m308, _2k5m309, _2k5m287, _2k5m219, _2k5m333, _2k5m220, _2k5m221, _2k5m288, _2k5m289, _2k5m174, _2k5m254, _2k5m195, _2k5m416, _2k5m160, _2k5m255, _2k5m454, _2k5m222, _2k5m369, _2k5m347, _2k5m370, _2k5m223, _2k5m256, _2k5m257, _2k5m258, _2k5m259, _2k5m310, _2k5m260, _2k5m455, _2k5m224, _2k5m290, _2k5m442, _2k5m380, _2k5m348, _2k5m447, _2k5m334, _2k5m291, _2k5m361, _2k5m362, _2k5m311, _2k5m349 ];

inter.languages = [ {
    id: "ab",
    displayName: "abház"
}, {
    id: "ace",
    displayName: "achinéz"
}, {
    id: "ada",
    displayName: "adangme"
}, {
    id: "ady",
    displayName: "adyghe"
}, {
    id: "aa",
    displayName: "afar"
}, {
    id: "afh",
    displayName: "afrihili"
}, {
    id: "af",
    displayName: "afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "agem",
    nativeDisplayName: "Aghem"
}, {
    id: "ain",
    displayName: "ainu"
}, {
    id: "ay",
    displayName: "ajmara"
}, {
    id: "ak",
    displayName: "akan",
    nativeDisplayName: "Akan"
}, {
    id: "akk",
    displayName: "akkád"
}, {
    id: "ach",
    displayName: "akoli"
}, {
    id: "ale",
    displayName: "aleut"
}, {
    id: "nds",
    displayName: "alsónémet"
}, {
    id: "nds_nl",
    displayName: "alsószász"
}, {
    id: "en_us",
    displayName: "amerikai angol",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "inar sami",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "anp",
    displayName: "angika"
}, {
    id: "an",
    displayName: "aragonéz"
}, {
    id: "arp",
    displayName: "arapaho"
}, {
    id: "arn",
    displayName: "araucani"
}, {
    id: "arw",
    displayName: "aravak"
}, {
    id: "rup",
    displayName: "aromán"
}, {
    id: "arc",
    displayName: "arámi"
}, {
    id: "ast",
    displayName: "asztúr",
    nativeDisplayName: "asturianu"
}, {
    id: "cch",
    displayName: "atszam"
}, {
    id: "en_au",
    displayName: "ausztrál angol",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "avar"
}, {
    id: "ae",
    displayName: "avesztán"
}, {
    id: "awa",
    displayName: "awádi"
}, {
    id: "az",
    displayName: "azerbajdzsáni",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "bfd",
    displayName: "bafut"
}, {
    id: "ms",
    displayName: "maláj",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "ban",
    displayName: "balinéz"
}, {
    id: "bal",
    displayName: "balucsi"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bax",
    displayName: "bamun"
}, {
    id: "ba",
    displayName: "baskír"
}, {
    id: "bej",
    displayName: "bedzsa"
}, {
    id: "bik",
    displayName: "bikol"
}, {
    id: "bin",
    displayName: "bini"
}, {
    id: "bi",
    displayName: "bislama"
}, {
    id: "byn",
    displayName: "blin"
}, {
    id: "zbl",
    displayName: "Bliss jelképrendszer"
}, {
    id: "bho",
    displayName: "bodzspuri"
}, {
    id: "bs",
    displayName: "bosnyák",
    nativeDisplayName: "bosanski"
}, {
    id: "bra",
    displayName: "braj"
}, {
    id: "br",
    displayName: "breton",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "brit angol",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "buginéz"
}, {
    id: "bum",
    displayName: "bulu"
}, {
    id: "bua",
    displayName: "burját"
}, {
    id: "cad",
    displayName: "caddo"
}, {
    id: "en_ca",
    displayName: "kanadai angol",
    nativeDisplayName: "Canadian English"
}, {
    id: "ca",
    displayName: "katalán",
    nativeDisplayName: "català"
}, {
    id: "ceb",
    displayName: "cebui"
}, {
    id: "kde",
    displayName: "makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "sn",
    displayName: "sona",
    nativeDisplayName: "chiShona"
}, {
    id: "swb",
    displayName: "comorei"
}, {
    id: "ts",
    displayName: "conga"
}, {
    id: "chg",
    displayName: "csagatáj"
}, {
    id: "ch",
    displayName: "csamoró"
}, {
    id: "chy",
    displayName: "csejen"
}, {
    id: "chb",
    displayName: "csibcsa"
}, {
    id: "tsi",
    displayName: "csimsiáni"
}, {
    id: "chn",
    displayName: "csinuk zsargon"
}, {
    id: "chp",
    displayName: "csipevé"
}, {
    id: "cho",
    displayName: "csoktó"
}, {
    id: "chk",
    displayName: "csukéz"
}, {
    id: "cv",
    displayName: "csuvas"
}, {
    id: "shu",
    displayName: "csádi arab"
}, {
    id: "cy",
    displayName: "walesi",
    nativeDisplayName: "Cymraeg"
}, {
    id: "dak",
    displayName: "dakota"
}, {
    id: "da",
    displayName: "dán",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "dargva"
}, {
    id: "se",
    displayName: "északi számi",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "dzg",
    displayName: "dazaga"
}, {
    id: "del",
    displayName: "delavár"
}, {
    id: "de",
    displayName: "német",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "dinka"
}, {
    id: "dyu",
    displayName: "diula"
}, {
    id: "dv",
    displayName: "divehi"
}, {
    id: "doi",
    displayName: "dogri"
}, {
    id: "dgr",
    displayName: "dogrib"
}, {
    id: "dsb",
    displayName: "alsó szorb",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "alt",
    displayName: "dél-altaji"
}, {
    id: "sdh",
    displayName: "dél-kurd"
}, {
    id: "nr",
    displayName: "déli ndebele"
}, {
    id: "sma",
    displayName: "déli számi"
}, {
    id: "et",
    displayName: "észt",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efik"
}, {
    id: "eka",
    displayName: "ekadzsuk"
}, {
    id: "guz",
    displayName: "guszii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "elx",
    displayName: "elamit"
}, {
    id: "en",
    displayName: "angol",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "erzjány"
}, {
    id: "es",
    displayName: "spanyol",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "európai spanyol",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "spanyol (mexikói)",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "latin-amerikai spanyol",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "eszperantó",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "baszk",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "evondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ee",
    displayName: "eve",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "fang"
}, {
    id: "fat",
    displayName: "fanti"
}, {
    id: "fj",
    displayName: "fidzsi"
}, {
    id: "fil",
    displayName: "filippínó",
    nativeDisplayName: "Filipino"
}, {
    id: "fon",
    displayName: "fon"
}, {
    id: "fr",
    displayName: "francia",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "kanadai francia",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "svájci francia",
    nativeDisplayName: "français suisse"
}, {
    id: "fur",
    displayName: "friuli",
    nativeDisplayName: "furlan"
}, {
    id: "fo",
    displayName: "feröeri",
    nativeDisplayName: "føroyskt"
}, {
    id: "phn",
    displayName: "főniciai"
}, {
    id: "gaa",
    displayName: "ga"
}, {
    id: "ga",
    displayName: "ír",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "man-szigeti",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "gagauz"
}, {
    id: "gay",
    displayName: "gajo"
}, {
    id: "gl",
    displayName: "galíciai",
    nativeDisplayName: "galego"
}, {
    id: "gba",
    displayName: "gbaja"
}, {
    id: "gez",
    displayName: "geez"
}, {
    id: "ki",
    displayName: "kikuju",
    nativeDisplayName: "Gikuyu"
}, {
    id: "bbj",
    displayName: "gomala"
}, {
    id: "gon",
    displayName: "gondi"
}, {
    id: "gor",
    displayName: "gorontalo"
}, {
    id: "grb",
    displayName: "grebó"
}, {
    id: "gn",
    displayName: "guarani"
}, {
    id: "gwi",
    displayName: "gvicsin"
}, {
    id: "gd",
    displayName: "skót gael",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "got",
    displayName: "gót"
}, {
    id: "hai",
    displayName: "haida"
}, {
    id: "ht",
    displayName: "haiti"
}, {
    id: "ha",
    displayName: "hausza",
    nativeDisplayName: "Hausa"
}, {
    id: "hz",
    displayName: "herero"
}, {
    id: "bez",
    displayName: "bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hil",
    displayName: "hiligajnon"
}, {
    id: "ho",
    displayName: "hiri motu"
}, {
    id: "hit",
    displayName: "hittite"
}, {
    id: "hmn",
    displayName: "hmong"
}, {
    id: "hsb",
    displayName: "felső szorb",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "xh",
    displayName: "hosza"
}, {
    id: "hr",
    displayName: "horvát",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "hupa"
}, {
    id: "iba",
    displayName: "iban"
}, {
    id: "ibb",
    displayName: "ibibió"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "io",
    displayName: "idó"
}, {
    id: "ig",
    displayName: "igbó",
    nativeDisplayName: "Igbo"
}, {
    id: "gil",
    displayName: "ikiribati"
}, {
    id: "rn",
    displayName: "kirundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "ilokó"
}, {
    id: "id",
    displayName: "indonéz",
    nativeDisplayName: "Indonesia"
}, {
    id: "inh",
    displayName: "ingus"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "ia",
    displayName: "interlingva"
}, {
    id: "iu",
    displayName: "inuktitut"
}, {
    id: "ik",
    displayName: "inupiak"
}, {
    id: "sbp",
    displayName: "szangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "északi ndebele",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "und",
    displayName: "ismeretlen nyelv"
}, {
    id: "it",
    displayName: "olasz",
    nativeDisplayName: "italiano"
}, {
    id: "yap",
    displayName: "japi"
}, {
    id: "yao",
    displayName: "jaó"
}, {
    id: "ybb",
    displayName: "jemba"
}, {
    id: "kaj",
    displayName: "jju"
}, {
    id: "dyo",
    displayName: "jola-fonyi",
    nativeDisplayName: "joola"
}, {
    id: "jv",
    displayName: "jávai"
}, {
    id: "kbd",
    displayName: "kabardi"
}, {
    id: "kea",
    displayName: "kabuverdianu",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kac",
    displayName: "kacsin"
}, {
    id: "cay",
    displayName: "kajuga"
}, {
    id: "kkj",
    displayName: "kakó",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "grönlandi",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kalendzsin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "xal",
    displayName: "kalmük"
}, {
    id: "kbl",
    displayName: "kanembu"
}, {
    id: "kr",
    displayName: "kanuri"
}, {
    id: "kaa",
    displayName: "kara-kalpak"
}, {
    id: "krc",
    displayName: "karacsáj-balkár"
}, {
    id: "krl",
    displayName: "karelai"
}, {
    id: "car",
    displayName: "karib"
}, {
    id: "csb",
    displayName: "kasub"
}, {
    id: "kha",
    displayName: "kaszi"
}, {
    id: "kaw",
    displayName: "kawi"
}, {
    id: "frs",
    displayName: "keleti fríz"
}, {
    id: "kw",
    displayName: "korni",
    nativeDisplayName: "kernewek"
}, {
    id: "naq",
    displayName: "nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "quc",
    displayName: "kicse"
}, {
    id: "rof",
    displayName: "rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "machame",
    nativeDisplayName: "Kimachame"
}, {
    id: "kmb",
    displayName: "kimbundu"
}, {
    id: "rw",
    displayName: "kiruanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asu",
    nativeDisplayName: "Kipare"
}, {
    id: "rwk",
    displayName: "rwo",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "szamburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "sambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "szuahéli",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "kongói szuahéli",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "teszó",
    nativeDisplayName: "Kiteso"
}, {
    id: "nwc",
    displayName: "klasszikus newari"
}, {
    id: "syc",
    displayName: "klasszikus szír"
}, {
    id: "tlh",
    displayName: "klingon"
}, {
    id: "sms",
    displayName: "koltta lapp"
}, {
    id: "bkm",
    displayName: "kom"
}, {
    id: "kv",
    displayName: "komi"
}, {
    id: "koi",
    displayName: "komi-permják"
}, {
    id: "kg",
    displayName: "kongo"
}, {
    id: "cop",
    displayName: "kopt"
}, {
    id: "kfo",
    displayName: "koro"
}, {
    id: "co",
    displayName: "korzikai"
}, {
    id: "kos",
    displayName: "kosrei"
}, {
    id: "bss",
    displayName: "koszi"
}, {
    id: "kho",
    displayName: "kotanéz"
}, {
    id: "khq",
    displayName: "kojra-csíni",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "kojra-szenni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "kpe",
    displayName: "kpelle"
}, {
    id: "mfe",
    displayName: "mauritiusi kreol",
    nativeDisplayName: "kreol morisien"
}, {
    id: "cr",
    displayName: "krí"
}, {
    id: "mus",
    displayName: "krík"
}, {
    id: "crh",
    displayName: "krími tatár"
}, {
    id: "kj",
    displayName: "kuanyama"
}, {
    id: "kum",
    displayName: "kumük"
}, {
    id: "ku",
    displayName: "kurd"
}, {
    id: "kru",
    displayName: "kuruh"
}, {
    id: "kut",
    displayName: "kutenai"
}, {
    id: "nmg",
    displayName: "ngumba",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ksh",
    displayName: "kölsch",
    nativeDisplayName: "Kölsch"
}, {
    id: "enm",
    displayName: "közép angol"
}, {
    id: "gmh",
    displayName: "közép felső német"
}, {
    id: "frm",
    displayName: "közép francia"
}, {
    id: "dum",
    displayName: "közép holland"
}, {
    id: "mga",
    displayName: "közép ír"
}, {
    id: "ebu",
    displayName: "embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "lad",
    displayName: "ladino"
}, {
    id: "lah",
    displayName: "lahnda"
}, {
    id: "lkt",
    displayName: "lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lam",
    displayName: "lamba"
}, {
    id: "la",
    displayName: "latin"
}, {
    id: "lv",
    displayName: "lett",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "tonga",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lez",
    displayName: "lezg"
}, {
    id: "lt",
    displayName: "litván",
    nativeDisplayName: "lietuvių"
}, {
    id: "li",
    displayName: "limburgi"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "jbo",
    displayName: "lojban"
}, {
    id: "loz",
    displayName: "lozi"
}, {
    id: "lua",
    displayName: "luba-lulua"
}, {
    id: "lg",
    displayName: "ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "luiseno"
}, {
    id: "smj",
    displayName: "lule számi"
}, {
    id: "luy",
    displayName: "lujia",
    nativeDisplayName: "Luluhia"
}, {
    id: "lun",
    displayName: "lunda"
}, {
    id: "lus",
    displayName: "lushai"
}, {
    id: "lb",
    displayName: "luxemburgi",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "masai",
    nativeDisplayName: "Maa"
}, {
    id: "mde",
    displayName: "maba"
}, {
    id: "mad",
    displayName: "madurai"
}, {
    id: "maf",
    displayName: "mafa"
}, {
    id: "mag",
    displayName: "magahi"
}, {
    id: "hu",
    displayName: "magyar",
    nativeDisplayName: "magyar"
}, {
    id: "mai",
    displayName: "maithili"
}, {
    id: "mak",
    displayName: "makaszar"
}, {
    id: "mgh",
    displayName: "makua-metó",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "málgas",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "máltai",
    nativeDisplayName: "Malti"
}, {
    id: "mdr",
    displayName: "mandar"
}, {
    id: "man",
    displayName: "mandingó"
}, {
    id: "mnc",
    displayName: "mandzsu"
}, {
    id: "mni",
    displayName: "manipuri"
}, {
    id: "mi",
    displayName: "maori"
}, {
    id: "chm",
    displayName: "mari"
}, {
    id: "mh",
    displayName: "marshalli"
}, {
    id: "mwr",
    displayName: "marvari"
}, {
    id: "byv",
    displayName: "medumba"
}, {
    id: "men",
    displayName: "mende"
}, {
    id: "mgo",
    displayName: "meta’",
    nativeDisplayName: "metaʼ"
}, {
    id: "mic",
    displayName: "mikmak"
}, {
    id: "min",
    displayName: "minangkabau"
}, {
    id: "mwl",
    displayName: "mirandéz"
}, {
    id: "moh",
    displayName: "mohawk"
}, {
    id: "mdf",
    displayName: "moksán"
}, {
    id: "ro_md",
    displayName: "moldvai",
    nativeDisplayName: "moldovenească"
}, {
    id: "lol",
    displayName: "mongó"
}, {
    id: "mos",
    displayName: "moszi"
}, {
    id: "mua",
    displayName: "mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "mye",
    displayName: "myene"
}, {
    id: "na",
    displayName: "naurui"
}, {
    id: "nv",
    displayName: "navahó"
}, {
    id: "jgo",
    displayName: "ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "ng",
    displayName: "ndonga"
}, {
    id: "nl",
    displayName: "holland",
    nativeDisplayName: "Nederlands"
}, {
    id: "new",
    displayName: "nevari"
}, {
    id: "sba",
    displayName: "ngambay"
}, {
    id: "nia",
    displayName: "nias"
}, {
    id: "zxx",
    displayName: "nincs nyelvészeti tartalom"
}, {
    id: "niu",
    displayName: "niui"
}, {
    id: "nog",
    displayName: "nogaj"
}, {
    id: "nb",
    displayName: "norvég bokmal",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "norvég"
}, {
    id: "yav",
    displayName: "jangben",
    nativeDisplayName: "nuasue"
}, {
    id: "nym",
    displayName: "nyamvézi"
}, {
    id: "ny",
    displayName: "nyanja"
}, {
    id: "tog",
    displayName: "nyasa tonga"
}, {
    id: "nn",
    displayName: "norvég nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "nyo",
    displayName: "nyoró"
}, {
    id: "bgn",
    displayName: "nyugati beludzs"
}, {
    id: "nzi",
    displayName: "nzima"
}, {
    id: "nap",
    displayName: "nápolyi"
}, {
    id: "nqo",
    displayName: "n’kó"
}, {
    id: "oj",
    displayName: "ojibva"
}, {
    id: "oc",
    displayName: "okszitán"
}, {
    id: "xog",
    displayName: "szoga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "oromói",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "osage"
}, {
    id: "ota",
    displayName: "ottomán török"
}, {
    id: "uz",
    displayName: "üzbég",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pal",
    displayName: "pahlavi"
}, {
    id: "pau",
    displayName: "palaui"
}, {
    id: "pi",
    displayName: "pali"
}, {
    id: "pam",
    displayName: "pampangan"
}, {
    id: "pag",
    displayName: "pangaszinan"
}, {
    id: "pap",
    displayName: "papiamentó"
}, {
    id: "pon",
    displayName: "pohnpei"
}, {
    id: "pl",
    displayName: "lengyel",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "portugál",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "brazíliai portugál",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "európai portugál",
    nativeDisplayName: "português europeu"
}, {
    id: "ff",
    displayName: "fulani",
    nativeDisplayName: "Pulaar"
}, {
    id: "raj",
    displayName: "radzsasztáni"
}, {
    id: "rap",
    displayName: "rapanui"
}, {
    id: "rar",
    displayName: "rarotongai"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "rom",
    displayName: "roma"
}, {
    id: "ro",
    displayName: "román",
    nativeDisplayName: "română"
}, {
    id: "cgg",
    displayName: "kiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "réto-román",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "kecsua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "shn",
    displayName: "san"
}, {
    id: "sas",
    displayName: "sasak"
}, {
    id: "de_ch",
    displayName: "svájci felnémet",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "svájci német",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "seh",
    displayName: "szena",
    nativeDisplayName: "sena"
}, {
    id: "sq",
    displayName: "albán",
    nativeDisplayName: "shqip"
}, {
    id: "nnh",
    displayName: "ngiemboon",
    nativeDisplayName: "Shwóŋò ngiembɔɔn"
}, {
    id: "bla",
    displayName: "siksika"
}, {
    id: "sco",
    displayName: "skót"
}, {
    id: "sk",
    displayName: "szlovák",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "szlovén",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "sogdien"
}, {
    id: "so",
    displayName: "szomáliai",
    nativeDisplayName: "Soomaali"
}, {
    id: "sux",
    displayName: "sumér"
}, {
    id: "fi",
    displayName: "finn",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "svéd",
    nativeDisplayName: "svenska"
}, {
    id: "ssy",
    displayName: "szahó"
}, {
    id: "sam",
    displayName: "szamaritánus arámi"
}, {
    id: "sm",
    displayName: "szamoai"
}, {
    id: "sad",
    displayName: "szandave"
}, {
    id: "sa",
    displayName: "szanszkrit"
}, {
    id: "sat",
    displayName: "szantáli"
}, {
    id: "sc",
    displayName: "szardíniai"
}, {
    id: "tn",
    displayName: "szecsuáni"
}, {
    id: "see",
    displayName: "szeneka"
}, {
    id: "sh",
    displayName: "szerbhorvát"
}, {
    id: "srr",
    displayName: "szerer"
}, {
    id: "st",
    displayName: "szeszotó"
}, {
    id: "scn",
    displayName: "szicíliai"
}, {
    id: "sid",
    displayName: "szidamó"
}, {
    id: "sd",
    displayName: "szindhi"
}, {
    id: "ss",
    displayName: "sziszuati"
}, {
    id: "den",
    displayName: "szlevi"
}, {
    id: "snk",
    displayName: "szoninke"
}, {
    id: "srn",
    displayName: "szranai tongó"
}, {
    id: "suk",
    displayName: "szukuma"
}, {
    id: "su",
    displayName: "szundanéz"
}, {
    id: "sus",
    displayName: "szuszu"
}, {
    id: "syr",
    displayName: "szíriai"
}, {
    id: "sel",
    displayName: "szölkup"
}, {
    id: "sg",
    displayName: "szangó",
    nativeDisplayName: "Sängö"
}, {
    id: "tg",
    displayName: "tadzsik"
}, {
    id: "tl",
    displayName: "tagalog"
}, {
    id: "ty",
    displayName: "tahiti"
}, {
    id: "tmh",
    displayName: "tamasek"
}, {
    id: "tzm",
    displayName: "közép-marokkói tamazigt",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "kabije",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "trv",
    displayName: "tarokó"
}, {
    id: "twq",
    displayName: "szavák",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "tatár"
}, {
    id: "tem",
    displayName: "temne"
}, {
    id: "ter",
    displayName: "terenó"
}, {
    id: "tet",
    displayName: "tetum"
}, {
    id: "nus",
    displayName: "nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "tig",
    displayName: "tigré"
}, {
    id: "tiv",
    displayName: "tiv"
}, {
    id: "vi",
    displayName: "vietnami",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tli",
    displayName: "tlingit"
}, {
    id: "tpi",
    displayName: "tok pisin"
}, {
    id: "tkl",
    displayName: "tokelaui"
}, {
    id: "lu",
    displayName: "luba-katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tum",
    displayName: "tumbuka"
}, {
    id: "tyv",
    displayName: "tuvai"
}, {
    id: "tvl",
    displayName: "tuvalu"
}, {
    id: "tw",
    displayName: "twi"
}, {
    id: "kcg",
    displayName: "tyap"
}, {
    id: "mul",
    displayName: "többszörös nyelvek"
}, {
    id: "tk",
    displayName: "türkmén",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "török",
    nativeDisplayName: "Türkçe"
}, {
    id: "udm",
    displayName: "udmurt"
}, {
    id: "uga",
    displayName: "ugariti"
}, {
    id: "umb",
    displayName: "umbundu"
}, {
    id: "wal",
    displayName: "valamo"
}, {
    id: "wa",
    displayName: "vallon"
}, {
    id: "war",
    displayName: "varaó"
}, {
    id: "was",
    displayName: "vasó"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "nl_be",
    displayName: "flamand",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "volapük",
    nativeDisplayName: "Volapük"
}, {
    id: "wo",
    displayName: "volof"
}, {
    id: "vot",
    displayName: "votják"
}, {
    id: "wae",
    displayName: "walser",
    nativeDisplayName: "Walser"
}, {
    id: "wbp",
    displayName: "warlpiri"
}, {
    id: "fy",
    displayName: "fríz",
    nativeDisplayName: "West-Frysk"
}, {
    id: "zap",
    displayName: "zapoték"
}, {
    id: "dje",
    displayName: "zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "zaza"
}, {
    id: "zen",
    displayName: "zenaga"
}, {
    id: "jrb",
    displayName: "zsidó-arab"
}, {
    id: "jpr",
    displayName: "zsidó-perzsa"
}, {
    id: "za",
    displayName: "zsuang"
}, {
    id: "zun",
    displayName: "zuni"
}, {
    id: "yo",
    displayName: "joruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "frr",
    displayName: "északi fríz"
}, {
    id: "nso",
    displayName: "északi szotó"
}, {
    id: "is",
    displayName: "izlandi",
    nativeDisplayName: "íslenska"
}, {
    id: "ang",
    displayName: "óangol"
}, {
    id: "egy",
    displayName: "óegyiptomi"
}, {
    id: "goh",
    displayName: "ófelső német"
}, {
    id: "fro",
    displayName: "ófrancia"
}, {
    id: "grc",
    displayName: "ógörög"
}, {
    id: "peo",
    displayName: "óperzsa"
}, {
    id: "pro",
    displayName: "óprovánszi"
}, {
    id: "non",
    displayName: "óskandináv"
}, {
    id: "sga",
    displayName: "óír"
}, {
    id: "de_at",
    displayName: "osztrák német",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "cseh",
    nativeDisplayName: "čeština"
}, {
    id: "root",
    displayName: "ősi"
}, {
    id: "bas",
    displayName: "basza",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "hawaii",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "görög",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "belorusz",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bolgár",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "oszét",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "kirgiz",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "macedón",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongol",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "csecsen",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "orosz",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "jakut",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "szerb",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ukrán",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "egyházi szláv",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "kazah",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "örmény",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "jiddis",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "héber",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "ujgur",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "arab",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "modern szabányos arab",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "perzsa",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "északi luri",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "mázanderáni",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "pastu",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "szoráni kurd",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "kásmíri",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepáli",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "asszámi",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengáli",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "pandzsábi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gudzsarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "orija",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malajálam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "szingaléz",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "thai",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "laoszi",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibeti",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "butáni",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "burmai",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "grúz",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrinja",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amhara",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "kambodzsai",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "marokkói tamazight",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "tachelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "kínai",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japán",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "egyszerűsített kínai",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "kantoni",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "hagyományos kínai",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "szecsuán ji",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "cseroki",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "koreai",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Arab",
    displayName: "Arab"
}, {
    id: "Avst",
    displayName: "Avesztán"
}, {
    id: "Bali",
    displayName: "Balinéz"
}, {
    id: "Batk",
    displayName: "Batak"
}, {
    id: "Beng",
    displayName: "Bengáli"
}, {
    id: "Tfng",
    displayName: "Berber"
}, {
    id: "Armi",
    displayName: "Birodalmi arámi"
}, {
    id: "Blis",
    displayName: "Bliss jelképrendszer"
}, {
    id: "Bopo",
    displayName: "Bopomofo"
}, {
    id: "Brah",
    displayName: "Brámi"
}, {
    id: "Bugi",
    displayName: "Buginéz"
}, {
    id: "Buhd",
    displayName: "Buhid"
}, {
    id: "Mymr",
    displayName: "Burmai"
}, {
    id: "Cprt",
    displayName: "Ciprusi"
}, {
    id: "Cyrl",
    displayName: "Cirill"
}, {
    id: "Cakm",
    displayName: "Csakma"
}, {
    id: "Cher",
    displayName: "Cseroki"
}, {
    id: "Cham",
    displayName: "Csám"
}, {
    id: "Dsrt",
    displayName: "Deseret"
}, {
    id: "Deva",
    displayName: "Devanagári"
}, {
    id: "Cans",
    displayName: "Egyesített kanadai őslakos jelek"
}, {
    id: "Egyd",
    displayName: "Egyiptomi demotikus"
}, {
    id: "Egyh",
    displayName: "Egyiptomi hieratikus"
}, {
    id: "Egyp",
    displayName: "Egyiptomi hieroglifák"
}, {
    id: "Hans",
    displayName: "Egyszerűsített"
}, {
    id: "Syre",
    displayName: "Estrangelo szíriai"
}, {
    id: "Ethi",
    displayName: "Etióp"
}, {
    id: "Prti",
    displayName: "Feliratos parthian"
}, {
    id: "Phli",
    displayName: "Felriatos pahlavi"
}, {
    id: "Latf",
    displayName: "Fraktur latin"
}, {
    id: "Phnx",
    displayName: "Főniciai"
}, {
    id: "Latg",
    displayName: "Gael latin"
}, {
    id: "Glag",
    displayName: "Glagolitikus"
}, {
    id: "Geor",
    displayName: "Grúz"
}, {
    id: "Geok",
    displayName: "Grúz kucsuri"
}, {
    id: "Gujr",
    displayName: "Gudzsaráti"
}, {
    id: "Guru",
    displayName: "Gurmuki"
}, {
    id: "Goth",
    displayName: "Gót"
}, {
    id: "Grek",
    displayName: "Görög"
}, {
    id: "Hant",
    displayName: "Hagyományos"
}, {
    id: "Hani",
    displayName: "Han"
}, {
    id: "Hang",
    displayName: "Hangul"
}, {
    id: "Hano",
    displayName: "Hanunoo"
}, {
    id: "Hira",
    displayName: "Hiragana"
}, {
    id: "Hebr",
    displayName: "Héber"
}, {
    id: "Inds",
    displayName: "Indus"
}, {
    id: "Zzzz",
    displayName: "Ismeretlen írásrendszer"
}, {
    id: "Jpan",
    displayName: "Japán"
}, {
    id: "Sgnw",
    displayName: "Jelírás"
}, {
    id: "Yiii",
    displayName: "Ji"
}, {
    id: "Java",
    displayName: "Jávai"
}, {
    id: "Kthi",
    displayName: "Kaithi"
}, {
    id: "Kali",
    displayName: "Kajah li"
}, {
    id: "Knda",
    displayName: "Kannada"
}, {
    id: "Cari",
    displayName: "Kari"
}, {
    id: "Kana",
    displayName: "Katakana"
}, {
    id: "Hrkt",
    displayName: "Katakana vagy hiragana"
}, {
    id: "Syrn",
    displayName: "Kelet-szíriai"
}, {
    id: "Khar",
    displayName: "Kharoshthi"
}, {
    id: "Khmr",
    displayName: "Khmer"
}, {
    id: "Copt",
    displayName: "Kopt"
}, {
    id: "Kore",
    displayName: "Koreai"
}, {
    id: "Phlv",
    displayName: "Könyv pahlavi"
}, {
    id: "Lana",
    displayName: "Lanna"
}, {
    id: "Laoo",
    displayName: "Lao"
}, {
    id: "Latn",
    displayName: "Latin"
}, {
    id: "Lepc",
    displayName: "Lepcha"
}, {
    id: "Limb",
    displayName: "Limbu"
}, {
    id: "Lina",
    displayName: "Lineáris A"
}, {
    id: "Linb",
    displayName: "Lineáris B"
}, {
    id: "Visp",
    displayName: "Látható beszéd"
}, {
    id: "Lyci",
    displayName: "Líciai"
}, {
    id: "Lydi",
    displayName: "Lídiai"
}, {
    id: "Maya",
    displayName: "Maja hieroglifák"
}, {
    id: "Mlym",
    displayName: "Malajálam"
}, {
    id: "Mand",
    displayName: "Mandai"
}, {
    id: "Mani",
    displayName: "Manicheus"
}, {
    id: "Zmth",
    displayName: "Matematikai jelrendszer"
}, {
    id: "Zyyy",
    displayName: "Meghatározatlan"
}, {
    id: "Mtei",
    displayName: "Meitei mayek"
}, {
    id: "Mero",
    displayName: "Meroitikus"
}, {
    id: "Mong",
    displayName: "Mongol"
}, {
    id: "Moon",
    displayName: "Moon"
}, {
    id: "Syrj",
    displayName: "Nyugat-szíriai"
}, {
    id: "Nkoo",
    displayName: "N’ko"
}, {
    id: "Ogam",
    displayName: "Ogham"
}, {
    id: "Olck",
    displayName: "Ol chiki"
}, {
    id: "Orkh",
    displayName: "Orhon"
}, {
    id: "Orya",
    displayName: "Oriya"
}, {
    id: "Osma",
    displayName: "Oszmán"
}, {
    id: "Hmng",
    displayName: "Pahawh hmong"
}, {
    id: "Phag",
    displayName: "Phags-pa"
}, {
    id: "Plrd",
    displayName: "Pollard fonetikus"
}, {
    id: "Phlp",
    displayName: "Psalter pahlavi"
}, {
    id: "Rjng",
    displayName: "Redzsang"
}, {
    id: "Roro",
    displayName: "Rongorongo"
}, {
    id: "Runr",
    displayName: "Runikus"
}, {
    id: "Ital",
    displayName: "Régi olasz"
}, {
    id: "Shaw",
    displayName: "Shaw ábécé"
}, {
    id: "Sylo",
    displayName: "Sylheti nagári"
}, {
    id: "Samr",
    displayName: "Szamaritán"
}, {
    id: "Sara",
    displayName: "Szarati"
}, {
    id: "Saur",
    displayName: "Szaurastra"
}, {
    id: "Zsym",
    displayName: "Szimbólum"
}, {
    id: "Sinh",
    displayName: "Szingaléz"
}, {
    id: "Sund",
    displayName: "Szundanéz"
}, {
    id: "Zinh",
    displayName: "Származtatott"
}, {
    id: "Syrc",
    displayName: "Szíriai"
}, {
    id: "Tglg",
    displayName: "Tagalog"
}, {
    id: "Tagb",
    displayName: "Tagbanwa"
}, {
    id: "Tale",
    displayName: "Tai Le"
}, {
    id: "Tavt",
    displayName: "Tai viet"
}, {
    id: "Taml",
    displayName: "Tamil"
}, {
    id: "Telu",
    displayName: "Telugu"
}, {
    id: "Teng",
    displayName: "Tengwar"
}, {
    id: "Thaa",
    displayName: "Thaana"
}, {
    id: "Thai",
    displayName: "Thai"
}, {
    id: "Tibt",
    displayName: "Tibeti"
}, {
    id: "Ugar",
    displayName: "Ugari"
}, {
    id: "Vaii",
    displayName: "Vai"
}, {
    id: "Brai",
    displayName: "Vakírás"
}, {
    id: "Xsux",
    displayName: "Ékírásos suméro-akkád"
}, {
    id: "Zxxx",
    displayName: "Íratlan nyelvek kódja"
}, {
    id: "Cyrs",
    displayName: "Óegyházi szláv cirill"
}, {
    id: "Hung",
    displayName: "Ómagyar"
}, {
    id: "Perm",
    displayName: "Ópermikus"
}, {
    id: "Xpeo",
    displayName: "Óperzsa"
}, {
    id: "Armn",
    displayName: "Örmény"
}, {
    id: "Talu",
    displayName: "Új tai lue"
} ];

inter.currencies = [ {
    id: "ADP",
    displayName: "Andorrai peseta",
    one: "Andorrai peseta",
    other: "Andorrai peseta"
}, {
    id: "AOK",
    displayName: "Angolai kwanza (1977–1990)",
    one: "Angolai kwanza (1977–1990)",
    other: "Angolai kwanza (1977–1990)"
}, {
    id: "AOR",
    displayName: "Angolai kwanza reajustado (1995–1999)",
    one: "Angolai kwanza reajustado (1995–1999)",
    other: "Angolai kwanza reajustado (1995–1999)"
}, {
    id: "AON",
    displayName: "Angolai új kwanza (1990–2000)",
    one: "Angolai új kwanza (1990–2000)",
    other: "Angolai új kwanza (1990–2000)"
}, {
    id: "XAU",
    displayName: "Arany"
}, {
    id: "ARA",
    displayName: "Argentín austral",
    one: "Argentin austral",
    other: "Argentin austral"
}, {
    id: "ARP",
    displayName: "Argentín peso (1983–1985)",
    one: "Argentín peso (1983–1985)",
    other: "Argentín peso (1983–1985)"
}, {
    id: "BEF",
    displayName: "Belga frank",
    one: "Belga frank",
    other: "Belga frank"
}, {
    id: "BEC",
    displayName: "Belga frank (konvertibilis)",
    one: "Belga frank (konvertibilis)",
    other: "Belga frank (konvertibilis)"
}, {
    id: "BEL",
    displayName: "Belga frank (pénzügyi)",
    one: "Belga frank (pénzügyi)",
    other: "Belga frank (pénzügyi)"
}, {
    id: "BGL",
    displayName: "Bolgár kemény leva",
    one: "Bolgár kemény leva",
    other: "Bolgár kemény leva"
}, {
    id: "BOV",
    displayName: "Bolíviai mvdol",
    one: "Bolíviai mvdol",
    other: "Bolíviai mvdol"
}, {
    id: "BOP",
    displayName: "Bolíviai peso",
    one: "Bolíviai peso",
    other: "Bolíviai peso"
}, {
    id: "BAD",
    displayName: "Bosznia-hercegovinai dínár (1992–1994)",
    one: "Bosznia-hercegovinai dínár (1992–1994)",
    other: "Bosznia-hercegovinai dínár (1992–1994)"
}, {
    id: "BRC",
    displayName: "Brazi cruzado (1986–1989)",
    one: "Brazi cruzado (1986–1989)",
    other: "Brazi cruzado (1986–1989)"
}, {
    id: "BRB",
    displayName: "Brazi cruzeiro novo (1967–1986)",
    one: "Brazi cruzeiro novo (1967–1986)",
    other: "Brazi cruzeiro novo (1967–1986)"
}, {
    id: "BRN",
    displayName: "Brazil cruzado novo (1989–1990)",
    one: "Brazil cruzado novo (1989–1990)",
    other: "Brazil cruzado novo (1989–1990)"
}, {
    id: "BRE",
    displayName: "Brazil cruzeiro (1990–1993)",
    one: "Brazil cruzeiro (1990–1993)",
    other: "Brazil cruzeiro (1990–1993)"
}, {
    id: "BRR",
    displayName: "Brazil cruzeiro (1993–1994)",
    one: "Brazil cruzeiro (1993–1994)",
    other: "Brazil cruzeiro (1993–1994)"
}, {
    id: "BUK",
    displayName: "Burmai kyat"
}, {
    id: "XOF",
    displayName: "CFA frank BCEAO",
    symbol: "CFA",
    one: "CFA frank BCEAO",
    other: "CFA frank BCEAO"
}, {
    id: "XAF",
    displayName: "CFA frank BEAC",
    symbol: "FCFA",
    one: "CFA frank BEAC",
    other: "CFA frank BEAC"
}, {
    id: "CVE",
    displayName: "Cape Verde-i escudo",
    symbol: "CVE",
    one: "Cape Verde-i escudo",
    other: "Cape Verde-i escudo"
}, {
    id: "CLF",
    displayName: "Chilei unidades de fomento"
}, {
    id: "CYP",
    displayName: "Ciprusi font"
}, {
    id: "CRC",
    displayName: "Costa Rica-i colon",
    symbol: "CRC",
    one: "Costa Rica-i colon",
    other: "Costa Rica-i colon"
}, {
    id: "CSK",
    displayName: "Csehszlovák kemény korona"
}, {
    id: "ZAL",
    displayName: "Dél-afrikai rand (pénzügyi)"
}, {
    id: "AED",
    displayName: "EAE-dirham",
    symbol: "AED",
    one: "EAE-dirham",
    other: "EAE-dirham"
}, {
    id: "ECV",
    displayName: "Ecuadori Unidad de Valor Constante (UVC)"
}, {
    id: "ECS",
    displayName: "Ecuadori sucre"
}, {
    id: "GQE",
    displayName: "Egyenlítői-guineai ekwele guineana",
    one: "Egyenlítői-guineai ekwele",
    other: "Egyenlítői-guineai ekwele"
}, {
    id: "XBA",
    displayName: "Európai kompozit egység",
    one: "Európai kompozit egység",
    other: "Európai kompozit egység"
}, {
    id: "XBC",
    displayName: "Európai kontó egység (XBC)",
    one: "Európai kontó egység (XBC)",
    other: "Európai kontó egység (XBC)"
}, {
    id: "XBD",
    displayName: "Európai kontó egység (XBD)",
    one: "Európai kontó egység (XBD)",
    other: "Európai kontó egység (XBD)"
}, {
    id: "XBB",
    displayName: "Európai monetáris egység",
    one: "Európai monetáris egység",
    other: "Európai monetáris egység"
}, {
    id: "XAG",
    displayName: "Ezüst"
}, {
    id: "BYB",
    displayName: "Fehérorosz új rubel (1994–1999)"
}, {
    id: "FIM",
    displayName: "Finn markka"
}, {
    id: "XFU",
    displayName: "Francia UIC-frank"
}, {
    id: "XFO",
    displayName: "Francia arany frank"
}, {
    id: "FRF",
    displayName: "Francia frank"
}, {
    id: "GHC",
    displayName: "Ghánai cedi (1979–2007)"
}, {
    id: "GEK",
    displayName: "Grúz kupon larit"
}, {
    id: "GWP",
    displayName: "Guinea-Bissaui peso"
}, {
    id: "GNS",
    displayName: "Guineai syli"
}, {
    id: "GRD",
    displayName: "Görög drachma"
}, {
    id: "NLG",
    displayName: "Holland forint"
}, {
    id: "HRD",
    displayName: "Horvát dínár"
}, {
    id: "ILP",
    displayName: "Izraeli font"
}, {
    id: "YDD",
    displayName: "Jemeni dínár"
}, {
    id: "YUD",
    displayName: "Jugoszláv kemény dínár"
}, {
    id: "YUN",
    displayName: "Jugoszláv konvertibilis dínár"
}, {
    id: "YUM",
    displayName: "Jugoszláv új dínár"
}, {
    id: "DDM",
    displayName: "Kelet-Német márka"
}, {
    id: "PLZ",
    displayName: "Lengyel zloty (1950–1995)"
}, {
    id: "LSL",
    displayName: "Lesothoi loti"
}, {
    id: "LVR",
    displayName: "Lett rubel"
}, {
    id: "LTT",
    displayName: "Litvániai talonas"
}, {
    id: "LUF",
    displayName: "Luxemburgi frank"
}, {
    id: "MGF",
    displayName: "Madagaszkári frank"
}, {
    id: "MLF",
    displayName: "Mali frank"
}, {
    id: "MAF",
    displayName: "Marokkói frank"
}, {
    id: "MXV",
    displayName: "Mexikói Unidad de Inversion (UDI)"
}, {
    id: "MXP",
    displayName: "Mexikói ezüst peso (1861–1992)"
}, {
    id: "MZE",
    displayName: "Mozambik escudo"
}, {
    id: "MZM",
    displayName: "Mozambik metical"
}, {
    id: "MTP",
    displayName: "Máltai font"
}, {
    id: "MTL",
    displayName: "Máltai líra"
}, {
    id: "NIC",
    displayName: "Nikaraguai cordoba"
}, {
    id: "DEM",
    displayName: "Német márka"
}, {
    id: "ITL",
    displayName: "Olasz líra"
}, {
    id: "ATS",
    displayName: "Osztrák schilling",
    one: "Osztrák schilling",
    other: "Osztrák schilling"
}, {
    id: "PEI",
    displayName: "Perui inti"
}, {
    id: "PES",
    displayName: "Perui sol"
}, {
    id: "PTE",
    displayName: "Portugál escudo"
}, {
    id: "GWE",
    displayName: "Portugál guinea escudo"
}, {
    id: "XRE",
    displayName: "RINET tőke"
}, {
    id: "SVC",
    displayName: "Salvadori colón"
}, {
    id: "SLL",
    displayName: "Sierra Leone-i leone",
    symbol: "SLL",
    one: "Sierra Leone-i leone",
    other: "Sierra Leone-i leone"
}, {
    id: "ESP",
    displayName: "Spanyol peseta",
    symbol: "₧"
}, {
    id: "XDR",
    displayName: "Special Drawing Rights"
}, {
    id: "LKR",
    displayName: "Srí Lanka-i rúpia",
    symbol: "LKR",
    one: "Srí Lanka-i rúpia",
    other: "Srí Lanka-i rúpia"
}, {
    id: "SRG",
    displayName: "Suriname-i gulden"
}, {
    id: "SHP",
    displayName: "Szent Ilona-i font",
    symbol: "SHP",
    one: "Szent Ilona-i font",
    other: "Szent Ilona-i font"
}, {
    id: "SKK",
    displayName: "Szlovák korona"
}, {
    id: "SIT",
    displayName: "Szlovén tolar"
}, {
    id: "SUR",
    displayName: "Szovjet rubel"
}, {
    id: "SDD",
    displayName: "Szudáni dínár (1992–2007)",
    one: "Szudáni dínár (1992–2007)",
    other: "Szudáni dínár (1992–2007)"
}, {
    id: "SDP",
    displayName: "Szudáni font (1957–1998)",
    one: "Szudáni font (1957–1998)",
    other: "Szudáni font (1957–1998)"
}, {
    id: "STD",
    displayName: "São Tomé és Príncipe-i dobra",
    symbol: "STD",
    one: "São Tomé és Príncipe-i dobra",
    other: "São Tomé és Príncipe-i dobra"
}, {
    id: "XTS",
    displayName: "Tesztelési pénznemkód"
}, {
    id: "TPE",
    displayName: "Timori escudo"
}, {
    id: "TTD",
    displayName: "Trinidad és Tobago-i dollár",
    symbol: "TTD",
    one: "Trinidad és Tobago-i dollár",
    other: "Trinidad és Tobago-i dollár"
}, {
    id: "TJR",
    displayName: "Tádzsikisztáni rubel"
}, {
    id: "USS",
    displayName: "USA dollár (aznapi)"
}, {
    id: "USN",
    displayName: "USA dollár (következő napi)"
}, {
    id: "USD",
    displayName: "USA-dollár",
    symbol: "USD",
    one: "USA-dollár",
    other: "USA-dollár"
}, {
    id: "UGS",
    displayName: "Ugandai shilling (1966–1987)",
    one: "Ugandai shilling (1966–1987)",
    other: "Ugandai shilling (1966–1987)"
}, {
    id: "UAK",
    displayName: "Ukrán karbovanec"
}, {
    id: "COU",
    displayName: "Unidad de Valor Real"
}, {
    id: "UYP",
    displayName: "Uruguay-i peso (1975–1993)",
    one: "Uruguayi peso (1975–1993)",
    other: "Uruguayi peso (1975–1993)"
}, {
    id: "UYI",
    displayName: "Uruguayi peso en unidades indexadas",
    one: "Uruguayi peso en unidades indexadas",
    other: "Uruguayi peso en unidades indexadas"
}, {
    id: "VEB",
    displayName: "Venezuelai bolivar (1871–2008)",
    one: "Venezuelai bolivar (1871–2008)",
    other: "Venezuelai bolivar (1871–2008)"
}, {
    id: "CHE",
    displayName: "WIR euro"
}, {
    id: "CHW",
    displayName: "WIR frank"
}, {
    id: "ZRZ",
    displayName: "Zairei zaire"
}, {
    id: "ZRN",
    displayName: "Zairei új zaire"
}, {
    id: "ZMK",
    displayName: "Zambiai kwacha (1968–2012)",
    symbol: "ZMK"
}, {
    id: "ZWD",
    displayName: "Zimbabwei dollár (1980–2008)",
    one: "Zimbabwei dollár (1980–2008)",
    other: "Zimbabwei dollár (1980–2008)"
}, {
    id: "ZWR",
    displayName: "Zimbabwei dollár (2008)",
    one: "Zimbabwei dollár (2008)",
    other: "Zimbabwei dollár (2008)"
}, {
    id: "ZWL",
    displayName: "Zimbabwei dollár (2009)"
}, {
    id: "AFN",
    displayName: "afgán afghani",
    symbol: "AFN",
    one: "afgán afghani",
    other: "afgán afghani"
}, {
    id: "AFA",
    displayName: "afgán afghani (1927–2002)",
    one: "afgán afghani (1927–2002)",
    other: "afgán afghani (1927–2002)"
}, {
    id: "ALL",
    displayName: "albán lek",
    symbol: "ALL",
    one: "albán lek",
    other: "albán lek"
}, {
    id: "DZD",
    displayName: "algériai dínár",
    symbol: "DZD",
    one: "algériai dínár",
    other: "algériai dínár"
}, {
    id: "AOA",
    displayName: "angolai kwanza",
    symbol: "AOA",
    one: "angolai kwanza",
    other: "angolai kwanza"
}, {
    id: "ARS",
    displayName: "argentin peso",
    symbol: "ARS",
    one: "argentin peso",
    other: "argentin peso"
}, {
    id: "AWG",
    displayName: "arubai florin",
    symbol: "AWG",
    one: "arubai florin",
    other: "arubai florin"
}, {
    id: "AUD",
    displayName: "ausztrál dollár",
    symbol: "AUD",
    one: "ausztrál dollár",
    other: "ausztrál dollár"
}, {
    id: "AZN",
    displayName: "azerbajdzsáni manat",
    symbol: "AZN",
    one: "azerbajdzsáni manat",
    other: "azerbajdzsáni manat"
}, {
    id: "AZM",
    displayName: "azerbajdzsáni manat (1993–2006)",
    one: "azerbajdzsáni manat (1993–2006)",
    other: "azerbajdzsáni manat (1993–2006)"
}, {
    id: "BSD",
    displayName: "bahamai dollár",
    symbol: "BSD",
    one: "bahamai dollár",
    other: "bahamai dollár"
}, {
    id: "BHD",
    displayName: "bahreini dinár",
    symbol: "BHD",
    one: "bahreini dinár",
    other: "bahreini dinár"
}, {
    id: "BDT",
    displayName: "bangladesi taka",
    symbol: "BDT",
    one: "bangladesi taka",
    other: "bangladesi taka"
}, {
    id: "BBD",
    displayName: "barbadosi dollár",
    symbol: "BBD",
    one: "barbadosi dollár",
    other: "barbadosi dollár"
}, {
    id: "BZD",
    displayName: "belize-i dollár",
    symbol: "BZD",
    one: "belize-i dollár",
    other: "belize-i dollár"
}, {
    id: "BMD",
    displayName: "bermudai dollár",
    symbol: "BMD",
    one: "bermudai dollár",
    other: "bermudai dollár"
}, {
    id: "BTN",
    displayName: "bhutáni ngultrum",
    symbol: "BTN",
    one: "bhutáni ngultrum",
    other: "bhutáni ngultrum"
}, {
    id: "BGN",
    displayName: "bolgár új leva",
    symbol: "BGN",
    one: "bolgár új leva",
    other: "bolgár új leva"
}, {
    id: "BOB",
    displayName: "bolíviai boliviano",
    symbol: "BOB",
    one: "bolíviai boliviano",
    other: "bolíviai boliviano"
}, {
    id: "BAM",
    displayName: "bosznia-hercegovinai konvertibilis márka",
    symbol: "BAM",
    one: "bosznia-hercegovinai konvertibilis márka",
    other: "bosznia-hercegovinai konvertibilis márka"
}, {
    id: "BWP",
    displayName: "botswanai pula",
    symbol: "BWP",
    one: "botswanai pula",
    other: "botswanai pula"
}, {
    id: "BRL",
    displayName: "brazil real",
    symbol: "BRL",
    one: "brazil real",
    other: "brazil real"
}, {
    id: "GBP",
    displayName: "brit font",
    symbol: "GBP",
    one: "brit font",
    other: "brit font"
}, {
    id: "BND",
    displayName: "brunei dollár",
    symbol: "BND",
    one: "brunei dollár",
    other: "brunei dollár"
}, {
    id: "BIF",
    displayName: "burundi frank",
    symbol: "BIF",
    one: "burundi frank",
    other: "burundi frank"
}, {
    id: "CLP",
    displayName: "chilei peso",
    symbol: "CLP",
    one: "chilei peso",
    other: "chilei peso"
}, {
    id: "KMF",
    displayName: "comorei frank",
    symbol: "KMF",
    one: "comorei frank",
    other: "comorei frank"
}, {
    id: "CZK",
    displayName: "cseh korona",
    symbol: "CZK",
    one: "cseh korona",
    other: "cseh korona"
}, {
    id: "XPF",
    displayName: "csendes-óceáni valutaközösségi frank",
    symbol: "CFPF",
    one: "csendes-óceáni valutaközösségi frank",
    other: "csendes-óceáni valutaközösségi frank"
}, {
    id: "DOP",
    displayName: "dominikai peso",
    symbol: "DOP",
    one: "dominikai peso",
    other: "dominikai peso"
}, {
    id: "DJF",
    displayName: "dzsibuti frank",
    symbol: "DJF",
    one: "dzsibuti frank",
    other: "dzsibuti frank"
}, {
    id: "DKK",
    displayName: "dán korona",
    symbol: "DKK",
    one: "dán korona",
    other: "dán korona"
}, {
    id: "ZAR",
    displayName: "dél-afrikai rand",
    symbol: "ZAR",
    one: "dél-afrikai rand",
    other: "dél-afrikai rand"
}, {
    id: "KRW",
    displayName: "dél-koreai won",
    symbol: "KRW",
    one: "dél-koreai won",
    other: "dél-koreai won"
}, {
    id: "SSP",
    displayName: "dél-szudáni font",
    symbol: "SSP",
    one: "dél-szudáni font",
    other: "dél-szudáni font"
}, {
    id: "EGP",
    displayName: "egyiptomi font",
    symbol: "EGP",
    one: "egyiptomi font",
    other: "egyiptomi font"
}, {
    id: "ERN",
    displayName: "eritreai nakfa",
    symbol: "ERN",
    one: "eritreai nakfa",
    other: "eritreai nakfa"
}, {
    id: "ETB",
    displayName: "etiópiai birr",
    symbol: "ETB",
    one: "etiópiai birr",
    other: "etiópiai birr"
}, {
    id: "EUR",
    displayName: "euró",
    symbol: "EUR",
    one: "euró",
    other: "euró"
}, {
    id: "XEU",
    displayName: "európai pénznemegység",
    one: "Európai pénznemegység",
    other: "Európai pénznemegység"
}, {
    id: "FKP",
    displayName: "falkland-szigeteki font",
    symbol: "FKP",
    one: "falkland-szigeteki font",
    other: "falkland-szigeteki font"
}, {
    id: "BYR",
    displayName: "fehérorosz rubel",
    symbol: "BYR",
    one: "fehérorosz rubel",
    other: "fehérorosz rubel"
}, {
    id: "FJD",
    displayName: "fidzsi dollár",
    symbol: "FJD",
    one: "fidzsi dollár",
    other: "fidzsi dollár"
}, {
    id: "PHP",
    displayName: "fülöp-szigeteki peso",
    symbol: "PHP",
    one: "fülöp-szigeteki peso",
    other: "fülöp-szigeteki peso"
}, {
    id: "GMD",
    displayName: "gambiai dalasi",
    symbol: "GMD",
    one: "gambiai dalasi",
    other: "gambiai dalasi"
}, {
    id: "GHS",
    displayName: "ghánai cedi",
    symbol: "GHS",
    one: "ghánai cedi",
    other: "ghánai cedi"
}, {
    id: "GIP",
    displayName: "gibraltári font",
    symbol: "GIP",
    one: "gibraltári font",
    other: "gibraltári font"
}, {
    id: "GEL",
    displayName: "grúz lari",
    symbol: "GEL",
    one: "grúz lari",
    other: "grúz lari"
}, {
    id: "GTQ",
    displayName: "guatemalai quetzal",
    symbol: "GTQ",
    one: "guatemalai quetzal",
    other: "guatemalai quetzal"
}, {
    id: "GNF",
    displayName: "guineai frank",
    symbol: "GNF",
    one: "guineai frank",
    other: "guineai frank"
}, {
    id: "GYD",
    displayName: "guyanai dollár",
    symbol: "GYD",
    one: "guyanai dollár",
    other: "guyanai dollár"
}, {
    id: "HTG",
    displayName: "haiti gourde",
    symbol: "HTG",
    one: "haiti gourde",
    other: "haiti gourde"
}, {
    id: "HNL",
    displayName: "hodurasi lempira",
    symbol: "HNL",
    one: "hodurasi lempira",
    other: "hodurasi lempira"
}, {
    id: "ANG",
    displayName: "holland antilláki forint",
    symbol: "ANG",
    one: "holland antilláki forint",
    other: "holland antilláki forint"
}, {
    id: "HKD",
    displayName: "hongkongi dollár",
    symbol: "HKD",
    one: "hongkongi dollár",
    other: "hongkongi dollár"
}, {
    id: "HRK",
    displayName: "horvát kuna",
    symbol: "HRK",
    one: "horvát kuna",
    other: "horvát kuna"
}, {
    id: "INR",
    displayName: "indiai rúpia",
    symbol: "INR",
    one: "indiai rúpia",
    other: "indiai rúpia"
}, {
    id: "IDR",
    displayName: "indonéz rúpia",
    symbol: "IDR",
    one: "indonéz rúpia",
    other: "indonéz rúpia"
}, {
    id: "IQD",
    displayName: "iraki dínár",
    symbol: "IQD",
    one: "iraki dínár",
    other: "iraki dínár"
}, {
    id: "IRR",
    displayName: "iráni rial",
    symbol: "IRR",
    one: "iráni rial",
    other: "iráni rial"
}, {
    id: "XXX",
    displayName: "ismeretlen pénznem",
    one: "(ismeretlen pénznem)",
    other: "(ismeretlen pénznem)"
}, {
    id: "ISK",
    displayName: "izlandi korona",
    symbol: "ISK",
    one: "izlandi korona",
    other: "izlandi korona"
}, {
    id: "ILS",
    displayName: "izraeli új sékel",
    symbol: "ILS",
    one: "izraeli új sékel",
    other: "izraeli új sékel"
}, {
    id: "JMD",
    displayName: "jamaicai dollár",
    symbol: "JMD",
    one: "jamaicai dollár",
    other: "jamaicai dollár"
}, {
    id: "JPY",
    displayName: "japán jen",
    symbol: "¥",
    one: "japán jen",
    other: "japán jen"
}, {
    id: "YER",
    displayName: "jemeni rial",
    symbol: "YER",
    one: "jemeni rial",
    other: "jemeni rial"
}, {
    id: "JOD",
    displayName: "jordániai dínár",
    symbol: "JOD",
    one: "jordániai dínár",
    other: "jordániai dínár"
}, {
    id: "KYD",
    displayName: "kajmán-szigeteki dollár",
    symbol: "KYD",
    one: "kajmán-szigeteki dollár",
    other: "kajmán-szigeteki dollár"
}, {
    id: "KHR",
    displayName: "kambodzsai riel",
    symbol: "KHR",
    one: "kambodzsai riel",
    other: "kambodzsai riel"
}, {
    id: "CAD",
    displayName: "kanadai dollár",
    symbol: "CAD",
    one: "kanadai dollár",
    other: "kanadai dollár"
}, {
    id: "QAR",
    displayName: "katari rial",
    symbol: "QAR",
    one: "katari rial",
    other: "katari rial"
}, {
    id: "KZT",
    displayName: "kazahsztáni tenge",
    symbol: "KZT",
    one: "kazahsztáni tenge",
    other: "kazahsztáni tenge"
}, {
    id: "XCD",
    displayName: "kelet-karibi dollár",
    symbol: "XCD",
    one: "kelet-karibi dollár",
    other: "kelet-karibi dollár"
}, {
    id: "KES",
    displayName: "kenyai shilling",
    symbol: "KES",
    one: "kenyai shilling",
    other: "kenyai shilling"
}, {
    id: "KGS",
    displayName: "kirgizisztáni szom",
    symbol: "KGS",
    one: "kirgizisztáni szom",
    other: "kirgizisztáni szom"
}, {
    id: "COP",
    displayName: "kolumbiai peso",
    symbol: "COP",
    one: "kolumbiai peso",
    other: "kolumbiai peso"
}, {
    id: "CDF",
    displayName: "kongói frank",
    symbol: "CDF",
    one: "kongói frank",
    other: "kongói frank"
}, {
    id: "CUC",
    displayName: "kubai konvertibilis peso",
    symbol: "CUC",
    one: "kubai konvertibilis peso",
    other: "kubai konvertibilis peso"
}, {
    id: "CUP",
    displayName: "kubai peso",
    symbol: "CUP",
    one: "kubai peso",
    other: "kubai peso"
}, {
    id: "KWD",
    displayName: "kuvaiti dínár",
    symbol: "KWD",
    one: "kuvaiti dínár",
    other: "kuvaiti dínár"
}, {
    id: "CNY",
    displayName: "kínai jüan",
    symbol: "CNY",
    one: "kínai jüan",
    other: "kínai jüan"
}, {
    id: "LAK",
    displayName: "laoszi kip",
    symbol: "LAK",
    one: "laoszi kip",
    other: "laoszi kip"
}, {
    id: "PLN",
    displayName: "lengyel zloty",
    symbol: "PLN",
    one: "lengyel zloty",
    other: "lengyel zloty"
}, {
    id: "LVL",
    displayName: "lett lats",
    symbol: "LVL",
    one: "lett lats",
    other: "lett lats"
}, {
    id: "LBP",
    displayName: "libanoni font",
    symbol: "LBP",
    one: "libanoni font",
    other: "libanoni font"
}, {
    id: "LRD",
    displayName: "libériai dollár",
    symbol: "LRD",
    one: "libériai dollár",
    other: "libériai dollár"
}, {
    id: "LTL",
    displayName: "litvániai litas",
    symbol: "LTL",
    one: "litvániai litas",
    other: "litvániai litas"
}, {
    id: "LUC",
    displayName: "luxemburgi konvertibilis frank"
}, {
    id: "LUL",
    displayName: "luxemburgi pénzügyi frank"
}, {
    id: "LYD",
    displayName: "líbiai dínár",
    symbol: "LYD",
    one: "líbiai dínár",
    other: "líbiai dínár"
}, {
    id: "MKD",
    displayName: "macedon dínár",
    symbol: "MKD",
    one: "macedon dínár",
    other: "macedon dínár"
}, {
    id: "MGA",
    displayName: "madagaszkári ariary",
    symbol: "MGA",
    one: "madagaszkári ariary",
    other: "madagaszkári ariary"
}, {
    id: "HUF",
    displayName: "magyar forint",
    symbol: "Ft",
    one: "magyar forint",
    other: "magyar forint"
}, {
    id: "MOP",
    displayName: "makaói pataca",
    symbol: "MOP",
    one: "makaói pataca",
    other: "makaói pataca"
}, {
    id: "MYR",
    displayName: "malajziai ringgit",
    symbol: "MYR",
    one: "malajziai ringgit",
    other: "malajziai ringgit"
}, {
    id: "MWK",
    displayName: "malawi kwacha",
    symbol: "MWK",
    one: "malawi kwacha",
    other: "malawi kwacha"
}, {
    id: "MVR",
    displayName: "maldív-szigeteki rufiyaa",
    symbol: "MVR",
    one: "maldív-szigeteki rufiyaa",
    other: "maldív-szigeteki rufiyaa"
}, {
    id: "MAD",
    displayName: "marokkói dirham",
    symbol: "MAD",
    one: "marokkói dirham",
    other: "marokkói dirham"
}, {
    id: "MUR",
    displayName: "mauritiusi rúpia",
    symbol: "MUR",
    one: "mauritiusi rúpia",
    other: "mauritiusi rúpia"
}, {
    id: "MRO",
    displayName: "mauritániai ouguiya",
    symbol: "MRO",
    one: "mauritániai ouguiya",
    other: "mauritániai ouguiya"
}, {
    id: "MXN",
    displayName: "mexikói peso",
    symbol: "MXN",
    one: "mexikói peso",
    other: "mexikói peso"
}, {
    id: "MMK",
    displayName: "mianmari kyat",
    symbol: "MMK",
    one: "mianmari kyat",
    other: "mianmari kyat"
}, {
    id: "MDL",
    displayName: "moldován lei",
    symbol: "MDL",
    one: "moldován lei",
    other: "moldován lei"
}, {
    id: "MNT",
    displayName: "mongóliai tugrik",
    symbol: "MNT",
    one: "mongóliai tugrik",
    other: "mongóliai tugrik"
}, {
    id: "MZN",
    displayName: "mozambiki metikális",
    symbol: "MZN",
    one: "mozambiki metikális",
    other: "mozambiki metikális"
}, {
    id: "NAD",
    displayName: "namíbiai dollár",
    symbol: "NAD",
    one: "namíbiai dollár",
    other: "namíbiai dollár"
}, {
    id: "NPR",
    displayName: "nepáli rúpia",
    symbol: "NPR",
    one: "nepáli rúpia",
    other: "nepáli rúpia"
}, {
    id: "NIO",
    displayName: "nicaraguai córdoba",
    symbol: "NIO",
    one: "nicaraguai córdoba",
    other: "nicaraguai córdoba"
}, {
    id: "NGN",
    displayName: "nigériai naira",
    symbol: "NGN",
    one: "nigériai naira",
    other: "nigériai naira"
}, {
    id: "NOK",
    displayName: "norvég korona",
    symbol: "NOK",
    one: "norvég korona",
    other: "norvég korona"
}, {
    id: "WST",
    displayName: "nyugat-szamoai tala",
    symbol: "WST",
    one: "nyugat-szamoai tala",
    other: "nyugat-szamoai tala"
}, {
    id: "OMR",
    displayName: "ománi rial",
    symbol: "OMR",
    one: "ománi rial",
    other: "ománi rial"
}, {
    id: "RUB",
    displayName: "orosz rubel",
    symbol: "RUB",
    one: "orosz rubel",
    other: "orosz rubel"
}, {
    id: "RUR",
    displayName: "orosz rubel (1991–1998)",
    symbol: "р.",
    one: "orosz rubel (1991–1998)",
    other: "orosz rubel (1991–1998)"
}, {
    id: "PKR",
    displayName: "pakisztáni rúpia",
    symbol: "PKR",
    one: "pakisztáni rúpia",
    other: "pakisztáni rúpia"
}, {
    id: "XPD",
    displayName: "palládium",
    one: "Palládium",
    other: "Palládium"
}, {
    id: "PAB",
    displayName: "panamai balboa",
    symbol: "PAB",
    one: "panamai balboa",
    other: "panamai balboa"
}, {
    id: "PYG",
    displayName: "paraguayi guarani",
    symbol: "PYG",
    one: "paraguayi guarani",
    other: "paraguayi guarani"
}, {
    id: "PEN",
    displayName: "perui sol nuevo",
    symbol: "PEN",
    one: "perui sol nuevo",
    other: "perui sol nuevo"
}, {
    id: "XPT",
    displayName: "platina",
    one: "Platina",
    other: "Platina"
}, {
    id: "PGK",
    displayName: "pápua új-guineai kina",
    symbol: "PGK",
    one: "pápua új-guineai kina",
    other: "pápua új-guineai kina"
}, {
    id: "RHD",
    displayName: "rhodéziai dollár",
    one: "Rhodéziai dollár",
    other: "Rhodéziai dollár"
}, {
    id: "RON",
    displayName: "román lej",
    symbol: "RON",
    one: "román lej",
    other: "román lej"
}, {
    id: "ROL",
    displayName: "román lej (1952–2006)",
    one: "román lej (1952–2006)",
    other: "román lej (1952–2006)"
}, {
    id: "RWF",
    displayName: "ruandai frank",
    symbol: "RWF",
    one: "ruandai frank",
    other: "ruandai frank"
}, {
    id: "SBD",
    displayName: "salamon-szigeteki dollár",
    symbol: "SBD",
    one: "salamon-szigeteki dollár",
    other: "salamon-szigeteki dollár"
}, {
    id: "SCR",
    displayName: "seychelle-szigeteki rúpia",
    symbol: "SCR",
    one: "seychelle-szigeteki rúpia",
    other: "seychelle-szigeteki rúpia"
}, {
    id: "ESA",
    displayName: "spanyol peseta (A–kontó)"
}, {
    id: "ESB",
    displayName: "spanyol peseta (konvertibilis kontó)"
}, {
    id: "SRD",
    displayName: "suriname-i dollár",
    symbol: "SRD",
    one: "suriname-i dollár",
    other: "suriname-i dollár"
}, {
    id: "CHF",
    displayName: "svájci frank",
    symbol: "CHF",
    one: "svájci frank",
    other: "svájci frank"
}, {
    id: "SEK",
    displayName: "svéd korona",
    symbol: "SEK",
    one: "svéd korona",
    other: "svéd korona"
}, {
    id: "SAR",
    displayName: "szaúdi riyal",
    symbol: "SAR",
    one: "szaúdi riyal",
    other: "szaúdi riyal"
}, {
    id: "CSD",
    displayName: "szerb dinár"
}, {
    id: "RSD",
    displayName: "szerb dínár",
    symbol: "RSD",
    one: "szerb dínár",
    other: "szerb dínár"
}, {
    id: "SGD",
    displayName: "szingapúri dollár",
    symbol: "SGD",
    one: "szingapúri dollár",
    other: "szingapúri dollár"
}, {
    id: "SOS",
    displayName: "szomáli shilling",
    symbol: "SOS",
    one: "szomáli shilling",
    other: "szomáli shilling"
}, {
    id: "SDG",
    displayName: "szudáni font",
    symbol: "SDG",
    one: "szudáni font",
    other: "szudáni font"
}, {
    id: "SZL",
    displayName: "szváziföldi lilangeni",
    symbol: "SZL",
    one: "szváziföldi lilangeni",
    other: "szváziföldi lilangeni"
}, {
    id: "SYP",
    displayName: "szíriai font",
    symbol: "SYP",
    one: "szíriai font",
    other: "szíriai font"
}, {
    id: "TWD",
    displayName: "tajvani új dollár",
    symbol: "TWD",
    one: "tajvani új dollár",
    other: "tajvani új dollár"
}, {
    id: "TZS",
    displayName: "tanzániai shilling",
    symbol: "TZS",
    one: "tanzániai shilling",
    other: "tanzániai shilling"
}, {
    id: "THB",
    displayName: "thai baht",
    symbol: "THB",
    one: "thai baht",
    other: "thai baht"
}, {
    id: "TOP",
    displayName: "tongai paanga",
    symbol: "TOP",
    one: "tongai paanga",
    other: "tongai paanga"
}, {
    id: "TND",
    displayName: "tunéziai dínár",
    symbol: "TND",
    one: "tunéziai dínár",
    other: "tunéziai dínár"
}, {
    id: "TJS",
    displayName: "tádzsikisztáni somoni",
    symbol: "TJS",
    one: "tádzsikisztáni somoni",
    other: "tádzsikisztáni somoni"
}, {
    id: "TRY",
    displayName: "török líra",
    symbol: "TRY",
    one: "török líra",
    other: "török líra"
}, {
    id: "TRL",
    displayName: "török líra (1922–2005)",
    one: "török líra (1922–2005)",
    other: "török líra (1922–2005)"
}, {
    id: "TMT",
    displayName: "türkmenisztáni manat",
    symbol: "TMT",
    one: "türkmenisztáni manat",
    other: "türkmenisztáni manat"
}, {
    id: "TMM",
    displayName: "türkmenisztáni manat (1993–2009)",
    one: "türkmenisztáni manat (1993–2009)",
    other: "türkmenisztáni manat (1993–2009)"
}, {
    id: "UGX",
    displayName: "ugandai shilling",
    symbol: "UGX",
    one: "ugandai shilling",
    other: "ugandai shilling"
}, {
    id: "UAH",
    displayName: "ukrán hrivnya",
    symbol: "UAH",
    one: "ukrán hrivnya",
    other: "ukrán hrivnya"
}, {
    id: "UYU",
    displayName: "uruguay-i peso",
    symbol: "UYU",
    one: "uruguayi peso",
    other: "uruguayi peso"
}, {
    id: "VUV",
    displayName: "vanuatui vatu",
    symbol: "VUV",
    one: "vanuatui vatu",
    other: "vanuatui vatu"
}, {
    id: "VEF",
    displayName: "venezuelai bolivar",
    symbol: "VEF",
    one: "venezuelai bolivar",
    other: "venezuelai bolivar"
}, {
    id: "VND",
    displayName: "vietnami dong",
    symbol: "VND",
    one: "vietnami dong",
    other: "vietnami dong"
}, {
    id: "ZMW",
    displayName: "zambiai kwacha",
    symbol: "ZMW",
    one: "zambiai kwacha",
    other: "zambiai kwacha"
}, {
    id: "EEK",
    displayName: "Észt korona"
}, {
    id: "IEP",
    displayName: "Ír font"
}, {
    id: "KPW",
    displayName: "észak-koreai won",
    symbol: "KPW",
    one: "észak-koreai won",
    other: "észak-koreai won"
}, {
    id: "AMD",
    displayName: "örmény dram",
    symbol: "AMD",
    one: "örmény dram",
    other: "örmény dram"
}, {
    id: "NZD",
    displayName: "új-zélandi dollár",
    symbol: "NZD",
    one: "új-zélandi dollár",
    other: "új-zélandi dollár"
}, {
    id: "UZS",
    displayName: "üzbegisztáni szum",
    symbol: "UZS",
    one: "üzbegisztáni szum",
    other: "üzbegisztáni szum"
} ];

module.exports = inter;