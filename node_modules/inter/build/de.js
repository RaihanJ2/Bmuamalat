function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _6lr91 = {
    "default": "#,##0 %"
}, _6lr92 = [ "Q1", "Q2", "Q3", "Q4" ], _6lr93 = {
    all: {
        leap: "{0}bis"
    }
}, _6lr94 = [ "v. Chr.", "n. Chr." ], _6lr95 = {
    displayName: "Epoche"
}, _6lr96 = {
    displayName: "Zeitzone"
}, _6lr97 = {
    one: "{0}°",
    other: "{0}°"
}, _6lr98 = {
    one: "{0}′",
    other: "{0}′"
}, _6lr99 = {
    one: "{0}″",
    other: "{0}″"
}, _6lr910 = {
    a: "h a – h a",
    h: "h–h a"
}, _6lr911 = {
    displayName: "Wochentag"
}, _6lr912 = [ "Before R.O.C.", "Minguo" ], _6lr913 = {
    one: "{0} G",
    other: "{0} G"
}, _6lr914 = {
    one: "{0} J",
    other: "{0} J"
}, _6lr915 = {
    one: "{0} A",
    other: "{0} A"
}, _6lr916 = {
    one: "{0} Ω",
    other: "{0} Ω"
}, _6lr917 = {
    one: "{0} V",
    other: "{0} V"
}, _6lr918 = {
    one: "{0} J",
    other: "{0} J"
}, _6lr919 = {
    one: "{0} m",
    other: "{0} m"
}, _6lr920 = {
    one: "{0} t",
    other: "{0} t"
}, _6lr921 = {
    one: "{0} g",
    other: "{0} g"
}, _6lr922 = {
    one: "{0} W",
    other: "{0} W"
}, _6lr923 = {
    one: "{0}°F",
    other: "{0}°F"
}, _6lr924 = {
    one: "{0} K",
    other: "{0} K"
}, _6lr925 = {
    one: "{0} l",
    other: "{0} l"
}, _6lr926 = {
    displayName: "Tageshälfte"
}, _6lr927 = {
    one: "{0} ha",
    other: "{0} ha"
}, _6lr928 = {
    one: "{0} m²",
    other: "{0} m²"
}, _6lr929 = {
    one: "{0} ac",
    other: "{0} ac"
}, _6lr930 = {
    one: "{0} kt",
    other: "{0} kt"
}, _6lr931 = {
    one: "{0} TB",
    other: "{0} TB"
}, _6lr932 = {
    one: "{0} Tb",
    other: "{0} Tb"
}, _6lr933 = {
    one: "{0} GB",
    other: "{0} GB"
}, _6lr934 = {
    one: "{0} Gb",
    other: "{0} Gb"
}, _6lr935 = {
    one: "{0} MB",
    other: "{0} MB"
}, _6lr936 = {
    one: "{0} Mb",
    other: "{0} Mb"
}, _6lr937 = {
    one: "{0} kB",
    other: "{0} kB"
}, _6lr938 = {
    one: "{0} kb",
    other: "{0} kb"
}, _6lr939 = {
    one: "{0} ms",
    other: "{0} ms"
}, _6lr940 = {
    one: "{0} μs",
    other: "{0} μs"
}, _6lr941 = {
    one: "{0} ns",
    other: "{0} ns"
}, _6lr942 = {
    one: "{0} mA",
    other: "{0} mA"
}, _6lr943 = {
    one: "{0} kJ",
    other: "{0} kJ"
}, _6lr944 = {
    one: "{0} Hz",
    other: "{0} Hz"
}, _6lr945 = {
    one: "{0} km",
    other: "{0} km"
}, _6lr946 = {
    one: "{0} dm",
    other: "{0} dm"
}, _6lr947 = {
    one: "{0} cm",
    other: "{0} cm"
}, _6lr948 = {
    one: "{0} mm",
    other: "{0} mm"
}, _6lr949 = {
    one: "{0} µm",
    other: "{0} µm"
}, _6lr950 = {
    one: "{0} nm",
    other: "{0} nm"
}, _6lr951 = {
    one: "{0} pm",
    other: "{0} pm"
}, _6lr952 = {
    one: "{0} mi",
    other: "{0} mi"
}, _6lr953 = {
    one: "{0} yd",
    other: "{0} yd"
}, _6lr954 = {
    one: "{0} ft",
    other: "{0} ft"
}, _6lr955 = {
    one: "{0} in",
    other: "{0} in"
}, _6lr956 = {
    one: "{0} pc",
    other: "{0} pc"
}, _6lr957 = {
    one: "{0} fm",
    other: "{0} fm"
}, _6lr958 = {
    one: "{0} sm",
    other: "{0} sm"
}, _6lr959 = {
    one: "{0} lx",
    other: "{0} lx"
}, _6lr960 = {
    one: "{0} kg",
    other: "{0} kg"
}, _6lr961 = {
    one: "{0} mg",
    other: "{0} mg"
}, _6lr962 = {
    one: "{0} µg",
    other: "{0} µg"
}, _6lr963 = {
    one: "{0} tn",
    other: "{0} tn"
}, _6lr964 = {
    one: "{0} st",
    other: "{0} st"
}, _6lr965 = {
    one: "{0} lb",
    other: "{0} lb"
}, _6lr966 = {
    one: "{0} oz",
    other: "{0} oz"
}, _6lr967 = {
    one: "{0} Kt",
    other: "{0} Kt"
}, _6lr968 = {
    one: "{0} GW",
    other: "{0} GW"
}, _6lr969 = {
    one: "{0} MW",
    other: "{0} MW"
}, _6lr970 = {
    one: "{0} kW",
    other: "{0} kW"
}, _6lr971 = {
    one: "{0} mW",
    other: "{0} mW"
}, _6lr972 = {
    one: "{0} PS",
    other: "{0} PS"
}, _6lr973 = {
    one: "{0} m³",
    other: "{0} m³"
}, _6lr974 = {
    one: "{0} Ml",
    other: "{0} Ml"
}, _6lr975 = {
    one: "{0} hl",
    other: "{0} hl"
}, _6lr976 = {
    one: "{0} dl",
    other: "{0} dl"
}, _6lr977 = {
    one: "{0} cl",
    other: "{0} cl"
}, _6lr978 = {
    one: "{0} ml",
    other: "{0} ml"
}, _6lr979 = {
    one: "{0} bu",
    other: "{0} bu"
}, _6lr980 = {
    one: "{0} qt",
    other: "{0} qt"
}, _6lr981 = {
    one: "{0} pt",
    other: "{0} pt"
}, _6lr982 = {
    one: "{0} EL",
    other: "{0} EL"
}, _6lr983 = {
    one: "{0} TL",
    other: "{0} TL"
}, _6lr984 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _6lr985 = [ "S", "M", "D", "M", "D", "F", "S" ], _6lr986 = {
    one: "{0} rad",
    other: "{0} rad"
}, _6lr987 = {
    one: "{0} km²",
    other: "{0} km²"
}, _6lr988 = {
    one: "{0} cm²",
    other: "{0} cm²"
}, _6lr989 = {
    one: "{0} mi²",
    other: "{0} mi²"
}, _6lr990 = {
    one: "{0} yd²",
    other: "{0} yd²"
}, _6lr991 = {
    one: "{0} ft²",
    other: "{0} ft²"
}, _6lr992 = {
    one: "{0} in²",
    other: "{0} in²"
}, _6lr993 = {
    one: "{0} mpg",
    other: "{0} mpg"
}, _6lr994 = {
    one: "{0} cal",
    other: "{0} cal"
}, _6lr995 = {
    one: "{0} kWh",
    other: "{0} kWh"
}, _6lr996 = {
    one: "{0} GHz",
    other: "{0} GHz"
}, _6lr997 = {
    one: "{0} MHz",
    other: "{0} MHz"
}, _6lr998 = {
    one: "{0} kHz",
    other: "{0} kHz"
}, _6lr999 = {
    one: "{0} fur",
    other: "{0} fur"
}, _6lr9100 = {
    one: "{0} smi",
    other: "{0} smi"
}, _6lr9101 = {
    one: "{0} hPa",
    other: "{0} hPa"
}, _6lr9102 = {
    one: "{0} psi",
    other: "{0} psi"
}, _6lr9103 = {
    one: "{0} m/s",
    other: "{0} m/s"
}, _6lr9104 = {
    one: "{0} km³",
    other: "{0} km³"
}, _6lr9105 = {
    one: "{0} cm³",
    other: "{0} cm³"
}, _6lr9106 = {
    one: "{0} mi³",
    other: "{0} mi³"
}, _6lr9107 = {
    one: "{0} yd³",
    other: "{0} yd³"
}, _6lr9108 = {
    one: "{0} ft³",
    other: "{0} ft³"
}, _6lr9109 = {
    one: "{0} in³",
    other: "{0} in³"
}, _6lr9110 = {
    one: "{0} gal",
    other: "{0} gal"
}, _6lr9111 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _6lr9112 = {
    one: "{0} Bit",
    other: "{0} Bits"
}, _6lr9113 = {
    one: "{0} Cup",
    other: "{0} Cups"
}, _6lr9114 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _6lr9115 = {
    one: "{0} m/s²",
    other: "{0} m/s²"
}, _6lr9116 = {
    one: "{0} l/km",
    other: "{0} l/km"
}, _6lr9117 = {
    one: "{0} Std.",
    other: "{0} Std."
}, _6lr9118 = {
    one: "{0} Min.",
    other: "{0} Min."
}, _6lr9119 = {
    one: "{0} kcal",
    other: "{0} kcal"
}, _6lr9120 = {
    one: "{0} kcal",
    other: "{0} kcal"
}, _6lr9121 = {
    one: "{0} inHg",
    other: "{0} inHg"
}, _6lr9122 = {
    one: "{0} mbar",
    other: "{0} mbar"
}, _6lr9123 = {
    one: "{0} km/h",
    other: "{0} km/h"
}, _6lr9124 = {
    one: "{0} mi/h",
    other: "{0} mi/h"
}, _6lr9125 = {
    one: "0 Tsd'.'",
    other: "0 Tsd'.'"
}, _6lr9126 = {
    one: "0 Mio'.'",
    other: "0 Mio'.'"
}, _6lr9127 = {
    one: "0 Mrd'.'",
    other: "0 Mrd'.'"
}, _6lr9128 = {
    one: "0 Bio'.'",
    other: "0 Bio'.'"
}, _6lr9129 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _6lr9130 = {
    one: "in {0} Q",
    other: "in {0} Q"
}, _6lr9131 = {
    one: "in {0} m",
    other: "in {0} m"
}, _6lr9132 = {
    one: "in {0} s",
    other: "in {0} s"
}, _6lr9133 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _6lr9134 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _6lr9135 = {
    one: "{0} Byte",
    other: "{0} Bytes"
}, _6lr9136 = {
    one: "{0} Karat",
    other: "{0} Karat"
}, _6lr9137 = {
    one: "{0} mm Hg",
    other: "{0} mm Hg"
}, _6lr9138 = {
    one: "{0} ac ft",
    other: "{0} ac ft"
}, _6lr9139 = {
    one: "{0} fl oz",
    other: "{0} fl oz"
}, _6lr9140 = {
    one: "0 Tausend",
    other: "0 Tausend"
}, _6lr9141 = {
    one: "00 Tsd'.'",
    other: "00 Tsd'.'"
}, _6lr9142 = {
    one: "00 Mio'.'",
    other: "00 Mio'.'"
}, _6lr9143 = {
    one: "00 Mrd'.'",
    other: "00 Mrd'.'"
}, _6lr9144 = {
    one: "00 Bio'.'",
    other: "00 Bio'.'"
}, _6lr9145 = {
    d: "d.–d. MMM",
    M: "d. MMM – d. MMM"
}, _6lr9146 = {
    one: "vor {0} Q",
    other: "vor {0} Q"
}, _6lr9147 = {
    one: "vor {0} m",
    other: "vor {0} m"
}, _6lr9148 = {
    one: "vor {0} s",
    other: "vor {0} s"
}, _6lr9149 = [ "So", "Mo", "Di", "Mi", "Do", "Fr", "Sa" ], _6lr9150 = {
    one: "00 Tausend",
    other: "00 Tausend"
}, _6lr9151 = {
    one: "0 Million",
    other: "0 Millionen"
}, _6lr9152 = {
    one: "0 Billion",
    other: "0 Billionen"
}, _6lr9153 = {
    one: "000 Tsd'.'",
    other: "000 Tsd'.'"
}, _6lr9154 = {
    one: "000 Mio'.'",
    other: "000 Mio'.'"
}, _6lr9155 = {
    one: "000 Mrd'.'",
    other: "000 Mrd'.'"
}, _6lr9156 = {
    one: "000 Bio'.'",
    other: "000 Bio'.'"
}, _6lr9157 = {
    one: "0 Tsd'.' ¤",
    other: "0 Tsd'.' ¤"
}, _6lr9158 = {
    one: "0 Mio'.' ¤",
    other: "0 Mio'.' ¤"
}, _6lr9159 = {
    one: "0 Mrd'.' ¤",
    other: "0 Mrd'.' ¤"
}, _6lr9160 = {
    one: "0 Bio'.' ¤",
    other: "0 Bio'.' ¤"
}, _6lr9161 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _6lr9162 = {
    M: "MM.y – MM.y G",
    y: "MM.y – MM.y G"
}, _6lr9163 = {
    M: "MMM–MMM y G",
    y: "MMM y – MMM y G"
}, _6lr9164 = {
    one: "in {0} Wo.",
    other: "in {0} Wo."
}, _6lr9165 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _6lr9166 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _6lr9167 = {
    one: "000 Tausend",
    other: "000 Tausend"
}, _6lr9168 = {
    one: "00 Tsd'.' ¤",
    other: "00 Tsd'.' ¤"
}, _6lr9169 = {
    one: "00 Mio'.' ¤",
    other: "00 Mio'.' ¤"
}, _6lr9170 = {
    one: "00 Mrd'.' ¤",
    other: "00 Mrd'.' ¤"
}, _6lr9171 = {
    one: "00 Bio'.' ¤",
    other: "00 Bio'.' ¤"
}, _6lr9172 = {
    one: "vor {0} Wo.",
    other: "vor {0} Wo."
}, _6lr9173 = {
    one: "in {0} Tag",
    other: "in {0} Tagen"
}, _6lr9174 = {
    one: "in {0} Std.",
    other: "in {0} Std."
}, _6lr9175 = {
    one: "in {0} Min.",
    other: "in {0} Min."
}, _6lr9176 = {
    one: "in {0} Sek.",
    other: "in {0} Sek."
}, _6lr9177 = {
    one: "0 Milliarde",
    other: "0 Milliarden"
}, _6lr9178 = {
    one: "{0} L/100 km",
    other: "{0} L/100 km"
}, _6lr9179 = {
    one: "00 Millionen",
    other: "00 Millionen"
}, _6lr9180 = {
    one: "00 Billionen",
    other: "00 Billionen"
}, _6lr9181 = {
    one: "000 Tsd'.' ¤",
    other: "000 Tsd'.' ¤"
}, _6lr9182 = {
    one: "000 Mio'.' ¤",
    other: "000 Mio'.' ¤"
}, _6lr9183 = {
    one: "000 Mrd'.' ¤",
    other: "000 Mrd'.' ¤"
}, _6lr9184 = {
    one: "000 Bio'.' ¤",
    other: "000 Bio'.' ¤"
}, _6lr9185 = {
    d: "dd.MM. – dd.MM.",
    M: "dd.MM. – dd.MM."
}, _6lr9186 = {
    M: "MMMM–MMMM y G",
    y: "MMMM y – MMMM y G"
}, _6lr9187 = {
    one: "in {0} Jahr",
    other: "in {0} Jahren"
}, _6lr9188 = {
    one: "vor {0} Tag",
    other: "vor {0} Tagen"
}, _6lr9189 = {
    one: "vor {0} Std.",
    other: "vor {0} Std."
}, _6lr9190 = {
    one: "vor {0} Min.",
    other: "vor {0} Min."
}, _6lr9191 = {
    one: "vor {0} Sek.",
    other: "vor {0} Sek."
}, _6lr9192 = {
    one: "in {0} Woche",
    other: "in {0} Wochen"
}, _6lr9193 = {
    one: "000 Millionen",
    other: "000 Millionen"
}, _6lr9194 = {
    one: "00 Milliarden",
    other: "00 Milliarden"
}, _6lr9195 = {
    one: "000 Billionen",
    other: "000 Billionen"
}, _6lr9196 = [ "So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa." ], _6lr9197 = {
    one: "vor {0} Jahr",
    other: "vor {0} Jahren"
}, _6lr9198 = {
    one: "in {0} Quart.",
    other: "in {0} Quart."
}, _6lr9199 = {
    one: "in {0} Monat",
    other: "in {0} Monaten"
}, _6lr9200 = {
    one: "vor {0} Woche",
    other: "vor {0} Wochen"
}, _6lr9201 = {
    one: "in {0} Stunde",
    other: "in {0} Stunden"
}, _6lr9202 = {
    one: "in {0} Minute",
    other: "in {0} Minuten"
}, _6lr9203 = {
    one: "000 Milliarden",
    other: "000 Milliarden"
}, _6lr9204 = {
    one: "vor {0} Quart.",
    other: "vor {0} Quart."
}, _6lr9205 = {
    one: "vor {0} Monat",
    other: "vor {0} Monaten"
}, _6lr9206 = {
    one: "vor {0} Monat",
    other: "vor {0} Monaten"
}, _6lr9207 = {
    one: "vor {0} Monat",
    other: "vor {0} Monaten"
}, _6lr9208 = {
    one: "vor {0} Stunde",
    other: "vor {0} Stunden"
}, _6lr9209 = {
    one: "vor {0} Minute",
    other: "vor {0} Minuten"
}, _6lr9210 = {
    one: "in {0} Sekunde",
    other: "in {0} Sekunden"
}, _6lr9211 = {
    one: "in {0} Quartal",
    other: "in {0} Quartalen"
}, _6lr9212 = {
    one: "vor {0} Sekunde",
    other: "vor {0} Sekunden"
}, _6lr9213 = {
    id: "001",
    displayName: "Welt",
    hasTimeZones: false
}, _6lr9214 = {
    d: "E, d. – E, d. MMM",
    M: "E, d. MMM – E, d. MMM"
}, _6lr9215 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _6lr9216 = {
    one: "vor {0} Quartal",
    other: "vor {0} Quartalen"
}, _6lr9217 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _6lr9218 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _6lr9219 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _6lr9220 = {
    id: "AQ",
    displayName: "Antarktis",
    hasTimeZones: true
}, _6lr9221 = {
    "0": "diesen So.",
    "1": "nächsten So.",
    "-1": "letzten So."
}, _6lr9222 = {
    "0": "diesen Mo.",
    "1": "nächsten Mo.",
    "-1": "letzten Mo."
}, _6lr9223 = {
    "0": "diesen Di.",
    "1": "nächsten Di.",
    "-1": "letzten Di."
}, _6lr9224 = {
    "0": "diesen Mi.",
    "1": "nächsten Mi.",
    "-1": "letzten Mi."
}, _6lr9225 = {
    "0": "diesen Do.",
    "1": "nächsten Do.",
    "-1": "letzten Do."
}, _6lr9226 = {
    "0": "diesen Fr.",
    "1": "nächsten Fr.",
    "-1": "letzten Fr."
}, _6lr9227 = {
    "0": "diesen Sa.",
    "1": "nächsten Sa.",
    "-1": "letzten Sa."
}, _6lr9228 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _6lr9229 = {
    id: "AC",
    displayName: "Ascension",
    hasTimeZones: false
}, _6lr9230 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _6lr9231 = {
    d: "E, dd.MM. – E, dd.MM.",
    M: "E, dd.MM. – E, dd.MM."
}, _6lr9232 = [ "1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal" ], _6lr9233 = {
    id: "CC",
    displayName: "Kokosinseln",
    hasTimeZones: true
}, _6lr9234 = {
    id: "BV",
    displayName: "Bouvetinsel",
    hasTimeZones: false
}, _6lr9235 = {
    "0": "dieses Jahr",
    "1": "nächstes Jahr",
    "-1": "letztes Jahr"
}, _6lr9236 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _6lr9237 = {
    "0": "diese Woche",
    "1": "nächste Woche",
    "-1": "letzte Woche"
}, _6lr9238 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _6lr9239 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _6lr9240 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _6lr9241 = {
    id: "CX",
    displayName: "Weihnachtsinsel",
    hasTimeZones: true
}, _6lr9242 = {
    "0": "diesen Monat",
    "1": "nächsten Monat",
    "-1": "letzten Monat"
}, _6lr9243 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _6lr9244 = {
    id: "CP",
    displayName: "Clipperton-Insel",
    hasTimeZones: false
}, _6lr9245 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _6lr9246 = {
    id: "EA",
    displayName: "Ceuta und Melilla",
    hasTimeZones: false
}, _6lr9247 = {
    id: "IC",
    displayName: "Kanarische Inseln",
    hasTimeZones: false
}, _6lr9248 = {
    "0": "diesen Montag",
    "1": "nächsten Montag",
    "-1": "letzten Montag"
}, _6lr9249 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _6lr9250 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _6lr9251 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _6lr9252 = {
    id: "CU",
    displayName: "Kuba",
    regionId: "029",
    hasTimeZones: true
}, _6lr9253 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _6lr9254 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _6lr9255 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _6lr9256 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _6lr9257 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _6lr9258 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _6lr9259 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _6lr9260 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _6lr9261 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _6lr9262 = {
    id: "CN",
    displayName: "China",
    regionId: "030",
    hasTimeZones: true
}, _6lr9263 = {
    id: "GA",
    displayName: "Gabun",
    regionId: "017",
    hasTimeZones: true
}, _6lr9264 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _6lr9265 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _6lr9266 = {
    id: "JP",
    displayName: "Japan",
    regionId: "030",
    hasTimeZones: true
}, _6lr9267 = {
    id: "YE",
    displayName: "Jemen",
    regionId: "145",
    hasTimeZones: true
}, _6lr9268 = {
    id: "QA",
    displayName: "Katar",
    regionId: "145",
    hasTimeZones: true
}, _6lr9269 = {
    id: "KE",
    displayName: "Kenia",
    regionId: "014",
    hasTimeZones: true
}, _6lr9270 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _6lr9271 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _6lr9272 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _6lr9273 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _6lr9274 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _6lr9275 = {
    id: "PL",
    displayName: "Polen",
    regionId: "151",
    hasTimeZones: true
}, _6lr9276 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _6lr9277 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _6lr9278 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _6lr9279 = {
    relative: _6lr9221
}, _6lr9280 = {
    relative: _6lr9222
}, _6lr9281 = {
    relative: _6lr9223
}, _6lr9282 = {
    relative: _6lr9224
}, _6lr9283 = {
    relative: _6lr9225
}, _6lr9284 = {
    relative: _6lr9226
}, _6lr9285 = {
    relative: _6lr9227
}, _6lr9286 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _6lr9287 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _6lr9288 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _6lr9289 = {
    id: "FO",
    displayName: "Färöer",
    regionId: "154",
    hasTimeZones: true
}, _6lr9290 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _6lr9291 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _6lr9292 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _6lr9293 = {
    id: "IN",
    displayName: "Indien",
    regionId: "034",
    hasTimeZones: true
}, _6lr9294 = {
    id: "IE",
    displayName: "Irland",
    regionId: "154",
    hasTimeZones: true
}, _6lr9295 = {
    id: "IS",
    displayName: "Island",
    regionId: "154",
    hasTimeZones: true
}, _6lr9296 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _6lr9297 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _6lr9298 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _6lr9299 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _6lr9300 = {
    id: "LY",
    displayName: "Libyen",
    regionId: "015",
    hasTimeZones: true
}, _6lr9301 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _6lr9302 = {
    id: "MX",
    displayName: "Mexiko",
    regionId: "013",
    hasTimeZones: true
}, _6lr9303 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _6lr9304 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _6lr9305 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _6lr9306 = {
    id: "ZM",
    displayName: "Sambia",
    regionId: "014",
    hasTimeZones: true
}, _6lr9307 = {
    id: "SY",
    displayName: "Syrien",
    regionId: "145",
    hasTimeZones: true
}, _6lr9308 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _6lr9309 = {
    id: "TD",
    displayName: "Tschad",
    regionId: "017",
    hasTimeZones: true
}, _6lr9310 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _6lr9311 = {
    id: "TR",
    displayName: "Türkei",
    regionId: "145",
    hasTimeZones: true
}, _6lr9312 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _6lr9313 = {
    id: "HU",
    displayName: "Ungarn",
    regionId: "151",
    hasTimeZones: true
}, _6lr9314 = {
    id: "CY",
    displayName: "Zypern",
    regionId: "145",
    hasTimeZones: true
}, _6lr9315 = {
    "0": "diesen Sonntag",
    "1": "nächsten Sonntag",
    "-1": "letzten Sonntag"
}, _6lr9316 = {
    "0": "diesen Freitag",
    "1": "nächsten Freitag",
    "-1": "letzten Freitag"
}, _6lr9317 = {
    "0": "diesen Samstag",
    "1": "nächsten Samstag",
    "-1": "letzten Samstag"
}, _6lr9318 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _6lr9319 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _6lr9320 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _6lr9321 = {
    id: "BY",
    displayName: "Belarus",
    regionId: "151",
    hasTimeZones: true
}, _6lr9322 = {
    id: "BE",
    displayName: "Belgien",
    regionId: "155",
    hasTimeZones: true
}, _6lr9323 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _6lr9324 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _6lr9325 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _6lr9326 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _6lr9327 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _6lr9328 = {
    id: "EE",
    displayName: "Estland",
    regionId: "154",
    hasTimeZones: true
}, _6lr9329 = {
    id: "FJ",
    displayName: "Fidschi",
    regionId: "054",
    hasTimeZones: true
}, _6lr9330 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _6lr9331 = {
    id: "IT",
    displayName: "Italien",
    regionId: "039",
    hasTimeZones: true
}, _6lr9332 = {
    id: "JM",
    displayName: "Jamaika",
    regionId: "029",
    hasTimeZones: true
}, _6lr9333 = {
    id: "CM",
    displayName: "Kamerun",
    regionId: "017",
    hasTimeZones: true
}, _6lr9334 = {
    id: "KM",
    displayName: "Komoren",
    regionId: "014",
    hasTimeZones: true
}, _6lr9335 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _6lr9336 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _6lr9337 = {
    id: "LB",
    displayName: "Libanon",
    regionId: "145",
    hasTimeZones: true
}, _6lr9338 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _6lr9339 = {
    id: "LT",
    displayName: "Litauen",
    regionId: "154",
    hasTimeZones: true
}, _6lr9340 = {
    id: "MA",
    displayName: "Marokko",
    regionId: "015",
    hasTimeZones: true
}, _6lr9341 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _6lr9342 = {
    id: "MM",
    displayName: "Myanmar",
    regionId: "035",
    hasTimeZones: true
}, _6lr9343 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _6lr9344 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _6lr9345 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _6lr9346 = {
    id: "CH",
    displayName: "Schweiz",
    regionId: "155",
    hasTimeZones: true
}, _6lr9347 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _6lr9348 = {
    id: "RS",
    displayName: "Serbien",
    regionId: "039",
    hasTimeZones: true
}, _6lr9349 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _6lr9350 = {
    id: "ES",
    displayName: "Spanien",
    regionId: "039",
    hasTimeZones: true
}, _6lr9351 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _6lr9352 = {
    id: "UA",
    displayName: "Ukraine",
    regionId: "151",
    hasTimeZones: true
}, _6lr9353 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _6lr9354 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _6lr9355 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _6lr9356 = {
    id: "EG",
    displayName: "Ägypten",
    regionId: "015",
    hasTimeZones: true
}, _6lr9357 = {
    id: "AL",
    displayName: "Albanien",
    regionId: "039",
    hasTimeZones: true
}, _6lr9358 = {
    id: "DZ",
    displayName: "Algerien",
    regionId: "015",
    hasTimeZones: true
}, _6lr9359 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _6lr9360 = {
    id: "AM",
    displayName: "Armenien",
    regionId: "145",
    hasTimeZones: true
}, _6lr9361 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _6lr9362 = {
    id: "BO",
    displayName: "Bolivien",
    regionId: "005",
    hasTimeZones: true
}, _6lr9363 = {
    id: "BW",
    displayName: "Botsuana",
    regionId: "018",
    hasTimeZones: true
}, _6lr9364 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _6lr9365 = {
    id: "DK",
    displayName: "Dänemark",
    regionId: "154",
    hasTimeZones: true
}, _6lr9366 = {
    id: "FI",
    displayName: "Finnland",
    regionId: "154",
    hasTimeZones: true
}, _6lr9367 = {
    id: "GE",
    displayName: "Georgien",
    regionId: "145",
    hasTimeZones: true
}, _6lr9368 = {
    id: "GL",
    displayName: "Grönland",
    regionId: "021",
    hasTimeZones: true
}, _6lr9369 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _6lr9370 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _6lr9371 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _6lr9372 = {
    id: "HR",
    displayName: "Kroatien",
    regionId: "039",
    hasTimeZones: true
}, _6lr9373 = {
    id: "LV",
    displayName: "Lettland",
    regionId: "154",
    hasTimeZones: true
}, _6lr9374 = {
    id: "MY",
    displayName: "Malaysia",
    regionId: "035",
    hasTimeZones: true
}, _6lr9375 = {
    id: "MN",
    displayName: "Mongolei",
    regionId: "030",
    hasTimeZones: true
}, _6lr9376 = {
    id: "MZ",
    displayName: "Mosambik",
    regionId: "014",
    hasTimeZones: true
}, _6lr9377 = {
    id: "NO",
    displayName: "Norwegen",
    regionId: "154",
    hasTimeZones: true
}, _6lr9378 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _6lr9379 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _6lr9380 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _6lr9381 = {
    id: "RO",
    displayName: "Rumänien",
    regionId: "151",
    hasTimeZones: true
}, _6lr9382 = {
    id: "RU",
    displayName: "Russland",
    regionId: "151",
    hasTimeZones: true
}, _6lr9383 = {
    id: "SE",
    displayName: "Schweden",
    regionId: "154",
    hasTimeZones: true
}, _6lr9384 = {
    id: "ZW",
    displayName: "Simbabwe",
    regionId: "014",
    hasTimeZones: true
}, _6lr9385 = {
    id: "SG",
    displayName: "Singapur",
    regionId: "035",
    hasTimeZones: true
}, _6lr9386 = {
    id: "SK",
    displayName: "Slowakei",
    regionId: "151",
    hasTimeZones: true
}, _6lr9387 = {
    id: "SR",
    displayName: "Suriname",
    regionId: "005",
    hasTimeZones: true
}, _6lr9388 = {
    id: "KR",
    displayName: "Südkorea",
    regionId: "030",
    hasTimeZones: true
}, _6lr9389 = {
    id: "SS",
    displayName: "Südsudan",
    regionId: "014",
    hasTimeZones: true
}, _6lr9390 = {
    id: "TZ",
    displayName: "Tansania",
    regionId: "014",
    hasTimeZones: true
}, _6lr9391 = {
    id: "TH",
    displayName: "Thailand",
    regionId: "035",
    hasTimeZones: true
}, _6lr9392 = {
    id: "TN",
    displayName: "Tunesien",
    regionId: "015",
    hasTimeZones: true
}, _6lr9393 = {
    id: "BR",
    displayName: "Brasilien",
    regionId: "005",
    hasTimeZones: true
}, _6lr9394 = {
    id: "BG",
    displayName: "Bulgarien",
    regionId: "151",
    hasTimeZones: true
}, _6lr9395 = {
    id: "DJ",
    displayName: "Dschibuti",
    regionId: "014",
    hasTimeZones: true
}, _6lr9396 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _6lr9397 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _6lr9398 = {
    id: "JO",
    displayName: "Jordanien",
    regionId: "145",
    hasTimeZones: true
}, _6lr9399 = {
    id: "CV",
    displayName: "Kap Verde",
    regionId: "011",
    hasTimeZones: true
}, _6lr9400 = {
    id: "CO",
    displayName: "Kolumbien",
    regionId: "005",
    hasTimeZones: true
}, _6lr9401 = {
    id: "LU",
    displayName: "Luxemburg",
    regionId: "155",
    hasTimeZones: true
}, _6lr9402 = {
    id: "MV",
    displayName: "Malediven",
    regionId: "034",
    hasTimeZones: true
}, _6lr9403 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _6lr9404 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _6lr9405 = {
    id: "KP",
    displayName: "Nordkorea",
    regionId: "030",
    hasTimeZones: true
}, _6lr9406 = {
    id: "SB",
    displayName: "Salomonen",
    regionId: "054",
    hasTimeZones: true
}, _6lr9407 = {
    id: "SI",
    displayName: "Slowenien",
    regionId: "039",
    hasTimeZones: true
}, _6lr9408 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _6lr9409 = {
    id: "LC",
    displayName: "St. Lucia",
    regionId: "029",
    hasTimeZones: true
}, _6lr9410 = {
    id: "SZ",
    displayName: "Swasiland",
    regionId: "018",
    hasTimeZones: true
}, _6lr9411 = {
    id: "ZA",
    displayName: "Südafrika",
    regionId: "018",
    hasTimeZones: true
}, _6lr9412 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _6lr9413 = {
    id: "ET",
    displayName: "Äthiopien",
    regionId: "014",
    hasTimeZones: true
}, _6lr9414 = {
    "2": "{0}, {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0} und {1}"
}, _6lr9415 = {
    "0": "diesen Dienstag",
    "1": "nächsten Dienstag",
    "-1": "letzten Dienstag"
}, _6lr9416 = {
    "0": "diesen Mittwoch",
    "1": "nächsten Mittwoch",
    "-1": "letzten Mittwoch"
}, _6lr9417 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _6lr9418 = {
    id: "AU",
    displayName: "Australien",
    regionId: "053",
    hasTimeZones: true
}, _6lr9419 = {
    id: "CK",
    displayName: "Cookinseln",
    regionId: "061",
    hasTimeZones: true
}, _6lr9420 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _6lr9421 = {
    id: "FR",
    displayName: "Frankreich",
    regionId: "155",
    hasTimeZones: true
}, _6lr9422 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _6lr9423 = {
    id: "HM",
    displayName: "Heard und McDonaldinseln",
    hasTimeZones: false
}, _6lr9424 = {
    id: "ID",
    displayName: "Indonesien",
    regionId: "035",
    hasTimeZones: true
}, _6lr9425 = {
    id: "KH",
    displayName: "Kambodscha",
    regionId: "035",
    hasTimeZones: true
}, _6lr9426 = {
    id: "KZ",
    displayName: "Kasachstan",
    regionId: "143",
    hasTimeZones: true
}, _6lr9427 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _6lr9428 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _6lr9429 = {
    id: "MK",
    displayName: "Mazedonien",
    regionId: "039",
    hasTimeZones: true
}, _6lr9430 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _6lr9431 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _6lr9432 = {
    id: "NZ",
    displayName: "Neuseeland",
    regionId: "053",
    hasTimeZones: true
}, _6lr9433 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _6lr9434 = {
    id: "SC",
    displayName: "Seychellen",
    regionId: "014",
    hasTimeZones: true
}, _6lr9435 = {
    id: "SH",
    displayName: "St. Helena",
    regionId: "011",
    hasTimeZones: true
}, _6lr9436 = {
    id: "MF",
    displayName: "St. Martin",
    regionId: "029",
    hasTimeZones: true
}, _6lr9437 = {
    id: "UZ",
    displayName: "Usbekistan",
    regionId: "143",
    hasTimeZones: true
}, _6lr9438 = {
    id: "EH",
    displayName: "Westsahara",
    regionId: "015",
    hasTimeZones: true
}, _6lr9439 = {
    id: "AT",
    displayName: "Österreich",
    regionId: "155",
    hasTimeZones: true
}, _6lr9440 = {
    id: "AF",
    displayName: "Afghanistan",
    regionId: "034",
    hasTimeZones: true
}, _6lr9441 = {
    id: "AR",
    displayName: "Argentinien",
    regionId: "005",
    hasTimeZones: true
}, _6lr9442 = {
    id: "BD",
    displayName: "Bangladesch",
    regionId: "034",
    hasTimeZones: true
}, _6lr9443 = {
    id: "DE",
    displayName: "Deutschland",
    regionId: "155",
    hasTimeZones: true
}, _6lr9444 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _6lr9445 = {
    id: "IM",
    displayName: "Isle of Man",
    regionId: "154",
    hasTimeZones: true
}, _6lr9446 = {
    id: "KG",
    displayName: "Kirgisistan",
    regionId: "143",
    hasTimeZones: true
}, _6lr9447 = {
    id: "MR",
    displayName: "Mauretanien",
    regionId: "011",
    hasTimeZones: true
}, _6lr9448 = {
    id: "FM",
    displayName: "Mikronesien",
    regionId: "057",
    hasTimeZones: true
}, _6lr9449 = {
    id: "NL",
    displayName: "Niederlande",
    regionId: "155",
    hasTimeZones: true
}, _6lr9450 = {
    id: "PH",
    displayName: "Philippinen",
    regionId: "035",
    hasTimeZones: true
}, _6lr9451 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _6lr9452 = {
    id: "TL",
    displayName: "Timor-Leste",
    regionId: "035",
    hasTimeZones: true
}, _6lr9453 = {
    id: "AX",
    displayName: "Ålandinseln",
    regionId: "154",
    hasTimeZones: true
}, _6lr9454 = {
    d: "d.–d. MMM y G",
    M: "d. MMM – d. MMM y G",
    y: "d. MMM y – d. MMM y G"
}, _6lr9455 = {
    id: "UM",
    displayName: "Amerikanische Überseeinseln",
    hasTimeZones: true
}, _6lr9456 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _6lr9457 = {
    id: "GR",
    displayName: "Griechenland",
    regionId: "039",
    hasTimeZones: true
}, _6lr9458 = {
    id: "KY",
    displayName: "Kaimaninseln",
    regionId: "029",
    hasTimeZones: true
}, _6lr9459 = {
    id: "NF",
    displayName: "Norfolkinsel",
    regionId: "053",
    hasTimeZones: true
}, _6lr9460 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _6lr9461 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _6lr9462 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _6lr9463 = {
    id: "VA",
    displayName: "Vatikanstadt",
    regionId: "039",
    hasTimeZones: true
}, _6lr9464 = {
    "2": "{0} und {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0} und {1}"
}, _6lr9465 = {
    "0": "heute",
    "1": "morgen",
    "2": "übermorgen",
    "-2": "vorgestern",
    "-1": "gestern"
}, _6lr9466 = {
    id: "AZ",
    displayName: "Aserbaidschan",
    regionId: "145",
    hasTimeZones: true
}, _6lr9467 = {
    id: "142",
    displayName: "Asien",
    hasTimeZones: false,
    parentRegionId: "001"
}, _6lr9468 = {
    id: "CI",
    displayName: "Côte d’Ivoire",
    regionId: "011",
    hasTimeZones: true
}, _6lr9469 = {
    id: "GW",
    displayName: "Guinea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _6lr9470 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _6lr9471 = {
    id: "NC",
    displayName: "Neukaledonien",
    regionId: "054",
    hasTimeZones: true
}, _6lr9472 = {
    id: "SA",
    displayName: "Saudi-Arabien",
    regionId: "145",
    hasTimeZones: true
}, _6lr9473 = {
    id: "TJ",
    displayName: "Tadschikistan",
    regionId: "143",
    hasTimeZones: true
}, _6lr9474 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _6lr9475 = {
    id: "002",
    displayName: "Afrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _6lr9476 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _6lr9477 = {
    id: "FK",
    displayName: "Falklandinseln",
    regionId: "005",
    hasTimeZones: true
}, _6lr9478 = {
    id: "CD",
    displayName: "Kongo-Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _6lr9479 = {
    id: "MH",
    displayName: "Marshallinseln",
    regionId: "057",
    hasTimeZones: true
}, _6lr9480 = {
    id: "PN",
    displayName: "Pitcairninseln",
    regionId: "061",
    hasTimeZones: true
}, _6lr9481 = {
    id: "BL",
    displayName: "St. Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _6lr9482 = {
    relative: _6lr9248
}, _6lr9483 = {
    id: "019",
    displayName: "Amerika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _6lr9484 = {
    id: "029",
    displayName: "Karibik",
    hasTimeZones: false,
    parentRegionId: "019"
}, _6lr9485 = {
    id: "PG",
    displayName: "Papua-Neuguinea",
    regionId: "054",
    hasTimeZones: true
}, _6lr9486 = {
    id: "MD",
    displayName: "Republik Moldau",
    regionId: "151",
    hasTimeZones: true
}, _6lr9487 = {
    d: "dd.MM.y – dd.MM.y G",
    M: "dd.MM.y – dd.MM.y G",
    y: "dd.MM.y – dd.MM.y G"
}, _6lr9488 = [ "Jan", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez" ], _6lr9489 = {
    "0": "diesen Donnerstag",
    "1": "nächsten Donnerstag",
    "-1": "letzten Donnerstag"
}, _6lr9490 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _6lr9491 = {
    id: "030",
    displayName: "Ostasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _6lr9492 = {
    id: "009",
    displayName: "Ozeanien",
    hasTimeZones: false,
    parentRegionId: "001"
}, _6lr9493 = {
    id: "034",
    displayName: "Südasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _6lr9494 = {
    id: "GQ",
    displayName: "Äquatorialguinea",
    regionId: "017",
    hasTimeZones: true
}, _6lr9495 = {
    id: "BN",
    displayName: "Brunei Darussalam",
    regionId: "035",
    hasTimeZones: true
}, _6lr9496 = {
    id: "CG",
    displayName: "Kongo-Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _6lr9497 = {
    id: "014",
    displayName: "Ostafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _6lr9498 = {
    id: "151",
    displayName: "Osteuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _6lr9499 = {
    id: "039",
    displayName: "Südeuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _6lr9500 = {
    id: "WF",
    displayName: "Wallis und Futuna",
    regionId: "061",
    hasTimeZones: true
}, _6lr9501 = {
    id: "145",
    displayName: "Westasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _6lr9502 = [ "Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag" ], _6lr9503 = {
    relative: _6lr9315
}, _6lr9504 = {
    relative: _6lr9316
}, _6lr9505 = {
    relative: _6lr9317
}, _6lr9506 = {
    id: "AS",
    displayName: "Amerikanisch-Samoa",
    regionId: "061",
    hasTimeZones: true
}, _6lr9507 = {
    id: "054",
    displayName: "Melanesien",
    hasTimeZones: false,
    parentRegionId: "009"
}, _6lr9508 = {
    id: "015",
    displayName: "Nordafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _6lr9509 = {
    id: "154",
    displayName: "Nordeuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _6lr9510 = {
    id: "MP",
    displayName: "Nördliche Marianen",
    regionId: "057",
    hasTimeZones: true
}, _6lr9511 = {
    id: "061",
    displayName: "Polynesien",
    hasTimeZones: false,
    parentRegionId: "009"
}, _6lr9512 = {
    id: "005",
    displayName: "Südamerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _6lr9513 = {
    id: "US",
    displayName: "Vereinigte Staaten",
    regionId: "021",
    hasTimeZones: true
}, _6lr9514 = {
    id: "011",
    displayName: "Westafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _6lr9515 = {
    id: "155",
    displayName: "Westeuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _6lr9516 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _6lr9517 = {
    id: "AG",
    displayName: "Antigua und Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _6lr9518 = {
    id: "GF",
    displayName: "Französisch-Guayana",
    regionId: "005",
    hasTimeZones: true
}, _6lr9519 = {
    id: "KN",
    displayName: "St. Kitts und Nevis",
    regionId: "029",
    hasTimeZones: true
}, _6lr9520 = {
    id: "035",
    displayName: "Südostasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _6lr9521 = {
    id: "TT",
    displayName: "Trinidad und Tobago",
    regionId: "029",
    hasTimeZones: true
}, _6lr9522 = {
    id: "053",
    displayName: "Australasien",
    hasTimeZones: false,
    parentRegionId: "009"
}, _6lr9523 = {
    id: "143",
    displayName: "Zentralasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _6lr9524 = {
    relative: _6lr9415
}, _6lr9525 = {
    relative: _6lr9416
}, _6lr9526 = {
    id: "013",
    displayName: "Mittelamerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _6lr9527 = {
    id: "ST",
    displayName: "São Tomé und Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _6lr9528 = {
    id: "CZ",
    displayName: "Tschechische Republik",
    regionId: "151",
    hasTimeZones: true
}, _6lr9529 = {
    id: "017",
    displayName: "Zentralafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _6lr9530 = {
    id: "PF",
    displayName: "Französisch-Polynesien",
    regionId: "061",
    hasTimeZones: true
}, _6lr9531 = {
    id: "SJ",
    displayName: "Svalbard und Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _6lr9532 = {
    id: "GB",
    displayName: "Vereinigtes Königreich",
    regionId: "154",
    hasTimeZones: true
}, _6lr9533 = {
    id: "BA",
    displayName: "Bosnien und Herzegowina",
    regionId: "039",
    hasTimeZones: true
}, _6lr9534 = {
    id: "DO",
    displayName: "Dominikanische Republik",
    regionId: "029",
    hasTimeZones: true
}, _6lr9535 = {
    id: "TF",
    displayName: "Französische Süd- und Antarktisgebiete",
    hasTimeZones: true
}, _6lr9536 = {
    id: "PM",
    displayName: "St. Pierre und Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _6lr9537 = {
    id: "TC",
    displayName: "Turks- und Caicosinseln",
    regionId: "029",
    hasTimeZones: true
}, _6lr9538 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _6lr9539 = {
    id: "VG",
    displayName: "Britische Jungferninseln",
    regionId: "029",
    hasTimeZones: true
}, _6lr9540 = {
    id: "018",
    displayName: "Südliches Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _6lr9541 = {
    future: _6lr9130,
    past: _6lr9146
}, _6lr9542 = {
    future: _6lr9131,
    past: _6lr9147
}, _6lr9543 = {
    future: _6lr9132,
    past: _6lr9148
}, _6lr9544 = {
    id: "IO",
    displayName: "Britisches Territorium im Indischen Ozean",
    hasTimeZones: true
}, _6lr9545 = {
    id: "021",
    displayName: "Nördliches Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _6lr9546 = [ "Jan.", "Feb.", "März", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez." ], _6lr9547 = {
    relative: _6lr9489
}, _6lr9548 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _6lr9549 = {
    id: "VI",
    displayName: "Amerikanische Jungferninseln",
    regionId: "029",
    hasTimeZones: true
}, _6lr9550 = {
    id: "AE",
    displayName: "Vereinigte Arabische Emirate",
    regionId: "145",
    hasTimeZones: true
}, _6lr9551 = {
    id: "CF",
    displayName: "Zentralafrikanische Republik",
    regionId: "017",
    hasTimeZones: true
}, _6lr9552 = {
    id: "MO",
    displayName: "Sonderverwaltungsregion Macau",
    regionId: "030",
    hasTimeZones: true
}, _6lr9553 = {
    id: "GS",
    displayName: "Südgeorgien und die Südlichen Sandwichinseln",
    hasTimeZones: true
}, _6lr9554 = {
    id: "HK",
    displayName: "Sonderverwaltungszone Hongkong",
    regionId: "030",
    hasTimeZones: true
}, _6lr9555 = {
    id: "VC",
    displayName: "St. Vincent und die Grenadinen",
    regionId: "029",
    hasTimeZones: true
}, _6lr9556 = {
    d: "E, d. – E, d. MMM y G",
    M: "E, d. MMM – E, d. MMM y G",
    y: "E, d. MMM y – E, d. MMM y G"
}, _6lr9557 = {
    id: "BQ",
    displayName: "Bonaire, Sint Eustatius und Saba",
    regionId: "029",
    hasTimeZones: true
}, _6lr9558 = {
    id: "PS",
    displayName: "Palästinensische Autonomiegebiete",
    regionId: "145",
    hasTimeZones: true
}, _6lr9559 = {
    d: "E, dd.MM.y – E, dd.MM.y G",
    M: "E, dd.MM.y – E, dd.MM.y G",
    y: "E, dd.MM.y – E, dd.MM.y G"
}, _6lr9560 = {
    future: _6lr9164,
    past: _6lr9172
}, _6lr9561 = {
    id: "057",
    displayName: "Mikronesisches Inselgebiet",
    hasTimeZones: false,
    parentRegionId: "009"
}, _6lr9562 = {
    future: _6lr9173,
    past: _6lr9188
}, _6lr9563 = {
    future: _6lr9174,
    past: _6lr9189
}, _6lr9564 = {
    future: _6lr9175,
    past: _6lr9190
}, _6lr9565 = {
    future: _6lr9176,
    past: _6lr9191
}, _6lr9566 = {
    future: _6lr9187,
    past: _6lr9197
}, _6lr9567 = [ undefined, "Ratte", "Büffel", "Tiger", "Hase", "Drache", "Schlange", "Pferd", "Ziege", "Affe", "Hahn", "Hund" ], _6lr9568 = {
    future: _6lr9192,
    past: _6lr9200
}, _6lr9569 = {
    future: _6lr9198,
    past: _6lr9204
}, _6lr9570 = {
    future: _6lr9199,
    past: _6lr9205
}, _6lr9571 = {
    future: _6lr9199,
    past: _6lr9206
}, _6lr9572 = {
    future: _6lr9199,
    past: _6lr9207
}, _6lr9573 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _6lr9574 = {
    future: _6lr9201,
    past: _6lr9208
}, _6lr9575 = {
    future: _6lr9202,
    past: _6lr9209
}, _6lr9576 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _6lr9577 = [ "Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember" ], _6lr9578 = {
    future: _6lr9210,
    past: _6lr9212
}, _6lr9579 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _6lr9580 = {
    future: _6lr9211,
    past: _6lr9216
}, _6lr9581 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _6lr9582 = {
    displayName: "Q",
    relativeTime: _6lr9541
}, _6lr9583 = {
    displayName: "Min.",
    relativeTime: _6lr9542
}, _6lr9584 = {
    displayName: "Sek.",
    relativeTime: _6lr9543
}, _6lr9585 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _6lr9586 = {
    abbreviated: _6lr92,
    narrow: [ "1", "2", "3", "4" ],
    wide: _6lr9232
}, _6lr9587 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _6lr9588 = {
    displayName: "Std.",
    relativeTime: _6lr9563
}, _6lr9589 = {
    displayName: "Min.",
    relativeTime: _6lr9564
}, _6lr9590 = {
    displayName: "Sek.",
    relativeTime: _6lr9565
}, _6lr9591 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _6lr9592 = {
    displayName: "Quart.",
    relativeTime: _6lr9569
}, _6lr9593 = {
    displayName: "Stunde",
    relativeTime: _6lr9574
}, _6lr9594 = {
    displayName: "Minute",
    relativeTime: _6lr9575
}, _6lr9595 = {
    midnight: "Mitternacht",
    am: "vorm.",
    pm: "nachm.",
    morning1: "Morgen",
    morning2: "Vormittag",
    afternoon1: "Mittag",
    afternoon2: "Nachmittag",
    evening1: "Abend",
    night1: "Nacht"
}, _6lr9596 = {
    midnight: "Mitternacht",
    am: "vm.",
    pm: "nm.",
    morning1: "morgens",
    morning2: "vormittags",
    afternoon1: "mittags",
    afternoon2: "nachmittags",
    evening1: "abends",
    night1: "nachts"
}, _6lr9597 = {
    displayName: "Sekunde",
    relative: [ "jetzt" ],
    relativeTime: _6lr9578
}, _6lr9598 = {
    midnight: "Mitternacht",
    am: "vorm.",
    pm: "nachm.",
    morning1: "morgens",
    morning2: "vormittags",
    afternoon1: "mittags",
    afternoon2: "nachmittags",
    evening1: "abends",
    night1: "nachts"
}, _6lr9599 = {
    decimal: ",",
    group: ".",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "·",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _6lr9600 = {
    symbols: _6lr9599
}, _6lr9601 = {
    displayName: "W",
    relative: _6lr9237,
    relativeTime: _6lr9560
}, _6lr9602 = {
    format: _6lr9474,
    numeric: _6lr93,
    standAlone: _6lr9474
}, _6lr9603 = {
    displayName: "J",
    relative: _6lr9235,
    relativeTime: _6lr9566
}, _6lr9604 = {
    displayName: "Jahr",
    relative: _6lr9235,
    relativeTime: _6lr9566
}, _6lr9605 = {
    displayName: "Woche",
    relative: _6lr9237,
    relativeTime: _6lr9568
}, _6lr9606 = {
    displayName: "M",
    relative: _6lr9242,
    relativeTime: _6lr9572
}, _6lr9607 = {
    displayName: "Monat",
    relative: _6lr9242,
    relativeTime: _6lr9570
}, _6lr9608 = {
    displayName: "Monat",
    relative: _6lr9242,
    relativeTime: _6lr9571
}, _6lr9609 = {
    displayName: "Tag",
    relative: _6lr9465,
    relativeTime: _6lr9562
}, _6lr9610 = {
    displayName: "Quartal",
    relative: _6lr9236,
    relativeTime: _6lr9580
}, _6lr9611 = {
    symbols: _6lr9599,
    digits: "renderSpelloutCardinal"
}, _6lr9612 = {
    abbreviated: _6lr9149,
    narrow: _6lr985,
    wide: _6lr9502,
    "short": _6lr9196
}, _6lr9613 = {
    symbols: _6lr9599,
    digits: "renderSpelloutCardinalFinancial"
}, _6lr9614 = {
    abbreviated: _6lr9490,
    narrow: _6lr9228,
    wide: _6lr9490
}, _6lr9615 = {
    abbreviated: _6lr9196,
    narrow: _6lr985,
    wide: _6lr9502,
    "short": _6lr9196
}, _6lr9616 = {
    abbreviated: _6lr9516,
    narrow: _6lr9516,
    wide: _6lr9516
}, _6lr9617 = {
    abbreviated: _6lr9488,
    narrow: _6lr9215,
    wide: _6lr9577
}, _6lr9618 = {
    format: _6lr9586,
    standAlone: _6lr9586
}, _6lr9619 = {
    format: _6lr9616
}, _6lr9620 = {
    abbreviated: _6lr9546,
    narrow: _6lr9215,
    wide: _6lr9577
}, _6lr9621 = {
    abbreviated: _6lr9576,
    narrow: _6lr9240,
    wide: _6lr9576
}, _6lr9622 = {
    abbreviated: _6lr9579,
    narrow: _6lr9228,
    wide: _6lr9579
}, _6lr9623 = {
    abbreviated: _6lr9581,
    narrow: _6lr9240,
    wide: _6lr9581
}, _6lr9624 = {
    abbreviated: _6lr9573,
    narrow: _6lr9228,
    wide: _6lr9591
}, _6lr9625 = {
    abbreviated: _6lr9585,
    narrow: _6lr9240,
    wide: _6lr9585
}, _6lr9626 = {
    abbreviated: _6lr9587,
    narrow: _6lr9228,
    wide: _6lr9587
}, _6lr9627 = {
    fullDate: "EEEE, d. MMMM U",
    longDate: "d. MMMM U",
    mediumDate: "dd.MM U",
    shortDate: "dd.MM.yy",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd.MM.yy HH:mm",
    mediumDateTime: "dd.MM U HH:mm:ss",
    longDateTime: "d. MMMM U HH:mm:ss z",
    fullDateTime: "EEEE, d. MMMM U HH:mm:ss zzzz"
}, _6lr9628 = {
    abbreviated: _6lr9567,
    narrow: _6lr9567,
    wide: _6lr9567
}, _6lr9629 = {
    format: _6lr9628
}, _6lr9630 = {
    fullDate: "EEEE, d. MMMM y G",
    longDate: "d. MMMM y G",
    mediumDate: "dd.MM.y G",
    shortDate: "dd.MM.yy GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd.MM.yy GGGGG, HH:mm",
    mediumDateTime: "dd.MM.y G, HH:mm:ss",
    longDateTime: "d. MMMM y G 'um' HH:mm:ss z",
    fullDateTime: "EEEE, d. MMMM y G 'um' HH:mm:ss zzzz"
}, _6lr9631 = {
    format: _6lr9615,
    standAlone: _6lr9612
}, _6lr9632 = {
    format: _6lr9614,
    standAlone: _6lr9614
}, _6lr9633 = {
    "1000": _6lr9125,
    "10000": _6lr9141,
    "100000": _6lr9153,
    "1000000": _6lr9126,
    "10000000": _6lr9142,
    "100000000": _6lr9154,
    "1000000000": _6lr9127,
    "10000000000": _6lr9143,
    "100000000000": _6lr9155,
    "1000000000000": _6lr9128,
    "10000000000000": _6lr9144,
    "100000000000000": _6lr9156
}, _6lr9634 = {
    d: "d",
    Ed: "E, d.",
    Gy: "U",
    GyMMM: "MMM U",
    GyMMMd: "d. MMM U",
    GyMMMEd: "E, d. MMM U",
    h: "h a",
    H: "HH 'Uhr'",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "d.M.",
    MEd: "E, d.M.",
    MMM: "LLL",
    MMMd: "d. MMM",
    MMMEd: "E, d. MMM",
    MMMMd: "d. MMMM",
    ms: "mm:ss",
    y: "U",
    yyyy: "U",
    yyyyM: "M.y",
    yyyyMd: "d.M.y",
    yyyyMEd: "E, d.M.y",
    yyyyMMM: "MMM U",
    yyyyMMMd: "d. MMM U",
    yyyyMMMEd: "E, d. MMM U",
    yyyyMMMM: "MMMM U",
    yyyyQQQ: "QQQ U",
    yyyyQQQQ: "QQQQ U",
    E: "ccc",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    yMd: "r-MM-dd"
}, _6lr9635 = {
    abbreviated: _6lr9595,
    narrow: _6lr9595,
    wide: _6lr9595
}, _6lr9636 = {
    abbreviated: _6lr9598,
    narrow: _6lr9596,
    wide: _6lr9598
}, _6lr9637 = {
    "1000": _6lr9157,
    "10000": _6lr9168,
    "100000": _6lr9181,
    "1000000": _6lr9158,
    "10000000": _6lr9169,
    "100000000": _6lr9182,
    "1000000000": _6lr9159,
    "10000000000": _6lr9170,
    "100000000000": _6lr9183,
    "1000000000000": _6lr9160,
    "10000000000000": _6lr9171,
    "100000000000000": _6lr9184
}, _6lr9638 = {
    d: "d",
    E: "ccc",
    Ed: "E, d.",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d. MMM y G",
    GyMMMEd: "E, d. MMM y G",
    h: "h a",
    H: "HH 'Uhr'",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "d.M.",
    MEd: "E, d.M.",
    MMM: "LLL",
    MMMd: "d. MMM",
    MMMEd: "E, d. MMM",
    MMMMd: "d. MMMM",
    ms: "mm:ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M.y GGGGG",
    yyyyMd: "d.M.y GGGGG",
    yyyyMEd: "E, d.M.y GGGGG",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d. MMM y G",
    yyyyMMMEd: "E, d. MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _6lr9639 = {
    "1000": _6lr9140,
    "10000": _6lr9150,
    "100000": _6lr9167,
    "1000000": _6lr9151,
    "10000000": _6lr9179,
    "100000000": _6lr9193,
    "1000000000": _6lr9177,
    "10000000000": _6lr9194,
    "100000000000": _6lr9203,
    "1000000000000": _6lr9152,
    "10000000000000": _6lr9180,
    "100000000000000": _6lr9195
}, _6lr9640 = {
    format: _6lr9620,
    standAlone: _6lr9617
}, _6lr9641 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _6lr9642 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _6lr9643 = {
    format: _6lr9624,
    standAlone: _6lr9624
}, _6lr9644 = {
    basic: _6lr9627,
    cldr: _6lr9634
}, _6lr9645 = {
    basic: _6lr9630,
    cldr: _6lr9638
}, _6lr9646 = {
    d: {
        d: "d–d"
    },
    h: _6lr910,
    H: {
        H: "HH–HH"
    },
    hm: _6lr9230,
    Hm: _6lr9129,
    hmv: _6lr9243,
    Hmv: _6lr9161,
    hv: _6lr984,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _6lr9165,
    MEd: _6lr9217,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _6lr9111,
    MMMEd: _6lr9218,
    y: {
        y: "U–U"
    },
    yM: _6lr9133,
    yMd: _6lr9417,
    yMEd: _6lr9548,
    yMMM: _6lr9134,
    yMMMd: _6lr9239,
    yMMMEd: _6lr9538,
    yMMMM: _6lr9166
}, _6lr9647 = {
    format: _6lr9636,
    standAlone: _6lr9635
}, _6lr9648 = {
    d: {
        d: "d.–d."
    },
    h: _6lr910,
    H: {
        H: "HH–HH 'Uhr'"
    },
    hm: _6lr9230,
    Hm: _6lr9129,
    hmv: _6lr9243,
    Hmv: _6lr9161,
    hv: _6lr984,
    Hv: {
        H: "HH–HH 'Uhr' v"
    },
    M: {
        M: "M.–M."
    },
    Md: _6lr9185,
    MEd: _6lr9231,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _6lr9145,
    MMMEd: _6lr9214,
    MMMM: {
        M: "LLLL–LLLL"
    },
    y: {
        y: "y–y G"
    },
    yM: _6lr9162,
    yMd: _6lr9487,
    yMEd: _6lr9559,
    yMMM: _6lr9163,
    yMMMd: _6lr9454,
    yMMMEd: _6lr9556,
    yMMMM: _6lr9186
}, _6lr9649 = {
    "long": _6lr9639,
    "short": _6lr9633,
    "default": "#,##0.###"
}, _6lr9650 = {
    beforeCurrency: _6lr9641,
    afterCurrency: _6lr9641
}, _6lr9651 = {
    "short": _6lr9637,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _6lr9650
}, _6lr9652 = {
    abbreviated: _6lr9642,
    narrow: _6lr9642,
    wide: _6lr9642
}, _6lr9653 = {
    format: _6lr9652
}, _6lr9654 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _6lr9649,
    currency: _6lr9651,
    percent: _6lr91
}, _6lr9655 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _6lr9656 = {
    dayParts: _6lr9619,
    days: _6lr9653,
    months: _6lr9653,
    years: _6lr9653,
    zodiacs: _6lr9629
}, _6lr9657 = {
    era: _6lr95,
    year: _6lr9604,
    "year-short": _6lr9604,
    "year-narrow": _6lr9603,
    quarter: _6lr9610,
    "quarter-short": _6lr9592,
    "quarter-narrow": _6lr9582,
    month: _6lr9607,
    "month-short": _6lr9608,
    "month-narrow": _6lr9606,
    week: _6lr9605,
    "week-short": _6lr9605,
    "week-narrow": _6lr9601,
    day: _6lr9609,
    "day-short": _6lr9609,
    "day-narrow": _6lr9609,
    weekday: _6lr911,
    dayperiod: _6lr926,
    hour: _6lr9593,
    "hour-short": _6lr9588,
    "hour-narrow": _6lr9588,
    minute: _6lr9594,
    "minute-short": _6lr9589,
    "minute-narrow": _6lr9583,
    second: _6lr9597,
    "second-short": _6lr9590,
    "second-narrow": _6lr9584,
    zone: _6lr96,
    sun: _6lr9503,
    "sun-short": _6lr9279,
    "sun-narrow": _6lr9279,
    mon: _6lr9482,
    "mon-short": _6lr9280,
    "mon-narrow": _6lr9280,
    tue: _6lr9524,
    "tue-short": _6lr9281,
    "tue-narrow": _6lr9281,
    wed: _6lr9525,
    "wed-short": _6lr9282,
    "wed-narrow": _6lr9282,
    thu: _6lr9547,
    "thu-short": _6lr9283,
    "thu-narrow": _6lr9283,
    fri: _6lr9504,
    "fri-short": _6lr9284,
    "fri-narrow": _6lr9284,
    sat: _6lr9505,
    "sat-short": _6lr9285,
    "sat-narrow": _6lr9285
}, _6lr9658 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _6lr9657
}, _6lr9659 = {
    dateFormats: _6lr9645,
    datePartsOrder: "dmy",
    dateIntervalFormats: _6lr9648,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _6lr9631,
    dayPeriods: _6lr9647,
    monthNames: _6lr9643,
    eraNames: _6lr9114,
    quarterNames: _6lr9618,
    fields: _6lr9657
}, _6lr9660 = {
    dateFormats: _6lr9644,
    datePartsOrder: "dmy",
    dateIntervalFormats: _6lr9646,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _6lr9631,
    dayPeriods: _6lr9647,
    cyclicNames: _6lr9656,
    monthNames: _6lr9632,
    monthPatterns: _6lr9602,
    quarterNames: _6lr9618,
    fields: _6lr9657
};

inter.id = "de";

inter.delimiters = {
    quotationStart: "„",
    quotationEnd: "“",
    alternateQuotationStart: "‚",
    alternateQuotationEnd: "‘"
};

inter.listPatterns = {
    "default": _6lr9464,
    unit: _6lr9464,
    unitNarrow: _6lr9414,
    unitShort: _6lr9414
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0}-fache Erdbeschleunigung",
                other: "{0}-fache Erdbeschleunigung"
            },
            accelerationMeterPerSecondSquared: _6lr9115,
            angleRevolution: {
                one: "{0} Umdrehung",
                other: "{0} Umdrehungen"
            },
            angleRadian: {
                one: "{0} Radiant",
                other: "{0} Radianten"
            },
            angleDegree: {
                one: "{0} Grad",
                other: "{0} Grad"
            },
            angleArcMinute: {
                one: "{0} Winkelminute",
                other: "{0} Winkelminuten"
            },
            angleArcSecond: {
                one: "{0} Winkelsekunde",
                other: "{0} Winkelsekunden"
            },
            areaSquareKilometer: {
                one: "{0} Quadratkilometer",
                other: "{0} Quadratkilometer"
            },
            areaHectare: {
                one: "{0} Hektar",
                other: "{0} Hektar"
            },
            areaSquareMeter: {
                one: "{0} Quadratmeter",
                other: "{0} Quadratmeter"
            },
            areaSquareCentimeter: {
                one: "{0} Quadratzentimeter",
                other: "{0} Quadratzentimeter"
            },
            areaSquareMile: {
                one: "{0} Quadratmeile",
                other: "{0} Quadratmeilen"
            },
            areaAcre: {
                one: "{0} Acre",
                other: "{0} Acres"
            },
            areaSquareYard: {
                one: "{0} Quadratyard",
                other: "{0} Quadratyards"
            },
            areaSquareFoot: {
                one: "{0} Quadratfuß",
                other: "{0} Quadratfuß"
            },
            areaSquareInch: {
                one: "{0} Quadratzoll",
                other: "{0} Quadratzoll"
            },
            concentrKarat: _6lr9136,
            consumptionLiterPerKilometer: {
                one: "{0} Liter pro Kilometer",
                other: "{0} Liter pro Kilometer"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} Liter auf 100 Kilometer",
                other: "{0} Liter auf 100 Kilometer"
            },
            consumptionMilePerGallon: {
                one: "{0} Meile pro Gallone",
                other: "{0} Meilen pro Gallone"
            },
            digitalTerabyte: {
                one: "{0} Terabyte",
                other: "{0} Terabytes"
            },
            digitalTerabit: {
                one: "{0} Terabit",
                other: "{0} Terabits"
            },
            digitalGigabyte: {
                one: "{0} Gigabyte",
                other: "{0} Gigabytes"
            },
            digitalGigabit: {
                one: "{0} Gigabit",
                other: "{0} Gigabits"
            },
            digitalMegabyte: {
                one: "{0} Megabyte",
                other: "{0} Megabytes"
            },
            digitalMegabit: {
                one: "{0} Megabit",
                other: "{0} Megabits"
            },
            digitalKilobyte: {
                one: "{0} Kilobyte",
                other: "{0} Kilobytes"
            },
            digitalKilobit: {
                one: "{0} Kilobit",
                other: "{0} Kilobits"
            },
            digitalByte: _6lr9135,
            digitalBit: _6lr9112,
            durationCentury: {
                one: "{0} Jahrhundert",
                other: "{0} Jahrhunderte"
            },
            durationYear: {
                one: "{0} Jahr",
                other: "{0} Jahre"
            },
            durationMonth: {
                one: "{0} Monat",
                other: "{0} Monate"
            },
            durationWeek: {
                one: "{0} Woche",
                other: "{0} Wochen"
            },
            durationDay: {
                one: "{0} Tag",
                other: "{0} Tage"
            },
            durationHour: {
                one: "{0} Stunde",
                other: "{0} Stunden"
            },
            durationMinute: {
                one: "{0} Minute",
                other: "{0} Minuten"
            },
            durationSecond: {
                one: "{0} Sekunde",
                other: "{0} Sekunden"
            },
            durationMillisecond: {
                one: "{0} Millisekunde",
                other: "{0} Millisekunden"
            },
            durationMicrosecond: {
                one: "{0} Mikrosekunde",
                other: "{0} Mikrosekunden"
            },
            durationNanosecond: {
                one: "{0} Nanosekunde",
                other: "{0} Nanosekunden"
            },
            electricAmpere: {
                one: "{0} Ampere",
                other: "{0} Ampere"
            },
            electricMilliampere: {
                one: "{0} Milliampere",
                other: "{0} Milliampere"
            },
            electricOhm: {
                one: "{0} Ohm",
                other: "{0} Ohm"
            },
            electricVolt: {
                one: "{0} Volt",
                other: "{0} Volt"
            },
            energyKilocalorie: {
                one: "{0} Kilokalorie",
                other: "{0} Kilokalorien"
            },
            energyCalorie: {
                one: "{0} Kalorie",
                other: "{0} Kalorien"
            },
            energyFoodcalorie: {
                one: "{0} Kilokalorien",
                other: "{0} Kilokalorien"
            },
            energyKilojoule: {
                one: "{0} Kilojoule",
                other: "{0} Kilojoule"
            },
            energyJoule: {
                one: "{0} Joule",
                other: "{0} Joule"
            },
            energyKilowattHour: {
                one: "{0} Kilowattstunde",
                other: "{0} Kilowattstunden"
            },
            frequencyGigahertz: {
                one: "{0} Gigahertz",
                other: "{0} Gigahertz"
            },
            frequencyMegahertz: {
                one: "{0} Megahertz",
                other: "{0} Megahertz"
            },
            frequencyKilohertz: {
                one: "{0} Kilohertz",
                other: "{0} Kilohertz"
            },
            frequencyHertz: {
                one: "{0} Hertz",
                other: "{0} Hertz"
            },
            lengthKilometer: {
                one: "{0} Kilometer",
                other: "{0} Kilometer"
            },
            lengthMeter: {
                one: "{0} Meter",
                other: "{0} Meter"
            },
            lengthDecimeter: {
                one: "{0} Dezimeter",
                other: "{0} Dezimeter"
            },
            lengthCentimeter: {
                one: "{0} Zentimeter",
                other: "{0} Zentimeter"
            },
            lengthMillimeter: {
                one: "{0} Millimeter",
                other: "{0} Millimeter"
            },
            lengthMicrometer: {
                one: "{0} Mikrometer",
                other: "{0} Mikrometer"
            },
            lengthNanometer: {
                one: "{0} Nanometer",
                other: "{0} Nanometer"
            },
            lengthPicometer: {
                one: "{0} Pikometer",
                other: "{0} Pikometer"
            },
            lengthMile: {
                one: "{0} Meile",
                other: "{0} Meilen"
            },
            lengthYard: {
                one: "{0} Yard",
                other: "{0} Yards"
            },
            lengthFoot: {
                one: "{0} Fuß",
                other: "{0} Fuß"
            },
            lengthInch: {
                one: "{0} Zoll",
                other: "{0} Zoll"
            },
            lengthParsec: {
                one: "{0} Parsec",
                other: "{0} Parsec"
            },
            lengthLightYear: {
                one: "{0} Lichtjahr",
                other: "{0} Lichtjahre"
            },
            lengthAstronomicalUnit: {
                one: "{0} AE",
                other: "{0} AE"
            },
            lengthFurlong: {
                one: "{0} Furlong",
                other: "{0} Furlong"
            },
            lengthFathom: {
                one: "{0} Faden",
                other: "{0} Faden"
            },
            lengthNauticalMile: {
                one: "{0} Seemeile",
                other: "{0} Seemeilen"
            },
            lengthMileScandinavian: {
                one: "{0} skandinavische Meile",
                other: "{0} skandinavische Meilen"
            },
            lightLux: {
                one: "{0} Lux",
                other: "{0} Lux"
            },
            massMetricTon: {
                one: "{0} Tonne",
                other: "{0} Tonnen"
            },
            massKilogram: {
                one: "{0} Kilogramm",
                other: "{0} Kilogramm"
            },
            massGram: {
                one: "{0} Gramm",
                other: "{0} Gramm"
            },
            massMilligram: {
                one: "{0} Milligramm",
                other: "{0} Milligramm"
            },
            massMicrogram: {
                one: "{0} Mikrogramm",
                other: "{0} Mikrogramm"
            },
            massTon: {
                one: "{0} Short Ton",
                other: "{0} Short Tons"
            },
            massStone: {
                one: "{0} Stone",
                other: "{0} Stones"
            },
            massPound: {
                one: "{0} Pfund",
                other: "{0} Pfund"
            },
            massOunce: {
                one: "{0} Unze",
                other: "{0} Unzen"
            },
            massOunceTroy: {
                one: "{0} Feinunze",
                other: "{0} Feinunzen"
            },
            massCarat: _6lr9136,
            powerGigawatt: {
                one: "{0} Gigawatt",
                other: "{0} Gigawatt"
            },
            powerMegawatt: {
                one: "{0} Megawatt",
                other: "{0} Megawatt"
            },
            powerKilowatt: {
                one: "{0} Kilowatt",
                other: "{0} Kilowatt"
            },
            powerWatt: {
                one: "{0} Watt",
                other: "{0} Watt"
            },
            powerMilliwatt: {
                one: "{0} Milliwatt",
                other: "{0} Milliwatt"
            },
            powerHorsepower: {
                one: "{0} Pferdestärke",
                other: "{0} Pferdestärken"
            },
            pressureHectopascal: {
                one: "{0} Hektopascal",
                other: "{0} Hektopascal"
            },
            pressureMillimeterOfMercury: {
                one: "{0} Millimeter Quecksilbersäule",
                other: "{0} Millimeter Quecksilbersäule"
            },
            pressurePoundPerSquareInch: {
                one: "{0} Pfund pro Quadratzoll",
                other: "{0} Pfund pro Quadratzoll"
            },
            pressureInchHg: {
                one: "{0} Zoll Quecksilbersäule",
                other: "{0} Zoll Quecksilbersäule"
            },
            pressureMillibar: {
                one: "{0} Millibar",
                other: "{0} Millibar"
            },
            speedKilometerPerHour: {
                one: "{0} Kilometer pro Stunde",
                other: "{0} Kilometer pro Stunde"
            },
            speedMeterPerSecond: {
                one: "{0} Meter pro Sekunde",
                other: "{0} Meter pro Sekunde"
            },
            speedMilePerHour: {
                one: "{0} Meile pro Stunde",
                other: "{0} Meilen pro Stunde"
            },
            speedKnot: {
                one: "{0} Knoten",
                other: "{0} Knoten"
            },
            temperatureGeneric: _6lr97,
            temperatureCelsius: {
                one: "{0} Grad Celsius",
                other: "{0} Grad Celsius"
            },
            temperatureFahrenheit: {
                one: "{0} Grad Fahrenheit",
                other: "{0} Grad Fahrenheit"
            },
            temperatureKelvin: {
                one: "{0} Kelvin",
                other: "{0} Kelvin"
            },
            volumeCubicKilometer: {
                one: "{0} Kubikkilometer",
                other: "{0} Kubikkilometer"
            },
            volumeCubicMeter: {
                one: "{0} Kubikmeter",
                other: "{0} Kubikmeter"
            },
            volumeCubicCentimeter: {
                one: "{0} Kubikzentimeter",
                other: "{0} Kubikzentimeter"
            },
            volumeCubicMile: {
                one: "{0} Kubikmeile",
                other: "{0} Kubikmeilen"
            },
            volumeCubicYard: {
                one: "{0} Kubikyard",
                other: "{0} Kubikyards"
            },
            volumeCubicFoot: {
                one: "{0} Kubikfuß",
                other: "{0} Kubikfuß"
            },
            volumeCubicInch: {
                one: "{0} Kubikzoll",
                other: "{0} Kubikzoll"
            },
            volumeMegaliter: {
                one: "{0} Megaliter",
                other: "{0} Megaliter"
            },
            volumeHectoliter: {
                one: "{0} Hektoliter",
                other: "{0} Hektoliter"
            },
            volumeLiter: {
                one: "{0} Liter",
                other: "{0} Liter"
            },
            volumeDeciliter: {
                one: "{0} Deziliter",
                other: "{0} Deziliter"
            },
            volumeCentiliter: {
                one: "{0} Zentiliter",
                other: "{0} Zentiliter"
            },
            volumeMilliliter: {
                one: "{0} Milliliter",
                other: "{0} Milliliter"
            },
            volumePintMetric: {
                one: "{0} metrisches Pint",
                other: "{0} metrische Pints"
            },
            volumeCupMetric: {
                one: "{0} Tasse",
                other: "{0} Tassen"
            },
            volumeAcreFoot: {
                one: "{0} Acre-Foot",
                other: "{0} Acre-Feet"
            },
            volumeBushel: {
                one: "{0} Bushel",
                other: "{0} Bushel"
            },
            volumeGallon: {
                one: "{0} Gallone",
                other: "{0} Gallonen"
            },
            volumeQuart: {
                one: "{0} Quart",
                other: "{0} Quart"
            },
            volumePint: {
                one: "{0} Pint",
                other: "{0} Pints"
            },
            volumeCup: _6lr9113,
            volumeFluidOunce: {
                one: "{0} Flüssigunze",
                other: "{0} Flüssigunzen"
            },
            volumeTablespoon: {
                one: "{0} Esslöffel",
                other: "{0} Esslöffel"
            },
            volumeTeaspoon: {
                one: "{0} Teelöffel",
                other: "{0} Teelöffel"
            }
        },
        compoundUnit: {
            per: "{0} pro {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: _6lr913,
            accelerationMeterPerSecondSquared: _6lr9115,
            angleRevolution: {
                one: "{0} Umdr.",
                other: "{0} Umdr."
            },
            angleRadian: _6lr986,
            angleDegree: _6lr97,
            angleArcMinute: _6lr98,
            angleArcSecond: _6lr99,
            areaSquareKilometer: _6lr987,
            areaHectare: _6lr927,
            areaSquareMeter: _6lr928,
            areaSquareCentimeter: _6lr988,
            areaSquareMile: _6lr989,
            areaAcre: _6lr929,
            areaSquareYard: _6lr990,
            areaSquareFoot: _6lr991,
            areaSquareInch: _6lr992,
            concentrKarat: _6lr930,
            consumptionLiterPerKilometer: _6lr9116,
            "consumptionLiterPer-100kilometers": _6lr9178,
            consumptionMilePerGallon: _6lr993,
            digitalTerabyte: _6lr931,
            digitalTerabit: _6lr932,
            digitalGigabyte: _6lr933,
            digitalGigabit: _6lr934,
            digitalMegabyte: _6lr935,
            digitalMegabit: _6lr936,
            digitalKilobyte: _6lr937,
            digitalKilobit: _6lr938,
            digitalByte: _6lr9135,
            digitalBit: _6lr9112,
            durationCentury: {
                one: "{0} Jh.",
                other: "{0} Jh."
            },
            durationYear: _6lr914,
            durationMonth: {
                one: "{0} Mon.",
                other: "{0} Mon."
            },
            durationWeek: {
                one: "{0} Wo.",
                other: "{0} Wo."
            },
            durationDay: {
                one: "{0} Tg.",
                other: "{0} Tg."
            },
            durationHour: _6lr9117,
            durationMinute: _6lr9118,
            durationSecond: {
                one: "{0} Sek.",
                other: "{0} Sek."
            },
            durationMillisecond: _6lr939,
            durationMicrosecond: _6lr940,
            durationNanosecond: _6lr941,
            electricAmpere: _6lr915,
            electricMilliampere: _6lr942,
            electricOhm: _6lr916,
            electricVolt: _6lr917,
            energyKilocalorie: _6lr9119,
            energyCalorie: _6lr994,
            energyFoodcalorie: _6lr9120,
            energyKilojoule: _6lr943,
            energyJoule: _6lr918,
            energyKilowattHour: _6lr995,
            frequencyGigahertz: _6lr996,
            frequencyMegahertz: _6lr997,
            frequencyKilohertz: _6lr998,
            frequencyHertz: _6lr944,
            lengthKilometer: _6lr945,
            lengthMeter: _6lr919,
            lengthDecimeter: _6lr946,
            lengthCentimeter: _6lr947,
            lengthMillimeter: _6lr948,
            lengthMicrometer: _6lr949,
            lengthNanometer: _6lr950,
            lengthPicometer: _6lr951,
            lengthMile: _6lr952,
            lengthYard: _6lr953,
            lengthFoot: _6lr954,
            lengthInch: _6lr955,
            lengthParsec: _6lr956,
            lengthLightYear: {
                one: "{0} Lj",
                other: "{0} Lj"
            },
            lengthAstronomicalUnit: {
                one: "{0} AE",
                other: "{0} AE"
            },
            lengthFurlong: _6lr999,
            lengthFathom: _6lr957,
            lengthNauticalMile: _6lr958,
            lengthMileScandinavian: _6lr9100,
            lightLux: _6lr959,
            massMetricTon: _6lr920,
            massKilogram: _6lr960,
            massGram: _6lr921,
            massMilligram: _6lr961,
            massMicrogram: _6lr962,
            massTon: _6lr963,
            massStone: _6lr964,
            massPound: _6lr965,
            massOunce: _6lr966,
            massOunceTroy: {
                one: "{0} oz.tr.",
                other: "{0} oz.tr."
            },
            massCarat: _6lr967,
            powerGigawatt: _6lr968,
            powerMegawatt: _6lr969,
            powerKilowatt: _6lr970,
            powerWatt: _6lr922,
            powerMilliwatt: _6lr971,
            powerHorsepower: _6lr972,
            pressureHectopascal: _6lr9101,
            pressureMillimeterOfMercury: _6lr9137,
            pressurePoundPerSquareInch: _6lr9102,
            pressureInchHg: _6lr9121,
            pressureMillibar: _6lr9122,
            speedKilometerPerHour: _6lr9123,
            speedMeterPerSecond: _6lr9103,
            speedMilePerHour: _6lr9124,
            speedKnot: {
                one: "{0} kn",
                other: "{0} kn"
            },
            temperatureGeneric: _6lr97,
            temperatureCelsius: {
                one: "{0} °C",
                other: "{0} °C"
            },
            temperatureFahrenheit: _6lr923,
            temperatureKelvin: _6lr924,
            volumeCubicKilometer: _6lr9104,
            volumeCubicMeter: _6lr973,
            volumeCubicCentimeter: _6lr9105,
            volumeCubicMile: _6lr9106,
            volumeCubicYard: _6lr9107,
            volumeCubicFoot: _6lr9108,
            volumeCubicInch: _6lr9109,
            volumeMegaliter: _6lr974,
            volumeHectoliter: _6lr975,
            volumeLiter: _6lr925,
            volumeDeciliter: _6lr976,
            volumeCentiliter: _6lr977,
            volumeMilliliter: _6lr978,
            volumePintMetric: {
                one: "{0} mpt",
                other: "{0} mpt"
            },
            volumeCupMetric: {
                one: "{0} mc",
                other: "{0} mc"
            },
            volumeAcreFoot: _6lr9138,
            volumeBushel: _6lr979,
            volumeGallon: _6lr9110,
            volumeQuart: _6lr980,
            volumePint: _6lr981,
            volumeCup: _6lr9113,
            volumeFluidOunce: _6lr9139,
            volumeTablespoon: _6lr982,
            volumeTeaspoon: _6lr983,
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: _6lr913,
            accelerationMeterPerSecondSquared: _6lr9115,
            angleRadian: _6lr986,
            angleDegree: _6lr97,
            angleArcMinute: _6lr98,
            angleArcSecond: _6lr99,
            areaSquareKilometer: _6lr987,
            areaHectare: _6lr927,
            areaSquareMeter: _6lr928,
            areaSquareCentimeter: _6lr988,
            areaSquareMile: _6lr989,
            areaAcre: _6lr929,
            areaSquareYard: _6lr990,
            areaSquareFoot: _6lr991,
            areaSquareInch: _6lr992,
            concentrKarat: _6lr930,
            consumptionLiterPerKilometer: _6lr9116,
            "consumptionLiterPer-100kilometers": _6lr9178,
            consumptionMilePerGallon: _6lr993,
            digitalTerabyte: _6lr931,
            digitalTerabit: _6lr932,
            digitalGigabyte: _6lr933,
            digitalGigabit: _6lr934,
            digitalMegabyte: _6lr935,
            digitalMegabit: _6lr936,
            digitalKilobyte: _6lr937,
            digitalKilobit: _6lr938,
            digitalByte: _6lr9135,
            digitalBit: _6lr9112,
            durationCentury: {
                one: "{0} Jahrh.",
                other: "{0} Jahrh."
            },
            durationYear: _6lr914,
            durationMonth: {
                one: "{0} M",
                other: "{0} M"
            },
            durationWeek: _6lr922,
            durationDay: {
                one: "{0} T",
                other: "{0} T"
            },
            durationHour: _6lr9117,
            durationMinute: _6lr9118,
            durationSecond: {
                one: "{0} s",
                other: "{0} s"
            },
            durationMillisecond: _6lr939,
            durationMicrosecond: _6lr940,
            durationNanosecond: _6lr941,
            electricAmpere: _6lr915,
            electricMilliampere: _6lr942,
            electricOhm: _6lr916,
            electricVolt: _6lr917,
            energyKilocalorie: _6lr9119,
            energyCalorie: _6lr994,
            energyFoodcalorie: _6lr9120,
            energyKilojoule: _6lr943,
            energyJoule: _6lr918,
            energyKilowattHour: _6lr995,
            frequencyGigahertz: _6lr996,
            frequencyMegahertz: _6lr997,
            frequencyKilohertz: _6lr998,
            frequencyHertz: _6lr944,
            lengthKilometer: _6lr945,
            lengthMeter: _6lr919,
            lengthDecimeter: _6lr946,
            lengthCentimeter: _6lr947,
            lengthMillimeter: _6lr948,
            lengthMicrometer: _6lr949,
            lengthNanometer: _6lr950,
            lengthPicometer: _6lr951,
            lengthMile: _6lr952,
            lengthYard: _6lr953,
            lengthFoot: _6lr954,
            lengthInch: _6lr955,
            lengthParsec: _6lr956,
            lengthLightYear: {
                one: "{0} ly",
                other: "{0} ly"
            },
            lengthAstronomicalUnit: {
                one: "{0} AE",
                other: "{0} AE"
            },
            lengthFurlong: _6lr999,
            lengthFathom: _6lr957,
            lengthNauticalMile: _6lr958,
            lengthMileScandinavian: _6lr9100,
            lightLux: _6lr959,
            massMetricTon: _6lr920,
            massKilogram: _6lr960,
            massGram: _6lr921,
            massMilligram: _6lr961,
            massMicrogram: _6lr962,
            massTon: _6lr963,
            massStone: _6lr964,
            massPound: _6lr965,
            massOunce: _6lr966,
            massOunceTroy: {
                one: "{0} oz.tr.",
                other: "{0} oz.tr."
            },
            massCarat: _6lr967,
            powerGigawatt: _6lr968,
            powerMegawatt: _6lr969,
            powerKilowatt: _6lr970,
            powerWatt: _6lr922,
            powerMilliwatt: _6lr971,
            powerHorsepower: _6lr972,
            pressureHectopascal: _6lr9101,
            pressureMillimeterOfMercury: _6lr9137,
            pressurePoundPerSquareInch: _6lr9102,
            pressureInchHg: _6lr9121,
            pressureMillibar: _6lr9122,
            speedKilometerPerHour: _6lr9123,
            speedMeterPerSecond: _6lr9103,
            speedMilePerHour: _6lr9124,
            temperatureCelsius: _6lr97,
            temperatureFahrenheit: _6lr923,
            temperatureKelvin: _6lr924,
            volumeCubicKilometer: _6lr9104,
            volumeCubicMeter: _6lr973,
            volumeCubicCentimeter: _6lr9105,
            volumeCubicMile: _6lr9106,
            volumeCubicYard: _6lr9107,
            volumeCubicFoot: _6lr9108,
            volumeCubicInch: _6lr9109,
            volumeMegaliter: _6lr974,
            volumeHectoliter: _6lr975,
            volumeLiter: _6lr925,
            volumeDeciliter: _6lr976,
            volumeCentiliter: _6lr977,
            volumeMilliliter: _6lr978,
            volumeAcreFoot: _6lr9138,
            volumeBushel: _6lr979,
            volumeGallon: _6lr9110,
            volumeQuart: _6lr980,
            volumePint: _6lr981,
            volumeCup: _6lr9113,
            volumeFluidOunce: _6lr9139,
            volumeTablespoon: _6lr982,
            volumeTeaspoon: _6lr983
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "{0} Zeit",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} Sommerzeit",
        standard: "{0} Normalzeit"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "ä", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "ö", "p", "q", "r", "s", "ß", "t", "u", "ü", "v", "w", "x", "y", "z" ],
        auxiliary: [ "á", "à", "ă", "â", "å", "ã", "ā", "æ", "ç", "é", "è", "ĕ", "ê", "ë", "ē", "ğ", "í", "ì", "ĭ", "î", "ï", "İ", "ī", "ı", "ñ", "ó", "ò", "ŏ", "ô", "ø", "ō", "œ", "ş", "ú", "ù", "ŭ", "û", "ū", "ÿ" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ],
        punctuation: [ "\\-", "‐", "–", "—", ",", ";", "\\:", "!", "?", ".", "…", "'", "‘", "‚", '"', "“", "„", "«", "»", "(", ")", "\\[", "\\]", "\\{", "\\}", "§", "@", "*", "/", "\\&", "#" ]
    },
    ellipsis: {
        "final": "{0} …",
        initial: "… {0}",
        medial: "{0} … {1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _6lr9599,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _6lr9654,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _6lr9654,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _6lr9599,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _6lr9599,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _6lr9599,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _6lr9599,
        digits: "renderEthiopic"
    },
    finance: _6lr9600,
    fullwide: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _6lr9599,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _6lr9599,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _6lr9599,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _6lr9599,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _6lr9611,
    hansfin: _6lr9613,
    hant: _6lr9611,
    hantfin: _6lr9613,
    hebr: {
        symbols: _6lr9599,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _6lr9599,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _6lr9611,
    jpanfin: _6lr9613,
    kali: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _6lr9599,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _6lr9599,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _6lr9599,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _6lr9599,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _6lr9599,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _6lr9599,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _6lr9599,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _6lr9599,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _6lr9600,
    nkoo: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _6lr9599,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _6lr9599,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _6lr9599,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _6lr9599,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _6lr9599,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _6lr9599,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _6lr9600,
    vaii: {
        symbols: _6lr9599,
        formats: _6lr9654,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _6lr9599,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _6lr9645,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6lr9648,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6lr9631,
        dayPeriods: _6lr9647,
        monthNames: _6lr9640,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _6lr9618,
        fields: _6lr9657
    },
    chinese: _6lr9660,
    coptic: {
        dateFormats: _6lr9645,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6lr9648,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6lr9631,
        dayPeriods: _6lr9647,
        monthNames: {
            format: _6lr9623,
            standAlone: _6lr9623
        },
        eraNames: _6lr9219,
        quarterNames: _6lr9618,
        fields: _6lr9657
    },
    dangi: _6lr9660,
    ethioaa: _6lr9658,
    ethiopic: {
        dateFormats: _6lr9645,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6lr9648,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6lr9631,
        dayPeriods: _6lr9647,
        monthNames: {
            format: _6lr9625,
            standAlone: _6lr9625
        },
        eraNames: _6lr9219,
        quarterNames: _6lr9618,
        fields: _6lr9657
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d. MMMM y",
                longDate: "d. MMMM y",
                mediumDate: "dd.MM.y",
                shortDate: "dd.MM.yy",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "dd.MM.yy, HH:mm",
                mediumDateTime: "dd.MM.y, HH:mm:ss",
                longDateTime: "d. MMMM y 'um' HH:mm:ss z",
                fullDateTime: "EEEE, d. MMMM y 'um' HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E, d.",
                Ehm: "E h:mm a",
                EHm: "E, HH:mm",
                Ehms: "E, h:mm:ss a",
                EHms: "E, HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d. MMM y G",
                GyMMMEd: "E, d. MMM y G",
                h: "h a",
                H: "HH 'Uhr'",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "d.M.",
                MEd: "E, d.M.",
                MMd: "d.MM.",
                MMdd: "dd.MM.",
                MMM: "LLL",
                MMMd: "d. MMM",
                MMMEd: "E, d. MMM",
                MMMMd: "d. MMMM",
                MMMMEd: "E, d. MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "M.y",
                yMd: "d.M.y",
                yMEd: "E, d.M.y",
                yMM: "MM.y",
                yMMdd: "dd.MM.y",
                yMMM: "MMM y",
                yMMMd: "d. MMM y",
                yMMMEd: "E, d. MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d.–d."
            },
            h: _6lr910,
            H: {
                H: "HH–HH 'Uhr'"
            },
            hm: _6lr9230,
            Hm: {
                H: "HH:mm–HH:mm 'Uhr'",
                m: "HH:mm–HH:mm 'Uhr'"
            },
            hmv: _6lr9243,
            Hmv: {
                H: "HH:mm–HH:mm 'Uhr' v",
                m: "HH:mm–HH:mm 'Uhr' v"
            },
            hv: _6lr984,
            Hv: {
                H: "HH–HH 'Uhr' v"
            },
            M: {
                M: "M.–M."
            },
            Md: _6lr9185,
            MEd: _6lr9231,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _6lr9145,
            MMMEd: _6lr9214,
            MMMM: {
                M: "LLLL–LLLL"
            },
            y: {
                y: "y–y"
            },
            yM: {
                M: "MM.y – MM.y",
                y: "MM.y – MM.y"
            },
            yMd: {
                d: "dd.MM.y – dd.MM.y",
                M: "dd.MM.y – dd.MM.y",
                y: "dd.MM.y – dd.MM.y"
            },
            yMEd: {
                d: "E, dd.MM.y – E, dd.MM.y",
                M: "E, dd.MM.y – E, dd.MM.y",
                y: "E, dd.MM.y – E, dd.MM.y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "d.–d. MMM y",
                M: "d. MMM – d. MMM y",
                y: "d. MMM y – d. MMM y"
            },
            yMMMEd: {
                d: "E, d. – E, d. MMM y",
                M: "E, d. MMM – E, d. MMM y",
                y: "E, d. MMM y – E, d. MMM y"
            },
            yMMMM: {
                M: "MMMM–MMMM y",
                y: "MMMM y – MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6lr9631,
        dayPeriods: _6lr9647,
        monthNames: _6lr9640,
        eraNames: {
            wide: _6lr94,
            abbreviated: _6lr94
        },
        quarterNames: _6lr9618,
        fields: _6lr9657
    },
    hebrew: {
        dateFormats: _6lr9645,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6lr9648,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6lr9631,
        dayPeriods: _6lr9647,
        monthNames: {
            format: _6lr9621,
            standAlone: _6lr9621
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _6lr9618,
        fields: _6lr9657
    },
    indian: {
        dateFormats: _6lr9645,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6lr9648,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6lr9631,
        dayPeriods: _6lr9647,
        monthNames: {
            format: _6lr9626,
            standAlone: _6lr9626
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _6lr9618,
        fields: _6lr9657
    },
    islamic: _6lr9659,
    "islamic-umalqura": _6lr9659,
    "islamic-tbla": _6lr9659,
    "islamic-civil": _6lr9659,
    "islamic-rgsa": _6lr9659,
    iso8601: _6lr9658,
    japanese: {
        dateFormats: _6lr9645,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6lr9648,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6lr9631,
        dayPeriods: _6lr9647,
        monthNames: _6lr9640,
        eraNames: {
            wide: _6lr9655,
            abbreviated: _6lr9655
        },
        quarterNames: _6lr9618,
        fields: _6lr9657
    },
    persian: {
        dateFormats: _6lr9645,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6lr9648,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6lr9631,
        dayPeriods: _6lr9647,
        monthNames: {
            format: _6lr9622,
            standAlone: _6lr9622
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _6lr9618,
        fields: _6lr9657
    },
    roc: {
        dateFormats: _6lr9645,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6lr9648,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6lr9631,
        dayPeriods: _6lr9647,
        monthNames: _6lr9640,
        eraNames: {
            wide: _6lr912,
            abbreviated: _6lr912
        },
        quarterNames: _6lr9618,
        fields: _6lr9657
    },
    islamicc: _6lr9658
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length;
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 1 && v === 0) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutNumbering(-n);
    if (isFractional && n > 1) return this.renderSpelloutNumbering(Math.floor(n)) + " Komma " + this.renderSpelloutNumbering(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e15)) + " Billiarden" + (n === 2e15 ? "" : " " + this.renderSpelloutNumbering(n % 1e15));
    if (n >= 1e15) return "eine Billiarde" + (n === 1e15 ? "" : " " + this.renderSpelloutNumbering(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e12)) + " Billionen" + (n === 2e12 ? "" : " " + this.renderSpelloutNumbering(n % 1e12));
    if (n >= 1e12) return "eine Billion" + (n === 1e12 ? "" : " " + this.renderSpelloutNumbering(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e9)) + " Milliarden" + (n === 2e9 ? "" : " " + this.renderSpelloutNumbering(n % 1e9));
    if (n >= 1e9) return "eine Milliarde" + (n === 1e9 ? "" : " " + this.renderSpelloutNumbering(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e6)) + " Millionen" + (n === 2e6 ? "" : " " + this.renderSpelloutNumbering(n % 1e6));
    if (n >= 1e6) return "eine Million" + (n === 1e6 ? "" : " " + this.renderSpelloutNumbering(n % 1e6));
    if (n >= 1e3) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e3)) + "­tausend" + (n === 1e3 ? "" : "­" + this.renderSpelloutNumbering(n % 1e3));
    if (n >= 100) return this.renderSpelloutCardinalMasculine(Math.floor(n / 100)) + "­hundert" + (n === 100 ? "" : "­" + this.renderSpelloutNumbering(n % 100));
    if (n >= 90) return (n === 90 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + "­und­") + "neunzig";
    if (n >= 80) return (n === 80 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + "­und­") + "achtzig";
    if (n >= 70) return (n === 70 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + "­und­") + "siebzig";
    if (n >= 60) return (n === 60 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + "­und­") + "sechzig";
    if (n >= 50) return (n === 50 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + "­und­") + "fünfzig";
    if (n >= 40) return (n === 40 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + "­und­") + "vierzig";
    if (n >= 30) return (n === 30 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + "­und­") + "dreißig";
    if (n >= 20) return (n === 20 ? "" : this.renderSpelloutCardinalMasculine(n % 10) + "­und­") + "zwanzig";
    if (n >= 18) return this.renderSpelloutNumbering(n % 10) + "zehn";
    if (n >= 17) return "siebzehn";
    if (n >= 16) return "sechzehn";
    if (n >= 13) return this.renderSpelloutNumbering(n % 10) + "zehn";
    if (n >= 12) return "zwölf";
    if (n >= 11) return "elf";
    if (n >= 10) return "zehn";
    if (n >= 9) return "neun";
    if (n >= 8) return "acht";
    if (n >= 7) return "sieben";
    if (n >= 6) return "sechs";
    if (n >= 5) return "fünf";
    if (n >= 4) return "vier";
    if (n >= 3) return "drei";
    if (n >= 2) return "zwei";
    if (n >= 1) return "eins";
    if (n >= 0) return "null";
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderSpelloutCardinalFeminine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalFeminine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalFeminine(Math.floor(n)) + " Komma " + this.renderSpelloutCardinalFeminine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e15)) + " Billiarden" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e15));
    if (n >= 1e15) return "eine Billiarde" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e12)) + " Billionen" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e12));
    if (n >= 1e12) return "eine Billion" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e9)) + " Milliarden" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e9));
    if (n >= 1e9) return "eine Milliarde" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e6)) + " Millionen" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e6));
    if (n >= 1e6) return "eine Million" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e6));
    if (n >= 1e3) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e3)) + "­tausend" + (n === 1e3 ? "" : "­" + this.renderSpelloutCardinalFeminine(n % 1e3));
    if (n >= 100) return this.renderSpelloutCardinalMasculine(Math.floor(n / 100)) + "­hundert" + (n === 100 ? "" : "­" + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 2) return this.renderSpelloutNumbering(n);
    if (n >= 1) return "eine";
    if (n >= 0) return "null";
};

inter.renderSpelloutCardinalMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculine(Math.floor(n)) + " Komma " + this.renderSpelloutCardinalMasculine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e15)) + " Billiarden" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 1e15) return "eine Billiarde" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e12)) + " Billionen" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 1e12) return "eine Billion" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e9)) + " Milliarden" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 1e9) return "eine Milliarde" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e6)) + " Millionen" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 1e6) return "eine Million" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 1e3) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e3)) + "­tausend" + (n === 1e3 ? "" : "­" + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 100) return this.renderSpelloutCardinalMasculine(Math.floor(n / 100)) + "­hundert" + (n === 100 ? "" : "­" + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 2) return this.renderSpelloutNumbering(n);
    if (n >= 1) return "ein";
    if (n >= 0) return "null";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 41), P.timeZones.slice(42, 50), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mexiko-Stadt",
    countryId: "MX"
}, P.timeZones.slice(51, 54), {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Osterinsel",
    countryId: "CL"
}, P.timeZones.slice(54, 62), {
    id: "America/Bogota",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Bogotá",
    countryId: "CO"
}, {
    id: "America/Cancun",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Cancún",
    countryId: "MX"
}, P.timeZones.slice(65, 69), {
    id: "America/Havana",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Havanna",
    countryId: "CU"
}, P.timeZones.slice(70, 72), {
    id: "America/Jamaica",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Jamaika",
    countryId: "JM"
}, {
    id: "America/Cayman",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Kaimaninseln",
    countryId: "KY"
}, P.timeZones.slice(73, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones[91], {
    id: "Atlantic/Bermuda",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Bermudas",
    countryId: "BM"
}, P.timeZones.slice(93, 98), {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 117), {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint-Barthélemy",
    countryId: "BL"
}, P.timeZones.slice(117, 119), P.timeZones.slice(120, 151), P.timeZones[152], {
    id: "America/Sao_Paulo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "São Paulo",
    countryId: "BR"
}, P.timeZones.slice(153, 157), {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Südgeorgien",
    countryId: "GS"
}, {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azoren",
    countryId: "PT"
}, P.timeZones[160], {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Kap Verde",
    countryId: "CV"
}, P.timeZones.slice(161, 166), P.timeZones.slice(167, 176), {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Kanaren",
    countryId: "ES"
}, {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lissabon",
    countryId: "PT"
}, {
    id: "Africa/Lome",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Lomé",
    countryId: "TG"
}, P.timeZones.slice(178, 183), {
    id: "Atlantic/Reykjavik",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Reyk­ja­vík",
    countryId: "IS"
}, P.timeZones[185], {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Algier",
    countryId: "DZ"
}, P.timeZones.slice(188, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrad",
    countryId: "RS"
}, P.timeZones.slice(192, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Brüssel",
    countryId: "BE"
}, P.timeZones[196], {
    id: "Europe/Busingen",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Büsingen",
    countryId: "DE"
}, P.timeZones.slice(198, 200), P.timeZones[201], {
    id: "Africa/El_Aaiun",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "El Aaiún",
    countryId: "EH"
}, P.timeZones.slice(203, 205), {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Kopenhagen",
    countryId: "DK"
}, P.timeZones.slice(205, 210), {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luxemburg",
    countryId: "LU"
}, P.timeZones.slice(211, 215), P.timeZones[216], {
    id: "Africa/Ndjamena",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "N’Djamena",
    countryId: "TD"
}, P.timeZones.slice(217, 220), {
    id: "Africa/Porto-Novo",
    regionId: "011",
    utcStandardOffsetSeconds: 3600,
    displayName: "Porto Novo",
    countryId: "BJ"
}, {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Prag",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Rom",
    countryId: "IT"
}, P.timeZones.slice(223, 227), {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, P.timeZones.slice(228, 230), {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Vatikan",
    countryId: "VA"
}, {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Warschau",
    countryId: "PL"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Wien",
    countryId: "AT"
}, P.timeZones[233], {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zürich",
    countryId: "CH"
}, {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Athen",
    countryId: "GR"
}, P.timeZones.slice(236, 238), P.timeZones[239], {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bukarest",
    countryId: "RO"
}, P.timeZones.slice(242, 251), {
    id: "Africa/Cairo",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kairo",
    countryId: "EG"
}, P.timeZones[251], {
    id: "Africa/Khartoum",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Khartum",
    countryId: "SD"
}, P.timeZones[253], {
    id: "Europe/Chisinau",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kischinau",
    countryId: "MD"
}, P.timeZones.slice(254, 261), {
    id: "Asia/Nicosia",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Nikosia",
    countryId: "CY"
}, P.timeZones.slice(262, 265), {
    id: "Africa/Tripoli",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Tripolis",
    countryId: "LY"
}, P.timeZones.slice(266, 268), {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Addis Abeba",
    countryId: "ET"
}, P.timeZones.slice(269, 273), {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdad",
    countryId: "IQ"
}, P.timeZones[274], {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damaskus",
    countryId: "SY"
}, {
    id: "Africa/Dar_es_Salaam",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Daressalam",
    countryId: "TZ"
}, {
    id: "Africa/Djibouti",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Dschibuti",
    countryId: "DJ"
}, P.timeZones.slice(279, 281), {
    id: "Asia/Qatar",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Katar",
    countryId: "QA"
}, P.timeZones[281], {
    id: "Indian/Comoro",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Komoren",
    countryId: "KM"
}, P.timeZones.slice(282, 285), {
    id: "Africa/Mogadishu",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Mogadischu",
    countryId: "SO"
}, {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moskau",
    countryId: "RU"
}, P.timeZones[287], {
    id: "Asia/Riyadh",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Riad",
    countryId: "SA"
}, P.timeZones.slice(290, 292), {
    id: "Europe/Volgograd",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Wolgograd",
    countryId: "RU"
}, {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Teheran",
    countryId: "IR"
}, P.timeZones.slice(294, 297), {
    id: "Asia/Yerevan",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Eriwan",
    countryId: "AM"
}, P.timeZones[297], {
    id: "Asia/Muscat",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Maskat",
    countryId: "OM"
}, P.timeZones[298], {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Réunion",
    countryId: "RE"
}, P.timeZones.slice(301, 303), {
    id: "Asia/Tbilisi",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Tiflis",
    countryId: "GE"
}, P.timeZones[304], P.timeZones[306], {
    id: "Asia/Aqtobe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aktobe",
    countryId: "KZ"
}, P.timeZones[307], P.timeZones[310], {
    id: "Asia/Ashgabat",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aşgabat",
    countryId: "TM"
}, {
    id: "Asia/Dushanbe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Duschanbe",
    countryId: "TJ"
}, {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Jekaterinburg",
    countryId: "RU"
}, {
    id: "Asia/Karachi",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Karatschi",
    countryId: "PK"
}, P.timeZones[313], {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Malediven",
    countryId: "MV"
}, P.timeZones.slice(315, 317), {
    id: "Asia/Qyzylorda",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Qysylorda",
    countryId: "KZ"
}, P.timeZones[318], {
    id: "Asia/Tashkent",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Taschkent",
    countryId: "UZ"
}, P.timeZones.slice(321, 325), {
    id: "Asia/Bishkek",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Bischkek",
    countryId: "KG"
}, P.timeZones.slice(326, 331), {
    id: "Antarctica/Vostok",
    utcStandardOffsetSeconds: 21600,
    displayName: "Wostok",
    countryId: "AQ"
}, {
    id: "Asia/Urumqi",
    regionId: "030",
    utcStandardOffsetSeconds: 21600,
    displayName: "Ürümqi",
    countryId: "CN"
}, P.timeZones.slice(333, 337), {
    id: "Asia/Hovd",
    regionId: "030",
    utcStandardOffsetSeconds: 25200,
    displayName: "Chowd",
    countryId: "MN"
}, P.timeZones.slice(338, 340), P.timeZones[341], {
    id: "Asia/Krasnoyarsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Krasnojarsk",
    countryId: "RU"
}, {
    id: "Asia/Novokuznetsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Nowokuznetsk",
    countryId: "RU"
}, {
    id: "Asia/Novosibirsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Nowosibirsk",
    countryId: "RU"
}, P.timeZones.slice(345, 349), {
    id: "Indian/Christmas",
    utcStandardOffsetSeconds: 25200,
    displayName: "Weihnachtsinsel",
    countryId: "CX"
}, P.timeZones[349], {
    id: "Asia/Hong_Kong",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Hongkong",
    countryId: "HK"
}, P.timeZones.slice(352, 355), {
    id: "Asia/Macau",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Macao",
    countryId: "MO"
}, P.timeZones.slice(356, 360), {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Singapur",
    countryId: "SG"
}, {
    id: "Asia/Taipei",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Taipeh",
    countryId: "TW"
}, {
    id: "Asia/Choibalsan",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Tschoibalsan",
    countryId: "MN"
}, P.timeZones.slice(362, 364), {
    id: "Asia/Khandyga",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Chandyga",
    countryId: "RU"
}, P.timeZones[365], {
    id: "Asia/Yakutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jakutsk",
    countryId: "RU"
}, P.timeZones[366], P.timeZones[368], {
    id: "Asia/Pyongyang",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Pjöngjang",
    countryId: "KP"
}, P.timeZones[370], {
    id: "Asia/Tokyo",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tokio",
    countryId: "JP"
}, {
    id: "Asia/Chita",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tschita",
    countryId: "RU"
}, P.timeZones.slice(373, 388), {
    id: "Asia/Vladivostok",
    regionId: "151",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Wladiwostok",
    countryId: "RU"
}, P.timeZones.slice(389, 399), {
    id: "Asia/Sakhalin",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Sachalin",
    countryId: "RU"
}, P.timeZones.slice(400, 403), {
    id: "Pacific/Fiji",
    regionId: "054",
    utcStandardOffsetSeconds: 43200,
    displayName: "Fidschi",
    countryId: "FJ"
}, P.timeZones[404], {
    id: "Asia/Kamchatka",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Kamtschatka",
    countryId: "RU"
}, P.timeZones.slice(406, 419));

inter.territories = [ _6lr9440, _6lr9475, _6lr9357, _6lr9358, _6lr9483, _6lr9506, _6lr9549, _6lr9455, _6lr9318, _6lr9286, _6lr9359, _6lr9220, _6lr9517, _6lr9441, _6lr9360, _6lr9259, _6lr9229, _6lr9466, _6lr9467, _6lr9522, _6lr9418, _6lr9319, _6lr9320, _6lr9442, _6lr9361, _6lr9321, _6lr9322, _6lr9287, _6lr9260, _6lr9323, _6lr9288, _6lr9362, _6lr9557, _6lr9533, _6lr9363, _6lr9234, _6lr9393, _6lr9539, _6lr9544, _6lr9495, _6lr9394, _6lr9456, _6lr9324, _6lr9246, _6lr9261, _6lr9262, _6lr9244, _6lr9419, _6lr9420, _6lr9325, _6lr9468, _6lr9443, _6lr9238, _6lr9364, _6lr9534, _6lr9395, _6lr9365, _6lr9326, _6lr9444, _6lr9327, _6lr9328, _6lr9476, _6lr9477, _6lr9329, _6lr9366, _6lr9421, _6lr9518, _6lr9530, _6lr9535, _6lr9289, _6lr9263, _6lr9290, _6lr9367, _6lr9264, _6lr9396, _6lr9330, _6lr9457, _6lr9368, _6lr9422, _6lr9249, _6lr9397, _6lr9369, _6lr9291, _6lr9469, _6lr9292, _6lr9265, _6lr9423, _6lr9370, _6lr9293, _6lr9424, _6lr9250, _6lr9251, _6lr9294, _6lr9295, _6lr9445, _6lr9296, _6lr9331, _6lr9332, _6lr9266, _6lr9267, _6lr9297, _6lr9398, _6lr9458, _6lr9425, _6lr9333, _6lr9298, _6lr9247, _6lr9399, _6lr9484, _6lr9426, _6lr9268, _6lr9269, _6lr9446, _6lr9371, _6lr9233, _6lr9400, _6lr9334, _6lr9496, _6lr9478, _6lr9335, _6lr9372, _6lr9252, _6lr9299, _6lr9253, _6lr9336, _6lr9373, _6lr9337, _6lr9338, _6lr9300, _6lr9470, _6lr9339, _6lr9401, _6lr9427, _6lr9301, _6lr9374, _6lr9402, _6lr9254, _6lr9270, _6lr9340, _6lr9479, _6lr9428, _6lr9447, _6lr9403, _6lr9341, _6lr9429, _6lr9507, _6lr9302, _6lr9448, _6lr9561, _6lr9526, _6lr9303, _6lr9375, _6lr9430, _6lr9431, _6lr9376, _6lr9342, _6lr9343, _6lr9271, _6lr9272, _6lr9471, _6lr9432, _6lr9404, _6lr9449, _6lr9273, _6lr9344, _6lr9255, _6lr9508, _6lr9509, _6lr9405, _6lr9459, _6lr9377, _6lr9510, _6lr9545, _6lr9256, _6lr9497, _6lr9491, _6lr9498, _6lr9492, _6lr9378, _6lr9274, _6lr9558, _6lr9304, _6lr9485, _6lr9379, _6lr9257, _6lr9450, _6lr9480, _6lr9275, _6lr9511, _6lr9380, _6lr9451, _6lr9486, _6lr9305, _6lr9381, _6lr9382, _6lr9345, _6lr9406, _6lr9306, _6lr9276, _6lr9433, _6lr9472, _6lr9383, _6lr9346, _6lr9347, _6lr9348, _6lr9434, _6lr9460, _6lr9384, _6lr9385, _6lr9461, _6lr9386, _6lr9407, _6lr9349, _6lr9552, _6lr9554, _6lr9350, _6lr9408, _6lr9481, _6lr9435, _6lr9519, _6lr9409, _6lr9436, _6lr9536, _6lr9555, _6lr9277, _6lr9387, _6lr9531, _6lr9410, _6lr9307, _6lr9527, _6lr9411, _6lr9512, _6lr9493, _6lr9499, _6lr9553, _6lr9388, _6lr9540, _6lr9520, _6lr9389, _6lr9473, _6lr9308, _6lr9390, _6lr9391, _6lr9452, _6lr9258, _6lr9351, _6lr9278, _6lr9521, _6lr9245, _6lr9309, _6lr9528, _6lr9392, _6lr9462, _6lr9537, _6lr9310, _6lr9311, _6lr9312, _6lr9352, _6lr9313, _6lr9353, _6lr9437, _6lr9354, _6lr9463, _6lr9412, _6lr9550, _6lr9513, _6lr9532, _6lr9355, _6lr9500, _6lr9241, _6lr9213, _6lr9514, _6lr9501, _6lr9515, _6lr9438, _6lr9529, _6lr9551, _6lr9523, _6lr9314, _6lr9356, _6lr9494, _6lr9413, {
    id: "QO",
    displayName: "Äußeres Ozeanien",
    regionId: "009",
    hasTimeZones: false
}, _6lr9453, _6lr9439 ];

inter.regions = [ _6lr9475, _6lr9483, _6lr9467, _6lr9522, _6lr9476, _6lr9484, _6lr9507, _6lr9561, _6lr9526, _6lr9508, _6lr9509, _6lr9545, _6lr9497, _6lr9491, _6lr9498, _6lr9492, _6lr9511, _6lr9512, _6lr9493, _6lr9499, _6lr9540, _6lr9520, _6lr9213, _6lr9514, _6lr9501, _6lr9515, _6lr9529, _6lr9523 ];

inter.countries = [ _6lr9440, _6lr9357, _6lr9358, _6lr9506, _6lr9549, _6lr9455, _6lr9318, _6lr9286, _6lr9359, _6lr9220, _6lr9517, _6lr9441, _6lr9360, _6lr9259, _6lr9229, _6lr9466, _6lr9418, _6lr9319, _6lr9320, _6lr9442, _6lr9361, _6lr9321, _6lr9322, _6lr9287, _6lr9260, _6lr9323, _6lr9288, _6lr9362, _6lr9557, _6lr9533, _6lr9363, _6lr9234, _6lr9393, _6lr9539, _6lr9544, _6lr9495, _6lr9394, _6lr9456, _6lr9324, _6lr9246, _6lr9261, _6lr9262, _6lr9244, _6lr9419, _6lr9420, _6lr9325, _6lr9468, _6lr9443, _6lr9238, _6lr9364, _6lr9534, _6lr9395, _6lr9365, _6lr9326, _6lr9444, _6lr9327, _6lr9328, _6lr9477, _6lr9329, _6lr9366, _6lr9421, _6lr9518, _6lr9530, _6lr9535, _6lr9289, _6lr9263, _6lr9290, _6lr9367, _6lr9264, _6lr9396, _6lr9330, _6lr9457, _6lr9368, _6lr9422, _6lr9249, _6lr9397, _6lr9369, _6lr9291, _6lr9469, _6lr9292, _6lr9265, _6lr9423, _6lr9370, _6lr9293, _6lr9424, _6lr9250, _6lr9251, _6lr9294, _6lr9295, _6lr9445, _6lr9296, _6lr9331, _6lr9332, _6lr9266, _6lr9267, _6lr9297, _6lr9398, _6lr9458, _6lr9425, _6lr9333, _6lr9298, _6lr9247, _6lr9399, _6lr9426, _6lr9268, _6lr9269, _6lr9446, _6lr9371, _6lr9233, _6lr9400, _6lr9334, _6lr9496, _6lr9478, _6lr9335, _6lr9372, _6lr9252, _6lr9299, _6lr9253, _6lr9336, _6lr9373, _6lr9337, _6lr9338, _6lr9300, _6lr9470, _6lr9339, _6lr9401, _6lr9427, _6lr9301, _6lr9374, _6lr9402, _6lr9254, _6lr9270, _6lr9340, _6lr9479, _6lr9428, _6lr9447, _6lr9403, _6lr9341, _6lr9429, _6lr9302, _6lr9448, _6lr9303, _6lr9375, _6lr9430, _6lr9431, _6lr9376, _6lr9342, _6lr9343, _6lr9271, _6lr9272, _6lr9471, _6lr9432, _6lr9404, _6lr9449, _6lr9273, _6lr9344, _6lr9255, _6lr9405, _6lr9459, _6lr9377, _6lr9510, _6lr9256, _6lr9378, _6lr9274, _6lr9558, _6lr9304, _6lr9485, _6lr9379, _6lr9257, _6lr9450, _6lr9480, _6lr9275, _6lr9380, _6lr9451, _6lr9486, _6lr9305, _6lr9381, _6lr9382, _6lr9345, _6lr9406, _6lr9306, _6lr9276, _6lr9433, _6lr9472, _6lr9383, _6lr9346, _6lr9347, _6lr9348, _6lr9434, _6lr9460, _6lr9384, _6lr9385, _6lr9461, _6lr9386, _6lr9407, _6lr9349, _6lr9552, _6lr9554, _6lr9350, _6lr9408, _6lr9481, _6lr9435, _6lr9519, _6lr9409, _6lr9436, _6lr9536, _6lr9555, _6lr9277, _6lr9387, _6lr9531, _6lr9410, _6lr9307, _6lr9527, _6lr9411, _6lr9553, _6lr9388, _6lr9389, _6lr9473, _6lr9308, _6lr9390, _6lr9391, _6lr9452, _6lr9258, _6lr9351, _6lr9278, _6lr9521, _6lr9245, _6lr9309, _6lr9528, _6lr9392, _6lr9462, _6lr9537, _6lr9310, _6lr9311, _6lr9312, _6lr9352, _6lr9313, _6lr9353, _6lr9437, _6lr9354, _6lr9463, _6lr9412, _6lr9550, _6lr9513, _6lr9532, _6lr9355, _6lr9500, _6lr9241, _6lr9438, _6lr9551, _6lr9314, _6lr9356, _6lr9494, _6lr9413, _6lr9453, _6lr9439 ];

inter.languages = [ {
    id: "ab",
    displayName: "Abchasisch"
}, {
    id: "ace",
    displayName: "Aceh-Sprache"
}, {
    id: "ach",
    displayName: "Acholi-Sprache"
}, {
    id: "ada",
    displayName: "Adangme"
}, {
    id: "ady",
    displayName: "Adygeisch"
}, {
    id: "aa",
    displayName: "Afar"
}, {
    id: "afh",
    displayName: "Afrihili"
}, {
    id: "af",
    displayName: "Afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "Aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ain",
    displayName: "Ainu-Sprache"
}, {
    id: "ak",
    displayName: "Akan",
    nativeDisplayName: "Akan"
}, {
    id: "akk",
    displayName: "Akkadisch"
}, {
    id: "bss",
    displayName: "Akoose"
}, {
    id: "akz",
    displayName: "Alabama"
}, {
    id: "ale",
    displayName: "Aleutisch"
}, {
    id: "arq",
    displayName: "Algerisches Arabisch"
}, {
    id: "nwc",
    displayName: "Alt-Newari"
}, {
    id: "ang",
    displayName: "Altenglisch"
}, {
    id: "fro",
    displayName: "Altfranzösisch"
}, {
    id: "grc",
    displayName: "Altgriechisch"
}, {
    id: "goh",
    displayName: "Althochdeutsch"
}, {
    id: "sga",
    displayName: "Altirisch"
}, {
    id: "non",
    displayName: "Altnordisch"
}, {
    id: "peo",
    displayName: "Altpersisch"
}, {
    id: "pro",
    displayName: "Altprovenzalisch"
}, {
    id: "syc",
    displayName: "Altsyrisch"
}, {
    id: "en_us",
    displayName: "Amerikanisches Englisch",
    nativeDisplayName: "American English"
}, {
    id: "ase",
    displayName: "Amerikanische Gebärdensprache"
}, {
    id: "smn",
    displayName: "Inari-Samisch",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "anp",
    displayName: "Angika"
}, {
    id: "njo",
    displayName: "Ao-Naga"
}, {
    id: "an",
    displayName: "Aragonesisch"
}, {
    id: "arc",
    displayName: "Aramäisch"
}, {
    id: "aro",
    displayName: "Araona"
}, {
    id: "arp",
    displayName: "Arapaho-Sprache"
}, {
    id: "arw",
    displayName: "Arawak-Sprache"
}, {
    id: "rup",
    displayName: "Aromunisch"
}, {
    id: "ast",
    displayName: "Asturianisch",
    nativeDisplayName: "asturianu"
}, {
    id: "cch",
    displayName: "Atsam"
}, {
    id: "en_au",
    displayName: "Australisches Englisch",
    nativeDisplayName: "Australian English"
}, {
    id: "ae",
    displayName: "Avestisch"
}, {
    id: "awa",
    displayName: "Awadhi"
}, {
    id: "av",
    displayName: "Awarisch"
}, {
    id: "ay",
    displayName: "Aymara"
}, {
    id: "az",
    displayName: "Aserbaidschanisch",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "bqi",
    displayName: "Bachtiarisch"
}, {
    id: "bfq",
    displayName: "Badaga"
}, {
    id: "bfd",
    displayName: "Bafut"
}, {
    id: "ms",
    displayName: "Malaiisch",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bar",
    displayName: "Bairisch"
}, {
    id: "ban",
    displayName: "Balinesisch"
}, {
    id: "bm",
    displayName: "Bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bax",
    displayName: "Bamun"
}, {
    id: "bjn",
    displayName: "Banjaresisch"
}, {
    id: "ba",
    displayName: "Baschkirisch"
}, {
    id: "bbc",
    displayName: "Batak Toba"
}, {
    id: "bej",
    displayName: "Bedauye"
}, {
    id: "bal",
    displayName: "Belutschisch"
}, {
    id: "mrj",
    displayName: "Bergmari"
}, {
    id: "bew",
    displayName: "Betawi"
}, {
    id: "bho",
    displayName: "Bhodschpuri"
}, {
    id: "bik",
    displayName: "Bikol-Sprache"
}, {
    id: "bin",
    displayName: "Bini-Sprache"
}, {
    id: "bpy",
    displayName: "Bishnupriya"
}, {
    id: "bi",
    displayName: "Bislama"
}, {
    id: "bla",
    displayName: "Blackfoot-Sprache"
}, {
    id: "byn",
    displayName: "Blin"
}, {
    id: "zbl",
    displayName: "Bliss-Symbole"
}, {
    id: "bs",
    displayName: "Bosnisch",
    nativeDisplayName: "bosanski"
}, {
    id: "brh",
    displayName: "Brahui"
}, {
    id: "bra",
    displayName: "Braj-Bhakha"
}, {
    id: "br",
    displayName: "Bretonisch",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "Britisches Englisch",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "Buginesisch"
}, {
    id: "bum",
    displayName: "Bulu"
}, {
    id: "bua",
    displayName: "Burjatisch"
}, {
    id: "cad",
    displayName: "Caddo"
}, {
    id: "frc",
    displayName: "Cajun"
}, {
    id: "en_ca",
    displayName: "Kanadisches Englisch",
    nativeDisplayName: "Canadian English"
}, {
    id: "cps",
    displayName: "Capiznon"
}, {
    id: "ca",
    displayName: "Katalanisch",
    nativeDisplayName: "català"
}, {
    id: "cay",
    displayName: "Cayuga"
}, {
    id: "ceb",
    displayName: "Cebuano"
}, {
    id: "ch",
    displayName: "Chamorro-Sprache"
}, {
    id: "chy",
    displayName: "Cheyenne"
}, {
    id: "chb",
    displayName: "Chibcha-Sprache"
}, {
    id: "kde",
    displayName: "Makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "qug",
    displayName: "Chimborazo Hochland-Quechua"
}, {
    id: "chn",
    displayName: "Chinook"
}, {
    id: "chp",
    displayName: "Chipewyan"
}, {
    id: "sn",
    displayName: "Shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cho",
    displayName: "Choctaw"
}, {
    id: "cr",
    displayName: "Cree"
}, {
    id: "cy",
    displayName: "Walisisch",
    nativeDisplayName: "Cymraeg"
}, {
    id: "dak",
    displayName: "Dakota-Sprache"
}, {
    id: "da",
    displayName: "Dänisch",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "Darginisch"
}, {
    id: "se",
    displayName: "Nordsamisch",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "dzg",
    displayName: "Dazaga"
}, {
    id: "del",
    displayName: "Delaware-Sprache"
}, {
    id: "de",
    displayName: "Deutsch",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "Luo-Sprache",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "Dinka-Sprache"
}, {
    id: "doi",
    displayName: "Dogri"
}, {
    id: "dgr",
    displayName: "Dogrib"
}, {
    id: "dsb",
    displayName: "Niedersorbisch",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "Duala",
    nativeDisplayName: "duálá"
}, {
    id: "dyu",
    displayName: "Dyula-Sprache"
}, {
    id: "et",
    displayName: "Estnisch",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "Efik"
}, {
    id: "eka",
    displayName: "Ekajuk"
}, {
    id: "guz",
    displayName: "Gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "elx",
    displayName: "Elamisch"
}, {
    id: "tvl",
    displayName: "Elliceanisch"
}, {
    id: "egl",
    displayName: "Emilianisch"
}, {
    id: "en",
    displayName: "Englisch",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "Ersja-Mordwinisch"
}, {
    id: "es",
    displayName: "Spanisch",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "Europäisches Spanisch",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "Mexikanisches Spanisch",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "Lateinamerikanisches Spanisch",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "Esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "Baskisch",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "Ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ext",
    displayName: "Extremadurisch"
}, {
    id: "ee",
    displayName: "Ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fat",
    displayName: "Fanti-Sprache"
}, {
    id: "gur",
    displayName: "Farefare"
}, {
    id: "fj",
    displayName: "Fidschi"
}, {
    id: "hif",
    displayName: "Fidschi-Hindi"
}, {
    id: "fil",
    displayName: "Filipino",
    nativeDisplayName: "Filipino"
}, {
    id: "fon",
    displayName: "Fon-Sprache"
}, {
    id: "frp",
    displayName: "Frankoprovenzalisch"
}, {
    id: "fr",
    displayName: "Französisch",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "Kanadisches Französisch",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "Schweizer Französisch",
    nativeDisplayName: "français suisse"
}, {
    id: "fur",
    displayName: "Friulisch",
    nativeDisplayName: "furlan"
}, {
    id: "fo",
    displayName: "Färöisch",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "Ga-Sprache"
}, {
    id: "gbz",
    displayName: "Gabri"
}, {
    id: "ga",
    displayName: "Irisch",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "Manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "Gagausisch"
}, {
    id: "gl",
    displayName: "Galizisch",
    nativeDisplayName: "galego"
}, {
    id: "gan",
    displayName: "Gan"
}, {
    id: "gay",
    displayName: "Gayo"
}, {
    id: "gba",
    displayName: "Gbaya-Sprache"
}, {
    id: "gez",
    displayName: "Geez"
}, {
    id: "aln",
    displayName: "Gegisch"
}, {
    id: "bbj",
    displayName: "Ghomala"
}, {
    id: "ki",
    displayName: "Kikuyu",
    nativeDisplayName: "Gikuyu"
}, {
    id: "glk",
    displayName: "Gilaki"
}, {
    id: "gil",
    displayName: "Gilbertesisch"
}, {
    id: "gom",
    displayName: "Goa-Konkani"
}, {
    id: "gon",
    displayName: "Gondi-Sprache"
}, {
    id: "got",
    displayName: "Gotisch"
}, {
    id: "grb",
    displayName: "Grebo-Sprache"
}, {
    id: "gn",
    displayName: "Guarani"
}, {
    id: "gd",
    displayName: "Schottisches Gälisch",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "hai",
    displayName: "Haida-Sprache"
}, {
    id: "ht",
    displayName: "Haiti-Kreolisch"
}, {
    id: "hak",
    displayName: "Hakka"
}, {
    id: "ha",
    displayName: "Haussa",
    nativeDisplayName: "Hausa"
}, {
    id: "hz",
    displayName: "Herero-Sprache"
}, {
    id: "hit",
    displayName: "Hethitisch"
}, {
    id: "bez",
    displayName: "Bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hil",
    displayName: "Hiligaynon-Sprache"
}, {
    id: "ho",
    displayName: "Hiri-Motu"
}, {
    id: "hsb",
    displayName: "Obersorbisch",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "Kroatisch",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "Hupa"
}, {
    id: "iba",
    displayName: "Iban"
}, {
    id: "ibb",
    displayName: "Ibibio"
}, {
    id: "bem",
    displayName: "Bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "io",
    displayName: "Ido-Sprache"
}, {
    id: "ig",
    displayName: "Igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "Rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "Ilokano-Sprache"
}, {
    id: "id",
    displayName: "Indonesisch",
    nativeDisplayName: "Indonesia"
}, {
    id: "inh",
    displayName: "Inguschisch"
}, {
    id: "ia",
    displayName: "Interlingua"
}, {
    id: "ie",
    displayName: "Interlingue"
}, {
    id: "iu",
    displayName: "Inuktitut"
}, {
    id: "ik",
    displayName: "Inupiak"
}, {
    id: "izh",
    displayName: "Ischorisch"
}, {
    id: "sbp",
    displayName: "Sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "Nord-Ndebele",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "Zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "Italienisch",
    nativeDisplayName: "italiano"
}, {
    id: "jam",
    displayName: "Jamaikanisch-kreolische Sprache"
}, {
    id: "jv",
    displayName: "Javanisch"
}, {
    id: "kaj",
    displayName: "Jju"
}, {
    id: "dyo",
    displayName: "Diola",
    nativeDisplayName: "joola"
}, {
    id: "jrb",
    displayName: "Jüdisch-Arabisch"
}, {
    id: "jpr",
    displayName: "Jüdisch-Persisch"
}, {
    id: "jut",
    displayName: "Jütisch"
}, {
    id: "kbd",
    displayName: "Kabardinisch"
}, {
    id: "kea",
    displayName: "Kabuverdianu",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kac",
    displayName: "Kachin-Sprache"
}, {
    id: "kgp",
    displayName: "Kaingang"
}, {
    id: "kkj",
    displayName: "Kako",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "Grönländisch",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "Kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "xal",
    displayName: "Kalmückisch"
}, {
    id: "kbl",
    displayName: "Kanembu"
}, {
    id: "kr",
    displayName: "Kanuri-Sprache"
}, {
    id: "kaa",
    displayName: "Karakalpakisch"
}, {
    id: "krc",
    displayName: "Karatschaiisch-Balkarisch"
}, {
    id: "krl",
    displayName: "Karelisch"
}, {
    id: "car",
    displayName: "Karibisch"
}, {
    id: "csb",
    displayName: "Kaschubisch"
}, {
    id: "kaw",
    displayName: "Kawi"
}, {
    id: "zxx",
    displayName: "Keine Sprachinhalte"
}, {
    id: "ken",
    displayName: "Kenyang"
}, {
    id: "kw",
    displayName: "Kornisch",
    nativeDisplayName: "kernewek"
}, {
    id: "kha",
    displayName: "Khasi-Sprache"
}, {
    id: "naq",
    displayName: "Nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "mag",
    displayName: "Khotta"
}, {
    id: "khw",
    displayName: "Khowar"
}, {
    id: "rof",
    displayName: "Rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "Kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "Machame",
    nativeDisplayName: "Kimachame"
}, {
    id: "kmb",
    displayName: "Kimbundu-Sprache"
}, {
    id: "krj",
    displayName: "Kinaray-a"
}, {
    id: "rw",
    displayName: "Kinyarwanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "Pare",
    nativeDisplayName: "Kipare"
}, {
    id: "kiu",
    displayName: "Kirmanjki"
}, {
    id: "rwk",
    displayName: "Rwa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "Samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "Shambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "Suaheli",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "Kongo-Suaheli",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "Taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "Teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "lzh",
    displayName: "Klassisches Chinesisch"
}, {
    id: "tlh",
    displayName: "Klingonisch"
}, {
    id: "bkm",
    displayName: "Kom"
}, {
    id: "koi",
    displayName: "Komi-Permjakisch"
}, {
    id: "kv",
    displayName: "Komi-Sprache"
}, {
    id: "swb",
    displayName: "Komorisch"
}, {
    id: "kg",
    displayName: "Kongolesisch"
}, {
    id: "cop",
    displayName: "Koptisch"
}, {
    id: "kfo",
    displayName: "Koro"
}, {
    id: "co",
    displayName: "Korsisch"
}, {
    id: "kos",
    displayName: "Kosraeanisch"
}, {
    id: "avk",
    displayName: "Kotava"
}, {
    id: "khq",
    displayName: "Koyra Chiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "Koyra Senni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "kpe",
    displayName: "Kpelle-Sprache"
}, {
    id: "mfe",
    displayName: "Morisyen",
    nativeDisplayName: "kreol morisien"
}, {
    id: "crh",
    displayName: "Krimtatarisch"
}, {
    id: "kri",
    displayName: "Krio"
}, {
    id: "kum",
    displayName: "Kumükisch"
}, {
    id: "ku",
    displayName: "Kurdisch"
}, {
    id: "gwi",
    displayName: "Kutchin-Sprache"
}, {
    id: "kut",
    displayName: "Kutenai-Sprache"
}, {
    id: "kj",
    displayName: "Kwanyama"
}, {
    id: "nmg",
    displayName: "Kwasio",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "Vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ksh",
    displayName: "Kölsch",
    nativeDisplayName: "Kölsch"
}, {
    id: "ebu",
    displayName: "Embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "Meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "Langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "quc",
    displayName: "K’iche’"
}, {
    id: "lad",
    displayName: "Ladino"
}, {
    id: "lah",
    displayName: "Lahnda"
}, {
    id: "lkt",
    displayName: "Lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lam",
    displayName: "Lamba-Sprache"
}, {
    id: "lzz",
    displayName: "Lasisch"
}, {
    id: "la",
    displayName: "Latein"
}, {
    id: "lv",
    displayName: "Lettisch",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "Tongaisch",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lez",
    displayName: "Lesgisch"
}, {
    id: "ltg",
    displayName: "Lettgallisch"
}, {
    id: "lt",
    displayName: "Litauisch",
    nativeDisplayName: "lietuvių"
}, {
    id: "lij",
    displayName: "Ligurisch"
}, {
    id: "li",
    displayName: "Limburgisch"
}, {
    id: "lfn",
    displayName: "Lingua Franca Nova"
}, {
    id: "ln",
    displayName: "Lingala",
    nativeDisplayName: "lingála"
}, {
    id: "liv",
    displayName: "Livisch"
}, {
    id: "jbo",
    displayName: "Lojban"
}, {
    id: "lmo",
    displayName: "Lombardisch"
}, {
    id: "lua",
    displayName: "Luba-Lulua"
}, {
    id: "lg",
    displayName: "Ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "Luiseno-Sprache"
}, {
    id: "smj",
    displayName: "Lule-Samisch"
}, {
    id: "luy",
    displayName: "Luhya",
    nativeDisplayName: "Luluhia"
}, {
    id: "lun",
    displayName: "Lunda-Sprache"
}, {
    id: "lus",
    displayName: "Lushai-Sprache"
}, {
    id: "lb",
    displayName: "Luxemburgisch",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "Massai",
    nativeDisplayName: "Maa"
}, {
    id: "mde",
    displayName: "Maba"
}, {
    id: "mad",
    displayName: "Maduresisch"
}, {
    id: "maf",
    displayName: "Mafa"
}, {
    id: "hu",
    displayName: "Ungarisch",
    nativeDisplayName: "magyar"
}, {
    id: "vmf",
    displayName: "Mainfränkisch"
}, {
    id: "mai",
    displayName: "Maithili"
}, {
    id: "mak",
    displayName: "Makassarisch"
}, {
    id: "mgh",
    displayName: "Makhuwa-Meetto",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "Madagassisch",
    nativeDisplayName: "Malagasy"
}, {
    id: "dv",
    displayName: "Maledivisch"
}, {
    id: "mt",
    displayName: "Maltesisch",
    nativeDisplayName: "Malti"
}, {
    id: "mdr",
    displayName: "Mandaresisch"
}, {
    id: "man",
    displayName: "Manding-Sprache"
}, {
    id: "mnc",
    displayName: "Mandschurisch"
}, {
    id: "mi",
    displayName: "Maori"
}, {
    id: "arn",
    displayName: "Mapudungun"
}, {
    id: "ary",
    displayName: "Marokkanisches Arabisch"
}, {
    id: "mh",
    displayName: "Marschallesisch"
}, {
    id: "mwr",
    displayName: "Marwari"
}, {
    id: "umb",
    displayName: "Mbundu-Sprache"
}, {
    id: "byv",
    displayName: "Medumba"
}, {
    id: "mul",
    displayName: "Mehrsprachig"
}, {
    id: "mni",
    displayName: "Meithei-Sprache"
}, {
    id: "men",
    displayName: "Mende-Sprache"
}, {
    id: "mwv",
    displayName: "Mentawai"
}, {
    id: "mgo",
    displayName: "Meta’",
    nativeDisplayName: "metaʼ"
}, {
    id: "fit",
    displayName: "Meänkieli"
}, {
    id: "hmn",
    displayName: "Miao-Sprache"
}, {
    id: "mic",
    displayName: "Micmac-Sprache"
}, {
    id: "nan",
    displayName: "Min Nan"
}, {
    id: "min",
    displayName: "Minangkabau-Sprache"
}, {
    id: "xmf",
    displayName: "Mingrelisch"
}, {
    id: "mwl",
    displayName: "Mirandesisch"
}, {
    id: "enm",
    displayName: "Mittelenglisch"
}, {
    id: "frm",
    displayName: "Mittelfranzösisch"
}, {
    id: "gmh",
    displayName: "Mittelhochdeutsch"
}, {
    id: "mga",
    displayName: "Mittelirisch"
}, {
    id: "dum",
    displayName: "Mittelniederländisch"
}, {
    id: "pal",
    displayName: "Mittelpersisch"
}, {
    id: "moh",
    displayName: "Mohawk"
}, {
    id: "mdf",
    displayName: "Moksha"
}, {
    id: "ro_md",
    displayName: "Moldauisch",
    nativeDisplayName: "moldovenească"
}, {
    id: "lol",
    displayName: "Mongo"
}, {
    id: "gor",
    displayName: "Mongondou"
}, {
    id: "mos",
    displayName: "Mossi-Sprache"
}, {
    id: "mua",
    displayName: "Mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "mus",
    displayName: "Muskogee-Sprache"
}, {
    id: "mye",
    displayName: "Myene"
}, {
    id: "na",
    displayName: "Nauruisch"
}, {
    id: "nv",
    displayName: "Navajo"
}, {
    id: "jgo",
    displayName: "Ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "ng",
    displayName: "Ndonga"
}, {
    id: "nap",
    displayName: "Neapolitanisch"
}, {
    id: "nl",
    displayName: "Niederländisch",
    nativeDisplayName: "Nederlands"
}, {
    id: "tpi",
    displayName: "Neumelanesisch"
}, {
    id: "new",
    displayName: "Newari"
}, {
    id: "sba",
    displayName: "Ngambay"
}, {
    id: "yrl",
    displayName: "Nheengatu"
}, {
    id: "nia",
    displayName: "Nias-Sprache"
}, {
    id: "nds",
    displayName: "Niederdeutsch"
}, {
    id: "nds_nl",
    displayName: "Niedersächsisch"
}, {
    id: "niu",
    displayName: "Niue-Sprache"
}, {
    id: "nog",
    displayName: "Nogai"
}, {
    id: "nso",
    displayName: "Nord-Sotho-Sprache"
}, {
    id: "frr",
    displayName: "Nordfriesisch"
}, {
    id: "nb",
    displayName: "Norwegisch Bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "Norwegisch"
}, {
    id: "nov",
    displayName: "Novial"
}, {
    id: "yav",
    displayName: "Yangben",
    nativeDisplayName: "nuasue"
}, {
    id: "nym",
    displayName: "Nyamwezi-Sprache"
}, {
    id: "ny",
    displayName: "Nyanja-Sprache"
}, {
    id: "nn",
    displayName: "Norwegisch Nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "nyo",
    displayName: "Nyoro"
}, {
    id: "nzi",
    displayName: "Nzima"
}, {
    id: "nqo",
    displayName: "N’Ko"
}, {
    id: "oj",
    displayName: "Ojibwa-Sprache"
}, {
    id: "oc",
    displayName: "Okzitanisch"
}, {
    id: "xog",
    displayName: "Soga",
    nativeDisplayName: "Olusoga"
}, {
    id: "kru",
    displayName: "Oraon-Sprache"
}, {
    id: "om",
    displayName: "Oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "Osage-Sprache"
}, {
    id: "ota",
    displayName: "Osmanisch"
}, {
    id: "rap",
    displayName: "Osterinsel-Sprache"
}, {
    id: "frs",
    displayName: "Ostfriesisch"
}, {
    id: "uz",
    displayName: "Usbekisch",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pau",
    displayName: "Palau"
}, {
    id: "pi",
    displayName: "Pali"
}, {
    id: "pam",
    displayName: "Pampanggan-Sprache"
}, {
    id: "pag",
    displayName: "Pangasinan-Sprache"
}, {
    id: "fan",
    displayName: "Pangwe-Sprache"
}, {
    id: "pap",
    displayName: "Papiamento"
}, {
    id: "pdc",
    displayName: "Pennsylvaniadeutsch"
}, {
    id: "pfl",
    displayName: "Pfälzisch"
}, {
    id: "phn",
    displayName: "Phönikisch"
}, {
    id: "pcd",
    displayName: "Picardisch"
}, {
    id: "pms",
    displayName: "Piemontesisch"
}, {
    id: "pdt",
    displayName: "Plautdietsch"
}, {
    id: "pl",
    displayName: "Polnisch",
    nativeDisplayName: "polski"
}, {
    id: "pon",
    displayName: "Ponapeanisch"
}, {
    id: "pnt",
    displayName: "Pontisch"
}, {
    id: "pt",
    displayName: "Portugiesisch",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "Brasilianisches Portugiesisch",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "Europäisches Portugiesisch",
    nativeDisplayName: "português europeu"
}, {
    id: "prg",
    displayName: "Altpreußisch",
    nativeDisplayName: "prūsiskan"
}, {
    id: "ff",
    displayName: "Ful",
    nativeDisplayName: "Pulaar"
}, {
    id: "raj",
    displayName: "Rajasthani"
}, {
    id: "rar",
    displayName: "Rarotonganisch"
}, {
    id: "ksf",
    displayName: "Bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "rgn",
    displayName: "Romagnol"
}, {
    id: "rom",
    displayName: "Romani"
}, {
    id: "ro",
    displayName: "Rumänisch",
    nativeDisplayName: "română"
}, {
    id: "root",
    displayName: "Root"
}, {
    id: "loz",
    displayName: "Rotse-Sprache"
}, {
    id: "rtm",
    displayName: "Rotumanisch"
}, {
    id: "rug",
    displayName: "Roviana"
}, {
    id: "cgg",
    displayName: "Rukiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "Rätoromanisch",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "Quechua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "Nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "rue",
    displayName: "Russinisch"
}, {
    id: "ssy",
    displayName: "Saho"
}, {
    id: "kho",
    displayName: "Sakisch"
}, {
    id: "sam",
    displayName: "Samaritanisch"
}, {
    id: "sm",
    displayName: "Samoanisch"
}, {
    id: "sgs",
    displayName: "Samogitisch"
}, {
    id: "sad",
    displayName: "Sandawe-Sprache"
}, {
    id: "sa",
    displayName: "Sanskrit"
}, {
    id: "sat",
    displayName: "Santali"
}, {
    id: "sc",
    displayName: "Sardisch"
}, {
    id: "sas",
    displayName: "Sasak"
}, {
    id: "sdc",
    displayName: "Sassarisch"
}, {
    id: "stq",
    displayName: "Saterfriesisch"
}, {
    id: "saz",
    displayName: "Saurashtra"
}, {
    id: "shn",
    displayName: "Schan-Sprache"
}, {
    id: "sli",
    displayName: "Schlesisch"
}, {
    id: "szl",
    displayName: "Schlesisch (Polen)"
}, {
    id: "sco",
    displayName: "Schottisch"
}, {
    id: "de_ch",
    displayName: "Schweizer Hochdeutsch",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "Schweizerdeutsch",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "zea",
    displayName: "Seeländisch"
}, {
    id: "sly",
    displayName: "Selayar"
}, {
    id: "sel",
    displayName: "Selkupisch"
}, {
    id: "seh",
    displayName: "Sena",
    nativeDisplayName: "sena"
}, {
    id: "see",
    displayName: "Seneca"
}, {
    id: "sh",
    displayName: "Serbo-Kroatisch"
}, {
    id: "srr",
    displayName: "Serer-Sprache"
}, {
    id: "sei",
    displayName: "Seri"
}, {
    id: "sq",
    displayName: "Albanisch",
    nativeDisplayName: "shqip"
}, {
    id: "nnh",
    displayName: "Ngiemboon",
    nativeDisplayName: "Shwóŋò ngiembɔɔn"
}, {
    id: "sid",
    displayName: "Sidamo"
}, {
    id: "sd",
    displayName: "Sindhi"
}, {
    id: "scn",
    displayName: "Sizilianisch"
}, {
    id: "sms",
    displayName: "Skolt-Samisch"
}, {
    id: "den",
    displayName: "Slave"
}, {
    id: "sk",
    displayName: "Slowakisch",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "Slowenisch",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "Sogdisch"
}, {
    id: "snk",
    displayName: "Soninke-Sprache"
}, {
    id: "so",
    displayName: "Somali",
    nativeDisplayName: "Soomaali"
}, {
    id: "srn",
    displayName: "Srananisch"
}, {
    id: "suk",
    displayName: "Sukuma-Sprache"
}, {
    id: "sux",
    displayName: "Sumerisch"
}, {
    id: "su",
    displayName: "Sundanesisch"
}, {
    id: "fi",
    displayName: "Finnisch",
    nativeDisplayName: "suomi"
}, {
    id: "sus",
    displayName: "Susu"
}, {
    id: "sv",
    displayName: "Schwedisch",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "Swazi"
}, {
    id: "syr",
    displayName: "Syrisch"
}, {
    id: "sg",
    displayName: "Sango",
    nativeDisplayName: "Sängö"
}, {
    id: "alt",
    displayName: "Süd-Altaisch"
}, {
    id: "nr",
    displayName: "Süd-Ndebele-Sprache"
}, {
    id: "st",
    displayName: "Süd-Sotho-Sprache"
}, {
    id: "sdh",
    displayName: "Südkurdisch"
}, {
    id: "sma",
    displayName: "Südsamisch"
}, {
    id: "tg",
    displayName: "Tadschikisch"
}, {
    id: "tl",
    displayName: "Tagalog"
}, {
    id: "ty",
    displayName: "Tahitisch"
}, {
    id: "tly",
    displayName: "Talisch"
}, {
    id: "tmh",
    displayName: "Tamaseq"
}, {
    id: "tzm",
    displayName: "Zentralatlas-Tamazight",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "Kabylisch",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "rif",
    displayName: "Tarifit"
}, {
    id: "trv",
    displayName: "Taroko"
}, {
    id: "twq",
    displayName: "Tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "Tatarisch"
}, {
    id: "ttt",
    displayName: "Tatisch"
}, {
    id: "tem",
    displayName: "Temne"
}, {
    id: "ter",
    displayName: "Tereno-Sprache"
}, {
    id: "tet",
    displayName: "Tetum-Sprache"
}, {
    id: "nus",
    displayName: "Nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "tig",
    displayName: "Tigre"
}, {
    id: "tiv",
    displayName: "Tiv-Sprache"
}, {
    id: "vi",
    displayName: "Vietnamesisch",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tli",
    displayName: "Tlingit-Sprache"
}, {
    id: "tkl",
    displayName: "Tokelauanisch"
}, {
    id: "chk",
    displayName: "Trukesisch"
}, {
    id: "tkr",
    displayName: "Tsachurisch"
}, {
    id: "tsd",
    displayName: "Tsakonisch"
}, {
    id: "shu",
    displayName: "Tschadisch-Arabisch"
}, {
    id: "chg",
    displayName: "Tschagataisch"
}, {
    id: "chm",
    displayName: "Tscheremissisch"
}, {
    id: "cv",
    displayName: "Tschuwaschisch"
}, {
    id: "lu",
    displayName: "Luba-Katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tsi",
    displayName: "Tsimshian-Sprache"
}, {
    id: "ts",
    displayName: "Tsonga"
}, {
    id: "tog",
    displayName: "Tsonga-Sprache"
}, {
    id: "tn",
    displayName: "Tswana-Sprache"
}, {
    id: "tcy",
    displayName: "Tulu"
}, {
    id: "tum",
    displayName: "Tumbuka-Sprache"
}, {
    id: "aeb",
    displayName: "Tunesisches Arabisch"
}, {
    id: "tru",
    displayName: "Turoyo"
}, {
    id: "tyv",
    displayName: "Tuwinisch"
}, {
    id: "tw",
    displayName: "Twi"
}, {
    id: "kcg",
    displayName: "Tyap"
}, {
    id: "tk",
    displayName: "Turkmenisch",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "Türkisch",
    nativeDisplayName: "Türkçe"
}, {
    id: "udm",
    displayName: "Udmurtisch"
}, {
    id: "uga",
    displayName: "Ugaritisch"
}, {
    id: "und",
    displayName: "Unbestimmte Sprache"
}, {
    id: "ve",
    displayName: "Venda-Sprache"
}, {
    id: "vec",
    displayName: "Venetisch"
}, {
    id: "nl_be",
    displayName: "Flämisch",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "Volapük",
    nativeDisplayName: "Volapük"
}, {
    id: "vro",
    displayName: "Võro"
}, {
    id: "wal",
    displayName: "Walamo-Sprache"
}, {
    id: "wa",
    displayName: "Wallonisch"
}, {
    id: "wae",
    displayName: "Walser-Dialekte",
    nativeDisplayName: "Walser"
}, {
    id: "war",
    displayName: "Waray"
}, {
    id: "wbp",
    displayName: "Warlpiri"
}, {
    id: "was",
    displayName: "Washo-Sprache"
}, {
    id: "guc",
    displayName: "Wayúu"
}, {
    id: "vep",
    displayName: "Wepsisch"
}, {
    id: "fy",
    displayName: "Westfriesisch",
    nativeDisplayName: "West-Frysk"
}, {
    id: "vls",
    displayName: "Westflämisch"
}, {
    id: "bgn",
    displayName: "Westliches Belutschi"
}, {
    id: "wo",
    displayName: "Wolof"
}, {
    id: "vot",
    displayName: "Wotisch"
}, {
    id: "wuu",
    displayName: "Wu"
}, {
    id: "xh",
    displayName: "Xhosa"
}, {
    id: "hsn",
    displayName: "Xiang"
}, {
    id: "yao",
    displayName: "Yao-Sprache"
}, {
    id: "yap",
    displayName: "Yapesisch"
}, {
    id: "ybb",
    displayName: "Yemba"
}, {
    id: "zap",
    displayName: "Zapotekisch"
}, {
    id: "dje",
    displayName: "Zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "Zaza"
}, {
    id: "zen",
    displayName: "Zenaga"
}, {
    id: "esu",
    displayName: "Zentral-Alaska-Yupik"
}, {
    id: "dtp",
    displayName: "Zentral-Dusun"
}, {
    id: "za",
    displayName: "Zhuang"
}, {
    id: "zun",
    displayName: "Zuni-Sprache"
}, {
    id: "egy",
    displayName: "Ägyptisch"
}, {
    id: "arz",
    displayName: "Ägyptisches Arabisch"
}, {
    id: "yo",
    displayName: "Yoruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "Isländisch",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "Österreichisches Deutsch",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "Tschechisch",
    nativeDisplayName: "čeština"
}, {
    id: "bas",
    displayName: "Basaa-Sprache",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "Hawaiisch",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "Griechisch",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "Weißrussisch",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "Bulgarisch",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "Ossetisch",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "Kirgisisch",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "Mazedonisch",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "Mongolisch",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "Tschetschenisch",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "Russisch",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "Jakutisch",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "Serbisch",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "Ukrainisch",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "Kirchenslawisch",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "Kasachisch",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "Armenisch",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "Jiddisch",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "Hebräisch",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "Uigurisch",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "Urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "Arabisch",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "Modernes Hocharabisch",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "Persisch",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "Nördliches Luri",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "Masanderanisch",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "Paschtu",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "Zentralkurdisch",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "Kaschmiri",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "Konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "Nepalesisch",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "Bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "Marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "Hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "Assamesisch",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "Bengalisch",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "Punjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "Gujarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "Oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "Tamil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "Telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "Kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "Malayalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "Singhalesisch",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "Thailändisch",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "Laotisch",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "Tibetisch",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "Dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "Birmanisch",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "Georgisch",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "Tigrinya",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "Amharisch",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "Khmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "Tamazight",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "Taschelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "Chinesisch",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "Japanisch",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "Chinesisch (vereinfacht)",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "Kantonesisch",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "Chinesisch (traditionell)",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "Yi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "Vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "Cherokee",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "Koreanisch",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Afak",
    displayName: "Afaka"
}, {
    id: "Ital",
    displayName: "Altitalisch"
}, {
    id: "Cyrs",
    displayName: "Altkirchenslawisch"
}, {
    id: "Narb",
    displayName: "Altnordarabisch"
}, {
    id: "Perm",
    displayName: "Altpermisch"
}, {
    id: "Xpeo",
    displayName: "Altpersisch"
}, {
    id: "Sarb",
    displayName: "Altsüdarabisch"
}, {
    id: "Hung",
    displayName: "Altungarisch"
}, {
    id: "Arab",
    displayName: "Arabisch"
}, {
    id: "Armn",
    displayName: "Armenisch"
}, {
    id: "Armi",
    displayName: "Armi"
}, {
    id: "Avst",
    displayName: "Avestisch"
}, {
    id: "Bali",
    displayName: "Balinesisch"
}, {
    id: "Bamu",
    displayName: "Bamun"
}, {
    id: "Bass",
    displayName: "Bassa"
}, {
    id: "Batk",
    displayName: "Battakisch"
}, {
    id: "Beng",
    displayName: "Bengalisch"
}, {
    id: "Mymr",
    displayName: "Birmanisch"
}, {
    id: "Brai",
    displayName: "Blindenschrift"
}, {
    id: "Blis",
    displayName: "Bliss-Symbole"
}, {
    id: "Bopo",
    displayName: "Bopomofo"
}, {
    id: "Brah",
    displayName: "Brahmi"
}, {
    id: "Phli",
    displayName: "Buch-Pahlavi"
}, {
    id: "Bugi",
    displayName: "Buginesisch"
}, {
    id: "Buhd",
    displayName: "Buhid"
}, {
    id: "Cakm",
    displayName: "Chakma"
}, {
    id: "Cham",
    displayName: "Cham"
}, {
    id: "Cher",
    displayName: "Cherokee"
}, {
    id: "Hani",
    displayName: "Chinesisch"
}, {
    id: "Cirt",
    displayName: "Cirth"
}, {
    id: "Dsrt",
    displayName: "Deseret"
}, {
    id: "Deva",
    displayName: "Devanagari"
}, {
    id: "Dupl",
    displayName: "Duployanisch"
}, {
    id: "Elba",
    displayName: "Elbasanisch"
}, {
    id: "Lisu",
    displayName: "Fraser"
}, {
    id: "Nshu",
    displayName: "Frauenschrift"
}, {
    id: "Nkgb",
    displayName: "Geba"
}, {
    id: "Sgnw",
    displayName: "Gebärdensprache"
}, {
    id: "Zinh",
    displayName: "Geerbter Schriftwert"
}, {
    id: "Geor",
    displayName: "Georgisch"
}, {
    id: "Glag",
    displayName: "Glagolitisch"
}, {
    id: "Goth",
    displayName: "Gotisch"
}, {
    id: "Gran",
    displayName: "Grantha"
}, {
    id: "Grek",
    displayName: "Griechisch"
}, {
    id: "Gujr",
    displayName: "Gujarati"
}, {
    id: "Guru",
    displayName: "Gurmukhi"
}, {
    id: "Hang",
    displayName: "Hangul"
}, {
    id: "Hano",
    displayName: "Hanunoo"
}, {
    id: "Hebr",
    displayName: "Hebräisch"
}, {
    id: "Hluw",
    displayName: "Hieroglyphen-Luwisch"
}, {
    id: "Hira",
    displayName: "Hiragana"
}, {
    id: "Inds",
    displayName: "Indus-Schrift"
}, {
    id: "Jpan",
    displayName: "Japanisch"
}, {
    id: "Java",
    displayName: "Javanesisch"
}, {
    id: "Jurc",
    displayName: "Jurchen"
}, {
    id: "Kthi",
    displayName: "Kaithi"
}, {
    id: "Knda",
    displayName: "Kannada"
}, {
    id: "Cari",
    displayName: "Karisch"
}, {
    id: "Kana",
    displayName: "Katakana"
}, {
    id: "Hrkt",
    displayName: "Katakana oder Hiragana"
}, {
    id: "Aghb",
    displayName: "Kaukasisch-Albanisch"
}, {
    id: "Kali",
    displayName: "Kayah Li"
}, {
    id: "Khar",
    displayName: "Kharoshthi"
}, {
    id: "Khmr",
    displayName: "Khmer"
}, {
    id: "Khoj",
    displayName: "Khojki"
}, {
    id: "Sind",
    displayName: "Khudawadi"
}, {
    id: "Geok",
    displayName: "Khutsuri"
}, {
    id: "Copt",
    displayName: "Koptisch"
}, {
    id: "Kore",
    displayName: "Koreanisch"
}, {
    id: "Kpel",
    displayName: "Kpelle"
}, {
    id: "Cyrl",
    displayName: "Kyrillisch"
}, {
    id: "Lana",
    displayName: "Lanna"
}, {
    id: "Laoo",
    displayName: "Laotisch"
}, {
    id: "Latn",
    displayName: "Lateinisch"
}, {
    id: "Latf",
    displayName: "Lateinisch - Fraktur-Variante"
}, {
    id: "Latg",
    displayName: "Lateinisch - Gälische Variante"
}, {
    id: "Lepc",
    displayName: "Lepcha"
}, {
    id: "Limb",
    displayName: "Limbu"
}, {
    id: "Lina",
    displayName: "Linear A"
}, {
    id: "Linb",
    displayName: "Linear B"
}, {
    id: "Loma",
    displayName: "Loma"
}, {
    id: "Lydi",
    displayName: "Lydisch"
}, {
    id: "Lyci",
    displayName: "Lykisch"
}, {
    id: "Mahj",
    displayName: "Mahajani"
}, {
    id: "Mlym",
    displayName: "Malayalam"
}, {
    id: "Mand",
    displayName: "Mandäisch"
}, {
    id: "Mani",
    displayName: "Manichäisch"
}, {
    id: "Zmth",
    displayName: "Mathematische Notation"
}, {
    id: "Maya",
    displayName: "Maya-Hieroglyphen"
}, {
    id: "Mtei",
    displayName: "Meitei Mayek"
}, {
    id: "Mend",
    displayName: "Mende"
}, {
    id: "Mero",
    displayName: "Meroitisch"
}, {
    id: "Merc",
    displayName: "Meroitisch kursiv"
}, {
    id: "Modi",
    displayName: "Modi"
}, {
    id: "Mong",
    displayName: "Mongolisch"
}, {
    id: "Moon",
    displayName: "Moon"
}, {
    id: "Mroo",
    displayName: "Mro"
}, {
    id: "Nbat",
    displayName: "Nabatäisch"
}, {
    id: "Nkoo",
    displayName: "N’Ko"
}, {
    id: "Ogam",
    displayName: "Ogham"
}, {
    id: "Olck",
    displayName: "Ol Chiki"
}, {
    id: "Orkh",
    displayName: "Orchon-Runen"
}, {
    id: "Orya",
    displayName: "Oriya"
}, {
    id: "Osma",
    displayName: "Osmanisch"
}, {
    id: "Syrn",
    displayName: "Ostsyrisch"
}, {
    id: "Hmng",
    displayName: "Pahawh Hmong"
}, {
    id: "Phlv",
    displayName: "Pahlavi"
}, {
    id: "Palm",
    displayName: "Palmyrenisch"
}, {
    id: "Prti",
    displayName: "Parthisch"
}, {
    id: "Pauc",
    displayName: "Pau Cin Hau"
}, {
    id: "Phag",
    displayName: "Phags-pa"
}, {
    id: "Phnx",
    displayName: "Phönizisch"
}, {
    id: "Plrd",
    displayName: "Pollard Phonetisch"
}, {
    id: "Phlp",
    displayName: "Psalter-Pahlavi"
}, {
    id: "Rjng",
    displayName: "Rejang"
}, {
    id: "Roro",
    displayName: "Rongorongo"
}, {
    id: "Runr",
    displayName: "Runenschrift"
}, {
    id: "Samr",
    displayName: "Samaritanisch"
}, {
    id: "Sara",
    displayName: "Sarati"
}, {
    id: "Saur",
    displayName: "Saurashtra"
}, {
    id: "Zxxx",
    displayName: "Schriftlos"
}, {
    id: "Shrd",
    displayName: "Sharada"
}, {
    id: "Shaw",
    displayName: "Shaw-Alphabet"
}, {
    id: "Visp",
    displayName: "Sichtbare Sprache"
}, {
    id: "Sidd",
    displayName: "Siddham"
}, {
    id: "Sinh",
    displayName: "Singhalesisch"
}, {
    id: "Sora",
    displayName: "Sora Sompeng"
}, {
    id: "Xsux",
    displayName: "Sumerisch-akkadische Keilschrift"
}, {
    id: "Sund",
    displayName: "Sundanesisch"
}, {
    id: "Sylo",
    displayName: "Syloti Nagri"
}, {
    id: "Zsym",
    displayName: "Symbole"
}, {
    id: "Syrc",
    displayName: "Syrisch"
}, {
    id: "Syre",
    displayName: "Syrisch - Estrangelo-Variante"
}, {
    id: "Tglg",
    displayName: "Tagalog"
}, {
    id: "Tagb",
    displayName: "Tagbanwa"
}, {
    id: "Tale",
    displayName: "Tai Le"
}, {
    id: "Talu",
    displayName: "Tai Lue"
}, {
    id: "Tavt",
    displayName: "Tai-Viet"
}, {
    id: "Takr",
    displayName: "Takri"
}, {
    id: "Taml",
    displayName: "Tamilisch"
}, {
    id: "Telu",
    displayName: "Telugu"
}, {
    id: "Teng",
    displayName: "Tengwar"
}, {
    id: "Thaa",
    displayName: "Thaana"
}, {
    id: "Thai",
    displayName: "Thai"
}, {
    id: "Tibt",
    displayName: "Tibetisch"
}, {
    id: "Tfng",
    displayName: "Tifinagh"
}, {
    id: "Tirh",
    displayName: "Tirhuta"
}, {
    id: "Hant",
    displayName: "Traditionell"
}, {
    id: "Cans",
    displayName: "UCAS"
}, {
    id: "Ugar",
    displayName: "Ugaritisch"
}, {
    id: "Zzzz",
    displayName: "Unbekannte Schrift"
}, {
    id: "Zyyy",
    displayName: "Unbestimmt"
}, {
    id: "Vaii",
    displayName: "Vai"
}, {
    id: "Wara",
    displayName: "Varang Kshiti"
}, {
    id: "Hans",
    displayName: "Vereinfacht"
}, {
    id: "Syrj",
    displayName: "Westsyrisch"
}, {
    id: "Wole",
    displayName: "Woleaianisch"
}, {
    id: "Tang",
    displayName: "Xixia"
}, {
    id: "Yiii",
    displayName: "Yi"
}, {
    id: "Cprt",
    displayName: "Zypriotisch"
}, {
    id: "Egyd",
    displayName: "Ägyptisch - Demotisch"
}, {
    id: "Egyh",
    displayName: "Ägyptisch - Hieratisch"
}, {
    id: "Egyp",
    displayName: "Ägyptische Hieroglyphen"
}, {
    id: "Ethi",
    displayName: "Äthiopisch"
} ];

inter.currencies = [ {
    id: "AFA",
    displayName: "Afghanische Afghani (1927–2002)",
    symbol: "AFA",
    one: "Afghanische Afghani (1927–2002)",
    other: "Afghanische Afghani (1927–2002)"
}, {
    id: "AFN",
    displayName: "Afghanischer Afghani",
    symbol: "AFN",
    one: "Afghanischer Afghani",
    other: "Afghanische Afghani"
}, {
    id: "ALL",
    displayName: "Albanischer Lek",
    symbol: "ALL",
    one: "Albanischer Lek",
    other: "Albanische Lek"
}, {
    id: "ALK",
    displayName: "Albanischer Lek (1946–1965)",
    one: "Albanischer Lek (1946–1965)",
    other: "Albanische Lek (1946–1965)"
}, {
    id: "DZD",
    displayName: "Algerischer Dinar",
    symbol: "DZD",
    one: "Algerischer Dinar",
    other: "Algerische Dinar"
}, {
    id: "ADP",
    displayName: "Andorranische Pesete",
    symbol: "ADP",
    one: "Andorranische Pesete",
    other: "Andorranische Peseten"
}, {
    id: "AOA",
    displayName: "Angolanischer Kwanza",
    symbol: "AOA",
    one: "Angolanischer Kwanza",
    other: "Angolanische Kwanza"
}, {
    id: "AOK",
    displayName: "Angolanischer Kwanza (1977–1990)",
    symbol: "AOK",
    one: "Angolanischer Kwanza (1977–1990)",
    other: "Angolanische Kwanza (1977–1990)"
}, {
    id: "AOR",
    displayName: "Angolanischer Kwanza Reajustado (1995–1999)",
    symbol: "AOR",
    one: "Angolanischer Kwanza Reajustado (1995–1999)",
    other: "Angolanische Kwanza Reajustado (1995–1999)"
}, {
    id: "AON",
    displayName: "Angolanischer Neuer Kwanza (1990–2000)",
    symbol: "AON",
    one: "Angolanischer Neuer Kwanza (1990–2000)",
    other: "Angolanische Neue Kwanza (1990–2000)"
}, {
    id: "ARA",
    displayName: "Argentinischer Austral",
    symbol: "ARA",
    one: "Argentinischer Austral",
    other: "Argentinische Austral"
}, {
    id: "ARS",
    displayName: "Argentinischer Peso",
    symbol: "ARS",
    one: "Argentinischer Peso",
    other: "Argentinische Pesos"
}, {
    id: "ARM",
    displayName: "Argentinischer Peso (1881–1970)",
    symbol: "ARM",
    one: "Argentinischer Peso (1881–1970)",
    other: "Argentinische Pesos (1881–1970)"
}, {
    id: "ARP",
    displayName: "Argentinischer Peso (1983–1985)",
    symbol: "ARP",
    one: "Argentinischer Peso (1983–1985)",
    other: "Argentinische Peso (1983–1985)"
}, {
    id: "ARL",
    displayName: "Argentinischer Peso Ley (1970–1983)",
    symbol: "ARL",
    one: "Argentinischer Peso Ley (1970–1983)",
    other: "Argentinische Pesos Ley (1970–1983)"
}, {
    id: "AMD",
    displayName: "Armenischer Dram",
    symbol: "AMD",
    one: "Armenischer Dram",
    other: "Armenische Dram"
}, {
    id: "AWG",
    displayName: "Aruba-Florin",
    symbol: "AWG",
    one: "Aruba-Florin",
    other: "Aruba-Florin"
}, {
    id: "AZN",
    displayName: "Aserbaidschan-Manat",
    symbol: "AZN",
    one: "Aserbaidschan-Manat",
    other: "Aserbaidschan-Manat"
}, {
    id: "AZM",
    displayName: "Aserbaidschan-Manat (1993–2006)",
    symbol: "AZM",
    one: "Aserbaidschan-Manat (1993–2006)",
    other: "Aserbaidschan-Manat (1993–2006)"
}, {
    id: "AUD",
    displayName: "Australischer Dollar",
    symbol: "AU$",
    one: "Australischer Dollar",
    other: "Australische Dollar"
}, {
    id: "BSD",
    displayName: "Bahamas-Dollar",
    symbol: "BSD",
    one: "Bahamas-Dollar",
    other: "Bahamas-Dollar"
}, {
    id: "BHD",
    displayName: "Bahrain-Dinar",
    symbol: "BHD",
    one: "Bahrain-Dinar",
    other: "Bahrain-Dinar"
}, {
    id: "BDT",
    displayName: "Bangladesch-Taka",
    symbol: "BDT",
    one: "Bangladesch-Taka",
    other: "Bangladesch-Taka"
}, {
    id: "BBD",
    displayName: "Barbados-Dollar",
    symbol: "BBD",
    one: "Barbados-Dollar",
    other: "Barbados-Dollar"
}, {
    id: "BYB",
    displayName: "Belarus-Rubel (1994–1999)",
    symbol: "BYB",
    one: "Belarus-Rubel (1994–1999)",
    other: "Belarus-Rubel (1994–1999)"
}, {
    id: "BEL",
    displayName: "Belgischer Finanz-Franc",
    symbol: "BEL",
    one: "Belgischer Finanz-Franc",
    other: "Belgische Finanz-Franc"
}, {
    id: "BEF",
    displayName: "Belgischer Franc",
    symbol: "BEF",
    one: "Belgischer Franc",
    other: "Belgische Franc"
}, {
    id: "BEC",
    displayName: "Belgischer Franc (konvertibel)",
    symbol: "BEC",
    one: "Belgischer Franc (konvertibel)",
    other: "Belgische Franc (konvertibel)"
}, {
    id: "BZD",
    displayName: "Belize-Dollar",
    symbol: "BZD",
    one: "Belize-Dollar",
    other: "Belize-Dollar"
}, {
    id: "BMD",
    displayName: "Bermuda-Dollar",
    symbol: "BMD",
    one: "Bermuda-Dollar",
    other: "Bermuda-Dollar"
}, {
    id: "BTN",
    displayName: "Bhutan-Ngultrum",
    symbol: "BTN",
    one: "Bhutan-Ngultrum",
    other: "Bhutan-Ngultrum"
}, {
    id: "BUK",
    displayName: "Birmanischer Kyat",
    one: "Birmanischer Kyat",
    other: "Birmanische Kyat"
}, {
    id: "BOB",
    displayName: "Bolivanischer Boliviano",
    symbol: "BOB",
    one: "Bolivanischer Boliviano",
    other: "Bolivianische Bolivianos"
}, {
    id: "BOL",
    displayName: "Bolivianischer Boliviano (1863–1963)",
    symbol: "BOL",
    one: "Bolivianischer Boliviano (1863–1963)",
    other: "Bolivianische Bolivianos (1863–1963)"
}, {
    id: "BOP",
    displayName: "Bolivianischer Peso",
    symbol: "BOP",
    one: "Bolivianischer Peso",
    other: "Bolivianische Peso"
}, {
    id: "BOV",
    displayName: "Boliviansiche Mvdol",
    symbol: "BOV",
    one: "Boliviansiche Mvdol",
    other: "Bolivianische Mvdol"
}, {
    id: "BAD",
    displayName: "Bosnien und Herzegowina Dinar (1992–1994)",
    symbol: "BAD",
    one: "Bosnien und Herzegowina Dinar (1992–1994)",
    other: "Bosnien und Herzegowina Dinar (1992–1994)"
}, {
    id: "BAM",
    displayName: "Bosnien und Herzegowina Konvertierbare Mark",
    symbol: "BAM",
    one: "Bosnien und Herzegowina Konvertierbare Mark",
    other: "Bosnien und Herzegowina Konvertierbare Mark"
}, {
    id: "BAN",
    displayName: "Bosnien und Herzegowina Neuer Dinar (1994–1997)",
    symbol: "BAN",
    one: "Bosnien und Herzegowina Neuer Dinar (1994–1997)",
    other: "Bosnien und Herzegowina Neue Dinar (1994–1997)"
}, {
    id: "BWP",
    displayName: "Botswanischer Pula",
    symbol: "BWP",
    one: "Botswanischer Pula",
    other: "Botswanische Pula"
}, {
    id: "BRC",
    displayName: "Brasilianischer Cruzado (1986–1989)",
    symbol: "BRC",
    one: "Brasilianischer Cruzado (1986–1989)",
    other: "Brasilianische Cruzado (1986–1989)"
}, {
    id: "BRN",
    displayName: "Brasilianischer Cruzado Novo (1989–1990)",
    symbol: "BRN",
    one: "Brasilianischer Cruzado Novo (1989–1990)",
    other: "Brasilianische Cruzado Novo (1989–1990)"
}, {
    id: "BRZ",
    displayName: "Brasilianischer Cruzeiro (1942–1967)",
    symbol: "BRZ",
    one: "Brasilianischer Cruzeiro (1942–1967)",
    other: "Brasilianischer Cruzeiro (1942–1967)"
}, {
    id: "BRE",
    displayName: "Brasilianischer Cruzeiro (1990–1993)",
    symbol: "BRE",
    one: "Brasilianischer Cruzeiro (1990–1993)",
    other: "Brasilianische Cruzeiro (1990–1993)"
}, {
    id: "BRR",
    displayName: "Brasilianischer Cruzeiro (1993–1994)",
    symbol: "BRR",
    one: "Brasilianischer Cruzeiro (1993–1994)",
    other: "Brasilianische Cruzeiro (1993–1994)"
}, {
    id: "BRB",
    displayName: "Brasilianischer Cruzeiro Novo (1967–1986)",
    symbol: "BRB",
    one: "Brasilianischer Cruzeiro Novo (1967–1986)",
    other: "Brasilianische Cruzeiro Novo (1967–1986)"
}, {
    id: "BRL",
    displayName: "Brasilianischer Real",
    symbol: "R$",
    one: "Brasilianischer Real",
    other: "Brasilianische Real"
}, {
    id: "GBP",
    displayName: "Britisches Pfund",
    symbol: "£",
    one: "Britisches Pfund",
    other: "Britische Pfund"
}, {
    id: "BND",
    displayName: "Brunei-Dollar",
    symbol: "BND",
    one: "Brunei-Dollar",
    other: "Brunei-Dollar"
}, {
    id: "BGL",
    displayName: "Bulgarische Lew (1962–1999)",
    one: "Bulgarische Lew (1962–1999)",
    other: "Bulgarische Lew (1962–1999)"
}, {
    id: "BGN",
    displayName: "Bulgarischer Lew",
    symbol: "BGN",
    one: "Bulgarischer Lew",
    other: "Bulgarische Lew"
}, {
    id: "BGO",
    displayName: "Bulgarischer Lew (1879–1952)",
    symbol: "BGJ",
    one: "Bulgarischer Lew (1879–1952)",
    other: "Bulgarische Lew (1879–1952)"
}, {
    id: "BGM",
    displayName: "Bulgarischer Lew (1952–1962)",
    symbol: "BGK",
    one: "Bulgarischer Lew (1952–1962)",
    other: "Bulgarische Lew (1952–1962)"
}, {
    id: "BIF",
    displayName: "Burundi-Franc",
    symbol: "BIF",
    one: "Burundi-Franc",
    other: "Burundi-Francs"
}, {
    id: "XOF",
    displayName: "CFA-Franc (BCEAO)",
    symbol: "CFA",
    one: "CFA-Franc (BCEAO)",
    other: "CFA-Francs (BCEAO)"
}, {
    id: "XAF",
    displayName: "CFA-Franc (BEAC)",
    symbol: "FCFA",
    one: "CFA-Franc (BEAC)",
    other: "CFA-Franc (BEAC)"
}, {
    id: "XPF",
    displayName: "CFP-Franc",
    symbol: "CFPF",
    one: "CFP-Franc",
    other: "CFP-Franc"
}, {
    id: "CLF",
    displayName: "Chilenische Unidades de Fomento",
    symbol: "CLF",
    one: "Chilenische Unidades de Fomento",
    other: "Chilenische Unidades de Fomento"
}, {
    id: "CLE",
    displayName: "Chilenischer Escudo",
    symbol: "CLE",
    one: "Chilenischer Escudo",
    other: "Chilenische Escudo"
}, {
    id: "CLP",
    displayName: "Chilenischer Peso",
    symbol: "CLP",
    one: "Chilenischer Peso",
    other: "Chilenische Pesos"
}, {
    id: "CRC",
    displayName: "Costa-Rica-Colón",
    symbol: "CRC",
    one: "Costa-Rica-Colón",
    other: "Costa-Rica-Colón"
}, {
    id: "DEM",
    displayName: "Deutsche Mark",
    symbol: "DM",
    one: "Deutsche Mark",
    other: "Deutsche Mark"
}, {
    id: "CNX",
    displayName: "Dollar der Chinesischen Volksbank",
    symbol: "CNX",
    one: "Dollar der Chinesischen Volksbank",
    other: "Dollar der Chinesischen Volksbank"
}, {
    id: "DOP",
    displayName: "Dominikanischer Peso",
    symbol: "DOP",
    one: "Dominikanischer Peso",
    other: "Dominikanische Pesos"
}, {
    id: "DJF",
    displayName: "Dschibuti-Franc",
    symbol: "DJF",
    one: "Dschibuti-Franc",
    other: "Dschibuti-Franc"
}, {
    id: "DKK",
    displayName: "Dänische Krone",
    symbol: "DKK",
    one: "Dänische Krone",
    other: "Dänische Kronen"
}, {
    id: "ECS",
    displayName: "Ecuadorianischer Sucre",
    symbol: "ECS",
    one: "Ecuadorianischer Sucre",
    other: "Ecuadorianische Sucre"
}, {
    id: "SVC",
    displayName: "El Salvador Colon",
    symbol: "SVC",
    one: "El Salvador-Colon",
    other: "El Salvador-Colon"
}, {
    id: "ERN",
    displayName: "Eritreischer Nakfa",
    symbol: "ERN",
    one: "Eritreischer Nakfa",
    other: "Eritreische Nakfa"
}, {
    id: "EEK",
    displayName: "Estnische Krone",
    symbol: "EEK",
    one: "Estnische Krone",
    other: "Estnische Kronen"
}, {
    id: "EUR",
    displayName: "Euro",
    symbol: "€",
    one: "Euro",
    other: "Euro"
}, {
    id: "XBA",
    displayName: "Europäische Rechnungseinheit",
    symbol: "XBA",
    one: "Europäische Rechnungseinheiten",
    other: "Europäische Rechnungseinheiten"
}, {
    id: "XBC",
    displayName: "Europäische Rechnungseinheit (XBC)",
    symbol: "XBC",
    one: "Europäische Rechnungseinheiten (XBC)",
    other: "Europäische Rechnungseinheiten (XBC)"
}, {
    id: "XBD",
    displayName: "Europäische Rechnungseinheit (XBD)",
    symbol: "XBD",
    one: "Europäische Rechnungseinheiten (XBD)",
    other: "Europäische Rechnungseinheiten (XBD)"
}, {
    id: "XBB",
    displayName: "Europäische Währungseinheit (XBB)",
    symbol: "XBB",
    one: "Europäische Währungseinheiten (XBB)",
    other: "Europäische Währungseinheiten (XBB)"
}, {
    id: "XEU",
    displayName: "Europäische Währungseinheit (XEU)",
    symbol: "XEU",
    one: "Europäische Währungseinheiten (XEU)",
    other: "Europäische Währungseinheiten (XEU)"
}, {
    id: "FKP",
    displayName: "Falkland-Pfund",
    symbol: "FKP",
    one: "Falkland-Pfund",
    other: "Falkland-Pfund"
}, {
    id: "FJD",
    displayName: "Fidschi-Dollar",
    symbol: "FJD",
    one: "Fidschi-Dollar",
    other: "Fidschi-Dollar"
}, {
    id: "FIM",
    displayName: "Finnische Mark",
    symbol: "FIM",
    one: "Finnische Mark",
    other: "Finnische Mark"
}, {
    id: "FRF",
    displayName: "Französischer Franc",
    symbol: "FRF",
    one: "Französischer Franc",
    other: "Französische Franc"
}, {
    id: "XFO",
    displayName: "Französischer Gold-Franc",
    symbol: "XFO",
    one: "Französische Gold-Franc",
    other: "Französische Gold-Franc"
}, {
    id: "XFU",
    displayName: "Französischer UIC-Franc",
    symbol: "XFU",
    one: "Französische UIC-Franc",
    other: "Französische UIC-Franc"
}, {
    id: "GMD",
    displayName: "Gambia-Dalasi",
    symbol: "GMD",
    one: "Gambia-Dalasi",
    other: "Gambia-Dalasi"
}, {
    id: "GEK",
    displayName: "Georgischer Kupon Larit",
    one: "Georgischer Kupon Larit",
    other: "Georgische Kupon Larit"
}, {
    id: "GEL",
    displayName: "Georgischer Lari",
    symbol: "GEL",
    one: "Georgischer Lari",
    other: "Georgische Lari"
}, {
    id: "GHS",
    displayName: "Ghanaischer Cedi",
    symbol: "GHS",
    one: "Ghanaischer Cedi",
    other: "Ghanaische Cedi"
}, {
    id: "GHC",
    displayName: "Ghanaischer Cedi (1979–2007)",
    symbol: "GHC",
    one: "Ghanaischer Cedi (1979–2007)",
    other: "Ghanaische Cedi (1979–2007)"
}, {
    id: "GIP",
    displayName: "Gibraltar-Pfund",
    symbol: "GIP",
    one: "Gibraltar-Pfund",
    other: "Gibraltar Pfund"
}, {
    id: "GRD",
    displayName: "Griechische Drachme",
    symbol: "GRD",
    one: "Griechische Drachme",
    other: "Griechische Drachmen"
}, {
    id: "GTQ",
    displayName: "Guatemaltekischer Quetzal",
    symbol: "GTQ",
    one: "Guatemaltekischer Quetzal",
    other: "Guatemaltekische Quetzales"
}, {
    id: "GWP",
    displayName: "Guinea-Bissau Peso",
    symbol: "GWP",
    one: "Guinea-Bissau Peso",
    other: "Guinea-Bissau Pesos"
}, {
    id: "GNF",
    displayName: "Guinea-Franc",
    symbol: "GNF",
    one: "Guinea-Franc",
    other: "Guinea-Franc"
}, {
    id: "GNS",
    displayName: "Guineischer Syli",
    symbol: "GNS",
    one: "Guineischer Syli",
    other: "Guineische Syli"
}, {
    id: "GYD",
    displayName: "Guyana-Dollar",
    symbol: "GYD",
    one: "Guyana-Dollar",
    other: "Guyana-Dollar"
}, {
    id: "HTG",
    displayName: "Haitianische Gourde",
    symbol: "HTG",
    one: "Haitianische Gourde",
    other: "Haitianische Gourdes"
}, {
    id: "HNL",
    displayName: "Honduras-Lempira",
    symbol: "HNL",
    one: "Honduras-Lempira",
    other: "Honduras-Lempira"
}, {
    id: "HKD",
    displayName: "Hongkong-Dollar",
    symbol: "HK$",
    one: "Hongkong-Dollar",
    other: "Hongkong-Dollar"
}, {
    id: "INR",
    displayName: "Indische Rupie",
    symbol: "₹",
    one: "Indische Rupie",
    other: "Indische Rupien"
}, {
    id: "IDR",
    displayName: "Indonesische Rupiah",
    symbol: "IDR",
    one: "Indonesische Rupiah",
    other: "Indonesische Rupiah"
}, {
    id: "IQD",
    displayName: "Irakischer Dinar",
    symbol: "IQD",
    one: "Irakischer Dinar",
    other: "Irakische Dinar"
}, {
    id: "IRR",
    displayName: "Iranischer Rial",
    symbol: "IRR",
    one: "Iranischer Rial",
    other: "Iranische Rial"
}, {
    id: "IEP",
    displayName: "Irisches Pfund",
    symbol: "IEP",
    one: "Irisches Pfund",
    other: "Irische Pfund"
}, {
    id: "ISK",
    displayName: "Isländische Krone",
    symbol: "ISK",
    one: "Isländische Krone",
    other: "Isländische Kronen"
}, {
    id: "ISJ",
    displayName: "Isländische Krone (1918–1981)",
    one: "Isländische Krone (1918–1981)",
    other: "Isländische Kronen (1918–1981)"
}, {
    id: "ILS",
    displayName: "Israelischer Neuer Schekel",
    symbol: "₪",
    one: "Israelischer Neuer Schekel",
    other: "Israelische Neue Schekel"
}, {
    id: "ILR",
    displayName: "Israelischer Schekel (1980–1985)",
    one: "Israelischer Schekel (1980–1985)",
    other: "Israelische Schekel (1980–1985)"
}, {
    id: "ILP",
    displayName: "Israelisches Pfund",
    symbol: "ILP",
    one: "Israelisches Pfund",
    other: "Israelische Pfund"
}, {
    id: "ITL",
    displayName: "Italienische Lira",
    symbol: "ITL",
    one: "Italienische Lira",
    other: "Italienische Lire"
}, {
    id: "JMD",
    displayName: "Jamaika-Dollar",
    symbol: "JMD",
    one: "Jamaika-Dollar",
    other: "Jamaika-Dollar"
}, {
    id: "JPY",
    displayName: "Japanischer Yen",
    symbol: "¥",
    one: "Japanischer Yen",
    other: "Japanische Yen"
}, {
    id: "YDD",
    displayName: "Jemen-Dinar",
    symbol: "YDD",
    one: "Jemen-Dinar",
    other: "Jemen-Dinar"
}, {
    id: "YER",
    displayName: "Jemen-Rial",
    symbol: "YER",
    one: "Jemen-Rial",
    other: "Jemen-Rial"
}, {
    id: "JOD",
    displayName: "Jordanischer Dinar",
    symbol: "JOD",
    one: "Jordanischer Dinar",
    other: "Jordanische Dinar"
}, {
    id: "YUD",
    displayName: "Jugoslawischer Dinar (1966–1990)",
    symbol: "YUD",
    one: "Jugoslawischer Dinar (1966–1990)",
    other: "Jugoslawische Dinar (1966–1990)"
}, {
    id: "YUN",
    displayName: "Jugoslawischer Dinar (konvertibel)",
    symbol: "YUN",
    one: "Jugoslawische Dinar (konvertibel)",
    other: "Jugoslawische Dinar (konvertibel)"
}, {
    id: "YUM",
    displayName: "Jugoslawischer Neuer Dinar (1994–2002)",
    symbol: "YUM",
    one: "Jugoslawischer Neuer Dinar (1994–2002)",
    other: "Jugoslawische Neue Dinar (1994–2002)"
}, {
    id: "YUR",
    displayName: "Jugoslawischer reformierter Dinar (1992–1993)",
    symbol: "YUR",
    one: "Jugoslawischer reformierter Dinar (1992–1993)",
    other: "Jugoslawische reformierte Dinar (1992–1993)"
}, {
    id: "KYD",
    displayName: "Kaiman-Dollar",
    symbol: "KYD",
    one: "Kaiman-Dollar",
    other: "Kaiman-Dollar"
}, {
    id: "KHR",
    displayName: "Kambodschanischer Riel",
    symbol: "KHR",
    one: "Kambodschanischer Riel",
    other: "Kambodschanische Riel"
}, {
    id: "CAD",
    displayName: "Kanadischer Dollar",
    symbol: "CA$",
    one: "Kanadischer Dollar",
    other: "Kanadische Dollar"
}, {
    id: "CVE",
    displayName: "Kap-Verde-Escudo",
    symbol: "CVE",
    one: "Kap-Verde-Escudo",
    other: "Kap-Verde-Escudos"
}, {
    id: "KZT",
    displayName: "Kasachischer Tenge",
    symbol: "KZT",
    one: "Kasachischer Tenge",
    other: "Kasachische Tenge"
}, {
    id: "QAR",
    displayName: "Katar-Riyal",
    symbol: "QAR",
    one: "Katar-Riyal",
    other: "Katar-Riyal"
}, {
    id: "KES",
    displayName: "Kenia-Schilling",
    symbol: "KES",
    one: "Kenia-Schilling",
    other: "Kenia-Schilling"
}, {
    id: "KGS",
    displayName: "Kirgisischer Som",
    symbol: "KGS",
    one: "Kirgisischer Som",
    other: "Kirgisische Som"
}, {
    id: "COU",
    displayName: "Kolumbianische Unidades de valor real",
    symbol: "COU",
    one: "Kolumbianische Unidad de valor real",
    other: "Kolumbianische Unidades de valor real"
}, {
    id: "COP",
    displayName: "Kolumbianischer Peso",
    symbol: "COP",
    one: "Kolumbianischer Peso",
    other: "Kolumbianische Pesos"
}, {
    id: "KMF",
    displayName: "Komoren-Franc",
    symbol: "KMF",
    one: "Komoren-Franc",
    other: "Komoren-Francs"
}, {
    id: "CDF",
    displayName: "Kongo-Franc",
    symbol: "CDF",
    one: "Kongo-Franc",
    other: "Kongo-Francs"
}, {
    id: "HRD",
    displayName: "Kroatischer Dinar",
    symbol: "HRD",
    one: "Kroatischer Dinar",
    other: "Kroatische Dinar"
}, {
    id: "HRK",
    displayName: "Kroatischer Kuna",
    symbol: "HRK",
    one: "Kroatischer Kuna",
    other: "Kroatische Kuna"
}, {
    id: "CUP",
    displayName: "Kubanischer Peso",
    symbol: "CUP",
    one: "Kubanischer Peso",
    other: "Kubanische Pesos"
}, {
    id: "CUC",
    displayName: "Kubanischer Peso (konvertibel)",
    symbol: "CUC",
    one: "Kubanischer Peso (konvertibel)",
    other: "Kubanische Pesos (konvertibel)"
}, {
    id: "KWD",
    displayName: "Kuwait-Dinar",
    symbol: "KWD",
    one: "Kuwait-Dinar",
    other: "Kuwait-Dinar"
}, {
    id: "ZMW",
    displayName: "Kwacha",
    symbol: "ZMW",
    one: "Kwacha",
    other: "Kwacha"
}, {
    id: "ZMK",
    displayName: "Kwacha (1968–2012)",
    symbol: "ZMK",
    one: "Kwacha (1968–2012)",
    other: "Kwacha (1968–2012)"
}, {
    id: "LAK",
    displayName: "Laotischer Kip",
    symbol: "LAK",
    one: "Laotischer Kip",
    other: "Laotische Kip"
}, {
    id: "LVL",
    displayName: "Lettischer Lats",
    symbol: "LVL",
    one: "Lettischer Lats",
    other: "Lettische Lats"
}, {
    id: "LVR",
    displayName: "Lettischer Rubel",
    symbol: "LVR",
    one: "Lettische Rubel",
    other: "Lettische Rubel"
}, {
    id: "LBP",
    displayName: "Libanesisches Pfund",
    symbol: "LBP",
    one: "Libanesisches Pfund",
    other: "Libanesische Pfund"
}, {
    id: "LRD",
    displayName: "Liberianischer Dollar",
    symbol: "LRD",
    one: "Liberianischer Dollar",
    other: "Liberianische Dollar"
}, {
    id: "LYD",
    displayName: "Libyscher Dinar",
    symbol: "LYD",
    one: "Libyscher Dinar",
    other: "Libysche Dinar"
}, {
    id: "LTL",
    displayName: "Litauischer Litas",
    symbol: "LTL",
    one: "Litauischer Litas",
    other: "Litauische Litas"
}, {
    id: "LTT",
    displayName: "Litauischer Talonas",
    symbol: "LTT",
    one: "Litauische Talonas",
    other: "Litauische Talonas"
}, {
    id: "LSL",
    displayName: "Loti",
    symbol: "LSL",
    one: "Loti",
    other: "Loti"
}, {
    id: "LUL",
    displayName: "Luxemburgischer Finanz-Franc",
    symbol: "LUL",
    one: "Luxemburgische Finanz-Franc",
    other: "Luxemburgische Finanz-Franc"
}, {
    id: "LUF",
    displayName: "Luxemburgischer Franc",
    symbol: "LUF",
    one: "Luxemburgische Franc",
    other: "Luxemburgische Franc"
}, {
    id: "LUC",
    displayName: "Luxemburgischer Franc (konvertibel)",
    symbol: "LUC",
    one: "Luxemburgische Franc (konvertibel)",
    other: "Luxemburgische Franc (konvertibel)"
}, {
    id: "MOP",
    displayName: "Macao-Pataca",
    symbol: "MOP",
    one: "Macao-Pataca",
    other: "Macao-Pataca"
}, {
    id: "MGA",
    displayName: "Madagaskar-Ariary",
    symbol: "MGA",
    one: "Madagaskar-Ariary",
    other: "Madagaskar-Ariary"
}, {
    id: "MGF",
    displayName: "Madagaskar-Franc",
    symbol: "MGF",
    one: "Madagaskar-Franc",
    other: "Madagaskar-Franc"
}, {
    id: "MWK",
    displayName: "Malawi-Kwacha",
    symbol: "MWK",
    one: "Malawi-Kwacha",
    other: "Malawi-Kwacha"
}, {
    id: "MYR",
    displayName: "Malaysischer Ringgit",
    symbol: "MYR",
    one: "Malaysischer Ringgit",
    other: "Malaysische Ringgit"
}, {
    id: "MVR",
    displayName: "Malediven-Rufiyaa",
    symbol: "MVR",
    one: "Malediven-Rufiyaa",
    other: "Malediven-Rupien"
}, {
    id: "MVP",
    displayName: "Malediven-Rupie (alt)",
    one: "Malediven-Rupie (alt)",
    other: "Malediven-Rupien (alt)"
}, {
    id: "MLF",
    displayName: "Malischer Franc",
    symbol: "MLF",
    one: "Malische Franc",
    other: "Malische Franc"
}, {
    id: "MTL",
    displayName: "Maltesische Lira",
    symbol: "MTL",
    one: "Maltesische Lira",
    other: "Maltesische Lira"
}, {
    id: "MTP",
    displayName: "Maltesisches Pfund",
    symbol: "MTP",
    one: "Maltesische Pfund",
    other: "Maltesische Pfund"
}, {
    id: "DDM",
    displayName: "Mark der DDR",
    symbol: "DDM",
    one: "Mark der DDR",
    other: "Mark der DDR"
}, {
    id: "MAD",
    displayName: "Marokkanischer Dirham",
    symbol: "MAD",
    one: "Marokkanischer Dirham",
    other: "Marokkanische Dirham"
}, {
    id: "MAF",
    displayName: "Marokkanischer Franc",
    symbol: "MAF",
    one: "Marokkanische Franc",
    other: "Marokkanische Franc"
}, {
    id: "MRO",
    displayName: "Mauretanischer Ouguiya",
    symbol: "MRO",
    one: "Mauretanischer Ouguiya",
    other: "Mauretanische Ouguiya"
}, {
    id: "MUR",
    displayName: "Mauritius-Rupie",
    symbol: "MUR",
    one: "Mauritius-Rupie",
    other: "Mauritius-Rupien"
}, {
    id: "MKD",
    displayName: "Mazedonischer Denar",
    symbol: "MKD",
    one: "Mazedonischer Denar",
    other: "Mazedonische Denari"
}, {
    id: "MKN",
    displayName: "Mazedonischer Denar (1992–1993)",
    symbol: "MKN",
    one: "Mazedonischer Denar (1992–1993)",
    other: "Mazedonische Denar (1992–1993)"
}, {
    id: "MXV",
    displayName: "Mexicanischer Unidad de Inversion (UDI)",
    symbol: "MXV",
    one: "Mexicanischer Unidad de Inversion (UDI)",
    other: "Mexikanische Unidad de Inversion (UDI)"
}, {
    id: "MXN",
    displayName: "Mexikanischer Peso",
    symbol: "MX$",
    one: "Mexikanischer Peso",
    other: "Mexikanische Pesos"
}, {
    id: "MXP",
    displayName: "Mexikanischer Silber-Peso (1861–1992)",
    symbol: "MXP",
    one: "Mexikanische Silber-Peso (1861–1992)",
    other: "Mexikanische Silber-Pesos (1861–1992)"
}, {
    id: "MDC",
    displayName: "Moldau-Cupon",
    symbol: "MDC",
    one: "Moldau-Cupon",
    other: "Moldau-Cupon"
}, {
    id: "MDL",
    displayName: "Moldau-Leu",
    symbol: "MDL",
    one: "Moldau-Leu",
    other: "Moldau-Leu"
}, {
    id: "MCF",
    displayName: "Monegassischer Franc",
    symbol: "MCF",
    one: "Monegassischer Franc",
    other: "Monegassische Franc"
}, {
    id: "MNT",
    displayName: "Mongolischer Tögrög",
    symbol: "MNT",
    one: "Mongolischer Tögrög",
    other: "Mongolische Tögrög"
}, {
    id: "MZE",
    displayName: "Mosambikanischer Escudo",
    one: "Mozambikanische Escudo",
    other: "Mozambikanische Escudo"
}, {
    id: "MZN",
    displayName: "Mosambikanischer Metical",
    symbol: "MZN",
    one: "Mosambikanischer Metical",
    other: "Mosambikanische Meticais"
}, {
    id: "MZM",
    displayName: "Mosambikanischer Metical (1980–2006)",
    symbol: "MZM",
    one: "Mosambikanischer Metical (1980–2006)",
    other: "Mosambikanische Meticais (1980–2006)"
}, {
    id: "MMK",
    displayName: "Myanmarischer Kyat",
    symbol: "MMK",
    one: "Myanmarischer Kyat",
    other: "Myanmarische Kyat"
}, {
    id: "NAD",
    displayName: "Namibia-Dollar",
    symbol: "NAD",
    one: "Namibia-Dollar",
    other: "Namibia-Dollar"
}, {
    id: "NPR",
    displayName: "Nepalesische Rupie",
    symbol: "NPR",
    one: "Nepalesische Rupie",
    other: "Nepalesische Rupien"
}, {
    id: "TWD",
    displayName: "Neuer Taiwan-Dollar",
    symbol: "NT$",
    one: "Neuer Taiwan-Dollar",
    other: "Neue Taiwan-Dollar"
}, {
    id: "NZD",
    displayName: "Neuseeland-Dollar",
    symbol: "NZ$",
    one: "Neuseeland-Dollar",
    other: "Neuseeland-Dollar"
}, {
    id: "NIO",
    displayName: "Nicaragua-Córdoba",
    symbol: "NIO",
    one: "Nicaragua-Córdoba",
    other: "Nicaragua-Córdobas"
}, {
    id: "NIC",
    displayName: "Nicaraguanischer Córdoba (1988–1991)",
    symbol: "NIC",
    one: "Nicaraguanischer Córdoba (1988–1991)",
    other: "Nicaraguanische Córdoba (1988–1991)"
}, {
    id: "ANG",
    displayName: "Niederländische-Antillen-Gulden",
    symbol: "ANG",
    one: "Niederländische-Antillen-Gulden",
    other: "Niederländische-Antillen-Gulden"
}, {
    id: "NLG",
    displayName: "Niederländischer Gulden",
    symbol: "NLG",
    one: "Niederländischer Gulden",
    other: "Niederländische Gulden"
}, {
    id: "NGN",
    displayName: "Nigerianischer Naira",
    symbol: "NGN",
    one: "Nigerianischer Naira",
    other: "Nigerianische Naira"
}, {
    id: "KPW",
    displayName: "Nordkoreanischer Won",
    symbol: "KPW",
    one: "Nordkoreanischer Won",
    other: "Nordkoreanische Won"
}, {
    id: "NOK",
    displayName: "Norwegische Krone",
    symbol: "NOK",
    one: "Norwegische Krone",
    other: "Norwegische Kronen"
}, {
    id: "OMR",
    displayName: "Omanischer Rial",
    symbol: "OMR",
    one: "Omanischer Rial",
    other: "Omanische Rials"
}, {
    id: "XCD",
    displayName: "Ostkaribischer Dollar",
    symbol: "EC$",
    one: "Ostkaribischer Dollar",
    other: "Ostkaribische Dollar"
}, {
    id: "PKR",
    displayName: "Pakistanische Rupie",
    symbol: "PKR",
    one: "Pakistanische Rupie",
    other: "Pakistanische Rupien"
}, {
    id: "PAB",
    displayName: "Panamaischer Balboa",
    symbol: "PAB",
    one: "Panamaischer Balboa",
    other: "Panamaische Balboas"
}, {
    id: "PGK",
    displayName: "Papua-Neuguineischer Kina",
    symbol: "PGK",
    one: "Papua-Neuguineischer Kina",
    other: "Papua-Neuguineische Kina"
}, {
    id: "PYG",
    displayName: "Paraguayischer Guaraní",
    symbol: "PYG",
    one: "Paraguayischer Guaraní",
    other: "Paraguayische Guaraníes"
}, {
    id: "PEI",
    displayName: "Peruanischer Inti",
    symbol: "PEI",
    one: "Peruanische Inti",
    other: "Peruanische Inti"
}, {
    id: "PEN",
    displayName: "Peruanischer Neuer Sol",
    symbol: "PEN",
    one: "Peruanischer Neuer Sol",
    other: "Peruanische Neue Sol"
}, {
    id: "PES",
    displayName: "Peruanischer Sol (1863–1965)",
    symbol: "PES",
    one: "Peruanischer Sol (1863–1965)",
    other: "Peruanische Sol (1863–1965)"
}, {
    id: "PHP",
    displayName: "Philippinischer Peso",
    symbol: "PHP",
    one: "Philippinischer Peso",
    other: "Philippinische Pesos"
}, {
    id: "PLZ",
    displayName: "Polnischer Zloty (1950–1995)",
    one: "Polnischer Zloty (1950–1995)",
    other: "Polnische Zloty (1950–1995)"
}, {
    id: "PLN",
    displayName: "Polnischer Złoty",
    symbol: "PLN",
    one: "Polnischer Złoty",
    other: "Polnische Złoty"
}, {
    id: "GWE",
    displayName: "Portugiesisch Guinea Escudo",
    one: "Portugiesisch Guinea Escudo",
    other: "Portugiesisch Guinea Escudo"
}, {
    id: "PTE",
    displayName: "Portugiesischer Escudo",
    symbol: "PTE",
    one: "Portugiesische Escudo",
    other: "Portugiesische Escudo"
}, {
    id: "XRE",
    displayName: "RINET Funds",
    symbol: "XRE",
    one: "RINET Funds",
    other: "RINET Funds"
}, {
    id: "XUA",
    displayName: "Rechnungseinheit der AfEB",
    symbol: "XUA",
    one: "Rechnungseinheit der AfEB",
    other: "Rechnungseinheiten der AfEB"
}, {
    id: "CNY",
    displayName: "Renminbi Yuan",
    symbol: "CN¥",
    one: "Chinesischer Yuan",
    other: "Renminbi Yuan"
}, {
    id: "RHD",
    displayName: "Rhodesischer Dollar",
    symbol: "RHD",
    one: "Rhodesische Dollar",
    other: "Rhodesische Dollar"
}, {
    id: "RWF",
    displayName: "Ruanda-Franc",
    symbol: "RWF",
    one: "Ruanda-Franc",
    other: "Ruanda-Francs"
}, {
    id: "RON",
    displayName: "Rumänischer Leu",
    symbol: "RON",
    one: "Rumänischer Leu",
    other: "Rumänische Leu"
}, {
    id: "ROL",
    displayName: "Rumänischer Leu (1952–2006)",
    symbol: "ROL",
    one: "Rumänischer Leu (1952–2006)",
    other: "Rumänische Leu (1952–2006)"
}, {
    id: "RUB",
    displayName: "Russischer Rubel",
    symbol: "RUB",
    one: "Russischer Rubel",
    other: "Russische Rubel"
}, {
    id: "RUR",
    displayName: "Russischer Rubel (1991–1998)",
    symbol: "RUR",
    one: "Russischer Rubel (1991–1998)",
    other: "Russische Rubel (1991–1998)"
}, {
    id: "XSU",
    displayName: "SUCRE",
    symbol: "XSU",
    one: "SUCRE",
    other: "SUCRE"
}, {
    id: "SBD",
    displayName: "Salomonen-Dollar",
    symbol: "SBD",
    one: "Salomonen-Dollar",
    other: "Salomonen-Dollar"
}, {
    id: "WST",
    displayName: "Samoanischer Tala",
    symbol: "WST",
    one: "Samoanischer Tala",
    other: "Samoanische Tala"
}, {
    id: "SAR",
    displayName: "Saudi-Rial",
    symbol: "SAR",
    one: "Saudi-Rial",
    other: "Saudi-Rial"
}, {
    id: "SEK",
    displayName: "Schwedische Krone",
    symbol: "SEK",
    one: "Schwedische Krone",
    other: "Schwedische Kronen"
}, {
    id: "CHF",
    displayName: "Schweizer Franken",
    symbol: "CHF",
    one: "Schweizer Franken",
    other: "Schweizer Franken"
}, {
    id: "RSD",
    displayName: "Serbischer Dinar",
    symbol: "RSD",
    one: "Serbischer Dinar",
    other: "Serbische Dinaren"
}, {
    id: "CSD",
    displayName: "Serbischer Dinar (2002–2006)",
    symbol: "CSD",
    one: "Serbischer Dinar (2002–2006)",
    other: "Serbische Dinar (2002–2006)"
}, {
    id: "SCR",
    displayName: "Seychellen-Rupie",
    symbol: "SCR",
    one: "Seychellen-Rupie",
    other: "Seychellen-Rupien"
}, {
    id: "SLL",
    displayName: "Sierra-leonischer Leone",
    symbol: "SLL",
    one: "Sierra-leonischer Leone",
    other: "Sierra-leonische Leones"
}, {
    id: "ZWD",
    displayName: "Simbabwe-Dollar (1980–2008)",
    symbol: "ZWD",
    one: "Simbabwe-Dollar (1980–2008)",
    other: "Simbabwe-Dollar (1980–2008)"
}, {
    id: "ZWR",
    displayName: "Simbabwe-Dollar (2008)",
    symbol: "ZWR",
    one: "Simbabwe-Dollar (2008)",
    other: "Simbabwe-Dollar (2008)"
}, {
    id: "ZWL",
    displayName: "Simbabwe-Dollar (2009)",
    symbol: "ZWL",
    one: "Simbabwe-Dollar (2009)",
    other: "Simbabwe-Dollar (2009)"
}, {
    id: "SGD",
    displayName: "Singapur-Dollar",
    symbol: "SGD",
    one: "Singapur-Dollar",
    other: "Singapur-Dollar"
}, {
    id: "SKK",
    displayName: "Slowakische Krone",
    symbol: "SKK",
    one: "Slowakische Kronen",
    other: "Slowakische Kronen"
}, {
    id: "SIT",
    displayName: "Slowenischer Tolar",
    symbol: "SIT",
    one: "Slowenischer Tolar",
    other: "Slowenische Tolar"
}, {
    id: "SOS",
    displayName: "Somalia-Schilling",
    symbol: "SOS",
    one: "Somalia-Schilling",
    other: "Somalia-Schilling"
}, {
    id: "XDR",
    displayName: "Sonderziehungsrechte",
    symbol: "XDR",
    one: "Sonderziehungsrechte",
    other: "Sonderziehungsrechte"
}, {
    id: "SUR",
    displayName: "Sowjetischer Rubel",
    symbol: "SUR",
    one: "Sowjetische Rubel",
    other: "Sowjetische Rubel"
}, {
    id: "ESP",
    displayName: "Spanische Peseta",
    symbol: "ESP",
    one: "Spanische Peseta",
    other: "Spanische Peseten"
}, {
    id: "ESA",
    displayName: "Spanische Peseta (A–Konten)",
    symbol: "ESA",
    one: "Spanische Peseta (A–Konten)",
    other: "Spanische Peseten (A–Konten)"
}, {
    id: "ESB",
    displayName: "Spanische Peseta (konvertibel)",
    symbol: "ESB",
    one: "Spanische Peseta (konvertibel)",
    other: "Spanische Peseten (konvertibel)"
}, {
    id: "LKR",
    displayName: "Sri-Lanka-Rupie",
    symbol: "LKR",
    one: "Sri-Lanka-Rupie",
    other: "Sri-Lanka-Rupien"
}, {
    id: "SHP",
    displayName: "St. Helena-Pfund",
    symbol: "SHP",
    one: "St. Helena-Pfund",
    other: "St. Helena-Pfund"
}, {
    id: "SDD",
    displayName: "Sudanesischer Dinar (1992–2007)",
    symbol: "SDD",
    one: "Sudanesischer Dinar (1992–2007)",
    other: "Sudanesische Dinar (1992–2007)"
}, {
    id: "SDG",
    displayName: "Sudanesisches Pfund",
    symbol: "SDG",
    one: "Sudanesisches Pfund",
    other: "Sudanesische Pfund"
}, {
    id: "SDP",
    displayName: "Sudanesisches Pfund (1957–1998)",
    symbol: "SDP",
    one: "Sudanesisches Pfund (1957–1998)",
    other: "Sudanesische Pfund (1957–1998)"
}, {
    id: "SRG",
    displayName: "Suriname Gulden",
    symbol: "SRG",
    one: "Suriname-Gulden",
    other: "Suriname-Gulden"
}, {
    id: "SRD",
    displayName: "Suriname-Dollar",
    symbol: "SRD",
    one: "Suriname-Dollar",
    other: "Suriname-Dollar"
}, {
    id: "SZL",
    displayName: "Swasiländischer Lilangeni",
    symbol: "SZL",
    one: "Swasiländischer Lilangeni",
    other: "Swasiländische Emalangeni"
}, {
    id: "SYP",
    displayName: "Syrisches Pfund",
    symbol: "SYP",
    one: "Syrisches Pfund",
    other: "Syrische Pfund"
}, {
    id: "STD",
    displayName: "São-toméischer Dobra",
    symbol: "STD",
    one: "São-toméischer Dobra",
    other: "São-toméische Dobra"
}, {
    id: "ZAR",
    displayName: "Südafrikanischer Rand",
    symbol: "ZAR",
    one: "Südafrikanischer Rand",
    other: "Südafrikanische Rand"
}, {
    id: "ZAL",
    displayName: "Südafrikanischer Rand (Finanz)",
    symbol: "ZAL",
    one: "Südafrikanischer Rand (Finanz)",
    other: "Südafrikanischer Rand (Finanz)"
}, {
    id: "KRH",
    displayName: "Südkoreanischer Hwan (1953–1962)",
    symbol: "KRH",
    one: "Südkoreanischer Hwan (1953–1962)",
    other: "Südkoreanischer Hwan (1953–1962)"
}, {
    id: "KRW",
    displayName: "Südkoreanischer Won",
    symbol: "₩",
    one: "Südkoreanischer Won",
    other: "Südkoreanische Won"
}, {
    id: "KRO",
    displayName: "Südkoreanischer Won (1945–1953)",
    symbol: "KRO",
    one: "Südkoreanischer Won (1945–1953)",
    other: "Südkoreanischer Won (1945–1953)"
}, {
    id: "SSP",
    displayName: "Südsudanesisches Pfund",
    symbol: "SSP",
    one: "Südsudanesisches Pfund",
    other: "Südsudanesische Pfund"
}, {
    id: "TJR",
    displayName: "Tadschikistan Rubel",
    symbol: "TJR",
    one: "Tadschikistan-Rubel",
    other: "Tadschikistan-Rubel"
}, {
    id: "TJS",
    displayName: "Tadschikistan-Somoni",
    symbol: "TJS",
    one: "Tadschikistan-Somoni",
    other: "Tadschikistan-Somoni"
}, {
    id: "TZS",
    displayName: "Tansania-Schilling",
    symbol: "TZS",
    one: "Tansania-Schilling",
    other: "Tansania-Schilling"
}, {
    id: "XTS",
    displayName: "Testwährung",
    symbol: "XTS",
    one: "Testwährung",
    other: "Testwährung"
}, {
    id: "THB",
    displayName: "Thailändischer Baht",
    symbol: "฿",
    one: "Thailändischer Baht",
    other: "Thailändische Baht"
}, {
    id: "TPE",
    displayName: "Timor-Escudo",
    symbol: "TPE",
    one: "Timor-Escudo",
    other: "Timor-Escudo"
}, {
    id: "TOP",
    displayName: "Tongaischer Paʻanga",
    symbol: "TOP",
    one: "Tongaischer Paʻanga",
    other: "Tongaische Paʻanga"
}, {
    id: "TTD",
    displayName: "Trinidad und Tobago-Dollar",
    symbol: "TTD",
    one: "Trinidad und Tobago-Dollar",
    other: "Trinidad und Tobago-Dollar"
}, {
    id: "CZK",
    displayName: "Tschechische Krone",
    symbol: "CZK",
    one: "Tschechische Krone",
    other: "Tschechische Kronen"
}, {
    id: "CSK",
    displayName: "Tschechoslowakische Krone",
    symbol: "CSK",
    one: "Tschechoslowakische Kronen",
    other: "Tschechoslowakische Kronen"
}, {
    id: "TND",
    displayName: "Tunesischer Dinar",
    symbol: "TND",
    one: "Tunesischer Dinar",
    other: "Tunesische Dinar"
}, {
    id: "TMT",
    displayName: "Turkmenistan-Manat",
    symbol: "TMT",
    one: "Turkmenistan-Manat",
    other: "Turkmenistan-Manat"
}, {
    id: "TMM",
    displayName: "Turkmenistan-Manat (1993–2009)",
    symbol: "TMM",
    one: "Turkmenistan-Manat (1993–2009)",
    other: "Turkmenistan-Manat (1993–2009)"
}, {
    id: "TRY",
    displayName: "Türkische Lira",
    symbol: "TRY",
    one: "Türkische Lira",
    other: "Türkische Lira"
}, {
    id: "TRL",
    displayName: "Türkische Lira (1922–2005)",
    symbol: "TRL",
    one: "Türkische Lira (1922–2005)",
    other: "Türkische Lira (1922–2005)"
}, {
    id: "USS",
    displayName: "US Dollar (Gleicher Tag)",
    symbol: "USS",
    one: "US-Dollar (Gleicher Tag)",
    other: "US-Dollar (Gleicher Tag)"
}, {
    id: "USN",
    displayName: "US Dollar (Nächster Tag)",
    symbol: "USN",
    one: "US-Dollar (Nächster Tag)",
    other: "US-Dollar (Nächster Tag)"
}, {
    id: "USD",
    displayName: "US-Dollar",
    symbol: "$",
    one: "US-Dollar",
    other: "US-Dollar"
}, {
    id: "UGX",
    displayName: "Uganda-Schilling",
    symbol: "UGX",
    one: "Uganda-Schilling",
    other: "Uganda-Schilling"
}, {
    id: "UGS",
    displayName: "Uganda-Schilling (1966–1987)",
    symbol: "UGS",
    one: "Uganda-Schilling (1966–1987)",
    other: "Uganda-Schilling (1966–1987)"
}, {
    id: "UAH",
    displayName: "Ukrainische Hrywnja",
    symbol: "UAH",
    one: "Ukrainische Hrywnja",
    other: "Ukrainische Hrywen"
}, {
    id: "UAK",
    displayName: "Ukrainischer Karbovanetz",
    symbol: "UAK",
    one: "Ukrainische Karbovanetz",
    other: "Ukrainische Karbovanetz"
}, {
    id: "XXX",
    displayName: "Unbekannte Währung",
    symbol: "XXX",
    one: "(unbekannte Währung)",
    other: "(unbekannte Währung)"
}, {
    id: "HUF",
    displayName: "Ungarischer Forint",
    symbol: "HUF",
    one: "Ungarischer Forint",
    other: "Ungarische Forint"
}, {
    id: "XAU",
    displayName: "Unze Gold",
    symbol: "XAU",
    one: "Unze Gold",
    other: "Unzen Gold"
}, {
    id: "XPD",
    displayName: "Unze Palladium",
    symbol: "XPD",
    one: "Unze Palladium",
    other: "Unzen Palladium"
}, {
    id: "XPT",
    displayName: "Unze Platin",
    symbol: "XPT",
    one: "Unze Platin",
    other: "Unzen Platin"
}, {
    id: "XAG",
    displayName: "Unze Silber",
    symbol: "XAG",
    one: "Unze Silber",
    other: "Unzen Silber"
}, {
    id: "UYU",
    displayName: "Uruguayischer Peso",
    symbol: "UYU",
    one: "Uruguayischer Peso",
    other: "Uruguayische Pesos"
}, {
    id: "UYP",
    displayName: "Uruguayischer Peso (1975–1993)",
    symbol: "UYP",
    one: "Uruguayischer Peso (1975–1993)",
    other: "Uruguayische Pesos (1975–1993)"
}, {
    id: "UYI",
    displayName: "Uruguayischer Peso (Indexierte Rechnungseinheiten)",
    symbol: "UYI",
    one: "Uruguayischer Peso (Indexierte Rechnungseinheiten)",
    other: "Uruguayische Pesos (Indexierte Rechnungseinheiten)"
}, {
    id: "UZS",
    displayName: "Usbekistan-Sum",
    symbol: "UZS",
    one: "Usbekistan-Sum",
    other: "Usbekistan-Sum"
}, {
    id: "AED",
    displayName: "VAE-Dirham",
    symbol: "AED",
    one: "VAE-Dirham",
    other: "VAE-Dirham"
}, {
    id: "VUV",
    displayName: "Vanuatu-Vatu",
    symbol: "VUV",
    one: "Vanuatu-Vatu",
    other: "Vanuatu-Vatu"
}, {
    id: "VEF",
    displayName: "Venezolanischer Bolívar",
    symbol: "VEF",
    one: "Venezolanischer Bolívar",
    other: "Venezolanische Bolívares"
}, {
    id: "VEB",
    displayName: "Venezolanischer Bolívar (1871–2008)",
    symbol: "VEB",
    one: "Venezolanischer Bolívar (1871–2008)",
    other: "Venezolanische Bolívares (1871–2008)"
}, {
    id: "ECV",
    displayName: "Verrechnungseinheit für Ecuador",
    symbol: "ECV",
    one: "Verrechnungseinheiten für Ecuador",
    other: "Verrechnungseinheiten für Ecuador"
}, {
    id: "VND",
    displayName: "Vietnamesischer Dong",
    symbol: "₫",
    one: "Vietnamesischer Dong",
    other: "Vietnamesische Dong"
}, {
    id: "VNN",
    displayName: "Vietnamesischer Dong(1978–1985)",
    symbol: "VNN",
    one: "Vietnamesischer Dong(1978–1985)",
    other: "Vietnamesische Dong(1978–1985)"
}, {
    id: "CHW",
    displayName: "WIR Franken",
    symbol: "CHW",
    one: "WIR Franken",
    other: "WIR Franken"
}, {
    id: "CHE",
    displayName: "WIR-Euro",
    symbol: "CHE",
    one: "WIR-Euro",
    other: "WIR-Euro"
}, {
    id: "BYR",
    displayName: "Weißrussischer Rubel",
    symbol: "BYR",
    one: "Weißrussischer Rubel",
    other: "Weißrussische Rubel"
}, {
    id: "ZRN",
    displayName: "Zaire-Neuer Zaïre (1993–1998)",
    symbol: "ZRN",
    one: "Zaire-Neuer Zaïre (1993–1998)",
    other: "Zaire-Neue Zaïre (1993–1998)"
}, {
    id: "ZRZ",
    displayName: "Zaire-Zaïre (1971–1993)",
    symbol: "ZRZ",
    one: "Zaire-Zaïre (1971–1993)",
    other: "Zaire-Zaïre (1971–1993)"
}, {
    id: "CYP",
    displayName: "Zypern-Pfund",
    symbol: "CYP",
    one: "Zypern Pfund",
    other: "Zypern Pfund"
}, {
    id: "EGP",
    displayName: "Ägyptisches Pfund",
    symbol: "EGP",
    one: "Ägyptisches Pfund",
    other: "Ägyptische Pfund"
}, {
    id: "GQE",
    displayName: "Äquatorialguinea-Ekwele",
    symbol: "GQE",
    one: "Äquatorialguinea-Ekwele",
    other: "Äquatorialguinea-Ekwele"
}, {
    id: "ETB",
    displayName: "Äthiopischer Birr",
    symbol: "ETB",
    one: "Äthiopischer Birr",
    other: "Äthiopische Birr"
}, {
    id: "ATS",
    displayName: "Österreichischer Schilling",
    symbol: "öS",
    one: "Österreichischer Schilling",
    other: "Österreichische Schilling"
} ];

module.exports = inter;