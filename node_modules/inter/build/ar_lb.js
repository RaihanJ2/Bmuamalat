function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./ar.js"), inter = defaults({
    renderers: {}
}, P);

var _22z1 = {
    displayName: "العصر"
}, _22z2 = {
    displayName: "اليوم"
}, _22z3 = {
    all: {
        leap: "{0}bis"
    }
}, _22z4 = {
    displayName: "التوقيت"
}, _22z5 = {
    a: "h a – h a",
    h: "h–h a"
}, _22z6 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _22z7 = {
    d: "M/d – M/d",
    M: "M/d – M/d"
}, _22z8 = [ "ح", "ن", "ث", "ر", "خ", "ج", "س" ], _22z9 = {
    d: "MMM d–d",
    M: "d MMM – d MMM"
}, _22z10 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _22z11 = {
    wide: [ "هـ" ],
    abbreviated: [ "هـ" ]
}, _22z12 = [ "Before R.O.C.", "جمهورية الصي" ], _22z13 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _22z14 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _22z15 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _22z16 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _22z17 = {
    M: "M‏/y – M‏/y G",
    y: "M‏/y – M‏/y G"
}, _22z18 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _22z19 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _22z20 = {
    M: "MMM – MMM، y G",
    y: "MMM، y – MMM، y G"
}, _22z21 = {
    d: "E، d – E، d MMM",
    M: "E، d MMM – E، d MMM"
}, _22z22 = {
    d: "E، d/‏M –‏ E، d/‏M",
    M: "E، d/‏M – E، d/‏M"
}, _22z23 = {
    M: "MMMM – MMMM، y G",
    y: "MMMM، y – MMMM، y G"
}, _22z24 = [ "ك", "ش", "آ", "ن", "أ", "ح", "ت", "آ", "أ", "ت", "ت", "ك" ], _22z25 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _22z26 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _22z27 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _22z28 = {
    "0": "هذا الربع",
    "1": "الربع القادم",
    "-1": "الربع الأخير"
}, _22z29 = {
    "0": "هذا الشهر",
    "1": "الشهر التالي",
    "-1": "الشهر الماضي"
}, _22z30 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _22z31 = [ "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩", "١٠", "١١", "١٢" ], _22z32 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _22z33 = {
    "0": "الأحد الحالي",
    "1": "الأحد القادم",
    "-1": "الأحد الماضي"
}, _22z34 = {
    "0": "السبت الحالي",
    "1": "السبت القادم",
    "-1": "السبت الماضي"
}, _22z35 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _22z36 = [ "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩", "١٠", "١١", "١٢", "١٣" ], _22z37 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _22z38 = {
    "0": "السنة الحالية",
    "1": "السنة التالية",
    "-1": "السنة الماضية"
}, _22z39 = {
    "0": "هذا الأسبوع",
    "1": "الأسبوع التالي",
    "-1": "الأسبوع الماضي"
}, _22z40 = {
    "0": "الخميس الحالي",
    "1": "الخميس القادم",
    "-1": "الخميس الماضي"
}, _22z41 = {
    "0": "الجمعة الحالي",
    "1": "الجمعة القادم",
    "-1": "الجمعة الماضي"
}, _22z42 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _22z43 = {
    "0": "اليوم",
    "1": "غدًا",
    "2": "بعد الغد",
    "-2": "أول أمس",
    "-1": "أمس"
}, _22z44 = [ "الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع" ], _22z45 = {
    "0": "الاثنين الحالي",
    "1": "الاثنين القادم",
    "-1": "الاثنين الماضي"
}, _22z46 = {
    "0": "الثلاثاء الحالي",
    "1": "الثلاثاء القادم",
    "-1": "الثلاثاء الماضي"
}, _22z47 = {
    "0": "الأربعاء الحالي",
    "1": "الأربعاء القادم",
    "-1": "الأربعاء الماضي"
}, _22z48 = {
    relative: _22z33
}, _22z49 = {
    relative: _22z34
}, _22z50 = {
    d: "d–d MMM، y G",
    M: "d MMM – d MMM، y G",
    y: "d MMM، y – d MMM، y G"
}, _22z51 = [ "الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت" ], _22z52 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _22z53 = {
    relative: _22z40
}, _22z54 = {
    relative: _22z41
}, _22z55 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _22z56 = {
    relative: _22z45
}, _22z57 = {
    d: "d‏/M‏/y – d‏/M‏/y G",
    M: "d‏/M‏/y – d‏/M‏/y G",
    y: "d‏/M‏/y – d‏/M‏/y G"
}, _22z58 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _22z59 = {
    relative: _22z46
}, _22z60 = {
    relative: _22z47
}, _22z61 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _22z62 = {
    zero: "0 ألف",
    one: "0 ألف",
    two: "0 ألف",
    few: "0 آلاف",
    many: "0 ألف",
    other: "0 ألف"
}, _22z63 = {
    zero: "0 ألف",
    one: "0 ألف",
    two: "0 ألف",
    few: "0 آلاف",
    many: "0 ألف",
    other: "0 ألف"
}, _22z64 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _22z65 = {
    zero: "00 ألف",
    one: "00 ألف",
    two: "00 ألف",
    few: "00 ألف",
    many: "00 ألف",
    other: "00 ألف"
}, _22z66 = {
    zero: "00 ألف",
    one: "00 ألف",
    two: "00 ألف",
    few: "00 ألف",
    many: "00 ألف",
    other: "00 ألف"
}, _22z67 = {
    zero: "0 مليو",
    one: "0 مليو",
    two: "0 مليو",
    few: "0 مليو",
    many: "0 مليو",
    other: "0 مليو"
}, _22z68 = {
    zero: "0 مليا",
    one: "0 مليا",
    two: "0 مليا",
    few: "0 مليا",
    many: "0 مليا",
    other: "0 مليا"
}, _22z69 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _22z70 = {
    d: "E، d – E، d MMM، y G",
    M: "E، d MMM – E، d MMM، y G",
    y: "E، d MMM، y – E، d MMM، y G"
}, _22z71 = {
    zero: "000 ألف",
    one: "000 ألف",
    two: "000 ألف",
    few: "000 ألف",
    many: "000 ألف",
    other: "000 ألف"
}, _22z72 = {
    zero: "0 مليار",
    one: "0 مليار",
    two: "0 مليار",
    few: "0 مليار",
    many: "0 مليار",
    other: "0 مليار"
}, _22z73 = {
    zero: "000 ألف",
    one: "000 ألف",
    two: "000 ألف",
    few: "000 ألف",
    many: "000 ألف",
    other: "000 ألف"
}, _22z74 = {
    zero: "00 مليو",
    one: "00 مليو",
    two: "00 مليو",
    few: "00 مليو",
    many: "00 مليو",
    other: "00 مليو"
}, _22z75 = {
    zero: "00 مليا",
    one: "00 مليا",
    two: "00 مليا",
    few: "00 مليا",
    many: "00 مليا",
    other: "00 مليا"
}, _22z76 = {
    zero: "0 ترليو",
    one: "0 ترليو",
    two: "0 ترليو",
    few: "0 ترليو",
    many: "0 ترليو",
    other: "0 ترليو"
}, _22z77 = {
    zero: "¤ 0 ألف",
    one: "¤ 0 ألف",
    two: "¤ 0 ألف",
    few: "¤ 0 ألف",
    many: "¤ 0 ألف",
    other: "¤ 0 ألف"
}, _22z78 = {
    zero: "0 مليون",
    one: "0 مليون",
    two: "0 مليون",
    few: "0 ملايين",
    many: "0 مليون",
    other: "0 مليون"
}, _22z79 = [ "فرفردن", "أذربيهشت", "خرداد", "تار", "مرداد", "شهرفار", "مهر", "آيان", "آذر", "دي", "بهمن", "اسفندار" ], _22z80 = {
    zero: "00 مليار",
    one: "00 مليار",
    two: "00 مليار",
    few: "00 مليار",
    many: "00 مليار",
    other: "00 مليار"
}, _22z81 = {
    zero: "000 مليو",
    one: "000 مليو",
    two: "000 مليو",
    few: "000 مليو",
    many: "000 مليو",
    other: "000 مليو"
}, _22z82 = {
    zero: "000 مليا",
    one: "000 مليا",
    two: "000 مليا",
    few: "000 مليا",
    many: "000 مليا",
    other: "000 مليا"
}, _22z83 = {
    zero: "00 ترليو",
    one: "00 ترليو",
    two: "00 ترليو",
    few: "00 ترليو",
    many: "00 ترليو",
    other: "00 ترليو"
}, _22z84 = {
    zero: "¤ 00 ألف",
    one: "¤ 00 ألف",
    two: "¤ 00 ألف",
    few: "¤ 00 ألف",
    many: "¤ 00 ألف",
    other: "¤ 00 ألف"
}, _22z85 = {
    zero: "¤ 0 مليو",
    one: "¤ 0 مليو",
    two: "¤ 0 مليو",
    few: "¤ 0 مليو",
    many: "¤ 0 مليو",
    other: "¤ 0 مليو"
}, _22z86 = {
    zero: "¤ 0 مليا",
    one: "¤ 0 مليا",
    two: "¤ 0 مليا",
    few: "¤ 0 مليا",
    many: "¤ 0 مليا",
    other: "¤ 0 مليا"
}, _22z87 = {
    d: "E، dd‏/MM‏/y – E، dd‏/MM‏/y G",
    M: "E، d‏/M‏/y – E، d‏/M‏/y G",
    y: "E، d‏/M‏/y – E، d‏/M‏/y G"
}, _22z88 = {
    zero: "00 مليون",
    one: "00 مليون",
    two: "00 مليون",
    few: "00 ملايين",
    many: "00 مليون",
    other: "00 مليون"
}, _22z89 = [ "مسكريم", "تكمت", "هدار", "تهساس", "تر", "يكتت", "مجابيت", "ميازيا", "جنبت", "سين", "هامل", "نهاس", "باجمن" ], _22z90 = [ "توت", "بابه", "هاتور", "كيهك", "طوبة", "أمشير", "برمهات", "برمودة", "بشنس", "بؤونة", "أبيب", "مسرى", "نسيئ" ], _22z91 = {
    zero: "000 مليون",
    one: "000 مليون",
    two: "000 مليون",
    few: "000 مليون",
    many: "000 مليون",
    other: "000 مليون"
}, _22z92 = {
    zero: "000 مليار",
    one: "000 مليار",
    two: "000 مليار",
    few: "000 مليار",
    many: "000 مليار",
    other: "000 مليار"
}, _22z93 = {
    zero: "000 ترليو",
    one: "000 ترليو",
    two: "000 ترليو",
    few: "000 ترليو",
    many: "000 ترليو",
    other: "000 ترليو"
}, _22z94 = {
    zero: "¤ 000 ألف",
    one: "¤ 000 ألف",
    two: "¤ 000 ألف",
    few: "¤ 000 ألف",
    many: "¤ 000 ألف",
    other: "¤ 000 ألف"
}, _22z95 = {
    zero: "¤ 00 مليو",
    one: "¤ 00 مليو",
    two: "¤ 00 مليو",
    few: "¤ 00 مليو",
    many: "¤ 00 مليو",
    other: "¤ 00 مليو"
}, _22z96 = {
    zero: "¤ 00 مليا",
    one: "¤ 00 مليا",
    two: "¤ 00 مليا",
    few: "¤ 00 مليا",
    many: "¤ 00 مليا",
    other: "¤ 00 مليا"
}, _22z97 = {
    zero: "¤ 0 ترليو",
    one: "¤ 0 ترليو",
    two: "¤ 0 ترليو",
    few: "¤ 0 ترليو",
    many: "¤ 0 ترليو",
    other: "¤ 0 ترليو"
}, _22z98 = {
    zero: "0 تريليون",
    one: "0 تريليون",
    two: "0 تريليون",
    few: "0 تريليونات",
    many: "0 تريليون",
    other: "0 تريليون"
}, _22z99 = [ "تشري", "مرحشوان", "كيسلو", "طيفت", "شباط", "آذار الأول", "آذار", "نيسان", "أيار", "سيفان", "تموز", "آب", "أيلول" ], _22z100 = {
    zero: "00 تريليون",
    one: "00 تريليون",
    two: "00 تريليون",
    few: "00 تريليون",
    many: "00 تريليون",
    other: "00 تريليون"
}, _22z101 = {
    zero: "¤ 000 مليو",
    one: "¤ 000 مليو",
    two: "¤ 000 مليو",
    few: "¤ 000 مليو",
    many: "¤ 000 مليو",
    other: "¤ 000 مليو"
}, _22z102 = {
    zero: "¤ 000 مليا",
    one: "¤ 000 مليا",
    two: "¤ 000 مليا",
    few: "¤ 000 مليا",
    many: "¤ 000 مليا",
    other: "¤ 000 مليا"
}, _22z103 = {
    zero: "¤ 00 ترليو",
    one: "¤ 00 ترليو",
    two: "¤ 00 ترليو",
    few: "¤ 00 ترليو",
    many: "¤ 00 ترليو",
    other: "¤ 00 ترليو"
}, _22z104 = {
    zero: "000 تريليون",
    one: "000 تريليون",
    two: "000 تريليون",
    few: "000 تريليون",
    many: "000 تريليون",
    other: "000 تريليون"
}, _22z105 = {
    zero: "¤ 000 ترليو",
    one: "¤ 000 ترليو",
    two: "¤ 000 ترليو",
    few: "¤ 000 ترليو",
    many: "¤ 000 ترليو",
    other: "¤ 000 ترليو"
}, _22z106 = {
    zero: "قبل {0} سنة",
    one: "قبل سنة واحدة",
    two: "قبل سنتين",
    few: "قبل {0} سنوات",
    many: "قبل {0} سنة",
    other: "قبل {0} سنة"
}, _22z107 = {
    zero: "قبل {0} شهر",
    one: "قبل شهر واحد",
    two: "قبل شهرين",
    few: "قبل {0} أشهر",
    many: "قبل {0} شهرًا",
    other: "قبل {0} شهر"
}, _22z108 = {
    zero: "قبل {0} يوم",
    one: "قبل يوم واحد",
    two: "قبل يومين",
    few: "قبل {0} أيام",
    many: "قبل {0} يومًا",
    other: "قبل {0} يوم"
}, _22z109 = {
    zero: "قبل {0} شهر",
    one: "قبل شهر واحد",
    two: "قبل شهرين",
    few: "خلال {0} أشهر",
    many: "قبل {0} شهرًا",
    other: "قبل {0} شهر"
}, _22z110 = [ "كانون الثاني", "شباط", "آذار", "نيسان", "أيار", "حزيران", "تموز", "آب", "أيلول", "تشرين الأول", "تشرين الثاني", "كانون الأول" ], _22z111 = {
    zero: "قبل {0} ساعة",
    one: "قبل ساعة واحدة",
    two: "قبل ساعتين",
    few: "قبل {0} ساعات",
    many: "قبل {0} ساعة",
    other: "قبل {0} ساعة"
}, _22z112 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _22z113 = {
    zero: "خلال {0} سنة",
    one: "خلال سنة واحدة",
    two: "خلال سنتين",
    few: "خلال {0} سنوات",
    many: "خلال {0} سنة",
    other: "خلال {0} سنة"
}, _22z114 = {
    zero: "خلال {0} شهر",
    one: "خلال شهر واحد",
    two: "خلال شهرين",
    few: "خلال {0} أشهر",
    many: "خلال {0} شهرًا",
    other: "خلال {0} شهر"
}, _22z115 = {
    zero: "خلال {0} يوم",
    one: "خلال يوم واحد",
    two: "خلال يومين",
    few: "خلال {0} أيام",
    many: "خلال {0} يومًا",
    other: "خلال {0} يوم"
}, _22z116 = [ "محرم", "صفر", "ربيع الأول", "ربيع الآخر", "جمادى الأولى", "جمادى الآخرة", "رجب", "شعبان", "رمضان", "شوال", "ذو القعدة", "ذو الحجة" ], _22z117 = {
    zero: "قبل {0} دقيقة",
    one: "قبل دقيقة واحدة",
    two: "قبل دقيقتين",
    few: "قبل {0} دقائق",
    many: "قبل {0} دقيقة",
    other: "قبل {0} دقيقة"
}, _22z118 = {
    zero: "قبل {0} ثانية",
    one: "قبل ثانية واحدة",
    two: "قبل ثانيتين",
    few: "قبل {0} ثوانِ",
    many: "قبل {0} ثانية",
    other: "قبل {0} ثانية"
}, _22z119 = {
    zero: "قبل {0} ثانية",
    one: "قبل ثانية واحدة",
    two: "قبل ثانيتين",
    few: "قبل {0} ثوانٍ",
    many: "قبل {0} ثانية",
    other: "قبل {0} ثانية"
}, _22z120 = {
    zero: "خلال {0} ساعة",
    one: "خلال ساعة واحدة",
    two: "خلال ساعتين",
    few: "خلال {0} ساعات",
    many: "خلال {0} ساعة",
    other: "خلال {0} ساعة"
}, _22z121 = {
    zero: "قبل {0} أسبوع",
    one: "قبل أسبوع واحد",
    two: "قبل أسبوعين",
    few: "قبل {0} أسابيع",
    many: "قبل {0} أسبوعًا",
    other: "قبل {0} أسبوع"
}, _22z122 = {
    zero: "خلال {0} دقيقة",
    one: "خلال دقيقة واحدة",
    two: "خلال دقيقتين",
    few: "خلال {0} دقائق",
    many: "خلال {0} دقيقة",
    other: "خلال {0} دقيقة"
}, _22z123 = {
    zero: "خلال {0} ثانية",
    one: "خلال ثانية واحدة",
    two: "خلال ثانيتين",
    few: "خلال {0} ثوانِ",
    many: "خلال {0} ثانية",
    other: "خلال {0} ثانية"
}, _22z124 = {
    zero: "خلال {0} ثانية",
    one: "خلال ثانية واحدة",
    two: "خلال ثانيتين",
    few: "خلال {0} ثوانٍ",
    many: "خلال {0} ثانية",
    other: "خلال {0} ثانية"
}, _22z125 = {
    zero: "خلال {0} أسبوع",
    one: "خلال أسبوع واحد",
    two: "خلال أسبوعين",
    few: "خلال {0} أسابيع",
    many: "خلال {0} أسبوعًا",
    other: "خلال {0} أسبوع"
}, _22z126 = {
    zero: "قبل {0} ربع سنة",
    one: "قبل ربع سنة واحد",
    two: "قبل ربعي سنة",
    few: "قبل {0} أرباع سنة",
    many: "قبل {0} ربع سنة",
    other: "قبل {0} ربع سنة"
}, _22z127 = {
    zero: "خلال {0} أسبوع",
    one: "خلال أسبوع واحد",
    two: "خلال {0} أسبوعين",
    few: "خلال {0} أسابيع",
    many: "خلال {0} أسبوعًا",
    other: "خلال {0} أسبوع"
}, _22z128 = {
    zero: "خلال {0} ربع سنة",
    one: "خلال ربع سنة واحد",
    two: "خلال ربعي سنة",
    few: "خلال {0} أرباع سنة",
    many: "خلال {0} ربع سنة",
    other: "خلال {0} ربع سنة"
}, _22z129 = {
    am: "ص",
    pm: "م",
    morning1: "فجرا",
    morning2: "صباحًا",
    afternoon1: "ظهرًا",
    afternoon2: "بعد الظهر",
    evening1: "مساءً",
    night1: "منتصف الليل",
    night2: "ليلاً"
}, _22z130 = {
    am: "صباحًا",
    pm: "مساءً",
    morning1: "فجرا",
    morning2: "صباحًا",
    afternoon1: "ظهرًا",
    afternoon2: "بعد الظهر",
    evening1: "مساءً",
    night1: "منتصف الليل",
    night2: "ليلاً"
}, _22z131 = {
    abbreviated: _22z44,
    narrow: [ "١", "٢", "٣", "٤" ],
    wide: _22z44
}, _22z132 = {
    decimal: ",",
    group: ".",
    list: "؛",
    percentSign: "٪",
    plusSign: "‏+",
    minusSign: "‏-",
    exponential: "اس",
    superscriptingExponent: "×",
    perMille: "؉",
    infinity: "∞",
    nan: "ليس رقم",
    timeSeparator: ":"
}, _22z133 = {
    decimal: ",",
    group: ".",
    list: ";",
    percentSign: "٪",
    plusSign: "‎+",
    minusSign: "‎-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "ليس رقمًا",
    timeSeparator: ":"
}, _22z134 = {
    symbols: _22z132
}, _22z135 = {
    format: _22z55,
    numeric: _22z3,
    standAlone: _22z55
}, _22z136 = {
    symbols: _22z132,
    digits: "renderSpelloutCardinal"
}, _22z137 = {
    abbreviated: _22z58,
    narrow: _22z30,
    wide: _22z58
}, _22z138 = {
    symbols: _22z132,
    digits: "renderSpelloutCardinalFinancial"
}, _22z139 = {
    future: _22z113,
    past: _22z106
}, _22z140 = {
    future: _22z114,
    past: _22z107
}, _22z141 = {
    future: _22z115,
    past: _22z108
}, _22z142 = {
    future: _22z114,
    past: _22z109
}, _22z143 = {
    abbreviated: _22z61,
    narrow: _22z61,
    wide: _22z61
}, _22z144 = {
    future: _22z120,
    past: _22z111
}, _22z145 = {
    format: _22z143
}, _22z146 = {
    abbreviated: _22z79,
    narrow: _22z30,
    wide: _22z79
}, _22z147 = {
    abbreviated: _22z51,
    narrow: _22z8,
    wide: _22z51,
    "short": _22z51
}, _22z148 = {
    future: _22z122,
    past: _22z117
}, _22z149 = {
    future: _22z123,
    past: _22z118
}, _22z150 = {
    future: _22z124,
    past: _22z119
}, _22z151 = {
    future: _22z125,
    past: _22z121
}, _22z152 = {
    future: _22z127,
    past: _22z121
}, _22z153 = {
    abbreviated: _22z89,
    narrow: _22z37,
    wide: _22z89
}, _22z154 = {
    abbreviated: _22z90,
    narrow: _22z36,
    wide: _22z90
}, _22z155 = {
    displayName: "يوم",
    relativeTime: _22z141
}, _22z156 = {
    displayName: "السنة",
    relativeTime: _22z139
}, _22z157 = {
    displayName: "الشهر",
    relativeTime: _22z140
}, _22z158 = {
    displayName: "الشهر",
    relativeTime: _22z142
}, _22z159 = {
    abbreviated: _22z99,
    narrow: _22z37,
    wide: _22z99
}, _22z160 = {
    future: _22z128,
    past: _22z126
}, _22z161 = {
    displayName: "الساعات",
    relativeTime: _22z144
}, _22z162 = {
    displayName: "الدقائق",
    relativeTime: _22z148
}, _22z163 = {
    displayName: "الثواني",
    relativeTime: _22z150
}, _22z164 = {
    abbreviated: _22z110,
    narrow: _22z24,
    wide: _22z110
}, _22z165 = {
    displayName: "الأسبوع",
    relativeTime: _22z151
}, _22z166 = {
    displayName: "الأسبوع",
    relativeTime: _22z152
}, _22z167 = {
    abbreviated: _22z112,
    narrow: _22z30,
    wide: _22z112
}, _22z168 = {
    abbreviated: _22z116,
    narrow: _22z31,
    wide: _22z116
}, _22z169 = {
    displayName: "الثواني",
    relative: [ "الآن" ],
    relativeTime: _22z149
}, _22z170 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "r-MM-dd h:mm a",
    mediumDateTime: "r MMM d h:mm:ss a",
    longDateTime: "r(U) MMMM d h:mm:ss a z",
    fullDateTime: "r(U) MMMM d, EEEE h:mm:ss a zzzz"
}, _22z171 = {
    displayName: "الشهر",
    relative: _22z29,
    relativeTime: _22z140
}, _22z172 = {
    format: _22z131,
    standAlone: _22z131
}, _22z173 = {
    displayName: "يوم",
    relative: _22z43,
    relativeTime: _22z141
}, _22z174 = {
    displayName: "السنة",
    relative: _22z38,
    relativeTime: _22z139
}, _22z175 = {
    fullDate: "EEEE، d MMMM، y G",
    longDate: "d MMMM، y G",
    mediumDate: "d MMM، y G",
    shortDate: "d‏/M‏/y GGGGG",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "d‏/M‏/y GGGGG h:mm a",
    mediumDateTime: "d MMM، y G h:mm:ss a",
    longDateTime: "d MMMM، y G h:mm:ss a z",
    fullDateTime: "EEEE، d MMMM، y G h:mm:ss a zzzz"
}, _22z176 = {
    displayName: "الأسبوع",
    relative: _22z39,
    relativeTime: _22z151
}, _22z177 = {
    displayName: "ربع السنة",
    relative: _22z28,
    relativeTime: _22z160
}, _22z178 = {
    abbreviated: _22z129,
    narrow: _22z129,
    wide: _22z129
}, _22z179 = {
    abbreviated: _22z129,
    narrow: _22z129,
    wide: _22z130
}, _22z180 = {
    format: _22z137,
    standAlone: _22z137
}, _22z181 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _22z182 = {
    d: "d",
    E: "ccc",
    Ed: "E، d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d MMM، y G",
    GyMMMEd: "E، d MMM، y G",
    M: "L",
    Md: "d/‏M",
    MEd: "E، d/M",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E، d MMM",
    MMMMd: "d MMMM",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M‏/y G",
    yyyyMd: "d‏/M‏/y G",
    yyyyMEd: "E، d/‏M/‏y G",
    yyyyMMM: "MMM، y G",
    yyyyMMMd: "d MMM، y G",
    yyyyMMMEd: "E، d MMM، y G",
    yyyyMMMM: "MMMM، y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    ms: "mm:ss",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _22z183 = {
    format: _22z147,
    standAlone: _22z147
}, _22z184 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _22z185 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _22z186 = {
    format: _22z164,
    standAlone: _22z164
}, _22z187 = {
    format: _22z168,
    standAlone: _22z168
}, _22z188 = {
    basic: _22z170,
    cldr: _22z181
}, _22z189 = {
    basic: _22z175,
    cldr: _22z182
}, _22z190 = {
    format: _22z178,
    standAlone: _22z179
}, _22z191 = {
    d: {
        d: "d–d"
    },
    h: _22z5,
    H: {
        H: "HH–HH"
    },
    hm: _22z32,
    Hm: _22z13,
    hmv: _22z42,
    Hmv: _22z16,
    hv: _22z6,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _22z18,
    MEd: _22z25,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _22z10,
    MMMEd: _22z26,
    y: {
        y: "U–U"
    },
    yM: _22z14,
    yMd: _22z52,
    yMEd: _22z69,
    yMMM: _22z15,
    yMMMd: _22z35,
    yMMMEd: _22z64,
    yMMMM: _22z19
}, _22z192 = {
    d: {
        d: "d–d"
    },
    h: _22z5,
    H: {
        H: "HH–HH"
    },
    hm: _22z32,
    Hm: _22z13,
    hmv: _22z42,
    Hmv: _22z16,
    hv: _22z6,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _22z7,
    MEd: _22z22,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _22z9,
    MMMEd: _22z21,
    MMMM: {
        M: "LLLL–LLLL"
    },
    y: {
        y: "y–y G"
    },
    yM: _22z17,
    yMd: _22z57,
    yMEd: _22z87,
    yMMM: _22z20,
    yMMMd: _22z50,
    yMMMEd: _22z70,
    yMMMM: _22z23
}, _22z193 = {
    "1000": _22z63,
    "10000": _22z66,
    "100000": _22z73,
    "1000000": _22z67,
    "10000000": _22z74,
    "100000000": _22z81,
    "1000000000": _22z68,
    "10000000000": _22z75,
    "100000000000": _22z82,
    "1000000000000": _22z76,
    "10000000000000": _22z83,
    "100000000000000": _22z93
}, _22z194 = {
    beforeCurrency: _22z184,
    afterCurrency: _22z184
}, _22z195 = {
    "1000": _22z62,
    "10000": _22z65,
    "100000": _22z71,
    "1000000": _22z78,
    "10000000": _22z88,
    "100000000": _22z91,
    "1000000000": _22z72,
    "10000000000": _22z80,
    "100000000000": _22z92,
    "1000000000000": _22z98,
    "10000000000000": _22z100,
    "100000000000000": _22z104
}, _22z196 = {
    "1000": _22z77,
    "10000": _22z84,
    "100000": _22z94,
    "1000000": _22z85,
    "10000000": _22z95,
    "100000000": _22z101,
    "1000000000": _22z86,
    "10000000000": _22z96,
    "100000000000": _22z102,
    "1000000000000": _22z97,
    "10000000000000": _22z103,
    "100000000000000": _22z105
}, _22z197 = {
    abbreviated: _22z185,
    narrow: _22z185,
    wide: _22z185
}, _22z198 = {
    format: _22z197
}, _22z199 = [ "تيكا", "هاكتشي", "هاكهو", "شتشو", "تيهو", "كيين", "وادو", "رييكي", "يورو", "جينكي", "تمبيو", "تمبيو-كامبو", "تمبيو-شوهو", "تمبيو-هوجي", "تمفو-جينجو", "جينجو-كيين", "هوكي", "تن-أو", "إنرياكو", "ديدو", "كونين", "تنتشو", "شووا (٨٣٤–٨٤٨)‏", "كاجو", "نينجو", "سيكو", "تنان", "جوجان", "جينكيي", "نينا", "كامبيو", "شوتاي", "انجي", "انتشو", "شوهيي", "تنجيو", "تنرياكو", "تنتوكو", "أووا", "كوهو", "آنا", "تينروكو", "تن-نن", "جوجن", "تنجن", "إيكان", "كانا", "اي-ان", "ايسو", "شورياكو (٩٩٠–٩٩٥)‏", "تشوتوكو", "تشوهو", "كانكو", "تشووا", "كانين", "جاين", "مانجو", "تشوجين", "تشورياكو", "تشوكيو (١٠٤٠–١٠٤٤)‏", "كانتوكو", "ايشو (١٠٤٦–١٠٥٣)‏", "تينجي", "كوهيي", "جيرياكو", "انكيو (١٠٦٩–١٠٧٤)‏", "شوهو (١٠٧٤–١٠٧٧)‏", "شورياكو (١٠٧٧–١٠٨١)‏", "ايهو", "أوتوكو", "كانجي", "كاهو", "ايتشو", "شوتوكو", "كووا (١٠٩٩–١١٠٤)‏", "تشوجي", "كاشو", "تنين", "تن-اي", "ايكيو (١١١٣–١١١٨)‏", "جن-اي", "هوان", "تنجي", "ديجي", "تنشو (١١٣١–١١٣٢)‏", "تشوشو", "هوين", "ايجي", "كوجي (١١٤٢–١١٤٤)‏", "تنيو", "كيوان", "نينبيي", "كيوجو", "هجين", "هيجي", "ايرياكو", "أوهو", "تشوكان", "ايمان", "نين-ان", "كاو", "شون", "أنجين", "جيشو", "يووا", "جيي", "جنريوكو", "بنجي", "كنكيو", "شوجي", "كنين", "جنكيو (١٢٠٤–١٢٠٦)‏", "كن-اي", "شوجن (١٢٠٧–١٢١١)‏", "كنرياكو", "كنبو (١٢١٣–١٢١٩)‏", "شوكيو", "جو", "جيننين", "كروكو", "أنتيي", "كنكي", "جويي", "تمبكو", "بنرياكو", "كاتيي", "رياكنين", "ان-أو", "نينجي", "كنجين", "هوجي", "كنتشو", "كوجن", "شوكا", "شوجن (١٢٥٩–١٢٦٠)‏", "بن-أو", "كوتشو", "بن-اي", "كنجي", "كوان", "شوو (١٢٨٨–١٢٩٣)‏", "اينين", "شوان", "كنجن", "كجن", "توكجي", "انكي", "أوتشو", "شووا (١٣١٢–١٣١٧)‏", "بنبو", "جنو", "جنكيو (١٣٢١–١٣٢٤)‏", "شوتشو (١٣٢٤–١٣٢٦)‏", "كريكي", "جنتكو", "جنكو", "كمو", "إنجن", "كوككو", "شوهي", "كنتكو", "بنتشو", "تنجو", "كورياكو", "كووا (١٣٨١–١٣٨٤)‏", "جنتشو", "مييتكو (١٣٨٤–١٣٨٧)‏", "كاكي", "كو", "مييتكو (١٣٩٠–١٣٩٤)‏", "أويي", "شوتشو (١٤٢٨–١٤٢٩)‏", "ايكيو (١٤٢٩–١٤٤١)‏", "ككيتسو", "بن-أن", "هوتكو", "كيوتكو", "كوشو", "تشوركو", "كنشو", "بنشو", "أونين", "بنمي", "تشوكيو (١٤٨٧–١٤٨٩)‏", "انتكو", "ميو", "بنكي", "ايشو (١٥٠٤–١٥٢١)‏", "تييي", "كيوركو", "تنمن", "كوجي (١٥٥٥–١٥٥٨)‏", "ايركو", "جنكي", "تنشو (١٥٧٣–١٥٩٢)‏", "بنركو", "كيتشو", "جنوا", "كان-اي", "شوهو (١٦٤٤–١٦٤٨)‏", "كيان", "شوو (١٦٥٢–١٦٥٥)‏", "ميرياكو", "منجي", "كنبن", "انبو", "تنوا", "جوكيو", "جنركو", "هويي", "شوتكو", "كيوهو", "جنبن", "كنبو (١٧٤١–١٧٤٤)‏", "انكيو (١٧٤٤–١٧٤٨)‏", "كان-ان", "هورياكو", "مييوا", "ان-اي", "تنمي", "كنسي", "كيووا", "بنكا", "بنسي", "تنبو", "كوكا", "كاي", "أنسي", "من-ان", "بنكيو", "جنجي", "كيو", "ميجي", "تيشو", "شووا", "هيسي" ], _22z200 = {
    "long": _22z195,
    "short": _22z193,
    "default": "#,##0.###"
}, _22z201 = {
    "short": _22z196,
    "default": "¤ #,##0.00",
    zero: "{0} {1}",
    one: "{0} {1}",
    two: "{0} {1}",
    few: "{0} {1}",
    many: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _22z194
}, _22z202 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _22z200,
    currency: _22z201,
    percent: {
        "default": "#,##0%"
    }
}, _22z203 = {
    dayParts: _22z145,
    days: _22z198,
    months: _22z198,
    years: _22z198,
    zodiacs: _22z145
}, _22z204 = {
    era: _22z1,
    year: _22z174,
    "year-short": _22z156,
    "year-narrow": _22z156,
    quarter: _22z177,
    "quarter-short": _22z177,
    "quarter-narrow": _22z177,
    month: _22z171,
    "month-short": _22z158,
    "month-narrow": _22z157,
    week: _22z176,
    "week-short": _22z166,
    "week-narrow": _22z165,
    day: _22z173,
    "day-short": _22z155,
    "day-narrow": _22z155,
    weekday: _22z2,
    dayperiod: {
        displayName: "ص/م"
    },
    hour: _22z161,
    "hour-short": _22z161,
    "hour-narrow": _22z161,
    minute: _22z162,
    "minute-short": _22z162,
    "minute-narrow": _22z162,
    second: _22z169,
    "second-short": _22z163,
    "second-narrow": _22z163,
    zone: _22z4,
    sun: _22z48,
    "sun-short": _22z48,
    "sun-narrow": _22z48,
    mon: _22z56,
    "mon-short": _22z56,
    "mon-narrow": _22z56,
    tue: _22z59,
    "tue-short": _22z59,
    "tue-narrow": _22z59,
    wed: _22z60,
    "wed-short": _22z60,
    "wed-narrow": _22z60,
    thu: _22z53,
    "thu-short": _22z53,
    "thu-narrow": _22z53,
    fri: _22z54,
    "fri-short": _22z54,
    "fri-narrow": _22z54,
    sat: _22z49,
    "sat-short": _22z49,
    "sat-narrow": _22z49
}, _22z205 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _22z204
}, _22z206 = {
    dateFormats: _22z189,
    datePartsOrder: "dmy",
    dateIntervalFormats: _22z192,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _22z183,
    dayPeriods: _22z190,
    monthNames: _22z187,
    eraNames: _22z11,
    quarterNames: _22z172,
    fields: _22z204
}, _22z207 = {
    dateFormats: _22z188,
    datePartsOrder: "md",
    dateIntervalFormats: _22z191,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _22z183,
    dayPeriods: _22z190,
    cyclicNames: _22z203,
    monthNames: _22z180,
    monthPatterns: _22z135,
    quarterNames: _22z172,
    fields: _22z204
};

inter.id = "ar_lb";

inter.numbers = {
    ahom: {
        symbols: _22z132,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _22z202,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _22z202,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _22z132,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _22z132,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _22z132,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _22z132,
        digits: "renderEthiopic"
    },
    finance: _22z134,
    fullwide: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _22z132,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _22z132,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _22z132,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _22z132,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _22z136,
    hansfin: _22z138,
    hant: _22z136,
    hantfin: _22z138,
    hebr: {
        symbols: _22z132,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _22z132,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _22z136,
    jpanfin: _22z138,
    kali: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _22z132,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _22z132,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _22z132,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _22z132,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _22z132,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _22z132,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _22z132,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _22z132,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _22z134,
    nkoo: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _22z132,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _22z132,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _22z132,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _22z132,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _22z132,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _22z132,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _22z134,
    vaii: {
        symbols: _22z133,
        formats: _22z202,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _22z132,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "dmy",
        dateIntervalFormats: _22z192,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _22z183,
        dayPeriods: _22z190,
        monthNames: _22z186,
        eraNames: {
            wide: [ "التقويم البوذي" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _22z172,
        fields: _22z204
    },
    chinese: _22z207,
    coptic: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "dmy",
        dateIntervalFormats: _22z192,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _22z183,
        dayPeriods: _22z190,
        monthNames: {
            format: _22z154,
            standAlone: _22z154
        },
        eraNames: _22z27,
        quarterNames: _22z172,
        fields: _22z204
    },
    dangi: _22z207,
    ethioaa: _22z205,
    ethiopic: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "dmy",
        dateIntervalFormats: _22z192,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _22z183,
        dayPeriods: _22z190,
        monthNames: {
            format: _22z153,
            standAlone: _22z153
        },
        eraNames: _22z27,
        quarterNames: _22z172,
        fields: _22z204
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE، d MMMM، y",
                longDate: "d MMMM، y",
                mediumDate: "dd‏/MM‏/y",
                shortDate: "d‏/M‏/y",
                fullTime: "h:mm:ss a zzzz",
                longTime: "h:mm:ss a z",
                mediumTime: "h:mm:ss a",
                shortTime: "h:mm a",
                shortDateTime: "d‏/M‏/y h:mm a",
                mediumDateTime: "dd‏/MM‏/y h:mm:ss a",
                longDateTime: "d MMMM، y h:mm:ss a z",
                fullDateTime: "EEEE، d MMMM، y h:mm:ss a zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E، d",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM، y G",
                GyMMMEd: "E، d MMM، y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "d/‏M",
                MEd: "E، d/M",
                MMdd: "dd‏/MM",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E، d MMM",
                MMMMd: "d MMMM",
                MMMMEd: "E، d MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "M‏/y",
                yMd: "d‏/M‏/y",
                yMEd: "E، d/‏M/‏y",
                yMM: "MM‏/y",
                yMMM: "MMM y",
                yMMMd: "d MMM، y",
                yMMMEd: "E، d MMM، y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _22z5,
            H: {
                H: "HH–HH"
            },
            hm: _22z32,
            Hm: _22z13,
            hmv: _22z42,
            Hmv: _22z16,
            hv: _22z6,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            Md: _22z7,
            MEd: _22z22,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: {
                d: "d–d MMM",
                M: "d MMM – d MMM"
            },
            MMMEd: _22z21,
            MMMM: {
                M: "LLLL–LLLL"
            },
            y: {
                y: "y–y"
            },
            yM: {
                M: "M‏/y – M‏/y",
                y: "M‏/y – M‏/y"
            },
            yMd: {
                d: "d‏/M‏/y – d‏/M‏/y",
                M: "d‏/M‏/y – d‏/M‏/y",
                y: "d‏/M‏/y – d‏/M‏/y"
            },
            yMEd: {
                d: "E، dd‏/MM‏/y – E، dd‏/MM‏/y",
                M: "E، d‏/M‏/y – E، d‏/M‏/y",
                y: "E، d‏/M‏/y – E، d‏/M‏/y"
            },
            yMMM: {
                M: "MMM – MMM، y",
                y: "MMM، y – MMM، y"
            },
            yMMMd: {
                d: "d–d MMM، y",
                M: "d MMM – d MMM، y",
                y: "d MMM، y – d MMM، y"
            },
            yMMMEd: {
                d: "E، d – E، d MMM، y",
                M: "E، d MMM – E، d MMM، y",
                y: "E، d MMM، y – E، d MMM، y"
            },
            yMMMM: {
                M: "MMMM – MMMM، y",
                y: "MMMM، y – MMMM، y"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _22z183,
        dayPeriods: _22z190,
        monthNames: _22z186,
        eraNames: {
            wide: [ "قبل الميلاد", "ميلادي" ],
            abbreviated: [ "ق.م", "م" ]
        },
        quarterNames: _22z172,
        fields: _22z204
    },
    hebrew: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "dmy",
        dateIntervalFormats: _22z192,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _22z183,
        dayPeriods: _22z190,
        monthNames: {
            format: _22z159,
            standAlone: _22z159
        },
        eraNames: {
            wide: [ "ص" ],
            abbreviated: [ "ص" ]
        },
        quarterNames: _22z172,
        fields: _22z204
    },
    indian: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "dmy",
        dateIntervalFormats: _22z192,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _22z183,
        dayPeriods: _22z190,
        monthNames: {
            format: _22z167,
            standAlone: _22z167
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _22z172,
        fields: _22z204
    },
    islamic: _22z206,
    "islamic-umalqura": _22z206,
    "islamic-tbla": _22z206,
    "islamic-civil": _22z206,
    "islamic-rgsa": _22z206,
    iso8601: _22z205,
    japanese: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "dmy",
        dateIntervalFormats: _22z192,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _22z183,
        dayPeriods: _22z190,
        monthNames: _22z186,
        eraNames: {
            wide: _22z199,
            abbreviated: _22z199
        },
        quarterNames: _22z172,
        fields: _22z204
    },
    persian: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "dmy",
        dateIntervalFormats: _22z192,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _22z183,
        dayPeriods: _22z190,
        monthNames: {
            format: _22z146,
            standAlone: _22z146
        },
        eraNames: {
            wide: [ "ه‍.ش" ],
            abbreviated: [ "ه‍.ش" ]
        },
        quarterNames: _22z172,
        fields: _22z204
    },
    roc: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "dmy",
        dateIntervalFormats: _22z192,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _22z183,
        dayPeriods: _22z190,
        monthNames: _22z186,
        eraNames: {
            wide: _22z12,
            abbreviated: _22z12
        },
        quarterNames: _22z172,
        fields: _22z204
    },
    islamicc: _22z205
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 0) return "zero";
    if (n === 1) return "one";
    if (n === 2) return "two";
    if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10) return "few";
    if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99) return "many";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "ناقص " + this.renderSpelloutNumbering(-n);
    if (isFractional && n > 1) return this.renderSpelloutNumbering(Math.floor(n)) + " فاصل " + this.renderSpelloutNumbering(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutNumberingM(Math.floor(n / 1e15)) + " بليار" + (n === 2e15 ? "" : " و " + this.renderSpelloutNumbering(n % 1e15));
    if (n >= 1e15) return "بليار" + (n === 1e15 ? "" : " و " + this.renderSpelloutNumbering(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutNumberingM(Math.floor(n / 1e12)) + " بليون" + (n === 2e12 ? "" : " و " + this.renderSpelloutNumbering(n % 1e12));
    if (n >= 1e12) return "بليون" + (n === 1e12 ? "" : " و " + this.renderSpelloutNumbering(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutNumberingM(Math.floor(n / 1e9)) + " مليار" + (n === 2e9 ? "" : " و " + this.renderSpelloutNumbering(n % 1e9));
    if (n >= 1e9) return "مليار" + (n === 1e9 ? "" : " و " + this.renderSpelloutNumbering(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutNumberingM(Math.floor(n / 1e6)) + " مليون" + (n === 2e6 ? "" : " و " + this.renderSpelloutNumbering(n % 1e6));
    if (n >= 1e6) return "مليون" + (n === 1e6 ? "" : " و " + this.renderSpelloutNumbering(n % 1e6));
    if (n >= 11e3) return this.renderSpelloutNumberingM(Math.floor(n / 1e4)) + " ألف" + (n === 11e3 ? "" : " و " + this.renderSpelloutNumbering(n % 1e4));
    if (n >= 3e3) return this.renderSpelloutNumbering(Math.floor(n / 1e3)) + " آلاف" + (n === 3e3 ? "" : " و " + this.renderSpelloutNumbering(n % 1e3));
    if (n >= 2e3) return "ألفين" + (n === 2e3 ? "" : " و " + this.renderSpelloutNumbering(n % 1e3));
    if (n >= 1e3) return "ألف" + (n === 1e3 ? "" : " و " + this.renderSpelloutNumbering(n % 1e3));
    if (n >= 300) return this.renderSpelloutNumbering(Math.floor(n / 100)) + " مائة" + (n === 300 ? "" : " و " + this.renderSpelloutNumbering(n % 100));
    if (n >= 200) return "مائتان" + (n === 200 ? "" : " و " + this.renderSpelloutNumbering(n % 100));
    if (n >= 100) return "مائة" + (n === 100 ? "" : " و " + this.renderSpelloutNumbering(n % 100));
    if (n >= 90) return (n === 90 ? "" : this.renderSpelloutNumbering(n % 10) + " و ") + "تسعون";
    if (n >= 80) return (n === 80 ? "" : this.renderSpelloutNumbering(n % 10) + " و ") + "ثمانون";
    if (n >= 70) return (n === 70 ? "" : this.renderSpelloutNumbering(n % 10) + " و ") + "سبعون";
    if (n >= 60) return (n === 60 ? "" : this.renderSpelloutNumbering(n % 10) + " و ") + "ستون";
    if (n >= 50) return (n === 50 ? "" : this.renderSpelloutNumbering(n % 10) + " و ") + "خمسون";
    if (n >= 40) return (n === 40 ? "" : this.renderSpelloutNumbering(n % 10) + " و ") + "أربعون";
    if (n >= 30) return (n === 30 ? "" : this.renderSpelloutNumbering(n % 10) + " و ") + "ثلاثون";
    if (n >= 20) return (n === 20 ? "" : this.renderSpelloutNumbering(n % 10) + " و ") + "عشرون";
    if (n >= 13) return this.renderSpelloutNumbering(n % 10) + " عشر";
    if (n >= 12) return "إثنا عشر";
    if (n >= 11) return "إحدى عشر";
    if (n >= 10) return "عشرة";
    if (n >= 9) return "تسعة";
    if (n >= 8) return "ثمانية";
    if (n >= 7) return "سبعة";
    if (n >= 6) return "ستة";
    if (n >= 5) return "خمسة";
    if (n >= 4) return "أربعة";
    if (n >= 3) return "ثلاثة";
    if (n >= 2) return "إثنان";
    if (n >= 1) return "واحد";
    if (n >= 0) return "صفر";
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderSpelloutNumberingM = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutNumberingM(Math.floor(n / 1e15)) + " بليار" + (n === 2e15 ? "" : " و " + this.renderSpelloutNumberingM(n % 1e15));
    if (n >= 1e15) return "بليار" + (n === 1e15 ? "" : " و " + this.renderSpelloutNumberingM(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutNumberingM(Math.floor(n / 1e12)) + " بليون" + (n === 2e12 ? "" : " و " + this.renderSpelloutNumberingM(n % 1e12));
    if (n >= 1e12) return "بليون" + (n === 1e12 ? "" : " و " + this.renderSpelloutNumberingM(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutNumberingM(Math.floor(n / 1e9)) + " مليار" + (n === 2e9 ? "" : " و " + this.renderSpelloutNumberingM(n % 1e9));
    if (n >= 1e9) return "مليار" + (n === 1e9 ? "" : " و " + this.renderSpelloutNumberingM(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutNumberingM(Math.floor(n / 1e6)) + " مليون" + (n === 2e6 ? "" : " و " + this.renderSpelloutNumberingM(n % 1e6));
    if (n >= 1e6) return "مليون" + (n === 1e6 ? "" : " و " + this.renderSpelloutNumberingM(n % 1e6));
    if (n >= 11e3) return this.renderSpelloutNumberingM(Math.floor(n / 1e4)) + " ألف" + (n === 11e3 ? "" : " و " + this.renderSpelloutNumberingM(n % 1e4));
    if (n >= 3e3) return this.renderSpelloutNumbering(Math.floor(n / 1e3)) + " آلاف" + (n === 3e3 ? "" : " و " + this.renderSpelloutNumberingM(n % 1e3));
    if (n >= 2e3) return "ألفي" + (n === 2e3 ? "" : " و " + this.renderSpelloutNumberingM(n % 1e3));
    if (n >= 1e3) return "ألف" + (n === 1e3 ? "" : " و " + this.renderSpelloutNumberingM(n % 1e3));
    if (n >= 300) return this.renderSpelloutNumbering(Math.floor(n / 100)) + " مائة" + (n === 300 ? "" : " و " + this.renderSpelloutNumberingM(n % 100));
    if (n >= 200) return "مائتان" + (n === 200 ? "" : " و " + this.renderSpelloutNumberingM(n % 100));
    if (n >= 100) return "مائة" + (n === 100 ? "" : " و " + this.renderSpelloutNumberingM(n % 100));
    if (n >= 90) return (n === 90 ? "" : this.renderSpelloutNumberingM(n % 10) + " و ") + "تسعون";
    if (n >= 80) return (n === 80 ? "" : this.renderSpelloutNumberingM(n % 10) + " و ") + "ثمانون";
    if (n >= 70) return (n === 70 ? "" : this.renderSpelloutNumberingM(n % 10) + " و ") + "سبعون";
    if (n >= 60) return (n === 60 ? "" : this.renderSpelloutNumberingM(n % 10) + " و ") + "ستون";
    if (n >= 50) return (n === 50 ? "" : this.renderSpelloutNumberingM(n % 10) + " و ") + "خمسون";
    if (n >= 40) return (n === 40 ? "" : this.renderSpelloutNumberingM(n % 10) + " و ") + "أربعون";
    if (n >= 30) return (n === 30 ? "" : this.renderSpelloutNumberingM(n % 10) + " و ") + "ثلاثون";
    if (n >= 20) return (n === 20 ? "" : this.renderSpelloutNumberingM(n % 10) + " و ") + "عشرون";
    if (n >= 13) return this.renderSpelloutNumberingM(n % 10) + " عشر";
    if (n >= 12) return "إثنا عشر";
    if (n >= 11) return "إحدى عشر";
    if (n >= 10) return "عشرة";
    if (n >= 9) return "تسعة";
    if (n >= 8) return "ثمانية";
    if (n >= 7) return "سبعة";
    if (n >= 6) return "ستة";
    if (n >= 5) return "خمسة";
    if (n >= 4) return "أربعة";
    if (n >= 3) return "ثلاثة";
    if (n >= 2) return "إثنان";
    if (n >= 1) return "واحد";
    if (n >= 0) return "صفر";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.currencies = [].concat(P.currencies.slice(0, 59), {
    id: "SDG",
    displayName: "جنيه سوداني",
    symbol: "SDG",
    zero: "جنيه سوداني",
    one: "جنيه سوداني",
    two: "جنيه سوداني",
    few: "جنيهات سودانية",
    many: "جنيهًا سودانيًا",
    other: "جنيه سوداني"
}, P.currencies.slice(60, 254));

module.exports = inter;