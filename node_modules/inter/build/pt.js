function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _bt3u1 = [ "T1", "T2", "T3", "T4" ], _bt3u2 = {
    displayName: "AM/PM"
}, _bt3u3 = {
    all: {
        leap: "{0}bis"
    }
}, _bt3u4 = {
    one: "{0}°",
    other: "{0}°"
}, _bt3u5 = {
    one: "0 mi",
    other: "0 mi"
}, _bt3u6 = {
    one: "0 bi",
    other: "0 bi"
}, _bt3u7 = {
    a: "h a – h a",
    h: "h–h a"
}, _bt3u8 = {
    one: "{0} G",
    other: "{0} G"
}, _bt3u9 = {
    one: "{0} h",
    other: "{0} h"
}, _bt3u10 = {
    one: "{0} m",
    other: "{0} m"
}, _bt3u11 = {
    one: "{0} g",
    other: "{0} g"
}, _bt3u12 = {
    one: "{0} W",
    other: "{0} W"
}, _bt3u13 = {
    one: "{0}°C",
    other: "{0}°C"
}, _bt3u14 = {
    one: "{0} l",
    other: "{0} l"
}, _bt3u15 = {
    one: "0 mil",
    other: "0 mil"
}, _bt3u16 = {
    one: "0 mil",
    other: "0 mil"
}, _bt3u17 = {
    one: "00 mi",
    other: "00 mi"
}, _bt3u18 = {
    one: "00 bi",
    other: "00 bi"
}, _bt3u19 = {
    one: "0 tri",
    other: "0 tri"
}, _bt3u20 = {
    one: "¤0 mi",
    other: "¤0 mi"
}, _bt3u21 = {
    one: "¤0 bi",
    other: "¤0 bi"
}, _bt3u22 = {
    displayName: "fuso horário"
}, _bt3u23 = [ "Antes de R.O.C.", "R.O.C." ], _bt3u24 = {
    one: "{0} ha",
    other: "{0} ha"
}, _bt3u25 = {
    one: "{0} m²",
    other: "{0} m²"
}, _bt3u26 = {
    one: "{0} ms",
    other: "{0} ms"
}, _bt3u27 = {
    one: "{0} km",
    other: "{0} km"
}, _bt3u28 = {
    one: "{0} cm",
    other: "{0} cm"
}, _bt3u29 = {
    one: "{0} mm",
    other: "{0} mm"
}, _bt3u30 = {
    one: "{0} pm",
    other: "{0} pm"
}, _bt3u31 = {
    one: "{0} yd",
    other: "{0} yd"
}, _bt3u32 = {
    one: "{0} kg",
    other: "{0} kg"
}, _bt3u33 = {
    one: "{0} lb",
    other: "{0} lb"
}, _bt3u34 = {
    one: "{0} oz",
    other: "{0} oz"
}, _bt3u35 = {
    one: "{0} kW",
    other: "{0} kW"
}, _bt3u36 = {
    one: "{0} cv",
    other: "{0} cv"
}, _bt3u37 = {
    one: "00 mil",
    other: "00 mil"
}, _bt3u38 = {
    one: "00 mil",
    other: "00 mil"
}, _bt3u39 = {
    one: "000 mi",
    other: "000 mi"
}, _bt3u40 = {
    one: "000 bi",
    other: "000 bi"
}, _bt3u41 = {
    one: "00 tri",
    other: "00 tri"
}, _bt3u42 = {
    one: "¤0 mil",
    other: "¤0 mil"
}, _bt3u43 = {
    one: "¤00 mi",
    other: "¤00 mi"
}, _bt3u44 = {
    one: "¤00 bi",
    other: "¤00 bi"
}, _bt3u45 = {
    one: "¤0 tri",
    other: "¤0 tri"
}, _bt3u46 = [ "D", "S", "T", "Q", "Q", "S", "S" ], _bt3u47 = {
    displayName: "dia da semana"
}, _bt3u48 = {
    one: "+{0} h",
    other: "+{0} h"
}, _bt3u49 = {
    one: "-{0} h",
    other: "-{0} h"
}, _bt3u50 = {
    one: "+{0} m",
    other: "+{0} m"
}, _bt3u51 = {
    one: "-{0} m",
    other: "-{0} m"
}, _bt3u52 = {
    one: "+{0} s",
    other: "+{0} s"
}, _bt3u53 = {
    one: "-{0} s",
    other: "-{0} s"
}, _bt3u54 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _bt3u55 = {
    one: "{0} pé",
    other: "{0} pés"
}, _bt3u56 = {
    one: "{0} nó",
    other: "{0} nós"
}, _bt3u57 = {
    one: "{0} psi",
    other: "{0} psi"
}, _bt3u58 = {
    one: "{0} km²",
    other: "{0} km²"
}, _bt3u59 = {
    one: "{0} mi²",
    other: "{0} mi²"
}, _bt3u60 = {
    one: "{0} ft²",
    other: "{0} ft²"
}, _bt3u61 = {
    one: "{0} min",
    other: "{0} min"
}, _bt3u62 = {
    one: "{0} hPa",
    other: "{0} hPa"
}, _bt3u63 = {
    one: "{0} m/s",
    other: "{0} m/s"
}, _bt3u64 = {
    one: "{0} km³",
    other: "{0} km³"
}, _bt3u65 = {
    one: "{0} mi³",
    other: "{0} mi³"
}, _bt3u66 = {
    one: "000 mil",
    other: "000 mil"
}, _bt3u67 = {
    one: "000 mil",
    other: "000 mil"
}, _bt3u68 = {
    one: "000 tri",
    other: "000 tri"
}, _bt3u69 = {
    one: "¤00 mil",
    other: "¤00 mil"
}, _bt3u70 = {
    one: "¤000 mi",
    other: "¤000 mi"
}, _bt3u71 = {
    one: "¤000 bi",
    other: "¤000 bi"
}, _bt3u72 = {
    one: "¤00 tri",
    other: "¤00 tri"
}, _bt3u73 = {
    a: "h a – h a v",
    h: "h – h a v"
}, _bt3u74 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _bt3u75 = {
    one: "{0} ano",
    other: "{0} anos"
}, _bt3u76 = {
    one: "{0} dia",
    other: "{0} dias"
}, _bt3u77 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _bt3u78 = {
    one: "{0} mês",
    other: "{0} meses"
}, _bt3u79 = {
    one: "{0} sem.",
    other: "{0} sem."
}, _bt3u80 = {
    one: "{0} km/h",
    other: "{0} km/h"
}, _bt3u81 = {
    one: "¤000 mil",
    other: "¤000 mil"
}, _bt3u82 = {
    one: "¤000 tri",
    other: "¤000 tri"
}, _bt3u83 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _bt3u84 = {
    one: "em {0} h",
    other: "em {0} h"
}, _bt3u85 = {
    one: "há {0} h",
    other: "há {0} h"
}, _bt3u86 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _bt3u87 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _bt3u88 = {
    one: "{0} acre",
    other: "{0} acres"
}, _bt3u89 = {
    one: "0 milhão",
    other: "0 milhões"
}, _bt3u90 = {
    one: "0 bilhão",
    other: "0 bilhões"
}, _bt3u91 = {
    one: "+{0} ano",
    other: "+{0} anos"
}, _bt3u92 = {
    one: "-{0} ano",
    other: "-{0} anos"
}, _bt3u93 = {
    one: "+{0} dia",
    other: "+{0} dias"
}, _bt3u94 = {
    one: "-{0} dia",
    other: "-{0} dias"
}, _bt3u95 = {
    one: "+{0} mês",
    other: "+{0} meses"
}, _bt3u96 = {
    one: "-{0} mês",
    other: "-{0} meses"
}, _bt3u97 = {
    one: "+{0} sem.",
    other: "+{0} sem."
}, _bt3u98 = {
    one: "-{0} sem.",
    other: "-{0} sem."
}, _bt3u99 = {
    one: "{0} milha",
    other: "{0} milhas"
}, _bt3u100 = {
    one: "00 milhão",
    other: "00 milhões"
}, _bt3u101 = {
    one: "00 bilhão",
    other: "00 bilhões"
}, _bt3u102 = {
    one: "0 trilhão",
    other: "0 trilhões"
}, _bt3u103 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _bt3u104 = {
    d: "dd/MM – dd/MM",
    M: "dd/MM – dd/MM"
}, _bt3u105 = {
    M: "MM/y – MM/y G",
    y: "MM/y – MM/y G"
}, _bt3u106 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _bt3u107 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _bt3u108 = {
    one: "000 milhão",
    other: "000 milhões"
}, _bt3u109 = {
    one: "000 bilhão",
    other: "000 bilhões"
}, _bt3u110 = {
    one: "00 trilhão",
    other: "00 trilhões"
}, _bt3u111 = {
    one: "em {0} ano",
    other: "em {0} anos"
}, _bt3u112 = {
    one: "há {0} ano",
    other: "há {0} anos"
}, _bt3u113 = {
    one: "+{0} trim.",
    other: "+{0} trims."
}, _bt3u114 = {
    one: "-{0} trim.",
    other: "-{0} trims."
}, _bt3u115 = {
    one: "em {0} dia",
    other: "em {0} dias"
}, _bt3u116 = {
    one: "há {0} dia",
    other: "há {0} dias"
}, _bt3u117 = {
    a: "h'h' a – h'h' a",
    h: "h'h' - h'h' a"
}, _bt3u118 = {
    one: "em {0} mês",
    other: "em {0} meses"
}, _bt3u119 = {
    one: "há {0} mês",
    other: "há {0} meses"
}, _bt3u120 = {
    one: "em {0} sem.",
    other: "em {0} sem."
}, _bt3u121 = {
    one: "há {0} sem.",
    other: "há {0} sem."
}, _bt3u122 = {
    one: "há {0} seg.",
    other: "há {0} seg."
}, _bt3u123 = {
    one: "{0} ano-luz",
    other: "{0} anos-luz"
}, _bt3u124 = {
    one: "{0} acre-pé",
    other: "{0} acre-pés"
}, _bt3u125 = {
    one: "000 trilhão",
    other: "000 trilhões"
}, _bt3u126 = {
    one: "em {0} hora",
    other: "em {0} horas"
}, _bt3u127 = {
    one: "há {0} hora",
    other: "há {0} horas"
}, _bt3u128 = {
    one: "em {0} min.",
    other: "em {0} mins."
}, _bt3u129 = {
    one: "há {0} min.",
    other: "há {0} mins."
}, _bt3u130 = {
    one: "em {0} seg.",
    other: "em {0} segs."
}, _bt3u131 = {
    one: "{0} l/100 km",
    other: "{0} l/100 km"
}, _bt3u132 = {
    one: "em {0} trim.",
    other: "em {0} trims."
}, _bt3u133 = {
    one: "há {0} trim.",
    other: "há {0} trims."
}, _bt3u134 = [ "dom", "seg", "ter", "qua", "qui", "sex", "sáb" ], _bt3u135 = {
    one: "em {0} semana",
    other: "em {0} semanas"
}, _bt3u136 = {
    one: "há {0} semana",
    other: "há {0} semanas"
}, _bt3u137 = {
    one: "em {0} minuto",
    other: "em {0} minutos"
}, _bt3u138 = {
    one: "há {0} minuto",
    other: "há {0} minutos"
}, _bt3u139 = {
    d: "d–d 'de' MMM",
    M: "d 'de' MMM – d 'de' MMM"
}, _bt3u140 = {
    one: "em {0} segundo",
    other: "em {0} segundos"
}, _bt3u141 = {
    one: "há {0} segundo",
    other: "há {0} segundos"
}, _bt3u142 = {
    d: "E, dd/MM – E, dd/MM",
    M: "E, dd/MM – E, dd/MM"
}, _bt3u143 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _bt3u144 = {
    "0": "este ano",
    "1": "próximo ano",
    "-1": "ano passado"
}, _bt3u145 = {
    "0": "este mês",
    "1": "próximo mês",
    "-1": "mês passado"
}, _bt3u146 = {
    "0": "esta qui.",
    "1": "próx. qui",
    "-1": "qui. passada"
}, _bt3u147 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _bt3u148 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _bt3u149 = {
    id: "001",
    displayName: "Mundo",
    hasTimeZones: false
}, _bt3u150 = {
    one: "em {0} trimestre",
    other: "em {0} trimestres"
}, _bt3u151 = {
    one: "há {0} trimestre",
    other: "há {0} trimestres"
}, _bt3u152 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _bt3u153 = {
    id: "AQ",
    displayName: "Antártida",
    hasTimeZones: true
}, _bt3u154 = {
    M: "MMM–MMM 'de' y G",
    y: "MMM 'de' y – MMM 'de' y G"
}, _bt3u155 = {
    "0": "este dom.",
    "1": "próximo dom.",
    "-1": "dom. passado"
}, _bt3u156 = {
    "0": "esta seg.",
    "1": "próxima seg.",
    "-1": "seg. passada"
}, _bt3u157 = {
    "0": "esta ter.",
    "1": "próxima ter.",
    "-1": "ter. passada"
}, _bt3u158 = {
    "0": "esta qua.",
    "1": "próxima qua.",
    "-1": "qua. passada"
}, _bt3u159 = {
    "0": "esta sex.",
    "1": "próxima sex.",
    "-1": "sex. passada"
}, _bt3u160 = {
    "0": "este sáb.",
    "1": "próximo sáb.",
    "-1": "sáb. passado"
}, _bt3u161 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _bt3u162 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _bt3u163 = {
    id: "BV",
    displayName: "Ilha Bouvet",
    hasTimeZones: false
}, _bt3u164 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _bt3u165 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _bt3u166 = {
    M: "MMMM–MMMM 'de' y G",
    y: "MMMM 'de' y – MMMM 'de' y G"
}, _bt3u167 = {
    id: "CX",
    displayName: "Ilha Christmas",
    hasTimeZones: true
}, _bt3u168 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _bt3u169 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _bt3u170 = {
    id: "IC",
    displayName: "Ilhas Canárias",
    hasTimeZones: false
}, _bt3u171 = {
    "0": "esta semana",
    "1": "próxima semana",
    "-1": "semana passada"
}, _bt3u172 = {
    "0": "este sábado",
    "1": "próximo sábado",
    "-1": "sábado passado"
}, _bt3u173 = {
    id: "EA",
    displayName: "Ceuta e Melilha",
    hasTimeZones: false
}, _bt3u174 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _bt3u175 = {
    id: "AC",
    displayName: "Ilha de Ascensão",
    hasTimeZones: false
}, _bt3u176 = {
    id: "TA",
    displayName: "Tristão da Cunha",
    hasTimeZones: false
}, _bt3u177 = {
    d: "E, d – E, d 'de' MMM",
    M: "E, d 'de' MMM – E, d 'de' MMM"
}, _bt3u178 = {
    relative: _bt3u146
}, _bt3u179 = {
    id: "IR",
    displayName: "Irã",
    regionId: "034",
    hasTimeZones: true
}, _bt3u180 = {
    id: "OM",
    displayName: "Omã",
    regionId: "145",
    hasTimeZones: true
}, _bt3u181 = [ "1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre" ], _bt3u182 = {
    "0": "este domingo",
    "1": "próximo domingo",
    "-1": "domingo passado"
}, _bt3u183 = {
    id: "CU",
    displayName: "Cuba",
    regionId: "029",
    hasTimeZones: true
}, _bt3u184 = {
    id: "FJ",
    displayName: "Fiji",
    regionId: "054",
    hasTimeZones: true
}, _bt3u185 = {
    id: "GH",
    displayName: "Gana",
    regionId: "011",
    hasTimeZones: true
}, _bt3u186 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _bt3u187 = {
    id: "CP",
    displayName: "Ilha de Clipperton",
    hasTimeZones: false
}, _bt3u188 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _bt3u189 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _bt3u190 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _bt3u191 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _bt3u192 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _bt3u193 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _bt3u194 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _bt3u195 = {
    id: "BT",
    displayName: "Butão",
    regionId: "034",
    hasTimeZones: true
}, _bt3u196 = {
    id: "QA",
    displayName: "Catar",
    regionId: "145",
    hasTimeZones: true
}, _bt3u197 = {
    id: "TD",
    displayName: "Chade",
    regionId: "017",
    hasTimeZones: true
}, _bt3u198 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _bt3u199 = {
    id: "CN",
    displayName: "China",
    regionId: "030",
    hasTimeZones: true
}, _bt3u200 = {
    id: "EG",
    displayName: "Egito",
    regionId: "015",
    hasTimeZones: true
}, _bt3u201 = {
    id: "GA",
    displayName: "Gabão",
    regionId: "017",
    hasTimeZones: true
}, _bt3u202 = {
    id: "GN",
    displayName: "Guiné",
    regionId: "011",
    hasTimeZones: true
}, _bt3u203 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _bt3u204 = {
    id: "YE",
    displayName: "Iêmen",
    regionId: "145",
    hasTimeZones: true
}, _bt3u205 = {
    id: "JP",
    displayName: "Japão",
    regionId: "030",
    hasTimeZones: true
}, _bt3u206 = {
    id: "LY",
    displayName: "Líbia",
    regionId: "015",
    hasTimeZones: true
}, _bt3u207 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _bt3u208 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _bt3u209 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _bt3u210 = {
    id: "NE",
    displayName: "Níger",
    regionId: "011",
    hasTimeZones: true
}, _bt3u211 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _bt3u212 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _bt3u213 = {
    id: "SD",
    displayName: "Sudão",
    regionId: "015",
    hasTimeZones: true
}, _bt3u214 = {
    id: "CH",
    displayName: "Suíça",
    regionId: "155",
    hasTimeZones: true
}, _bt3u215 = {
    id: "SY",
    displayName: "Síria",
    regionId: "145",
    hasTimeZones: true
}, _bt3u216 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _bt3u217 = {
    id: "IN",
    displayName: "Índia",
    regionId: "034",
    hasTimeZones: true
}, _bt3u218 = {
    relative: _bt3u155
}, _bt3u219 = {
    relative: _bt3u156
}, _bt3u220 = {
    relative: _bt3u157
}, _bt3u221 = {
    relative: _bt3u158
}, _bt3u222 = {
    relative: _bt3u159
}, _bt3u223 = {
    relative: _bt3u160
}, _bt3u224 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _bt3u225 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _bt3u226 = {
    id: "BR",
    displayName: "Brasil",
    regionId: "005",
    hasTimeZones: true
}, _bt3u227 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _bt3u228 = {
    id: "CA",
    displayName: "Canadá",
    regionId: "021",
    hasTimeZones: true
}, _bt3u229 = {
    id: "CY",
    displayName: "Chipre",
    regionId: "145",
    hasTimeZones: true
}, _bt3u230 = {
    id: "FR",
    displayName: "França",
    regionId: "155",
    hasTimeZones: true
}, _bt3u231 = {
    id: "GR",
    displayName: "Grécia",
    regionId: "039",
    hasTimeZones: true
}, _bt3u232 = {
    id: "GY",
    displayName: "Guiana",
    regionId: "005",
    hasTimeZones: true
}, _bt3u233 = {
    id: "GM",
    displayName: "Gâmbia",
    regionId: "011",
    hasTimeZones: true
}, _bt3u234 = {
    id: "CC",
    displayName: "Ilhas Cocos (Keeling)",
    hasTimeZones: true
}, _bt3u235 = {
    id: "IQ",
    displayName: "Iraque",
    regionId: "145",
    hasTimeZones: true
}, _bt3u236 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _bt3u237 = {
    id: "IT",
    displayName: "Itália",
    regionId: "039",
    hasTimeZones: true
}, _bt3u238 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _bt3u239 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _bt3u240 = {
    id: "LS",
    displayName: "Lesoto",
    regionId: "018",
    hasTimeZones: true
}, _bt3u241 = {
    id: "LB",
    displayName: "Líbano",
    regionId: "145",
    hasTimeZones: true
}, _bt3u242 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _bt3u243 = {
    id: "MX",
    displayName: "México",
    regionId: "013",
    hasTimeZones: true
}, _bt3u244 = {
    id: "MC",
    displayName: "Mônaco",
    regionId: "155",
    hasTimeZones: true
}, _bt3u245 = {
    id: "PA",
    displayName: "Panamá",
    regionId: "013",
    hasTimeZones: true
}, _bt3u246 = {
    id: "KE",
    displayName: "Quênia",
    regionId: "014",
    hasTimeZones: true
}, _bt3u247 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _bt3u248 = {
    id: "RU",
    displayName: "Rússia",
    regionId: "151",
    hasTimeZones: true
}, _bt3u249 = {
    id: "SE",
    displayName: "Suécia",
    regionId: "154",
    hasTimeZones: true
}, _bt3u250 = {
    id: "RS",
    displayName: "Sérvia",
    regionId: "039",
    hasTimeZones: true
}, _bt3u251 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _bt3u252 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _bt3u253 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _bt3u254 = {
    id: "VN",
    displayName: "Vietnã",
    regionId: "035",
    hasTimeZones: true
}, _bt3u255 = {
    id: "ZM",
    displayName: "Zâmbia",
    regionId: "014",
    hasTimeZones: true
}, _bt3u256 = {
    id: "AL",
    displayName: "Albânia",
    regionId: "039",
    hasTimeZones: true
}, _bt3u257 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _bt3u258 = {
    id: "DZ",
    displayName: "Argélia",
    regionId: "015",
    hasTimeZones: true
}, _bt3u259 = {
    id: "AM",
    displayName: "Armênia",
    regionId: "145",
    hasTimeZones: true
}, _bt3u260 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _bt3u261 = {
    id: "BH",
    displayName: "Bahrein",
    regionId: "145",
    hasTimeZones: true
}, _bt3u262 = {
    id: "BO",
    displayName: "Bolívia",
    regionId: "005",
    hasTimeZones: true
}, _bt3u263 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _bt3u264 = {
    id: "BE",
    displayName: "Bélgica",
    regionId: "155",
    hasTimeZones: true
}, _bt3u265 = {
    id: "KH",
    displayName: "Camboja",
    regionId: "035",
    hasTimeZones: true
}, _bt3u266 = {
    id: "KM",
    displayName: "Comores",
    regionId: "014",
    hasTimeZones: true
}, _bt3u267 = {
    id: "HR",
    displayName: "Croácia",
    regionId: "039",
    hasTimeZones: true
}, _bt3u268 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _bt3u269 = {
    id: "DJ",
    displayName: "Djibuti",
    regionId: "014",
    hasTimeZones: true
}, _bt3u270 = {
    id: "EC",
    displayName: "Equador",
    regionId: "005",
    hasTimeZones: true
}, _bt3u271 = {
    id: "ES",
    displayName: "Espanha",
    regionId: "039",
    hasTimeZones: true
}, _bt3u272 = {
    id: "EE",
    displayName: "Estônia",
    regionId: "154",
    hasTimeZones: true
}, _bt3u273 = {
    id: "ET",
    displayName: "Etiópia",
    regionId: "014",
    hasTimeZones: true
}, _bt3u274 = {
    id: "GE",
    displayName: "Geórgia",
    regionId: "145",
    hasTimeZones: true
}, _bt3u275 = {
    id: "GD",
    displayName: "Granada",
    regionId: "029",
    hasTimeZones: true
}, _bt3u276 = {
    id: "NL",
    displayName: "Holanda",
    regionId: "155",
    hasTimeZones: true
}, _bt3u277 = {
    id: "HU",
    displayName: "Hungria",
    regionId: "151",
    hasTimeZones: true
}, _bt3u278 = {
    id: "IE",
    displayName: "Irlanda",
    regionId: "154",
    hasTimeZones: true
}, _bt3u279 = {
    id: "JM",
    displayName: "Jamaica",
    regionId: "029",
    hasTimeZones: true
}, _bt3u280 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _bt3u281 = {
    id: "LV",
    displayName: "Letônia",
    regionId: "154",
    hasTimeZones: true
}, _bt3u282 = {
    id: "LR",
    displayName: "Libéria",
    regionId: "011",
    hasTimeZones: true
}, _bt3u283 = {
    id: "MY",
    displayName: "Malásia",
    regionId: "035",
    hasTimeZones: true
}, _bt3u284 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _bt3u285 = {
    id: "NA",
    displayName: "Namíbia",
    regionId: "018",
    hasTimeZones: true
}, _bt3u286 = {
    id: "NG",
    displayName: "Nigéria",
    regionId: "011",
    hasTimeZones: true
}, _bt3u287 = {
    id: "NO",
    displayName: "Noruega",
    regionId: "154",
    hasTimeZones: true
}, _bt3u288 = {
    id: "PL",
    displayName: "Polônia",
    regionId: "151",
    hasTimeZones: true
}, _bt3u289 = {
    id: "RE",
    displayName: "Reunião",
    regionId: "014",
    hasTimeZones: true
}, _bt3u290 = {
    id: "RO",
    displayName: "Romênia",
    regionId: "151",
    hasTimeZones: true
}, _bt3u291 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _bt3u292 = {
    id: "SO",
    displayName: "Somália",
    regionId: "014",
    hasTimeZones: true
}, _bt3u293 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _bt3u294 = {
    id: "TN",
    displayName: "Tunísia",
    regionId: "015",
    hasTimeZones: true
}, _bt3u295 = {
    id: "TR",
    displayName: "Turquia",
    regionId: "145",
    hasTimeZones: true
}, _bt3u296 = {
    id: "UA",
    displayName: "Ucrânia",
    regionId: "151",
    hasTimeZones: true
}, _bt3u297 = {
    id: "UY",
    displayName: "Uruguai",
    regionId: "005",
    hasTimeZones: true
}, _bt3u298 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _bt3u299 = {
    id: "AT",
    displayName: "Áustria",
    regionId: "155",
    hasTimeZones: true
}, _bt3u300 = {
    id: "DE",
    displayName: "Alemanha",
    regionId: "155",
    hasTimeZones: true
}, _bt3u301 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _bt3u302 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _bt3u303 = {
    id: "BM",
    displayName: "Bermudas",
    regionId: "021",
    hasTimeZones: true
}, _bt3u304 = {
    id: "BW",
    displayName: "Botsuana",
    regionId: "018",
    hasTimeZones: true
}, _bt3u305 = {
    id: "BG",
    displayName: "Bulgária",
    regionId: "151",
    hasTimeZones: true
}, _bt3u306 = {
    id: "CO",
    displayName: "Colômbia",
    regionId: "005",
    hasTimeZones: true
}, _bt3u307 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _bt3u308 = {
    id: "ER",
    displayName: "Eritreia",
    regionId: "014",
    hasTimeZones: true
}, _bt3u309 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _bt3u310 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _bt3u311 = {
    id: "HM",
    displayName: "Ilhas Heard e McDonald",
    hasTimeZones: false
}, _bt3u312 = {
    id: "IS",
    displayName: "Islândia",
    regionId: "154",
    hasTimeZones: true
}, _bt3u313 = {
    id: "JO",
    displayName: "Jordânia",
    regionId: "145",
    hasTimeZones: true
}, _bt3u314 = {
    id: "LT",
    displayName: "Lituânia",
    regionId: "154",
    hasTimeZones: true
}, _bt3u315 = {
    id: "MV",
    displayName: "Maldivas",
    regionId: "034",
    hasTimeZones: true
}, _bt3u316 = {
    id: "MA",
    displayName: "Marrocos",
    regionId: "015",
    hasTimeZones: true
}, _bt3u317 = {
    id: "MU",
    displayName: "Maurício",
    regionId: "014",
    hasTimeZones: true
}, _bt3u318 = {
    id: "MD",
    displayName: "Moldávia",
    regionId: "151",
    hasTimeZones: true
}, _bt3u319 = {
    id: "MN",
    displayName: "Mongólia",
    regionId: "030",
    hasTimeZones: true
}, _bt3u320 = {
    id: "PY",
    displayName: "Paraguai",
    regionId: "005",
    hasTimeZones: true
}, _bt3u321 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _bt3u322 = {
    id: "SR",
    displayName: "Suriname",
    regionId: "005",
    hasTimeZones: true
}, _bt3u323 = {
    id: "TZ",
    displayName: "Tanzânia",
    regionId: "014",
    hasTimeZones: true
}, _bt3u324 = {
    id: "ZW",
    displayName: "Zimbábue",
    regionId: "014",
    hasTimeZones: true
}, _bt3u325 = {
    "2": "{0} e {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0} e {1}"
}, _bt3u326 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _bt3u327 = {
    id: "AU",
    displayName: "Austrália",
    regionId: "053",
    hasTimeZones: true
}, _bt3u328 = {
    id: "SG",
    displayName: "Cingapura",
    regionId: "035",
    hasTimeZones: true
}, _bt3u329 = {
    id: "DK",
    displayName: "Dinamarca",
    regionId: "154",
    hasTimeZones: true
}, _bt3u330 = {
    id: "SI",
    displayName: "Eslovênia",
    regionId: "039",
    hasTimeZones: true
}, _bt3u331 = {
    id: "PH",
    displayName: "Filipinas",
    regionId: "035",
    hasTimeZones: true
}, _bt3u332 = {
    id: "FI",
    displayName: "Finlândia",
    regionId: "154",
    hasTimeZones: true
}, _bt3u333 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _bt3u334 = {
    id: "GP",
    displayName: "Guadalupe",
    regionId: "029",
    hasTimeZones: true
}, _bt3u335 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _bt3u336 = {
    id: "ID",
    displayName: "Indonésia",
    regionId: "035",
    hasTimeZones: true
}, _bt3u337 = {
    id: "MK",
    displayName: "Macedônia",
    regionId: "039",
    hasTimeZones: true
}, _bt3u338 = {
    id: "MQ",
    displayName: "Martinica",
    regionId: "029",
    hasTimeZones: true
}, _bt3u339 = {
    id: "NI",
    displayName: "Nicarágua",
    regionId: "013",
    hasTimeZones: true
}, _bt3u340 = {
    id: "PK",
    displayName: "Paquistão",
    regionId: "034",
    hasTimeZones: true
}, _bt3u341 = {
    id: "KI",
    displayName: "Quiribati",
    regionId: "057",
    hasTimeZones: true
}, _bt3u342 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _bt3u343 = {
    id: "TH",
    displayName: "Tailândia",
    regionId: "035",
    hasTimeZones: true
}, _bt3u344 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _bt3u345 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _bt3u346 = {
    id: "AZ",
    displayName: "Azerbaijão",
    regionId: "145",
    hasTimeZones: true
}, _bt3u347 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _bt3u348 = {
    id: "CV",
    displayName: "Cabo Verde",
    regionId: "011",
    hasTimeZones: true
}, _bt3u349 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _bt3u350 = {
    id: "SK",
    displayName: "Eslováquia",
    regionId: "151",
    hasTimeZones: true
}, _bt3u351 = {
    id: "CK",
    displayName: "Ilhas Cook",
    regionId: "061",
    hasTimeZones: true
}, _bt3u352 = {
    id: "LU",
    displayName: "Luxemburgo",
    regionId: "155",
    hasTimeZones: true
}, _bt3u353 = {
    id: "MG",
    displayName: "Madagascar",
    regionId: "014",
    hasTimeZones: true
}, _bt3u354 = {
    id: "MR",
    displayName: "Mauritânia",
    regionId: "011",
    hasTimeZones: true
}, _bt3u355 = {
    id: "FM",
    displayName: "Micronésia",
    regionId: "057",
    hasTimeZones: true
}, _bt3u356 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _bt3u357 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _bt3u358 = {
    id: "MZ",
    displayName: "Moçambique",
    regionId: "014",
    hasTimeZones: true
}, _bt3u359 = {
    id: "PR",
    displayName: "Porto Rico",
    regionId: "029",
    hasTimeZones: true
}, _bt3u360 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _bt3u361 = {
    id: "SL",
    displayName: "Serra Leoa",
    regionId: "011",
    hasTimeZones: true
}, _bt3u362 = {
    id: "SC",
    displayName: "Seychelles",
    regionId: "014",
    hasTimeZones: true
}, _bt3u363 = {
    id: "AF",
    displayName: "Afeganistão",
    regionId: "034",
    hasTimeZones: true
}, _bt3u364 = {
    id: "KZ",
    displayName: "Cazaquistão",
    regionId: "143",
    hasTimeZones: true
}, _bt3u365 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _bt3u366 = {
    id: "GL",
    displayName: "Groenlândia",
    regionId: "021",
    hasTimeZones: true
}, _bt3u367 = {
    id: "IM",
    displayName: "Ilha de Man",
    regionId: "154",
    hasTimeZones: true
}, _bt3u368 = {
    id: "FO",
    displayName: "Ilhas Faroe",
    regionId: "154",
    hasTimeZones: true
}, _bt3u369 = {
    id: "AX",
    displayName: "Ilhas Åland",
    regionId: "154",
    hasTimeZones: true
}, _bt3u370 = {
    id: "KG",
    displayName: "Quirguistão",
    regionId: "143",
    hasTimeZones: true
}, _bt3u371 = {
    id: "GB",
    displayName: "Reino Unido",
    regionId: "154",
    hasTimeZones: true
}, _bt3u372 = {
    id: "LC",
    displayName: "Santa Lúcia",
    regionId: "029",
    hasTimeZones: true
}, _bt3u373 = {
    id: "SZ",
    displayName: "Suazilândia",
    regionId: "018",
    hasTimeZones: true
}, _bt3u374 = {
    id: "TJ",
    displayName: "Tajiquistão",
    regionId: "143",
    hasTimeZones: true
}, _bt3u375 = {
    id: "TL",
    displayName: "Timor-Leste",
    regionId: "035",
    hasTimeZones: true
}, _bt3u376 = {
    id: "UZ",
    displayName: "Uzbequistão",
    regionId: "143",
    hasTimeZones: true
}, _bt3u377 = {
    relative: _bt3u172
}, _bt3u378 = {
    id: "BY",
    displayName: "Bielorrússia",
    regionId: "151",
    hasTimeZones: true
}, _bt3u379 = {
    id: "GW",
    displayName: "Guiné-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _bt3u380 = {
    id: "NF",
    displayName: "Ilha Norfolk",
    regionId: "053",
    hasTimeZones: true
}, _bt3u381 = {
    id: "KY",
    displayName: "Ilhas Cayman",
    regionId: "029",
    hasTimeZones: true
}, _bt3u382 = {
    id: "SH",
    displayName: "Santa Helena",
    regionId: "011",
    hasTimeZones: true
}, _bt3u383 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _bt3u384 = {
    id: "SS",
    displayName: "Sudão do Sul",
    regionId: "014",
    hasTimeZones: true
}, _bt3u385 = {
    id: "MF",
    displayName: "São Martinho",
    regionId: "029",
    hasTimeZones: true
}, _bt3u386 = {
    id: "142",
    displayName: "Ásia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _bt3u387 = {
    id: "BF",
    displayName: "Burquina Faso",
    regionId: "011",
    hasTimeZones: true
}, _bt3u388 = {
    id: "KR",
    displayName: "Coreia do Sul",
    regionId: "030",
    hasTimeZones: true
}, _bt3u389 = {
    id: "SB",
    displayName: "Ilhas Salomão",
    regionId: "054",
    hasTimeZones: true
}, _bt3u390 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _bt3u391 = {
    id: "NZ",
    displayName: "Nova Zelândia",
    regionId: "053",
    hasTimeZones: true
}, _bt3u392 = {
    id: "TF",
    displayName: "Territórios Franceses do Sul",
    hasTimeZones: true
}, _bt3u393 = {
    id: "TM",
    displayName: "Turcomenistão",
    regionId: "143",
    hasTimeZones: true
}, _bt3u394 = {
    id: "ZA",
    displayName: "África do Sul",
    regionId: "018",
    hasTimeZones: true
}, _bt3u395 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _bt3u396 = {
    id: "SA",
    displayName: "Arábia Saudita",
    regionId: "145",
    hasTimeZones: true
}, _bt3u397 = {
    id: "029",
    displayName: "Caribe",
    hasTimeZones: false,
    parentRegionId: "019"
}, _bt3u398 = {
    id: "US",
    displayName: "Estados Unidos",
    regionId: "021",
    hasTimeZones: true
}, _bt3u399 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _bt3u400 = {
    id: "FK",
    displayName: "Ilhas Malvinas",
    regionId: "005",
    hasTimeZones: true
}, _bt3u401 = {
    id: "MH",
    displayName: "Ilhas Marshall",
    regionId: "057",
    hasTimeZones: true
}, _bt3u402 = {
    id: "PN",
    displayName: "Ilhas Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _bt3u403 = {
    id: "NC",
    displayName: "Nova Caledônia",
    regionId: "054",
    hasTimeZones: true
}, _bt3u404 = {
    id: "BL",
    displayName: "São Bartolomeu",
    regionId: "029",
    hasTimeZones: true
}, _bt3u405 = {
    id: "002",
    displayName: "África",
    hasTimeZones: false,
    parentRegionId: "001"
}, _bt3u406 = {
    "0": "hoje",
    "1": "amanhã",
    "2": "depois de amanhã",
    "-2": "anteontem",
    "-1": "ontem"
}, _bt3u407 = {
    relative: _bt3u182
}, _bt3u408 = {
    id: "KP",
    displayName: "Coreia do Norte",
    regionId: "030",
    hasTimeZones: true
}, _bt3u409 = {
    id: "CI",
    displayName: "Costa do Marfim",
    regionId: "011",
    hasTimeZones: true
}, _bt3u410 = {
    id: "GF",
    displayName: "Guiana Francesa",
    regionId: "005",
    hasTimeZones: true
}, _bt3u411 = {
    id: "009",
    displayName: "Oceania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _bt3u412 = {
    id: "EH",
    displayName: "Saara Ocidental",
    regionId: "015",
    hasTimeZones: true
}, _bt3u413 = {
    id: "AS",
    displayName: "Samoa Americana",
    regionId: "061",
    hasTimeZones: true
}, _bt3u414 = {
    id: "WF",
    displayName: "Wallis e Futuna",
    regionId: "061",
    hasTimeZones: true
}, _bt3u415 = {
    d: "dd/MM/y – dd/MM/y G",
    M: "dd/MM/y – dd/MM/y G",
    y: "dd/MM/y – dd/MM/y G"
}, _bt3u416 = [ "jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez" ], _bt3u417 = {
    future: _bt3u48,
    past: _bt3u49
}, _bt3u418 = {
    future: _bt3u50,
    past: _bt3u51
}, _bt3u419 = {
    future: _bt3u52,
    past: _bt3u53
}, _bt3u420 = {
    "0": "esta terça-feira",
    "1": "próxima terça-feira",
    "-1": "terça-feira passada"
}, _bt3u421 = {
    "0": "esta sexta-feira",
    "1": "próxima sexta-feira",
    "-1": "sexta-feira passada"
}, _bt3u422 = {
    id: "019",
    displayName: "Américas",
    hasTimeZones: false,
    parentRegionId: "001"
}, _bt3u423 = {
    id: "CD",
    displayName: "Congo - Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _bt3u424 = {
    id: "GQ",
    displayName: "Guiné Equatorial",
    regionId: "017",
    hasTimeZones: true
}, _bt3u425 = {
    id: "UM",
    displayName: "Ilhas Menores Distantes dos EUA",
    hasTimeZones: true
}, _bt3u426 = {
    id: "PG",
    displayName: "Papua-Nova Guiné",
    regionId: "054",
    hasTimeZones: true
}, _bt3u427 = {
    id: "CZ",
    displayName: "República Tcheca",
    regionId: "151",
    hasTimeZones: true
}, _bt3u428 = {
    id: "AG",
    displayName: "Antígua e Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _bt3u429 = {
    id: "054",
    displayName: "Melanésia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _bt3u430 = {
    id: "061",
    displayName: "Polinésia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _bt3u431 = {
    id: "TT",
    displayName: "Trinidad e Tobago",
    regionId: "029",
    hasTimeZones: true
}, _bt3u432 = {
    id: "VA",
    displayName: "Cidade do Vaticano",
    regionId: "039",
    hasTimeZones: true
}, _bt3u433 = {
    id: "MM",
    displayName: "Mianmar (Birmânia)",
    regionId: "035",
    hasTimeZones: true
}, _bt3u434 = {
    id: "PF",
    displayName: "Polinésia Francesa",
    regionId: "061",
    hasTimeZones: true
}, _bt3u435 = {
    "0": "esta quarta-feira",
    "1": "próxima quarta-feira",
    "-1": "quarta-feira passada"
}, _bt3u436 = {
    "0": "esta quinta-feira",
    "1": "próxima quinta-feira",
    "-1": "quinta-feira passada"
}, _bt3u437 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _bt3u438 = {
    id: "053",
    displayName: "Australásia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _bt3u439 = {
    id: "CG",
    displayName: "Congo - Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _bt3u440 = {
    id: "MO",
    displayName: "Macau, RAE da China",
    regionId: "030",
    hasTimeZones: true
}, _bt3u441 = {
    id: "ST",
    displayName: "São Tomé e Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _bt3u442 = {
    id: "034",
    displayName: "Ásia do Sul",
    hasTimeZones: false,
    parentRegionId: "142"
}, _bt3u443 = {
    id: "BA",
    displayName: "Bósnia e Herzegovina",
    regionId: "039",
    hasTimeZones: true
}, _bt3u444 = {
    id: "TC",
    displayName: "Ilhas Turks e Caicos",
    regionId: "029",
    hasTimeZones: true
}, _bt3u445 = {
    id: "DO",
    displayName: "República Dominicana",
    regionId: "029",
    hasTimeZones: true
}, _bt3u446 = {
    id: "SJ",
    displayName: "Svalbard e Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _bt3u447 = {
    id: "143",
    displayName: "Ásia Central",
    hasTimeZones: false,
    parentRegionId: "142"
}, _bt3u448 = {
    id: "039",
    displayName: "Europa do Sul",
    hasTimeZones: false,
    parentRegionId: "150"
}, _bt3u449 = {
    id: "VI",
    displayName: "Ilhas Virgens dos EUA",
    regionId: "029",
    hasTimeZones: true
}, _bt3u450 = {
    id: "KN",
    displayName: "São Cristóvão e Nevis",
    regionId: "029",
    hasTimeZones: true
}, _bt3u451 = {
    id: "030",
    displayName: "Ásia Oriental",
    hasTimeZones: false,
    parentRegionId: "142"
}, _bt3u452 = {
    "0": "esta segunda-feira",
    "1": "próxima segunda-feira",
    "-1": "segunda-feira passada"
}, _bt3u453 = {
    id: "005",
    displayName: "América do Sul",
    hasTimeZones: false,
    parentRegionId: "019"
}, _bt3u454 = {
    id: "AE",
    displayName: "Emirados Árabes Unidos",
    regionId: "145",
    hasTimeZones: true
}, _bt3u455 = {
    id: "CM",
    displayName: "República dos Camarões",
    regionId: "017",
    hasTimeZones: true
}, _bt3u456 = {
    id: "IO",
    displayName: "Território Britânico do Oceano Índico",
    hasTimeZones: true
}, _bt3u457 = {
    id: "PS",
    displayName: "Territórios palestinos",
    regionId: "145",
    hasTimeZones: true
}, _bt3u458 = {
    id: "018",
    displayName: "África Austral",
    hasTimeZones: false,
    parentRegionId: "002"
}, _bt3u459 = {
    id: "017",
    displayName: "África Central",
    hasTimeZones: false,
    parentRegionId: "002"
}, _bt3u460 = {
    id: "145",
    displayName: "Ásia Ocidental",
    hasTimeZones: false,
    parentRegionId: "142"
}, _bt3u461 = {
    id: "013",
    displayName: "América Central",
    hasTimeZones: false,
    parentRegionId: "019"
}, _bt3u462 = {
    id: "151",
    displayName: "Europa Oriental",
    hasTimeZones: false,
    parentRegionId: "150"
}, _bt3u463 = {
    id: "HK",
    displayName: "Hong Kong, RAE da China",
    regionId: "030",
    hasTimeZones: true
}, _bt3u464 = {
    id: "GS",
    displayName: "Ilhas Geórgia do Sul e Sandwich do Sul",
    hasTimeZones: true
}, _bt3u465 = {
    id: "MP",
    displayName: "Ilhas Marianas do Norte",
    regionId: "057",
    hasTimeZones: true
}, _bt3u466 = {
    id: "PM",
    displayName: "Saint Pierre e Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _bt3u467 = {
    id: "014",
    displayName: "África Oriental",
    hasTimeZones: false,
    parentRegionId: "002"
}, _bt3u468 = {
    id: "015",
    displayName: "África do Norte",
    hasTimeZones: false,
    parentRegionId: "002"
}, _bt3u469 = {
    future: _bt3u84,
    past: _bt3u85
}, _bt3u470 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _bt3u471 = {
    id: "155",
    displayName: "Europa Ocidental",
    hasTimeZones: false,
    parentRegionId: "150"
}, _bt3u472 = {
    id: "VG",
    displayName: "Ilhas Virgens Britânicas",
    regionId: "029",
    hasTimeZones: true
}, _bt3u473 = {
    id: "BQ",
    displayName: "Países Baixos Caribenhos",
    regionId: "029",
    hasTimeZones: true
}, _bt3u474 = {
    id: "035",
    displayName: "Sudeste Asiático",
    hasTimeZones: false,
    parentRegionId: "142"
}, _bt3u475 = {
    id: "VC",
    displayName: "São Vicente e Granadinas",
    regionId: "029",
    hasTimeZones: true
}, _bt3u476 = {
    id: "011",
    displayName: "África Ocidental",
    hasTimeZones: false,
    parentRegionId: "002"
}, _bt3u477 = {
    id: "CF",
    displayName: "República Centro-Africana",
    regionId: "017",
    hasTimeZones: true
}, _bt3u478 = {
    future: _bt3u91,
    past: _bt3u92
}, _bt3u479 = {
    future: _bt3u93,
    past: _bt3u94
}, _bt3u480 = {
    relative: _bt3u420
}, _bt3u481 = {
    relative: _bt3u421
}, _bt3u482 = {
    id: "154",
    displayName: "Europa Setentrional",
    hasTimeZones: false,
    parentRegionId: "150"
}, _bt3u483 = {
    future: _bt3u95,
    past: _bt3u96
}, _bt3u484 = {
    future: _bt3u97,
    past: _bt3u98
}, _bt3u485 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _bt3u486 = {
    id: "021",
    displayName: "América Setentrional",
    hasTimeZones: false,
    parentRegionId: "019"
}, _bt3u487 = {
    id: "057",
    displayName: "Região da Micronésia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _bt3u488 = {
    relative: _bt3u435
}, _bt3u489 = {
    relative: _bt3u436
}, _bt3u490 = {
    relative: _bt3u452
}, _bt3u491 = {
    d: "E, dd/MM/y – E, dd/MM/y G",
    M: "E, dd/MM/y – E, dd/MM/y G",
    y: "E, dd/MM/y – E, dd/MM/y G"
}, _bt3u492 = {
    future: _bt3u111,
    past: _bt3u112
}, _bt3u493 = {
    future: _bt3u113,
    past: _bt3u114
}, _bt3u494 = {
    future: _bt3u115,
    past: _bt3u116
}, _bt3u495 = {
    future: _bt3u118,
    past: _bt3u119
}, _bt3u496 = {
    future: _bt3u120,
    past: _bt3u121
}, _bt3u497 = [ "domingo", "segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado" ], _bt3u498 = {
    future: _bt3u130,
    past: _bt3u122
}, _bt3u499 = {
    future: _bt3u126,
    past: _bt3u127
}, _bt3u500 = {
    future: _bt3u128,
    past: _bt3u129
}, _bt3u501 = {
    future: _bt3u132,
    past: _bt3u133
}, _bt3u502 = [ "Mês 1", "Mês 2", "Mês 3", "Mês 4", "Mês 5", "Mês 6", "Mês 7", "Mês 8", "Mês 9", "Mês 10", "Mês 11", "Mês 12" ], _bt3u503 = {
    future: _bt3u135,
    past: _bt3u136
}, _bt3u504 = {
    future: _bt3u137,
    past: _bt3u138
}, _bt3u505 = {
    displayName: "h",
    relativeTime: _bt3u417
}, _bt3u506 = {
    displayName: "m",
    relativeTime: _bt3u418
}, _bt3u507 = {
    displayName: "s",
    relativeTime: _bt3u419
}, _bt3u508 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _bt3u509 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _bt3u510 = {
    d: "d–d 'de' MMM 'de' y",
    M: "d 'de' MMM – d 'de' MMM 'de' y G",
    y: "d 'de' MMM 'de' y – d 'de' MMM 'de' y G"
}, _bt3u511 = {
    future: _bt3u140,
    past: _bt3u141
}, _bt3u512 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _bt3u513 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _bt3u514 = {
    displayName: "h",
    relativeTime: _bt3u469
}, _bt3u515 = [ "janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro" ], _bt3u516 = {
    future: _bt3u150,
    past: _bt3u151
}, _bt3u517 = {
    displayName: "ano",
    relativeTime: _bt3u478
}, _bt3u518 = {
    displayName: "dia",
    relativeTime: _bt3u479
}, _bt3u519 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _bt3u520 = {
    displayName: "mês",
    relativeTime: _bt3u483
}, _bt3u521 = {
    displayName: "sem.",
    relativeTime: _bt3u484
}, _bt3u522 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _bt3u523 = {
    midnight: "m",
    am: "a",
    noon: "m",
    pm: "p",
    morning1: "da manhã",
    afternoon1: "da tarde",
    evening1: "da noite",
    night1: "da madrugada"
}, _bt3u524 = {
    displayName: "ano",
    relativeTime: _bt3u492
}, _bt3u525 = {
    displayName: "dia",
    relativeTime: _bt3u494
}, _bt3u526 = {
    displayName: "trim.",
    relativeTime: _bt3u493
}, _bt3u527 = {
    displayName: "mês",
    relativeTime: _bt3u495
}, _bt3u528 = {
    midnight: "meia-noite",
    am: "AM",
    noon: "meio-dia",
    pm: "PM",
    morning1: "manhã",
    afternoon1: "tarde",
    evening1: "noite",
    night1: "madrugada"
}, _bt3u529 = {
    abbreviated: _bt3u1,
    narrow: [ "1", "2", "3", "4" ],
    wide: _bt3u181
}, _bt3u530 = {
    displayName: "sem.",
    relativeTime: _bt3u496
}, _bt3u531 = {
    d: "E, d – E, d 'de' MMM 'de' y G",
    M: "E, d 'de' MMM – E, d 'de' MMM 'de' y G",
    y: "E, d 'de' MMM 'de' y – E, d 'de' MMM 'de' y G"
}, _bt3u532 = {
    displayName: "seg.",
    relativeTime: _bt3u498
}, _bt3u533 = {
    displayName: "hora",
    relativeTime: _bt3u499
}, _bt3u534 = {
    displayName: "min.",
    relativeTime: _bt3u500
}, _bt3u535 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _bt3u536 = {
    displayName: "trim.",
    relativeTime: _bt3u501
}, _bt3u537 = {
    midnight: "meia-noite",
    am: "AM",
    noon: "meio-dia",
    pm: "PM",
    morning1: "da manhã",
    afternoon1: "da tarde",
    evening1: "da noite",
    night1: "da madrugada"
}, _bt3u538 = {
    displayName: "minuto",
    relativeTime: _bt3u504
}, _bt3u539 = {
    displayName: "segundo",
    relative: [ "agora" ],
    relativeTime: _bt3u511
}, _bt3u540 = {
    decimal: ",",
    group: ".",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _bt3u541 = {
    symbols: _bt3u540
}, _bt3u542 = {
    displayName: "ano",
    relative: _bt3u144,
    relativeTime: _bt3u492
}, _bt3u543 = {
    displayName: "mês",
    relative: _bt3u145,
    relativeTime: _bt3u495
}, _bt3u544 = {
    format: _bt3u395,
    numeric: _bt3u3,
    standAlone: _bt3u395
}, _bt3u545 = {
    displayName: "dia",
    relative: _bt3u406,
    relativeTime: _bt3u494
}, _bt3u546 = {
    displayName: "semana",
    relative: _bt3u171,
    relativeTime: _bt3u503
}, _bt3u547 = {
    symbols: _bt3u540,
    digits: "renderSpelloutCardinal"
}, _bt3u548 = {
    displayName: "trimestre",
    relative: _bt3u164,
    relativeTime: _bt3u516
}, _bt3u549 = {
    symbols: _bt3u540,
    digits: "renderSpelloutCardinalFinancial"
}, _bt3u550 = {
    abbreviated: _bt3u134,
    narrow: _bt3u46,
    wide: _bt3u497,
    "short": _bt3u134
}, _bt3u551 = {
    abbreviated: _bt3u437,
    narrow: _bt3u437,
    wide: _bt3u437
}, _bt3u552 = {
    abbreviated: _bt3u416,
    narrow: _bt3u143,
    wide: _bt3u515
}, _bt3u553 = {
    format: _bt3u551
}, _bt3u554 = {
    format: _bt3u529,
    standAlone: _bt3u529
}, _bt3u555 = {
    abbreviated: _bt3u502,
    narrow: _bt3u161,
    wide: _bt3u502
}, _bt3u556 = {
    abbreviated: _bt3u509,
    narrow: _bt3u169,
    wide: _bt3u509
}, _bt3u557 = {
    abbreviated: _bt3u512,
    narrow: _bt3u161,
    wide: _bt3u512
}, _bt3u558 = {
    abbreviated: _bt3u513,
    narrow: _bt3u169,
    wide: _bt3u513
}, _bt3u559 = {
    abbreviated: _bt3u508,
    narrow: _bt3u161,
    wide: _bt3u535
}, _bt3u560 = {
    abbreviated: _bt3u519,
    narrow: _bt3u169,
    wide: _bt3u519
}, _bt3u561 = {
    abbreviated: _bt3u522,
    narrow: _bt3u161,
    wide: _bt3u522
}, _bt3u562 = {
    fullDate: "EEEE, d 'de' MMMM 'de' U",
    longDate: "d 'de' MMMM 'de' U",
    mediumDate: "dd/MM U",
    shortDate: "dd/MM/yy",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd/MM/yy HH:mm",
    mediumDateTime: "dd/MM U HH:mm:ss",
    longDateTime: "d 'de' MMMM 'de' U HH:mm:ss z",
    fullDateTime: "EEEE, d 'de' MMMM 'de' U HH:mm:ss zzzz"
}, _bt3u563 = {
    fullDate: "EEEE, d 'de' MMMM 'de' y G",
    longDate: "d 'de' MMMM 'de' y G",
    mediumDate: "dd/MM/y G",
    shortDate: "dd/MM/yy GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd/MM/yy GGGGG HH:mm",
    mediumDateTime: "dd/MM/y G HH:mm:ss",
    longDateTime: "d 'de' MMMM 'de' y G HH:mm:ss z",
    fullDateTime: "EEEE, d 'de' MMMM 'de' y G HH:mm:ss zzzz"
}, _bt3u564 = {
    "1000": _bt3u16,
    "10000": _bt3u38,
    "100000": _bt3u67,
    "1000000": _bt3u5,
    "10000000": _bt3u17,
    "100000000": _bt3u39,
    "1000000000": _bt3u6,
    "10000000000": _bt3u18,
    "100000000000": _bt3u40,
    "1000000000000": _bt3u19,
    "10000000000000": _bt3u41,
    "100000000000000": _bt3u68
}, _bt3u565 = {
    abbreviated: _bt3u528,
    narrow: _bt3u528,
    wide: _bt3u528
}, _bt3u566 = {
    "1000": _bt3u42,
    "10000": _bt3u69,
    "100000": _bt3u81,
    "1000000": _bt3u20,
    "10000000": _bt3u43,
    "100000000": _bt3u70,
    "1000000000": _bt3u21,
    "10000000000": _bt3u44,
    "100000000000": _bt3u71,
    "1000000000000": _bt3u45,
    "10000000000000": _bt3u72,
    "100000000000000": _bt3u82
}, _bt3u567 = {
    abbreviated: _bt3u537,
    narrow: _bt3u523,
    wide: _bt3u537
}, _bt3u568 = {
    "1000": _bt3u15,
    "10000": _bt3u37,
    "100000": _bt3u66,
    "1000000": _bt3u89,
    "10000000": _bt3u100,
    "100000000": _bt3u108,
    "1000000000": _bt3u90,
    "10000000000": _bt3u101,
    "100000000000": _bt3u109,
    "1000000000000": _bt3u102,
    "10000000000000": _bt3u110,
    "100000000000000": _bt3u125
}, _bt3u569 = {
    format: _bt3u550,
    standAlone: _bt3u550
}, _bt3u570 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _bt3u571 = {
    format: _bt3u552,
    standAlone: _bt3u552
}, _bt3u572 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _bt3u573 = {
    format: _bt3u555,
    standAlone: _bt3u555
}, _bt3u574 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _bt3u575 = {
    format: _bt3u559,
    standAlone: _bt3u559
}, _bt3u576 = {
    d: "d",
    E: "ccc",
    Ed: "E, d",
    Gy: "y G",
    GyMMM: "MMM 'de' y G",
    GyMMMd: "d 'de' MMM 'de' y G",
    GyMMMEd: "E, d 'de' MMM 'de' y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "d/M",
    MEd: "E, dd/MM",
    MMM: "LLL",
    MMMd: "d 'de' MMM",
    MMMEd: "E, d 'de' MMM",
    MMMMd: "d 'de' MMMM",
    MMMMEd: "E, d 'de' MMMM",
    ms: "mm:ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "MM/y GGGGG",
    yyyyMd: "dd/MM/y GGGGG",
    yyyyMEd: "E, dd/MM/y GGGGG",
    yyyyMMM: "MMM 'de' y G",
    yyyyMMMd: "d 'de' MMM 'de' y G",
    yyyyMMMEd: "E, d 'de' MMM 'de' y G",
    yyyyMMMM: "MMMM 'de' y G",
    yyyyMMMMd: "d 'de' MMMM 'de' y G",
    yyyyMMMMEd: "E, d 'de' MMMM 'de' y G",
    yyyyQQQ: "G y QQQ",
    yyyyQQQQ: "G y QQQQ",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _bt3u577 = {
    format: _bt3u567,
    standAlone: _bt3u565
}, _bt3u578 = {
    basic: _bt3u562,
    cldr: _bt3u570
}, _bt3u579 = {
    "long": _bt3u568,
    "short": _bt3u564,
    "default": "#,##0.###"
}, _bt3u580 = {
    d: {
        d: "d–d"
    },
    h: _bt3u7,
    H: {
        H: "HH–HH"
    },
    hm: _bt3u162,
    Hm: _bt3u83,
    hmv: _bt3u174,
    Hmv: _bt3u103,
    hv: _bt3u54,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _bt3u106,
    MEd: _bt3u147,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _bt3u74,
    MMMEd: _bt3u148,
    y: {
        y: "U–U"
    },
    yM: _bt3u86,
    yMd: _bt3u345,
    yMEd: _bt3u485,
    yMMM: _bt3u87,
    yMMMd: _bt3u168,
    yMMMEd: _bt3u470,
    yMMMM: _bt3u107
}, _bt3u581 = {
    basic: _bt3u563,
    cldr: _bt3u576
}, _bt3u582 = {
    beforeCurrency: _bt3u572,
    afterCurrency: _bt3u572
}, _bt3u583 = {
    d: {
        d: "d–d"
    },
    h: _bt3u117,
    H: {
        H: "HH'h' - HH'h'"
    },
    hm: _bt3u162,
    Hm: _bt3u83,
    hmv: _bt3u174,
    Hmv: _bt3u103,
    hv: _bt3u73,
    Hv: {
        H: "HH – HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _bt3u104,
    MEd: _bt3u142,
    MMM: {
        M: "MMM – MMM"
    },
    MMMd: _bt3u139,
    MMMEd: _bt3u177,
    y: {
        y: "y – y G"
    },
    yM: _bt3u105,
    yMd: _bt3u415,
    yMEd: _bt3u491,
    yMMM: _bt3u154,
    yMMMd: _bt3u510,
    yMMMEd: _bt3u531,
    yMMMM: _bt3u166
}, _bt3u584 = {
    "short": _bt3u566,
    "default": "¤#,##0.00",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _bt3u582
}, _bt3u585 = {
    abbreviated: _bt3u574,
    narrow: _bt3u574,
    wide: _bt3u574
}, _bt3u586 = {
    format: _bt3u585
}, _bt3u587 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _bt3u579,
    currency: _bt3u584,
    percent: {
        "default": "#,##0%"
    }
}, _bt3u588 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _bt3u589 = {
    era: {
        displayName: "era"
    },
    year: _bt3u542,
    "year-short": _bt3u524,
    "year-narrow": _bt3u517,
    quarter: _bt3u548,
    "quarter-short": _bt3u536,
    "quarter-narrow": _bt3u526,
    month: _bt3u543,
    "month-short": _bt3u527,
    "month-narrow": _bt3u520,
    week: _bt3u546,
    "week-short": _bt3u530,
    "week-narrow": _bt3u521,
    day: _bt3u545,
    "day-short": _bt3u525,
    "day-narrow": _bt3u518,
    weekday: _bt3u47,
    dayperiod: _bt3u2,
    hour: _bt3u533,
    "hour-short": _bt3u514,
    "hour-narrow": _bt3u505,
    minute: _bt3u538,
    "minute-short": _bt3u534,
    "minute-narrow": _bt3u506,
    second: _bt3u539,
    "second-short": _bt3u532,
    "second-narrow": _bt3u507,
    zone: _bt3u22,
    sun: _bt3u407,
    "sun-short": _bt3u218,
    "sun-narrow": _bt3u218,
    mon: _bt3u490,
    "mon-short": _bt3u219,
    "mon-narrow": _bt3u219,
    tue: _bt3u480,
    "tue-short": _bt3u220,
    "tue-narrow": _bt3u220,
    wed: _bt3u488,
    "wed-short": _bt3u221,
    "wed-narrow": _bt3u221,
    thu: _bt3u489,
    "thu-short": _bt3u178,
    "thu-narrow": _bt3u178,
    fri: _bt3u481,
    "fri-short": _bt3u222,
    "fri-narrow": _bt3u222,
    sat: _bt3u377,
    "sat-short": _bt3u223,
    "sat-narrow": _bt3u223
}, _bt3u590 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _bt3u589
}, _bt3u591 = {
    dayParts: _bt3u553,
    days: _bt3u586,
    months: _bt3u586,
    years: _bt3u586,
    zodiacs: _bt3u553
}, _bt3u592 = {
    dateFormats: _bt3u581,
    datePartsOrder: "dmy",
    dateIntervalFormats: _bt3u583,
    dateIntervalFallbackFormat: "{0} - {1}",
    dayNames: _bt3u569,
    dayPeriods: _bt3u577,
    monthNames: _bt3u575,
    eraNames: _bt3u77,
    quarterNames: _bt3u554,
    fields: _bt3u589
}, _bt3u593 = {
    dateFormats: _bt3u578,
    datePartsOrder: "dmy",
    dateIntervalFormats: _bt3u580,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _bt3u569,
    dayPeriods: _bt3u577,
    cyclicNames: _bt3u591,
    monthNames: _bt3u573,
    monthPatterns: _bt3u544,
    quarterNames: _bt3u554,
    fields: _bt3u589
};

inter.id = "pt";

inter.listPatterns = {
    "default": _bt3u325,
    unit: _bt3u325,
    unitNarrow: _bt3u325,
    unitShort: _bt3u325
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} força g",
                other: "{0} força g"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} metro por segundo ao quadrado",
                other: "{0} metros por segundo ao quadrado"
            },
            angleRevolution: {
                one: "{0} revolução",
                other: "{0} revoluções"
            },
            angleRadian: {
                one: "{0} radiano",
                other: "{0} radianos"
            },
            angleDegree: {
                one: "{0} grau",
                other: "{0} graus"
            },
            angleArcMinute: {
                one: "{0} minuto de arco",
                other: "{0} minutos de arco"
            },
            angleArcSecond: {
                one: "{0} segundo de arco",
                other: "{0} segundos de arco"
            },
            areaSquareKilometer: {
                one: "{0} quilômetro quadrado",
                other: "{0} quilômetros quadrados"
            },
            areaHectare: {
                one: "{0} hectare",
                other: "{0} hectares"
            },
            areaSquareMeter: {
                one: "{0} metro quadrado",
                other: "{0} metros quadrados"
            },
            areaSquareCentimeter: {
                one: "{0} centímetro quadrado",
                other: "{0} centímetros quadrados"
            },
            areaSquareMile: {
                one: "{0} milha quadrada",
                other: "{0} milhas quadradas"
            },
            areaAcre: _bt3u88,
            areaSquareYard: {
                one: "{0} jarda quadrada",
                other: "{0} jardas quadradas"
            },
            areaSquareFoot: {
                one: "{0} pé quadrado",
                other: "{0} pés quadrados"
            },
            areaSquareInch: {
                one: "{0} polegada quadrada",
                other: "{0} polegadas quadradas"
            },
            concentrKarat: {
                one: "{0} kilate",
                other: "{0} kilates"
            },
            consumptionLiterPerKilometer: {
                one: "{0} litro por quilômetro",
                other: "{0} litros por quilômetro"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} litro por 100 quilômetros",
                other: "{0} litros por 100 quilômetros"
            },
            consumptionMilePerGallon: {
                one: "{0} milha por galão",
                other: "{0} milhas por galão"
            },
            digitalTerabyte: {
                one: "{0} terabyte",
                other: "{0} terabytes"
            },
            digitalTerabit: {
                one: "{0} terabit",
                other: "{0} terabits"
            },
            digitalGigabyte: {
                one: "{0} gigabyte",
                other: "{0} gigabytes"
            },
            digitalGigabit: {
                one: "{0} gigabit",
                other: "{0} gigabits"
            },
            digitalMegabyte: {
                one: "{0} megabyte",
                other: "{0} megabytes"
            },
            digitalMegabit: {
                one: "{0} megabit",
                other: "{0} megabits"
            },
            digitalKilobyte: {
                one: "{0} kilobyte",
                other: "{0} kilobytes"
            },
            digitalKilobit: {
                one: "{0} kilobit",
                other: "{0} kilobits"
            },
            digitalByte: {
                one: "{0} byte",
                other: "{0} bytes"
            },
            digitalBit: {
                one: "{0} bit",
                other: "{0} bits"
            },
            durationCentury: {
                one: "{0} século",
                other: "{0} sécs."
            },
            durationYear: _bt3u75,
            durationMonth: _bt3u78,
            durationWeek: {
                one: "{0} semana",
                other: "{0} semanas"
            },
            durationDay: _bt3u76,
            durationHour: {
                one: "{0} hora",
                other: "{0} horas"
            },
            durationMinute: {
                one: "{0} minuto",
                other: "{0} minutos"
            },
            durationSecond: {
                one: "{0} segundo",
                other: "{0} segundos"
            },
            durationMillisecond: {
                one: "{0} milissegundo",
                other: "{0} milissegundos"
            },
            durationMicrosecond: {
                one: "{0} microssegundo",
                other: "{0} microssegundos"
            },
            durationNanosecond: {
                one: "{0} nanossegundo",
                other: "{0} nanossegundos"
            },
            electricAmpere: {
                one: "{0} ampere",
                other: "{0} amperes"
            },
            electricMilliampere: {
                one: "{0} miliampere",
                other: "{0} miliamperes"
            },
            electricOhm: {
                one: "{0} ohm",
                other: "{0} ohms"
            },
            electricVolt: {
                one: "{0} volt",
                other: "{0} volts"
            },
            energyKilocalorie: {
                one: "{0} quilocaloria",
                other: "{0} quilocalorias"
            },
            energyCalorie: {
                one: "{0} caloria",
                other: "{0} calorias"
            },
            energyFoodcalorie: {
                one: "{0} Caloria",
                other: "{0} Calorias"
            },
            energyKilojoule: {
                one: "{0} quilojoule",
                other: "{0} quilojoules"
            },
            energyJoule: {
                one: "{0} joule",
                other: "{0} joules"
            },
            energyKilowattHour: {
                one: "{0} quilowatt-hora",
                other: "{0} quilowatts-hora"
            },
            frequencyGigahertz: {
                one: "{0} gigahertz",
                other: "{0} gigahertz"
            },
            frequencyMegahertz: {
                one: "{0} megahertz",
                other: "{0} megahertz"
            },
            frequencyKilohertz: {
                one: "{0} kilohertz",
                other: "{0} kilohertz"
            },
            frequencyHertz: {
                one: "{0} hertz",
                other: "{0} hertz"
            },
            lengthKilometer: {
                one: "{0} quilômetro",
                other: "{0} quilômetros"
            },
            lengthMeter: {
                one: "{0} metro",
                other: "{0} metros"
            },
            lengthDecimeter: {
                one: "{0} decímetro",
                other: "{0} decímetros"
            },
            lengthCentimeter: {
                one: "{0} centímetro",
                other: "{0} centímetros"
            },
            lengthMillimeter: {
                one: "{0} milímetro",
                other: "{0} milímetros"
            },
            lengthMicrometer: {
                one: "{0} micrômetro",
                other: "{0} micrômetros"
            },
            lengthNanometer: {
                one: "{0} nanômetro",
                other: "{0} nanômetros"
            },
            lengthPicometer: {
                one: "{0} picômetro",
                other: "{0} picômetros"
            },
            lengthMile: _bt3u99,
            lengthYard: {
                one: "{0} jarda",
                other: "{0} jardas"
            },
            lengthFoot: _bt3u55,
            lengthInch: {
                one: "{0} polegada",
                other: "{0} polegadas"
            },
            lengthParsec: {
                one: "{0} parsec",
                other: "{0} parsecs"
            },
            lengthLightYear: _bt3u123,
            lengthAstronomicalUnit: {
                one: "{0} unidade astronômica",
                other: "{0} unidades astronômicas"
            },
            lengthNauticalMile: {
                one: "{0} milha náutica",
                other: "{0} milhas náuticas"
            },
            lengthMileScandinavian: {
                one: "{0} milha escandinava",
                other: "{0} milhas escandinavas"
            },
            lightLux: {
                one: "{0} lux",
                other: "{0} lux"
            },
            massMetricTon: {
                one: "{0} tonelada métrica",
                other: "{0} toneladas métricas"
            },
            massKilogram: {
                one: "{0} quilograma",
                other: "{0} quilogramas"
            },
            massGram: {
                one: "{0} grama",
                other: "{0} gramas"
            },
            massMilligram: {
                one: "{0} miligrama",
                other: "{0} miligramas"
            },
            massMicrogram: {
                one: "{0} micrograma",
                other: "{0} microgramas"
            },
            massTon: {
                one: "{0} tonelada",
                other: "{0} toneladas"
            },
            massPound: {
                one: "{0} libra",
                other: "{0} libras"
            },
            massOunce: {
                one: "{0} onça",
                other: "{0} onças"
            },
            massOunceTroy: {
                one: "{0} onça troy",
                other: "{0} onças troy"
            },
            massCarat: {
                one: "{0} quilate",
                other: "{0} quilates"
            },
            powerGigawatt: {
                one: "{0} gigawatt",
                other: "{0} gigawatts"
            },
            powerMegawatt: {
                one: "{0} megawatt",
                other: "{0} megawatts"
            },
            powerKilowatt: {
                one: "{0} quilowatt",
                other: "{0} quilowatts"
            },
            powerWatt: {
                one: "{0} watt",
                other: "{0} watts"
            },
            powerMilliwatt: {
                one: "{0} miliwatt",
                other: "{0} miliwatts"
            },
            powerHorsepower: {
                one: "{0} cavalo-vapor",
                other: "{0} cavalos-vapor"
            },
            pressureHectopascal: {
                one: "{0} hectopascal",
                other: "{0} hectopascais"
            },
            pressureMillimeterOfMercury: {
                one: "{0} milímetro de mercúrio",
                other: "{0} milímetros de mercúrio"
            },
            pressurePoundPerSquareInch: _bt3u57,
            pressureInchHg: {
                one: "{0} polegada de mercúrio",
                other: "{0} polegadas de mercúrio"
            },
            pressureMillibar: {
                one: "{0} milibar",
                other: "{0} milibares"
            },
            speedKilometerPerHour: {
                one: "{0} quilômetro por hora",
                other: "{0} quilômetros por hora"
            },
            speedMeterPerSecond: {
                one: "{0} metro por segundo",
                other: "{0} metros por segundo"
            },
            speedMilePerHour: {
                one: "{0} milha por hora",
                other: "{0} milhas por hora"
            },
            speedKnot: _bt3u56,
            temperatureGeneric: _bt3u4,
            temperatureCelsius: {
                one: "{0} grau Celsius",
                other: "{0} graus Celsius"
            },
            temperatureFahrenheit: {
                one: "{0} grau Fahrenheit",
                other: "{0} graus Fahrenheit"
            },
            temperatureKelvin: {
                one: "{0} kelvin",
                other: "{0} kelvins"
            },
            volumeCubicKilometer: {
                one: "{0} quilômetro cúbico",
                other: "{0} quilômetros cúbicos"
            },
            volumeCubicMeter: {
                one: "{0} metro cúbico",
                other: "{0} metros cúbicos"
            },
            volumeCubicCentimeter: {
                one: "{0} centímetro cúbico",
                other: "{0} centímetros cúbicos"
            },
            volumeCubicMile: {
                one: "{0} milha cúbica",
                other: "{0} milhas cúbicas"
            },
            volumeCubicYard: {
                one: "{0} jarda cúbica",
                other: "{0} jardas cúbicas"
            },
            volumeCubicFoot: {
                one: "{0} pé cúbico",
                other: "{0} pés cúbicos"
            },
            volumeCubicInch: {
                one: "{0} polegada cúbica",
                other: "{0} polegadas cúbicas"
            },
            volumeMegaliter: {
                one: "{0} megalitro",
                other: "{0} megalitros"
            },
            volumeHectoliter: {
                one: "{0} hectolitro",
                other: "{0} hectolitros"
            },
            volumeLiter: {
                one: "{0} litro",
                other: "{0} litros"
            },
            volumeDeciliter: {
                one: "{0} decilitro",
                other: "{0} decilitros"
            },
            volumeCentiliter: {
                one: "{0} centilitro",
                other: "{0} centilitros"
            },
            volumeMilliliter: {
                one: "{0} mililitro",
                other: "{0} mililitros"
            },
            volumePintMetric: {
                one: "{0} pint métrico",
                other: "{0} pints métricos"
            },
            volumeCupMetric: {
                one: "{0} xícara métrica",
                other: "{0} xícaras métricas"
            },
            volumeAcreFoot: _bt3u124,
            volumeGallon: {
                one: "{0} galão",
                other: "{0} galões"
            },
            volumeQuart: {
                one: "{0} quarto",
                other: "{0} quartos"
            },
            volumePint: {
                one: "{0} pint",
                other: "{0} pints"
            },
            volumeCup: {
                one: "{0} xícara",
                other: "{0} xícaras"
            },
            volumeFluidOunce: {
                one: "{0} onça fluida",
                other: "{0} onças fluidas"
            },
            volumeTablespoon: {
                one: "{0} colher de sopa",
                other: "{0} colheres de sopa"
            },
            volumeTeaspoon: {
                one: "{0} colher de chá",
                other: "{0} colheres de chá"
            }
        },
        compoundUnit: {
            per: "{0} por {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: _bt3u8,
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: {
                one: "{0} rev",
                other: "{0} rev"
            },
            angleRadian: {
                one: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: _bt3u4,
            angleArcMinute: {
                one: "{0} arcmin",
                other: "{0} arcmins"
            },
            angleArcSecond: {
                one: "{0} arcseg",
                other: "{0} arcsegs"
            },
            areaSquareKilometer: _bt3u58,
            areaHectare: _bt3u24,
            areaSquareMeter: _bt3u25,
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: _bt3u59,
            areaAcre: {
                one: "{0} ac",
                other: "{0} ac"
            },
            areaSquareYard: {
                one: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: _bt3u60,
            areaSquareInch: {
                one: "{0} pol²",
                other: "{0} pol²"
            },
            concentrKarat: {
                one: "{0} k",
                other: "{0} k"
            },
            consumptionLiterPerKilometer: {
                one: "{0} l/km",
                other: "{0} l/km"
            },
            "consumptionLiterPer-100kilometers": _bt3u131,
            consumptionMilePerGallon: {
                one: "{0} mpg",
                other: "{0} mpg"
            },
            digitalTerabyte: {
                one: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: {
                one: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: {
                one: "{0} kB",
                other: "{0} kB"
            },
            digitalKilobit: {
                one: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: {
                one: "{0} byte",
                other: "{0} byte"
            },
            digitalBit: {
                one: "{0} bit",
                other: "{0} bit"
            },
            durationCentury: {
                one: "{0} séc.",
                other: "{0} sécs."
            },
            durationYear: _bt3u75,
            durationMonth: _bt3u78,
            durationWeek: _bt3u79,
            durationDay: _bt3u76,
            durationHour: _bt3u9,
            durationMinute: _bt3u61,
            durationSecond: {
                one: "{0} seg",
                other: "{0} seg"
            },
            durationMillisecond: _bt3u26,
            durationMicrosecond: {
                one: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: {
                one: "{0} kcal",
                other: "{0} kcal"
            },
            energyCalorie: {
                one: "{0} cal",
                other: "{0} cal"
            },
            energyFoodcalorie: {
                one: "{0} Cal",
                other: "{0} Cal"
            },
            energyKilojoule: {
                one: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: _bt3u27,
            lengthMeter: _bt3u10,
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: _bt3u28,
            lengthMillimeter: _bt3u29,
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: _bt3u30,
            lengthMile: {
                one: "{0} mi",
                other: "{0} mi"
            },
            lengthYard: _bt3u31,
            lengthFoot: _bt3u55,
            lengthInch: {
                one: "{0} pol.",
                other: "{0} pol."
            },
            lengthParsec: {
                one: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: _bt3u123,
            lengthAstronomicalUnit: {
                one: "{0} ua",
                other: "{0} ua"
            },
            lengthNauticalMile: {
                one: "{0} mn",
                other: "{0} mn"
            },
            lengthMileScandinavian: {
                one: "{0} smi",
                other: "{0} smi"
            },
            lightLux: {
                one: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: {
                one: "{0} t",
                other: "{0} t"
            },
            massKilogram: _bt3u32,
            massGram: _bt3u11,
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} µg",
                other: "{0} µg"
            },
            massTon: {
                one: "{0} tn",
                other: "{0} tn"
            },
            massPound: _bt3u33,
            massOunce: _bt3u34,
            massOunceTroy: {
                one: "{0} oz t",
                other: "{0} oz t"
            },
            massCarat: {
                one: "{0} ql",
                other: "{0} ql"
            },
            powerGigawatt: {
                one: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: _bt3u35,
            powerWatt: _bt3u12,
            powerMilliwatt: {
                one: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: _bt3u36,
            pressureHectopascal: _bt3u62,
            pressureMillimeterOfMercury: {
                one: "{0} mm Hg",
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: _bt3u57,
            pressureInchHg: {
                one: "{0} pol Hg",
                other: "{0} pol Hg"
            },
            pressureMillibar: {
                one: "{0} mbar",
                other: "{0} mbar"
            },
            speedKilometerPerHour: _bt3u80,
            speedMeterPerSecond: _bt3u63,
            speedMilePerHour: {
                one: "{0} mph",
                other: "{0} mph"
            },
            speedKnot: _bt3u56,
            temperatureGeneric: _bt3u4,
            temperatureCelsius: _bt3u13,
            temperatureFahrenheit: {
                one: "{0} °F",
                other: "{0} °F"
            },
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: _bt3u64,
            volumeCubicMeter: {
                one: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: _bt3u65,
            volumeCubicYard: {
                one: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: {
                one: "{0} pol³",
                other: "{0} pol³"
            },
            volumeMegaliter: {
                one: "{0} ML",
                other: "{0} ML"
            },
            volumeHectoliter: {
                one: "{0} hl",
                other: "{0} hl"
            },
            volumeLiter: _bt3u14,
            volumeDeciliter: {
                one: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} cl",
                other: "{0} cl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                other: "{0} ml"
            },
            volumePintMetric: {
                one: "{0} ptm",
                other: "{0} ptm"
            },
            volumeCupMetric: {
                one: "{0} xícm",
                other: "{0} xícm"
            },
            volumeAcreFoot: _bt3u124,
            volumeGallon: {
                one: "{0} gal",
                other: "{0} gal"
            },
            volumeQuart: {
                one: "{0} qt",
                other: "{0} qt"
            },
            volumePint: {
                one: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: {
                one: "{0} xíc.",
                other: "{0} xíc."
            },
            volumeFluidOunce: {
                one: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} CS",
                other: "{0} CS"
            },
            volumeTeaspoon: {
                one: "{0} cc",
                other: "{0} cc"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            massStone: {
                other: "{0} st"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: _bt3u8,
            angleDegree: _bt3u4,
            angleArcMinute: {
                one: "{0}'",
                other: "{0}'"
            },
            angleArcSecond: {
                one: '{0}"',
                other: '{0}"'
            },
            areaSquareKilometer: _bt3u58,
            areaHectare: _bt3u24,
            areaSquareMeter: _bt3u25,
            areaSquareMile: _bt3u59,
            areaAcre: _bt3u88,
            areaSquareFoot: _bt3u60,
            "consumptionLiterPer-100kilometers": _bt3u131,
            durationYear: _bt3u75,
            durationMonth: _bt3u78,
            durationWeek: _bt3u79,
            durationDay: _bt3u76,
            durationHour: _bt3u9,
            durationMinute: _bt3u61,
            durationSecond: {
                one: "{0} s",
                other: "{0} s"
            },
            durationMillisecond: _bt3u26,
            lengthKilometer: _bt3u27,
            lengthMeter: _bt3u10,
            lengthCentimeter: _bt3u28,
            lengthMillimeter: _bt3u29,
            lengthPicometer: _bt3u30,
            lengthMile: _bt3u99,
            lengthYard: _bt3u31,
            lengthFoot: _bt3u55,
            lengthInch: {
                one: "{0}″",
                other: "{0}″"
            },
            lengthLightYear: _bt3u123,
            massKilogram: _bt3u32,
            massGram: _bt3u11,
            massPound: _bt3u33,
            massOunce: _bt3u34,
            powerKilowatt: _bt3u35,
            powerWatt: _bt3u12,
            powerHorsepower: _bt3u36,
            pressureHectopascal: _bt3u62,
            pressureInchHg: {
                one: '{0}" Hg',
                other: '{0}" Hg'
            },
            pressureMillibar: {
                one: "{0} mb",
                other: "{0} mb"
            },
            speedKilometerPerHour: _bt3u80,
            speedMeterPerSecond: _bt3u63,
            speedMilePerHour: {
                one: "{0} mi/h",
                other: "{0} mi/h"
            },
            temperatureCelsius: _bt3u13,
            temperatureFahrenheit: {
                one: "{0}°F",
                other: "{0}°F"
            },
            volumeCubicKilometer: _bt3u64,
            volumeCubicMile: _bt3u65,
            volumeLiter: _bt3u14
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "Horário {0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} (+1)",
        standard: "{0} (+0)"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "á", "à", "â", "ã", "b", "c", "ç", "d", "e", "é", "ê", "f", "g", "h", "i", "í", "j", "k", "l", "m", "n", "o", "ó", "ò", "ô", "õ", "p", "q", "r", "s", "t", "u", "ú", "v", "w", "x", "y", "z" ],
        auxiliary: [ "ª", "ă", "å", "ä", "ā", "æ", "è", "ĕ", "ë", "ē", "ì", "ĭ", "î", "ï", "ī", "ñ", "º", "ŏ", "ö", "ø", "ō", "œ", "ù", "ŭ", "û", "ü", "ū", "ÿ" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ],
        punctuation: [ "\\-", "‐", "–", "—", ",", ";", "\\:", "!", "?", ".", "…", "'", "‘", "’", '"', "“", "”", "(", ")", "\\[", "\\]", "§", "@", "*", "/", "\\&", "#", "†", "‡", "′", "″" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}… {1}",
        "word-final": "{0}…",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _bt3u540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _bt3u587,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _bt3u587,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _bt3u540,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _bt3u540,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _bt3u540,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _bt3u540,
        digits: "renderEthiopic"
    },
    finance: _bt3u541,
    fullwide: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _bt3u540,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _bt3u540,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _bt3u540,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _bt3u540,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _bt3u547,
    hansfin: _bt3u549,
    hant: _bt3u547,
    hantfin: _bt3u549,
    hebr: {
        symbols: _bt3u540,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _bt3u540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _bt3u547,
    jpanfin: _bt3u549,
    kali: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _bt3u540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _bt3u540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _bt3u540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _bt3u540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _bt3u540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _bt3u540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _bt3u540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _bt3u540,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _bt3u541,
    nkoo: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _bt3u540,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _bt3u540,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _bt3u540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _bt3u540,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _bt3u540,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _bt3u540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _bt3u541,
    vaii: {
        symbols: _bt3u540,
        formats: _bt3u587,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _bt3u540,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _bt3u581,
        datePartsOrder: "dmy",
        dateIntervalFormats: _bt3u583,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _bt3u569,
        dayPeriods: _bt3u577,
        monthNames: _bt3u571,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _bt3u554,
        fields: _bt3u589
    },
    chinese: _bt3u593,
    coptic: {
        dateFormats: _bt3u581,
        datePartsOrder: "dmy",
        dateIntervalFormats: _bt3u583,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _bt3u569,
        dayPeriods: _bt3u577,
        monthNames: {
            format: _bt3u558,
            standAlone: _bt3u558
        },
        eraNames: _bt3u152,
        quarterNames: _bt3u554,
        fields: _bt3u589
    },
    dangi: _bt3u593,
    ethioaa: _bt3u590,
    ethiopic: {
        dateFormats: _bt3u581,
        datePartsOrder: "dmy",
        dateIntervalFormats: _bt3u583,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _bt3u569,
        dayPeriods: _bt3u577,
        monthNames: {
            format: _bt3u560,
            standAlone: _bt3u560
        },
        eraNames: _bt3u152,
        quarterNames: _bt3u554,
        fields: _bt3u589
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d 'de' MMMM 'de' y",
                longDate: "d 'de' MMMM 'de' y",
                mediumDate: "d 'de' MMM 'de' y",
                shortDate: "dd/MM/yy",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "dd/MM/yy HH:mm",
                mediumDateTime: "d 'de' MMM 'de' y HH:mm:ss",
                longDateTime: "d 'de' MMMM 'de' y HH:mm:ss z",
                fullDateTime: "EEEE, d 'de' MMMM 'de' y HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E, d",
                Ehm: "E, h:mm a",
                EHm: "E, HH:mm",
                Ehms: "E, h:mm:ss a",
                EHms: "E, HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM 'de' y G",
                GyMMMd: "d 'de' MMM 'de' y G",
                GyMMMEd: "E, d 'de' MMM 'de' y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "d/M",
                MEd: "E, dd/MM",
                MMdd: "dd/MM",
                MMM: "LLL",
                MMMd: "d 'de' MMM",
                MMMEd: "E, d 'de' MMM",
                MMMMd: "d 'de' MMMM",
                MMMMEd: "E, d 'de' MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "MM/y",
                yMd: "dd/MM/y",
                yMEd: "E, dd/MM/y",
                yMM: "MM/y",
                yMMM: "MMM 'de' y",
                yMMMd: "d 'de' MMM 'de' y",
                yMMMEd: "E, d 'de' MMM 'de' y",
                yMMMM: "MMMM 'de' y",
                yMMMMd: "d 'de' MMMM 'de' y",
                yMMMMEd: "E, d 'de' MMMM 'de' y",
                yQQQ: "y QQQ",
                yQQQQ: "y QQQQ"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d – d"
            },
            h: _bt3u117,
            H: {
                H: "HH'h' - HH'h'"
            },
            hm: {
                a: "h:mm a – h:mm a",
                h: "h:mm – h:mm a",
                m: "h:mm – h:mm a"
            },
            Hm: {
                H: "HH:mm – HH:mm",
                m: "HH:mm – HH:mm"
            },
            hmv: {
                a: "h:mm a – h:mm a v",
                h: "h:mm – h:mm a v",
                m: "h:mm – h:mm a v"
            },
            Hmv: {
                H: "HH:mm – HH:mm v",
                m: "HH:mm – HH:mm v"
            },
            hv: _bt3u73,
            Hv: {
                H: "HH – HH v"
            },
            M: {
                M: "M – M"
            },
            Md: _bt3u104,
            MEd: _bt3u142,
            MMM: {
                M: "MMM – MMM"
            },
            MMMd: {
                d: "d – d 'de' MMM",
                M: "d 'de' MMM – d 'de' MMM"
            },
            MMMEd: _bt3u177,
            y: {
                y: "y – y"
            },
            yM: {
                M: "MM/y – MM/y",
                y: "MM/y – MM/y"
            },
            yMd: {
                d: "dd/MM/y – dd/MM/y",
                M: "dd/MM/y – dd/MM/y",
                y: "dd/MM/y – dd/MM/y"
            },
            yMEd: {
                d: "E, dd/MM/y – E, dd/MM/y",
                M: "E, dd/MM/y – E, dd/MM/y",
                y: "E, dd/MM/y – E, dd/MM/y"
            },
            yMMM: {
                M: "MMM – MMM 'de' y",
                y: "MMM 'de' y – MMM 'de' y"
            },
            yMMMd: {
                d: "d – d 'de' MMM 'de' y",
                M: "d 'de' MMM – d 'de' MMM 'de' y",
                y: "d 'de' MMM 'de' y – d 'de' MMM 'de' y"
            },
            yMMMEd: {
                d: "E, d – E, d 'de' MMM 'de' y",
                M: "E, d 'de' MMM – E, d 'de' MMM 'de' y",
                y: "E, d 'de' MMM 'de' y – E, d 'de' MMM 'de' y"
            },
            yMMMM: {
                M: "MMMM – MMMM 'de' y",
                y: "MMMM 'de' y – MMMM 'de' y"
            }
        },
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _bt3u569,
        dayPeriods: _bt3u577,
        monthNames: _bt3u571,
        eraNames: {
            wide: [ "antes de Cristo", "depois de Cristo" ],
            abbreviated: [ "a.C.", "d.C." ]
        },
        quarterNames: _bt3u554,
        fields: _bt3u589
    },
    hebrew: {
        dateFormats: _bt3u581,
        datePartsOrder: "dmy",
        dateIntervalFormats: _bt3u583,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _bt3u569,
        dayPeriods: _bt3u577,
        monthNames: {
            format: _bt3u556,
            standAlone: _bt3u556
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _bt3u554,
        fields: _bt3u589
    },
    indian: {
        dateFormats: _bt3u581,
        datePartsOrder: "dmy",
        dateIntervalFormats: _bt3u583,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _bt3u569,
        dayPeriods: _bt3u577,
        monthNames: {
            format: _bt3u561,
            standAlone: _bt3u561
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _bt3u554,
        fields: _bt3u589
    },
    islamic: _bt3u592,
    "islamic-umalqura": _bt3u592,
    "islamic-tbla": _bt3u592,
    "islamic-civil": _bt3u592,
    "islamic-rgsa": _bt3u592,
    iso8601: _bt3u590,
    japanese: {
        dateFormats: _bt3u581,
        datePartsOrder: "dmy",
        dateIntervalFormats: _bt3u583,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _bt3u569,
        dayPeriods: _bt3u577,
        monthNames: _bt3u571,
        eraNames: {
            wide: _bt3u588,
            abbreviated: _bt3u588
        },
        quarterNames: _bt3u554,
        fields: _bt3u589
    },
    persian: {
        dateFormats: _bt3u581,
        datePartsOrder: "dmy",
        dateIntervalFormats: _bt3u583,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _bt3u569,
        dayPeriods: _bt3u577,
        monthNames: {
            format: _bt3u557,
            standAlone: _bt3u557
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _bt3u554,
        fields: _bt3u589
    },
    roc: {
        dateFormats: _bt3u581,
        datePartsOrder: "dmy",
        dateIntervalFormats: _bt3u583,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _bt3u569,
        dayPeriods: _bt3u577,
        monthNames: _bt3u571,
        eraNames: {
            wide: _bt3u23,
            abbreviated: _bt3u23
        },
        quarterNames: _bt3u554,
        fields: _bt3u589
    },
    islamicc: _bt3u590
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2)) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderDigitsOrdinalMasculine(n);
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinalMasculine(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderDigitsOrdinalMasculine = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinalMasculine(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + this.renderDordMascabbrev(n);
};

inter.renderSpelloutCardinalMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "menos " + this.renderSpelloutCardinalMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculine(Math.floor(n)) + " vírgula " + this.renderSpelloutCardinalMasculine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " quatrilhões" + (n === 2e15 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 1e15) return "um quatrilhão" + (n === 1e15 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " trilhões" + (n === 2e12 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 1e12) return "um trilhão" + (n === 1e12 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " bilhões" + (n === 2e9 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 1e9) return "um bilhão" + (n === 1e9 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " milhões" + (n === 2e6 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 1e6) return "um milhão" + (n === 1e6 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e3)) + " mil" + (n === 2e3 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 1e3) return "mil" + (n === 1e3 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 900) return "novecentos" + (n === 900 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 800) return "oitocentos" + (n === 800 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 700) return "setecentos" + (n === 700 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 600) return "seiscentos" + (n === 600 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 500) return "quinhentos" + (n === 500 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 400) return "quatrocentos" + (n === 400 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 300) return "trezentos" + (n === 300 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 200) return "duzentos" + (n === 200 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 101) return "cento e " + this.renderSpelloutCardinalMasculine(n % 100);
    if (n >= 100) return "cem";
    if (n >= 90) return "noventa" + (n === 90 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 80) return "oitenta" + (n === 80 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 70) return "setenta" + (n === 70 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 60) return "sessenta" + (n === 60 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 50) return "cinquenta" + (n === 50 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 40) return "quarenta" + (n === 40 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 30) return "trinta" + (n === 30 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 20) return "vinte" + (n === 20 ? "" : " e " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 19) return "dezenove";
    if (n >= 18) return "dezoito";
    if (n >= 17) return "dezessete";
    if (n >= 16) return "dezesseis";
    if (n >= 15) return "quinze";
    if (n >= 14) return "catorze";
    if (n >= 13) return "treze";
    if (n >= 12) return "doze";
    if (n >= 11) return "onze";
    if (n >= 10) return "dez";
    if (n >= 9) return "nove";
    if (n >= 8) return "oito";
    if (n >= 7) return "sete";
    if (n >= 6) return "seis";
    if (n >= 5) return "cinco";
    if (n >= 4) return "quatro";
    if (n >= 3) return "três";
    if (n >= 2) return "dois";
    if (n >= 1) return "um";
    if (n >= 0) return "zero";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderDordMascabbrev = function(n) {
    if (n >= 0) return "º";
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 6), {
    id: "Pacific/Tahiti",
    regionId: "061",
    utcStandardOffsetSeconds: -36e3,
    displayName: "Taiti",
    countryId: "PF"
}, P.timeZones.slice(7, 36), {
    id: "America/North_Dakota/Beulah",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Beulah, Dakota do Norte",
    countryId: "US"
}, {
    id: "America/North_Dakota/Center",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Central, Dakota do Norte",
    countryId: "US"
}, P.timeZones.slice(38, 40), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Cidade do México",
    countryId: "MX"
}, P.timeZones[40], P.timeZones[42], {
    id: "Pacific/Galapagos",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Galápagos",
    countryId: "EC"
}, P.timeZones[44], {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Ilha de Páscoa",
    countryId: "CL"
}, P.timeZones[45], {
    id: "America/Managua",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Manágua",
    countryId: "NI"
}, P.timeZones.slice(47, 49), {
    id: "America/Monterrey",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Monterrei",
    countryId: "MX"
}, {
    id: "America/Merida",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mérida",
    countryId: "MX"
}, {
    id: "America/North_Dakota/New_Salem",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "New Salen, Dakota do Norte",
    countryId: "US"
}, P.timeZones.slice(53, 62), {
    id: "America/Bogota",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Bogotá",
    countryId: "CO"
}, {
    id: "America/Cayman",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Caimã",
    countryId: "KY"
}, {
    id: "America/Cancun",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Cancún",
    countryId: "MX"
}, P.timeZones[65], {
    id: "America/Eirunepe",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Eirunepé",
    countryId: "BR"
}, P.timeZones[67], {
    id: "America/Guayaquil",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Guaiaquil",
    countryId: "EC"
}, P.timeZones.slice(69, 78), {
    id: "America/New_York",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Nova York",
    countryId: "US"
}, {
    id: "America/Panama",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Panamá",
    countryId: "PA"
}, P.timeZones[80], {
    id: "America/Port-au-Prince",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Porto Príncipe",
    countryId: "HT"
}, P.timeZones.slice(82, 88), {
    id: "America/Antigua",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Antígua",
    countryId: "AG"
}, P.timeZones[89], {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Assunção",
    countryId: "PY"
}, P.timeZones[91], {
    id: "Atlantic/Bermuda",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Bermudas",
    countryId: "BM"
}, P.timeZones.slice(93, 97), {
    id: "America/Cuiaba",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Cuiabá",
    countryId: "BR"
}, {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 102), {
    id: "America/Grenada",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Granada",
    countryId: "GD"
}, {
    id: "America/Guadeloupe",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Guadalupe",
    countryId: "GP"
}, {
    id: "America/Guyana",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Guiana",
    countryId: "GY"
}, P.timeZones.slice(105, 111), {
    id: "America/Martinique",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Martinica",
    countryId: "MQ"
}, P.timeZones.slice(112, 114), {
    id: "America/Port_of_Spain",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Porto Espanha",
    countryId: "TT"
}, {
    id: "America/Puerto_Rico",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Porto Rico",
    countryId: "PR"
}, P.timeZones[115], {
    id: "America/St_Lucia",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Santa Lúcia",
    countryId: "LC"
}, P.timeZones.slice(117, 119), P.timeZones[122], {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "São Bartolomeu",
    countryId: "BL"
}, {
    id: "America/St_Kitts",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "São Cristóvão",
    countryId: "KN"
}, {
    id: "America/St_Vincent",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "São Vicente",
    countryId: "VC"
}, P.timeZones.slice(124, 127), {
    id: "America/Araguaina",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Araguaína",
    countryId: "BR"
}, P.timeZones[128], {
    id: "America/Belem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Belém",
    countryId: "BR"
}, P.timeZones[130], {
    id: "America/Cayenne",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Caiena",
    countryId: "GF"
}, P.timeZones[131], P.timeZones.slice(133, 137), {
    id: "America/Maceio",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Maceió",
    countryId: "BR"
}, P.timeZones.slice(138, 140), {
    id: "America/Montevideo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Montevidéu",
    countryId: "UY"
}, P.timeZones.slice(141, 150), {
    id: "America/Santarem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Santarém",
    countryId: "BR"
}, P.timeZones[152], {
    id: "America/Sao_Paulo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "São Paulo",
    countryId: "BR"
}, {
    id: "America/Argentina/Tucuman",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Tucumã",
    countryId: "AR"
}, P.timeZones[154], {
    id: "America/Noronha",
    regionId: "005",
    utcStandardOffsetSeconds: -7200,
    displayName: "Fernando de Noronha",
    countryId: "BR"
}, {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Geórgia do Sul",
    countryId: "GS"
}, P.timeZones[156], {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Açores",
    countryId: "PT"
}, {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Cabo Verde",
    countryId: "CV"
}, P.timeZones.slice(160, 162), {
    id: "Africa/Accra",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Acra",
    countryId: "GH"
}, {
    id: "Africa/Bamako",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Bamaco",
    countryId: "ML"
}, P.timeZones.slice(164, 166), {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Canárias",
    countryId: "ES"
}, {
    id: "Africa/Conakry",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Conacri",
    countryId: "GN"
}, {
    id: "Africa/Dakar",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Dacar",
    countryId: "SN"
}, P.timeZones.slice(169, 174), {
    id: "Europe/Isle_of_Man",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Ilha de Man",
    countryId: "IM"
}, P.timeZones[175], {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lisboa",
    countryId: "PT"
}, {
    id: "Africa/Lome",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Lomé",
    countryId: "TG"
}, {
    id: "Europe/London",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Londres",
    countryId: "GB"
}, P.timeZones[179], {
    id: "Africa/Monrovia",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Monróvia",
    countryId: "LR"
}, P.timeZones.slice(181, 184), {
    id: "Atlantic/St_Helena",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Santa Helena",
    countryId: "SH"
}, {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Europe/Amsterdam",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Amsterdã",
    countryId: "NL"
}, P.timeZones[189], {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Argel",
    countryId: "DZ"
}, P.timeZones[190], {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrado",
    countryId: "RS"
}, {
    id: "Europe/Berlin",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Berlim",
    countryId: "DE"
}, P.timeZones.slice(193, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bruxelas",
    countryId: "BE"
}, {
    id: "Europe/Budapest",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Budapeste",
    countryId: "HU"
}, {
    id: "Europe/Busingen",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Büsingen",
    countryId: "DE"
}, P.timeZones.slice(198, 200), {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Copenhague",
    countryId: "DK"
}, P.timeZones[201], {
    id: "Africa/El_Aaiun",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "El Aaiún",
    countryId: "EH"
}, {
    id: "Europe/Stockholm",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Estocolmo",
    countryId: "SE"
}, P.timeZones.slice(203, 207), {
    id: "Europe/Ljubljana",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Liubliana",
    countryId: "SI"
}, P.timeZones.slice(208, 210), {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luxemburgo",
    countryId: "LU"
}, {
    id: "Europe/Madrid",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Madri",
    countryId: "ES"
}, P.timeZones.slice(212, 214), {
    id: "Europe/Monaco",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Mônaco",
    countryId: "MC"
}, P.timeZones[215], {
    id: "Africa/Niamey",
    regionId: "011",
    utcStandardOffsetSeconds: 3600,
    displayName: "Niamei",
    countryId: "NE"
}, P.timeZones.slice(217, 219), {
    id: "Europe/Podgorica",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Podgóritza",
    countryId: "ME"
}, {
    id: "Africa/Porto-Novo",
    regionId: "011",
    utcStandardOffsetSeconds: 3600,
    displayName: "Porto Novo",
    countryId: "BJ"
}, {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Praga",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Roma",
    countryId: "IT"
}, P.timeZones.slice(223, 226), {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, {
    id: "Africa/Tunis",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Túnis",
    countryId: "TN"
}, P.timeZones[229], {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Varsóvia",
    countryId: "PL"
}, {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Vaticano",
    countryId: "VA"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Viena",
    countryId: "AT"
}, P.timeZones[233], {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zurique",
    countryId: "CH"
}, {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Atenas",
    countryId: "GR"
}, {
    id: "Asia/Beirut",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Beirute",
    countryId: "LB"
}, P.timeZones[237], {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bucareste",
    countryId: "RO"
}, P.timeZones.slice(239, 241), {
    id: "Africa/Khartoum",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Cartum",
    countryId: "SD"
}, P.timeZones.slice(241, 247), {
    id: "Europe/Helsinki",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Helsinque",
    countryId: "FI"
}, {
    id: "Asia/Jerusalem",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Jerusalém",
    countryId: "IL"
}, {
    id: "Africa/Johannesburg",
    regionId: "018",
    utcStandardOffsetSeconds: 7200,
    displayName: "Johannesburgo",
    countryId: "ZA"
}, P.timeZones[250], {
    id: "Europe/Kaliningrad",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kaliningrado",
    countryId: "RU"
}, P.timeZones.slice(253, 256), {
    id: "Africa/Lusaka",
    regionId: "014",
    utcStandardOffsetSeconds: 7200,
    displayName: "Lusaca",
    countryId: "ZM"
}, P.timeZones.slice(257, 261), {
    id: "Asia/Nicosia",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Nicósia",
    countryId: "CY"
}, P.timeZones[262], {
    id: "Europe/Sofia",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Sófia",
    countryId: "BG"
}, P.timeZones[264], {
    id: "Africa/Tripoli",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Trípoli",
    countryId: "LY"
}, P.timeZones.slice(266, 268), {
    id: "Asia/Aden",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Adem",
    countryId: "YE"
}, {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Adis-Abeba",
    countryId: "ET"
}, {
    id: "Asia/Amman",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Amã",
    countryId: "JO"
}, P.timeZones.slice(271, 273), {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdá",
    countryId: "IQ"
}, {
    id: "Asia/Bahrain",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Barein",
    countryId: "BH"
}, {
    id: "Africa/Kampala",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Campala",
    countryId: "UG"
}, {
    id: "Indian/Comoro",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Comores",
    countryId: "KM"
}, {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damasco",
    countryId: "SY"
}, P.timeZones[277], {
    id: "Africa/Djibouti",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Djibuti",
    countryId: "DJ"
}, {
    id: "Europe/Istanbul",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Istambul",
    countryId: "TR"
}, P.timeZones.slice(281, 285), {
    id: "Africa/Mogadishu",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Mogadíscio",
    countryId: "SO"
}, {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moscou",
    countryId: "RU"
}, {
    id: "Africa/Nairobi",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Nairóbi",
    countryId: "KE"
}, P.timeZones[288], {
    id: "Asia/Riyadh",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Riadi",
    countryId: "SA"
}, {
    id: "Antarctica/Syowa",
    utcStandardOffsetSeconds: 10800,
    displayName: "Showa",
    countryId: "AQ"
}, P.timeZones[290], {
    id: "Europe/Volgograd",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Volgogrado",
    countryId: "RU"
}, {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Teerã",
    countryId: "IR"
}, P.timeZones.slice(294, 297), {
    id: "Indian/Mahe",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Mahé",
    countryId: "SC"
}, {
    id: "Asia/Muscat",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Mascate",
    countryId: "OM"
}, {
    id: "Indian/Mauritius",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Maurício",
    countryId: "MU"
}, {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Reunião",
    countryId: "RE"
}, P.timeZones.slice(301, 308), {
    id: "Asia/Aqtobe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aqtöbe",
    countryId: "KZ"
}, {
    id: "Asia/Ashgabat",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Asgabate",
    countryId: "TM"
}, P.timeZones[310], {
    id: "Asia/Karachi",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Carachi",
    countryId: "PK"
}, {
    id: "Asia/Dushanbe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Duchambe",
    countryId: "TJ"
}, {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Ecaterimburgo",
    countryId: "RU"
}, P.timeZones[313], {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Maldivas",
    countryId: "MV"
}, P.timeZones.slice(315, 318), {
    id: "Asia/Samarkand",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Samarcanda",
    countryId: "UZ"
}, P.timeZones[319], P.timeZones.slice(321, 327), {
    id: "Asia/Dhaka",
    regionId: "034",
    utcStandardOffsetSeconds: 21600,
    displayName: "Dacca",
    countryId: "BD"
}, P.timeZones.slice(328, 330), {
    id: "Asia/Thimphu",
    regionId: "034",
    utcStandardOffsetSeconds: 21600,
    displayName: "Timphu",
    countryId: "BT"
}, P.timeZones.slice(331, 341), {
    id: "Asia/Jakarta",
    regionId: "035",
    utcStandardOffsetSeconds: 25200,
    displayName: "Jacarta",
    countryId: "ID"
}, P.timeZones.slice(342, 351), {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Cingapura",
    countryId: "SG"
}, P.timeZones.slice(351, 353), {
    id: "Asia/Kuala_Lumpur",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Kuala Lampur",
    countryId: "MY"
}, P.timeZones[354], {
    id: "Asia/Makassar",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Macassar",
    countryId: "ID"
}, P.timeZones[355], P.timeZones.slice(357, 359), P.timeZones[361], {
    id: "Asia/Ulaanbaatar",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Ulan Bator",
    countryId: "MN"
}, {
    id: "Asia/Shanghai",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Xangai",
    countryId: "CN"
}, P.timeZones.slice(363, 370), {
    id: "Asia/Seoul",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Seul",
    countryId: "KR"
}, {
    id: "Asia/Tokyo",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tóquio",
    countryId: "JP"
}, P.timeZones.slice(372, 392), P.timeZones.slice(393, 397), {
    id: "Pacific/Noumea",
    regionId: "054",
    utcStandardOffsetSeconds: 39600,
    displayName: "Nouméa",
    countryId: "NC"
}, P.timeZones[398], {
    id: "Asia/Sakhalin",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Sacalina",
    countryId: "RU"
}, P.timeZones[400], {
    id: "Pacific/Efate",
    regionId: "054",
    utcStandardOffsetSeconds: 39600,
    displayName: "Éfaté",
    countryId: "VU"
}, P.timeZones.slice(401, 410), {
    id: "Pacific/Tarawa",
    regionId: "057",
    utcStandardOffsetSeconds: 43200,
    displayName: "Taraua",
    countryId: "KI"
}, P.timeZones.slice(411, 414), P.timeZones.slice(415, 418), {
    id: "Pacific/Apia",
    regionId: "061",
    utcStandardOffsetSeconds: 46800,
    displayName: "Ápia",
    countryId: "WS"
}, P.timeZones[418]);

inter.territories = [ _bt3u363, _bt3u256, _bt3u300, _bt3u461, _bt3u486, _bt3u453, _bt3u422, _bt3u257, _bt3u224, _bt3u301, _bt3u153, _bt3u428, _bt3u326, _bt3u258, _bt3u259, _bt3u193, _bt3u396, _bt3u438, _bt3u327, _bt3u346, _bt3u260, _bt3u261, _bt3u347, _bt3u302, _bt3u225, _bt3u194, _bt3u303, _bt3u378, _bt3u262, _bt3u304, _bt3u226, _bt3u227, _bt3u305, _bt3u387, _bt3u263, _bt3u195, _bt3u264, _bt3u443, _bt3u348, _bt3u265, _bt3u228, _bt3u397, _bt3u196, _bt3u364, _bt3u173, _bt3u197, _bt3u198, _bt3u199, _bt3u229, _bt3u432, _bt3u328, _bt3u306, _bt3u266, _bt3u439, _bt3u423, _bt3u408, _bt3u388, _bt3u349, _bt3u409, _bt3u267, _bt3u183, _bt3u268, _bt3u165, _bt3u329, _bt3u269, _bt3u307, _bt3u200, _bt3u365, _bt3u454, _bt3u270, _bt3u308, _bt3u350, _bt3u330, _bt3u271, _bt3u398, _bt3u272, _bt3u273, _bt3u399, _bt3u471, _bt3u462, _bt3u482, _bt3u448, _bt3u184, _bt3u331, _bt3u332, _bt3u230, _bt3u201, _bt3u185, _bt3u274, _bt3u333, _bt3u275, _bt3u366, _bt3u231, _bt3u334, _bt3u186, _bt3u335, _bt3u309, _bt3u232, _bt3u410, _bt3u202, _bt3u424, _bt3u379, _bt3u233, _bt3u203, _bt3u276, _bt3u310, _bt3u463, _bt3u277, _bt3u163, _bt3u167, _bt3u380, _bt3u175, _bt3u187, _bt3u367, _bt3u170, _bt3u381, _bt3u234, _bt3u351, _bt3u368, _bt3u464, _bt3u311, _bt3u400, _bt3u465, _bt3u401, _bt3u425, _bt3u402, _bt3u389, _bt3u444, _bt3u472, _bt3u449, _bt3u369, _bt3u336, _bt3u235, _bt3u278, _bt3u179, _bt3u312, _bt3u236, _bt3u237, _bt3u204, _bt3u279, _bt3u205, _bt3u238, _bt3u313, _bt3u280, _bt3u239, _bt3u188, _bt3u240, _bt3u281, _bt3u282, _bt3u390, _bt3u314, _bt3u352, _bt3u241, _bt3u206, _bt3u440, _bt3u337, _bt3u353, _bt3u242, _bt3u315, _bt3u189, _bt3u207, _bt3u283, _bt3u316, _bt3u338, _bt3u354, _bt3u317, _bt3u284, _bt3u429, _bt3u433, _bt3u355, _bt3u318, _bt3u319, _bt3u356, _bt3u357, _bt3u358, _bt3u149, _bt3u243, _bt3u244, _bt3u285, _bt3u208, _bt3u209, _bt3u339, _bt3u286, _bt3u190, _bt3u287, _bt3u403, _bt3u391, _bt3u210, _bt3u411, {
    id: "QO",
    displayName: "Oceania Remota",
    regionId: "009",
    hasTimeZones: false
}, _bt3u180, _bt3u211, _bt3u245, _bt3u426, _bt3u340, _bt3u320, _bt3u473, _bt3u191, _bt3u430, _bt3u434, _bt3u288, _bt3u359, _bt3u321, _bt3u370, _bt3u341, _bt3u246, _bt3u487, _bt3u371, _bt3u477, _bt3u445, _bt3u427, _bt3u455, _bt3u289, _bt3u290, _bt3u247, _bt3u248, _bt3u412, _bt3u466, _bt3u212, _bt3u413, _bt3u360, _bt3u382, _bt3u372, _bt3u291, _bt3u361, _bt3u362, _bt3u383, _bt3u292, _bt3u342, _bt3u373, _bt3u474, _bt3u213, _bt3u384, _bt3u322, _bt3u249, _bt3u214, _bt3u446, _bt3u404, _bt3u450, _bt3u385, _bt3u441, _bt3u475, _bt3u250, _bt3u215, _bt3u343, _bt3u251, _bt3u374, _bt3u323, _bt3u456, _bt3u392, _bt3u457, _bt3u375, _bt3u192, _bt3u293, _bt3u216, _bt3u431, _bt3u176, _bt3u294, _bt3u393, _bt3u295, _bt3u252, _bt3u296, _bt3u253, _bt3u297, _bt3u376, _bt3u298, _bt3u344, _bt3u254, _bt3u414, _bt3u324, _bt3u255, _bt3u405, _bt3u458, _bt3u459, _bt3u476, _bt3u467, _bt3u468, _bt3u394, _bt3u386, _bt3u447, _bt3u460, _bt3u451, _bt3u442, _bt3u299, _bt3u217 ];

inter.regions = [ _bt3u461, _bt3u486, _bt3u453, _bt3u422, _bt3u438, _bt3u397, _bt3u399, _bt3u471, _bt3u462, _bt3u482, _bt3u448, _bt3u429, _bt3u149, _bt3u411, _bt3u430, _bt3u487, _bt3u474, _bt3u405, _bt3u458, _bt3u459, _bt3u476, _bt3u467, _bt3u468, _bt3u386, _bt3u447, _bt3u460, _bt3u451, _bt3u442 ];

inter.countries = [ _bt3u363, _bt3u256, _bt3u300, _bt3u257, _bt3u224, _bt3u301, _bt3u153, _bt3u428, _bt3u326, _bt3u258, _bt3u259, _bt3u193, _bt3u396, _bt3u327, _bt3u346, _bt3u260, _bt3u261, _bt3u347, _bt3u302, _bt3u225, _bt3u194, _bt3u303, _bt3u378, _bt3u262, _bt3u304, _bt3u226, _bt3u227, _bt3u305, _bt3u387, _bt3u263, _bt3u195, _bt3u264, _bt3u443, _bt3u348, _bt3u265, _bt3u228, _bt3u196, _bt3u364, _bt3u173, _bt3u197, _bt3u198, _bt3u199, _bt3u229, _bt3u432, _bt3u328, _bt3u306, _bt3u266, _bt3u439, _bt3u423, _bt3u408, _bt3u388, _bt3u349, _bt3u409, _bt3u267, _bt3u183, _bt3u268, _bt3u165, _bt3u329, _bt3u269, _bt3u307, _bt3u200, _bt3u365, _bt3u454, _bt3u270, _bt3u308, _bt3u350, _bt3u330, _bt3u271, _bt3u398, _bt3u272, _bt3u273, _bt3u184, _bt3u331, _bt3u332, _bt3u230, _bt3u201, _bt3u185, _bt3u274, _bt3u333, _bt3u275, _bt3u366, _bt3u231, _bt3u334, _bt3u186, _bt3u335, _bt3u309, _bt3u232, _bt3u410, _bt3u202, _bt3u424, _bt3u379, _bt3u233, _bt3u203, _bt3u276, _bt3u310, _bt3u463, _bt3u277, _bt3u163, _bt3u167, _bt3u380, _bt3u175, _bt3u187, _bt3u367, _bt3u170, _bt3u381, _bt3u234, _bt3u351, _bt3u368, _bt3u464, _bt3u311, _bt3u400, _bt3u465, _bt3u401, _bt3u425, _bt3u402, _bt3u389, _bt3u444, _bt3u472, _bt3u449, _bt3u369, _bt3u336, _bt3u235, _bt3u278, _bt3u179, _bt3u312, _bt3u236, _bt3u237, _bt3u204, _bt3u279, _bt3u205, _bt3u238, _bt3u313, _bt3u280, _bt3u239, _bt3u188, _bt3u240, _bt3u281, _bt3u282, _bt3u390, _bt3u314, _bt3u352, _bt3u241, _bt3u206, _bt3u440, _bt3u337, _bt3u353, _bt3u242, _bt3u315, _bt3u189, _bt3u207, _bt3u283, _bt3u316, _bt3u338, _bt3u354, _bt3u317, _bt3u284, _bt3u433, _bt3u355, _bt3u318, _bt3u319, _bt3u356, _bt3u357, _bt3u358, _bt3u243, _bt3u244, _bt3u285, _bt3u208, _bt3u209, _bt3u339, _bt3u286, _bt3u190, _bt3u287, _bt3u403, _bt3u391, _bt3u210, _bt3u180, _bt3u211, _bt3u245, _bt3u426, _bt3u340, _bt3u320, _bt3u473, _bt3u191, _bt3u434, _bt3u288, _bt3u359, _bt3u321, _bt3u370, _bt3u341, _bt3u246, _bt3u371, _bt3u477, _bt3u445, _bt3u427, _bt3u455, _bt3u289, _bt3u290, _bt3u247, _bt3u248, _bt3u412, _bt3u466, _bt3u212, _bt3u413, _bt3u360, _bt3u382, _bt3u372, _bt3u291, _bt3u361, _bt3u362, _bt3u383, _bt3u292, _bt3u342, _bt3u373, _bt3u213, _bt3u384, _bt3u322, _bt3u249, _bt3u214, _bt3u446, _bt3u404, _bt3u450, _bt3u385, _bt3u441, _bt3u475, _bt3u250, _bt3u215, _bt3u343, _bt3u251, _bt3u374, _bt3u323, _bt3u456, _bt3u392, _bt3u457, _bt3u375, _bt3u192, _bt3u293, _bt3u216, _bt3u431, _bt3u176, _bt3u294, _bt3u393, _bt3u295, _bt3u252, _bt3u296, _bt3u253, _bt3u297, _bt3u376, _bt3u298, _bt3u344, _bt3u254, _bt3u414, _bt3u324, _bt3u255, _bt3u394, _bt3u299, _bt3u217 ];

inter.languages = [ {
    id: "ab",
    displayName: "abcázio"
}, {
    id: "akk",
    displayName: "acadiano"
}, {
    id: "ace",
    displayName: "achém"
}, {
    id: "ach",
    displayName: "acoli"
}, {
    id: "ada",
    displayName: "adangme"
}, {
    id: "ady",
    displayName: "adigue"
}, {
    id: "aa",
    displayName: "afar"
}, {
    id: "afh",
    displayName: "afrihili"
}, {
    id: "af",
    displayName: "africâner",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ay",
    displayName: "aimara"
}, {
    id: "ain",
    displayName: "ainu"
}, {
    id: "ak",
    displayName: "akan",
    nativeDisplayName: "Akan"
}, {
    id: "bss",
    displayName: "akoose"
}, {
    id: "goh",
    displayName: "alemão arcaico alto"
}, {
    id: "gmh",
    displayName: "alemão médio-alto"
}, {
    id: "ale",
    displayName: "aleúte"
}, {
    id: "alt",
    displayName: "altai do sul"
}, {
    id: "en_us",
    displayName: "inglês americano",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "sami de Inari",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "anp",
    displayName: "angika"
}, {
    id: "an",
    displayName: "aragonês"
}, {
    id: "arc",
    displayName: "aramaico"
}, {
    id: "sam",
    displayName: "aramaico samaritano"
}, {
    id: "arp",
    displayName: "arapaho"
}, {
    id: "arw",
    displayName: "arauaqui"
}, {
    id: "rup",
    displayName: "aromeno"
}, {
    id: "ast",
    displayName: "asturiano",
    nativeDisplayName: "asturianu"
}, {
    id: "cch",
    displayName: "atsam"
}, {
    id: "en_au",
    displayName: "inglês australiano",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "avaric"
}, {
    id: "ae",
    displayName: "avéstico"
}, {
    id: "awa",
    displayName: "awadhi"
}, {
    id: "az_arab",
    displayName: "azeri sul"
}, {
    id: "az",
    displayName: "azerbaijano",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "bfd",
    displayName: "bafut"
}, {
    id: "ms",
    displayName: "malaio",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "nds",
    displayName: "baixo alemão"
}, {
    id: "nds_nl",
    displayName: "baixo-saxão"
}, {
    id: "ban",
    displayName: "balinês"
}, {
    id: "bal",
    displayName: "balúchi"
}, {
    id: "bgn",
    displayName: "balúchi ocidental"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bax",
    displayName: "bamum"
}, {
    id: "ba",
    displayName: "bashkir"
}, {
    id: "bej",
    displayName: "beja"
}, {
    id: "bho",
    displayName: "bhojpuri"
}, {
    id: "bik",
    displayName: "bikol"
}, {
    id: "bin",
    displayName: "bini"
}, {
    id: "bi",
    displayName: "bislamá"
}, {
    id: "byn",
    displayName: "blin"
}, {
    id: "bs",
    displayName: "bósnio",
    nativeDisplayName: "bosanski"
}, {
    id: "bra",
    displayName: "braj"
}, {
    id: "br",
    displayName: "bretão",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "inglês britânico",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "buginês"
}, {
    id: "bum",
    displayName: "bulu"
}, {
    id: "bua",
    displayName: "buriat"
}, {
    id: "cad",
    displayName: "caddo"
}, {
    id: "en_ca",
    displayName: "inglês canadense",
    nativeDisplayName: "Canadian English"
}, {
    id: "kr",
    displayName: "canúri"
}, {
    id: "car",
    displayName: "caribe"
}, {
    id: "ca",
    displayName: "catalão",
    nativeDisplayName: "català"
}, {
    id: "cay",
    displayName: "cayuga"
}, {
    id: "ceb",
    displayName: "cebuano"
}, {
    id: "chg",
    displayName: "chagatai"
}, {
    id: "ch",
    displayName: "chamorro"
}, {
    id: "chy",
    displayName: "cheiene"
}, {
    id: "chb",
    displayName: "chibcha"
}, {
    id: "kde",
    displayName: "maconde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "chn",
    displayName: "chinook jargon"
}, {
    id: "chp",
    displayName: "chipewyan"
}, {
    id: "sn",
    displayName: "shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cho",
    displayName: "choctaw"
}, {
    id: "chk",
    displayName: "chuukese"
}, {
    id: "swb",
    displayName: "comoriano"
}, {
    id: "kg",
    displayName: "congolês"
}, {
    id: "cop",
    displayName: "copta"
}, {
    id: "cr",
    displayName: "cree"
}, {
    id: "mus",
    displayName: "creek"
}, {
    id: "ku",
    displayName: "curdo"
}, {
    id: "sdh",
    displayName: "curdo meridional"
}, {
    id: "cy",
    displayName: "galês",
    nativeDisplayName: "Cymraeg"
}, {
    id: "co",
    displayName: "córsico"
}, {
    id: "dak",
    displayName: "dacota"
}, {
    id: "da",
    displayName: "dinamarquês",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "dargwa"
}, {
    id: "se",
    displayName: "sami do norte",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "dzg",
    displayName: "dazaga"
}, {
    id: "del",
    displayName: "delaware"
}, {
    id: "de",
    displayName: "alemão",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "dinka"
}, {
    id: "dv",
    displayName: "divehi"
}, {
    id: "dyu",
    displayName: "diúla"
}, {
    id: "doi",
    displayName: "dogri"
}, {
    id: "dgr",
    displayName: "dogrib"
}, {
    id: "dsb",
    displayName: "sorábio baixo",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "ng",
    displayName: "dongo"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "estoniano",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efique"
}, {
    id: "egy",
    displayName: "egípcio arcaico"
}, {
    id: "eka",
    displayName: "ekajuk"
}, {
    id: "guz",
    displayName: "gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "elx",
    displayName: "elamite"
}, {
    id: "en",
    displayName: "inglês",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "erzya"
}, {
    id: "sco",
    displayName: "escocês"
}, {
    id: "es",
    displayName: "espanhol",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "espanhol europeu",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "espanhol mexicano",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "espanhol latino-americano",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "basco",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ee",
    displayName: "eve",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "fangue"
}, {
    id: "fat",
    displayName: "fanti"
}, {
    id: "phn",
    displayName: "fenício"
}, {
    id: "fj",
    displayName: "fijiano"
}, {
    id: "fil",
    displayName: "filipino",
    nativeDisplayName: "Filipino"
}, {
    id: "fon",
    displayName: "fom"
}, {
    id: "fro",
    displayName: "francês arcaico"
}, {
    id: "frm",
    displayName: "francês médio"
}, {
    id: "fr",
    displayName: "francês",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "francês canadense",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "francês suíço",
    nativeDisplayName: "français suisse"
}, {
    id: "frs",
    displayName: "frisão oriental"
}, {
    id: "frr",
    displayName: "frísio setentrional"
}, {
    id: "fur",
    displayName: "friulano",
    nativeDisplayName: "furlan"
}, {
    id: "fo",
    displayName: "feroês",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "ga"
}, {
    id: "ga",
    displayName: "irlandês",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "gagauz"
}, {
    id: "gl",
    displayName: "galego",
    nativeDisplayName: "galego"
}, {
    id: "gay",
    displayName: "gayo"
}, {
    id: "gba",
    displayName: "gbaia"
}, {
    id: "gez",
    displayName: "geez"
}, {
    id: "bbj",
    displayName: "ghomala’"
}, {
    id: "ki",
    displayName: "quicuio",
    nativeDisplayName: "Gikuyu"
}, {
    id: "gil",
    displayName: "gilbertês"
}, {
    id: "gon",
    displayName: "gondi"
}, {
    id: "gor",
    displayName: "gorontalo"
}, {
    id: "grb",
    displayName: "grebo"
}, {
    id: "grc",
    displayName: "grego arcaico"
}, {
    id: "gn",
    displayName: "guarani"
}, {
    id: "gwi",
    displayName: "gwichʼin"
}, {
    id: "gd",
    displayName: "gaélico escocês",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "got",
    displayName: "gótico"
}, {
    id: "hai",
    displayName: "haida"
}, {
    id: "ht",
    displayName: "haitiano"
}, {
    id: "ha",
    displayName: "hauçá",
    nativeDisplayName: "Hausa"
}, {
    id: "hz",
    displayName: "herero"
}, {
    id: "bez",
    displayName: "bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hil",
    displayName: "hiligaynon"
}, {
    id: "ho",
    displayName: "hiri motu"
}, {
    id: "hit",
    displayName: "hitita"
}, {
    id: "hmn",
    displayName: "hmong"
}, {
    id: "dum",
    displayName: "holandês médio"
}, {
    id: "hsb",
    displayName: "sorábio alto",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "croata",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "hupa"
}, {
    id: "iba",
    displayName: "iban"
}, {
    id: "ibb",
    displayName: "ibibio"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "krl",
    displayName: "idioma carélio"
}, {
    id: "und",
    displayName: "idioma desconhecido"
}, {
    id: "srn",
    displayName: "idioma surinamês"
}, {
    id: "mul",
    displayName: "idiomas múltiplos"
}, {
    id: "io",
    displayName: "ido"
}, {
    id: "ig",
    displayName: "ibo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "ilocano"
}, {
    id: "id",
    displayName: "indonésio",
    nativeDisplayName: "Indonesia"
}, {
    id: "ang",
    displayName: "inglês arcaico"
}, {
    id: "enm",
    displayName: "inglês médio"
}, {
    id: "inh",
    displayName: "inguche"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "ia",
    displayName: "interlíngua"
}, {
    id: "iu",
    displayName: "inuktitut"
}, {
    id: "ik",
    displayName: "inupiaque"
}, {
    id: "sga",
    displayName: "irlandês arcaico"
}, {
    id: "mga",
    displayName: "irlandês médio"
}, {
    id: "sbp",
    displayName: "sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "ndebele do norte",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "italiano",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "javanês"
}, {
    id: "kaj",
    displayName: "jju"
}, {
    id: "dyo",
    displayName: "jola-fonyi",
    nativeDisplayName: "joola"
}, {
    id: "jrb",
    displayName: "judaico-arábico"
}, {
    id: "jpr",
    displayName: "judaico-persa"
}, {
    id: "kbd",
    displayName: "kabardiano"
}, {
    id: "kea",
    displayName: "kabuverdianu",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kac",
    displayName: "kachin"
}, {
    id: "kkj",
    displayName: "kako",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "groenlandês",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "xal",
    displayName: "kalmyk"
}, {
    id: "kbl",
    displayName: "kanembu"
}, {
    id: "kaa",
    displayName: "kara-kalpak"
}, {
    id: "krc",
    displayName: "karachay-balkar"
}, {
    id: "csb",
    displayName: "kashubian"
}, {
    id: "kaw",
    displayName: "kawi"
}, {
    id: "kw",
    displayName: "córnico",
    nativeDisplayName: "kernewek"
}, {
    id: "kha",
    displayName: "khasi"
}, {
    id: "naq",
    displayName: "nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "kho",
    displayName: "khotanês"
}, {
    id: "rof",
    displayName: "rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "machame",
    nativeDisplayName: "Kimachame"
}, {
    id: "rw",
    displayName: "quiniaruanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asu",
    nativeDisplayName: "Kipare"
}, {
    id: "rwk",
    displayName: "rwa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "shambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "suaíli",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "suaíli do Congo",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "tlh",
    displayName: "klingon"
}, {
    id: "bkm",
    displayName: "kom"
}, {
    id: "kv",
    displayName: "komi"
}, {
    id: "koi",
    displayName: "komi-permyak"
}, {
    id: "kfo",
    displayName: "koro"
}, {
    id: "kos",
    displayName: "kosraean"
}, {
    id: "khq",
    displayName: "koyra chiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "koyraboro senni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "kpe",
    displayName: "kpelle"
}, {
    id: "mfe",
    displayName: "morisyen",
    nativeDisplayName: "kreol morisien"
}, {
    id: "kj",
    displayName: "kuanyama"
}, {
    id: "kum",
    displayName: "kumyk"
}, {
    id: "kru",
    displayName: "kurukh"
}, {
    id: "kut",
    displayName: "kutenai"
}, {
    id: "nmg",
    displayName: "kwasio",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ksh",
    displayName: "kölsch",
    nativeDisplayName: "Kölsch"
}, {
    id: "ebu",
    displayName: "embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "lad",
    displayName: "ladino"
}, {
    id: "lah",
    displayName: "lahnda"
}, {
    id: "lkt",
    displayName: "lacota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lam",
    displayName: "lamba"
}, {
    id: "la",
    displayName: "latim"
}, {
    id: "lv",
    displayName: "letão",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "tonganês",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lez",
    displayName: "lezghian"
}, {
    id: "lt",
    displayName: "lituano",
    nativeDisplayName: "lietuvių"
}, {
    id: "li",
    displayName: "limburguês"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "jbo",
    displayName: "lojban"
}, {
    id: "loz",
    displayName: "lozi"
}, {
    id: "lua",
    displayName: "luba-lulua"
}, {
    id: "lg",
    displayName: "luganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "luiseno"
}, {
    id: "luy",
    displayName: "luyia",
    nativeDisplayName: "Luluhia"
}, {
    id: "lun",
    displayName: "lunda"
}, {
    id: "lus",
    displayName: "lushai"
}, {
    id: "lb",
    displayName: "luxemburguês",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "massai",
    nativeDisplayName: "Maa"
}, {
    id: "mde",
    displayName: "maba"
}, {
    id: "mad",
    displayName: "madurês"
}, {
    id: "maf",
    displayName: "mafa"
}, {
    id: "mag",
    displayName: "magahi"
}, {
    id: "hu",
    displayName: "húngaro",
    nativeDisplayName: "magyar"
}, {
    id: "mai",
    displayName: "maithili"
}, {
    id: "mak",
    displayName: "makasar"
}, {
    id: "mgh",
    displayName: "macua",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "malgaxe",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "maltês",
    nativeDisplayName: "Malti"
}, {
    id: "mnc",
    displayName: "manchu"
}, {
    id: "mdr",
    displayName: "mandar"
}, {
    id: "man",
    displayName: "mandinga"
}, {
    id: "mni",
    displayName: "manipuri"
}, {
    id: "mi",
    displayName: "maori"
}, {
    id: "arn",
    displayName: "mapudungun"
}, {
    id: "chm",
    displayName: "mari"
}, {
    id: "mh",
    displayName: "marshalês"
}, {
    id: "mwr",
    displayName: "marwari"
}, {
    id: "byv",
    displayName: "medumba"
}, {
    id: "men",
    displayName: "mende"
}, {
    id: "mgo",
    displayName: "meta’",
    nativeDisplayName: "metaʼ"
}, {
    id: "min",
    displayName: "minangkabau"
}, {
    id: "mic",
    displayName: "miquemaque"
}, {
    id: "mwl",
    displayName: "mirandês"
}, {
    id: "mdf",
    displayName: "mocsa"
}, {
    id: "moh",
    displayName: "moicano"
}, {
    id: "ro_md",
    displayName: "moldávio",
    nativeDisplayName: "moldovenească"
}, {
    id: "lol",
    displayName: "mongo"
}, {
    id: "mos",
    displayName: "mossi"
}, {
    id: "mua",
    displayName: "mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "mye",
    displayName: "myene"
}, {
    id: "nap",
    displayName: "napolitano"
}, {
    id: "na",
    displayName: "nauruano"
}, {
    id: "nv",
    displayName: "navajo"
}, {
    id: "jgo",
    displayName: "nguemba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "nr",
    displayName: "ndebele do sul"
}, {
    id: "nl",
    displayName: "holandês",
    nativeDisplayName: "Nederlands"
}, {
    id: "new",
    displayName: "newari"
}, {
    id: "nwc",
    displayName: "newari clássico"
}, {
    id: "sba",
    displayName: "ngambay"
}, {
    id: "ny",
    displayName: "nianja"
}, {
    id: "nia",
    displayName: "nias"
}, {
    id: "niu",
    displayName: "niueano"
}, {
    id: "nog",
    displayName: "nogai"
}, {
    id: "nb",
    displayName: "bokmål norueguês",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "norueguês"
}, {
    id: "yav",
    displayName: "yangben",
    nativeDisplayName: "nuasue"
}, {
    id: "nym",
    displayName: "nyamwezi"
}, {
    id: "nn",
    displayName: "nynorsk norueguês",
    nativeDisplayName: "nynorsk"
}, {
    id: "nyo",
    displayName: "nyoro"
}, {
    id: "nzi",
    displayName: "nzima"
}, {
    id: "non",
    displayName: "nórdico arcaico"
}, {
    id: "nqo",
    displayName: "n’ko"
}, {
    id: "oc",
    displayName: "occitânico"
}, {
    id: "oj",
    displayName: "ojibwa"
}, {
    id: "xog",
    displayName: "lusoga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "osage"
}, {
    id: "uz",
    displayName: "usbeque",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pau",
    displayName: "palauano"
}, {
    id: "pam",
    displayName: "pampanga"
}, {
    id: "pag",
    displayName: "pangasinã"
}, {
    id: "pap",
    displayName: "papiamento"
}, {
    id: "peo",
    displayName: "persa arcaico"
}, {
    id: "pon",
    displayName: "pohnpeian"
}, {
    id: "pl",
    displayName: "polonês",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "português",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "português do Brasil",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "português europeu",
    nativeDisplayName: "português europeu"
}, {
    id: "pro",
    displayName: "provençal arcaico"
}, {
    id: "ff",
    displayName: "fula",
    nativeDisplayName: "Pulaar"
}, {
    id: "pal",
    displayName: "pálavi"
}, {
    id: "pi",
    displayName: "páli"
}, {
    id: "quc",
    displayName: "quiché"
}, {
    id: "kmb",
    displayName: "quimbundo"
}, {
    id: "raj",
    displayName: "rajastani"
}, {
    id: "rap",
    displayName: "rapanui"
}, {
    id: "rar",
    displayName: "rarotongano"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "rom",
    displayName: "romani"
}, {
    id: "ro",
    displayName: "romeno",
    nativeDisplayName: "română"
}, {
    id: "cgg",
    displayName: "chiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "romanche",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "quíchua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "ssy",
    displayName: "saho"
}, {
    id: "smj",
    displayName: "sami de Lule"
}, {
    id: "sms",
    displayName: "sami de Skolt"
}, {
    id: "sma",
    displayName: "sami do sul"
}, {
    id: "sm",
    displayName: "samoano"
}, {
    id: "sad",
    displayName: "sandawe"
}, {
    id: "sat",
    displayName: "santali"
}, {
    id: "sc",
    displayName: "sardo"
}, {
    id: "sas",
    displayName: "sasak"
}, {
    id: "de_ch",
    displayName: "alto alemão suíço",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "alemão suíço",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "sel",
    displayName: "selkup"
}, {
    id: "zxx",
    displayName: "sem conteúdo linguístico"
}, {
    id: "seh",
    displayName: "sena",
    nativeDisplayName: "sena"
}, {
    id: "see",
    displayName: "seneca"
}, {
    id: "srr",
    displayName: "serere"
}, {
    id: "sh",
    displayName: "servo-croata"
}, {
    id: "shn",
    displayName: "shan"
}, {
    id: "sq",
    displayName: "albanês",
    nativeDisplayName: "shqip"
}, {
    id: "nnh",
    displayName: "ngiemboon",
    nativeDisplayName: "Shwóŋò ngiembɔɔn"
}, {
    id: "scn",
    displayName: "siciliano"
}, {
    id: "sid",
    displayName: "sidamo"
}, {
    id: "bla",
    displayName: "siksika"
}, {
    id: "sd",
    displayName: "sindi"
}, {
    id: "syr",
    displayName: "siríaco"
}, {
    id: "syc",
    displayName: "siríaco clássico"
}, {
    id: "den",
    displayName: "slave"
}, {
    id: "sk",
    displayName: "eslovaco",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "esloveno",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "sogdiano"
}, {
    id: "snk",
    displayName: "soninquê"
}, {
    id: "so",
    displayName: "somali",
    nativeDisplayName: "Soomaali"
}, {
    id: "sus",
    displayName: "sosso"
}, {
    id: "st",
    displayName: "soto do sul"
}, {
    id: "nso",
    displayName: "soto setentrional"
}, {
    id: "suk",
    displayName: "sukuma"
}, {
    id: "sux",
    displayName: "sumério"
}, {
    id: "su",
    displayName: "sundanês"
}, {
    id: "fi",
    displayName: "finlandês",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "sueco",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "swati"
}, {
    id: "sa",
    displayName: "sânscrito"
}, {
    id: "sg",
    displayName: "sango",
    nativeDisplayName: "Sängö"
}, {
    id: "zbl",
    displayName: "símbolos blis"
}, {
    id: "tl",
    displayName: "tagalo"
}, {
    id: "ty",
    displayName: "taitiano"
}, {
    id: "tg",
    displayName: "tajique"
}, {
    id: "tmh",
    displayName: "tamaxeque"
}, {
    id: "tzm",
    displayName: "tamazight do Atlas Central",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "kabyle",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "trv",
    displayName: "taroko"
}, {
    id: "twq",
    displayName: "tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "tatar"
}, {
    id: "cv",
    displayName: "tchuvache"
}, {
    id: "ter",
    displayName: "tereno"
}, {
    id: "nus",
    displayName: "nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "tig",
    displayName: "tigré"
}, {
    id: "tem",
    displayName: "timne"
}, {
    id: "tiv",
    displayName: "tiv"
}, {
    id: "vi",
    displayName: "vietnamita",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tli",
    displayName: "tlinguite"
}, {
    id: "tpi",
    displayName: "tok pisin"
}, {
    id: "tog",
    displayName: "tonganês de Nyasa"
}, {
    id: "tkl",
    displayName: "toquelauano"
}, {
    id: "lu",
    displayName: "luba-catanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tsi",
    displayName: "tsimshian"
}, {
    id: "ts",
    displayName: "tsonga"
}, {
    id: "tn",
    displayName: "tswana"
}, {
    id: "tum",
    displayName: "tumbuka"
}, {
    id: "crh",
    displayName: "turco da Crimeia"
}, {
    id: "ota",
    displayName: "turco otomano"
}, {
    id: "tvl",
    displayName: "tuvaluano"
}, {
    id: "tyv",
    displayName: "tuviniano"
}, {
    id: "tw",
    displayName: "twi"
}, {
    id: "kcg",
    displayName: "tyap"
}, {
    id: "tet",
    displayName: "tétum"
}, {
    id: "tk",
    displayName: "turcomeno",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "turco",
    nativeDisplayName: "Türkçe"
}, {
    id: "udm",
    displayName: "udmurt"
}, {
    id: "uga",
    displayName: "ugarítico"
}, {
    id: "umb",
    displayName: "umbundu"
}, {
    id: "wo",
    displayName: "uólofe"
}, {
    id: "wa",
    displayName: "valão"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "nl_be",
    displayName: "flamengo",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "volapuque",
    nativeDisplayName: "Volapük"
}, {
    id: "vot",
    displayName: "votic"
}, {
    id: "wal",
    displayName: "walamo"
}, {
    id: "wae",
    displayName: "walser",
    nativeDisplayName: "Walser"
}, {
    id: "war",
    displayName: "waray"
}, {
    id: "wbp",
    displayName: "warlpiri"
}, {
    id: "was",
    displayName: "washo"
}, {
    id: "fy",
    displayName: "frísio ocidental",
    nativeDisplayName: "West-Frysk"
}, {
    id: "xh",
    displayName: "xosa"
}, {
    id: "yao",
    displayName: "yao"
}, {
    id: "yap",
    displayName: "yapese"
}, {
    id: "ybb",
    displayName: "yemba"
}, {
    id: "zap",
    displayName: "zapoteca"
}, {
    id: "dje",
    displayName: "zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "zaza"
}, {
    id: "zen",
    displayName: "zenaga"
}, {
    id: "za",
    displayName: "zhuang"
}, {
    id: "zun",
    displayName: "zunhi"
}, {
    id: "shu",
    displayName: "árabe chadiano"
}, {
    id: "yo",
    displayName: "ioruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islandês",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "alemão austríaco",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "tcheco",
    nativeDisplayName: "čeština"
}, {
    id: "bas",
    displayName: "basa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "havaiano",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "grego",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "bielorrusso",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "búlgaro",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "ossetic",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "quirguiz",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "macedônio",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongol",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "checheno",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "russo",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "iacuto",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "sérvio",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ucraniano",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "eslavo eclesiástico",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "cazaque",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armênio",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "iídiche",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "hebraico",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uigur",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "árabe",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "árabe moderno",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "persa",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "luri setentrional",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "mazandarani",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "pashto",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "sorâni curdo",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "caxemira",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "concani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepali",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marata",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "híndi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "assamês",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengali",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "panjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "guzerate",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tâmil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "canarês",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malaiala",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "cingalês",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "tailandês",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "laosiano",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibetano",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzonga",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "birmanês",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "georgiano",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrínia",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amárico",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "khmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "tamazight marroquino padrão",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "tachelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "chinês",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japonês",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "chinês simplificado",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "cantonês",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "chinês tradicional",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "sichuan yi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "cherokee",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "coreano",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Armi",
    displayName: "armi"
}, {
    id: "Armn",
    displayName: "armênio"
}, {
    id: "Avst",
    displayName: "avéstico"
}, {
    id: "Bali",
    displayName: "balinês"
}, {
    id: "Bamu",
    displayName: "bamum"
}, {
    id: "Batk",
    displayName: "bataque"
}, {
    id: "Beng",
    displayName: "bengali"
}, {
    id: "Mymr",
    displayName: "birmanês"
}, {
    id: "Bopo",
    displayName: "bopomofo"
}, {
    id: "Brah",
    displayName: "brahmi"
}, {
    id: "Brai",
    displayName: "braille"
}, {
    id: "Bugi",
    displayName: "buginês"
}, {
    id: "Buhd",
    displayName: "buhid"
}, {
    id: "Cakm",
    displayName: "cakm"
}, {
    id: "Cari",
    displayName: "cariano"
}, {
    id: "Cham",
    displayName: "cham"
}, {
    id: "Cher",
    displayName: "cherokee"
}, {
    id: "Sinh",
    displayName: "cingalês"
}, {
    id: "Cprt",
    displayName: "cipriota"
}, {
    id: "Cirt",
    displayName: "cirth"
}, {
    id: "Cyrl",
    displayName: "cirílico"
}, {
    id: "Cyrs",
    displayName: "cirílico eslavo eclesiástico"
}, {
    id: "Zyyy",
    displayName: "comum"
}, {
    id: "Kore",
    displayName: "coreano"
}, {
    id: "Copt",
    displayName: "cóptico"
}, {
    id: "Egyd",
    displayName: "demótico egípcio"
}, {
    id: "Dsrt",
    displayName: "deseret"
}, {
    id: "Deva",
    displayName: "devanágari"
}, {
    id: "Zzzz",
    displayName: "escrita desconhecida"
}, {
    id: "Cans",
    displayName: "escrita silábica unificada dos aborígenes canadenses"
}, {
    id: "Ethi",
    displayName: "etiópico"
}, {
    id: "Phnx",
    displayName: "fenício"
}, {
    id: "Plrd",
    displayName: "fonético pollard"
}, {
    id: "Geor",
    displayName: "georgiano"
}, {
    id: "Glag",
    displayName: "glagolítico"
}, {
    id: "Grek",
    displayName: "grego"
}, {
    id: "Gujr",
    displayName: "gujerati"
}, {
    id: "Guru",
    displayName: "gurmuqui"
}, {
    id: "Goth",
    displayName: "gótico"
}, {
    id: "Hani",
    displayName: "han"
}, {
    id: "Hang",
    displayName: "hangul"
}, {
    id: "Hano",
    displayName: "hanunoo"
}, {
    id: "Hebr",
    displayName: "hebraico"
}, {
    id: "Zinh",
    displayName: "herdado"
}, {
    id: "Egyh",
    displayName: "hierático egípcio"
}, {
    id: "Egyp",
    displayName: "hieróglifos egípcios"
}, {
    id: "Maya",
    displayName: "hieróglifos maias"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Hung",
    displayName: "húngaro antigo"
}, {
    id: "Inds",
    displayName: "indo"
}, {
    id: "Ital",
    displayName: "itálico antigo"
}, {
    id: "Jpan",
    displayName: "japonês"
}, {
    id: "Java",
    displayName: "javanês"
}, {
    id: "Knda",
    displayName: "kannada"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Hrkt",
    displayName: "katakana ou hiragana"
}, {
    id: "Kali",
    displayName: "kayah li"
}, {
    id: "Khar",
    displayName: "kharoshthi"
}, {
    id: "Khmr",
    displayName: "khmer"
}, {
    id: "Geok",
    displayName: "khutsuri georgiano"
}, {
    id: "Kthi",
    displayName: "kthi"
}, {
    id: "Lana",
    displayName: "lanna"
}, {
    id: "Laoo",
    displayName: "lao"
}, {
    id: "Latn",
    displayName: "latim"
}, {
    id: "Latf",
    displayName: "latim fraktur"
}, {
    id: "Latg",
    displayName: "latim gaélico"
}, {
    id: "Lepc",
    displayName: "lepcha"
}, {
    id: "Limb",
    displayName: "limbu"
}, {
    id: "Lina",
    displayName: "linear A"
}, {
    id: "Linb",
    displayName: "linear B"
}, {
    id: "Lisu",
    displayName: "lisu"
}, {
    id: "Lyci",
    displayName: "lício"
}, {
    id: "Lydi",
    displayName: "lídio"
}, {
    id: "Mlym",
    displayName: "malaiala"
}, {
    id: "Mand",
    displayName: "mandaico"
}, {
    id: "Mani",
    displayName: "maniqueano"
}, {
    id: "Mtei",
    displayName: "meitei mayek"
}, {
    id: "Mero",
    displayName: "meroítico"
}, {
    id: "Merc",
    displayName: "meroítico cursivo"
}, {
    id: "Mong",
    displayName: "mongol"
}, {
    id: "Moon",
    displayName: "moon"
}, {
    id: "Talu",
    displayName: "novo tai lue"
}, {
    id: "Nkoo",
    displayName: "n’ko"
}, {
    id: "Ogam",
    displayName: "ogâmico"
}, {
    id: "Olck",
    displayName: "ol chiki"
}, {
    id: "Orya",
    displayName: "oriya"
}, {
    id: "Orkh",
    displayName: "orkhon"
}, {
    id: "Osma",
    displayName: "osmania"
}, {
    id: "Hmng",
    displayName: "pahawh hmong"
}, {
    id: "Phlv",
    displayName: "pahlavi antigo"
}, {
    id: "Xpeo",
    displayName: "persa antigo"
}, {
    id: "Phag",
    displayName: "phags-pa"
}, {
    id: "Phli",
    displayName: "phli"
}, {
    id: "Phlp",
    displayName: "phlp"
}, {
    id: "Prti",
    displayName: "prti"
}, {
    id: "Perm",
    displayName: "pérmico antigo"
}, {
    id: "Rjng",
    displayName: "rejang"
}, {
    id: "Roro",
    displayName: "rongorongo"
}, {
    id: "Runr",
    displayName: "rúnico"
}, {
    id: "Samr",
    displayName: "samaritano"
}, {
    id: "Sara",
    displayName: "sarati"
}, {
    id: "Saur",
    displayName: "saurashtra"
}, {
    id: "Shaw",
    displayName: "shaviano"
}, {
    id: "Sgnw",
    displayName: "signwriting"
}, {
    id: "Hans",
    displayName: "simplificado"
}, {
    id: "Syrc",
    displayName: "siríaco"
}, {
    id: "Syre",
    displayName: "siríaco estrangelo"
}, {
    id: "Syrj",
    displayName: "siríaco ocidental"
}, {
    id: "Syrn",
    displayName: "siríaco oriental"
}, {
    id: "Xsux",
    displayName: "sumério-acadiano cuneiforme"
}, {
    id: "Sund",
    displayName: "sundanês"
}, {
    id: "Sylo",
    displayName: "syloti nagri"
}, {
    id: "Blis",
    displayName: "símbolos bliss"
}, {
    id: "Tglg",
    displayName: "tagalo"
}, {
    id: "Tagb",
    displayName: "tagbanwa"
}, {
    id: "Tale",
    displayName: "tai Le"
}, {
    id: "Thai",
    displayName: "tailandês"
}, {
    id: "Tavt",
    displayName: "tavt"
}, {
    id: "Teng",
    displayName: "tengwar"
}, {
    id: "Thaa",
    displayName: "thaana"
}, {
    id: "Tibt",
    displayName: "tibetano"
}, {
    id: "Tfng",
    displayName: "tifinagh"
}, {
    id: "Hant",
    displayName: "tradicional"
}, {
    id: "Taml",
    displayName: "tâmil"
}, {
    id: "Telu",
    displayName: "télugo"
}, {
    id: "Ugar",
    displayName: "ugarítico"
}, {
    id: "Vaii",
    displayName: "vai"
}, {
    id: "Visp",
    displayName: "visible speech"
}, {
    id: "Yiii",
    displayName: "yi"
}, {
    id: "Zmth",
    displayName: "zmth"
}, {
    id: "Zsym",
    displayName: "zsym"
}, {
    id: "Zxxx",
    displayName: "ágrafo"
}, {
    id: "Arab",
    displayName: "árabe"
} ];

inter.currencies = [ {
    id: "AFA",
    displayName: "Afegane (1927–2002)",
    one: "Afegane do Afeganistão (AFA)",
    other: "Afeganes do Afeganistão (AFA)"
}, {
    id: "AFN",
    displayName: "Afegane afegão",
    symbol: "AFN",
    one: "Afegane afegão",
    other: "Afeganes afegãos"
}, {
    id: "MGA",
    displayName: "Ariary malgaxe",
    symbol: "MGA",
    one: "Ariary malgaxe",
    other: "Ariarys malgaxes"
}, {
    id: "ARA",
    displayName: "Austral argentino",
    one: "Austral argentino",
    other: "Austrais argentinos"
}, {
    id: "THB",
    displayName: "Baht tailandês",
    symbol: "฿",
    one: "Baht tailandês",
    other: "Bahts tailandeses"
}, {
    id: "PAB",
    displayName: "Balboa panamenha",
    symbol: "PAB",
    one: "Balboa panamenha",
    other: "Balboas panamenhas"
}, {
    id: "ETB",
    displayName: "Birr etíope",
    symbol: "ETB",
    one: "Birr etíope",
    other: "Birrs etíopes"
}, {
    id: "BOB",
    displayName: "Boliviano",
    symbol: "BOB",
    one: "Boliviano",
    other: "Bolivianos"
}, {
    id: "BOL",
    displayName: "Boliviano (1863–1963)",
    one: "Boliviano (1863–1963)",
    other: "Bolivianos (1863–1963)"
}, {
    id: "VEF",
    displayName: "Bolívar venezuelano",
    symbol: "VEF",
    one: "Bolívar venezuelano",
    other: "Bolívares venezuelanos"
}, {
    id: "VEB",
    displayName: "Bolívar venezuelano (1871–2008)",
    one: "Bolívar venezuelano (1871–2008)",
    other: "Bolívares venezuelanos (1871–2008)"
}, {
    id: "GHC",
    displayName: "Cedi de Gana (1979–2007)",
    one: "Cedi de Gana (1979–2007)",
    other: "Cedis de Gana (1979–2007)"
}, {
    id: "GHS",
    displayName: "Cedi ganês",
    symbol: "GHS",
    one: "Cedi ganês",
    other: "Cedis ganeses"
}, {
    id: "SVC",
    displayName: "Colom salvadorenho",
    one: "Colon de El Salvador",
    other: "Colons de El Salvador"
}, {
    id: "CRC",
    displayName: "Colón costarriquenho",
    symbol: "CRC",
    one: "Colón costarriquenho",
    other: "Colóns costarriquenhos"
}, {
    id: "CSK",
    displayName: "Coroa Forte checoslovaca",
    one: "Coroa forte tchecoslovaca",
    other: "Coroas fortes tchecoslovacas"
}, {
    id: "ISJ",
    displayName: "Coroa antiga islandesa",
    one: "Coroa antiga islandesa",
    other: "Coroas antigas islandesas"
}, {
    id: "DKK",
    displayName: "Coroa dinamarquesa",
    symbol: "DKK",
    one: "Coroa dinamarquesa",
    other: "Coroas dinamarquesas"
}, {
    id: "SKK",
    displayName: "Coroa eslovaca",
    one: "Coroa eslovaca",
    other: "Coroas eslovacas"
}, {
    id: "EEK",
    displayName: "Coroa estoniana",
    one: "Coroa estoniana",
    other: "Coroas estonianas"
}, {
    id: "ISK",
    displayName: "Coroa islandesa",
    symbol: "ISK",
    one: "Coroa islandesa",
    other: "Coroas islandesas"
}, {
    id: "NOK",
    displayName: "Coroa norueguesa",
    symbol: "NOK",
    one: "Coroa norueguesa",
    other: "Coroas norueguesas"
}, {
    id: "SEK",
    displayName: "Coroa sueca",
    symbol: "SEK",
    one: "Coroa sueca",
    other: "Coroas suecas"
}, {
    id: "CZK",
    displayName: "Coroa tcheca",
    symbol: "CZK",
    one: "Coroa tcheca",
    other: "Coroas tchecas"
}, {
    id: "BRC",
    displayName: "Cruzado brasileiro (1986–1989)",
    one: "Cruzado brasileiro",
    other: "Cruzados brasileiros"
}, {
    id: "BRN",
    displayName: "Cruzado novo brasileiro (1989–1990)",
    one: "Cruzado novo brasileiro",
    other: "Cruzados novos brasileiros"
}, {
    id: "BRZ",
    displayName: "Cruzeiro brasileiro (1942–1967)",
    one: "Cruzeiro brasileiro antigo",
    other: "Cruzeiros brasileiros antigos"
}, {
    id: "BRE",
    displayName: "Cruzeiro brasileiro (1990–1993)",
    one: "Cruzeiro brasileiro (BRE)",
    other: "Cruzeiros brasileiros (BRE)"
}, {
    id: "BRR",
    displayName: "Cruzeiro brasileiro (1993–1994)",
    one: "Cruzeiro brasileiro",
    other: "Cruzeiros brasileiros"
}, {
    id: "BRB",
    displayName: "Cruzeiro novo brasileiro (1967–1986)",
    one: "Cruzeiro novo brasileiro (BRB)",
    other: "Cruzeiros novos brasileiros (BRB)"
}, {
    id: "ZMK",
    displayName: "Cuacha zambiano (1968–2012)",
    symbol: "ZMK",
    one: "Kwacha da Zâmbia (1968–2012)",
    other: "Kwachas da Zâmbia (1968–2012)"
}, {
    id: "AOK",
    displayName: "Cuanza angolano (1977–1990)",
    one: "Kwanza angolano (AOK)",
    other: "Kwanzas angolanos (AOK)"
}, {
    id: "AOR",
    displayName: "Cuanza angolano reajustado (1995–1999)",
    one: "Kwanza angolano reajustado (AOR)",
    other: "Kwanzas angolanos reajustados (AOR)"
}, {
    id: "GEK",
    displayName: "Cupom Lari georgiano",
    one: "Kupon larit da Geórgia",
    other: "Kupon larits da Geórgia"
}, {
    id: "MDC",
    displayName: "Cupon moldávio",
    one: "Cupon moldávio",
    other: "Cupon moldávio"
}, {
    id: "XTS",
    displayName: "Código de Moeda de Teste",
    one: "Código de moeda de teste",
    other: "Códigos de moeda de teste"
}, {
    id: "NIO",
    displayName: "Córdoba nicaraguense",
    symbol: "NIO",
    one: "Córdoba nicaraguense",
    other: "Córdobas nicaraguenses"
}, {
    id: "NIC",
    displayName: "Córdoba nicaraguense (1988–1991)",
    one: "Córdoba nicaraguense (1988–1991)",
    other: "Córdobas nicaraguense (1988–1991)"
}, {
    id: "GMD",
    displayName: "Dalasi gambiano",
    symbol: "GMD",
    one: "Dalasi gambiano",
    other: "Dalasis gambianos"
}, {
    id: "DZD",
    displayName: "Dinar argelino",
    symbol: "DZD",
    one: "Dinar argelino",
    other: "Dinares argelinos"
}, {
    id: "BHD",
    displayName: "Dinar bareinita",
    symbol: "BHD",
    one: "Dinar bareinita",
    other: "Dinares bareinitas"
}, {
    id: "YUN",
    displayName: "Dinar conversível iugoslavo (1990–1992)",
    one: "Dinar conversível da Iugoslávia",
    other: "Dinares conversíveis da Iugoslávia"
}, {
    id: "HRD",
    displayName: "Dinar croata",
    one: "Dinar croata",
    other: "Dinares croatas"
}, {
    id: "BAD",
    displayName: "Dinar da Bósnia-Herzegovina (1992–1994)",
    one: "Dinar da Bósnia Herzegovina",
    other: "Dinares da Bósnia Herzegovina"
}, {
    id: "YUD",
    displayName: "Dinar forte iugoslavo (1966–1990)",
    one: "Dinar forte iugoslavo",
    other: "Dinares fortes iugoslavos"
}, {
    id: "YDD",
    displayName: "Dinar iemenita",
    one: "Dinar do Iêmen",
    other: "Dinares do Iêmen"
}, {
    id: "IQD",
    displayName: "Dinar iraquiano",
    symbol: "IQD",
    one: "Dinar iraquiano",
    other: "Dinares iraquianos"
}, {
    id: "JOD",
    displayName: "Dinar jordaniano",
    symbol: "JOD",
    one: "Dinar jordaniano",
    other: "Dinares jordanianos"
}, {
    id: "KWD",
    displayName: "Dinar kuwaitiano",
    symbol: "KWD",
    one: "Dinar kuwaitiano",
    other: "Dinares kuwaitianos"
}, {
    id: "LYD",
    displayName: "Dinar líbio",
    symbol: "LYD",
    one: "Dinar líbio",
    other: "Dinares líbios"
}, {
    id: "MKD",
    displayName: "Dinar macedônio",
    symbol: "MKD",
    one: "Dinar macedônio",
    other: "Dinares macedônios"
}, {
    id: "MKN",
    displayName: "Dinar macedônio (1992–1993)",
    one: "Dinar macedônio (1992–1993)",
    other: "Dinares macedônios (1992–1993)"
}, {
    id: "YUM",
    displayName: "Dinar noviy iugoslavo (1994–2002)",
    one: "Dinar noviy da Iugoslávia",
    other: "Dinares noviy da Iugoslávia"
}, {
    id: "YUR",
    displayName: "Dinar reformado iugoslavo (1992–1993)",
    one: "Dinar iugoslavo reformado",
    other: "Dinares iugoslavos reformados"
}, {
    id: "SDD",
    displayName: "Dinar sudanês (1992–2007)",
    one: "Dinar antigo do Sudão",
    other: "Dinares antigos do Sudão"
}, {
    id: "RSD",
    displayName: "Dinar sérvio",
    symbol: "RSD",
    one: "Dinar sérvio",
    other: "Dinares sérvios"
}, {
    id: "CSD",
    displayName: "Dinar sérvio (2002–2006)",
    one: "Dinar antigo da Sérvia",
    other: "Dinares antigos da Sérvia"
}, {
    id: "TND",
    displayName: "Dinar tunisiano",
    symbol: "TND",
    one: "Dinar tunisiano",
    other: "Dinares tunisianos"
}, {
    id: "XDR",
    displayName: "Direitos Especiais de Giro",
    one: "Direitos de desenho especiais",
    other: "Direitos de desenho especiais"
}, {
    id: "AED",
    displayName: "Dirrã dos Emirados Árabes Unidos",
    symbol: "AED",
    one: "Dirrã dos Emirados Árabes Unidos",
    other: "Dirrãs dos Emirados Árabes Unidos"
}, {
    id: "MAD",
    displayName: "Dirrã marroquino",
    symbol: "MAD",
    one: "Dirrã marroquino",
    other: "Dirrãs marroquinos"
}, {
    id: "STD",
    displayName: "Dobra de São Tomé e Príncipe",
    symbol: "STD",
    one: "Dobra de São Tomé e Príncipe",
    other: "Dobras de São Tomé e Príncipe"
}, {
    id: "VND",
    displayName: "Dong vietnamita",
    symbol: "₫",
    one: "Dong vietnamita",
    other: "Dongs vietnamitas"
}, {
    id: "VNN",
    displayName: "Dong vietnamita (1978–1985)",
    one: "Dong vietnamita (1978–1985)",
    other: "Dong vietnamita (1978–1985)"
}, {
    id: "GRD",
    displayName: "Dracma grego",
    one: "Dracma grego",
    other: "Dracmas gregos"
}, {
    id: "AMD",
    displayName: "Dram armênio",
    symbol: "AMD",
    one: "Dram armênio",
    other: "Drams armênios"
}, {
    id: "USD",
    displayName: "Dólar americano",
    symbol: "US$",
    one: "Dólar americano",
    other: "Dólares americanos"
}, {
    id: "AUD",
    displayName: "Dólar australiano",
    symbol: "AU$",
    one: "Dólar australiano",
    other: "Dólares australianos"
}, {
    id: "BSD",
    displayName: "Dólar bahamense",
    symbol: "BSD",
    one: "Dólar bahamense",
    other: "Dólares bahamenses"
}, {
    id: "BBD",
    displayName: "Dólar barbadense",
    symbol: "BBD",
    one: "Dólar barbadense",
    other: "Dólares barbadenses"
}, {
    id: "BZD",
    displayName: "Dólar belizenho",
    symbol: "BZD",
    one: "Dólar belizenho",
    other: "Dólares belizenhos"
}, {
    id: "BMD",
    displayName: "Dólar bermudense",
    symbol: "BMD",
    one: "Dólar bermudense",
    other: "Dólares bermudenses"
}, {
    id: "BND",
    displayName: "Dólar bruneano",
    symbol: "BND",
    one: "Dólar bruneano",
    other: "Dólares bruneanos"
}, {
    id: "CAD",
    displayName: "Dólar canadense",
    symbol: "CA$",
    one: "Dólar canadense",
    other: "Dólares canadenses"
}, {
    id: "KYD",
    displayName: "Dólar das Ilhas Caiman",
    symbol: "KYD",
    one: "Dólar das Ilhas Caiman",
    other: "Dólares das Ilhas Caiman"
}, {
    id: "SBD",
    displayName: "Dólar das Ilhas Salomão",
    symbol: "SBD",
    one: "Dólar das Ilhas Salomão",
    other: "Dólares das Ilhas Salomão"
}, {
    id: "HKD",
    displayName: "Dólar de Hong Kong",
    symbol: "HK$",
    one: "Dólar de Hong Kong",
    other: "Dólares de Hong Kong"
}, {
    id: "TTD",
    displayName: "Dólar de Trinidad e Tobago",
    symbol: "TTD",
    one: "Dólar de Trinidad e Tobago",
    other: "Dólares de Trinidad e Tobago"
}, {
    id: "CNX",
    displayName: "Dólar do Banco Popular da China",
    one: "Dólar do Banco Popular da China",
    other: "Dólares do Banco Popular da China"
}, {
    id: "XCD",
    displayName: "Dólar do Caribe Oriental",
    symbol: "EC$",
    one: "Dólar do Caribe Oriental",
    other: "Dólares do Caribe Oriental"
}, {
    id: "ZWD",
    displayName: "Dólar do Zimbábue (1980–2008)",
    one: "Dólar do Zimbábue",
    other: "Dólares do Zimbábue"
}, {
    id: "ZWR",
    displayName: "Dólar do Zimbábue (2008)",
    one: "Dólar do Zimbábue (2008)",
    other: "Dólares do Zimbábue (2008)"
}, {
    id: "ZWL",
    displayName: "Dólar do Zimbábue (2009)",
    one: "Dólar do Zimbábue (2009)",
    other: "Dólares do Zimbábue (2009)"
}, {
    id: "FJD",
    displayName: "Dólar fijiano",
    symbol: "FJD",
    one: "Dólar fijiano",
    other: "Dólares fijianos"
}, {
    id: "GYD",
    displayName: "Dólar guianense",
    symbol: "GYD",
    one: "Dólar guianense",
    other: "Dólares guianenses"
}, {
    id: "JMD",
    displayName: "Dólar jamaicano",
    symbol: "JMD",
    one: "Dólar jamaicano",
    other: "Dólares jamaicanos"
}, {
    id: "LRD",
    displayName: "Dólar liberiano",
    symbol: "LRD",
    one: "Dólar liberiano",
    other: "Dólares liberianos"
}, {
    id: "NAD",
    displayName: "Dólar namibiano",
    symbol: "NAD",
    one: "Dólar namibiano",
    other: "Dólares namibianos"
}, {
    id: "NZD",
    displayName: "Dólar neozelandês",
    symbol: "NZ$",
    one: "Dólar neozelandês",
    other: "Dólares neozelandeses"
}, {
    id: "USN",
    displayName: "Dólar norte-americano (Dia seguinte)",
    one: "Dólar americano (dia seguinte)",
    other: "Dólares americanos (dia seguinte)"
}, {
    id: "USS",
    displayName: "Dólar norte-americano (Mesmo dia)",
    one: "Dólar americano (mesmo dia)",
    other: "Dólares americanos (mesmo dia)"
}, {
    id: "RHD",
    displayName: "Dólar rodesiano",
    one: "Dólar da Rodésia",
    other: "Dólares da Rodésia"
}, {
    id: "SGD",
    displayName: "Dólar singapuriano",
    symbol: "SGD",
    one: "Dólar singapuriano",
    other: "Dólares singapurianos"
}, {
    id: "SRD",
    displayName: "Dólar surinamês",
    symbol: "SRD",
    one: "Dólar surinamês",
    other: "Dólares surinameses"
}, {
    id: "GQE",
    displayName: "Ekwele da Guiné Equatorial",
    one: "Ekwele da Guiné Equatorial",
    other: "Ekweles da Guiné Equatorial"
}, {
    id: "CVE",
    displayName: "Escudo cabo-verdiano",
    symbol: "CVE",
    one: "Escudo cabo-verdiano",
    other: "Escudos cabo-verdianos"
}, {
    id: "CLE",
    displayName: "Escudo chileno",
    one: "Escudo chileno",
    other: "Escudos chilenos"
}, {
    id: "GWE",
    displayName: "Escudo da Guiné Portuguesa",
    one: "Escudo da Guiné Portuguesa",
    other: "Escudos da Guinéa Portuguesa"
}, {
    id: "MZE",
    displayName: "Escudo de Moçambique",
    one: "Escudo de Moçambique",
    other: "Escudos de Moçambique"
}, {
    id: "PTE",
    displayName: "Escudo português",
    symbol: "Esc.",
    one: "Escudo português",
    other: "Escudos portugueses"
}, {
    id: "TPE",
    displayName: "Escudo timorense",
    one: "Escudo do Timor",
    other: "Escudos do Timor"
}, {
    id: "EUR",
    displayName: "Euro",
    symbol: "€",
    one: "Euro",
    other: "Euros"
}, {
    id: "CHE",
    displayName: "Euro WIR",
    one: "Euro WIR",
    other: "Euros WIR"
}, {
    id: "AWG",
    displayName: "Florim arubano",
    symbol: "AWG",
    one: "Florim arubano",
    other: "Florins arubanos"
}, {
    id: "ANG",
    displayName: "Florim das Antilhas Holandesas",
    symbol: "ANG",
    one: "Florim das Antilhas Holandesas",
    other: "Florins das Antilhas Holandesas"
}, {
    id: "SRG",
    displayName: "Florim do Suriname",
    one: "Florim do Suriname",
    other: "Florins do Suriname"
}, {
    id: "NLG",
    displayName: "Florim holandês",
    one: "Florim holandês",
    other: "Florins holandeses"
}, {
    id: "HUF",
    displayName: "Forint húngaro",
    symbol: "HUF",
    one: "Forint húngaro",
    other: "Forints húngaros"
}, {
    id: "XOF",
    displayName: "Franco CFA de BCEAO",
    symbol: "CFA",
    one: "Franco CFA de BCEAO",
    other: "Francos CFA de BCEAO"
}, {
    id: "XAF",
    displayName: "Franco CFA de BEAC",
    symbol: "FCFA",
    one: "Franco CFA de BEAC",
    other: "Francos CFA de BEAC"
}, {
    id: "XPF",
    displayName: "Franco CFP",
    symbol: "CFPF",
    one: "Franco CFP",
    other: "Francos CFP"
}, {
    id: "XFU",
    displayName: "Franco UIC francês",
    one: "Franco UIC francês",
    other: "Francos UIC franceses"
}, {
    id: "CHW",
    displayName: "Franco WIR",
    one: "Franco WIR",
    other: "Francos WIR"
}, {
    id: "BEF",
    displayName: "Franco belga",
    one: "Franco belga",
    other: "Francos belgas"
}, {
    id: "BEC",
    displayName: "Franco belga (conversível)",
    one: "Franco belga (conversível)",
    other: "Francos belgas (conversíveis)"
}, {
    id: "BEL",
    displayName: "Franco belga (financeiro)",
    one: "Franco belga (financeiro)",
    other: "Francos belgas (financeiros)"
}, {
    id: "BIF",
    displayName: "Franco burundiano",
    symbol: "BIF",
    one: "Franco burundiano",
    other: "Francos burundianos"
}, {
    id: "KMF",
    displayName: "Franco comorense",
    symbol: "KMF",
    one: "Franco comorense",
    other: "Francos comorenses"
}, {
    id: "CDF",
    displayName: "Franco congolês",
    symbol: "CDF",
    one: "Franco congolês",
    other: "Francos congoleses"
}, {
    id: "LUC",
    displayName: "Franco conversível de Luxemburgo",
    one: "Franco conversível de Luxemburgo",
    other: "Francos conversíveis de Luxemburgo"
}, {
    id: "MGF",
    displayName: "Franco de Madagascar",
    one: "Franco de Madagascar",
    other: "Francos de Madagascar"
}, {
    id: "MLF",
    displayName: "Franco de Mali",
    one: "Franco de Mali",
    other: "Francos de Mali"
}, {
    id: "DJF",
    displayName: "Franco djibutiense",
    symbol: "DJF",
    one: "Franco djibutiense",
    other: "Francos djibutienses"
}, {
    id: "LUL",
    displayName: "Franco financeiro de Luxemburgo",
    one: "Franco financeiro de Luxemburgo",
    other: "Francos financeiros de Luxemburgo"
}, {
    id: "FRF",
    displayName: "Franco francês",
    one: "Franco francês",
    other: "Francos franceses"
}, {
    id: "GNF",
    displayName: "Franco guineano",
    symbol: "GNF",
    one: "Franco guineano",
    other: "Francos guineanos"
}, {
    id: "LUF",
    displayName: "Franco luxemburguês",
    one: "Franco de Luxemburgo",
    other: "Francos de Luxemburgo"
}, {
    id: "MAF",
    displayName: "Franco marroquino",
    one: "Franco marroquino",
    other: "Francos marroquinos"
}, {
    id: "MCF",
    displayName: "Franco monegasco",
    one: "Franco monegasco",
    other: "Francos monegascos"
}, {
    id: "RWF",
    displayName: "Franco ruandês",
    symbol: "RWF",
    one: "Franco ruandês",
    other: "Francos ruandeses"
}, {
    id: "CHF",
    displayName: "Franco suíço",
    symbol: "CHF",
    one: "Franco suíço",
    other: "Francos suíços"
}, {
    id: "XFO",
    displayName: "Franco-ouro francês",
    one: "Franco de ouro francês",
    other: "Francos de ouro franceses"
}, {
    id: "XRE",
    displayName: "Fundos RINET",
    one: "Fundos RINET",
    other: "Fundos RINET"
}, {
    id: "HTG",
    displayName: "Gourde haitiano",
    symbol: "HTG",
    one: "Gourde haitiano",
    other: "Gourdes haitianos"
}, {
    id: "PYG",
    displayName: "Guarani paraguaio",
    symbol: "PYG",
    one: "Guarani paraguaio",
    other: "Guaranis paraguaios"
}, {
    id: "UAH",
    displayName: "Hryvnia ucraniano",
    symbol: "UAH",
    one: "Hryvnia ucraniano",
    other: "Hryvnias ucranianos"
}, {
    id: "KRH",
    displayName: "Hwan da Coreia do Sul (1953–1962)",
    one: "Hwan da Coreia do Sul",
    other: "Hwans da Coreia do Sul"
}, {
    id: "JPY",
    displayName: "Iene japonês",
    symbol: "JP¥",
    one: "Iene japonês",
    other: "Ienes japoneses"
}, {
    id: "PEI",
    displayName: "Inti peruano",
    one: "Inti peruano",
    other: "Intis peruanos"
}, {
    id: "UAK",
    displayName: "Karbovanetz ucraniano",
    one: "Karbovanetz da Ucrânia",
    other: "Karbovanetzs da Ucrânia"
}, {
    id: "PGK",
    displayName: "Kina papuásia",
    symbol: "PGK",
    one: "Kina papuásia",
    other: "Kinas papuásias"
}, {
    id: "LAK",
    displayName: "Kip laosiano",
    symbol: "LAK",
    one: "Kip laosiano",
    other: "Kips laosianos"
}, {
    id: "HRK",
    displayName: "Kuna croata",
    symbol: "HRK",
    one: "Kuna croata",
    other: "Kunas croatas"
}, {
    id: "MWK",
    displayName: "Kwacha malawiana",
    symbol: "MWK",
    one: "Kwacha malawiana",
    other: "Kwachas malawianas"
}, {
    id: "ZMW",
    displayName: "Kwacha zambiano",
    symbol: "ZMW",
    one: "Kwacha zambiano",
    other: "Kwachas zambianos"
}, {
    id: "AOA",
    displayName: "Kwanza angolano",
    symbol: "AOA",
    one: "Kwanza angolano",
    other: "Kwanzas angolanos"
}, {
    id: "BUK",
    displayName: "Kyat birmanês",
    one: "Kyat burmês",
    other: "Kyats burmeses"
}, {
    id: "MMK",
    displayName: "Kyat mianmarense",
    symbol: "MMK",
    one: "Kyat mianmarense",
    other: "Kyats mianmarenses"
}, {
    id: "GEL",
    displayName: "Lari georgiano",
    symbol: "GEL",
    one: "Lari georgiano",
    other: "Laris georgianos"
}, {
    id: "LVL",
    displayName: "Lats letão",
    symbol: "LVL",
    one: "Lats letão",
    other: "Lati letões"
}, {
    id: "ALK",
    displayName: "Lek Albanês (1946–1965)",
    one: "Lek Albanês (1946–1965)",
    other: "Leks Albaneses (1946–1965)"
}, {
    id: "ALL",
    displayName: "Lek albanês",
    symbol: "ALL",
    one: "Lek albanês",
    other: "Leks albaneses"
}, {
    id: "HNL",
    displayName: "Lempira hondurenha",
    symbol: "HNL",
    one: "Lempira hondurenha",
    other: "Lempiras hondurenhas"
}, {
    id: "SLL",
    displayName: "Leone de Serra Leoa",
    symbol: "SLL",
    one: "Leone de Serra Leoa",
    other: "Leones de Serra Leoa"
}, {
    id: "MDL",
    displayName: "Leu moldávio",
    symbol: "MDL",
    one: "Leu moldávio",
    other: "Leus moldávios"
}, {
    id: "RON",
    displayName: "Leu romeno",
    symbol: "RON",
    one: "Leu romeno",
    other: "Leus romenos"
}, {
    id: "ROL",
    displayName: "Leu romeno (1952–2006)",
    one: "Leu antigo da Romênia",
    other: "Leus antigos da Romênia"
}, {
    id: "BGN",
    displayName: "Lev búlgaro",
    symbol: "BGN",
    one: "Lev búlgaro",
    other: "Levs búlgaros"
}, {
    id: "BGO",
    displayName: "Lev búlgaro (1879–1952)",
    one: "Lev búlgaro (1879–1952)",
    other: "Levs búlgaros (1879–1952)"
}, {
    id: "BGL",
    displayName: "Lev forte búlgaro",
    one: "Lev forte búlgaro",
    other: "Levs fortes búlgaros"
}, {
    id: "BGM",
    displayName: "Lev socialista búlgaro",
    one: "Lev socialista búlgaro",
    other: "Levs socialistas búlgaros"
}, {
    id: "GBP",
    displayName: "Libra britânica",
    symbol: "£",
    one: "Libra britânica",
    other: "Libras britânicas"
}, {
    id: "CYP",
    displayName: "Libra cipriota",
    one: "Libra cipriota",
    other: "Libras cipriotas"
}, {
    id: "GIP",
    displayName: "Libra de Gibraltar",
    symbol: "GIP",
    one: "Libra de Gibraltar",
    other: "Libras de Gibraltar"
}, {
    id: "SHP",
    displayName: "Libra de Santa Helena",
    symbol: "SHP",
    one: "Libra de Santa Helena",
    other: "Libras de Santa Helena"
}, {
    id: "EGP",
    displayName: "Libra egípcia",
    symbol: "EGP",
    one: "Libra egípcia",
    other: "Libras egípcias"
}, {
    id: "IEP",
    displayName: "Libra irlandesa",
    one: "Libra irlandesa",
    other: "Libras irlandesas"
}, {
    id: "ILP",
    displayName: "Libra israelita",
    one: "Libra israelita",
    other: "Libras israelitas"
}, {
    id: "LBP",
    displayName: "Libra libanesa",
    symbol: "LBP",
    one: "Libra libanesa",
    other: "Libras libanesas"
}, {
    id: "MTP",
    displayName: "Libra maltesa",
    one: "Libra maltesa",
    other: "Libras maltesas"
}, {
    id: "FKP",
    displayName: "Libra malvinense",
    symbol: "FKP",
    one: "Libra malvinense",
    other: "Libras malvinenses"
}, {
    id: "SDG",
    displayName: "Libra sudanesa",
    symbol: "SDG",
    one: "Libra sudanesa",
    other: "Libras sudanesas"
}, {
    id: "SDP",
    displayName: "Libra sudanesa (1957–1998)",
    one: "Libra antiga sudanesa",
    other: "Libras antigas sudanesas"
}, {
    id: "SSP",
    displayName: "Libra sul-sudanesa",
    symbol: "SSP",
    one: "Libra sul-sudanesa",
    other: "Libras sul-sudanesas"
}, {
    id: "SYP",
    displayName: "Libra síria",
    symbol: "SYP",
    one: "Libra síria",
    other: "Libras sírias"
}, {
    id: "SZL",
    displayName: "Lilangeni suazi",
    symbol: "SZL",
    one: "Lilangeni suazi",
    other: "Lilangenis suazis"
}, {
    id: "ITL",
    displayName: "Lira italiana",
    one: "Lira italiana",
    other: "Liras italianas"
}, {
    id: "MTL",
    displayName: "Lira maltesa",
    one: "Lira Maltesa",
    other: "Liras maltesas"
}, {
    id: "TRY",
    displayName: "Lira turca",
    symbol: "TRY",
    one: "Lira turca",
    other: "Liras turcas"
}, {
    id: "TRL",
    displayName: "Lira turca (1922–2005)",
    one: "Lira turca antiga",
    other: "Liras turcas antigas"
}, {
    id: "LTL",
    displayName: "Litas lituano",
    symbol: "LTL",
    one: "Litas lituano",
    other: "Litai lituanos"
}, {
    id: "LSL",
    displayName: "Loti do Lesoto",
    one: "Loti do Lesoto",
    other: "Lotis do Lesoto"
}, {
    id: "AZM",
    displayName: "Manat azerbaijano (1993–2006)",
    one: "Manat do Azeibaijão (1993–2006)",
    other: "Manats do Azeibaijão (1993–2006)"
}, {
    id: "AZN",
    displayName: "Manat azeri",
    symbol: "AZN",
    one: "Manat azeri",
    other: "Manats azeris"
}, {
    id: "TMM",
    displayName: "Manat do Turcomenistão (1993–2009)",
    one: "Manat do Turcomenistão (1993–2009)",
    other: "Manats do Turcomenistão (1993–2009)"
}, {
    id: "TMT",
    displayName: "Manat turcomeno",
    symbol: "TMT",
    one: "Manat turcomeno",
    other: "Manats turcomenos"
}, {
    id: "FIM",
    displayName: "Marca finlandesa",
    one: "Marco finlandês",
    other: "Marcos finlandeses"
}, {
    id: "DEM",
    displayName: "Marco alemão",
    one: "Marco alemão",
    other: "Marcos alemães"
}, {
    id: "BAM",
    displayName: "Marco bósnio-herzegovino conversível",
    symbol: "BAM",
    one: "Marco bósnio-herzegovino conversível",
    other: "Marco bósnio-herzegovino conversível"
}, {
    id: "MZM",
    displayName: "Metical de Moçambique (1980–2006)",
    one: "Metical antigo de Moçambique",
    other: "Meticales antigos de Moçambique"
}, {
    id: "MZN",
    displayName: "Metical moçambicano",
    symbol: "MZN",
    one: "Metical moçambicano",
    other: "Meticales moçambicanos"
}, {
    id: "XXX",
    displayName: "Moeda desconhecida",
    one: "(moeda desconhecida)",
    other: "(moedas desconhecidas)"
}, {
    id: "BOV",
    displayName: "Mvdol boliviano",
    one: "Mvdol boliviano",
    other: "Mvdols bolivianos"
}, {
    id: "NGN",
    displayName: "Naira nigeriana",
    symbol: "NGN",
    one: "Naira nigeriana",
    other: "Nairas nigerianas"
}, {
    id: "ERN",
    displayName: "Nakfa da Eritreia",
    symbol: "ERN",
    one: "Nakfa da Eritreia",
    other: "Nakfas da Eritreia"
}, {
    id: "BTN",
    displayName: "Ngultrum butanês",
    symbol: "BTN",
    one: "Ngultrum butanês",
    other: "Ngultruns butaneses"
}, {
    id: "AON",
    displayName: "Novo cuanza angolano (1990–2000)",
    one: "Novo kwanza angolano (AON)",
    other: "Novos kwanzas angolanos (AON)"
}, {
    id: "BAN",
    displayName: "Novo dinar da Bósnia-Herzegovina (1994–1997)",
    one: "Novo dinar da Bósnia-Herzegovina",
    other: "Novos dinares da Bósnia-Herzegovina"
}, {
    id: "TWD",
    displayName: "Novo dólar taiwanês",
    symbol: "NT$",
    one: "Novo dólar taiwanês",
    other: "Novos dólares taiwaneses"
}, {
    id: "PEN",
    displayName: "Novo sol peruano",
    symbol: "PEN",
    one: "Novo sol peruano",
    other: "Novos sóis peruanos"
}, {
    id: "DDM",
    displayName: "Ostmark da Alemanha Oriental",
    one: "Marco da Alemanha Oriental",
    other: "Marcos da Alemanha Oriental"
}, {
    id: "MRO",
    displayName: "Ouguiya mauritana",
    symbol: "MRO",
    one: "Ouguiya mauritana",
    other: "Ouguiyas mauritanas"
}, {
    id: "XAU",
    displayName: "Ouro",
    one: "Ouro",
    other: "Ouros"
}, {
    id: "XPD",
    displayName: "Paládio",
    one: "Paládio",
    other: "Paládios"
}, {
    id: "MOP",
    displayName: "Pataca macaense",
    symbol: "MOP",
    one: "Pataca macaense",
    other: "Patacas macaenses"
}, {
    id: "TOP",
    displayName: "Paʻanga tonganesa",
    symbol: "TOP",
    one: "Paʻanga tonganesa",
    other: "Paʻangas tonganesas"
}, {
    id: "ADP",
    displayName: "Peseta de Andorra",
    one: "Peseta de Andorra",
    other: "Pesetas de Andorra"
}, {
    id: "ESP",
    displayName: "Peseta espanhola",
    symbol: "₧",
    one: "Peseta espanhola",
    other: "Pesetas espanholas"
}, {
    id: "ESA",
    displayName: "Peseta espanhola (conta A)",
    one: "Peseta espanhola (conta A)",
    other: "Pesetas espanholas (conta A)"
}, {
    id: "ESB",
    displayName: "Peseta espanhola (conta conversível)",
    one: "Peseta espanhola (conta conversível)",
    other: "Pesetas espanholas (conta conversível)"
}, {
    id: "MXP",
    displayName: "Peso Prata mexicano (1861–1992)",
    one: "Peso de prata mexicano (1861–1992)",
    other: "Pesos de prata mexicanos (1861–1992)"
}, {
    id: "ARS",
    displayName: "Peso argentino",
    symbol: "ARS",
    one: "Peso argentino",
    other: "Pesos argentinos"
}, {
    id: "ARM",
    displayName: "Peso argentino (1881–1970)",
    one: "Peso argentino (1881–1970)",
    other: "Pesos argentinos (1881–1970)"
}, {
    id: "ARP",
    displayName: "Peso argentino (1983–1985)",
    one: "Peso argentino (1983–1985)",
    other: "Pesos argentinos (1983–1985)"
}, {
    id: "BOP",
    displayName: "Peso boliviano",
    one: "Peso boliviano",
    other: "Pesos bolivianos"
}, {
    id: "CLP",
    displayName: "Peso chileno",
    symbol: "CLP",
    one: "Peso chileno",
    other: "Pesos chilenos"
}, {
    id: "COP",
    displayName: "Peso colombiano",
    symbol: "COP",
    one: "Peso colombiano",
    other: "Pesos colombianos"
}, {
    id: "CUP",
    displayName: "Peso cubano",
    symbol: "CUP",
    one: "Peso cubano",
    other: "Pesos cubanos"
}, {
    id: "CUC",
    displayName: "Peso cubano conversível",
    symbol: "CUC",
    one: "Peso cubano conversível",
    other: "Pesos cubanos conversíveis"
}, {
    id: "GWP",
    displayName: "Peso da Guiné-Bissau",
    one: "Peso de Guiné-Bissau",
    other: "Pesos de Guiné-Bissau"
}, {
    id: "DOP",
    displayName: "Peso dominicano",
    symbol: "DOP",
    one: "Peso dominicano",
    other: "Pesos dominicanos"
}, {
    id: "PHP",
    displayName: "Peso filipino",
    symbol: "PHP",
    one: "Peso filipino",
    other: "Pesos filipinos"
}, {
    id: "ARL",
    displayName: "Peso lei argentino (1970–1983)",
    one: "Peso lei argentino (1970–1983)",
    other: "Pesos lei argentinos (1970–1983)"
}, {
    id: "MXN",
    displayName: "Peso mexicano",
    symbol: "MX$",
    one: "Peso mexicano",
    other: "Pesos mexicanos"
}, {
    id: "UYU",
    displayName: "Peso uruguaio",
    symbol: "UYU",
    one: "Peso uruguaio",
    other: "Pesos uruguaios"
}, {
    id: "UYP",
    displayName: "Peso uruguaio (1975–1993)",
    one: "Peso uruguaio (1975–1993)",
    other: "Pesos uruguaios (1975–1993)"
}, {
    id: "UYI",
    displayName: "Peso uruguaio en unidades indexadas",
    one: "Peso uruguaio em unidades indexadas",
    other: "Pesos uruguaios em unidades indexadas"
}, {
    id: "XPT",
    displayName: "Platina",
    one: "Platina",
    other: "Platinas"
}, {
    id: "XAG",
    displayName: "Prata",
    one: "Prata",
    other: "Pratas"
}, {
    id: "BWP",
    displayName: "Pula botsuanesa",
    symbol: "BWP",
    one: "Pula botsuanesa",
    other: "Pulas botsuanesas"
}, {
    id: "GTQ",
    displayName: "Quetzal guatemalense",
    symbol: "GTQ",
    one: "Quetzal guatemalense",
    other: "Quetzais guatemalenses"
}, {
    id: "ZAR",
    displayName: "Rand sul-africano",
    symbol: "ZAR",
    one: "Rand sul-africano",
    other: "Rands sul-africanos"
}, {
    id: "ZAL",
    displayName: "Rand sul-africano (financeiro)",
    one: "Rand da África do Sul (financeiro)",
    other: "Rands da África do Sul (financeiro)"
}, {
    id: "BRL",
    displayName: "Real brasileiro",
    symbol: "R$",
    one: "Real brasileiro",
    other: "Reais brasileiros"
}, {
    id: "QAR",
    displayName: "Rial catariano",
    symbol: "QAR",
    one: "Rial catariano",
    other: "Riales catarianos"
}, {
    id: "YER",
    displayName: "Rial iemenita",
    symbol: "YER",
    one: "Rial iemenita",
    other: "Riales iemenitas"
}, {
    id: "IRR",
    displayName: "Rial iraniano",
    symbol: "IRR",
    one: "Rial iraniano",
    other: "Riales iranianos"
}, {
    id: "OMR",
    displayName: "Rial omanense",
    symbol: "OMR",
    one: "Rial omanense",
    other: "Riales omanenses"
}, {
    id: "KHR",
    displayName: "Riel cambojano",
    symbol: "KHR",
    one: "Riel cambojano",
    other: "Rieles cambojanos"
}, {
    id: "MYR",
    displayName: "Ringgit malaio",
    symbol: "MYR",
    one: "Ringgit malaio",
    other: "Ringgits malaios"
}, {
    id: "SAR",
    displayName: "Riyal saudita",
    symbol: "SAR",
    one: "Riyal saudita",
    other: "Riyales sauditas"
}, {
    id: "BYR",
    displayName: "Rublo bielorrusso",
    symbol: "BYR",
    one: "Rublo bielorrusso",
    other: "Rublos bielorrussos"
}, {
    id: "TJR",
    displayName: "Rublo do Tadjiquistão",
    one: "Rublo do Tajaquistão",
    other: "Rublos do Tajaquistão"
}, {
    id: "LVR",
    displayName: "Rublo letão",
    one: "Rublo da Letônia",
    other: "Rublos da Letônia"
}, {
    id: "BYB",
    displayName: "Rublo novo bielo-russo (1994–1999)",
    one: "Novo rublo bielorusso (BYB)",
    other: "Novos rublos bielorussos (BYB)"
}, {
    id: "RUB",
    displayName: "Rublo russo",
    symbol: "RUB",
    one: "Rublo russo",
    other: "Rublos russos"
}, {
    id: "RUR",
    displayName: "Rublo russo (1991–1998)",
    symbol: "р.",
    one: "Rublo russo (1991–1998)",
    other: "Rublos russos (1991–1998)"
}, {
    id: "SUR",
    displayName: "Rublo soviético",
    one: "Rublo soviético",
    other: "Rublos soviéticos"
}, {
    id: "LKR",
    displayName: "Rupia ceilandesa",
    symbol: "LKR",
    one: "Rupia ceilandesa",
    other: "Rupias ceilandesas"
}, {
    id: "INR",
    displayName: "Rupia indiana",
    symbol: "₹",
    one: "Rupia indiana",
    other: "Rupias indianas"
}, {
    id: "IDR",
    displayName: "Rupia indonésia",
    symbol: "IDR",
    one: "Rupia indonésia",
    other: "Rupias indonésias"
}, {
    id: "MVR",
    displayName: "Rupia maldiva",
    symbol: "MVR",
    one: "Rupia maldiva",
    other: "Rupias maldivas"
}, {
    id: "MUR",
    displayName: "Rupia mauriciana",
    symbol: "MUR",
    one: "Rupia mauriciana",
    other: "Rupias mauricianas"
}, {
    id: "NPR",
    displayName: "Rupia nepalesa",
    symbol: "NPR",
    one: "Rupia nepalesa",
    other: "Rupias nepalesas"
}, {
    id: "PKR",
    displayName: "Rupia paquistanesa",
    symbol: "PKR",
    one: "Rupia paquistanesa",
    other: "Rupias paquistanesas"
}, {
    id: "SCR",
    displayName: "Rupia seichelense",
    symbol: "SCR",
    one: "Rupia seichelense",
    other: "Rupias seichelenses"
}, {
    id: "ILR",
    displayName: "Sheqel antigo israelita",
    one: "Sheqel antigo israelita",
    other: "Sheqels antigos israelitas"
}, {
    id: "ILS",
    displayName: "Sheqel novo israelita",
    symbol: "₪",
    one: "Sheqel novo israelita",
    other: "Sheqels novos israelita"
}, {
    id: "PES",
    displayName: "Sol peruano (1863–1965)",
    one: "Sol peruano",
    other: "Soles peruanos"
}, {
    id: "KGS",
    displayName: "Som quirguiz",
    symbol: "KGS",
    one: "Som quirguiz",
    other: "Sons quirguizes"
}, {
    id: "UZS",
    displayName: "Som uzbeque",
    symbol: "UZS",
    one: "Som uzbeque",
    other: "Sons uzbeques"
}, {
    id: "TJS",
    displayName: "Somoni tadjique",
    symbol: "TJS",
    one: "Somoni tadjique",
    other: "Somonis tadjiques"
}, {
    id: "ECS",
    displayName: "Sucre equatoriano",
    one: "Sucre equatoriano",
    other: "Sucres equatorianos"
}, {
    id: "GNS",
    displayName: "Syli da Guiné",
    one: "Syli guineano",
    other: "Sylis guineanos"
}, {
    id: "BDT",
    displayName: "Taka bengalesa",
    symbol: "BDT",
    one: "Taka bengalesa",
    other: "Takas bengalesas"
}, {
    id: "WST",
    displayName: "Tala samoano",
    symbol: "WST",
    one: "Tala samoano",
    other: "Talas samoanos"
}, {
    id: "LTT",
    displayName: "Talonas lituano",
    one: "Talonas lituanas",
    other: "Talonases lituanas"
}, {
    id: "KZT",
    displayName: "Tenge cazaque",
    symbol: "KZT",
    one: "Tenge cazaque",
    other: "Tenges cazaques"
}, {
    id: "SIT",
    displayName: "Tolar Bons esloveno",
    one: "Tolar da Eslovênia",
    other: "Tolares da Eslovênia"
}, {
    id: "MNT",
    displayName: "Tugrik mongol",
    symbol: "MNT",
    one: "Tugrik mongol",
    other: "Tugriks mongóis"
}, {
    id: "XBA",
    displayName: "Unidade Composta Europeia",
    one: "Unidade de composição europeia",
    other: "Unidades de composição europeias"
}, {
    id: "MXV",
    displayName: "Unidade Mexicana de Investimento (UDI)",
    one: "Unidade de investimento mexicana (UDI)",
    other: "Unidades de investimento mexicanas (UDI)"
}, {
    id: "XBB",
    displayName: "Unidade Monetária Europeia",
    one: "Unidade monetária europeia",
    other: "Unidades monetárias europeias"
}, {
    id: "XBC",
    displayName: "Unidade de Conta Europeia (XBC)",
    one: "Unidade europeia de conta (XBC)",
    other: "Unidades europeias de conta (XBC)"
}, {
    id: "XBD",
    displayName: "Unidade de Conta Europeia (XBD)",
    one: "Unidade europeia de conta (XBD)",
    other: "Unidades europeias de conta (XBD)"
}, {
    id: "XEU",
    displayName: "Unidade de Moeda Europeia",
    one: "Unidade de moeda europeia",
    other: "Unidades de moedas europeias"
}, {
    id: "ECV",
    displayName: "Unidade de Valor Constante (UVC) do Equador",
    one: "Unidade de valor constante equatoriana (UVC)",
    other: "Unidades de valor constante equatorianas (UVC)"
}, {
    id: "COU",
    displayName: "Unidade de Valor Real",
    one: "Unidade de valor real",
    other: "Unidades de valor real"
}, {
    id: "CLF",
    displayName: "Unidades de Fomento chilenas",
    one: "Unidade de fomento chilena",
    other: "Unidades de fomento chilenas"
}, {
    id: "VUV",
    displayName: "Vatu vanuatuense",
    symbol: "VUV",
    one: "Vatu vanuatuense",
    other: "Vatus vanuatuenses"
}, {
    id: "KRO",
    displayName: "Won da Coreia do Sul (1945–1953)",
    one: "Won antigo da Coreia do Sul",
    other: "Wons antigos da Coreia do Sul"
}, {
    id: "KPW",
    displayName: "Won norte-coreano",
    symbol: "KPW",
    one: "Won norte-coreano",
    other: "Wons norte-coreanos"
}, {
    id: "KRW",
    displayName: "Won sul-coreano",
    symbol: "₩",
    one: "Won sul-coreano",
    other: "Wons sul-coreanos"
}, {
    id: "ATS",
    displayName: "Xelim austríaco",
    one: "Schilling australiano",
    other: "Schillings australianos"
}, {
    id: "KES",
    displayName: "Xelim queniano",
    symbol: "KES",
    one: "Xelim queniano",
    other: "Xelins quenianos"
}, {
    id: "SOS",
    displayName: "Xelim somaliano",
    symbol: "SOS",
    one: "Xelim somaliano",
    other: "Xelins somalianos"
}, {
    id: "TZS",
    displayName: "Xelim tanzaniano",
    symbol: "TZS",
    one: "Xelim tanzaniano",
    other: "Xelins tanzanianos"
}, {
    id: "UGX",
    displayName: "Xelim ugandense",
    symbol: "UGX",
    one: "Xelim ugandense",
    other: "Xelins ugandenses"
}, {
    id: "UGS",
    displayName: "Xelim ugandense (1966–1987)",
    one: "Shilling de Uganda (1966–1987)",
    other: "Shillings de Uganda (1966–1987)"
}, {
    id: "CNY",
    displayName: "Yuan chinês",
    symbol: "CN¥",
    one: "Yuan chinês",
    other: "Yuans chineses"
}, {
    id: "ZRN",
    displayName: "Zaire Novo zairense (1993–1998)",
    one: "Novo zaire do Zaire",
    other: "Novos zaires do Zaire"
}, {
    id: "ZRZ",
    displayName: "Zaire zairense (1971–1993)",
    one: "Zaire do Zaire",
    other: "Zaires do Zaire"
}, {
    id: "PLN",
    displayName: "Zloti polonês",
    symbol: "PLN",
    one: "Zloti polonês",
    other: "Zlotis poloneses"
}, {
    id: "PLZ",
    displayName: "Zloti polonês (1950–1995)",
    one: "Zloti polonês (1950–1995)",
    other: "Zlotis poloneses (1950–1995)"
} ];

module.exports = inter;