function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./nl.js"), inter = defaults({
    renderers: {}
}, P);

var _6atv1 = {
    one: "0K",
    other: "0K"
}, _6atv2 = [ "K1", "K2", "K3", "K4" ], _6atv3 = {
    all: {
        leap: "{0}bis"
    }
}, _6atv4 = {
    one: "00K",
    other: "00K"
}, _6atv5 = {
    displayName: "tijdperk"
}, _6atv6 = {
    displayName: "tijdzone"
}, _6atv7 = [ "voor R.O.C.", "Minguo" ], _6atv8 = {
    one: "000K",
    other: "000K"
}, _6atv9 = {
    one: "¤ 0K",
    other: "¤ 0K"
}, _6atv10 = {
    a: "h a – h a",
    h: "h–h a"
}, _6atv11 = {
    displayName: "a.m./p.m."
}, _6atv12 = {
    one: "¤ 00K",
    other: "¤ 00K"
}, _6atv13 = {
    one: "¤ 000K",
    other: "¤ 000K"
}, _6atv14 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _6atv15 = [ "Z", "M", "D", "W", "D", "V", "Z" ], _6atv16 = {
    d: "d–d MMM",
    M: "d MMM – d MMM"
}, _6atv17 = {
    displayName: "dag van de week"
}, _6atv18 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _6atv19 = {
    symbols: P.numbers.ahom.symbols
}, _6atv20 = {
    one: "0 mln'.'",
    other: "0 mln'.'"
}, _6atv21 = {
    one: "0 mld'.'",
    other: "0 mld'.'"
}, _6atv22 = {
    one: "0 bln'.'",
    other: "0 bln'.'"
}, _6atv23 = {
    d: "d/MM – d/MM",
    M: "d/MM – d/MM"
}, _6atv24 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _6atv25 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _6atv26 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _6atv27 = {
    one: "0 duizend",
    other: "0 duizend"
}, _6atv28 = {
    one: "0 miljoen",
    other: "0 miljoen"
}, _6atv29 = {
    one: "0 miljard",
    other: "0 miljard"
}, _6atv30 = {
    one: "0 biljoen",
    other: "0 biljoen"
}, _6atv31 = {
    one: "00 mln'.'",
    other: "00 mln'.'"
}, _6atv32 = {
    one: "00 mld'.'",
    other: "00 mld'.'"
}, _6atv33 = {
    one: "00 bln'.'",
    other: "00 bln'.'"
}, _6atv34 = [ "zo", "ma", "di", "wo", "do", "vr", "za" ], _6atv35 = {
    one: "00 duizend",
    other: "00 duizend"
}, _6atv36 = {
    one: "00 miljoen",
    other: "00 miljoen"
}, _6atv37 = {
    one: "00 miljard",
    other: "00 miljard"
}, _6atv38 = {
    one: "00 biljoen",
    other: "00 biljoen"
}, _6atv39 = {
    one: "000 mln'.'",
    other: "000 mln'.'"
}, _6atv40 = {
    one: "000 mld'.'",
    other: "000 mld'.'"
}, _6atv41 = {
    one: "000 bln'.'",
    other: "000 bln'.'"
}, _6atv42 = {
    one: "¤ 0 mln'.'",
    other: "¤ 0 mln'.'"
}, _6atv43 = {
    one: "¤ 0 mld'.'",
    other: "¤ 0 mld'.'"
}, _6atv44 = {
    one: "¤ 0 bln'.'",
    other: "¤ 0 bln'.'"
}, _6atv45 = {
    M: "MM/y – MM/y G",
    y: "MM/y – MM/y G"
}, _6atv46 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _6atv47 = {
    M: "MMM–MMM y G",
    y: "MMM y – MMM y G"
}, _6atv48 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _6atv49 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _6atv50 = {
    one: "000 duizend",
    other: "000 duizend"
}, _6atv51 = {
    one: "000 miljoen",
    other: "000 miljoen"
}, _6atv52 = {
    one: "000 miljard",
    other: "000 miljard"
}, _6atv53 = {
    one: "000 biljoen",
    other: "000 biljoen"
}, _6atv54 = {
    one: "¤ 00 mln'.'",
    other: "¤ 00 mln'.'"
}, _6atv55 = {
    one: "¤ 00 mld'.'",
    other: "¤ 00 mld'.'"
}, _6atv56 = {
    one: "¤ 00 bln'.'",
    other: "¤ 00 bln'.'"
}, _6atv57 = {
    one: "¤ 000 mln'.'",
    other: "¤ 000 mln'.'"
}, _6atv58 = {
    one: "¤ 000 mld'.'",
    other: "¤ 000 mld'.'"
}, _6atv59 = {
    one: "¤ 000 bln'.'",
    other: "¤ 000 bln'.'"
}, _6atv60 = {
    d: "E d/MM – E d/MM",
    M: "E d/MM – E d/MM"
}, _6atv61 = {
    d: "E d – E d MMM",
    M: "E d MMM – E d MMM"
}, _6atv62 = {
    M: "MMMM–MMMM y G",
    y: "MMMM y – MMMM y G"
}, _6atv63 = {
    one: "over {0} dag",
    other: "over {0} dgn"
}, _6atv64 = {
    one: "over {0} uur",
    other: "over {0} uur"
}, _6atv65 = {
    one: "over {0} jaar",
    other: "over {0} jaar"
}, _6atv66 = {
    one: "over {0} dag",
    other: "over {0} dagen"
}, _6atv67 = {
    one: "over {0} min.",
    other: "over {0} min."
}, _6atv68 = {
    one: "over {0} sec.",
    other: "over {0} sec."
}, _6atv69 = {
    one: "over {0} week",
    other: "over {0} weken"
}, _6atv70 = {
    one: "over {0} maand",
    other: "over {0} maanden"
}, _6atv71 = {
    one: "{0} dag geleden",
    other: "{0} dgn geleden"
}, _6atv72 = {
    one: "{0} uur geleden",
    other: "{0} uur geleden"
}, _6atv73 = {
    one: "over {0} minuut",
    other: "over {0} minuten"
}, _6atv74 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _6atv75 = {
    "0": "dit jaar",
    "1": "volgend jaar",
    "-1": "vorig jaar"
}, _6atv76 = {
    one: "{0} jaar geleden",
    other: "{0} jaar geleden"
}, _6atv77 = {
    one: "{0} dag geleden",
    other: "{0} dagen geleden"
}, _6atv78 = {
    one: "{0} min. geleden",
    other: "{0} min. geleden"
}, _6atv79 = {
    one: "{0} sec. geleden",
    other: "{0} sec. geleden"
}, _6atv80 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _6atv81 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _6atv82 = {
    one: "{0} week geleden",
    other: "{0} weken geleden"
}, _6atv83 = {
    one: "over {0} seconde",
    other: "over {0} seconden"
}, _6atv84 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _6atv85 = {
    one: "over {0} kwartaal",
    other: "over {0} kwartalen"
}, _6atv86 = {
    "0": "deze week",
    "1": "volgende week",
    "-1": "vorige week"
}, _6atv87 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _6atv88 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _6atv89 = {
    one: "{0} maand geleden",
    other: "{0} maanden geleden"
}, _6atv90 = {
    one: "{0} minuut geleden",
    other: "{0} minuten geleden"
}, _6atv91 = {
    "0": "deze zo",
    "1": "volgende week zo",
    "-1": "afgelopen zo"
}, _6atv92 = {
    "0": "deze ma",
    "1": "volgende week ma",
    "-1": "afgelopen ma"
}, _6atv93 = {
    "0": "deze di",
    "1": "volgende week di",
    "-1": "afgelopen di"
}, _6atv94 = {
    "0": "deze wo",
    "1": "volgende week wo",
    "-1": "afgelopen wo"
}, _6atv95 = {
    "0": "deze do",
    "1": "volgende week do",
    "-1": "afgelopen do"
}, _6atv96 = {
    "0": "deze vr",
    "1": "volgende week vr",
    "-1": "afgelopen vr"
}, _6atv97 = {
    "0": "deze za",
    "1": "volgende week za",
    "-1": "afgelopen za"
}, _6atv98 = {
    wide: [ "Saʻna Hizjria" ],
    abbreviated: [ "Saʻna Hizjria" ]
}, _6atv99 = {
    "0": "deze maand",
    "1": "volgende maand",
    "-1": "vorige maand"
}, _6atv100 = {
    one: "{0} seconde geleden",
    other: "{0} seconden geleden"
}, _6atv101 = [ "1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal" ], _6atv102 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _6atv103 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _6atv104 = {
    one: "{0} kwartaal geleden",
    other: "{0} kwartalen geleden"
}, _6atv105 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _6atv106 = {
    "0": "deze zon.",
    "1": "volgende week zon.",
    "-1": "afgelopen zon."
}, _6atv107 = {
    "0": "dit kwartaal",
    "1": "volgend kwartaal",
    "-1": "vorig kwartaal"
}, _6atv108 = {
    d: "d–d MMM y G",
    M: "d MMM – d MMM y G",
    y: "d MMM y – d MMM y G"
}, _6atv109 = {
    "0": "deze maan.",
    "1": "volgende week maan.",
    "-1": "afgelopen maan."
}, _6atv110 = {
    "0": "deze dins.",
    "1": "volgende week dins.",
    "-1": "afgelopen dins."
}, _6atv111 = {
    "0": "deze vrij.",
    "1": "volgende week vrij.",
    "-1": "afgelopen vrij."
}, _6atv112 = {
    symbols: P.numbers.ahom.symbols,
    digits: "renderSpelloutCardinal"
}, _6atv113 = {
    relative: _6atv91
}, _6atv114 = {
    relative: _6atv92
}, _6atv115 = {
    relative: _6atv93
}, _6atv116 = {
    relative: _6atv94
}, _6atv117 = {
    relative: _6atv95
}, _6atv118 = {
    relative: _6atv96
}, _6atv119 = {
    relative: _6atv97
}, _6atv120 = {
    "0": "deze zondag",
    "1": "volgende week zondag",
    "-1": "afgelopen zondag"
}, _6atv121 = {
    "0": "deze woens.",
    "1": "volgende week woens.",
    "-1": "afgelopen woens."
}, _6atv122 = {
    "0": "deze zater.",
    "1": "volgende week zater.",
    "-1": "afgelopen zater."
}, _6atv123 = {
    id: "MV",
    displayName: "Malediven",
    regionId: "034",
    hasTimeZones: true
}, _6atv124 = {
    d: "d/MM/y – d/MM/y G",
    M: "d/MM/y – d/MM/y G",
    y: "d/MM/y – d/MM/y G"
}, _6atv125 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _6atv126 = {
    "0": "deze maandag",
    "1": "volgende week maandag",
    "-1": "afgelopen maandag"
}, _6atv127 = {
    "0": "deze dinsdag",
    "1": "volgende week dinsdag",
    "-1": "afgelopen dinsdag"
}, _6atv128 = {
    "0": "deze donder.",
    "1": "volgende week donder.",
    "-1": "afgelopen donder."
}, _6atv129 = {
    "0": "deze vrijdag",
    "1": "volgende week vrijdag",
    "-1": "afgelopen vrijdag"
}, _6atv130 = {
    relative: _6atv106
}, _6atv131 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _6atv132 = {
    "0": "deze woensdag",
    "1": "volgende week woensdag",
    "-1": "afgelopen woensdag"
}, _6atv133 = {
    "0": "deze zaterdag",
    "1": "volgende week zaterdag",
    "-1": "afgelopen zaterdag"
}, _6atv134 = {
    id: "SB",
    displayName: "Salomoneilanden",
    regionId: "054",
    hasTimeZones: true
}, _6atv135 = {
    symbols: P.numbers.ahom.symbols,
    digits: "renderSpelloutCardinalFinancial"
}, _6atv136 = [ "zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag" ], _6atv137 = {
    "0": "vandaag",
    "1": "morgen",
    "2": "overmorgen",
    "-2": "eergisteren",
    "-1": "gisteren"
}, _6atv138 = {
    relative: _6atv109
}, _6atv139 = {
    relative: _6atv110
}, _6atv140 = {
    relative: _6atv111
}, _6atv141 = {
    "0": "deze donderdag",
    "1": "volgende week donderdag",
    "-1": "afgelopen donderdag"
}, _6atv142 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _6atv143 = {
    d: "E d – E d MMM y G",
    M: "E d MMM – E d MMM y G",
    y: "E d MMM y – E d MMM y G"
}, _6atv144 = {
    relative: _6atv120
}, _6atv145 = {
    relative: _6atv121
}, _6atv146 = {
    relative: _6atv122
}, _6atv147 = {
    d: "E d/MM/y – E d/MM/y G",
    M: "E d/MM/y – E d/MM/y G",
    y: "E d/MM/y – E d/MM/y G"
}, _6atv148 = {
    relative: _6atv126
}, _6atv149 = {
    relative: _6atv127
}, _6atv150 = {
    relative: _6atv128
}, _6atv151 = {
    relative: _6atv129
}, _6atv152 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _6atv153 = {
    id: "013",
    displayName: "Centraal-Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _6atv154 = {
    relative: _6atv132
}, _6atv155 = {
    relative: _6atv133
}, _6atv156 = [ "jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec." ], _6atv157 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _6atv158 = {
    relative: _6atv141
}, _6atv159 = [ undefined, "Rat", "Os", "Tijger", "Konijn", "Draak", "Slang", "Paard", "Geit", "Aap", "Haan", "Hond" ], _6atv160 = [ "mnd 1", "mnd 2", "mnd 3", "mnd 4", "mnd 5", "mnd 6", "mnd 7", "mnd 8", "mnd 9", "mnd 10", "mnd 11", "mnd 12" ], _6atv161 = {
    future: _6atv63,
    past: _6atv71
}, _6atv162 = {
    future: _6atv64,
    past: _6atv72
}, _6atv163 = {
    future: _6atv65,
    past: _6atv76
}, _6atv164 = {
    future: _6atv66,
    past: _6atv77
}, _6atv165 = {
    future: _6atv67,
    past: _6atv78
}, _6atv166 = {
    future: _6atv68,
    past: _6atv79
}, _6atv167 = {
    future: _6atv69,
    past: _6atv82
}, _6atv168 = [ "Moeh.", "Saf.", "Rab. I", "Rab. II", "Joem. I", "Joem. II", "Raj.", "Sja.", "Ram.", "Sjaw.", "Doe al k.", "Doe al h." ], _6atv169 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _6atv170 = [ "Tisjrie", "Chesjwan", "Kislev", "Tevet", "Sjevat", "Adar A", "Adar", "Nisan", "Ijar", "Sivan", "Tammoez", "Av", "Elloel" ], _6atv171 = [ "januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december" ], _6atv172 = {
    midnight: "middernacht",
    am: "a.m.",
    pm: "p.m.",
    morning1: "ochtend",
    afternoon1: "middag",
    evening1: "avond",
    night1: "nacht"
}, _6atv173 = {
    future: _6atv70,
    past: _6atv89
}, _6atv174 = [ "Tut", "Babah", "Hatur", "Kiyahk", "Tubah", "Amshir", "Baramhat", "Baramundah", "Bashans", "Ba’unah", "Abib", "Misra", "Nasi" ], _6atv175 = {
    future: _6atv73,
    past: _6atv90
}, _6atv176 = [ "Mäskäräm", "Teqemt", "Hedar", "Tahsas", "T’er", "Yäkatit", "Mägabit", "Miyazya", "Genbot", "Säne", "Hamle", "Nähase", "Pagumän" ], _6atv177 = {
    future: _6atv83,
    past: _6atv100
}, _6atv178 = {
    abbreviated: _6atv2,
    narrow: [ "1", "2", "3", "4" ],
    wide: _6atv101
}, _6atv179 = [ "maand 1", "maand 2", "maand 3", "maand 4", "maand 5", "maand 6", "maand 7", "maand 8", "maand 9", "maand 10", "maand 11", "maand 12" ], _6atv180 = {
    future: _6atv85,
    past: _6atv104
}, _6atv181 = {
    displayName: "u",
    relativeTime: _6atv162
}, _6atv182 = {
    displayName: "Uur",
    relativeTime: _6atv162
}, _6atv183 = {
    displayName: "uur",
    relativeTime: _6atv162
}, _6atv184 = [ "Chaitra", "Vaishakha", "Jyeshtha", "Aashaadha", "Shraavana", "Bhaadrapada", "Ashvina", "Kaartika", "Agrahayana", "Pausha", "Maagha", "Phaalguna" ], _6atv185 = {
    displayName: "m",
    relativeTime: _6atv165
}, _6atv186 = {
    displayName: "min.",
    relativeTime: _6atv165
}, _6atv187 = {
    displayName: "minuut",
    relativeTime: _6atv175
}, _6atv188 = {
    displayName: "s",
    relative: [ "nu" ],
    relativeTime: _6atv166
}, _6atv189 = {
    displayName: "sec.",
    relative: [ "nu" ],
    relativeTime: _6atv166
}, _6atv190 = [ "Moeharram", "Safar", "Rabiʻa al awal", "Rabiʻa al thani", "Joemadʻal awal", "Joemadʻal thani", "Rajab", "Sjaʻaban", "Ramadan", "Sjawal", "Doe al kaʻaba", "Doe al hizja" ], _6atv191 = {
    decimal: ",",
    group: ".",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _6atv192 = {
    displayName: "seconde",
    relative: [ "nu" ],
    relativeTime: _6atv177
}, _6atv193 = {
    format: _6atv131,
    numeric: _6atv3,
    standAlone: _6atv131
}, _6atv194 = {
    displayName: "jr.",
    relative: _6atv75,
    relativeTime: _6atv163
}, _6atv195 = {
    displayName: "jaar",
    relative: _6atv75,
    relativeTime: _6atv163
}, _6atv196 = {
    displayName: "wk",
    relative: _6atv86,
    relativeTime: _6atv167
}, _6atv197 = {
    displayName: "week",
    relative: _6atv86,
    relativeTime: _6atv167
}, _6atv198 = {
    abbreviated: _6atv34,
    narrow: _6atv15,
    wide: _6atv136,
    "short": _6atv34
}, _6atv199 = {
    displayName: "mnd",
    relative: _6atv99,
    relativeTime: _6atv173
}, _6atv200 = {
    displayName: "maand",
    relative: _6atv99,
    relativeTime: _6atv173
}, _6atv201 = {
    displayName: "dag",
    relative: _6atv137,
    relativeTime: _6atv161
}, _6atv202 = {
    displayName: "dag",
    relative: _6atv137,
    relativeTime: _6atv164
}, _6atv203 = {
    displayName: "kwartaal",
    relative: _6atv107,
    relativeTime: _6atv180
}, _6atv204 = {
    abbreviated: _6atv142,
    narrow: _6atv142,
    wide: _6atv142
}, _6atv205 = {
    format: _6atv204
}, _6atv206 = {
    format: _6atv178,
    standAlone: _6atv178
}, _6atv207 = {
    abbreviated: _6atv156,
    narrow: _6atv74,
    wide: _6atv171
}, _6atv208 = {
    abbreviated: _6atv169,
    narrow: _6atv87,
    wide: _6atv169
}, _6atv209 = {
    abbreviated: _6atv159,
    narrow: _6atv159,
    wide: _6atv159
}, _6atv210 = {
    abbreviated: _6atv160,
    narrow: _6atv87,
    wide: _6atv179
}, _6atv211 = {
    abbreviated: _6atv170,
    narrow: _6atv103,
    wide: _6atv170
}, _6atv212 = {
    format: _6atv209
}, _6atv213 = {
    abbreviated: _6atv174,
    narrow: _6atv103,
    wide: _6atv174
}, _6atv214 = {
    fullDate: "EEEE d MMMM U",
    longDate: "d MMMM U",
    mediumDate: "d MMM U",
    shortDate: "dd-MM-yy",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd-MM-yy HH:mm",
    mediumDateTime: "d MMM U HH:mm:ss",
    longDateTime: "d MMMM U HH:mm:ss z",
    fullDateTime: "EEEE d MMMM U HH:mm:ss zzzz"
}, _6atv215 = {
    abbreviated: _6atv176,
    narrow: _6atv103,
    wide: _6atv176
}, _6atv216 = {
    shortDate: "d/MM/yy GGGGG",
    fullDate: "EEEE d MMMM y G",
    longDate: "d MMMM y G",
    mediumDate: "d MMM y G",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "d/MM/yy GGGGG HH:mm",
    mediumDateTime: "d MMM y G HH:mm:ss",
    longDateTime: "d MMMM y G HH:mm:ss z",
    fullDateTime: "EEEE d MMMM y G HH:mm:ss zzzz"
}, _6atv217 = {
    abbreviated: _6atv168,
    narrow: _6atv87,
    wide: _6atv190
}, _6atv218 = {
    abbreviated: _6atv184,
    narrow: _6atv87,
    wide: _6atv184
}, _6atv219 = {
    abbreviated: _6atv172,
    narrow: _6atv172,
    wide: _6atv172
}, _6atv220 = {
    format: _6atv198,
    standAlone: _6atv198
}, _6atv221 = {
    "1000": _6atv1,
    "10000": _6atv4,
    "100000": _6atv8,
    "1000000": _6atv20,
    "10000000": _6atv31,
    "100000000": _6atv39,
    "1000000000": _6atv21,
    "10000000000": _6atv32,
    "100000000000": _6atv40,
    "1000000000000": _6atv22,
    "10000000000000": _6atv33,
    "100000000000000": _6atv41
}, _6atv222 = {
    d: "d",
    E: "ccc",
    Ed: "E d",
    Gy: "U",
    GyMMM: "MMM U",
    GyMMMd: "d MMM U",
    GyMMMEd: "E d MMM U",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "d-M",
    MEd: "E d-M",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E d MMM",
    MMMMd: "d MMMM",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "U",
    yMd: "y-MM-dd",
    yyyy: "U",
    yyyyM: "M-y",
    yyyyMd: "d-M-y",
    yyyyMEd: "E d-M-y",
    yyyyMMM: "MMM U",
    yyyyMMMd: "d MMM U",
    yyyyMMMEd: "E d MMM U",
    yyyyMMMM: "MMMM U",
    yyyyQQQ: "QQQ U",
    yyyyQQQQ: "QQQQ U"
}, _6atv223 = {
    "1000": _6atv9,
    "10000": _6atv12,
    "100000": _6atv13,
    "1000000": _6atv42,
    "10000000": _6atv54,
    "100000000": _6atv57,
    "1000000000": _6atv43,
    "10000000000": _6atv55,
    "100000000000": _6atv58,
    "1000000000000": _6atv44,
    "10000000000000": _6atv56,
    "100000000000000": _6atv59
}, _6atv224 = {
    "1000": _6atv27,
    "10000": _6atv35,
    "100000": _6atv50,
    "1000000": _6atv28,
    "10000000": _6atv36,
    "100000000": _6atv51,
    "1000000000": _6atv29,
    "10000000000": _6atv37,
    "100000000000": _6atv52,
    "1000000000000": _6atv30,
    "10000000000000": _6atv38,
    "100000000000000": _6atv53
}, _6atv225 = {
    d: "d",
    Ed: "E d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E d MMM y G",
    M: "L",
    Md: "d-M",
    MEd: "E d-M",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E d MMM",
    MMMMd: "d MMMM",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M-y GGGGG",
    yyyyMd: "d-M-y GGGGG",
    yyyyMEd: "E d-M-y GGGGG",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E d MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    E: "ccc",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    ms: "mm:ss",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _6atv226 = {
    d: "d",
    E: "ccc",
    Ed: "E d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E d MMM y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "d-M",
    MEd: "E d-M",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E d MMM",
    MMMMd: "d MMMM",
    ms: "mm:ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M-y GGGGG",
    yyyyMd: "d-M-y GGGGG",
    yyyyMEd: "E d-M-y GGGGG",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E d MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _6atv227 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _6atv228 = {
    format: _6atv207,
    standAlone: _6atv207
}, _6atv229 = {
    basic: P.calendars.buddhist.dateFormats.basic,
    cldr: _6atv225
}, _6atv230 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _6atv231 = {
    format: _6atv210,
    standAlone: _6atv210
}, _6atv232 = {
    format: _6atv217,
    standAlone: _6atv217
}, _6atv233 = {
    format: _6atv219,
    standAlone: _6atv219
}, _6atv234 = {
    basic: _6atv214,
    cldr: _6atv222
}, _6atv235 = {
    basic: _6atv216,
    cldr: _6atv226
}, _6atv236 = {
    d: {
        d: "d–d"
    },
    h: _6atv10,
    H: {
        H: "HH–HH"
    },
    hm: _6atv88,
    Hm: _6atv24,
    hmv: _6atv105,
    Hmv: _6atv46,
    hv: _6atv14,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _6atv48,
    MEd: _6atv80,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _6atv18,
    MMMEd: _6atv81,
    y: {
        y: "U–U"
    },
    yM: _6atv25,
    yMd: _6atv125,
    yMEd: _6atv157,
    yMMM: _6atv26,
    yMMMd: _6atv102,
    yMMMEd: _6atv152,
    yMMMM: _6atv49
}, _6atv237 = {
    Md: _6atv23,
    MEd: _6atv60,
    yM: _6atv45,
    yMd: _6atv124,
    yMEd: _6atv147,
    d: {
        d: "d–d"
    },
    h: _6atv10,
    H: {
        H: "HH–HH"
    },
    hm: _6atv88,
    Hm: _6atv24,
    hmv: _6atv105,
    Hmv: _6atv46,
    hv: _6atv14,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _6atv16,
    MMMEd: _6atv61,
    MMMM: {
        M: "MMMM–MMMM"
    },
    y: {
        y: "y–y G"
    },
    yMMM: _6atv47,
    yMMMd: _6atv108,
    yMMMEd: _6atv143,
    yMMMM: _6atv62
}, _6atv238 = {
    "long": _6atv224,
    "short": _6atv221,
    "default": "#,##0.###"
}, _6atv239 = {
    beforeCurrency: _6atv227,
    afterCurrency: _6atv227
}, _6atv240 = {
    "short": _6atv223,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _6atv239
}, _6atv241 = {
    abbreviated: _6atv230,
    narrow: _6atv230,
    wide: _6atv230
}, _6atv242 = {
    format: _6atv241
}, _6atv243 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _6atv238,
    currency: _6atv240,
    percent: {
        "default": "#,##0%"
    }
}, _6atv244 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kaho (1094–1096)", "Eichō (1096–1097)", "Shōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen-ei (1118-1120)", "Hoan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hoen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hogen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken-ei (1206-1207)", "Shōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Shōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tempuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En-ō (1239-1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun-ō (1260-1261)", "Kōchō (1261–1264)", "Bun-ei (1264-1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkei (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkyō (1321–1324)", "Shōchū (1324–1326)", "Kareki (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kemmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun-an (1444-1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenmon (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genwa (1615–1624)", "Kan-ei (1624-1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Shōō (1652–1655)", "Meiryaku (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenwa (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan-en (1748-1751)", "Hōryaku (1751–1764)", "Meiwa (1764–1772)", "An-ei (1772-1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man-en (1860-1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _6atv245 = {
    dayParts: _6atv205,
    days: _6atv242,
    months: _6atv242,
    years: _6atv242,
    zodiacs: _6atv212
}, _6atv246 = {
    era: _6atv5,
    year: _6atv195,
    "year-short": _6atv194,
    "year-narrow": _6atv194,
    quarter: _6atv203,
    "quarter-short": _6atv203,
    "quarter-narrow": _6atv203,
    month: _6atv200,
    "month-short": _6atv199,
    "month-narrow": _6atv199,
    week: _6atv197,
    "week-short": _6atv196,
    "week-narrow": _6atv196,
    day: _6atv202,
    "day-short": _6atv201,
    "day-narrow": _6atv201,
    weekday: _6atv17,
    dayperiod: _6atv11,
    hour: _6atv182,
    "hour-short": _6atv183,
    "hour-narrow": _6atv181,
    minute: _6atv187,
    "minute-short": _6atv186,
    "minute-narrow": _6atv185,
    second: _6atv192,
    "second-short": _6atv189,
    "second-narrow": _6atv188,
    zone: _6atv6,
    sun: _6atv144,
    "sun-short": _6atv130,
    "sun-narrow": _6atv113,
    mon: _6atv148,
    "mon-short": _6atv138,
    "mon-narrow": _6atv114,
    tue: _6atv149,
    "tue-short": _6atv139,
    "tue-narrow": _6atv115,
    wed: _6atv154,
    "wed-short": _6atv145,
    "wed-narrow": _6atv116,
    thu: _6atv158,
    "thu-short": _6atv150,
    "thu-narrow": _6atv117,
    fri: _6atv151,
    "fri-short": _6atv140,
    "fri-narrow": _6atv118,
    sat: _6atv155,
    "sat-short": _6atv146,
    "sat-narrow": _6atv119
}, _6atv247 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _6atv246
}, _6atv248 = {
    dateFormats: _6atv229,
    datePartsOrder: "dmy",
    dateIntervalFormats: _6atv237,
    dateIntervalFallbackFormat: "{0} - {1}",
    dayNames: _6atv220,
    dayPeriods: _6atv233,
    monthNames: _6atv232,
    eraNames: _6atv98,
    quarterNames: _6atv206,
    fields: _6atv246
}, _6atv249 = {
    dateFormats: _6atv234,
    datePartsOrder: "dmy",
    dateIntervalFormats: _6atv236,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _6atv220,
    dayPeriods: _6atv233,
    cyclicNames: _6atv245,
    monthNames: _6atv231,
    monthPatterns: _6atv193,
    quarterNames: _6atv206,
    fields: _6atv246
};

inter.id = "nl_be";

inter.numbers = {
    ahom: P.numbers.ahom,
    arab: {
        symbols: {
            timeSeparator: ":",
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‏+",
            minusSign: "‏-",
            exponential: "اس",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN"
        },
        formats: _6atv243,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _6atv243,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderEthiopic"
    },
    finance: _6atv19,
    fullwide: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _6atv112,
    hansfin: _6atv135,
    hant: _6atv112,
    hantfin: _6atv135,
    hebr: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _6atv112,
    jpanfin: _6atv135,
    kali: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _6atv19,
    nkoo: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _6atv19,
    vaii: {
        symbols: _6atv191,
        formats: _6atv243,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6atv237,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _6atv220,
        dayPeriods: _6atv233,
        monthNames: _6atv228,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _6atv206,
        fields: _6atv246
    },
    chinese: _6atv249,
    coptic: {
        dateFormats: {
            basic: _6atv216,
            cldr: {
                E: "ccc",
                d: "d",
                Ed: "E d",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E d MMM y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                M: "L",
                Md: "d-M",
                MEd: "E d-M",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E d MMM",
                MMMMd: "d MMMM",
                ms: "mm:ss",
                y: "y G",
                yyyy: "y G",
                yyyyM: "M-y GGGGG",
                yyyyMd: "d-M-y GGGGG",
                yyyyMEd: "E d-M-y GGGGG",
                yyyyMMM: "MMM y G",
                yyyyMMMd: "d MMM y G",
                yyyyMMMEd: "E d MMM y G",
                yyyyMMMM: "MMMM y G",
                yyyyQQQ: "QQQ y G",
                yyyyQQQQ: "QQQQ y G",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: _6atv237,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _6atv220,
        dayPeriods: _6atv233,
        monthNames: {
            format: _6atv213,
            standAlone: _6atv213
        },
        eraNames: _6atv84,
        quarterNames: _6atv206,
        fields: _6atv246
    },
    dangi: _6atv249,
    ethioaa: _6atv247,
    ethiopic: {
        dateFormats: _6atv229,
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            M: {
                M: "M–M"
            },
            Md: {
                d: "dd-MM – dd-MM",
                M: "dd-MM – dd-MM"
            },
            MEd: {
                d: "E dd-MM – E dd-MM",
                M: "E dd-MM – E dd-MM"
            },
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _6atv16,
            MMMEd: _6atv61,
            MMMM: {
                M: "MMMM–MMMM"
            },
            y: {
                y: "y–y G"
            },
            yM: {
                M: "MM-y – MM-y G",
                y: "MM-y – MM-y G"
            },
            yMd: {
                d: "dd-MM-y – dd-MM-y G",
                M: "dd-MM-y – dd-MM-y G",
                y: "dd-MM-y – dd-MM-y G"
            },
            yMEd: {
                d: "E dd-MM-y – E dd-MM-y G",
                M: "E dd-MM-y – E dd-MM-y G",
                y: "E dd-MM-y – E dd-MM-y G"
            },
            yMMM: _6atv47,
            yMMMd: _6atv108,
            yMMMEd: _6atv143,
            yMMMM: _6atv62,
            h: _6atv10,
            H: {
                H: "HH–HH"
            },
            hm: _6atv88,
            Hm: _6atv24,
            hmv: _6atv105,
            Hmv: _6atv46,
            hv: _6atv14,
            Hv: {
                H: "HH–HH v"
            }
        },
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _6atv220,
        dayPeriods: _6atv233,
        monthNames: {
            format: _6atv215,
            standAlone: _6atv215
        },
        eraNames: _6atv84,
        quarterNames: _6atv206,
        fields: _6atv246
    },
    gregorian: {
        dateFormats: {
            basic: {
                shortDate: "d/MM/yy",
                fullDate: "EEEE d MMMM y",
                longDate: "d MMMM y",
                mediumDate: "d MMM y",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "d/MM/yy HH:mm",
                mediumDateTime: "d MMM y HH:mm:ss",
                longDateTime: "d MMMM y HH:mm:ss z",
                fullDateTime: "EEEE d MMMM y HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E d",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E d MMM y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "d-M",
                MEd: "E d-M",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E d MMM",
                MMMMd: "d MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "M-y",
                yMd: "d-M-y",
                yMEd: "E d-M-y",
                yMMM: "MMM y",
                yMMMd: "d MMM y",
                yMMMEd: "E d MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            Md: _6atv23,
            MEd: _6atv60,
            yM: {
                M: "MM/y – MM/y",
                y: "MM/y – MM/y"
            },
            yMd: {
                d: "d/MM/y – d/MM/y",
                M: "d/MM/y – d/MM/y",
                y: "d/MM/y – d/MM/y"
            },
            yMEd: {
                d: "E d/MM/y – E d/MM/y",
                M: "E d/MM/y – E d/MM/y",
                y: "E d/MM/y – E d/MM/y"
            },
            d: {
                d: "d–d"
            },
            h: _6atv10,
            H: {
                H: "HH–HH"
            },
            hm: _6atv88,
            Hm: _6atv24,
            hmv: _6atv105,
            Hmv: _6atv46,
            hv: _6atv14,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _6atv16,
            MMMEd: _6atv61,
            MMMM: {
                M: "MMMM–MMMM"
            },
            y: {
                y: "y–y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "d–d MMM y",
                M: "d MMM – d MMM y",
                y: "d MMM y – d MMM y"
            },
            yMMMEd: {
                d: "E d – E d MMM y",
                M: "E d MMM – E d MMM y",
                y: "E d MMM y – E d MMM y"
            },
            yMMMM: {
                M: "MMMM–MMMM y",
                y: "MMMM y – MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _6atv220,
        dayPeriods: _6atv233,
        monthNames: _6atv228,
        eraNames: {
            wide: [ "voor Christus", "na Christus" ],
            abbreviated: [ "v.Chr.", "n.Chr." ]
        },
        quarterNames: _6atv206,
        fields: _6atv246
    },
    hebrew: {
        dateFormats: {
            basic: P.calendars.buddhist.dateFormats.basic,
            cldr: _6atv226
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: _6atv237,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _6atv220,
        dayPeriods: _6atv233,
        monthNames: {
            format: _6atv211,
            standAlone: _6atv211
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _6atv206,
        fields: _6atv246
    },
    indian: {
        dateFormats: _6atv235,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6atv237,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _6atv220,
        dayPeriods: _6atv233,
        monthNames: {
            format: _6atv218,
            standAlone: _6atv218
        },
        eraNames: {
            wide: [ "SAKA" ],
            abbreviated: [ "SAKA" ]
        },
        quarterNames: _6atv206,
        fields: _6atv246
    },
    islamic: _6atv248,
    "islamic-umalqura": _6atv248,
    "islamic-tbla": _6atv248,
    "islamic-civil": _6atv248,
    "islamic-rgsa": _6atv248,
    iso8601: _6atv247,
    japanese: {
        dateFormats: _6atv229,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6atv237,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _6atv220,
        dayPeriods: _6atv233,
        monthNames: _6atv228,
        eraNames: {
            wide: _6atv244,
            abbreviated: _6atv244
        },
        quarterNames: _6atv206,
        fields: _6atv246
    },
    persian: {
        dateFormats: _6atv235,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6atv237,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _6atv220,
        dayPeriods: _6atv233,
        monthNames: {
            format: _6atv208,
            standAlone: _6atv208
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _6atv206,
        fields: _6atv246
    },
    roc: {
        dateFormats: _6atv229,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6atv237,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _6atv220,
        dayPeriods: _6atv233,
        monthNames: _6atv228,
        eraNames: {
            wide: _6atv7,
            abbreviated: _6atv7
        },
        quarterNames: _6atv206,
        fields: _6atv246
    },
    islamicc: _6atv247
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length;
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 1 && v === 0) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + "e";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinal(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "min " + this.renderSpelloutCardinal(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinal(Math.floor(n)) + " komma " + this.renderSpelloutCardinal(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return this.renderSpelloutCardinal(Math.floor(n / 1e15)) + " biljard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinal(n % 1e15));
    if (n >= 1e12) return this.renderSpelloutCardinal(Math.floor(n / 1e12)) + " biljoen" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinal(n % 1e12));
    if (n >= 1e9) return this.renderSpelloutCardinal(Math.floor(n / 1e9)) + " miljard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinal(n % 1e9));
    if (n >= 1e6) return this.renderSpelloutCardinal(Math.floor(n / 1e6)) + " miljoen" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinal(n % 1e6));
    if (n >= 1e5) return this.renderSpelloutCardinal(Math.floor(n / 1e5)) + "­duizend" + (n === 1e5 ? "" : "­" + this.renderSpelloutCardinal(n % 1e5));
    if (n >= 2e3) return this.renderSpelloutCardinal(Math.floor(n / 1e3)) + "­duizend" + (n === 2e3 ? "" : "­" + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 1e3) return "duizend" + (n === 1e3 ? "" : "­" + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinal(Math.floor(n / 100)) + "­honderd" + (n === 200 ? "" : "­" + this.renderSpelloutCardinal(n % 100));
    if (n >= 100) return "honderd" + (n === 100 ? "" : this.renderSpelloutCardinal(n % 100));
    if (n >= 90) return (n === 90 ? "" : this.renderNumberEn(n % 10)) + "negentig";
    if (n >= 80) return (n === 80 ? "" : this.renderNumberEn(n % 10)) + "tachtig";
    if (n >= 70) return (n === 70 ? "" : this.renderNumberEn(n % 10)) + "zeventig";
    if (n >= 60) return (n === 60 ? "" : this.renderNumberEn(n % 10)) + "zestig";
    if (n >= 50) return (n === 50 ? "" : this.renderNumberEn(n % 10)) + "vijftig";
    if (n >= 40) return (n === 40 ? "" : this.renderNumberEn(n % 10)) + "veertig";
    if (n >= 30) return (n === 30 ? "" : this.renderNumberEn(n % 10)) + "dertig";
    if (n >= 20) return (n === 20 ? "" : this.renderNumberEn(n % 10)) + "twintig";
    if (n >= 19) return "negentien";
    if (n >= 18) return "achttien";
    if (n >= 17) return "zeventien";
    if (n >= 16) return "zestien";
    if (n >= 15) return "vijftien";
    if (n >= 14) return "veertien";
    if (n >= 13) return "dertien";
    if (n >= 12) return "twaalf";
    if (n >= 11) return "elf";
    if (n >= 10) return "tien";
    if (n >= 9) return "negen";
    if (n >= 8) return "acht";
    if (n >= 7) return "zeven";
    if (n >= 6) return "zes";
    if (n >= 5) return "vijf";
    if (n >= 4) return "vier";
    if (n >= 3) return "drie";
    if (n >= 2) return "twee";
    if (n >= 1) return "een";
    if (n >= 0) return "nul";
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderNumberEn = function(n) {
    if (n >= 4) return this.renderSpelloutCardinal(n) + "­en­";
    if (n >= 3) return "drie­ën­";
    if (n >= 2) return "twee­ën­";
    if (n >= 1) return "een­en­";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.territories = [].concat(P.territories.slice(0, 48), _6atv153, P.territories.slice(48, 146), _6atv123, P.territories.slice(147, 160), P.territories.slice(161, 218), _6atv134, P.territories.slice(219, 285));

inter.regions = [].concat(P.territories[1], P.territories[4], P.territories[16], P.territories[19], P.territories.slice(45, 47), _6atv153, P.territories[48], P.territories[77], P.territories[156], P.territories[159], P.territories.slice(178, 180), P.territories[181], P.territories[185], P.territories.slice(190, 193), P.territories[204], P.territories.slice(265, 268), P.territories.slice(272, 275), P.territories.slice(278, 280), P.territories[283]);

inter.countries = [].concat(P.territories[0], P.territories.slice(2, 4), P.territories.slice(5, 16), P.territories.slice(17, 19), P.territories.slice(20, 45), P.territories[47], P.territories.slice(49, 77), P.territories.slice(78, 146), _6atv123, P.territories.slice(147, 156), P.territories.slice(157, 159), P.territories.slice(161, 178), P.territories[180], P.territories.slice(182, 185), P.territories.slice(186, 190), P.territories.slice(193, 204), P.territories.slice(205, 218), _6atv134, P.territories.slice(219, 265), P.territories.slice(268, 272), P.territories.slice(275, 278), P.territories.slice(280, 282), P.territories[284]);

module.exports = inter;