function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./es.js"), inter = defaults({
    renderers: {}
}, P);

var _aqij1 = [ "T1", "T2", "T3", "T4" ], _aqij2 = {
    all: {
        leap: "{0}bis"
    }
}, _aqij3 = {
    a: "h a – h a",
    h: "h–h a"
}, _aqij4 = {
    d: "d/M–d/M",
    M: "d/M–d/M"
}, _aqij5 = {
    displayName: "a. m./p. m."
}, _aqij6 = {
    displayName: "zona horaria"
}, _aqij7 = [ "antes de R.O.C.", "R.O.C." ], _aqij8 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _aqij9 = {
    M: "M/y–M/y G",
    y: "M/y–M/y G"
}, _aqij10 = [ "D", "L", "M", "X", "J", "V", "S" ], _aqij11 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _aqij12 = {
    displayName: "día de la semana"
}, _aqij13 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _aqij14 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _aqij15 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _aqij16 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _aqij17 = [ "DO", "LU", "MA", "MI", "JU", "VI", "SA" ], _aqij18 = {
    H: "HH:mm – HH:mm",
    m: "HH:mm – HH:mm"
}, _aqij19 = {
    one: "hace {0} a",
    other: "hace {0} a"
}, _aqij20 = {
    one: "hace {0} m",
    other: "hace {0} m"
}, _aqij21 = {
    one: "hace {0} h",
    other: "hace {0} h"
}, _aqij22 = {
    one: "hace {0} s",
    other: "hace {0} s"
}, _aqij23 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _aqij24 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _aqij25 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _aqij26 = {
    H: "HH:mm – HH:mm v",
    m: "HH:mm – HH:mm v"
}, _aqij27 = {
    d: "E, d/M – E, d/M",
    M: "E, d/M – E, d/M"
}, _aqij28 = {
    one: "hace {0} min",
    other: "hace {0} min"
}, _aqij29 = {
    one: "hace {0} año",
    other: "hace {0} años"
}, _aqij30 = {
    one: "hace {0} día",
    other: "hace {0} días"
}, _aqij31 = {
    one: "hace {0} mes",
    other: "hace {0} meses"
}, _aqij32 = {
    one: "hace {0} sem.",
    other: "hace {0} sem."
}, _aqij33 = {
    one: "hace {0} hora",
    other: "hace {0} horas"
}, _aqij34 = {
    one: "hace {0} trim.",
    other: "hace {0} trim."
}, _aqij35 = {
    d: "d–d 'de' MMM",
    M: "d 'de' MMM – d 'de' MMM"
}, _aqij36 = {
    one: "dentro de {0} a",
    other: "dentro de {0} a"
}, _aqij37 = {
    one: "dentro de {0} m",
    other: "dentro de {0} m"
}, _aqij38 = {
    one: "dentro de {0} h",
    other: "dentro de {0} h"
}, _aqij39 = {
    one: "dentro de {0} s",
    other: "dentro de {0} s"
}, _aqij40 = {
    one: "hace {0} semana",
    other: "hace {0} semanas"
}, _aqij41 = {
    one: "hace {0} minuto",
    other: "hace {0} minutos"
}, _aqij42 = [ "E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _aqij43 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _aqij44 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _aqij45 = [ "dom.", "lun.", "mar.", "mié.", "jue.", "vie.", "sáb." ], _aqij46 = {
    one: "hace {0} segundo",
    other: "hace {0} segundos"
}, _aqij47 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _aqij48 = {
    one: "dentro de {0} min",
    other: "dentro de {0} min"
}, _aqij49 = {
    "0": "este DO",
    "1": "el próximo DO",
    "-1": "el DO pasado"
}, _aqij50 = {
    "0": "este LU",
    "1": "el próximo LU",
    "-1": "el LU pasado"
}, _aqij51 = {
    "0": "este MA",
    "1": "el próximo MA",
    "-1": "el MA pasado"
}, _aqij52 = {
    "0": "este MI",
    "1": "el próximo MI",
    "-1": "el MI pasado"
}, _aqij53 = {
    "0": "este JU",
    "1": "el próximo JU",
    "-1": "el JU pasado"
}, _aqij54 = {
    "0": "este VI",
    "1": "el próximo VI",
    "-1": "el VI pasado"
}, _aqij55 = {
    "0": "este SA",
    "1": "el próximo SA",
    "-1": "el SA pasado"
}, _aqij56 = {
    M: "MMM–MMM 'de' y G",
    y: "MMM 'de' y – MMM 'de' y G"
}, _aqij57 = {
    one: "dentro de {0} año",
    other: "dentro de {0} años"
}, _aqij58 = {
    one: "dentro de {0} día",
    other: "dentro de {0} días"
}, _aqij59 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _aqij60 = {
    one: "dentro de {0} mes",
    other: "dentro de {0} meses"
}, _aqij61 = {
    one: "dentro de {0} sem.",
    other: "dentro de {0} sem."
}, _aqij62 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _aqij63 = {
    "0": "este año",
    "1": "el próximo año",
    "-1": "el año pasado"
}, _aqij64 = {
    one: "hace {0} trimestre",
    other: "hace {0} trimestres"
}, _aqij65 = {
    "0": "este mes",
    "1": "el próximo mes",
    "-1": "el mes pasado"
}, _aqij66 = {
    one: "dentro de {0} hora",
    other: "dentro de {0} horas"
}, _aqij67 = {
    d: "d/M/y–d/M/y G",
    M: "d/M/y–d/M/y G",
    y: "d/M/y–d/M/y G"
}, _aqij68 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _aqij69 = {
    one: "dentro de {0} trim.",
    other: "dentro de {0} trim."
}, _aqij70 = {
    M: "MMMM–MMMM 'de' y G",
    y: "MMMM 'de' y – MMMM 'de' y G"
}, _aqij71 = {
    a: "h:mm a – h:mm a",
    h: "h:mm – h:mm a",
    m: "h:mm – h:mm a"
}, _aqij72 = {
    "0": "este dom.",
    "1": "el próximo dom.",
    "-1": "el dom. pasado"
}, _aqij73 = {
    "0": "este lun.",
    "1": "el próximo lun.",
    "-1": "el lun. pasado"
}, _aqij74 = {
    "0": "este mar.",
    "1": "el próximo mar.",
    "-1": "el mar. pasado"
}, _aqij75 = {
    "0": "este mié.",
    "1": "el próximo mié.",
    "-1": "el mié. pasado"
}, _aqij76 = {
    "0": "este jue.",
    "1": "el próximo jue.",
    "-1": "el jue. pasado"
}, _aqij77 = {
    "0": "este vie.",
    "1": "el próximo vie.",
    "-1": "el vie. pasado"
}, _aqij78 = {
    "0": "este sáb.",
    "1": "el próximo sáb.",
    "-1": "el sáb. pasado"
}, _aqij79 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _aqij80 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _aqij81 = {
    one: "dentro de {0} semana",
    other: "dentro de {0} semanas"
}, _aqij82 = {
    one: "dentro de {0} minuto",
    other: "dentro de {0} minutos"
}, _aqij83 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _aqij84 = {
    one: "dentro de {0} segundo",
    other: "dentro de {0} segundos"
}, _aqij85 = {
    "0": "este lunes",
    "1": "el próximo lunes",
    "-1": "el lunes pasado"
}, _aqij86 = {
    relative: _aqij49
}, _aqij87 = {
    relative: _aqij50
}, _aqij88 = {
    relative: _aqij51
}, _aqij89 = {
    relative: _aqij52
}, _aqij90 = {
    relative: _aqij53
}, _aqij91 = {
    relative: _aqij54
}, _aqij92 = {
    relative: _aqij55
}, _aqij93 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm – h:mm a v",
    m: "h:mm – h:mm a v"
}, _aqij94 = {
    "0": "esta semana",
    "1": "la próxima semana",
    "-1": "la semana pasada"
}, _aqij95 = {
    "0": "este martes",
    "1": "el próximo martes",
    "-1": "el martes pasado"
}, _aqij96 = {
    "0": "este jueves",
    "1": "el próximo jueves",
    "-1": "el jueves pasado"
}, _aqij97 = {
    "0": "este sábado",
    "1": "el próximo sábado",
    "-1": "el sábado pasado"
}, _aqij98 = {
    one: "dentro de {0} trimestre",
    other: "dentro de {0} trimestres"
}, _aqij99 = {
    "0": "hoy",
    "1": "mañana",
    "2": "pasado mañana",
    "-2": "anteayer",
    "-1": "ayer"
}, _aqij100 = {
    "0": "este domingo",
    "1": "el próximo domingo",
    "-1": "el domingo pasado"
}, _aqij101 = {
    "0": "este viernes",
    "1": "el próximo viernes",
    "-1": "el viernes pasado"
}, _aqij102 = [ "1.er trimestre", "2.º trimestre", "3.er trimestre", "4.º trimestre" ], _aqij103 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _aqij104 = [ "domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado" ], _aqij105 = {
    relative: _aqij72
}, _aqij106 = {
    relative: _aqij73
}, _aqij107 = {
    relative: _aqij74
}, _aqij108 = {
    relative: _aqij75
}, _aqij109 = {
    relative: _aqij76
}, _aqij110 = {
    relative: _aqij77
}, _aqij111 = {
    relative: _aqij78
}, _aqij112 = {
    d: "E, d 'de' MMM – E, d 'de' MMM",
    M: "E, d 'de' MMM – E, d 'de' MMM"
}, _aqij113 = {
    relative: _aqij85
}, _aqij114 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _aqij115 = {
    "0": "este miércoles",
    "1": "el próximo miércoles",
    "-1": "el miércoles pasado"
}, _aqij116 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _aqij117 = {
    relative: _aqij95
}, _aqij118 = {
    relative: _aqij96
}, _aqij119 = {
    relative: _aqij97
}, _aqij120 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _aqij121 = {
    relative: _aqij100
}, _aqij122 = {
    relative: _aqij101
}, _aqij123 = {
    d: "E, d/M/y – E, d/M/y G",
    M: "E, d/M/y – E, d/M/y G",
    y: "E, d/M/y – E, d/M/y G"
}, _aqij124 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _aqij125 = {
    relative: _aqij115
}, _aqij126 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _aqij127 = [ "ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sept.", "oct.", "nov.", "dic." ], _aqij128 = {
    future: _aqij36,
    past: _aqij19
}, _aqij129 = {
    future: _aqij37,
    past: _aqij20
}, _aqij130 = {
    future: _aqij38,
    past: _aqij21
}, _aqij131 = {
    future: _aqij39,
    past: _aqij22
}, _aqij132 = {
    d: "d–d 'de' MMM 'de' y G",
    M: "d 'de' MMM – d 'de' MMM y G",
    y: "d 'de' MMM 'de' y – d 'de' MMM 'de' y G"
}, _aqij133 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _aqij134 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _aqij135 = {
    future: _aqij48,
    past: _aqij28
}, _aqij136 = {
    future: _aqij57,
    past: _aqij29
}, _aqij137 = {
    future: _aqij58,
    past: _aqij30
}, _aqij138 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _aqij139 = {
    am: "a. m.",
    noon: "mediodía",
    pm: "p. m.",
    morning1: "madrugada",
    morning2: "mañana",
    evening1: "tarde",
    night1: "noche"
}, _aqij140 = {
    future: _aqij60,
    past: _aqij31
}, _aqij141 = {
    future: _aqij61,
    past: _aqij32
}, _aqij142 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _aqij143 = {
    future: _aqij66,
    past: _aqij33
}, _aqij144 = [ "enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre" ], _aqij145 = {
    future: _aqij69,
    past: _aqij34
}, _aqij146 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _aqij147 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _aqij148 = {
    future: _aqij81,
    past: _aqij40
}, _aqij149 = {
    future: _aqij82,
    past: _aqij41
}, _aqij150 = {
    future: _aqij84,
    past: _aqij46
}, _aqij151 = {
    displayName: "h",
    relativeTime: _aqij130
}, _aqij152 = {
    displayName: "s",
    relativeTime: _aqij131
}, _aqij153 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _aqij154 = {
    abbreviated: _aqij1,
    narrow: [ "1", "2", "3", "4" ],
    wide: _aqij102
}, _aqij155 = {
    future: _aqij98,
    past: _aqij64
}, _aqij156 = {
    d: "E, d 'de' MMM – E, d 'de' MMM 'de' y G",
    M: "E, d 'de' MMM – E, d 'de' MMM 'de' y G",
    y: "E, d 'de' MMM 'de' y – E, d 'de' MMM 'de' y G"
}, _aqij157 = {
    am: "a. m.",
    noon: "del mediodía",
    pm: "p. m.",
    morning1: "de la madrugada",
    morning2: "de la mañana",
    evening1: "de la tarde",
    night1: "de la noche"
}, _aqij158 = {
    displayName: "min",
    relativeTime: _aqij135
}, _aqij159 = {
    displayName: "sem.",
    relativeTime: _aqij141
}, _aqij160 = {
    displayName: "hora",
    relativeTime: _aqij143
}, _aqij161 = {
    displayName: "trim.",
    relativeTime: _aqij145
}, _aqij162 = {
    displayName: "minuto",
    relativeTime: _aqij149
}, _aqij163 = {
    displayName: "segundo",
    relative: [ "ahora" ],
    relativeTime: _aqij150
}, _aqij164 = {
    format: _aqij114,
    numeric: _aqij2,
    standAlone: _aqij114
}, _aqij165 = {
    displayName: "a",
    relative: _aqij63,
    relativeTime: _aqij128
}, _aqij166 = {
    displayName: "m",
    relative: _aqij65,
    relativeTime: _aqij129
}, _aqij167 = {
    displayName: "año",
    relative: _aqij63,
    relativeTime: _aqij136
}, _aqij168 = {
    displayName: "mes",
    relative: _aqij65,
    relativeTime: _aqij140
}, _aqij169 = {
    displayName: "d",
    relative: _aqij99,
    relativeTime: _aqij137
}, _aqij170 = {
    displayName: "día",
    relative: _aqij99,
    relativeTime: _aqij137
}, _aqij171 = {
    abbreviated: _aqij45,
    narrow: _aqij10,
    wide: _aqij104,
    "short": _aqij17
}, _aqij172 = {
    abbreviated: _aqij116,
    narrow: _aqij59,
    wide: _aqij116
}, _aqij173 = {
    displayName: "semana",
    relative: _aqij94,
    relativeTime: _aqij148
}, _aqij174 = {
    displayName: "trimestre",
    relative: _aqij68,
    relativeTime: _aqij155
}, _aqij175 = {
    abbreviated: _aqij120,
    narrow: _aqij120,
    wide: _aqij120
}, _aqij176 = {
    format: _aqij175
}, _aqij177 = {
    abbreviated: _aqij127,
    narrow: _aqij42,
    wide: _aqij144
}, _aqij178 = {
    format: _aqij154,
    standAlone: _aqij154
}, _aqij179 = {
    abbreviated: _aqij134,
    narrow: _aqij80,
    wide: _aqij134
}, _aqij180 = {
    abbreviated: _aqij138,
    narrow: _aqij59,
    wide: _aqij138
}, _aqij181 = {
    fullDate: "EEEE, d-M-y",
    longDate: "d-M-y",
    mediumDate: "d-M-y",
    shortDate: "d-M-y",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "d-M-y h:mm a",
    mediumDateTime: "d-M-y h:mm:ss a",
    longDateTime: "d-M-y h:mm:ss a z",
    fullDateTime: "EEEE, d-M-y h:mm:ss a zzzz"
}, _aqij182 = {
    abbreviated: _aqij142,
    narrow: _aqij80,
    wide: _aqij142
}, _aqij183 = {
    abbreviated: _aqij133,
    narrow: _aqij59,
    wide: _aqij153
}, _aqij184 = {
    abbreviated: _aqij146,
    narrow: _aqij80,
    wide: _aqij146
}, _aqij185 = {
    abbreviated: _aqij147,
    narrow: _aqij59,
    wide: _aqij147
}, _aqij186 = {
    abbreviated: _aqij139,
    narrow: _aqij139,
    wide: _aqij139
}, _aqij187 = {
    fullDate: "EEEE, d 'de' MMMM 'de' y G",
    longDate: "d 'de' MMMM 'de' y G",
    mediumDate: "d/M/y G",
    shortDate: "d/M/yy G",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "d/M/yy G h:mm a",
    mediumDateTime: "d/M/y G h:mm:ss a",
    longDateTime: "d 'de' MMMM 'de' y G, h:mm:ss a z",
    fullDateTime: "EEEE, d 'de' MMMM 'de' y G, h:mm:ss a zzzz"
}, _aqij188 = {
    basic: _aqij187,
    cldr: P.calendars.buddhist.dateFormats
}, _aqij189 = {
    abbreviated: _aqij157,
    narrow: _aqij157,
    wide: _aqij157
}, _aqij190 = {
    format: _aqij171,
    standAlone: _aqij171
}, _aqij191 = {
    d: "d",
    Ed: "E d",
    Gy: "y",
    GyMMM: "M-y",
    GyMMMd: "d-M-y",
    GyMMMEd: "E, d-M-y",
    h: "hh a",
    H: "HH",
    hm: "hh:mm a",
    Hm: "HH:mm",
    hms: "hh:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "d-M",
    MEd: "E, d-M",
    MMM: "L",
    MMMd: "d-M",
    MMMEd: "E d-M",
    ms: "mm:ss",
    y: "y",
    yyyy: "y",
    yyyyM: "M-y",
    yyyyMd: "d-M-y",
    yyyyMEd: "E, d-M-y",
    yyyyMMM: "M-y",
    yyyyMMMd: "d-M-y",
    yyyyMMMEd: "E, d-M-y",
    yyyyMMMM: "M-y",
    yyyyQQQ: "QQQ y",
    yyyyQQQQ: "QQQQ y",
    E: "ccc",
    MMMMd: "MMMM d",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    yMd: "r-MM-dd"
}, _aqij192 = {
    format: _aqij172,
    standAlone: _aqij172
}, _aqij193 = {
    format: _aqij177,
    standAlone: _aqij177
}, _aqij194 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _aqij195 = {
    format: _aqij183,
    standAlone: _aqij183
}, _aqij196 = {
    basic: _aqij181,
    cldr: _aqij191
}, _aqij197 = {
    format: _aqij189,
    standAlone: _aqij186
}, _aqij198 = {
    d: {
        d: "d–d"
    },
    h: _aqij3,
    H: {
        H: "HH–HH"
    },
    hm: _aqij62,
    Hm: _aqij14,
    hmv: _aqij83,
    Hmv: _aqij23,
    hv: _aqij8,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _aqij24,
    MEd: _aqij43,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _aqij11,
    MMMEd: _aqij44,
    y: {
        y: "U–U"
    },
    yM: _aqij15,
    yMd: _aqij103,
    yMEd: _aqij126,
    yMMM: _aqij16,
    yMMMd: _aqij79,
    yMMMEd: _aqij124,
    yMMMM: _aqij25
}, _aqij199 = {
    d: {
        d: "d–d"
    },
    h: _aqij3,
    H: {
        H: "HH–HH"
    },
    hm: _aqij71,
    Hm: _aqij18,
    hmv: _aqij93,
    Hmv: _aqij26,
    hv: _aqij8,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _aqij4,
    MEd: _aqij27,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _aqij35,
    MMMEd: _aqij112,
    y: {
        y: "y–y G"
    },
    yM: _aqij9,
    yMd: _aqij67,
    yMEd: _aqij123,
    yMMM: _aqij56,
    yMMMd: _aqij132,
    yMMMEd: _aqij156,
    yMMMM: _aqij70
}, _aqij200 = {
    abbreviated: _aqij194,
    narrow: _aqij194,
    wide: _aqij194
}, _aqij201 = {
    format: _aqij200
}, _aqij202 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _aqij203 = {
    dayParts: _aqij176,
    days: _aqij201,
    months: _aqij201,
    years: _aqij201,
    zodiacs: _aqij176
}, _aqij204 = {
    era: {
        displayName: "era"
    },
    year: _aqij167,
    "year-short": _aqij165,
    "year-narrow": _aqij165,
    quarter: _aqij174,
    "quarter-short": _aqij161,
    "quarter-narrow": _aqij161,
    month: _aqij168,
    "month-short": _aqij166,
    "month-narrow": _aqij166,
    week: _aqij173,
    "week-short": _aqij159,
    "week-narrow": _aqij159,
    day: _aqij170,
    "day-short": _aqij169,
    "day-narrow": _aqij169,
    weekday: _aqij12,
    dayperiod: _aqij5,
    hour: _aqij160,
    "hour-short": _aqij151,
    "hour-narrow": _aqij151,
    minute: _aqij162,
    "minute-short": _aqij158,
    "minute-narrow": _aqij158,
    second: _aqij163,
    "second-short": _aqij152,
    "second-narrow": _aqij152,
    zone: _aqij6,
    sun: _aqij121,
    "sun-short": _aqij105,
    "sun-narrow": _aqij86,
    mon: _aqij113,
    "mon-short": _aqij106,
    "mon-narrow": _aqij87,
    tue: _aqij117,
    "tue-short": _aqij107,
    "tue-narrow": _aqij88,
    wed: _aqij125,
    "wed-short": _aqij108,
    "wed-narrow": _aqij89,
    thu: _aqij118,
    "thu-short": _aqij109,
    "thu-narrow": _aqij90,
    fri: _aqij122,
    "fri-short": _aqij110,
    "fri-narrow": _aqij91,
    sat: _aqij119,
    "sat-short": _aqij111,
    "sat-narrow": _aqij92
}, _aqij205 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _aqij204
}, _aqij206 = {
    dateFormats: _aqij188,
    datePartsOrder: "dmy",
    dateIntervalFormats: _aqij199,
    dateIntervalFallbackFormat: "{0}–{1}",
    dayNames: _aqij190,
    dayPeriods: _aqij197,
    monthNames: _aqij195,
    eraNames: _aqij13,
    quarterNames: _aqij178,
    fields: _aqij204
}, _aqij207 = {
    dateFormats: _aqij196,
    datePartsOrder: "dmy",
    dateIntervalFormats: _aqij198,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _aqij190,
    dayPeriods: _aqij197,
    cyclicNames: _aqij203,
    monthNames: _aqij192,
    monthPatterns: _aqij164,
    quarterNames: _aqij178,
    fields: _aqij204
};

inter.id = "es_ph";

inter.calendars = {
    buddhist: {
        dateFormats: _aqij188,
        datePartsOrder: "dmy",
        dateIntervalFormats: _aqij199,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _aqij190,
        dayPeriods: _aqij197,
        monthNames: _aqij193,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _aqij178,
        fields: _aqij204
    },
    chinese: _aqij207,
    coptic: {
        dateFormats: _aqij188,
        datePartsOrder: "dmy",
        dateIntervalFormats: _aqij199,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _aqij190,
        dayPeriods: _aqij197,
        monthNames: {
            format: _aqij182,
            standAlone: _aqij182
        },
        eraNames: _aqij47,
        quarterNames: _aqij178,
        fields: _aqij204
    },
    dangi: _aqij207,
    ethioaa: _aqij205,
    ethiopic: {
        dateFormats: _aqij188,
        datePartsOrder: "dmy",
        dateIntervalFormats: _aqij199,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _aqij190,
        dayPeriods: _aqij197,
        monthNames: {
            format: _aqij184,
            standAlone: _aqij184
        },
        eraNames: _aqij47,
        quarterNames: _aqij178,
        fields: _aqij204
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d 'de' MMMM 'de' y",
                longDate: "d 'de' MMMM 'de' y",
                mediumDate: "d MMM y",
                shortDate: "d/M/yy",
                fullTime: "h:mm:ss a zzzz",
                longTime: "h:mm:ss a z",
                mediumTime: "h:mm:ss a",
                shortTime: "h:mm a",
                shortDateTime: "d/M/yy h:mm a",
                mediumDateTime: "d MMM y h:mm:ss a",
                longDateTime: "d 'de' MMMM 'de' y, h:mm:ss a z",
                fullDateTime: "EEEE, d 'de' MMMM 'de' y, h:mm:ss a zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E d",
                Ehm: "E, h:mm a",
                EHm: "E, H:mm",
                Ehms: "E, h:mm:ss a",
                EHms: "E, H:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E, d MMM y G",
                GyMMMM: "MMMM 'de' y G",
                GyMMMMd: "d 'de' MMMM 'de' y G",
                GyMMMMEd: "E, d 'de' MMMM 'de' y G",
                h: "h a",
                H: "H",
                hm: "h:mm a",
                Hm: "H:mm",
                hms: "h:mm:ss a",
                Hms: "H:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "H:mm:ss v",
                hmsvvvv: "h:mm:ss a (vvvv)",
                Hmsvvvv: "H:mm:ss (vvvv)",
                hmv: "h:mm a v",
                Hmv: "H:mm v",
                M: "L",
                Md: "d/M",
                MEd: "E, d/M",
                MMd: "d/M",
                MMdd: "d/M",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E, d MMM",
                MMMMd: "d 'de' MMMM",
                MMMMEd: "E, d 'de' MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "M/y",
                yMd: "d/M/y",
                yMEd: "EEE, d/M/y",
                yMM: "M/y",
                yMMM: "MMM y",
                yMMMd: "d MMM y",
                yMMMEd: "EEE, d MMM y",
                yMMMM: "MMMM 'de' y",
                yMMMMd: "d 'de' MMMM 'de' y",
                yMMMMEd: "EEE, d 'de' MMMM 'de' y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ 'de' y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _aqij3,
            H: {
                H: "H–H"
            },
            hm: _aqij71,
            Hm: {
                H: "H:mm–H:mm",
                m: "H:mm–H:mm"
            },
            hmv: _aqij83,
            Hmv: {
                H: "H:mm–H:mm v",
                m: "H:mm–H:mm v"
            },
            hv: _aqij8,
            Hv: {
                H: "H–H v"
            },
            M: {
                M: "M–M"
            },
            Md: _aqij4,
            MEd: _aqij27,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: {
                d: "d–d MMM",
                M: "d MMM – d MMM"
            },
            MMMEd: {
                d: "E, d MMM – E, d MMM",
                M: "E, d MMM – E, d MMM"
            },
            MMMMd: {
                d: "d–d 'de' MMMM",
                M: "d 'de' MMMM–d 'de' MMMM"
            },
            MMMMEd: {
                d: "E, d 'de' MMMM–E, d 'de' MMMM",
                M: "E, d 'de' MMMM–E, d 'de' MMMM"
            },
            y: {
                y: "y–y"
            },
            yM: {
                M: "M/y–M/y",
                y: "M/y–M/y"
            },
            yMd: {
                d: "d/M/y–d/M/y",
                M: "d/M/y–d/M/y",
                y: "d/M/y–d/M/y"
            },
            yMEd: {
                d: "E, d/M/y – E, d/M/y",
                M: "E, d/M/y – E, d/M/y",
                y: "E, d/M/y – E, d/M/y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "d–d MMM y",
                M: "d MMM – d MMM y",
                y: "d MMM y – d MMM y"
            },
            yMMMEd: {
                d: "E, d MMM – E, d MMM y",
                M: "E, d MMM – E, d MMM y",
                y: "E, d MMM y – E, d MMM y"
            },
            yMMMM: {
                M: "MMMM–MMMM 'de' y",
                y: "MMMM 'de' y – MMMM 'de' y"
            },
            yMMMMd: {
                d: "d–d 'de' MMMM 'de' y",
                M: "d 'de' MMMM–d 'de' MMMM 'de' y",
                y: "d 'de' MMMM 'de' y–d 'de' MMMM 'de' y"
            },
            yMMMMEd: {
                d: "E, d 'de' MMMM–E, d 'de' MMMM 'de' y",
                M: "E, d 'de' MMMM–E, d 'de' MMMM 'de' y",
                y: "E, d 'de' MMMM 'de' y–E, d 'de' MMMM 'de' y"
            }
        },
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _aqij190,
        dayPeriods: _aqij197,
        monthNames: _aqij193,
        eraNames: {
            wide: [ "antes de Cristo", "después de Cristo" ],
            abbreviated: [ "a. C.", "d. C." ]
        },
        quarterNames: _aqij178,
        fields: _aqij204
    },
    hebrew: {
        dateFormats: _aqij188,
        datePartsOrder: "dmy",
        dateIntervalFormats: _aqij199,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _aqij190,
        dayPeriods: _aqij197,
        monthNames: {
            format: _aqij179,
            standAlone: _aqij179
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _aqij178,
        fields: _aqij204
    },
    indian: {
        dateFormats: _aqij188,
        datePartsOrder: "dmy",
        dateIntervalFormats: _aqij199,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _aqij190,
        dayPeriods: _aqij197,
        monthNames: {
            format: _aqij185,
            standAlone: _aqij185
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _aqij178,
        fields: _aqij204
    },
    islamic: _aqij206,
    "islamic-umalqura": _aqij206,
    "islamic-tbla": _aqij206,
    "islamic-civil": _aqij206,
    "islamic-rgsa": _aqij206,
    iso8601: _aqij205,
    japanese: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d 'de' MMMM 'de' y G",
                longDate: "d 'de' MMMM 'de' y G",
                mediumDate: "dd/MM/y G",
                shortDate: "dd/MM/yy GGGGG",
                fullTime: "h:mm:ss a zzzz",
                longTime: "h:mm:ss a z",
                mediumTime: "h:mm:ss a",
                shortTime: "h:mm a",
                shortDateTime: "dd/MM/yy GGGGG h:mm a",
                mediumDateTime: "dd/MM/y G h:mm:ss a",
                longDateTime: "d 'de' MMMM 'de' y G, h:mm:ss a z",
                fullDateTime: "EEEE, d 'de' MMMM 'de' y G, h:mm:ss a zzzz"
            },
            cldr: P.calendars.buddhist.dateFormats
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: _aqij199,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _aqij190,
        dayPeriods: _aqij197,
        monthNames: _aqij193,
        eraNames: {
            wide: _aqij202,
            abbreviated: _aqij202
        },
        quarterNames: _aqij178,
        fields: _aqij204
    },
    persian: {
        dateFormats: _aqij188,
        datePartsOrder: "dmy",
        dateIntervalFormats: _aqij199,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _aqij190,
        dayPeriods: _aqij197,
        monthNames: {
            format: _aqij180,
            standAlone: _aqij180
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _aqij178,
        fields: _aqij204
    },
    roc: {
        dateFormats: _aqij188,
        datePartsOrder: "dmy",
        dateIntervalFormats: _aqij199,
        dateIntervalFallbackFormat: "{0}–{1}",
        dayNames: _aqij190,
        dayPeriods: _aqij197,
        monthNames: _aqij193,
        eraNames: {
            wide: _aqij7,
            abbreviated: _aqij7
        },
        quarterNames: _aqij178,
        fields: _aqij204
    },
    islamicc: _aqij205
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderDigitsOrdinalMasculine(n);
};

inter.renderSpelloutNumbering = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "menos " + this.renderSpelloutNumbering(-n);
    if (isFractional && n > 1) return this.renderSpelloutNumbering(Math.floor(n)) + " punto " + this.renderSpelloutNumbering(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " billiones" + (n === 2e12 ? "" : " " + this.renderSpelloutNumbering(n % 1e12));
    if (n >= 1e12) return "un billón" + (n === 1e12 ? "" : " " + this.renderSpelloutNumbering(n % 1e12));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " millones" + (n === 2e6 ? "" : " " + this.renderSpelloutNumbering(n % 1e6));
    if (n >= 1e6) return "un millón" + (n === 1e6 ? "" : " " + this.renderSpelloutNumbering(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e3)) + " mil" + (n === 2e3 ? "" : " " + this.renderSpelloutNumbering(n % 1e3));
    if (n >= 1e3) return "mil" + (n === 1e3 ? "" : " " + this.renderSpelloutNumbering(n % 1e3));
    if (n >= 900) return "novecientos" + (n === 900 ? "" : " " + this.renderSpelloutNumbering(n % 100));
    if (n >= 800) return "ochocientos" + (n === 800 ? "" : " " + this.renderSpelloutNumbering(n % 100));
    if (n >= 700) return "setecientos" + (n === 700 ? "" : " " + this.renderSpelloutNumbering(n % 100));
    if (n >= 600) return "seiscientos" + (n === 600 ? "" : " " + this.renderSpelloutNumbering(n % 100));
    if (n >= 500) return "quinientos" + (n === 500 ? "" : " " + this.renderSpelloutNumbering(n % 100));
    if (n >= 400) return "cuatrocientos" + (n === 400 ? "" : " " + this.renderSpelloutNumbering(n % 100));
    if (n >= 300) return "trescientos" + (n === 300 ? "" : " " + this.renderSpelloutNumbering(n % 100));
    if (n >= 200) return "doscientos" + (n === 200 ? "" : " " + this.renderSpelloutNumbering(n % 100));
    if (n >= 101) return "ciento " + this.renderSpelloutNumbering(n % 100);
    if (n >= 100) return "cien";
    if (n >= 90) return "noventa" + (n === 90 ? "" : " y " + this.renderSpelloutNumbering(n % 10));
    if (n >= 80) return "ochenta" + (n === 80 ? "" : " y " + this.renderSpelloutNumbering(n % 10));
    if (n >= 70) return "setenta" + (n === 70 ? "" : " y " + this.renderSpelloutNumbering(n % 10));
    if (n >= 60) return "sesenta" + (n === 60 ? "" : " y " + this.renderSpelloutNumbering(n % 10));
    if (n >= 50) return "cincuenta" + (n === 50 ? "" : " y " + this.renderSpelloutNumbering(n % 10));
    if (n >= 40) return "cuarenta" + (n === 40 ? "" : " y " + this.renderSpelloutNumbering(n % 10));
    if (n >= 30) return "treinta" + (n === 30 ? "" : " y " + this.renderSpelloutNumbering(n % 10));
    if (n >= 27) return "veinti" + this.renderSpelloutNumbering(n % 10);
    if (n >= 26) return "veintiséis";
    if (n >= 25) return "veinticinco";
    if (n >= 24) return "veinticuatro";
    if (n >= 23) return "veintitrés";
    if (n >= 22) return "veintidós";
    if (n >= 21) return "veintiuno";
    if (n >= 20) return "veinte";
    if (n >= 17) return "dieci" + this.renderSpelloutNumbering(n % 10);
    if (n >= 16) return "dieciséis";
    if (n >= 15) return "quince";
    if (n >= 14) return "catorce";
    if (n >= 13) return "trece";
    if (n >= 12) return "doce";
    if (n >= 11) return "once";
    if (n >= 10) return "diez";
    if (n >= 9) return "nueve";
    if (n >= 8) return "ocho";
    if (n >= 7) return "siete";
    if (n >= 6) return "seis";
    if (n >= 5) return "cinco";
    if (n >= 4) return "cuatro";
    if (n >= 3) return "tres";
    if (n >= 2) return "dos";
    if (n >= 1) return "uno";
    if (n >= 0) return "cero";
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderDigitsOrdinalMasculine = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinalMasculine(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".º";
};

inter.renderSpelloutCardinalMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "menos " + this.renderSpelloutCardinalMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculine(Math.floor(n)) + " punto " + this.renderSpelloutCardinalMasculine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " billiones" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 1e12) return "un billón" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " millones" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 1e6) return "un millón" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e3)) + " mil" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 1e3) return "mil" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 900) return "nove­cientos" + (n === 900 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 800) return "ocho­cientos" + (n === 800 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 700) return "sete­cientos" + (n === 700 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 600) return "seis­cientos" + (n === 600 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 500) return "quinientos" + (n === 500 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 400) return "cuatrocientos" + (n === 400 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 300) return "trescientos" + (n === 300 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 200) return "doscientos" + (n === 200 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 101) return "ciento " + this.renderSpelloutCardinalMasculine(n % 100);
    if (n >= 100) return "cien";
    if (n >= 90) return "noventa" + (n === 90 ? "" : " y " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 80) return "ochenta" + (n === 80 ? "" : " y " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 70) return "setenta" + (n === 70 ? "" : " y " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 60) return "sesenta" + (n === 60 ? "" : " y " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 50) return "cincuenta" + (n === 50 ? "" : " y " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 40) return "cuarenta" + (n === 40 ? "" : " y " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 30) return "treinta" + (n === 30 ? "" : " y " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 22) return this.renderSpelloutNumbering(n);
    if (n >= 21) return "veintiún";
    if (n >= 2) return this.renderSpelloutNumbering(n);
    if (n >= 1) return "un";
    if (n >= 0) return "cero";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.currencies = [].concat(P.currencies.slice(0, 211), {
    id: "PHP",
    displayName: "peso filipino",
    symbol: "₱",
    one: "peso filipino",
    other: "pesos filipinos"
}, P.currencies.slice(212, 274));

module.exports = inter;