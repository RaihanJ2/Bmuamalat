function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _deg91 = {
    one: "0m",
    other: "0m"
}, _deg92 = {
    one: "0M",
    other: "0M"
}, _deg93 = {
    one: "0B",
    other: "0B"
}, _deg94 = [ "1T", "2T", "3T", "4T" ], _deg95 = {
    all: {
        leap: "{0}bis"
    }
}, _deg96 = {
    one: "00m",
    other: "00m"
}, _deg97 = {
    one: "{0}°",
    other: "{0}°"
}, _deg98 = {
    one: "000m",
    other: "000m"
}, _deg99 = {
    one: "00 M",
    other: "00 M"
}, _deg910 = {
    one: "00mM",
    other: "00mM"
}, _deg911 = {
    one: "00 B",
    other: "00 B"
}, _deg912 = {
    one: "0m ¤",
    other: "0m ¤"
}, _deg913 = {
    one: "0M ¤",
    other: "0M ¤"
}, _deg914 = {
    one: "0B ¤",
    other: "0B ¤"
}, _deg915 = {
    a: "h a – h a",
    h: "h–h a"
}, _deg916 = {
    displayName: "fus horari"
}, _deg917 = [ "Before R.O.C.", "R.O.C." ], _deg918 = {
    one: "{0} s",
    other: "{0} s"
}, _deg919 = {
    one: "{0} h",
    other: "{0} h"
}, _deg920 = {
    one: "{0} m",
    other: "{0} m"
}, _deg921 = {
    one: "{0} g",
    other: "{0} g"
}, _deg922 = {
    one: "{0} l",
    other: "{0} l"
}, _deg923 = {
    one: "000 M",
    other: "000 M"
}, _deg924 = {
    one: "000mM",
    other: "000mM"
}, _deg925 = {
    one: "000 B",
    other: "000 B"
}, _deg926 = {
    one: "00m ¤",
    other: "00m ¤"
}, _deg927 = {
    displayName: "a. m./p. m."
}, _deg928 = {
    one: "{0} ct",
    other: "{0} ct"
}, _deg929 = {
    one: "{0} MB",
    other: "{0} MB"
}, _deg930 = {
    one: "{0} ms",
    other: "{0} ms"
}, _deg931 = {
    one: "{0} Hz",
    other: "{0} Hz"
}, _deg932 = {
    one: "{0} km",
    other: "{0} km"
}, _deg933 = {
    one: "{0} cm",
    other: "{0} cm"
}, _deg934 = {
    one: "{0} mm",
    other: "{0} mm"
}, _deg935 = {
    one: "{0} mi",
    other: "{0} mi"
}, _deg936 = {
    one: "{0} yd",
    other: "{0} yd"
}, _deg937 = {
    one: "{0} ft",
    other: "{0} ft"
}, _deg938 = {
    one: "{0} kg",
    other: "{0} kg"
}, _deg939 = {
    one: "{0} µg",
    other: "{0} µg"
}, _deg940 = {
    one: "{0} lb",
    other: "{0} lb"
}, _deg941 = {
    one: "{0} oz",
    other: "{0} oz"
}, _deg942 = {
    one: "{0} m³",
    other: "{0} m³"
}, _deg943 = {
    one: "0000 M",
    other: "0000 M"
}, _deg944 = {
    one: "000m ¤",
    other: "000m ¤"
}, _deg945 = {
    one: "00 M ¤",
    other: "00 M ¤"
}, _deg946 = {
    one: "00mM ¤",
    other: "00mM ¤"
}, _deg947 = {
    one: "00 B ¤",
    other: "00 B ¤"
}, _deg948 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _deg949 = {
    d: "d/M – d/M",
    M: "d/M – d/M"
}, _deg950 = {
    one: "{0} min",
    other: "{0} min"
}, _deg951 = {
    one: "{0} cm²",
    other: "{0} cm²"
}, _deg952 = {
    one: "{0} nmi",
    other: "{0} nmi"
}, _deg953 = {
    one: "{0} cm³",
    other: "{0} cm³"
}, _deg954 = {
    one: "000 M ¤",
    other: "000 M ¤"
}, _deg955 = {
    one: "000mM ¤",
    other: "000mM ¤"
}, _deg956 = {
    one: "000 B ¤",
    other: "000 B ¤"
}, _deg957 = {
    d: "d–d MMM",
    M: "d MMM – d MMM"
}, _deg958 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _deg959 = {
    one: "{0} bit",
    other: "{0} bits"
}, _deg960 = {
    one: "{0} any",
    other: "{0} anys"
}, _deg961 = {
    one: "{0} dia",
    other: "{0} dies"
}, _deg962 = {
    one: "0 miler",
    other: "0 milers"
}, _deg963 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _deg964 = {
    one: "{0} mes",
    other: "{0} mesos"
}, _deg965 = {
    one: "{0} kcal",
    other: "{0} kcal"
}, _deg966 = {
    one: "{0} inHg",
    other: "{0} inHg"
}, _deg967 = {
    one: "{0} km/h",
    other: "{0} km/h"
}, _deg968 = {
    one: "0 milió",
    other: "0 milions"
}, _deg969 = {
    one: "0 bilió",
    other: "0 bilions"
}, _deg970 = {
    one: "0000 M ¤",
    other: "0000 M ¤"
}, _deg971 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _deg972 = {
    displayName: "dia de la setmana"
}, _deg973 = {
    one: "fa {0} h",
    other: "fa {0} h"
}, _deg974 = {
    one: "fa {0} s",
    other: "fa {0} s"
}, _deg975 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _deg976 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _deg977 = {
    one: "{0} mm Hg",
    other: "{0} mm Hg"
}, _deg978 = {
    one: "00 milers",
    other: "00 milers"
}, _deg979 = {
    one: "{0} segle",
    other: "{0} segles"
}, _deg980 = {
    one: "{0} tassa",
    other: "{0} tasses"
}, _deg981 = [ "dg", "dl", "dt", "dc", "dj", "dv", "ds" ], _deg982 = {
    one: "000 milers",
    other: "000 milers"
}, _deg983 = {
    one: "00 milions",
    other: "00 milions"
}, _deg984 = {
    one: "00 bilions",
    other: "00 bilions"
}, _deg985 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _deg986 = {
    d: "E d/M – E d/M",
    M: "E d/M – E d/M"
}, _deg987 = {
    one: "fa {0} min",
    other: "fa {0} min"
}, _deg988 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _deg989 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _deg990 = {
    one: "{0} quirat",
    other: "{0} quirats"
}, _deg991 = {
    one: "fa {0} any",
    other: "fa {0} anys"
}, _deg992 = {
    one: "en {0} any",
    other: "en {0} anys"
}, _deg993 = {
    one: "fa {0} dia",
    other: "fa {0} dies"
}, _deg994 = {
    one: "000 milions",
    other: "000 milions"
}, _deg995 = {
    one: "000 bilions",
    other: "000 bilions"
}, _deg996 = {
    M: "M/y – M/y GGGG",
    y: "M/y – M/y GGGG"
}, _deg997 = {
    one: "fa {0} mes",
    other: "fa {0} mesos"
}, _deg998 = {
    one: "en {0} mes",
    other: "en {0} mesos"
}, _deg999 = {
    one: "fa {0} hora",
    other: "fa {0} hores"
}, _deg9100 = {
    one: "{0} l/100 km",
    other: "{0} l/100 km"
}, _deg9101 = {
    one: "fa {0} trim.",
    other: "fa {0} trim."
}, _deg9102 = {
    one: "en {0} trim.",
    other: "en {0} trim."
}, _deg9103 = {
    one: "fa {0} setm.",
    other: "fa {0} setm."
}, _deg9104 = {
    one: "en {0} setm.",
    other: "en {0} setm."
}, _deg9105 = {
    one: "fa {0} minut",
    other: "fa {0} minuts"
}, _deg9106 = {
    one: "fa {0} segon",
    other: "fa {0} segons"
}, _deg9107 = [ "dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds." ], _deg9108 = {
    d: "E, d – E, d MMM",
    M: "E, d MMM – E, d MMM"
}, _deg9109 = {
    one: "d’aquí a {0} h",
    other: "d’aquí a {0} h"
}, _deg9110 = {
    one: "d‘aquí a {0} h",
    other: "d‘aquí a {0} h"
}, _deg9111 = {
    one: "d’aquí a {0} s",
    other: "d’aquí a {0} s"
}, _deg9112 = {
    one: "fa {0} setmana",
    other: "fa {0} setmanes"
}, _deg9113 = {
    M: "LLL–LLL y G",
    y: "MMM 'de' y – MMM 'de' y G"
}, _deg9114 = {
    id: "001",
    displayName: "Món",
    hasTimeZones: false
}, _deg9115 = {
    "0": "aquest mes",
    "1": "mes vinent",
    "-1": "mes passat"
}, _deg9116 = {
    one: "d’aquí a {0} min",
    other: "d’aquí a {0} min"
}, _deg9117 = {
    "0": "aquest dg.",
    "1": "dg. que ve",
    "-1": "dg. passat"
}, _deg9118 = {
    "0": "aquest dl.",
    "1": "dl. que ve",
    "-1": "dl. passat"
}, _deg9119 = {
    "0": "aquest dt.",
    "1": "dt. que ve",
    "-1": "dt. passat"
}, _deg9120 = {
    "0": "aquest dc.",
    "1": "dc. que ve",
    "-1": "dc. passat"
}, _deg9121 = {
    "0": "aquest dj.",
    "1": "dj. que ve",
    "-1": "dj. passat"
}, _deg9122 = {
    "0": "aquest dv.",
    "1": "dv. que ve",
    "-1": "dv. passat"
}, _deg9123 = {
    "0": "aquest ds.",
    "1": "ds. que ve",
    "-1": "ds. passat"
}, _deg9124 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _deg9125 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _deg9126 = {
    id: "BV",
    displayName: "Bouvet",
    hasTimeZones: false
}, _deg9127 = {
    one: "{0} quilocaloria",
    other: "{0} quilocalories"
}, _deg9128 = {
    "0": "enguany",
    "1": "l’any que ve",
    "-1": "l’any passat"
}, _deg9129 = {
    one: "d’aquí a {0} any",
    other: "d’aquí a {0} anys"
}, _deg9130 = {
    one: "fa {0} trimestre",
    other: "fa {0} trimestres"
}, _deg9131 = {
    one: "d’aquí a {0} dia",
    other: "d’aquí a {0} dies"
}, _deg9132 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _deg9133 = {
    one: "d’aquí a {0} mes",
    other: "d’aquí a {0} mesos"
}, _deg9134 = {
    id: "AQ",
    displayName: "Antàrtida",
    hasTimeZones: true
}, _deg9135 = {
    a: "h:mm a –h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _deg9136 = {
    one: "d’aquí a {0} hora",
    other: "d’aquí a {0} hores"
}, _deg9137 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _deg9138 = {
    one: "d’aquí a {0} trim.",
    other: "d’aquí a {0} trim."
}, _deg9139 = {
    one: "d’aquí a {0} setm.",
    other: "d’aquí a {0} setm."
}, _deg9140 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _deg9141 = {
    id: "CC",
    displayName: "Illes Cocos",
    hasTimeZones: true
}, _deg9142 = {
    one: "0 miler de milions",
    other: "0 milers de milions"
}, _deg9143 = {
    one: "d’aquí a {0} minut",
    other: "d’aquí a {0} minuts"
}, _deg9144 = {
    one: "d’aquí a {0} segon",
    other: "d’aquí a {0} segons"
}, _deg9145 = {
    "0": "aquest trim.",
    "1": "trim. vinent",
    "-1": "trim. passat"
}, _deg9146 = {
    "0": "aquest mes",
    "1": "el mes que ve",
    "-1": "el mes passat"
}, _deg9147 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _deg9148 = {
    M: "MMMM–MMMM 'de' y G",
    y: "MMMM 'de' y – MMMM 'de' y G"
}, _deg9149 = {
    id: "CX",
    displayName: "Illa Christmas",
    hasTimeZones: true
}, _deg9150 = {
    one: "00 milers de milions",
    other: "00 milers de milions"
}, _deg9151 = {
    "0": "aquesta setm.",
    "1": "setm. vinent",
    "-1": "setm. passada"
}, _deg9152 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _deg9153 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _deg9154 = {
    id: "IC",
    displayName: "Illes Canàries",
    hasTimeZones: false
}, _deg9155 = {
    one: "d’aquí a {0} setmana",
    other: "d’aquí a {0} setmanes"
}, _deg9156 = {
    "0": "aquest dijous",
    "1": "dijous que ve",
    "-1": "dijous passat"
}, _deg9157 = {
    id: "EA",
    displayName: "Ceuta i Melilla",
    hasTimeZones: false
}, _deg9158 = {
    id: "CP",
    displayName: "Illa Clipperton",
    hasTimeZones: false
}, _deg9159 = {
    one: "000 milers de milions",
    other: "000 milers de milions"
}, _deg9160 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _deg9161 = {
    id: "TA",
    displayName: "Tristão da Cunha",
    hasTimeZones: false
}, _deg9162 = {
    relative: _deg9117
}, _deg9163 = {
    relative: _deg9118
}, _deg9164 = {
    relative: _deg9119
}, _deg9165 = {
    relative: _deg9120
}, _deg9166 = {
    relative: _deg9121
}, _deg9167 = {
    relative: _deg9122
}, _deg9168 = {
    relative: _deg9123
}, _deg9169 = [ "GN", "FB", "MÇ", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS" ], _deg9170 = [ "1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre" ], _deg9171 = {
    "0": "aquest trim.",
    "1": "el trim. que ve",
    "-1": "el trim. passat"
}, _deg9172 = {
    "0": "aquest dilluns",
    "1": "dilluns que ve",
    "-1": "dilluns passat"
}, _deg9173 = {
    "0": "aquest dimarts",
    "1": "dimarts que ve",
    "-1": "dimarts passat"
}, _deg9174 = {
    id: "CU",
    displayName: "Cuba",
    regionId: "029",
    hasTimeZones: true
}, _deg9175 = {
    id: "FJ",
    displayName: "Fiji",
    regionId: "054",
    hasTimeZones: true
}, _deg9176 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _deg9177 = {
    id: "AC",
    displayName: "Illa de l’Ascensió",
    hasTimeZones: false
}, _deg9178 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _deg9179 = {
    id: "IQ",
    displayName: "Iraq",
    regionId: "145",
    hasTimeZones: true
}, _deg9180 = {
    id: "JP",
    displayName: "Japó",
    regionId: "030",
    hasTimeZones: true
}, _deg9181 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _deg9182 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _deg9183 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _deg9184 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _deg9185 = {
    id: "PE",
    displayName: "Perú",
    regionId: "005",
    hasTimeZones: true
}, _deg9186 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _deg9187 = {
    id: "TD",
    displayName: "Txad",
    regionId: "017",
    hasTimeZones: true
}, _deg9188 = {
    id: "CL",
    displayName: "Xile",
    regionId: "005",
    hasTimeZones: true
}, _deg9189 = {
    id: "CN",
    displayName: "Xina",
    regionId: "030",
    hasTimeZones: true
}, _deg9190 = {
    one: "d’aquí a {0} trimestre",
    other: "d’aquí a {0} trimestres"
}, _deg9191 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _deg9192 = {
    id: "BJ",
    displayName: "Benín",
    regionId: "011",
    hasTimeZones: true
}, _deg9193 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _deg9194 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _deg9195 = {
    id: "HT",
    displayName: "Haití",
    regionId: "029",
    hasTimeZones: true
}, _deg9196 = {
    id: "YE",
    displayName: "Iemen",
    regionId: "145",
    hasTimeZones: true
}, _deg9197 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _deg9198 = {
    id: "LB",
    displayName: "Líban",
    regionId: "145",
    hasTimeZones: true
}, _deg9199 = {
    id: "LY",
    displayName: "Líbia",
    regionId: "015",
    hasTimeZones: true
}, _deg9200 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _deg9201 = {
    id: "MX",
    displayName: "Mèxic",
    regionId: "013",
    hasTimeZones: true
}, _deg9202 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _deg9203 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _deg9204 = {
    id: "NE",
    displayName: "Níger",
    regionId: "011",
    hasTimeZones: true
}, _deg9205 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _deg9206 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _deg9207 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _deg9208 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _deg9209 = {
    id: "SY",
    displayName: "Síria",
    regionId: "145",
    hasTimeZones: true
}, _deg9210 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _deg9211 = {
    id: "CY",
    displayName: "Xipre",
    regionId: "145",
    hasTimeZones: true
}, _deg9212 = {
    id: "IN",
    displayName: "Índia",
    regionId: "034",
    hasTimeZones: true
}, _deg9213 = {
    "0": "aquesta setm.",
    "1": "la setm. que ve",
    "-1": "la setm. passada"
}, _deg9214 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _deg9215 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _deg9216 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _deg9217 = {
    id: "BR",
    displayName: "Brasil",
    regionId: "005",
    hasTimeZones: true
}, _deg9218 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _deg9219 = {
    id: "CA",
    displayName: "Canadà",
    regionId: "021",
    hasTimeZones: true
}, _deg9220 = {
    id: "EG",
    displayName: "Egipte",
    regionId: "015",
    hasTimeZones: true
}, _deg9221 = {
    id: "FR",
    displayName: "França",
    regionId: "155",
    hasTimeZones: true
}, _deg9222 = {
    id: "GR",
    displayName: "Grècia",
    regionId: "039",
    hasTimeZones: true
}, _deg9223 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _deg9224 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _deg9225 = {
    id: "GM",
    displayName: "Gàmbia",
    regionId: "011",
    hasTimeZones: true
}, _deg9226 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _deg9227 = {
    id: "IT",
    displayName: "Itàlia",
    regionId: "039",
    hasTimeZones: true
}, _deg9228 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _deg9229 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _deg9230 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _deg9231 = {
    id: "MA",
    displayName: "Marroc",
    regionId: "015",
    hasTimeZones: true
}, _deg9232 = {
    id: "MC",
    displayName: "Mònaco",
    regionId: "155",
    hasTimeZones: true
}, _deg9233 = {
    id: "PA",
    displayName: "Panamà",
    regionId: "013",
    hasTimeZones: true
}, _deg9234 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _deg9235 = {
    id: "RU",
    displayName: "Rússia",
    regionId: "151",
    hasTimeZones: true
}, _deg9236 = {
    id: "SE",
    displayName: "Suècia",
    regionId: "154",
    hasTimeZones: true
}, _deg9237 = {
    id: "CH",
    displayName: "Suïssa",
    regionId: "155",
    hasTimeZones: true
}, _deg9238 = {
    id: "RS",
    displayName: "Sèrbia",
    regionId: "039",
    hasTimeZones: true
}, _deg9239 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _deg9240 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _deg9241 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _deg9242 = {
    id: "ZM",
    displayName: "Zàmbia",
    regionId: "014",
    hasTimeZones: true
}, _deg9243 = {
    "0": "aquest diumenge",
    "1": "diumenge que ve",
    "-1": "diumenge passat"
}, _deg9244 = {
    "0": "aquest dimecres",
    "1": "dimecres que ve",
    "-1": "dimecres passat"
}, _deg9245 = {
    "0": "aquest dissabte",
    "1": "dissabte que ve",
    "-1": "dissabte passat"
}, _deg9246 = {
    id: "AL",
    displayName: "Albània",
    regionId: "039",
    hasTimeZones: true
}, _deg9247 = {
    id: "DZ",
    displayName: "Algèria",
    regionId: "015",
    hasTimeZones: true
}, _deg9248 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _deg9249 = {
    id: "AM",
    displayName: "Armènia",
    regionId: "145",
    hasTimeZones: true
}, _deg9250 = {
    id: "BS",
    displayName: "Bahames",
    regionId: "029",
    hasTimeZones: true
}, _deg9251 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _deg9252 = {
    id: "BY",
    displayName: "Belarús",
    regionId: "151",
    hasTimeZones: true
}, _deg9253 = {
    id: "BO",
    displayName: "Bolívia",
    regionId: "005",
    hasTimeZones: true
}, _deg9254 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _deg9255 = {
    id: "BE",
    displayName: "Bèlgica",
    regionId: "155",
    hasTimeZones: true
}, _deg9256 = {
    id: "CM",
    displayName: "Camerun",
    regionId: "017",
    hasTimeZones: true
}, _deg9257 = {
    id: "KM",
    displayName: "Comores",
    regionId: "014",
    hasTimeZones: true
}, _deg9258 = {
    id: "HR",
    displayName: "Croàcia",
    regionId: "039",
    hasTimeZones: true
}, _deg9259 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _deg9260 = {
    id: "EC",
    displayName: "Equador",
    regionId: "005",
    hasTimeZones: true
}, _deg9261 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _deg9262 = {
    id: "ES",
    displayName: "Espanya",
    regionId: "039",
    hasTimeZones: true
}, _deg9263 = {
    id: "EE",
    displayName: "Estònia",
    regionId: "154",
    hasTimeZones: true
}, _deg9264 = {
    id: "ET",
    displayName: "Etiòpia",
    regionId: "014",
    hasTimeZones: true
}, _deg9265 = {
    id: "GE",
    displayName: "Geòrgia",
    regionId: "145",
    hasTimeZones: true
}, _deg9266 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _deg9267 = {
    id: "HU",
    displayName: "Hongria",
    regionId: "151",
    hasTimeZones: true
}, _deg9268 = {
    id: "IE",
    displayName: "Irlanda",
    regionId: "154",
    hasTimeZones: true
}, _deg9269 = {
    id: "JM",
    displayName: "Jamaica",
    regionId: "029",
    hasTimeZones: true
}, _deg9270 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _deg9271 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _deg9272 = {
    id: "LV",
    displayName: "Letònia",
    regionId: "154",
    hasTimeZones: true
}, _deg9273 = {
    id: "LR",
    displayName: "Libèria",
    regionId: "011",
    hasTimeZones: true
}, _deg9274 = {
    id: "MU",
    displayName: "Maurici",
    regionId: "014",
    hasTimeZones: true
}, _deg9275 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _deg9276 = {
    id: "NA",
    displayName: "Namíbia",
    regionId: "018",
    hasTimeZones: true
}, _deg9277 = {
    id: "NG",
    displayName: "Nigèria",
    regionId: "011",
    hasTimeZones: true
}, _deg9278 = {
    id: "NF",
    displayName: "Norfolk",
    regionId: "053",
    hasTimeZones: true
}, _deg9279 = {
    id: "NO",
    displayName: "Noruega",
    regionId: "154",
    hasTimeZones: true
}, _deg9280 = {
    id: "PL",
    displayName: "Polònia",
    regionId: "151",
    hasTimeZones: true
}, _deg9281 = {
    id: "RO",
    displayName: "Romania",
    regionId: "151",
    hasTimeZones: true
}, _deg9282 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _deg9283 = {
    id: "SO",
    displayName: "Somàlia",
    regionId: "014",
    hasTimeZones: true
}, _deg9284 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _deg9285 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _deg9286 = {
    id: "TN",
    displayName: "Tunísia",
    regionId: "015",
    hasTimeZones: true
}, _deg9287 = {
    id: "TR",
    displayName: "Turquia",
    regionId: "145",
    hasTimeZones: true
}, _deg9288 = {
    id: "UA",
    displayName: "Ucraïna",
    regionId: "151",
    hasTimeZones: true
}, _deg9289 = {
    id: "UY",
    displayName: "Uruguai",
    regionId: "005",
    hasTimeZones: true
}, _deg9290 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _deg9291 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _deg9292 = {
    id: "AT",
    displayName: "Àustria",
    regionId: "155",
    hasTimeZones: true
}, _deg9293 = {
    id: "DE",
    displayName: "Alemanya",
    regionId: "155",
    hasTimeZones: true
}, _deg9294 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _deg9295 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _deg9296 = {
    id: "BM",
    displayName: "Bermudes",
    regionId: "021",
    hasTimeZones: true
}, _deg9297 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _deg9298 = {
    id: "BG",
    displayName: "Bulgària",
    regionId: "151",
    hasTimeZones: true
}, _deg9299 = {
    id: "KH",
    displayName: "Cambodja",
    regionId: "035",
    hasTimeZones: true
}, _deg9300 = {
    id: "CV",
    displayName: "Cap Verd",
    regionId: "011",
    hasTimeZones: true
}, _deg9301 = {
    id: "CO",
    displayName: "Colòmbia",
    regionId: "005",
    hasTimeZones: true
}, _deg9302 = {
    id: "DJ",
    displayName: "Djibouti",
    regionId: "014",
    hasTimeZones: true
}, _deg9303 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _deg9304 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _deg9305 = {
    id: "HN",
    displayName: "Hondures",
    regionId: "013",
    hasTimeZones: true
}, _deg9306 = {
    id: "IS",
    displayName: "Islàndia",
    regionId: "154",
    hasTimeZones: true
}, _deg9307 = {
    id: "JO",
    displayName: "Jordània",
    regionId: "145",
    hasTimeZones: true
}, _deg9308 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _deg9309 = {
    id: "LT",
    displayName: "Lituània",
    regionId: "154",
    hasTimeZones: true
}, _deg9310 = {
    id: "MV",
    displayName: "Maldives",
    regionId: "034",
    hasTimeZones: true
}, _deg9311 = {
    id: "MY",
    displayName: "Malàisia",
    regionId: "035",
    hasTimeZones: true
}, _deg9312 = {
    id: "MD",
    displayName: "Moldàvia",
    regionId: "151",
    hasTimeZones: true
}, _deg9313 = {
    id: "MN",
    displayName: "Mongòlia",
    regionId: "030",
    hasTimeZones: true
}, _deg9314 = {
    id: "MZ",
    displayName: "Moçambic",
    regionId: "014",
    hasTimeZones: true
}, _deg9315 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _deg9316 = {
    id: "PY",
    displayName: "Paraguai",
    regionId: "005",
    hasTimeZones: true
}, _deg9317 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _deg9318 = {
    id: "SG",
    displayName: "Singapur",
    regionId: "035",
    hasTimeZones: true
}, _deg9319 = {
    id: "TZ",
    displayName: "Tanzània",
    regionId: "014",
    hasTimeZones: true
}, _deg9320 = {
    id: "ZW",
    displayName: "Zimbàbue",
    regionId: "014",
    hasTimeZones: true
}, _deg9321 = {
    "2": "{0} i {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0} i {1}"
}, _deg9322 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _deg9323 = {
    id: "AU",
    displayName: "Austràlia",
    regionId: "053",
    hasTimeZones: true
}, _deg9324 = {
    id: "DK",
    displayName: "Dinamarca",
    regionId: "154",
    hasTimeZones: true
}, _deg9325 = {
    id: "SI",
    displayName: "Eslovènia",
    regionId: "039",
    hasTimeZones: true
}, _deg9326 = {
    id: "PH",
    displayName: "Filipines",
    regionId: "035",
    hasTimeZones: true
}, _deg9327 = {
    id: "FI",
    displayName: "Finlàndia",
    regionId: "154",
    hasTimeZones: true
}, _deg9328 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _deg9329 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _deg9330 = {
    id: "ID",
    displayName: "Indonèsia",
    regionId: "035",
    hasTimeZones: true
}, _deg9331 = {
    id: "LU",
    displayName: "Luxemburg",
    regionId: "155",
    hasTimeZones: true
}, _deg9332 = {
    id: "MK",
    displayName: "Macedònia",
    regionId: "039",
    hasTimeZones: true
}, _deg9333 = {
    id: "MQ",
    displayName: "Martinica",
    regionId: "029",
    hasTimeZones: true
}, _deg9334 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _deg9335 = {
    id: "PS",
    displayName: "Palestina",
    regionId: "145",
    hasTimeZones: true
}, _deg9336 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _deg9337 = {
    id: "TH",
    displayName: "Tailàndia",
    regionId: "035",
    hasTimeZones: true
}, _deg9338 = {
    id: "VE",
    displayName: "Veneçuela",
    regionId: "005",
    hasTimeZones: true
}, _deg9339 = {
    "0": "avui",
    "1": "demà",
    "2": "demà passat",
    "-2": "abans-d’ahir",
    "-1": "ahir"
}, _deg9340 = {
    "0": "aquest divendres",
    "1": "divendres que ve",
    "-1": "divendres passat"
}, _deg9341 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _deg9342 = {
    id: "AF",
    displayName: "Afganistan",
    regionId: "034",
    hasTimeZones: true
}, _deg9343 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _deg9344 = {
    id: "SK",
    displayName: "Eslovàquia",
    regionId: "151",
    hasTimeZones: true
}, _deg9345 = {
    id: "GL",
    displayName: "Grenlàndia",
    regionId: "021",
    hasTimeZones: true
}, _deg9346 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _deg9347 = {
    id: "CK",
    displayName: "Illes Cook",
    regionId: "061",
    hasTimeZones: true
}, _deg9348 = {
    id: "KZ",
    displayName: "Kazakhstan",
    regionId: "143",
    hasTimeZones: true
}, _deg9349 = {
    id: "MG",
    displayName: "Madagascar",
    regionId: "014",
    hasTimeZones: true
}, _deg9350 = {
    id: "MR",
    displayName: "Mauritània",
    regionId: "011",
    hasTimeZones: true
}, _deg9351 = {
    id: "FM",
    displayName: "Micronèsia",
    regionId: "057",
    hasTimeZones: true
}, _deg9352 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _deg9353 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _deg9354 = {
    id: "GB",
    displayName: "Regne Unit",
    regionId: "154",
    hasTimeZones: true
}, _deg9355 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _deg9356 = {
    id: "SC",
    displayName: "Seychelles",
    regionId: "014",
    hasTimeZones: true
}, _deg9357 = {
    id: "UZ",
    displayName: "Uzbekistan",
    regionId: "143",
    hasTimeZones: true
}, _deg9358 = {
    id: "AZ",
    displayName: "Azerbaidjan",
    regionId: "145",
    hasTimeZones: true
}, _deg9359 = {
    id: "BD",
    displayName: "Bangla Desh",
    regionId: "034",
    hasTimeZones: true
}, _deg9360 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _deg9361 = {
    id: "IM",
    displayName: "Illa de Man",
    regionId: "154",
    hasTimeZones: true
}, _deg9362 = {
    id: "FO",
    displayName: "Illes Fèroe",
    regionId: "154",
    hasTimeZones: true
}, _deg9363 = {
    id: "AX",
    displayName: "Illes Åland",
    regionId: "154",
    hasTimeZones: true
}, _deg9364 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _deg9365 = {
    id: "LC",
    displayName: "Saint Lucia",
    regionId: "029",
    hasTimeZones: true
}, _deg9366 = {
    id: "SZ",
    displayName: "Swazilàndia",
    regionId: "018",
    hasTimeZones: true
}, _deg9367 = {
    id: "TJ",
    displayName: "Tadjikistan",
    regionId: "143",
    hasTimeZones: true
}, _deg9368 = {
    "0": "aquesta setmana",
    "1": "la setmana que ve",
    "-1": "la setmana passada"
}, _deg9369 = {
    relative: _deg9156
}, _deg9370 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _deg9371 = {
    id: "US",
    displayName: "Estats Units",
    regionId: "021",
    hasTimeZones: true
}, _deg9372 = {
    id: "KY",
    displayName: "Illes Caiman",
    regionId: "029",
    hasTimeZones: true
}, _deg9373 = {
    id: "SB",
    displayName: "Illes Salomó",
    regionId: "054",
    hasTimeZones: true
}, _deg9374 = {
    id: "KG",
    displayName: "Kirguizistan",
    regionId: "143",
    hasTimeZones: true
}, _deg9375 = {
    id: "NZ",
    displayName: "Nova Zelanda",
    regionId: "053",
    hasTimeZones: true
}, _deg9376 = {
    id: "SH",
    displayName: "Saint Helena",
    regionId: "011",
    hasTimeZones: true
}, _deg9377 = {
    id: "MF",
    displayName: "Saint Martin",
    regionId: "029",
    hasTimeZones: true
}, _deg9378 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _deg9379 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _deg9380 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _deg9381 = {
    id: "142",
    displayName: "Àsia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _deg9382 = {
    d: "d/M/y – d/M/y GGGG",
    M: "d/M/y – d/M/y GGGG",
    y: "d/M/y – d/M/y GGGG"
}, _deg9383 = {
    id: "029",
    displayName: "Carib",
    hasTimeZones: false,
    parentRegionId: "019"
}, _deg9384 = {
    id: "KR",
    displayName: "Corea del Sud",
    regionId: "030",
    hasTimeZones: true
}, _deg9385 = {
    id: "CI",
    displayName: "Costa d’Ivori",
    regionId: "011",
    hasTimeZones: true
}, _deg9386 = {
    id: "GW",
    displayName: "Guinea Bissau",
    regionId: "011",
    hasTimeZones: true
}, _deg9387 = {
    id: "HM",
    displayName: "Illa Heard i Illes McDonald",
    hasTimeZones: false
}, _deg9388 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _deg9389 = {
    id: "NL",
    displayName: "Països Baixos",
    regionId: "155",
    hasTimeZones: true
}, _deg9390 = {
    id: "SS",
    displayName: "Sudan del Sud",
    regionId: "014",
    hasTimeZones: true
}, _deg9391 = {
    id: "TF",
    displayName: "Territoris Francesos del Sud",
    hasTimeZones: true
}, _deg9392 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _deg9393 = {
    id: "SA",
    displayName: "Aràbia Saudita",
    regionId: "145",
    hasTimeZones: true
}, _deg9394 = {
    id: "KP",
    displayName: "Corea del Nord",
    regionId: "030",
    hasTimeZones: true
}, _deg9395 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _deg9396 = {
    id: "FK",
    displayName: "Illes Malvines",
    regionId: "005",
    hasTimeZones: true
}, _deg9397 = {
    id: "MH",
    displayName: "Illes Marshall",
    regionId: "057",
    hasTimeZones: true
}, _deg9398 = {
    id: "PN",
    displayName: "Illes Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _deg9399 = {
    id: "NC",
    displayName: "Nova Caledònia",
    regionId: "054",
    hasTimeZones: true
}, _deg9400 = {
    id: "TL",
    displayName: "Timor Oriental",
    regionId: "035",
    hasTimeZones: true
}, _deg9401 = {
    id: "002",
    displayName: "Àfrica",
    hasTimeZones: false,
    parentRegionId: "001"
}, _deg9402 = {
    relative: _deg9172
}, _deg9403 = {
    relative: _deg9173
}, _deg9404 = {
    id: "019",
    displayName: "Amèrica",
    hasTimeZones: false,
    parentRegionId: "001"
}, _deg9405 = {
    id: "009",
    displayName: "Oceania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _deg9406 = {
    id: "CZ",
    displayName: "República Txeca",
    regionId: "151",
    hasTimeZones: true
}, _deg9407 = {
    id: "WF",
    displayName: "Wallis i Futuna",
    regionId: "061",
    hasTimeZones: true
}, _deg9408 = {
    "0": "aquest trimestre",
    "1": "el trimestre que ve",
    "-1": "el trimestre passat"
}, _deg9409 = {
    id: "BQ",
    displayName: "Carib Neerlandès",
    regionId: "029",
    hasTimeZones: true
}, _deg9410 = {
    id: "CD",
    displayName: "Congo - Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _deg9411 = {
    id: "GF",
    displayName: "Guaiana Francesa",
    regionId: "005",
    hasTimeZones: true
}, _deg9412 = {
    id: "MO",
    displayName: "Macau (RAE Xina)",
    regionId: "030",
    hasTimeZones: true
}, _deg9413 = {
    id: "BL",
    displayName: "Saint Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _deg9414 = {
    id: "AG",
    displayName: "Antigua i Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _deg9415 = {
    id: "VA",
    displayName: "Ciutat del Vaticà",
    regionId: "039",
    hasTimeZones: true
}, _deg9416 = {
    id: "GQ",
    displayName: "Guinea Equatorial",
    regionId: "017",
    hasTimeZones: true
}, _deg9417 = {
    id: "RE",
    displayName: "Illa de la Reunió",
    regionId: "014",
    hasTimeZones: true
}, _deg9418 = {
    id: "054",
    displayName: "Melanèsia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _deg9419 = {
    id: "PG",
    displayName: "Papua Nova Guinea",
    regionId: "054",
    hasTimeZones: true
}, _deg9420 = {
    id: "061",
    displayName: "Polinèsia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _deg9421 = {
    id: "EH",
    displayName: "Sàhara Occidental",
    regionId: "015",
    hasTimeZones: true
}, _deg9422 = {
    id: "TT",
    displayName: "Trinitat i Tobago",
    regionId: "029",
    hasTimeZones: true
}, _deg9423 = [ "diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte" ], _deg9424 = {
    relative: _deg9243
}, _deg9425 = {
    relative: _deg9244
}, _deg9426 = {
    relative: _deg9245
}, _deg9427 = {
    id: "MM",
    displayName: "Myanmar (Birmània)",
    regionId: "035",
    hasTimeZones: true
}, _deg9428 = {
    id: "PF",
    displayName: "Polinèsia Francesa",
    regionId: "061",
    hasTimeZones: true
}, _deg9429 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _deg9430 = {
    id: "053",
    displayName: "Australàsia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _deg9431 = {
    id: "CG",
    displayName: "Congo - Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _deg9432 = {
    id: "AE",
    displayName: "Emirats Àrabs Units",
    regionId: "145",
    hasTimeZones: true
}, _deg9433 = {
    id: "UM",
    displayName: "Illes Perifèriques Menors dels EUA",
    hasTimeZones: true
}, _deg9434 = {
    id: "ST",
    displayName: "São Tomé i Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _deg9435 = {
    id: "IO",
    displayName: "Territori Britànic de l’Oceà Índic",
    hasTimeZones: true
}, _deg9436 = {
    id: "BA",
    displayName: "Bòsnia i Hercegovina",
    regionId: "039",
    hasTimeZones: true
}, _deg9437 = {
    id: "HK",
    displayName: "Hong Kong (RAE Xina)",
    regionId: "030",
    hasTimeZones: true
}, _deg9438 = {
    id: "TC",
    displayName: "Illes Turks i Caicos",
    regionId: "029",
    hasTimeZones: true
}, _deg9439 = {
    id: "DO",
    displayName: "República Dominicana",
    regionId: "029",
    hasTimeZones: true
}, _deg9440 = {
    id: "AS",
    displayName: "Samoa Nord-americana",
    regionId: "061",
    hasTimeZones: true
}, _deg9441 = {
    id: "SJ",
    displayName: "Svalbard i Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _deg9442 = {
    id: "143",
    displayName: "Àsia central",
    hasTimeZones: false,
    parentRegionId: "142"
}, _deg9443 = {
    relative: _deg9340
}, _deg9444 = {
    id: "030",
    displayName: "Àsia oriental",
    hasTimeZones: false,
    parentRegionId: "142"
}, _deg9445 = {
    id: "017",
    displayName: "Àfrica central",
    hasTimeZones: false,
    parentRegionId: "002"
}, _deg9446 = {
    id: "013",
    displayName: "Amèrica Central",
    hasTimeZones: false,
    parentRegionId: "019"
}, _deg9447 = {
    id: "005",
    displayName: "Amèrica del Sud",
    hasTimeZones: false,
    parentRegionId: "019"
}, _deg9448 = {
    id: "151",
    displayName: "Europa oriental",
    hasTimeZones: false,
    parentRegionId: "150"
}, _deg9449 = {
    id: "ZA",
    displayName: "República de Sud-àfrica",
    regionId: "018",
    hasTimeZones: true
}, _deg9450 = {
    id: "014",
    displayName: "Àfrica oriental",
    hasTimeZones: false,
    parentRegionId: "002"
}, _deg9451 = {
    id: "034",
    displayName: "Àsia meridional",
    hasTimeZones: false,
    parentRegionId: "142"
}, _deg9452 = {
    id: "145",
    displayName: "Àsia occidental",
    hasTimeZones: false,
    parentRegionId: "142"
}, _deg9453 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _deg9454 = {
    id: "MP",
    displayName: "Illes Mariannes del Nord",
    regionId: "057",
    hasTimeZones: true
}, _deg9455 = {
    id: "VG",
    displayName: "Illes Verges Britàniques",
    regionId: "029",
    hasTimeZones: true
}, _deg9456 = {
    id: "CF",
    displayName: "República Centreafricana",
    regionId: "017",
    hasTimeZones: true
}, _deg9457 = {
    id: "PM",
    displayName: "Saint-Pierre-et-Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _deg9458 = {
    d: "E d/M/y – E d/M/y GGGG",
    M: "E d/M/y – E d/M/y GGGG",
    y: "E d/M/y – E d/M/y GGGG"
}, _deg9459 = {
    id: "039",
    displayName: "Europa meridional",
    hasTimeZones: false,
    parentRegionId: "150"
}, _deg9460 = {
    id: "155",
    displayName: "Europa occidental",
    hasTimeZones: false,
    parentRegionId: "150"
}, _deg9461 = {
    id: "GS",
    displayName: "Illes Geòrgia del Sud i Sandwich del Sud",
    hasTimeZones: true
}, _deg9462 = {
    id: "KN",
    displayName: "Saint Christopher i Nevis",
    regionId: "029",
    hasTimeZones: true
}, _deg9463 = {
    id: "018",
    displayName: "Àfrica meridional",
    hasTimeZones: false,
    parentRegionId: "002"
}, _deg9464 = {
    id: "011",
    displayName: "Àfrica occidental",
    hasTimeZones: false,
    parentRegionId: "002"
}, _deg9465 = {
    id: "035",
    displayName: "Àsia sud-oriental",
    hasTimeZones: false,
    parentRegionId: "142"
}, _deg9466 = {
    d: "d–d MMM 'de' y G",
    M: "d MMM – d MMM 'de' y G",
    y: "d MMM 'de' y – d MMM 'de' y G"
}, _deg9467 = [ "gen.", "febr.", "març", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des." ], _deg9468 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _deg9469 = {
    id: "154",
    displayName: "Europa septentrional",
    hasTimeZones: false,
    parentRegionId: "150"
}, _deg9470 = {
    id: "VI",
    displayName: "Illes Verges Nord-americanes",
    regionId: "029",
    hasTimeZones: true
}, _deg9471 = {
    id: "015",
    displayName: "Àfrica septentrional",
    hasTimeZones: false,
    parentRegionId: "002"
}, _deg9472 = {
    id: "021",
    displayName: "Amèrica septentrional",
    hasTimeZones: false,
    parentRegionId: "019"
}, _deg9473 = {
    id: "057",
    displayName: "Regió de la Micronèsia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _deg9474 = {
    id: "VC",
    displayName: "Saint Vincent i les Grenadines",
    regionId: "029",
    hasTimeZones: true
}, _deg9475 = {
    d: "d–d MMMM 'de' y G",
    M: "d MMMM – d MMMM 'de' y G",
    y: "d MMMM 'de' y – d MMMM 'de' y G"
}, _deg9476 = {
    future: _deg992,
    past: _deg991
}, _deg9477 = {
    future: _deg998,
    past: _deg997
}, _deg9478 = {
    future: _deg9109,
    past: _deg973
}, _deg9479 = {
    future: _deg9110,
    past: _deg973
}, _deg9480 = {
    future: _deg9111,
    past: _deg974
}, _deg9481 = {
    future: _deg9102,
    past: _deg9101
}, _deg9482 = {
    future: _deg9104,
    past: _deg9103
}, _deg9483 = {
    d: "E d MMM – E d MMM 'de' y G",
    M: "E d MMM – E d MMM 'de' y G",
    y: "E d MMM 'de' y – E d MMM 'de' y G"
}, _deg9484 = {
    future: _deg9116,
    past: _deg987
}, _deg9485 = {
    future: _deg9129,
    past: _deg991
}, _deg9486 = {
    future: _deg9131,
    past: _deg993
}, _deg9487 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _deg9488 = {
    future: _deg9133,
    past: _deg997
}, _deg9489 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _deg9490 = [ "gener", "febrer", "març", "abril", "maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre" ], _deg9491 = {
    future: _deg9136,
    past: _deg999
}, _deg9492 = {
    future: _deg9138,
    past: _deg9101
}, _deg9493 = {
    future: _deg9139,
    past: _deg9103
}, _deg9494 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _deg9495 = {
    future: _deg9143,
    past: _deg9105
}, _deg9496 = {
    future: _deg9144,
    past: _deg9106
}, _deg9497 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _deg9498 = {
    d: "E, d MMMM – E, d MMMM 'de' y G",
    M: "E, d MMMM – E, d MMMM 'de' y G",
    y: "E, d MMMM 'de' y – E, d MMMM 'de' y G"
}, _deg9499 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _deg9500 = {
    future: _deg9155,
    past: _deg9112
}, _deg9501 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _deg9502 = {
    displayName: "h",
    relativeTime: _deg9478
}, _deg9503 = {
    displayName: "h",
    relativeTime: _deg9479
}, _deg9504 = {
    displayName: "s",
    relativeTime: _deg9480
}, _deg9505 = {
    abbreviated: _deg94,
    narrow: [ "1", "2", "3", "4" ],
    wide: _deg9170
}, _deg9506 = {
    future: _deg9190,
    past: _deg9130
}, _deg9507 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _deg9508 = {
    displayName: "min",
    relativeTime: _deg9484
}, _deg9509 = [ "de gener", "de febrer", "de març", "d’abril", "de maig", "de juny", "de juliol", "d’agost", "de setembre", "d’octubre", "de novembre", "de desembre" ], _deg9510 = {
    midnight: "mitjanit",
    am: "a. m.",
    pm: "p. m.",
    morning1: "mat.",
    morning2: "matí",
    afternoon1: "md",
    afternoon2: "tarda",
    evening1: "vespre",
    night1: "nit"
}, _deg9511 = {
    displayName: "hora",
    relativeTime: _deg9491
}, _deg9512 = {
    displayName: "minut",
    relativeTime: _deg9495
}, _deg9513 = {
    midnight: "mitjanit",
    am: "a. m.",
    pm: "p. m.",
    morning1: "matinada",
    morning2: "matí",
    afternoon1: "migdia",
    afternoon2: "tarda",
    evening1: "vespre",
    night1: "nit"
}, _deg9514 = {
    displayName: "segon",
    relative: [ "ara" ],
    relativeTime: _deg9496
}, _deg9515 = {
    decimal: ",",
    group: ".",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _deg9516 = {
    symbols: _deg9515
}, _deg9517 = {
    displayName: "any",
    relative: _deg9128,
    relativeTime: _deg9476
}, _deg9518 = {
    abbreviated: _deg9137,
    narrow: _deg9137,
    wide: _deg9137
}, _deg9519 = {
    displayName: "mes",
    relative: _deg9115,
    relativeTime: _deg9477
}, _deg9520 = {
    format: _deg9392,
    numeric: _deg95,
    standAlone: _deg9392
}, _deg9521 = {
    displayName: "any",
    relative: _deg9128,
    relativeTime: _deg9485
}, _deg9522 = {
    displayName: "trim.",
    relative: _deg9145,
    relativeTime: _deg9481
}, _deg9523 = {
    displayName: "setm.",
    relative: _deg9151,
    relativeTime: _deg9482
}, _deg9524 = {
    displayName: "mes",
    relative: _deg9146,
    relativeTime: _deg9488
}, _deg9525 = {
    displayName: "dia",
    relative: _deg9339,
    relativeTime: _deg9486
}, _deg9526 = {
    symbols: _deg9515,
    digits: "renderSpelloutCardinal"
}, _deg9527 = {
    displayName: "trim.",
    relative: _deg9171,
    relativeTime: _deg9492
}, _deg9528 = {
    displayName: "setm.",
    relative: _deg9213,
    relativeTime: _deg9493
}, _deg9529 = {
    symbols: _deg9515,
    digits: "renderSpelloutCardinalFinancial"
}, _deg9530 = {
    abbreviated: _deg9107,
    narrow: _deg981,
    wide: _deg9423,
    "short": _deg9107
}, _deg9531 = {
    displayName: "setmana",
    relative: _deg9368,
    relativeTime: _deg9500
}, _deg9532 = {
    displayName: "trimestre",
    relative: _deg9408,
    relativeTime: _deg9506
}, _deg9533 = {
    abbreviated: _deg9429,
    narrow: _deg9429,
    wide: _deg9429
}, _deg9534 = {
    format: _deg9533
}, _deg9535 = {
    format: _deg9505,
    standAlone: _deg9505
}, _deg9536 = {
    abbreviated: _deg9467,
    narrow: _deg9169,
    wide: _deg9490
}, _deg9537 = {
    abbreviated: _deg9489,
    narrow: _deg9153,
    wide: _deg9489
}, _deg9538 = {
    abbreviated: _deg9494,
    narrow: _deg9137,
    wide: _deg9494
}, _deg9539 = {
    abbreviated: _deg9497,
    narrow: _deg9153,
    wide: _deg9497
}, _deg9540 = {
    fullDate: "EEEE, dd MMMM UU",
    longDate: "d MMMM U",
    mediumDate: "d MMM U",
    shortDate: "d/M/y",
    fullTime: "H:mm:ss zzzz",
    longTime: "H:mm:ss z",
    mediumTime: "H:mm:ss",
    shortTime: "H:mm",
    shortDateTime: "d/M/y H:mm",
    mediumDateTime: "d MMM U H:mm:ss",
    longDateTime: "d MMMM U H:mm:ss z",
    fullDateTime: "EEEE, dd MMMM UU H:mm:ss zzzz"
}, _deg9541 = {
    abbreviated: _deg9467,
    narrow: _deg9169,
    wide: _deg9509
}, _deg9542 = {
    abbreviated: _deg9487,
    narrow: _deg9137,
    wide: _deg9507
}, _deg9543 = {
    abbreviated: _deg9499,
    narrow: _deg9153,
    wide: _deg9499
}, _deg9544 = {
    abbreviated: _deg9501,
    narrow: _deg9137,
    wide: _deg9501
}, _deg9545 = {
    fullDate: "EEEE d MMMM 'de' y G",
    longDate: "d MMMM 'de' y G",
    mediumDate: "d/M/y G",
    shortDate: "d/M/yy GGGGG",
    fullTime: "H:mm:ss zzzz",
    longTime: "H:mm:ss z",
    mediumTime: "H:mm:ss",
    shortTime: "H:mm",
    shortDateTime: "d/M/yy GGGGG, H:mm",
    mediumDateTime: "d/M/y G, H:mm:ss",
    longDateTime: "d MMMM 'de' y G, H:mm:ss z",
    fullDateTime: "EEEE d MMMM 'de' y G, H:mm:ss zzzz"
}, _deg9546 = {
    "1000": _deg91,
    "10000": _deg96,
    "100000": _deg98,
    "1000000": _deg92,
    "10000000": _deg99,
    "100000000": _deg923,
    "1000000000": _deg943,
    "10000000000": _deg910,
    "100000000000": _deg924,
    "1000000000000": _deg93,
    "10000000000000": _deg911,
    "100000000000000": _deg925
}, _deg9547 = {
    format: _deg9518,
    standAlone: _deg9518
}, _deg9548 = {
    "1000": _deg912,
    "10000": _deg926,
    "100000": _deg944,
    "1000000": _deg913,
    "10000000": _deg945,
    "100000000": _deg954,
    "1000000000": _deg970,
    "10000000000": _deg946,
    "100000000000": _deg955,
    "1000000000000": _deg914,
    "10000000000000": _deg947,
    "100000000000000": _deg956
}, _deg9549 = {
    abbreviated: _deg9513,
    narrow: _deg9510,
    wide: _deg9513
}, _deg9550 = {
    abbreviated: _deg9513,
    narrow: _deg9513,
    wide: _deg9513
}, _deg9551 = {
    format: _deg9530,
    standAlone: _deg9530
}, _deg9552 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _deg9553 = {
    "1000": _deg962,
    "10000": _deg978,
    "100000": _deg982,
    "1000000": _deg968,
    "10000000": _deg983,
    "100000000": _deg994,
    "1000000000": _deg9142,
    "10000000000": _deg9150,
    "100000000000": _deg9159,
    "1000000000000": _deg969,
    "10000000000000": _deg984,
    "100000000000000": _deg995
}, _deg9554 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _deg9555 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _deg9556 = {
    format: _deg9541,
    standAlone: _deg9536
}, _deg9557 = {
    format: _deg9542,
    standAlone: _deg9542
}, _deg9558 = {
    d: "d",
    E: "ccc",
    Ed: "E d",
    Gy: "y G",
    GyMMM: "LLL y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E, d MMM y G",
    GyMMMM: "LLLL 'de' y G",
    GyMMMMd: "d MMMM 'de' y G",
    GyMMMMEd: "E, d MMMM 'de' y G",
    h: "h a",
    H: "H",
    hm: "h:mm a",
    Hm: "H:mm",
    hms: "h:mm:ss a",
    Hms: "H:mm:ss",
    M: "L",
    Md: "d/M",
    MEd: "E d/M",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E, d MMM",
    MMMMd: "d MMMM",
    MMMMEd: "E, d MMMM",
    ms: "mm:ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M/y G",
    yyyyMd: "d/M/y G",
    yyyyMEd: "E, d.M.y G",
    yyyyMMM: "LLL y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E, d MMM y G",
    yyyyMMMM: "LLLL 'de' y G",
    yyyyMMMMd: "d MMMM 'de' y G",
    yyyyMMMMEd: "E, d MMMM 'de' y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _deg9559 = {
    basic: _deg9540,
    cldr: _deg9552
}, _deg9560 = {
    "long": _deg9553,
    "short": _deg9546,
    "default": "#,##0.###"
}, _deg9561 = {
    format: _deg9549,
    standAlone: _deg9550
}, _deg9562 = {
    d: {
        d: "d–d"
    },
    h: _deg915,
    H: {
        H: "HH–HH"
    },
    hm: _deg9140,
    Hm: _deg971,
    hmv: _deg9160,
    Hmv: _deg985,
    hv: _deg948,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _deg988,
    MEd: _deg9124,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _deg958,
    MMMEd: _deg9125,
    y: {
        y: "U–U"
    },
    yM: _deg975,
    yMd: _deg9341,
    yMEd: _deg9468,
    yMMM: _deg976,
    yMMMd: _deg9152,
    yMMMEd: _deg9453,
    yMMMM: _deg989
}, _deg9563 = {
    basic: _deg9545,
    cldr: _deg9558
}, _deg9564 = {
    beforeCurrency: _deg9554,
    afterCurrency: _deg9554
}, _deg9565 = {
    d: {
        d: "d–d"
    },
    h: _deg915,
    H: {
        H: "H–H"
    },
    hm: _deg9135,
    Hm: _deg971,
    hmv: _deg9160,
    Hmv: _deg985,
    hv: _deg948,
    Hv: {
        H: "H–H v"
    },
    M: {
        M: "M–M"
    },
    Md: _deg949,
    MEd: _deg986,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _deg957,
    MMMEd: _deg9108,
    y: {
        y: "y–y G"
    },
    yM: _deg996,
    yMd: _deg9382,
    yMEd: _deg9458,
    yMMM: _deg9113,
    yMMMd: _deg9466,
    yMMMEd: _deg9483,
    yMMMM: _deg9148,
    yMMMMd: _deg9475,
    yMMMMEd: _deg9498
}, _deg9566 = {
    "short": _deg9548,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _deg9564
}, _deg9567 = {
    abbreviated: _deg9555,
    narrow: _deg9555,
    wide: _deg9555
}, _deg9568 = {
    format: _deg9567
}, _deg9569 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _deg9560,
    currency: _deg9566,
    percent: {
        "default": "#,##0%"
    }
}, _deg9570 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _deg9571 = {
    dayParts: _deg9534,
    days: _deg9568,
    months: _deg9568,
    years: _deg9568,
    zodiacs: _deg9534
}, _deg9572 = {
    era: {
        displayName: "era"
    },
    year: _deg9521,
    "year-short": _deg9521,
    "year-narrow": _deg9517,
    quarter: _deg9532,
    "quarter-short": _deg9527,
    "quarter-narrow": _deg9522,
    month: _deg9524,
    "month-short": _deg9524,
    "month-narrow": _deg9519,
    week: _deg9531,
    "week-short": _deg9528,
    "week-narrow": _deg9523,
    day: _deg9525,
    "day-short": _deg9525,
    "day-narrow": _deg9525,
    weekday: _deg972,
    dayperiod: _deg927,
    hour: _deg9511,
    "hour-short": _deg9502,
    "hour-narrow": _deg9503,
    minute: _deg9512,
    "minute-short": _deg9508,
    "minute-narrow": _deg9508,
    second: _deg9514,
    "second-short": _deg9504,
    "second-narrow": _deg9504,
    zone: _deg916,
    sun: _deg9424,
    "sun-short": _deg9162,
    "sun-narrow": _deg9162,
    mon: _deg9402,
    "mon-short": _deg9163,
    "mon-narrow": _deg9163,
    tue: _deg9403,
    "tue-short": _deg9164,
    "tue-narrow": _deg9164,
    wed: _deg9425,
    "wed-short": _deg9165,
    "wed-narrow": _deg9165,
    thu: _deg9369,
    "thu-short": _deg9166,
    "thu-narrow": _deg9166,
    fri: _deg9443,
    "fri-short": _deg9167,
    "fri-narrow": _deg9167,
    sat: _deg9426,
    "sat-short": _deg9168,
    "sat-narrow": _deg9168
}, _deg9573 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _deg9572
}, _deg9574 = {
    dateFormats: _deg9563,
    datePartsOrder: "dmy",
    dateIntervalFormats: _deg9565,
    dateIntervalFallbackFormat: "{0} - {1}",
    dayNames: _deg9551,
    dayPeriods: _deg9561,
    monthNames: _deg9557,
    eraNames: _deg963,
    quarterNames: _deg9535,
    fields: _deg9572
}, _deg9575 = {
    dateFormats: _deg9559,
    datePartsOrder: "dmy",
    dateIntervalFormats: _deg9562,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _deg9551,
    dayPeriods: _deg9561,
    cyclicNames: _deg9571,
    monthNames: _deg9547,
    monthPatterns: _deg9520,
    quarterNames: _deg9535,
    fields: _deg9572
};

inter.id = "ca";

inter.delimiters = {
    quotationStart: "«",
    quotationEnd: "»",
    alternateQuotationStart: "“",
    alternateQuotationEnd: "”"
};

inter.listPatterns = {
    "default": _deg9321,
    unit: _deg9321,
    unitNarrow: _deg9321,
    unitShort: _deg9321
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} força G",
                other: "{0} força G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} metre per segon al quadrat",
                other: "{0} metres per segon al quadrat"
            },
            angleRevolution: {
                one: "{0} revolució",
                other: "{0} revolucions"
            },
            angleRadian: {
                one: "{0} radiant",
                other: "{0} radiants"
            },
            angleDegree: {
                one: "{0} grau",
                other: "{0} graus"
            },
            angleArcMinute: {
                one: "{0} minut d'arc",
                other: "{0} minuts d'arc"
            },
            angleArcSecond: {
                one: "{0} segon d'arc",
                other: "{0} segons d'arc"
            },
            areaSquareKilometer: {
                one: "{0} quilòmetre quadrat",
                other: "{0} quilòmetres quadrats"
            },
            areaHectare: {
                one: "{0} hectàrea",
                other: "{0} hectàrees"
            },
            areaSquareMeter: {
                one: "{0} metre quadrat",
                other: "{0} metres quadrats"
            },
            areaSquareCentimeter: {
                one: "{0} centímetre quadrat",
                other: "{0} centímetres quadrats"
            },
            areaSquareMile: {
                one: "{0} milla quadrada",
                other: "{0} milles quadrades"
            },
            areaAcre: {
                one: "{0} acre",
                other: "{0} acres"
            },
            areaSquareYard: {
                one: "{0} iarda quadrada",
                other: "{0} iardes quadrades"
            },
            areaSquareFoot: {
                one: "{0} peu quadrat",
                other: "{0} peus quadrats"
            },
            areaSquareInch: {
                one: "{0} polzada quadrada",
                other: "{0} polzades quadrades"
            },
            concentrKarat: _deg990,
            consumptionLiterPerKilometer: {
                one: "{0} litre per quilòmetre",
                other: "{0} litres per quilòmetre"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} litres per 100 quilòmetres",
                other: "{0} litres per 100 quilòmetres"
            },
            consumptionMilePerGallon: {
                one: "{0} milla per galó",
                other: "{0} milles per galó"
            },
            digitalTerabyte: {
                one: "{0} terabyte",
                other: "{0} terabytes"
            },
            digitalTerabit: {
                one: "{0} terabit",
                other: "{0} terabits"
            },
            digitalGigabyte: {
                one: "{0} gigabyte",
                other: "{0} gigabytes"
            },
            digitalGigabit: {
                one: "{0} gigabit",
                other: "{0} gigabits"
            },
            digitalMegabyte: {
                one: "{0} megabyte",
                other: "{0} megabytes"
            },
            digitalMegabit: {
                one: "{0} megabit",
                other: "{0} megabits"
            },
            digitalKilobyte: {
                one: "{0} quilobyte",
                other: "{0} quilobytes"
            },
            digitalKilobit: {
                one: "{0} quilobit",
                other: "{0} quilobits"
            },
            digitalByte: {
                one: "{0} byte",
                other: "{0} bytes"
            },
            digitalBit: _deg959,
            durationCentury: _deg979,
            durationYear: _deg960,
            durationMonth: _deg964,
            durationWeek: {
                one: "{0} setmana",
                other: "{0} setmanes"
            },
            durationDay: _deg961,
            durationHour: {
                one: "{0} hora",
                other: "{0} hores"
            },
            durationMinute: {
                one: "{0} minut",
                other: "{0} minuts"
            },
            durationSecond: {
                one: "{0} segon",
                other: "{0} segons"
            },
            durationMillisecond: {
                one: "{0} mil·lisegon",
                other: "{0} mil·lisegons"
            },
            durationMicrosecond: {
                one: "{0} microsegon",
                other: "{0} microsegons"
            },
            durationNanosecond: {
                one: "{0} nanosegon",
                other: "{0} nanosegons"
            },
            electricAmpere: {
                one: "{0} ampere",
                other: "{0} amperes"
            },
            electricMilliampere: {
                one: "{0} mil·liampere",
                other: "{0} mil·liamperes"
            },
            electricOhm: {
                one: "{0} ohm",
                other: "{0} ohms"
            },
            electricVolt: {
                one: "{0} volt",
                other: "{0} volts"
            },
            energyKilocalorie: _deg9127,
            energyCalorie: {
                one: "{0} caloria",
                other: "{0} calories"
            },
            energyFoodcalorie: _deg9127,
            energyKilojoule: {
                one: "{0} quilojoule",
                other: "{0} quilojoules"
            },
            energyJoule: {
                one: "{0} joule",
                other: "{0} joules"
            },
            energyKilowattHour: {
                one: "{0} quilowatt hora",
                other: "{0} quilowatts hora"
            },
            frequencyGigahertz: {
                one: "{0} gigahertz",
                other: "{0} gigahertzs"
            },
            frequencyMegahertz: {
                one: "{0} megahertz",
                other: "{0} megahertzs"
            },
            frequencyKilohertz: {
                one: "{0} quilohertz",
                other: "{0} quilohertzs"
            },
            frequencyHertz: {
                one: "{0} hertz",
                other: "{0} hertzs"
            },
            lengthKilometer: {
                one: "{0} quilòmetre",
                other: "{0} quilòmetres"
            },
            lengthMeter: {
                one: "{0} metre",
                other: "{0} metres"
            },
            lengthDecimeter: {
                one: "{0} decímetres",
                other: "{0} decímetres"
            },
            lengthCentimeter: {
                one: "{0} centímetre",
                other: "{0} centímetres"
            },
            lengthMillimeter: {
                one: "{0} mil·límetre",
                other: "{0} mil·límetres"
            },
            lengthMicrometer: {
                one: "{0} micròmetre",
                other: "{0} micròmetres"
            },
            lengthNanometer: {
                one: "{0} nanòmetre",
                other: "{0} nanòmetres"
            },
            lengthPicometer: {
                one: "{0} picòmetre",
                other: "{0} picòmetres"
            },
            lengthMile: {
                one: "{0} milla",
                other: "{0} milles"
            },
            lengthYard: {
                one: "{0} iarda",
                other: "{0} iardes"
            },
            lengthFoot: {
                one: "{0} peu",
                other: "{0} peus"
            },
            lengthInch: {
                one: "{0} polzada",
                other: "{0} polzades"
            },
            lengthParsec: {
                one: "{0} parsec",
                other: "{0} parsecs"
            },
            lengthLightYear: {
                one: "{0} any llum",
                other: "{0} anys llum"
            },
            lengthAstronomicalUnit: {
                one: "{0} unitat astronòmica",
                other: "{0} unitats astronòmiques"
            },
            lengthNauticalMile: {
                one: "{0} milla nàutica",
                other: "{0} milles nàutiques"
            },
            lengthMileScandinavian: {
                one: "{0} milla escandinava",
                other: "{0} milles escandinaves"
            },
            lightLux: {
                one: "{0} lux",
                other: "{0} lux"
            },
            massMetricTon: {
                one: "{0} tona mètrica",
                other: "{0} tones mètriques"
            },
            massKilogram: {
                one: "{0} quilogram",
                other: "{0} quilograms"
            },
            massGram: {
                one: "{0} gram",
                other: "{0} grams"
            },
            massMilligram: {
                one: "{0} mil·ligram",
                other: "{0} mil·ligrams"
            },
            massMicrogram: {
                one: "{0} microgram",
                other: "{0} micrograms"
            },
            massTon: {
                one: "{0} tona",
                other: "{0} tones"
            },
            massPound: {
                one: "{0} lliura",
                other: "{0} lliures"
            },
            massOunce: {
                one: "{0} unça",
                other: "{0} unces"
            },
            massOunceTroy: {
                one: "{0} unça troy",
                other: "{0} unces troy"
            },
            massCarat: _deg990,
            powerGigawatt: {
                one: "{0} gigawatt",
                other: "{0} gigawatts"
            },
            powerMegawatt: {
                one: "{0} megawatt",
                other: "{0} megawatts"
            },
            powerKilowatt: {
                one: "{0} quilowatt",
                other: "{0} quilowatts"
            },
            powerWatt: {
                one: "{0} watt",
                other: "{0} watts"
            },
            powerMilliwatt: {
                one: "{0} miliwatt",
                other: "{0} miliwatts"
            },
            powerHorsepower: {
                one: "{0} cavall de vapor",
                other: "{0} cavalls de vapor"
            },
            pressureHectopascal: {
                one: "{0} hectopascal",
                other: "{0} hectopascals"
            },
            pressureMillimeterOfMercury: {
                one: "mil·límetre de mercuri",
                other: "{0} mil·límetres de mercuri"
            },
            pressurePoundPerSquareInch: {
                one: "{0} lliura per polzada quadrada",
                other: "{0} lliures per polzada quadrada"
            },
            pressureInchHg: {
                one: "{0} polzada de mercuri",
                other: "{0} polzades de mercuri"
            },
            pressureMillibar: {
                one: "{0} mil·libar",
                other: "{0} mil·libars"
            },
            speedKilometerPerHour: {
                one: "{0} quilòmetre per hora",
                other: "{0} quilòmetres per hora"
            },
            speedMeterPerSecond: {
                one: "{0} metre per segon",
                other: "{0} metres per segon"
            },
            speedMilePerHour: {
                one: "{0} milla per hora",
                other: "{0} milles per hora"
            },
            speedKnot: {
                one: "{0} nus",
                other: "{0} nusos"
            },
            temperatureGeneric: _deg97,
            temperatureCelsius: {
                one: "{0} grau Celsius",
                other: "{0} graus Celsius"
            },
            temperatureFahrenheit: {
                one: "{0} grau Fahrenheit",
                other: "{0} graus Fahrenheit"
            },
            temperatureKelvin: {
                one: "{0} Kelvin",
                other: "{0} Kelvin"
            },
            volumeCubicKilometer: {
                one: "{0} quilòmetre cúbic",
                other: "{0} quilòmetres cúbics"
            },
            volumeCubicMeter: {
                one: "{0} metre cúbic",
                other: "{0} metres cúbics"
            },
            volumeCubicCentimeter: {
                one: "{0} centímetre cúbic",
                other: "{0} centímetres cúbics"
            },
            volumeCubicMile: {
                one: "{0} milla cúbica",
                other: "{0} milles cúbiques"
            },
            volumeCubicYard: {
                one: "{0} iarda cúbica",
                other: "{0} iardes cúbiques"
            },
            volumeCubicFoot: {
                one: "{0} peu cúbic",
                other: "{0} peus cúbics"
            },
            volumeCubicInch: {
                one: "{0} polzada cúbica",
                other: "{0} polzades cúbiques"
            },
            volumeMegaliter: {
                one: "{0} megalitre",
                other: "{0} megalitres"
            },
            volumeHectoliter: {
                one: "{0} hectolitre",
                other: "{0} hectolitres"
            },
            volumeLiter: {
                one: "{0} litre",
                other: "{0} litres"
            },
            volumeDeciliter: {
                one: "{0} decilitre",
                other: "{0} decilitres"
            },
            volumeCentiliter: {
                one: "{0} centilitre",
                other: "{0} centilitres"
            },
            volumeMilliliter: {
                one: "{0} mil·lilitre",
                other: "{0} mil·lilitres"
            },
            volumePintMetric: {
                one: "{0} pinta mètrica",
                other: "{0} pintes mètriques"
            },
            volumeCupMetric: {
                one: "{0} tassa mètrica",
                other: "{0} tasses mètriques"
            },
            volumeAcreFoot: {
                one: "{0} acre-peu",
                other: "{0} acres-peus"
            },
            volumeGallon: {
                one: "{0} galó",
                other: "{0} galons"
            },
            volumeQuart: {
                one: "{0} quart",
                other: "{0} quarts"
            },
            volumePint: {
                one: "{0} pinta",
                other: "{0} pintes"
            },
            volumeCup: _deg980,
            volumeFluidOunce: {
                one: "{0} unça líquida",
                other: "{0} unces líquides"
            },
            volumeTablespoon: {
                one: "{0} cullerada",
                other: "{0} cullerades"
            },
            volumeTeaspoon: {
                one: "{0} culleradeta",
                other: "{0} culleradetes"
            }
        },
        compoundUnit: {
            per: "{0} per {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                one: "{0} G",
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: {
                one: "{0} r",
                other: "{0} r"
            },
            angleRadian: {
                one: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: _deg97,
            angleArcMinute: _deg950,
            angleArcSecond: _deg918,
            areaSquareKilometer: {
                one: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                one: "{0} ha",
                other: "{0} ha"
            },
            areaSquareMeter: {
                one: "{0} m²",
                other: "{0} m²"
            },
            areaSquareCentimeter: _deg951,
            areaSquareMile: {
                one: "{0} mi²",
                other: "{0} mi²"
            },
            areaAcre: {
                one: "{0} ac",
                other: "{0} ac"
            },
            areaSquareYard: {
                one: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: {
                one: "{0} ft²",
                other: "{0} ft²"
            },
            areaSquareInch: {
                one: "{0} in²",
                other: "{0} in²"
            },
            concentrKarat: _deg928,
            consumptionLiterPerKilometer: {
                one: "{0} l/km",
                other: "{0} l/km"
            },
            "consumptionLiterPer-100kilometers": _deg9100,
            consumptionMilePerGallon: {
                one: "{0} mi/gal",
                other: "{0} mi/gal"
            },
            digitalTerabyte: {
                one: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: _deg929,
            digitalMegabit: {
                one: "{0} Mbit",
                other: "{0} Mbit"
            },
            digitalKilobyte: {
                one: "{0} kB",
                other: "{0} kB"
            },
            digitalKilobit: {
                one: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: {
                one: "{0} B",
                other: "{0} B"
            },
            digitalBit: _deg959,
            durationCentury: _deg979,
            durationYear: _deg960,
            durationMonth: _deg964,
            durationWeek: {
                one: "{0} setm.",
                other: "{0} setm."
            },
            durationDay: _deg961,
            durationHour: _deg919,
            durationMinute: _deg950,
            durationSecond: _deg918,
            durationMillisecond: _deg930,
            durationMicrosecond: {
                one: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: _deg965,
            energyCalorie: {
                one: "{0} cal",
                other: "{0} cal"
            },
            energyFoodcalorie: _deg965,
            energyKilojoule: {
                one: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: _deg931,
            lengthKilometer: _deg932,
            lengthMeter: _deg920,
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: _deg933,
            lengthMillimeter: _deg934,
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: {
                one: "{0} pm",
                other: "{0} pm"
            },
            lengthMile: _deg935,
            lengthYard: _deg936,
            lengthFoot: _deg937,
            lengthInch: {
                one: "{0} polz.",
                other: "{0} polz."
            },
            lengthParsec: {
                one: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: {
                one: "{0} any ll.",
                other: "{0} anys ll."
            },
            lengthAstronomicalUnit: {
                one: "{0} ua",
                other: "{0} ua"
            },
            lengthNauticalMile: _deg952,
            lengthMileScandinavian: {
                one: "{0} smi",
                other: "{0} smi"
            },
            lightLux: {
                one: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: {
                one: "{0} t mètrica",
                other: "{0} t mètr."
            },
            massKilogram: _deg938,
            massGram: _deg921,
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: _deg939,
            massTon: {
                one: "{0} t",
                other: "{0} t"
            },
            massPound: _deg940,
            massOunce: _deg941,
            massOunceTroy: {
                one: "{0} ozt",
                other: "{0} ozt"
            },
            massCarat: _deg928,
            powerGigawatt: {
                one: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: {
                one: "{0} kW",
                other: "{0} kW"
            },
            powerWatt: {
                one: "{0} W",
                other: "{0} W"
            },
            powerMilliwatt: {
                one: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: {
                one: "{0} CV",
                other: "{0} CV"
            },
            pressureHectopascal: {
                one: "{0} hPa",
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: _deg977,
            pressurePoundPerSquareInch: {
                one: "{0} psi",
                other: "{0} psi"
            },
            pressureInchHg: _deg966,
            pressureMillibar: {
                one: "{0} mbar",
                other: "{0} mbar"
            },
            speedKilometerPerHour: _deg967,
            speedMeterPerSecond: {
                one: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: {
                one: "{0} mi/h",
                other: "{0} mi/h"
            },
            speedKnot: {
                one: "{0} kn",
                other: "{0} kn"
            },
            temperatureGeneric: _deg97,
            temperatureCelsius: {
                one: "{0} °C",
                other: "{0} °C"
            },
            temperatureFahrenheit: {
                one: "{0} °F",
                other: "{0} °F"
            },
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: {
                one: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMeter: _deg942,
            volumeCubicCentimeter: _deg953,
            volumeCubicMile: {
                one: "{0} mi³",
                other: "{0} mi³"
            },
            volumeCubicYard: {
                one: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: {
                one: "{0} in³",
                other: "{0} in³"
            },
            volumeMegaliter: {
                one: "{0} Ml",
                other: "{0} Ml"
            },
            volumeHectoliter: {
                one: "{0} hl",
                other: "{0} hl"
            },
            volumeLiter: _deg922,
            volumeDeciliter: {
                one: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} cl",
                other: "{0} cl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                other: "{0} ml"
            },
            volumePintMetric: {
                one: "{0} ptm",
                other: "{0} ptm"
            },
            volumeCupMetric: {
                one: "{0} mc",
                other: "{0} mc"
            },
            volumeAcreFoot: {
                one: "{0} ac ft",
                other: "{0} ac ft"
            },
            volumeGallon: {
                one: "{0} gal",
                other: "{0} gal"
            },
            volumeQuart: {
                one: "{0} qt",
                other: "{0} qt"
            },
            volumePint: {
                one: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: _deg980,
            volumeFluidOunce: {
                one: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} cull.",
                other: "{0} cull."
            },
            volumeTeaspoon: {
                one: "{0} cdta.",
                other: "{0} cdta."
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            massStone: {
                other: "{0} st"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                one: "{0}G",
                other: "{0}G"
            },
            angleDegree: _deg97,
            angleArcMinute: {
                one: "{0}′",
                other: "{0}′"
            },
            angleArcSecond: {
                one: "{0}″",
                other: "{0}″"
            },
            areaSquareKilometer: {
                one: "{0}km²",
                other: "{0}km²"
            },
            areaHectare: {
                one: "{0}ha",
                other: "{0}ha"
            },
            areaSquareMeter: {
                one: "{0}m²",
                other: "{0}m²"
            },
            areaSquareCentimeter: _deg951,
            areaSquareMile: {
                one: "{0}mi²",
                other: "{0}mi²"
            },
            areaAcre: {
                one: "{0}ac.",
                other: "{0}ac."
            },
            areaSquareFoot: {
                one: "{0}ft²",
                other: "{0}ft²"
            },
            "consumptionLiterPer-100kilometers": _deg9100,
            digitalMegabyte: _deg929,
            durationCentury: {
                one: "{0} s.",
                other: "{0} s."
            },
            durationYear: _deg960,
            durationMonth: _deg920,
            durationWeek: {
                one: "{0}s",
                other: "{0} s"
            },
            durationDay: {
                one: "{0} d",
                other: "{0} d"
            },
            durationHour: _deg919,
            durationMinute: _deg950,
            durationSecond: _deg918,
            durationMillisecond: _deg930,
            frequencyHertz: _deg931,
            lengthKilometer: _deg932,
            lengthMeter: _deg920,
            lengthCentimeter: _deg933,
            lengthMillimeter: _deg934,
            lengthPicometer: {
                one: "{0}pm",
                other: "{0}pm"
            },
            lengthMile: _deg935,
            lengthYard: _deg936,
            lengthFoot: _deg937,
            lengthInch: {
                one: "{0} in",
                other: "{0} in"
            },
            lengthLightYear: {
                one: "{0} l. y.",
                other: "{0} l. y."
            },
            lengthNauticalMile: _deg952,
            massKilogram: _deg938,
            massGram: _deg921,
            massMicrogram: _deg939,
            massPound: _deg940,
            massOunce: _deg941,
            powerKilowatt: {
                one: "{0}kW",
                other: "{0}kW"
            },
            powerWatt: {
                one: "{0}W",
                other: "{0}W"
            },
            powerHorsepower: {
                one: "{0}CV",
                other: "{0}CV"
            },
            pressureHectopascal: {
                one: "{0}hPa",
                other: "{0}hPa"
            },
            pressureMillimeterOfMercury: _deg977,
            pressureInchHg: _deg966,
            pressureMillibar: {
                one: "{0} mb",
                other: "{0} mb"
            },
            speedKilometerPerHour: _deg967,
            speedMeterPerSecond: {
                one: "{0}m/s",
                other: "{0}m/s"
            },
            speedMilePerHour: {
                one: "{0}mi/h",
                other: "{0}mi/h"
            },
            temperatureGeneric: _deg97,
            temperatureCelsius: {
                one: "{0}°C",
                other: "{0}°"
            },
            temperatureFahrenheit: {
                one: "{0}°F",
                other: "{0}°F"
            },
            volumeCubicKilometer: {
                one: "{0}km³",
                other: "{0}km³"
            },
            volumeCubicMeter: _deg942,
            volumeCubicCentimeter: _deg953,
            volumeCubicMile: {
                one: "{0}mi³",
                other: "{0}mi³"
            },
            volumeLiter: _deg922
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "Hora de: {0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "Horari d’estiu, {0}",
        standard: "Hora estàndard, {0}"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "·", "a", "à", "b", "c", "ç", "d", "e", "é", "è", "f", "g", "h", "i", "í", "ï", "j", "k", "l", "m", "n", "o", "ó", "ò", "p", "q", "r", "s", "t", "u", "ú", "ü", "v", "w", "x", "y", "z" ],
        auxiliary: [ "á", "ă", "â", "å", "ä", "ã", "ā", "æ", "ĕ", "ê", "ë", "ē", "ì", "ĭ", "î", "ī", "ŀ", "ñ", "º", "ŏ", "ô", "ö", "ø", "ō", "œ", "ù", "ŭ", "û", "ū", "ÿ" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ],
        punctuation: [ "\\-", "‐", "–", "—", ",", ";", "\\:", "!", "¡", "?", "¿", ".", "…", "'", "‘", "’", '"', "“", "”", "«", "»", "(", ")", "\\[", "\\]", "§", "@", "*", "/", "\\\\", "\\&", "#", "†", "‡", "′", "″" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0}…",
        "word-initial": "… {0}",
        "word-medial": "{0}… {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _deg9515,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _deg9569,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _deg9569,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _deg9515,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _deg9515,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _deg9515,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _deg9515,
        digits: "renderEthiopic"
    },
    finance: _deg9516,
    fullwide: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _deg9515,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _deg9515,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _deg9515,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _deg9515,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _deg9526,
    hansfin: _deg9529,
    hant: _deg9526,
    hantfin: _deg9529,
    hebr: {
        symbols: _deg9515,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _deg9515,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _deg9526,
    jpanfin: _deg9529,
    kali: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _deg9515,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _deg9515,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _deg9515,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _deg9515,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _deg9515,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _deg9515,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _deg9515,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _deg9515,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _deg9516,
    nkoo: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _deg9515,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _deg9515,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _deg9515,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _deg9515,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _deg9515,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _deg9515,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _deg9516,
    vaii: {
        symbols: _deg9515,
        formats: _deg9569,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _deg9515,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, dd MMMM y G",
                longDate: "d MMMM y G",
                mediumDate: "d MMM y G",
                shortDate: "dd/MM/y GGGGG",
                fullTime: "H:mm:ss zzzz",
                longTime: "H:mm:ss z",
                mediumTime: "H:mm:ss",
                shortTime: "H:mm",
                shortDateTime: "dd/MM/y GGGGG, H:mm",
                mediumDateTime: "d MMM y G, H:mm:ss",
                longDateTime: "d MMMM y G, H:mm:ss z",
                fullDateTime: "EEEE, dd MMMM y G, H:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                M: "L",
                Md: "d/M",
                MEd: "E, d/M",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E d MMM",
                y: "y G",
                E: "ccc",
                Ed: "E d",
                Gy: "y G",
                GyMMM: "LLL y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E, d MMM y G",
                GyMMMM: "LLLL 'de' y G",
                GyMMMMd: "d MMMM 'de' y G",
                GyMMMMEd: "E, d MMMM 'de' y G",
                h: "h a",
                H: "H",
                hm: "h:mm a",
                Hm: "H:mm",
                hms: "h:mm:ss a",
                Hms: "H:mm:ss",
                MMMMd: "d MMMM",
                MMMMEd: "E, d MMMM",
                ms: "mm:ss",
                yyyy: "y G",
                yyyyM: "M/y G",
                yyyyMd: "d/M/y G",
                yyyyMEd: "E, d.M.y G",
                yyyyMMM: "LLL y G",
                yyyyMMMd: "d MMM y G",
                yyyyMMMEd: "E, d MMM y G",
                yyyyMMMM: "LLLL 'de' y G",
                yyyyMMMMd: "d MMMM 'de' y G",
                yyyyMMMMEd: "E, d MMMM 'de' y G",
                yyyyQQQ: "QQQ y G",
                yyyyQQQQ: "QQQQ y G",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: _deg9565,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _deg9551,
        dayPeriods: _deg9561,
        monthNames: _deg9556,
        eraNames: {
            wide: [ "eB" ],
            abbreviated: [ "eB" ]
        },
        quarterNames: _deg9535,
        fields: _deg9572
    },
    chinese: _deg9575,
    coptic: {
        dateFormats: _deg9563,
        datePartsOrder: "dmy",
        dateIntervalFormats: _deg9565,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _deg9551,
        dayPeriods: _deg9561,
        monthNames: {
            format: _deg9539,
            standAlone: _deg9539
        },
        eraNames: _deg9132,
        quarterNames: _deg9535,
        fields: _deg9572
    },
    dangi: _deg9575,
    ethioaa: _deg9573,
    ethiopic: {
        dateFormats: _deg9563,
        datePartsOrder: "dmy",
        dateIntervalFormats: _deg9565,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _deg9551,
        dayPeriods: _deg9561,
        monthNames: {
            format: _deg9543,
            standAlone: _deg9543
        },
        eraNames: _deg9132,
        quarterNames: _deg9535,
        fields: _deg9572
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d MMMM 'de' y",
                longDate: "d MMMM 'de' y",
                mediumDate: "d MMM y",
                shortDate: "d/M/yy",
                fullTime: "H:mm:ss zzzz",
                longTime: "H:mm:ss z",
                mediumTime: "H:mm:ss",
                shortTime: "H:mm",
                shortDateTime: "d/M/yy H:mm",
                mediumDateTime: "d MMM y, H:mm:ss",
                longDateTime: "d MMMM 'de' y, H:mm:ss z",
                fullDateTime: "EEEE, d MMMM 'de' y 'a' 'les' H:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E d",
                Ehm: "E h:mm a",
                EHm: "E H:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E H:mm:ss",
                Gy: "y G",
                GyMMM: "LLL y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E, d MMM y G",
                GyMMMM: "LLLL 'de' y G",
                GyMMMMd: "d MMMM 'de' y G",
                GyMMMMEd: "E, d MMMM 'de' y G",
                h: "h a",
                H: "H",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "d/M",
                MEd: "E d/M",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E, d MMM",
                MMMMd: "d MMMM",
                MMMMEd: "E, d MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "M/y",
                yMd: "d/M/y",
                yMEd: "E, d/M/y",
                yMMM: "LLL 'de' y",
                yMMMd: "d MMM y",
                yMMMEd: "E, d MMM y",
                yMMMM: "LLLL 'de' y",
                yMMMMd: "d MMMM 'de' y",
                yMMMMEd: "E, d MMMM 'de' y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _deg915,
            H: {
                H: "H–H"
            },
            hm: _deg9140,
            Hm: {
                H: "H:mm – H:mm",
                m: "H:mm – H:mm"
            },
            hmv: _deg9160,
            Hmv: {
                H: "H:mm–H:mm v",
                m: "H:mm–H:mm v"
            },
            hv: _deg948,
            Hv: {
                H: "H–H v"
            },
            M: {
                M: "M–M"
            },
            Md: _deg949,
            MEd: _deg986,
            MMM: {
                M: "LLL – LLL"
            },
            MMMd: _deg957,
            MMMEd: _deg9108,
            y: {
                y: "y–y"
            },
            yM: {
                M: "M/y – M/y",
                y: "M/y – M/y"
            },
            yMd: {
                d: "d/M/y – d/M/y",
                M: "d/M/y – d/M/y",
                y: "d/M/y – d/M/y"
            },
            yMEd: {
                d: "E d/M/y – E d/M/y",
                M: "E d/M/y – E d/M/y",
                y: "E d/M/y – E d/M/y"
            },
            yMMM: {
                M: "LLL–LLL y",
                y: "LLL y – LLL y"
            },
            yMMMd: {
                d: "d–d MMM y",
                M: "d MMM – d MMM y",
                y: "d MMM y – d MMM y"
            },
            yMMMEd: {
                d: "E, d – E, d MMM y",
                M: "E, d MMM – E, d MMM y",
                y: "E, d MMM y – E, d MMM y"
            },
            yMMMM: {
                M: "LLLL–LLLL 'de' y",
                y: "LLLL 'de' y – LLLL 'de' y"
            },
            yMMMMd: {
                d: "d–d MMMM 'de' y",
                M: "d MMMM – d MMMM 'de' y",
                y: "d MMMM 'de' y – d MMMM 'de' y"
            },
            yMMMMEd: {
                d: "E, d – E, d MMMM 'de' y",
                M: "E, d MMMM – E, d MMMM 'de' y",
                y: "E, d MMMM 'de' y – E, d MMMM 'de' y"
            }
        },
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _deg9551,
        dayPeriods: _deg9561,
        monthNames: _deg9556,
        eraNames: {
            wide: [ "abans de Crist", "després de Crist" ],
            abbreviated: [ "aC", "dC" ]
        },
        quarterNames: _deg9535,
        fields: _deg9572
    },
    hebrew: {
        dateFormats: _deg9563,
        datePartsOrder: "dmy",
        dateIntervalFormats: _deg9565,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _deg9551,
        dayPeriods: _deg9561,
        monthNames: {
            format: _deg9537,
            standAlone: _deg9537
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _deg9535,
        fields: _deg9572
    },
    indian: {
        dateFormats: _deg9563,
        datePartsOrder: "dmy",
        dateIntervalFormats: _deg9565,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _deg9551,
        dayPeriods: _deg9561,
        monthNames: {
            format: _deg9544,
            standAlone: _deg9544
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _deg9535,
        fields: _deg9572
    },
    islamic: _deg9574,
    "islamic-umalqura": _deg9574,
    "islamic-tbla": _deg9574,
    "islamic-civil": _deg9574,
    "islamic-rgsa": _deg9574,
    iso8601: _deg9573,
    japanese: {
        dateFormats: _deg9563,
        datePartsOrder: "dmy",
        dateIntervalFormats: _deg9565,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _deg9551,
        dayPeriods: _deg9561,
        monthNames: _deg9556,
        eraNames: {
            wide: _deg9570,
            abbreviated: _deg9570
        },
        quarterNames: _deg9535,
        fields: _deg9572
    },
    persian: {
        dateFormats: _deg9563,
        datePartsOrder: "dmy",
        dateIntervalFormats: _deg9565,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _deg9551,
        dayPeriods: _deg9561,
        monthNames: {
            format: _deg9538,
            standAlone: _deg9538
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _deg9535,
        fields: _deg9572
    },
    roc: {
        dateFormats: {
            basic: {
                fullDate: "EEEE d MMMM 'de' y G",
                longDate: "d MMMM 'de' y G",
                mediumDate: "dd/MM/y G",
                shortDate: "dd/MM/y GGGGG",
                fullTime: "H:mm:ss zzzz",
                longTime: "H:mm:ss z",
                mediumTime: "H:mm:ss",
                shortTime: "H:mm",
                shortDateTime: "dd/MM/y GGGGG, H:mm",
                mediumDateTime: "dd/MM/y G, H:mm:ss",
                longDateTime: "d MMMM 'de' y G, H:mm:ss z",
                fullDateTime: "EEEE d MMMM 'de' y G, H:mm:ss zzzz"
            },
            cldr: _deg9558
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: _deg9565,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _deg9551,
        dayPeriods: _deg9561,
        monthNames: _deg9556,
        eraNames: {
            wide: _deg917,
            abbreviated: _deg917
        },
        quarterNames: _deg9535,
        fields: _deg9572
    },
    islamicc: _deg9573
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length;
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 1 && v === 0) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderDigitsOrdinalMasculine(n);
};

inter.renderSpelloutNumbering = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "menys " + this.renderSpelloutNumbering(-n);
    if (isFractional && n > 1) return this.renderSpelloutNumbering(Math.floor(n)) + " coma " + this.renderSpelloutNumbering(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " biliards" + (n === 2e15 ? "" : " " + this.renderSpelloutNumbering(n % 1e15));
    if (n >= 1e15) return "un biliard" + (n === 1e15 ? "" : " " + this.renderSpelloutNumbering(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " bilions" + (n === 2e12 ? "" : " " + this.renderSpelloutNumbering(n % 1e12));
    if (n >= 1e12) return "un bilió" + (n === 1e12 ? "" : " " + this.renderSpelloutNumbering(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " miliards" + (n === 2e9 ? "" : " " + this.renderSpelloutNumbering(n % 1e9));
    if (n >= 1e9) return "un miliard" + (n === 1e9 ? "" : " " + this.renderSpelloutNumbering(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " milions" + (n === 2e6 ? "" : " " + this.renderSpelloutNumbering(n % 1e6));
    if (n >= 1e6) return "un milió" + (n === 1e6 ? "" : " " + this.renderSpelloutNumbering(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e3)) + " mil" + (n === 2e3 ? "" : " " + this.renderSpelloutNumbering(n % 1e3));
    if (n >= 1e3) return "mil" + (n === 1e3 ? "" : " " + this.renderSpelloutNumbering(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinalMasculine(Math.floor(n / 100)) + "-cent" + this.renderSpelloutNumberingCents(n % 100);
    if (n >= 100) return "cent" + (n === 100 ? "" : "-" + this.renderSpelloutNumbering(n % 100));
    if (n >= 90) return "noranta" + (n === 90 ? "" : "-" + this.renderSpelloutNumbering(n % 10));
    if (n >= 80) return "vuitanta" + (n === 80 ? "" : "-" + this.renderSpelloutNumbering(n % 10));
    if (n >= 70) return "setanta" + (n === 70 ? "" : "-" + this.renderSpelloutNumbering(n % 10));
    if (n >= 60) return "seixanta" + (n === 60 ? "" : "-" + this.renderSpelloutNumbering(n % 10));
    if (n >= 50) return "cinquanta" + (n === 50 ? "" : "-" + this.renderSpelloutNumbering(n % 10));
    if (n >= 40) return "quaranta" + (n === 40 ? "" : "-" + this.renderSpelloutNumbering(n % 10));
    if (n >= 30) return "trenta" + (n === 30 ? "" : "-" + this.renderSpelloutNumbering(n % 10));
    if (n >= 20) return "vint" + (n === 20 ? "" : "-i-" + this.renderSpelloutNumbering(n % 10));
    if (n >= 2) return this.renderSpelloutCardinalMasculine(n);
    if (n >= 1) return "u";
    if (n >= 0) return "zero";
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderDigitsOrdinalMasculine = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinalMasculine(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + this.renderDigitsOrdinalIndicatorM(n);
};

inter.renderSpelloutCardinalMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "menys " + this.renderSpelloutCardinalMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculine(Math.floor(n)) + " coma " + this.renderSpelloutCardinalMasculine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " biliards" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 1e15) return "un biliard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " bilions" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 1e12) return "un bilió" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " miliards" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 1e9) return "un miliard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " milions" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 1e6) return "un milió" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e3)) + " mil" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 1e3) return "mil" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinalMasculine(Math.floor(n / 100)) + "-cent" + this.renderSpelloutCardinalMasculineCents(n % 100);
    if (n >= 100) return "cent" + (n === 100 ? "" : "-" + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 90) return "noranta" + (n === 90 ? "" : "-" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 80) return "vuitanta" + (n === 80 ? "" : "-" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 70) return "setanta" + (n === 70 ? "" : "-" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 60) return "seixanta" + (n === 60 ? "" : "-" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 50) return "cinquanta" + (n === 50 ? "" : "-" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 40) return "quaranta" + (n === 40 ? "" : "-" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 30) return "trenta" + (n === 30 ? "" : "-" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 20) return "vint" + (n === 20 ? "" : "-i-" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 19) return "dinou";
    if (n >= 18) return "divuit";
    if (n >= 17) return "disset";
    if (n >= 16) return "setze";
    if (n >= 15) return "quinze";
    if (n >= 14) return "catorze";
    if (n >= 13) return "tretze";
    if (n >= 12) return "dotze";
    if (n >= 11) return "onze";
    if (n >= 10) return "deu";
    if (n >= 9) return "nou";
    if (n >= 8) return "vuit";
    if (n >= 7) return "set";
    if (n >= 6) return "sis";
    if (n >= 5) return "cinc";
    if (n >= 4) return "quatre";
    if (n >= 3) return "tres";
    if (n >= 2) return "dos";
    if (n >= 1) return "un";
    if (n >= 0) return "zero";
};

inter.renderSpelloutNumberingCents = function(n) {
    if (n >= 1) return " " + this.renderSpelloutCardinalMasculine(n);
    if (n >= 0) return "s";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderDigitsOrdinalIndicatorM = function(n) {
    if (n >= 100) return this.renderDigitsOrdinalIndicatorM(n % 100);
    if (n >= 20) return this.renderDigitsOrdinalIndicatorM(n % 10);
    if (n >= 5) return "è";
    if (n >= 4) return "t";
    if (n >= 3) return "r";
    if (n >= 2) return "n";
    if (n >= 1) return "r";
    if (n >= 0) return "è";
};

inter.renderSpelloutCardinalMasculineCents = function(n) {
    if (n >= 1) return " " + this.renderSpelloutCardinalMasculine(n);
    if (n >= 0) return "s";
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 6), {
    id: "Pacific/Tahiti",
    regionId: "061",
    utcStandardOffsetSeconds: -36e3,
    displayName: "Tahití",
    countryId: "PF"
}, {
    id: "Pacific/Marquesas",
    regionId: "061",
    utcStandardOffsetSeconds: -34200,
    displayName: "Marqueses",
    countryId: "PF"
}, P.timeZones.slice(8, 30), {
    id: "America/Mazatlan",
    regionId: "013",
    utcStandardOffsetSeconds: -25200,
    displayName: "Mazatlán",
    countryId: "MX"
}, P.timeZones.slice(31, 34), P.timeZones[35], {
    id: "America/North_Dakota/Beulah",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Beulah, Dakota del Nord",
    countryId: "US"
}, {
    id: "America/North_Dakota/Center",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Center, Dakota del Nord",
    countryId: "US"
}, P.timeZones[39], {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Ciutat de Mèxic",
    countryId: "MX"
}, P.timeZones[40], P.timeZones[42], {
    id: "Pacific/Galapagos",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Galápagos",
    countryId: "EC"
}, P.timeZones[44], {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Illa de Pasqua",
    countryId: "CL"
}, P.timeZones.slice(45, 49), P.timeZones[51], {
    id: "America/Merida",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mérida",
    countryId: "MX"
}, {
    id: "America/North_Dakota/New_Salem",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "New Salem, Dakota del Nord",
    countryId: "US"
}, P.timeZones.slice(53, 61), {
    id: "America/Chicago",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Xicago",
    countryId: "US"
}, {
    id: "America/Bahia_Banderas",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "bahía de Banderas",
    countryId: "MX"
}, P.timeZones[61], {
    id: "America/Bogota",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Bogotà",
    countryId: "CO"
}, {
    id: "America/Cayman",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Caiman",
    countryId: "KY"
}, P.timeZones[63], P.timeZones[65], {
    id: "America/Eirunepe",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Eirunepé",
    countryId: "BR"
}, P.timeZones.slice(67, 78), {
    id: "America/New_York",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Nova York",
    countryId: "US"
}, {
    id: "America/Panama",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Panamà",
    countryId: "PA"
}, P.timeZones.slice(80, 82), {
    id: "America/Rio_Branco",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Río Branco",
    countryId: "BR"
}, P.timeZones.slice(83, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones[91], {
    id: "Atlantic/Bermuda",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Bermudes",
    countryId: "BM"
}, {
    id: "America/Blanc-Sablon",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Blanc Sablon",
    countryId: "CA"
}, P.timeZones.slice(94, 97), {
    id: "America/Cuiaba",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Cuiabá",
    countryId: "BR"
}, {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 111), {
    id: "America/Martinique",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Martinica",
    countryId: "MQ"
}, P.timeZones.slice(112, 117), {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Barthélemy",
    countryId: "BL"
}, {
    id: "America/St_Kitts",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Kitts",
    countryId: "KN"
}, {
    id: "America/St_Lucia",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Lucia",
    countryId: "LC"
}, {
    id: "America/St_Thomas",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Thomas",
    countryId: "VI"
}, {
    id: "America/St_Vincent",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Vincent",
    countryId: "VC"
}, P.timeZones.slice(117, 119), P.timeZones.slice(124, 126), {
    id: "America/St_Johns",
    regionId: "021",
    utcStandardOffsetSeconds: -12600,
    displayName: "Saint John’s",
    countryId: "CA"
}, {
    id: "America/Araguaina",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Araguaína",
    countryId: "BR"
}, P.timeZones[128], {
    id: "America/Belem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Belém",
    countryId: "BR"
}, P.timeZones[130], {
    id: "America/Cayenne",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Caiena",
    countryId: "GF"
}, P.timeZones[131], P.timeZones.slice(133, 137), {
    id: "America/Maceio",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Maceió",
    countryId: "BR"
}, P.timeZones.slice(138, 145), P.timeZones[146], {
    id: "America/Argentina/Rio_Gallegos",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Río Gallegos",
    countryId: "AR"
}, P.timeZones.slice(147, 150), {
    id: "America/Santarem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Santarém",
    countryId: "BR"
}, P.timeZones[152], {
    id: "America/Sao_Paulo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "São Paulo",
    countryId: "BR"
}, {
    id: "America/Argentina/Tucuman",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Tucumán",
    countryId: "AR"
}, P.timeZones[154], {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Geòrgia del Sud",
    countryId: "GS"
}, P.timeZones.slice(155, 157), {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Açores",
    countryId: "PT"
}, {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Cap Verd",
    countryId: "CV"
}, {
    id: "America/Scoresbysund",
    regionId: "021",
    utcStandardOffsetSeconds: -3600,
    displayName: "Scoresbysund",
    countryId: "GL"
}, P.timeZones.slice(161, 166), P.timeZones.slice(167, 170), {
    id: "Europe/Dublin",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Dublín",
    countryId: "IE"
}, P.timeZones.slice(171, 174), {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Illes Canàries",
    countryId: "ES"
}, P.timeZones[175], {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lisboa",
    countryId: "PT"
}, P.timeZones[177], {
    id: "Europe/London",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Londres",
    countryId: "GB"
}, P.timeZones[179], {
    id: "Europe/Isle_of_Man",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Man",
    countryId: "IM"
}, P.timeZones.slice(180, 184), {
    id: "Atlantic/St_Helena",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Saint Helena",
    countryId: "SH"
}, {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Africa/El_Aaiun",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Al-aaiun",
    countryId: "EH"
}, {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Alger",
    countryId: "DZ"
}, P.timeZones.slice(188, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrad",
    countryId: "RS"
}, {
    id: "Europe/Berlin",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Berlín",
    countryId: "DE"
}, P.timeZones.slice(193, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Brussel·les",
    countryId: "BE"
}, P.timeZones.slice(196, 202), {
    id: "Europe/Stockholm",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Estocolm",
    countryId: "SE"
}, P.timeZones.slice(203, 210), {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luxemburg",
    countryId: "LU"
}, P.timeZones.slice(211, 214), {
    id: "Europe/Monaco",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Mònaco",
    countryId: "MC"
}, P.timeZones.slice(215, 218), {
    id: "Europe/Paris",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "París",
    countryId: "FR"
}, P.timeZones.slice(219, 221), {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Praga",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Roma",
    countryId: "IT"
}, P.timeZones.slice(223, 226), {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, P.timeZones.slice(228, 230), {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Varsòvia",
    countryId: "PL"
}, {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Vaticà",
    countryId: "VA"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Viena",
    countryId: "AT"
}, P.timeZones[233], {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zuric",
    countryId: "CH"
}, {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Atenes",
    countryId: "GR"
}, P.timeZones.slice(236, 238), {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bucarest",
    countryId: "RO"
}, P.timeZones[239], {
    id: "Africa/Cairo",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Caire, el",
    countryId: "EG"
}, P.timeZones.slice(241, 247), {
    id: "Europe/Helsinki",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Hèlsinki",
    countryId: "FI"
}, P.timeZones.slice(248, 252), {
    id: "Africa/Khartoum",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Khartum",
    countryId: "SD"
}, P.timeZones.slice(253, 257), {
    id: "Europe/Mariehamn",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Maarianhamina",
    countryId: "AX"
}, P.timeZones[257], P.timeZones.slice(259, 261), {
    id: "Asia/Nicosia",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Nicòsia",
    countryId: "CY"
}, P.timeZones.slice(262, 265), {
    id: "Africa/Tripoli",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Trípoli",
    countryId: "LY"
}, {
    id: "Europe/Vilnius",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Vílnius",
    countryId: "LT"
}, P.timeZones[267], {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Addis Abeba",
    countryId: "ET"
}, P.timeZones[269], {
    id: "Asia/Riyadh",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Al-Riyād",
    countryId: "SA"
}, P.timeZones.slice(270, 273), {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdad",
    countryId: "IQ"
}, P.timeZones.slice(274, 276), {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damasc",
    countryId: "SY"
}, P.timeZones.slice(277, 285), {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moscou",
    countryId: "RU"
}, {
    id: "Africa/Mogadishu",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Muqdiisho",
    countryId: "SO"
}, P.timeZones.slice(287, 289), P.timeZones.slice(290, 293), {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Teheran",
    countryId: "IR"
}, P.timeZones[294], {
    id: "Asia/Baku",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Bakú",
    countryId: "AZ"
}, P.timeZones[296], {
    id: "Asia/Yerevan",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Erevan",
    countryId: "AM"
}, P.timeZones[297], {
    id: "Asia/Muscat",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Masqat",
    countryId: "OM"
}, {
    id: "Indian/Mauritius",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Maurici",
    countryId: "MU"
}, {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Reunió",
    countryId: "RE"
}, P.timeZones.slice(301, 305), {
    id: "Asia/Kabul",
    regionId: "034",
    utcStandardOffsetSeconds: 16200,
    displayName: "Kābul",
    countryId: "AF"
}, {
    id: "Asia/Aqtau",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aqtaū",
    countryId: "KZ"
}, P.timeZones.slice(308, 312), {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Jekaterinburg",
    countryId: "RU"
}, P.timeZones.slice(312, 314), {
    id: "Asia/Qyzylorda",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Kizilordà",
    countryId: "KZ"
}, P.timeZones.slice(314, 317), {
    id: "Asia/Samarkand",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Samarcanda",
    countryId: "UZ"
}, {
    id: "Asia/Tashkent",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Taixkent",
    countryId: "UZ"
}, P.timeZones.slice(321, 325), {
    id: "Asia/Bishkek",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Bixkek",
    countryId: "KG"
}, P.timeZones[326], {
    id: "Asia/Dhaka",
    regionId: "034",
    utcStandardOffsetSeconds: 21600,
    displayName: "Dacca",
    countryId: "BD"
}, P.timeZones.slice(328, 330), {
    id: "Asia/Thimphu",
    regionId: "034",
    utcStandardOffsetSeconds: 21600,
    displayName: "Thimbu",
    countryId: "BT"
}, {
    id: "Asia/Urumqi",
    regionId: "030",
    utcStandardOffsetSeconds: 21600,
    displayName: "Urumchi",
    countryId: "CN"
}, P.timeZones.slice(332, 342), {
    id: "Asia/Krasnoyarsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Krasnoiarsk",
    countryId: "RU"
}, P.timeZones.slice(343, 356), {
    id: "Asia/Makassar",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Makasar",
    countryId: "ID"
}, P.timeZones.slice(357, 359), {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Singapur",
    countryId: "SG"
}, P.timeZones.slice(361, 363), {
    id: "Asia/Shanghai",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Xangai",
    countryId: "CN"
}, P.timeZones[363], P.timeZones[365], {
    id: "Asia/Jayapura",
    regionId: "035",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jaipur",
    countryId: "ID"
}, {
    id: "Asia/Yakutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jakutsk",
    countryId: "RU"
}, P.timeZones.slice(367, 370), {
    id: "Asia/Seoul",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Seül",
    countryId: "KR"
}, {
    id: "Asia/Chita",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Txità",
    countryId: "RU"
}, {
    id: "Asia/Tokyo",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tòquio",
    countryId: "JP"
}, P.timeZones.slice(373, 387), {
    id: "Asia/Ust-Nera",
    regionId: "151",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Ust’-Nera",
    countryId: "RU"
}, P.timeZones.slice(388, 397), {
    id: "Pacific/Noumea",
    regionId: "054",
    utcStandardOffsetSeconds: 39600,
    displayName: "Nouméa",
    countryId: "NC"
}, P.timeZones.slice(398, 400), {
    id: "Asia/Srednekolymsk",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Srednekolimsk",
    countryId: "RU"
}, {
    id: "Asia/Anadyr",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Anadyr’",
    countryId: "RU"
}, P.timeZones.slice(402, 405), {
    id: "Asia/Kamchatka",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Kamtxatka",
    countryId: "RU"
}, P.timeZones.slice(406, 419));

inter.territories = [ _deg9342, _deg9246, _deg9293, _deg9247, _deg9404, _deg9446, _deg9447, _deg9472, _deg9248, _deg9214, _deg9294, _deg9414, _deg9134, _deg9322, _deg9249, _deg9191, _deg9393, _deg9430, _deg9323, _deg9358, _deg9250, _deg9251, _deg9359, _deg9295, _deg9252, _deg9215, _deg9192, _deg9296, _deg9216, _deg9253, _deg9297, _deg9126, _deg9217, _deg9218, _deg9298, _deg9370, _deg9254, _deg9255, _deg9436, _deg9299, _deg9256, _deg9219, _deg9300, _deg9383, _deg9409, _deg9157, _deg9415, _deg9301, _deg9257, _deg9431, _deg9410, _deg9394, _deg9384, _deg9343, _deg9385, _deg9258, _deg9174, _deg9259, _deg9147, _deg9324, _deg9302, _deg9303, _deg9220, _deg9360, _deg9432, _deg9260, _deg9261, _deg9344, _deg9325, _deg9262, _deg9371, _deg9263, _deg9264, _deg9395, _deg9459, _deg9460, _deg9448, _deg9469, _deg9175, _deg9326, _deg9327, _deg9221, _deg9193, _deg9265, _deg9194, _deg9328, _deg9266, _deg9345, _deg9222, _deg9346, _deg9411, _deg9176, _deg9329, _deg9304, _deg9223, _deg9386, _deg9416, _deg9224, _deg9225, _deg9195, _deg9305, _deg9437, _deg9267, _deg9196, _deg9149, _deg9158, _deg9387, _deg9361, _deg9417, _deg9177, _deg9372, _deg9154, _deg9141, _deg9347, _deg9362, _deg9461, _deg9396, _deg9454, _deg9397, _deg9433, _deg9398, _deg9373, _deg9438, _deg9455, _deg9470, _deg9363, _deg9330, _deg9178, _deg9179, _deg9268, _deg9306, _deg9226, _deg9227, _deg9269, _deg9180, _deg9228, _deg9307, _deg9348, _deg9197, _deg9374, _deg9308, _deg9270, _deg9229, _deg9181, _deg9271, _deg9272, _deg9273, _deg9388, _deg9309, _deg9331, _deg9198, _deg9199, _deg9412, _deg9332, _deg9349, _deg9230, _deg9310, _deg9182, _deg9200, _deg9311, _deg9231, _deg9333, _deg9274, _deg9350, _deg9275, _deg9418, _deg9351, _deg9312, _deg9313, _deg9352, _deg9353, _deg9314, _deg9427, _deg9201, _deg9232, _deg9114, _deg9276, _deg9202, _deg9203, _deg9334, _deg9277, _deg9183, _deg9278, _deg9279, _deg9399, _deg9375, _deg9204, _deg9405, _deg9184, _deg9315, _deg9205, _deg9335, _deg9233, _deg9419, _deg9316, _deg9389, _deg9185, _deg9420, _deg9428, _deg9280, _deg9317, _deg9364, _deg9206, _deg9473, _deg9354, _deg9456, _deg9439, _deg9406, _deg9449, _deg9281, _deg9234, _deg9235, _deg9413, _deg9462, _deg9376, _deg9365, _deg9377, _deg9474, _deg9457, _deg9207, _deg9440, _deg9355, _deg9282, _deg9356, _deg9378, _deg9318, _deg9379, _deg9283, _deg9336, _deg9208, _deg9390, _deg9284, _deg9236, _deg9237, _deg9441, _deg9366, _deg9421, _deg9434, _deg9238, _deg9209, _deg9367, _deg9337, _deg9239, _deg9319, _deg9435, _deg9391, {
    id: "QO",
    displayName: "Territoris allunyats d’Oceania",
    regionId: "009",
    hasTimeZones: false
}, _deg9400, _deg9186, _deg9285, _deg9210, _deg9422, _deg9161, _deg9286, _deg9380, _deg9287, _deg9240, _deg9187, _deg9288, _deg9241, _deg9289, _deg9357, _deg9290, _deg9338, _deg9291, _deg9407, _deg9188, _deg9189, _deg9211, _deg9320, _deg9242, _deg9401, _deg9445, _deg9463, _deg9464, _deg9450, _deg9471, _deg9381, _deg9442, _deg9451, _deg9452, _deg9444, _deg9465, _deg9292, _deg9212 ];

inter.regions = [ _deg9404, _deg9446, _deg9447, _deg9472, _deg9430, _deg9383, _deg9395, _deg9459, _deg9460, _deg9448, _deg9469, _deg9418, _deg9114, _deg9405, _deg9420, _deg9473, _deg9401, _deg9445, _deg9463, _deg9464, _deg9450, _deg9471, _deg9381, _deg9442, _deg9451, _deg9452, _deg9444, _deg9465 ];

inter.countries = [ _deg9342, _deg9246, _deg9293, _deg9247, _deg9248, _deg9214, _deg9294, _deg9414, _deg9134, _deg9322, _deg9249, _deg9191, _deg9393, _deg9323, _deg9358, _deg9250, _deg9251, _deg9359, _deg9295, _deg9252, _deg9215, _deg9192, _deg9296, _deg9216, _deg9253, _deg9297, _deg9126, _deg9217, _deg9218, _deg9298, _deg9370, _deg9254, _deg9255, _deg9436, _deg9299, _deg9256, _deg9219, _deg9300, _deg9409, _deg9157, _deg9415, _deg9301, _deg9257, _deg9431, _deg9410, _deg9394, _deg9384, _deg9343, _deg9385, _deg9258, _deg9174, _deg9259, _deg9147, _deg9324, _deg9302, _deg9303, _deg9220, _deg9360, _deg9432, _deg9260, _deg9261, _deg9344, _deg9325, _deg9262, _deg9371, _deg9263, _deg9264, _deg9175, _deg9326, _deg9327, _deg9221, _deg9193, _deg9265, _deg9194, _deg9328, _deg9266, _deg9345, _deg9222, _deg9346, _deg9411, _deg9176, _deg9329, _deg9304, _deg9223, _deg9386, _deg9416, _deg9224, _deg9225, _deg9195, _deg9305, _deg9437, _deg9267, _deg9196, _deg9149, _deg9158, _deg9387, _deg9361, _deg9417, _deg9177, _deg9372, _deg9154, _deg9141, _deg9347, _deg9362, _deg9461, _deg9396, _deg9454, _deg9397, _deg9433, _deg9398, _deg9373, _deg9438, _deg9455, _deg9470, _deg9363, _deg9330, _deg9178, _deg9179, _deg9268, _deg9306, _deg9226, _deg9227, _deg9269, _deg9180, _deg9228, _deg9307, _deg9348, _deg9197, _deg9374, _deg9308, _deg9270, _deg9229, _deg9181, _deg9271, _deg9272, _deg9273, _deg9388, _deg9309, _deg9331, _deg9198, _deg9199, _deg9412, _deg9332, _deg9349, _deg9230, _deg9310, _deg9182, _deg9200, _deg9311, _deg9231, _deg9333, _deg9274, _deg9350, _deg9275, _deg9351, _deg9312, _deg9313, _deg9352, _deg9353, _deg9314, _deg9427, _deg9201, _deg9232, _deg9276, _deg9202, _deg9203, _deg9334, _deg9277, _deg9183, _deg9278, _deg9279, _deg9399, _deg9375, _deg9204, _deg9184, _deg9315, _deg9205, _deg9335, _deg9233, _deg9419, _deg9316, _deg9389, _deg9185, _deg9428, _deg9280, _deg9317, _deg9364, _deg9206, _deg9354, _deg9456, _deg9439, _deg9406, _deg9449, _deg9281, _deg9234, _deg9235, _deg9413, _deg9462, _deg9376, _deg9365, _deg9377, _deg9474, _deg9457, _deg9207, _deg9440, _deg9355, _deg9282, _deg9356, _deg9378, _deg9318, _deg9379, _deg9283, _deg9336, _deg9208, _deg9390, _deg9284, _deg9236, _deg9237, _deg9441, _deg9366, _deg9421, _deg9434, _deg9238, _deg9209, _deg9367, _deg9337, _deg9239, _deg9319, _deg9435, _deg9391, _deg9400, _deg9186, _deg9285, _deg9210, _deg9422, _deg9161, _deg9286, _deg9380, _deg9287, _deg9240, _deg9187, _deg9288, _deg9241, _deg9289, _deg9357, _deg9290, _deg9338, _deg9291, _deg9407, _deg9188, _deg9189, _deg9211, _deg9320, _deg9242, _deg9292, _deg9212 ];

inter.languages = [ {
    id: "ab",
    displayName: "abkhaz"
}, {
    id: "akk",
    displayName: "accadi"
}, {
    id: "ach",
    displayName: "acoli"
}, {
    id: "ada",
    displayName: "adangme"
}, {
    id: "ady",
    displayName: "adigué"
}, {
    id: "afh",
    displayName: "afrihili"
}, {
    id: "af",
    displayName: "afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ay",
    displayName: "aimara"
}, {
    id: "ain",
    displayName: "ainu"
}, {
    id: "ak",
    displayName: "àkan",
    nativeDisplayName: "Akan"
}, {
    id: "bss",
    displayName: "akoose"
}, {
    id: "akz",
    displayName: "alabama"
}, {
    id: "aln",
    displayName: "albanès geg"
}, {
    id: "pfl",
    displayName: "alemany palatí"
}, {
    id: "pdc",
    displayName: "alemany pennsilvanià"
}, {
    id: "ale",
    displayName: "aleuta"
}, {
    id: "goh",
    displayName: "alt alemany antic"
}, {
    id: "gmh",
    displayName: "alt alemany mitjà"
}, {
    id: "alt",
    displayName: "altaic meridional"
}, {
    id: "tmh",
    displayName: "amazic"
}, {
    id: "en_us",
    displayName: "anglès americà",
    nativeDisplayName: "American English"
}, {
    id: "wal",
    displayName: "ameto"
}, {
    id: "smn",
    displayName: "sami d’Inari",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "anp",
    displayName: "angika"
}, {
    id: "ang",
    displayName: "anglès antic"
}, {
    id: "enm",
    displayName: "anglès mitjà"
}, {
    id: "an",
    displayName: "aragonès"
}, {
    id: "arc",
    displayName: "arameu"
}, {
    id: "sam",
    displayName: "arameu samarità"
}, {
    id: "aro",
    displayName: "araona"
}, {
    id: "arp",
    displayName: "arapaho"
}, {
    id: "arw",
    displayName: "arauac"
}, {
    id: "arn",
    displayName: "araucà"
}, {
    id: "rup",
    displayName: "aromanès"
}, {
    id: "root",
    displayName: "arrel"
}, {
    id: "ast",
    displayName: "asturià",
    nativeDisplayName: "asturianu"
}, {
    id: "ace",
    displayName: "atjeh"
}, {
    id: "cch",
    displayName: "atsam"
}, {
    id: "en_au",
    displayName: "anglès australià",
    nativeDisplayName: "Australian English"
}, {
    id: "ae",
    displayName: "avèstic"
}, {
    id: "awa",
    displayName: "awadhi"
}, {
    id: "az",
    displayName: "azerbaidjanès",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "bfq",
    displayName: "badaga"
}, {
    id: "bfd",
    displayName: "bafut"
}, {
    id: "ms",
    displayName: "malai",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "nds",
    displayName: "baix alemany"
}, {
    id: "nds_nl",
    displayName: "baix saxó"
}, {
    id: "ba",
    displayName: "baixkir"
}, {
    id: "ban",
    displayName: "balinès"
}, {
    id: "bal",
    displayName: "balutxi"
}, {
    id: "bgn",
    displayName: "balutxi occidental"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bax",
    displayName: "bamun"
}, {
    id: "bar",
    displayName: "bavarès"
}, {
    id: "bej",
    displayName: "beja"
}, {
    id: "bho",
    displayName: "bhojpuri"
}, {
    id: "bik",
    displayName: "bicol"
}, {
    id: "byn",
    displayName: "bilin"
}, {
    id: "bin",
    displayName: "bini"
}, {
    id: "bi",
    displayName: "bislama"
}, {
    id: "bla",
    displayName: "blackfoot"
}, {
    id: "bs",
    displayName: "bosnià",
    nativeDisplayName: "bosanski"
}, {
    id: "brh",
    displayName: "brahui"
}, {
    id: "bra",
    displayName: "braj"
}, {
    id: "br",
    displayName: "bretó",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "anglès britànic",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "bugui"
}, {
    id: "bua",
    displayName: "buriat"
}, {
    id: "cad",
    displayName: "caddo"
}, {
    id: "csb",
    displayName: "caixubi"
}, {
    id: "xal",
    displayName: "calmuc"
}, {
    id: "en_ca",
    displayName: "anglès canadenc",
    nativeDisplayName: "Canadian English"
}, {
    id: "krl",
    displayName: "carelià"
}, {
    id: "car",
    displayName: "carib"
}, {
    id: "ca",
    displayName: "català",
    nativeDisplayName: "català"
}, {
    id: "cay",
    displayName: "cayuga"
}, {
    id: "ceb",
    displayName: "cebuà"
}, {
    id: "ch",
    displayName: "chamorro"
}, {
    id: "kde",
    displayName: "makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "chp",
    displayName: "chipewyan"
}, {
    id: "sn",
    displayName: "shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cho",
    displayName: "choctaw"
}, {
    id: "chk",
    displayName: "chuuk"
}, {
    id: "swb",
    displayName: "comorià"
}, {
    id: "gom",
    displayName: "concani de Goa"
}, {
    id: "cop",
    displayName: "copte"
}, {
    id: "co",
    displayName: "cors"
}, {
    id: "cr",
    displayName: "cree"
}, {
    id: "mus",
    displayName: "creek"
}, {
    id: "jam",
    displayName: "crioll anglès de Jamaica"
}, {
    id: "cy",
    displayName: "gal·lès",
    nativeDisplayName: "Cymraeg"
}, {
    id: "dak",
    displayName: "dakota"
}, {
    id: "da",
    displayName: "danès",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "darguà"
}, {
    id: "se",
    displayName: "sami septentrional",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "dzg",
    displayName: "dazaga"
}, {
    id: "del",
    displayName: "delaware"
}, {
    id: "de",
    displayName: "alemany",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "dinka"
}, {
    id: "dv",
    displayName: "divehi"
}, {
    id: "doi",
    displayName: "dogri"
}, {
    id: "dgr",
    displayName: "dogrib"
}, {
    id: "dsb",
    displayName: "baix sòrab",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "douala",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "estonià",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efik"
}, {
    id: "egy",
    displayName: "egipci antic"
}, {
    id: "eka",
    displayName: "ekajuk"
}, {
    id: "guz",
    displayName: "gusí",
    nativeDisplayName: "Ekegusii"
}, {
    id: "elx",
    displayName: "elamita"
}, {
    id: "egl",
    displayName: "emilià"
}, {
    id: "en",
    displayName: "anglès",
    nativeDisplayName: "English"
}, {
    id: "sco",
    displayName: "escocès"
}, {
    id: "es",
    displayName: "espanyol",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "espanyol europeu",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "espanyol de Mèxic",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "espanyol hispanoamericà",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "basc",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ext",
    displayName: "extremeny"
}, {
    id: "ee",
    displayName: "ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "fang"
}, {
    id: "fat",
    displayName: "fanti"
}, {
    id: "phn",
    displayName: "fenici"
}, {
    id: "fj",
    displayName: "fijià"
}, {
    id: "fil",
    displayName: "filipí",
    nativeDisplayName: "Filipino"
}, {
    id: "vls",
    displayName: "flamenc occidental"
}, {
    id: "fon",
    displayName: "fon"
}, {
    id: "fro",
    displayName: "francès antic"
}, {
    id: "frm",
    displayName: "francès mitjà"
}, {
    id: "fr",
    displayName: "francès",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "francès canadenc",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "francès suís",
    nativeDisplayName: "français suisse"
}, {
    id: "frs",
    displayName: "frisó oriental"
}, {
    id: "frr",
    displayName: "frisó septentrional"
}, {
    id: "fur",
    displayName: "friülà",
    nativeDisplayName: "furlan"
}, {
    id: "fo",
    displayName: "feroès",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "ga"
}, {
    id: "ga",
    displayName: "irlandès",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "gagaús"
}, {
    id: "gl",
    displayName: "gallec",
    nativeDisplayName: "galego"
}, {
    id: "gay",
    displayName: "gayo"
}, {
    id: "mga",
    displayName: "gaèlic irlandès mitjà"
}, {
    id: "gba",
    displayName: "gbaya"
}, {
    id: "bbj",
    displayName: "ghomala"
}, {
    id: "ki",
    displayName: "kikuiu",
    nativeDisplayName: "Gikuyu"
}, {
    id: "glk",
    displayName: "gilaki"
}, {
    id: "gil",
    displayName: "gilbertès"
}, {
    id: "gon",
    displayName: "gondi"
}, {
    id: "gor",
    displayName: "gorontalo"
}, {
    id: "grb",
    displayName: "grebo"
}, {
    id: "grc",
    displayName: "grec antic"
}, {
    id: "pnt",
    displayName: "grec pòntic"
}, {
    id: "gn",
    displayName: "guaraní"
}, {
    id: "gez",
    displayName: "gueez"
}, {
    id: "gwi",
    displayName: "gwichin"
}, {
    id: "gd",
    displayName: "gaèlic escocès",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "got",
    displayName: "gòtic"
}, {
    id: "hai",
    displayName: "haida"
}, {
    id: "ht",
    displayName: "haitià"
}, {
    id: "ha",
    displayName: "haussa",
    nativeDisplayName: "Hausa"
}, {
    id: "hz",
    displayName: "herero"
}, {
    id: "bez",
    displayName: "bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hil",
    displayName: "hiligainon"
}, {
    id: "hif",
    displayName: "hindi de Fiji"
}, {
    id: "ho",
    displayName: "hiri motu"
}, {
    id: "hit",
    displayName: "hitita"
}, {
    id: "hmn",
    displayName: "hmong"
}, {
    id: "hsb",
    displayName: "alt sòrab",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "croat",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "hupa"
}, {
    id: "iba",
    displayName: "iban"
}, {
    id: "ibb",
    displayName: "ibibio"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "und",
    displayName: "idioma desconegut"
}, {
    id: "io",
    displayName: "ido"
}, {
    id: "ig",
    displayName: "igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "ilocà"
}, {
    id: "id",
    displayName: "indonesi",
    nativeDisplayName: "Indonesia"
}, {
    id: "inh",
    displayName: "ingúix"
}, {
    id: "ia",
    displayName: "interlingua"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "iu",
    displayName: "inuktitut"
}, {
    id: "ik",
    displayName: "inupiak"
}, {
    id: "sga",
    displayName: "irlandès antic"
}, {
    id: "sbp",
    displayName: "sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "ndebele septentrional",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "italià",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "javanès"
}, {
    id: "kaj",
    displayName: "jju"
}, {
    id: "dyo",
    displayName: "diola",
    nativeDisplayName: "joola"
}, {
    id: "jpr",
    displayName: "judeopersa"
}, {
    id: "jrb",
    displayName: "judeoàrab"
}, {
    id: "dyu",
    displayName: "jula"
}, {
    id: "kbd",
    displayName: "kabardí"
}, {
    id: "kea",
    displayName: "crioll capverdià",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kgp",
    displayName: "kaingà"
}, {
    id: "kkj",
    displayName: "kako",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "grenlandès",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "kbl",
    displayName: "kanembu"
}, {
    id: "kr",
    displayName: "kanuri"
}, {
    id: "kaa",
    displayName: "karakalpak"
}, {
    id: "krc",
    displayName: "karatxai"
}, {
    id: "kac",
    displayName: "katxin"
}, {
    id: "kaw",
    displayName: "kawi"
}, {
    id: "ken",
    displayName: "kenyang"
}, {
    id: "kw",
    displayName: "còrnic",
    nativeDisplayName: "kernewek"
}, {
    id: "kha",
    displayName: "khasi"
}, {
    id: "naq",
    displayName: "nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "kho",
    displayName: "khotanès"
}, {
    id: "rof",
    displayName: "rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "machame",
    nativeDisplayName: "Kimachame"
}, {
    id: "kmb",
    displayName: "kimbundu"
}, {
    id: "rw",
    displayName: "ruandès",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "pare",
    nativeDisplayName: "Kipare"
}, {
    id: "rwk",
    displayName: "rwo",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "shambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "suahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "suahili del Congo",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "tlh",
    displayName: "klingonià"
}, {
    id: "bkm",
    displayName: "kom"
}, {
    id: "kv",
    displayName: "komi"
}, {
    id: "koi",
    displayName: "komi-permiac"
}, {
    id: "kg",
    displayName: "kongo"
}, {
    id: "kfo",
    displayName: "koro"
}, {
    id: "kos",
    displayName: "kosraeà"
}, {
    id: "khq",
    displayName: "koyra chiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "songhai oriental",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "kpe",
    displayName: "kpelle"
}, {
    id: "mfe",
    displayName: "mauricià",
    nativeDisplayName: "kreol morisien"
}, {
    id: "kri",
    displayName: "krio"
}, {
    id: "kj",
    displayName: "kuanyama"
}, {
    id: "ku",
    displayName: "kurd"
}, {
    id: "sdh",
    displayName: "kurd meridional"
}, {
    id: "kru",
    displayName: "kurukh"
}, {
    id: "kut",
    displayName: "kutenai"
}, {
    id: "nmg",
    displayName: "bissio",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ksh",
    displayName: "colognian",
    nativeDisplayName: "Kölsch"
}, {
    id: "kum",
    displayName: "kúmik"
}, {
    id: "ebu",
    displayName: "embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "lad",
    displayName: "ladí"
}, {
    id: "lkt",
    displayName: "lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lam",
    displayName: "lamba"
}, {
    id: "lv",
    displayName: "letó",
    nativeDisplayName: "latviešu"
}, {
    id: "lzz",
    displayName: "laz"
}, {
    id: "to",
    displayName: "tongalès",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lez",
    displayName: "lesguià"
}, {
    id: "lt",
    displayName: "lituà",
    nativeDisplayName: "lietuvių"
}, {
    id: "li",
    displayName: "limburguès"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "la",
    displayName: "llatí"
}, {
    id: "ase",
    displayName: "llengua de signes americana"
}, {
    id: "mul",
    displayName: "llengües vàries"
}, {
    id: "lmo",
    displayName: "llombard"
}, {
    id: "jbo",
    displayName: "lojban"
}, {
    id: "loz",
    displayName: "lozi"
}, {
    id: "lua",
    displayName: "luba-lulua"
}, {
    id: "lg",
    displayName: "ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "luisenyo"
}, {
    id: "luy",
    displayName: "luyia",
    nativeDisplayName: "Luluhia"
}, {
    id: "lun",
    displayName: "lunda"
}, {
    id: "lb",
    displayName: "luxemburguès",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "lij",
    displayName: "lígur"
}, {
    id: "mas",
    displayName: "massai",
    nativeDisplayName: "Maa"
}, {
    id: "mde",
    displayName: "maba"
}, {
    id: "mad",
    displayName: "madurès"
}, {
    id: "maf",
    displayName: "mafa"
}, {
    id: "mag",
    displayName: "magahi"
}, {
    id: "hu",
    displayName: "hongarès",
    nativeDisplayName: "magyar"
}, {
    id: "mai",
    displayName: "maithili"
}, {
    id: "mak",
    displayName: "makassar"
}, {
    id: "mgh",
    displayName: "makhuwa-metto",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "malgaix",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "maltès",
    nativeDisplayName: "Malti"
}, {
    id: "mdr",
    displayName: "mandar"
}, {
    id: "man",
    displayName: "mandinga"
}, {
    id: "mni",
    displayName: "manipurí"
}, {
    id: "mnc",
    displayName: "manxú"
}, {
    id: "mi",
    displayName: "maori"
}, {
    id: "chm",
    displayName: "mari"
}, {
    id: "mrj",
    displayName: "mari occidental"
}, {
    id: "mh",
    displayName: "marshallès"
}, {
    id: "mwr",
    displayName: "marwari"
}, {
    id: "byv",
    displayName: "medumba"
}, {
    id: "men",
    displayName: "mende"
}, {
    id: "mgo",
    displayName: "meta’",
    nativeDisplayName: "metaʼ"
}, {
    id: "mic",
    displayName: "micmac"
}, {
    id: "min",
    displayName: "minangkabau"
}, {
    id: "xmf",
    displayName: "mingrelià"
}, {
    id: "mwl",
    displayName: "mirandès"
}, {
    id: "lus",
    displayName: "mizo"
}, {
    id: "moh",
    displayName: "mohawk"
}, {
    id: "ro_md",
    displayName: "moldau",
    nativeDisplayName: "moldovenească"
}, {
    id: "lol",
    displayName: "mongo"
}, {
    id: "myv",
    displayName: "mordovià erza"
}, {
    id: "mdf",
    displayName: "mordovià moksa"
}, {
    id: "mos",
    displayName: "moré"
}, {
    id: "mua",
    displayName: "mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "mye",
    displayName: "myene"
}, {
    id: "nap",
    displayName: "napolità"
}, {
    id: "na",
    displayName: "nauruà"
}, {
    id: "nv",
    displayName: "navaho"
}, {
    id: "jgo",
    displayName: "ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "nr",
    displayName: "ndebele meridional"
}, {
    id: "ng",
    displayName: "ndonga"
}, {
    id: "nl",
    displayName: "neerlandès",
    nativeDisplayName: "Nederlands"
}, {
    id: "dum",
    displayName: "neerlandès mitjà"
}, {
    id: "new",
    displayName: "newari"
}, {
    id: "nwc",
    displayName: "newari clàssic"
}, {
    id: "sba",
    displayName: "ngambay"
}, {
    id: "nia",
    displayName: "nias"
}, {
    id: "niu",
    displayName: "niueà"
}, {
    id: "nog",
    displayName: "nogai"
}, {
    id: "nb",
    displayName: "noruec bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "noruec"
}, {
    id: "nov",
    displayName: "novial"
}, {
    id: "yav",
    displayName: "yangben",
    nativeDisplayName: "nuasue"
}, {
    id: "nym",
    displayName: "nyamwesi"
}, {
    id: "ny",
    displayName: "nyanja"
}, {
    id: "nn",
    displayName: "noruec nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "nyo",
    displayName: "nyoro"
}, {
    id: "nzi",
    displayName: "nzema"
}, {
    id: "non",
    displayName: "nòrdic antic"
}, {
    id: "nqo",
    displayName: "n’Ko"
}, {
    id: "oc",
    displayName: "occità"
}, {
    id: "oj",
    displayName: "ojibwa"
}, {
    id: "xog",
    displayName: "soga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "osage"
}, {
    id: "uz",
    displayName: "uzbek",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pal",
    displayName: "pahlavi"
}, {
    id: "pau",
    displayName: "palauà"
}, {
    id: "pi",
    displayName: "pali"
}, {
    id: "pam",
    displayName: "pampanga"
}, {
    id: "pag",
    displayName: "pangasi"
}, {
    id: "lah",
    displayName: "panjabi occidental"
}, {
    id: "pap",
    displayName: "papiamento"
}, {
    id: "peo",
    displayName: "persa antic"
}, {
    id: "pcd",
    displayName: "picard"
}, {
    id: "chn",
    displayName: "pidgin chinook"
}, {
    id: "pms",
    displayName: "piemontès"
}, {
    id: "pl",
    displayName: "polonès",
    nativeDisplayName: "polski"
}, {
    id: "pon",
    displayName: "ponapeà"
}, {
    id: "pt",
    displayName: "portuguès",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "portuguès del Brasil",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "portuguès de Portugal",
    nativeDisplayName: "português europeu"
}, {
    id: "pro",
    displayName: "provençal antic"
}, {
    id: "ff",
    displayName: "ful",
    nativeDisplayName: "Pulaar"
}, {
    id: "quc",
    displayName: "quitxé"
}, {
    id: "raj",
    displayName: "rajasthani"
}, {
    id: "rap",
    displayName: "rapanui"
}, {
    id: "rar",
    displayName: "rarotongà"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "rgn",
    displayName: "romanyès"
}, {
    id: "rom",
    displayName: "romaní"
}, {
    id: "ro",
    displayName: "romanès",
    nativeDisplayName: "română"
}, {
    id: "cgg",
    displayName: "chiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "retoromànic",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "quítxua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "ssy",
    displayName: "saho"
}, {
    id: "smj",
    displayName: "sami lule"
}, {
    id: "sma",
    displayName: "sami meridional"
}, {
    id: "sms",
    displayName: "sami skolt"
}, {
    id: "sm",
    displayName: "samoà"
}, {
    id: "sad",
    displayName: "sandawe"
}, {
    id: "sat",
    displayName: "santali"
}, {
    id: "sc",
    displayName: "sard"
}, {
    id: "sdc",
    displayName: "sard sasserès"
}, {
    id: "sas",
    displayName: "sasak"
}, {
    id: "de_ch",
    displayName: "alt alemany suís",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "alemany suís",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "bum",
    displayName: "seki"
}, {
    id: "sel",
    displayName: "selkup"
}, {
    id: "seh",
    displayName: "sena",
    nativeDisplayName: "sena"
}, {
    id: "see",
    displayName: "seneca"
}, {
    id: "zxx",
    displayName: "sense contingut lingüístic"
}, {
    id: "sh",
    displayName: "serbocroat"
}, {
    id: "srr",
    displayName: "serer"
}, {
    id: "tn",
    displayName: "setswana"
}, {
    id: "sq",
    displayName: "albanès",
    nativeDisplayName: "shqip"
}, {
    id: "nnh",
    displayName: "ngiemboon",
    nativeDisplayName: "Shwóŋò ngiembɔɔn"
}, {
    id: "scn",
    displayName: "sicilià"
}, {
    id: "sid",
    displayName: "sidamo"
}, {
    id: "szl",
    displayName: "silesià"
}, {
    id: "sd",
    displayName: "sindhi"
}, {
    id: "syr",
    displayName: "siríac"
}, {
    id: "syc",
    displayName: "siríac clàssic"
}, {
    id: "den",
    displayName: "slavey"
}, {
    id: "sk",
    displayName: "eslovac",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "eslovè",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "sogdià"
}, {
    id: "snk",
    displayName: "soninke"
}, {
    id: "so",
    displayName: "somali",
    nativeDisplayName: "Soomaali"
}, {
    id: "st",
    displayName: "sotho meridional"
}, {
    id: "nso",
    displayName: "sotho septentrional"
}, {
    id: "srn",
    displayName: "sranan"
}, {
    id: "suk",
    displayName: "sukuma"
}, {
    id: "sux",
    displayName: "sumeri"
}, {
    id: "su",
    displayName: "sundanès"
}, {
    id: "fi",
    displayName: "finès",
    nativeDisplayName: "suomi"
}, {
    id: "sus",
    displayName: "susú"
}, {
    id: "sv",
    displayName: "suec",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "swazi"
}, {
    id: "sa",
    displayName: "sànscrit"
}, {
    id: "sg",
    displayName: "sango",
    nativeDisplayName: "Sängö"
}, {
    id: "zbl",
    displayName: "símbols Bliss"
}, {
    id: "tg",
    displayName: "tadjik"
}, {
    id: "tl",
    displayName: "tagal"
}, {
    id: "ty",
    displayName: "tahitià"
}, {
    id: "tly",
    displayName: "talix"
}, {
    id: "tzm",
    displayName: "amazic del Marroc central",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "cabilenc",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "trv",
    displayName: "taroko"
}, {
    id: "twq",
    displayName: "tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "ttt",
    displayName: "tat meridional"
}, {
    id: "tem",
    displayName: "temne"
}, {
    id: "ter",
    displayName: "terena"
}, {
    id: "tet",
    displayName: "tetun"
}, {
    id: "nus",
    displayName: "nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "tig",
    displayName: "tigre"
}, {
    id: "tiv",
    displayName: "tiv"
}, {
    id: "vi",
    displayName: "vietnamita",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tli",
    displayName: "tlingit"
}, {
    id: "tpi",
    displayName: "tok pisin"
}, {
    id: "tkl",
    displayName: "tokelauès"
}, {
    id: "tog",
    displayName: "tonga"
}, {
    id: "tkr",
    displayName: "tsakhur"
}, {
    id: "lu",
    displayName: "luba katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tsi",
    displayName: "tsimshià"
}, {
    id: "ts",
    displayName: "tsonga"
}, {
    id: "tum",
    displayName: "tumbuka"
}, {
    id: "ota",
    displayName: "turc otomà"
}, {
    id: "tvl",
    displayName: "tuvaluà"
}, {
    id: "tyv",
    displayName: "tuvinià"
}, {
    id: "tw",
    displayName: "twi"
}, {
    id: "chg",
    displayName: "txagatai"
}, {
    id: "chb",
    displayName: "txibtxa"
}, {
    id: "cv",
    displayName: "txuvaix"
}, {
    id: "kcg",
    displayName: "tyap"
}, {
    id: "tt",
    displayName: "tàtar"
}, {
    id: "crh",
    displayName: "tàtar de Crimea"
}, {
    id: "tk",
    displayName: "turcman",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "turc",
    nativeDisplayName: "Türkçe"
}, {
    id: "udm",
    displayName: "udmurt"
}, {
    id: "uga",
    displayName: "ugarític"
}, {
    id: "umb",
    displayName: "umbundu"
}, {
    id: "wa",
    displayName: "való"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "vep",
    displayName: "vepse"
}, {
    id: "nl_be",
    displayName: "flamenc",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "volapük",
    nativeDisplayName: "Volapük"
}, {
    id: "vec",
    displayName: "vènet"
}, {
    id: "vot",
    displayName: "vòtic"
}, {
    id: "wae",
    displayName: "walser",
    nativeDisplayName: "Walser"
}, {
    id: "war",
    displayName: "waray"
}, {
    id: "wbp",
    displayName: "warlpiri"
}, {
    id: "was",
    displayName: "washo"
}, {
    id: "guc",
    displayName: "wayú"
}, {
    id: "fy",
    displayName: "frisó occidental",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "wòlof"
}, {
    id: "shn",
    displayName: "xan"
}, {
    id: "chy",
    displayName: "xeienne"
}, {
    id: "lzh",
    displayName: "xinès clàssic"
}, {
    id: "gan",
    displayName: "xinès gan"
}, {
    id: "hak",
    displayName: "xinès hakka"
}, {
    id: "nan",
    displayName: "xinès min del sud"
}, {
    id: "wuu",
    displayName: "xinès wu"
}, {
    id: "hsn",
    displayName: "xinès xiang"
}, {
    id: "xh",
    displayName: "xosa"
}, {
    id: "yao",
    displayName: "yao"
}, {
    id: "yap",
    displayName: "yapeà"
}, {
    id: "ybb",
    displayName: "yemba"
}, {
    id: "zap",
    displayName: "zapoteca"
}, {
    id: "dje",
    displayName: "zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "zaza"
}, {
    id: "zea",
    displayName: "zelandès"
}, {
    id: "zen",
    displayName: "zenaga"
}, {
    id: "za",
    displayName: "zhuang"
}, {
    id: "zun",
    displayName: "zuni"
}, {
    id: "aa",
    displayName: "àfar"
}, {
    id: "arz",
    displayName: "àrab egipci"
}, {
    id: "shu",
    displayName: "àrab txadià"
}, {
    id: "av",
    displayName: "àvar"
}, {
    id: "yo",
    displayName: "ioruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islandès",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "alemany austríac",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "txec",
    nativeDisplayName: "čeština"
}, {
    id: "bas",
    displayName: "basa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "hawaià",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "grec",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "bielorús",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "búlgar",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "osseta",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "kirguís",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "macedoni",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongol",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "txetxè",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "rus",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "iacut",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "serbi",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ucraïnès",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "eslau eclesiàstic",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "kazakh",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armeni",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "jiddisch",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "hebreu",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uigur",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdú",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "àrab",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "àrab estàndard modern",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "persa",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "luri septentrional",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "mazanderani",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "paixtu",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "kurd sorani",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "caixmiri",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepalès",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "assamès",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengalí",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "panjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gujarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tàmil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malaiàlam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "singalès",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "tailandès",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "laosià",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibetà",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzongka",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "birmà",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "georgià",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrinya",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amhàric",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "khmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "amazic estàndard marroquí",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "taixelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "xinès",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japonès",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "xinès simplificat",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "cantonès",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "xinès tradicional",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "yi sichuan",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "cherokee",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "coreà",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Afak",
    displayName: "afaka"
}, {
    id: "Narb",
    displayName: "antic nord-aràbic"
}, {
    id: "Perm",
    displayName: "antic pèrmic"
}, {
    id: "Armi",
    displayName: "arameu imperial"
}, {
    id: "Armn",
    displayName: "armeni"
}, {
    id: "Avst",
    displayName: "avèstic"
}, {
    id: "Bali",
    displayName: "balinès"
}, {
    id: "Bamu",
    displayName: "bamum"
}, {
    id: "Bass",
    displayName: "bassa vah"
}, {
    id: "Batk",
    displayName: "batak"
}, {
    id: "Beng",
    displayName: "bengalí"
}, {
    id: "Mymr",
    displayName: "birmà"
}, {
    id: "Bopo",
    displayName: "bopomofo"
}, {
    id: "Brah",
    displayName: "brahmi"
}, {
    id: "Brai",
    displayName: "braille"
}, {
    id: "Bugi",
    displayName: "buginès"
}, {
    id: "Buhd",
    displayName: "buhid"
}, {
    id: "Cari",
    displayName: "carià"
}, {
    id: "Cakm",
    displayName: "chakma"
}, {
    id: "Cham",
    displayName: "cham"
}, {
    id: "Cher",
    displayName: "cherokee"
}, {
    id: "Cirt",
    displayName: "cirth"
}, {
    id: "Cyrl",
    displayName: "ciríl·lic"
}, {
    id: "Cyrs",
    displayName: "ciríl·lic de l’antic eslau eclesiàstic"
}, {
    id: "Zyyy",
    displayName: "comú"
}, {
    id: "Copt",
    displayName: "copte"
}, {
    id: "Kore",
    displayName: "coreà"
}, {
    id: "Xsux",
    displayName: "cuneïforme sumeri-accadi"
}, {
    id: "Ital",
    displayName: "cursiva antiga"
}, {
    id: "Merc",
    displayName: "cursiva meroítica"
}, {
    id: "Egyd",
    displayName: "demòtic egipci"
}, {
    id: "Dsrt",
    displayName: "deseret"
}, {
    id: "Deva",
    displayName: "devanagari"
}, {
    id: "Sind",
    displayName: "devangari"
}, {
    id: "Inds",
    displayName: "escriptura de la vall de l’Indus"
}, {
    id: "Sgnw",
    displayName: "escriptura de signes"
}, {
    id: "Zzzz",
    displayName: "escriptura desconeguda"
}, {
    id: "Ethi",
    displayName: "etiòpic"
}, {
    id: "Phnx",
    displayName: "fenici"
}, {
    id: "Nkgb",
    displayName: "geba"
}, {
    id: "Geor",
    displayName: "georgià"
}, {
    id: "Geok",
    displayName: "georgià hucuri"
}, {
    id: "Glag",
    displayName: "glagolític"
}, {
    id: "Gran",
    displayName: "grantha"
}, {
    id: "Grek",
    displayName: "grec"
}, {
    id: "Gujr",
    displayName: "gujarati"
}, {
    id: "Guru",
    displayName: "gurmukhi"
}, {
    id: "Goth",
    displayName: "gòtic"
}, {
    id: "Hani",
    displayName: "han"
}, {
    id: "Hang",
    displayName: "hangul"
}, {
    id: "Hano",
    displayName: "hanunoo"
}, {
    id: "Hebr",
    displayName: "hebreu"
}, {
    id: "Zinh",
    displayName: "heretat"
}, {
    id: "Egyh",
    displayName: "hieràtic egipci"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Hung",
    displayName: "hongarès antic"
}, {
    id: "Jpan",
    displayName: "japonès"
}, {
    id: "Java",
    displayName: "javanès"
}, {
    id: "Hluw",
    displayName: "jeroglífic anatoli"
}, {
    id: "Egyp",
    displayName: "jeroglífic egipci"
}, {
    id: "Maya",
    displayName: "jeroglífics maies"
}, {
    id: "Jurc",
    displayName: "jürchen"
}, {
    id: "Kthi",
    displayName: "kaithi"
}, {
    id: "Knda",
    displayName: "kannada"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Hrkt",
    displayName: "katakana o hiragana"
}, {
    id: "Kali",
    displayName: "kayah li"
}, {
    id: "Khar",
    displayName: "kharosthi"
}, {
    id: "Khmr",
    displayName: "khmer"
}, {
    id: "Khoj",
    displayName: "khoja"
}, {
    id: "Kpel",
    displayName: "kpelle"
}, {
    id: "Lana",
    displayName: "lanna"
}, {
    id: "Laoo",
    displayName: "lao"
}, {
    id: "Lepc",
    displayName: "lepcha"
}, {
    id: "Lyci",
    displayName: "lici"
}, {
    id: "Lydi",
    displayName: "lidi"
}, {
    id: "Limb",
    displayName: "limbu"
}, {
    id: "Lina",
    displayName: "lineal A"
}, {
    id: "Linb",
    displayName: "lineal B"
}, {
    id: "Lisu",
    displayName: "lisu"
}, {
    id: "Latn",
    displayName: "llatí"
}, {
    id: "Latf",
    displayName: "llatí fraktur"
}, {
    id: "Latg",
    displayName: "llatí gaèlic"
}, {
    id: "Visp",
    displayName: "llenguatge visible"
}, {
    id: "Loma",
    displayName: "loma"
}, {
    id: "Mlym",
    displayName: "malaiàlam"
}, {
    id: "Mand",
    displayName: "mandaic"
}, {
    id: "Mtei",
    displayName: "manipurí"
}, {
    id: "Mani",
    displayName: "maniqueu"
}, {
    id: "Mend",
    displayName: "mende"
}, {
    id: "Mero",
    displayName: "meroític"
}, {
    id: "Mong",
    displayName: "mongol"
}, {
    id: "Moon",
    displayName: "moon"
}, {
    id: "Mroo",
    displayName: "mro"
}, {
    id: "Nbat",
    displayName: "nabateu"
}, {
    id: "Zmth",
    displayName: "notació matemàtica"
}, {
    id: "Talu",
    displayName: "nou tai lue"
}, {
    id: "Nshu",
    displayName: "nü shu"
}, {
    id: "Nkoo",
    displayName: "n’Ko"
}, {
    id: "Ogam",
    displayName: "ogham"
}, {
    id: "Orya",
    displayName: "oriya"
}, {
    id: "Orkh",
    displayName: "orkhon"
}, {
    id: "Osma",
    displayName: "osmanya"
}, {
    id: "Hmng",
    displayName: "pahawh hmong"
}, {
    id: "Phlv",
    displayName: "pahlavi"
}, {
    id: "Phli",
    displayName: "pahlavi inscripcional"
}, {
    id: "Palm",
    displayName: "palmirè"
}, {
    id: "Prti",
    displayName: "parthià inscripcional"
}, {
    id: "Xpeo",
    displayName: "persa antic"
}, {
    id: "Phag",
    displayName: "phagspa"
}, {
    id: "Plrd",
    displayName: "pollard miao"
}, {
    id: "Phlp",
    displayName: "psalter pahlavi"
}, {
    id: "Rjng",
    displayName: "rejang"
}, {
    id: "Roro",
    displayName: "rongo-rongo"
}, {
    id: "Runr",
    displayName: "rúnic"
}, {
    id: "Samr",
    displayName: "samarità"
}, {
    id: "Olck",
    displayName: "santali"
}, {
    id: "Sara",
    displayName: "sarati"
}, {
    id: "Saur",
    displayName: "saurashtra"
}, {
    id: "Zxxx",
    displayName: "sense escriptura"
}, {
    id: "Shaw",
    displayName: "shavià"
}, {
    id: "Shrd",
    displayName: "shrada"
}, {
    id: "Hans",
    displayName: "simplificat"
}, {
    id: "Sinh",
    displayName: "singalès"
}, {
    id: "Syrc",
    displayName: "siríac"
}, {
    id: "Syre",
    displayName: "siríac estrangelo"
}, {
    id: "Syrj",
    displayName: "siríac occidental"
}, {
    id: "Syrn",
    displayName: "siríac oriental"
}, {
    id: "Sora",
    displayName: "sora sompeng"
}, {
    id: "Sarb",
    displayName: "sud-aràbic antic"
}, {
    id: "Sund",
    displayName: "sundanès"
}, {
    id: "Sylo",
    displayName: "syloti nagri"
}, {
    id: "Cans",
    displayName: "síl·labes dels aborígens canadencs unificats"
}, {
    id: "Zsym",
    displayName: "símbols"
}, {
    id: "Blis",
    displayName: "símbols Bliss"
}, {
    id: "Tagb",
    displayName: "tagbanwa"
}, {
    id: "Tglg",
    displayName: "tagàlog"
}, {
    id: "Tale",
    displayName: "tai le"
}, {
    id: "Tavt",
    displayName: "tai viet"
}, {
    id: "Thai",
    displayName: "tailandès"
}, {
    id: "Takr",
    displayName: "takri"
}, {
    id: "Tang",
    displayName: "tangut"
}, {
    id: "Dupl",
    displayName: "taquigrafia Duployé"
}, {
    id: "Telu",
    displayName: "telugu"
}, {
    id: "Teng",
    displayName: "tengwar"
}, {
    id: "Thaa",
    displayName: "thaana"
}, {
    id: "Tibt",
    displayName: "tibetà"
}, {
    id: "Tfng",
    displayName: "tifinagh"
}, {
    id: "Tirh",
    displayName: "tirhut"
}, {
    id: "Hant",
    displayName: "tradicional"
}, {
    id: "Taml",
    displayName: "tàmil"
}, {
    id: "Ugar",
    displayName: "ugarític"
}, {
    id: "Vaii",
    displayName: "vai"
}, {
    id: "Wara",
    displayName: "varang kshiti"
}, {
    id: "Wole",
    displayName: "woleai"
}, {
    id: "Cprt",
    displayName: "xipriota"
}, {
    id: "Yiii",
    displayName: "yi"
}, {
    id: "Arab",
    displayName: "àrab"
} ];

inter.currencies = [ {
    id: "BOV",
    displayName: "MVDOL bolivià",
    symbol: "BOV",
    one: "MVDOL bolivià",
    other: "MVDOL bolivians"
}, {
    id: "AFN",
    displayName: "afgani afganès",
    symbol: "AFN",
    one: "afgani afganès",
    other: "afganis afganesos"
}, {
    id: "AFA",
    displayName: "afgani afganès (1927–2002)",
    symbol: "AFA",
    one: "afgani afganès (1927–2002)",
    other: "afganis afganesos (1927–2002)"
}, {
    id: "BRZ",
    displayName: "antic cruzeiro brasiler",
    symbol: "BRZ",
    one: "antic cruzeiro brasiler",
    other: "antics cruzeiros brasilers"
}, {
    id: "ROL",
    displayName: "antic leu romanès",
    symbol: "ROL",
    one: "antic leu romanès",
    other: "antics lei romanesos"
}, {
    id: "MZM",
    displayName: "antic metical moçambiquès",
    symbol: "MZM",
    one: "antic metical moçambiquès",
    other: "antics meticals moçambiquesos"
}, {
    id: "KRO",
    displayName: "antic won sud-coreà",
    symbol: "KRO",
    one: "antic won sud-coreà",
    other: "antics wons sud-coreans"
}, {
    id: "SDP",
    displayName: "antiga lliura sudanesa",
    symbol: "SDP",
    one: "antiga lliura sudanesa",
    other: "antigues lliures sudaneses"
}, {
    id: "MGA",
    displayName: "ariary malgaix",
    symbol: "MGA",
    one: "ariary malgaix",
    other: "ariarys malgaixos"
}, {
    id: "ARA",
    displayName: "austral argentí",
    symbol: "ARA",
    one: "austral argentí",
    other: "australs argentins"
}, {
    id: "THB",
    displayName: "baht tailandès",
    symbol: "฿",
    one: "baht tailandès",
    other: "bahts tailandesos"
}, {
    id: "PAB",
    displayName: "balboa panameny",
    symbol: "PAB",
    one: "balboa panameny",
    other: "balboes panamenys"
}, {
    id: "ETB",
    displayName: "birr etíop",
    symbol: "ETB",
    one: "birr etíop",
    other: "birrs etíops"
}, {
    id: "BOL",
    displayName: "boliviano bolivià (1863–1963)",
    symbol: "BOL",
    one: "boliviano bolivià (1863–1963)",
    other: "bolivianos bolivians (1863–1963)"
}, {
    id: "BOB",
    displayName: "bolivià",
    symbol: "BOB",
    one: "bolivià",
    other: "bolivians"
}, {
    id: "VEF",
    displayName: "bolívar veneçolà",
    symbol: "VEF",
    one: "bolívar veneçolà",
    other: "bolívars veneçolans"
}, {
    id: "VEB",
    displayName: "bolívar veneçolà (1871–2008)",
    symbol: "VEB",
    one: "bolívar veneçolà (1871–2008)",
    other: "bolívars veneçolans (1871–2008)"
}, {
    id: "GHS",
    displayName: "cedi ghanès",
    symbol: "GHS",
    one: "cedi ghanès",
    other: "cedis ghanesos"
}, {
    id: "GHC",
    displayName: "cedi ghanès (1979–2007)",
    symbol: "GHC",
    one: "cedi ghanès (1979–2007)",
    other: "cedis ghanesos (1979–2007)"
}, {
    id: "XTS",
    displayName: "codi reservat per a proves",
    symbol: "XTS",
    one: "codi reservat per a proves",
    other: "codi reservat per a proves"
}, {
    id: "CRC",
    displayName: "colón costa-riqueny",
    symbol: "CRC",
    one: "colón costa-riqueny",
    other: "colones costa-riquenys"
}, {
    id: "SVC",
    displayName: "colón salvadorenc",
    symbol: "SVC",
    one: "colón salvadorenc",
    other: "colones salvadorencs"
}, {
    id: "DKK",
    displayName: "corona danesa",
    symbol: "DKK",
    one: "corona danesa",
    other: "corones daneses"
}, {
    id: "SKK",
    displayName: "corona eslovaca",
    symbol: "SKK",
    one: "corona eslovaca",
    other: "corones eslovaques"
}, {
    id: "EEK",
    displayName: "corona estoniana",
    symbol: "EEK",
    one: "corona estoniana",
    other: "corones estonianes"
}, {
    id: "CSK",
    displayName: "corona forta txecoslovaca",
    symbol: "CSK",
    one: "corona forta txecoslovaca",
    other: "corones fortes txecoslovaques"
}, {
    id: "ISK",
    displayName: "corona islandesa",
    symbol: "ISK",
    one: "corona islandesa",
    other: "corones islandeses"
}, {
    id: "ISJ",
    displayName: "corona islandesa antiga",
    one: "corona islandesa antiga",
    other: "corones islandeses antigues"
}, {
    id: "NOK",
    displayName: "corona noruega",
    symbol: "NOK",
    one: "corona noruega",
    other: "corones noruegues"
}, {
    id: "SEK",
    displayName: "corona sueca",
    symbol: "SEK",
    one: "corona sueca",
    other: "corones sueques"
}, {
    id: "CZK",
    displayName: "corona txeca",
    symbol: "CZK",
    one: "corona txeca",
    other: "corones txeques"
}, {
    id: "BRC",
    displayName: "cruzado brasiler",
    symbol: "BRC",
    one: "cruzado brasiler",
    other: "cruzados brasilers"
}, {
    id: "BRN",
    displayName: "cruzado novo brasiler",
    symbol: "BRN",
    one: "cruzado novo brasiler",
    other: "cruzados novos brasilers"
}, {
    id: "BRR",
    displayName: "cruzeiro brasiler",
    symbol: "BRR",
    one: "cruzeiro brasiler",
    other: "cruzeiros brasilers"
}, {
    id: "BRE",
    displayName: "cruzeiro brasiler (1990–1993)",
    symbol: "BRE",
    one: "cruzeiro brasiler (1990–1993)",
    other: "cruzeiros brasilers (1990–1993)"
}, {
    id: "BRB",
    displayName: "cruzeiro novo brasiler (1967–1986)",
    symbol: "BRB",
    one: "cruzeiro novo brasiler (1967–1986)",
    other: "cruzeiros novos brasilers (1967–1986)"
}, {
    id: "GEK",
    displayName: "cupó de lari georgià",
    symbol: "GEK",
    one: "cupó de lari georgià",
    other: "cupons de lari georgians"
}, {
    id: "MDC",
    displayName: "cupó moldau",
    symbol: "MDC",
    one: "cupó moldau",
    other: "cupons moldaus"
}, {
    id: "NIC",
    displayName: "córdoba nicaragüenca",
    symbol: "NIC",
    one: "córdoba nicaragüenca",
    other: "córdobas nicaragüenques"
}, {
    id: "NIO",
    displayName: "córdoba oro nicaragüenca",
    symbol: "NIO",
    one: "córdoba oro nicaragüenca",
    other: "córdobas oro nicaragüenques"
}, {
    id: "GMD",
    displayName: "dalasi gambià",
    symbol: "GMD",
    one: "dalasi gambià",
    other: "dalasis gambians"
}, {
    id: "MKD",
    displayName: "denar macedoni",
    symbol: "MKD",
    one: "denar macedoni",
    other: "denari macedonis"
}, {
    id: "MKN",
    displayName: "denar macedoni (1992–1993)",
    symbol: "MKN",
    one: "denar macedoni (1992–1993)",
    other: "denari macedonis (1992–1993)"
}, {
    id: "DZD",
    displayName: "dinar algerià",
    symbol: "DZD",
    one: "dinar algerià",
    other: "dinars algerians"
}, {
    id: "YUN",
    displayName: "dinar convertible iugoslau",
    symbol: "YUN",
    one: "dinar convertible iugoslau",
    other: "dinars convertibles iugoslaus"
}, {
    id: "HRD",
    displayName: "dinar croat",
    symbol: "HRD",
    one: "dinar croat",
    other: "dinars croats"
}, {
    id: "BHD",
    displayName: "dinar de Bahrain",
    symbol: "BHD",
    one: "dinar de Bahrain",
    other: "dinars de Bahrain"
}, {
    id: "BAD",
    displayName: "dinar de Bòsnia i Hercegovina (1992–1994)",
    symbol: "BAD",
    one: "dinar de Bòsnia i Hercegovina (1992–1994)",
    other: "dinars de Bòsnia i Hercegovina (1992–1994)"
}, {
    id: "YUD",
    displayName: "dinar fort iugoslau",
    symbol: "YUD",
    one: "dinar fort iugoslau",
    other: "dinars forts iugoslaus"
}, {
    id: "YDD",
    displayName: "dinar iemenita",
    symbol: "YDD",
    one: "dinar iemenita",
    other: "dinars iemenites"
}, {
    id: "IQD",
    displayName: "dinar iraquià",
    symbol: "IQD",
    one: "dinar iraquià",
    other: "dinars iraquians"
}, {
    id: "YUR",
    displayName: "dinar iugoslau reformat (1992–1993)",
    symbol: "YUR",
    one: "dinar reformat iugoslau",
    other: "dinars reformats iugoslaus"
}, {
    id: "JOD",
    displayName: "dinar jordà",
    symbol: "JOD",
    one: "dinar jordà",
    other: "dinars jordans"
}, {
    id: "KWD",
    displayName: "dinar kuwaitià",
    symbol: "KWD",
    one: "dinar kuwaitià",
    other: "dinars kuwaitians"
}, {
    id: "LYD",
    displayName: "dinar libi",
    symbol: "LYD",
    one: "dinar libi",
    other: "dinars libis"
}, {
    id: "RSD",
    displayName: "dinar serbi",
    symbol: "RSD",
    one: "dinar serbi",
    other: "dinars serbis"
}, {
    id: "CSD",
    displayName: "dinar serbi antic",
    symbol: "CSD",
    one: "dinar serbi antic",
    other: "dinars serbis antics"
}, {
    id: "SDD",
    displayName: "dinar sudanès",
    symbol: "SDD",
    one: "dinar sudanès",
    other: "dinars sudanesos"
}, {
    id: "TND",
    displayName: "dinar tunisià",
    symbol: "TND",
    one: "dinar tunisià",
    other: "dinars tunisians"
}, {
    id: "STD",
    displayName: "dobra de São Tomé i Príncipe",
    symbol: "STD",
    one: "dobra de São Tomé i Príncipe",
    other: "dobras de São Tomé i Príncipe"
}, {
    id: "VND",
    displayName: "dong vietnamita",
    symbol: "₫",
    one: "dong vietnamita",
    other: "dongs vietnamites"
}, {
    id: "VNN",
    displayName: "dong vietnamita (1978–1985)",
    symbol: "VNN",
    one: "dong vietnamita (1978–1985)",
    other: "dongs vietnamites (1978–1985)"
}, {
    id: "GRD",
    displayName: "dracma grega",
    symbol: "GRD",
    one: "dracma grega",
    other: "dracmes gregues"
}, {
    id: "AMD",
    displayName: "dram armeni",
    symbol: "AMD",
    one: "dram armeni",
    other: "drams armenis"
}, {
    id: "XDR",
    displayName: "drets especials de gir",
    symbol: "XDR",
    one: "drets especials de gir",
    other: "drets especials de gir"
}, {
    id: "AED",
    displayName: "dírham de la UEA",
    symbol: "AED",
    one: "dírham de la UEA",
    other: "dírhams de la UEA"
}, {
    id: "MAD",
    displayName: "dírham marroquí",
    symbol: "MAD",
    one: "dírham marroquí",
    other: "dírhams marroquins"
}, {
    id: "AUD",
    displayName: "dòlar australià",
    symbol: "AU$",
    one: "dòlar australià",
    other: "dòlars australians"
}, {
    id: "CAD",
    displayName: "dòlar canadenc",
    symbol: "CAD",
    one: "dòlar canadenc",
    other: "dòlars canadencs"
}, {
    id: "BBD",
    displayName: "dòlar de Barbados",
    symbol: "BBD",
    one: "dòlar de Barbados",
    other: "dòlars de Barbados"
}, {
    id: "BZD",
    displayName: "dòlar de Belize",
    symbol: "BZD",
    one: "dòlar de Belize",
    other: "dòlars de Belize"
}, {
    id: "BND",
    displayName: "dòlar de Brunei",
    symbol: "BND",
    one: "dòlar de Brunei",
    other: "dòlars de Brunei"
}, {
    id: "GYD",
    displayName: "dòlar de Guyana",
    symbol: "GYD",
    one: "dòlar de Guyana",
    other: "dòlars de Guyana"
}, {
    id: "HKD",
    displayName: "dòlar de Hong Kong",
    symbol: "HK$",
    one: "dòlar de Hong Kong",
    other: "dòlars de Hong Kong"
}, {
    id: "SGD",
    displayName: "dòlar de Singapur",
    symbol: "SGD",
    one: "dòlar de Singapur",
    other: "dòlars de Singapur"
}, {
    id: "SRD",
    displayName: "dòlar de Surinam",
    symbol: "SRD",
    one: "dòlar de Surinam",
    other: "dòlars de Surinam"
}, {
    id: "TTD",
    displayName: "dòlar de Trinitat i Tobago",
    symbol: "TTD",
    one: "dòlar de Trinitat i Tobago",
    other: "dòlars de Trinitat i Tobago"
}, {
    id: "BSD",
    displayName: "dòlar de les Bahames",
    symbol: "BSD",
    one: "dòlar de les Bahames",
    other: "dòlars de les Bahames"
}, {
    id: "BMD",
    displayName: "dòlar de les Bermudes",
    symbol: "BMD",
    one: "dòlar de les Bermudes",
    other: "dòlars de les Bermudes"
}, {
    id: "KYD",
    displayName: "dòlar de les illes Caiman",
    symbol: "KYD",
    one: "dòlar de les illes Caiman",
    other: "dòlars de les illes Caiman"
}, {
    id: "SBD",
    displayName: "dòlar de les illes Salomó",
    symbol: "SBD",
    one: "dòlar de les illes Salomó",
    other: "dòlars de les illes Salomó"
}, {
    id: "XCD",
    displayName: "dòlar del Carib Oriental",
    symbol: "XCD",
    one: "dòlar del Carib Oriental",
    other: "dòlars del Carib Oriental"
}, {
    id: "USD",
    displayName: "dòlar dels Estats Units",
    symbol: "USD",
    one: "dòlar dels Estats Units",
    other: "dòlars dels Estats Units"
}, {
    id: "USN",
    displayName: "dòlar dels Estats Units (dia següent)",
    symbol: "USN",
    one: "dòlar dels Estats Units (dia següent)",
    other: "dòlars dels Estats Units (dia següent)"
}, {
    id: "USS",
    displayName: "dòlar dels Estats Units (mateix dia)",
    symbol: "USS",
    one: "dòlar dels Estats Units (mateix dia)",
    other: "dòlars dels Estats Units (mateix dia)"
}, {
    id: "FJD",
    displayName: "dòlar fijià",
    symbol: "FJD",
    one: "dòlar fijià",
    other: "dòlars fijians"
}, {
    id: "JMD",
    displayName: "dòlar jamaicà",
    symbol: "JMD",
    one: "dòlar jamaicà",
    other: "dòlars jamaicans"
}, {
    id: "LRD",
    displayName: "dòlar liberià",
    symbol: "LRD",
    one: "dòlar liberià",
    other: "dòlars liberians"
}, {
    id: "NAD",
    displayName: "dòlar namibià",
    symbol: "NAD",
    one: "dòlar namibià",
    other: "dòlars namibians"
}, {
    id: "NZD",
    displayName: "dòlar neozelandès",
    symbol: "NZ$",
    one: "dòlar neozelandès",
    other: "dòlars neozelandesos"
}, {
    id: "RHD",
    displayName: "dòlar rhodesià",
    symbol: "RHD",
    one: "dòlar rhodesià",
    other: "dòlars rhodesians"
}, {
    id: "ZWD",
    displayName: "dòlar zimbabuès (1980–2008)",
    symbol: "ZWD",
    one: "dòlar zimbabuès (1980–2008)",
    other: "dòlars zimbabuesos (1980–2008)"
}, {
    id: "ZWR",
    displayName: "dòlar zimbabuès (2008)",
    symbol: "ZWR",
    one: "dòlar zimbabuès (2008)",
    other: "dòlars zimbabuesos (2008)"
}, {
    id: "ZWL",
    displayName: "dòlar zimbabuès (2009)",
    symbol: "ZWL",
    one: "dòlar zimbabuès (2009)",
    other: "dòlars zimbabuesos (2009)"
}, {
    id: "GQE",
    displayName: "ekwele de Guinea Equatorial",
    symbol: "GQE",
    one: "ekwele de Guinea Equatorial",
    other: "bipkwele de Guinea Equatorial"
}, {
    id: "CVE",
    displayName: "escut de Cap Verd",
    symbol: "CVE",
    one: "escut de Cap Verd",
    other: "escuts de Cap Verd"
}, {
    id: "TPE",
    displayName: "escut de Timor",
    symbol: "TPE",
    one: "escut de Timor",
    other: "escuts de Timor"
}, {
    id: "GWE",
    displayName: "escut de la Guinea Portuguesa",
    symbol: "GWE",
    one: "escut de la Guinea Portuguesa",
    other: "escuts de la Guinea Portuguesa"
}, {
    id: "MZE",
    displayName: "escut moçambiquès",
    symbol: "MZE",
    one: "escut moçambiquès",
    other: "escuts moçambiquesos"
}, {
    id: "PTE",
    displayName: "escut portuguès",
    symbol: "PTE",
    one: "escut portuguès",
    other: "escuts portuguesos"
}, {
    id: "CLE",
    displayName: "escut xilè",
    symbol: "CLE",
    one: "escudo xilè",
    other: "escudos xilens"
}, {
    id: "EUR",
    displayName: "euro",
    symbol: "€",
    one: "euro",
    other: "euros"
}, {
    id: "CHE",
    displayName: "euro WIR",
    symbol: "CHE",
    one: "euro WIR",
    other: "euros WIR"
}, {
    id: "SRG",
    displayName: "florí de Surinam",
    symbol: "SRG",
    one: "florí de Surinam",
    other: "florins de Surinam"
}, {
    id: "ANG",
    displayName: "florí de les Antilles Neerlandeses",
    symbol: "ANG",
    one: "florí de les Antilles Neerlandeses",
    other: "florins de les Antilles Neerlandeses"
}, {
    id: "AWG",
    displayName: "florí d’Aruba",
    symbol: "AWG",
    one: "florí d’Aruba",
    other: "florins d’Aruba"
}, {
    id: "NLG",
    displayName: "florí neerlandès",
    symbol: "NLG",
    one: "florí neerlandès",
    other: "florins neerlandesos"
}, {
    id: "XRE",
    displayName: "fons RINET",
    symbol: "XRE",
    one: "fons RINET",
    other: "fons RINET"
}, {
    id: "XOF",
    displayName: "franc CFA BCEAO",
    symbol: "CFA",
    one: "franc CFA BCEAO",
    other: "francs CFA BCEAO"
}, {
    id: "XAF",
    displayName: "franc CFA BEAC",
    symbol: "FCFA",
    one: "franc CFA BEAC",
    other: "francs CFA BEAC"
}, {
    id: "XPF",
    displayName: "franc CFP",
    symbol: "CFPF",
    one: "franc CFP",
    other: "francs CFP"
}, {
    id: "XFU",
    displayName: "franc UIC francès",
    symbol: "XFU",
    one: "franc UIC francès",
    other: "francs UIC francesos"
}, {
    id: "CHW",
    displayName: "franc WIR",
    symbol: "CHW",
    one: "franc WIR",
    other: "francs WIR"
}, {
    id: "BEF",
    displayName: "franc belga",
    symbol: "BEF",
    one: "franc belga",
    other: "francs belgues"
}, {
    id: "BEC",
    displayName: "franc belga (convertible)",
    symbol: "BEC",
    one: "franc belga (convertible)",
    other: "francs belgues (convertibles)"
}, {
    id: "BEL",
    displayName: "franc belga (financer)",
    symbol: "BEL",
    one: "franc belga (financer)",
    other: "francs belgues (financers)"
}, {
    id: "CDF",
    displayName: "franc congolès",
    symbol: "CDF",
    one: "franc congolès",
    other: "francs congolesos"
}, {
    id: "LUC",
    displayName: "franc convertible luxemburguès",
    symbol: "LUC",
    one: "franc convertible luxemburguès",
    other: "francs convertibles luxemburguesos"
}, {
    id: "BIF",
    displayName: "franc de Burundi",
    symbol: "BIF",
    one: "franc de Burundi",
    other: "francs de Burundi"
}, {
    id: "DJF",
    displayName: "franc de Djibouti",
    symbol: "DJF",
    one: "franc de Djibouti",
    other: "francs de Djibouti"
}, {
    id: "RWF",
    displayName: "franc de Ruanda",
    symbol: "RWF",
    one: "franc de Ruanda",
    other: "francs de Ruanda"
}, {
    id: "KMF",
    displayName: "franc de les Comores",
    symbol: "KMF",
    one: "franc de les Comores",
    other: "francs de les Comores"
}, {
    id: "LUL",
    displayName: "franc financer luxemburguès",
    symbol: "LUL",
    one: "franc financer luxemburguès",
    other: "francs financers luxemburguesos"
}, {
    id: "FRF",
    displayName: "franc francès",
    symbol: "FRF",
    one: "franc francès",
    other: "francs francesos"
}, {
    id: "GNF",
    displayName: "franc guineà",
    symbol: "GNF",
    one: "franc guineà",
    other: "francs guineans"
}, {
    id: "LUF",
    displayName: "franc luxemburguès",
    symbol: "LUF",
    one: "franc luxemburguès",
    other: "francs luxemburguesos"
}, {
    id: "MGF",
    displayName: "franc malgaix",
    symbol: "MGF",
    one: "franc malgaix",
    other: "francs malgaixos"
}, {
    id: "MLF",
    displayName: "franc malià",
    symbol: "MLF",
    one: "franc malià",
    other: "francs malians"
}, {
    id: "MAF",
    displayName: "franc marroquí",
    symbol: "MAF",
    one: "franc marroquí",
    other: "francs marroquins"
}, {
    id: "MCF",
    displayName: "franc monegasc",
    symbol: "MCF",
    one: "franc monegasc",
    other: "francs monegascos"
}, {
    id: "XFO",
    displayName: "franc or francès",
    symbol: "XFO",
    one: "franc or francès",
    other: "francs or francesos"
}, {
    id: "CHF",
    displayName: "franc suís",
    symbol: "CHF",
    one: "franc suís",
    other: "francs suïssos"
}, {
    id: "HUF",
    displayName: "fòrint hongarès",
    symbol: "HUF",
    one: "fòrint hongarès",
    other: "fòrints hongaresos"
}, {
    id: "HTG",
    displayName: "gourde haitià",
    symbol: "HTG",
    one: "gourde haitià",
    other: "gourdes haitians"
}, {
    id: "PYG",
    displayName: "guaraní paraguaià",
    symbol: "PYG",
    one: "guaraní paraguaià",
    other: "guaranís paraguaians"
}, {
    id: "UAH",
    displayName: "hrívnia ucraïnesa",
    symbol: "UAH",
    one: "hrívnia ucraïnesa",
    other: "hrívnies ucraïneses"
}, {
    id: "KRH",
    displayName: "hwan sud-coreà (1953–1962)",
    symbol: "KRH",
    one: "hwan sud-coreà",
    other: "hwans sud-coreans"
}, {
    id: "JPY",
    displayName: "ien japonès",
    symbol: "JP¥",
    one: "ien japonès",
    other: "iens japonesos"
}, {
    id: "PEI",
    displayName: "inti peruà",
    symbol: "PEI",
    one: "inti peruà",
    other: "intis peruans"
}, {
    id: "CNY",
    displayName: "iuan xinès",
    symbol: "¥",
    one: "iuan xinès",
    other: "iuan xinesos"
}, {
    id: "UAK",
    displayName: "karbóvanets ucraïnès",
    symbol: "UAK",
    one: "karbóvanets ucraïnès",
    other: "karbóvantsiv ucraïnesos"
}, {
    id: "PGK",
    displayName: "kina de Papua Nova Guinea",
    symbol: "PGK",
    one: "kina de Papua Nova Guinea",
    other: "kines de Papua Nova Guinea"
}, {
    id: "LAK",
    displayName: "kip laosià",
    symbol: "LAK",
    one: "kip laosià",
    other: "kips laosians"
}, {
    id: "HRK",
    displayName: "kuna croata",
    symbol: "HRK",
    one: "kuna croata",
    other: "kunes croates"
}, {
    id: "MWK",
    displayName: "kwacha malawià",
    symbol: "MWK",
    one: "kwacha malawià",
    other: "kwachas malawians"
}, {
    id: "ZMW",
    displayName: "kwacha zambià",
    symbol: "ZMW",
    one: "kwacha zambià",
    other: "kwacha zambians"
}, {
    id: "ZMK",
    displayName: "kwacha zambià (1968–2012)",
    symbol: "ZMK",
    one: "kwacha zambià (1968–2012)",
    other: "kwacha zambians (1968–2012)"
}, {
    id: "AOA",
    displayName: "kwanza angolès",
    symbol: "AOA",
    one: "kwanza angolès",
    other: "kwanzas angolesos"
}, {
    id: "AOK",
    displayName: "kwanza angolès (1977–1991)",
    symbol: "AOK",
    one: "kwanza angolès (1977–1991)",
    other: "kwanzas angolesos (1977–1991)"
}, {
    id: "AOR",
    displayName: "kwanza angolès reajustat (1995–1999)",
    symbol: "AOR",
    one: "kwanza angolès reajustat (1995–1999)",
    other: "kwanzas angolesos (1995–1999)"
}, {
    id: "BUK",
    displayName: "kyat birmà",
    symbol: "BUK",
    one: "kyat birmà",
    other: "kyats birmans"
}, {
    id: "MMK",
    displayName: "kyat de Myanmar",
    symbol: "MMK",
    one: "kyat de Myanmar",
    other: "kyats de Myanmar"
}, {
    id: "GEL",
    displayName: "lari georgià",
    symbol: "GEL",
    one: "lari georgià",
    other: "laris georgians"
}, {
    id: "LVL",
    displayName: "lats letó",
    symbol: "LVL",
    one: "lats letó",
    other: "lati letons"
}, {
    id: "ALL",
    displayName: "lek albanès",
    symbol: "ALL",
    one: "lek albanès",
    other: "lekë albanesos"
}, {
    id: "ALK",
    displayName: "lek albanès (1946–1965)",
    one: "lek albanès (1946–1965)",
    other: "lekë albanesos (1946–1965)"
}, {
    id: "HNL",
    displayName: "lempira hondurenya",
    symbol: "HNL",
    one: "lempira hondurenya",
    other: "lempires hondurenyes"
}, {
    id: "SLL",
    displayName: "leone de Sierra Leone",
    symbol: "SLL",
    one: "leone de Sierra Leone",
    other: "leones de Sierra Leone"
}, {
    id: "MDL",
    displayName: "leu moldau",
    symbol: "MDL",
    one: "leu moldau",
    other: "lei moldaus"
}, {
    id: "RON",
    displayName: "leu romanès",
    symbol: "RON",
    one: "leu romanès",
    other: "lei romanesos"
}, {
    id: "BGN",
    displayName: "lev búlgar",
    symbol: "BGN",
    one: "lev búlgar",
    other: "leva búlgars"
}, {
    id: "BGO",
    displayName: "lev búlgar (1879–1952)",
    symbol: "BGO",
    one: "lev búlgar (1879–1952)",
    other: "leva búlgars (1879–1952)"
}, {
    id: "BGL",
    displayName: "lev fort búlgar",
    symbol: "BGL",
    one: "lev fort búlgar",
    other: "leva forts búlgars"
}, {
    id: "BGM",
    displayName: "lev socialista búlgar",
    symbol: "BGM",
    one: "lev socialista búlgar",
    other: "leva socialistes búlgars"
}, {
    id: "SZL",
    displayName: "lilangeni swazi",
    symbol: "SZL",
    one: "lilangeni swazi",
    other: "emalangeni swazis"
}, {
    id: "ITL",
    displayName: "lira italiana",
    symbol: "ITL",
    one: "lira italiana",
    other: "lires italianes"
}, {
    id: "MTL",
    displayName: "lira maltesa",
    symbol: "MTL",
    one: "lira maltesa",
    other: "lires malteses"
}, {
    id: "TRY",
    displayName: "lira turca",
    symbol: "TRY",
    one: "lira turca",
    other: "lires turques"
}, {
    id: "TRL",
    displayName: "lira turca (1922–2005)",
    symbol: "TRL",
    one: "lira turca (1922–2005)",
    other: "lires turques (1922–2005)"
}, {
    id: "LTL",
    displayName: "litas lituà",
    symbol: "LTL",
    one: "litas lituà",
    other: "litai lituans"
}, {
    id: "GIP",
    displayName: "lliura de Gibraltar",
    symbol: "GIP",
    one: "lliura de Gibraltar",
    other: "lliures de Gibraltar"
}, {
    id: "SHP",
    displayName: "lliura de Santa Helena",
    symbol: "SHP",
    one: "lliura de Santa Helena",
    other: "lliures de Santa Helena"
}, {
    id: "FKP",
    displayName: "lliura de les illes Malvines",
    symbol: "FKP",
    one: "lliura de les illes Malvines",
    other: "lliures de les illes Malvines"
}, {
    id: "SSP",
    displayName: "lliura del Sudan del Sud",
    symbol: "SSP",
    one: "lliura del Sudan del Sud",
    other: "lliures del Sudan del Sud"
}, {
    id: "EGP",
    displayName: "lliura egípcia",
    symbol: "EGP",
    one: "lliura egípcia",
    other: "lliures egípcies"
}, {
    id: "GBP",
    displayName: "lliura esterlina britànica",
    symbol: "£",
    one: "lliura esterlina britànica",
    other: "lliures esterlines britàniques"
}, {
    id: "IEP",
    displayName: "lliura irlandesa",
    symbol: "IEP",
    one: "lliura irlandesa",
    other: "lliures irlandeses"
}, {
    id: "ILP",
    displayName: "lliura israeliana",
    symbol: "ILP",
    one: "lliura israeliana",
    other: "lliures israelianes"
}, {
    id: "LBP",
    displayName: "lliura libanesa",
    symbol: "LBP",
    one: "lliura libanesa",
    other: "lliures libaneses"
}, {
    id: "MTP",
    displayName: "lliura maltesa",
    symbol: "MTP",
    one: "lliura maltesa",
    other: "lliures malteses"
}, {
    id: "SDG",
    displayName: "lliura sudanesa",
    symbol: "SDG",
    one: "lliura sudanesa",
    other: "lliures sudaneses"
}, {
    id: "SYP",
    displayName: "lliura síria",
    symbol: "SYP",
    one: "lliura síria",
    other: "lliures síries"
}, {
    id: "CYP",
    displayName: "lliura xipriota",
    symbol: "CYP",
    one: "lliura xipriota",
    other: "lliures xipriotes"
}, {
    id: "LSL",
    displayName: "loti de Lesotho",
    symbol: "LSL",
    one: "loti de Lesotho",
    other: "maloti de Lesotho"
}, {
    id: "AZN",
    displayName: "manat azerbaidjanès",
    symbol: "AZN",
    one: "manat azerbaidjanès",
    other: "manats azerbaidjanesos"
}, {
    id: "AZM",
    displayName: "manat azerbaidjanès (1993–2006)",
    symbol: "AZM",
    one: "manat azerbaidjanès (1993–2006)",
    other: "manats azerbaidjanesos (1993–2006)"
}, {
    id: "TMT",
    displayName: "manat turcman",
    symbol: "TMT",
    one: "manat turcman",
    other: "manats turcmans"
}, {
    id: "TMM",
    displayName: "manat turcman (1993–2009)",
    symbol: "TMM",
    one: "manat turcman (1993–2009)",
    other: "manats turcmans (1993–2009)"
}, {
    id: "DEM",
    displayName: "marc alemany",
    symbol: "DEM",
    one: "marc alemany",
    other: "marcs alemanys"
}, {
    id: "BAM",
    displayName: "marc convertible de Bòsnia i Hercegovina",
    symbol: "BAM",
    one: "marc convertible de Bòsnia i Hercegovina",
    other: "marcs convertibles de Bòsnia i Hercegovina"
}, {
    id: "DDM",
    displayName: "marc de l’Alemanya Oriental",
    symbol: "DDM",
    one: "marc de l’Alemanya Oriental",
    other: "marcs de l’Alemanya Oriental"
}, {
    id: "FIM",
    displayName: "marc finlandès",
    symbol: "FIM",
    one: "marc finlandès",
    other: "marcs finlandesos"
}, {
    id: "MZN",
    displayName: "metical moçambiquès",
    symbol: "MZN",
    one: "metical moçambiquès",
    other: "meticals moçambiquesos"
}, {
    id: "XXX",
    displayName: "moneda desconeguda",
    symbol: "XXX",
    one: "(unitat monetària desconeguda)",
    other: "(moneda desconeguda)"
}, {
    id: "NGN",
    displayName: "naira nigerià",
    symbol: "NGN",
    one: "naira nigerià",
    other: "naires nigerians"
}, {
    id: "ERN",
    displayName: "nakfa eritreu",
    symbol: "ERN",
    one: "nakfa eritreu",
    other: "nakfes eritreus"
}, {
    id: "BTN",
    displayName: "ngultrum de Bhutan",
    symbol: "BTN",
    one: "ngultrum de Bhutan",
    other: "ngultrums de Bhutan"
}, {
    id: "BAN",
    displayName: "nou dinar de Bòsnia i Hercegovina (1994–1997)",
    symbol: "BAN",
    one: "nou dinar de Bòsnia i Hercegovina (1994–1997)",
    other: "nous dinars de Bòsnia i Hercegovina (1994–1997)"
}, {
    id: "YUM",
    displayName: "nou dinar iugoslau",
    symbol: "YUM",
    one: "nou dinar iugoslau",
    other: "nous dinars iugoslaus"
}, {
    id: "TWD",
    displayName: "nou dòlar de Taiwan",
    symbol: "NT$",
    one: "nou dòlar de Taiwan",
    other: "nous dòlars de Taiwan"
}, {
    id: "AON",
    displayName: "nou kwanza angolès (1990–2000)",
    symbol: "AON",
    one: "nou kwanza angolès (1990–2000)",
    other: "nous kwanzas angolesos (1990–2000)"
}, {
    id: "BYB",
    displayName: "nou ruble bielorús (1994–1999)",
    symbol: "BYB",
    one: "nou ruble bielorús (1994–1999)",
    other: "nous rubles bielorussos (1994–1999)"
}, {
    id: "PEN",
    displayName: "nou sol peruà",
    symbol: "PEN",
    one: "nou sol peruà",
    other: "nous sols peruans"
}, {
    id: "ILS",
    displayName: "nou xéquel israelià",
    symbol: "₪",
    one: "nou xéquel israelià",
    other: "nous xéquels israelians"
}, {
    id: "ZRN",
    displayName: "nou zaire zairès",
    symbol: "ZRN",
    one: "nou zaire zairès",
    other: "nous zaires zairesos"
}, {
    id: "XAU",
    displayName: "or",
    symbol: "XAU",
    one: "or",
    other: "or"
}, {
    id: "MRO",
    displayName: "ouguiya maurità",
    symbol: "MRO",
    one: "ouguiya maurità",
    other: "ouguiyas mauritans"
}, {
    id: "XPD",
    displayName: "pal·ladi",
    symbol: "XPD",
    one: "pal·ladi",
    other: "pal·ladi"
}, {
    id: "MOP",
    displayName: "pataca de Macau",
    symbol: "MOP",
    one: "pataca de Macau",
    other: "pataques de Macau"
}, {
    id: "TOP",
    displayName: "pa‘anga tongà",
    symbol: "TOP",
    one: "pa‘anga tongà",
    other: "pa‘angas tongans"
}, {
    id: "ARS",
    displayName: "peso argentí",
    symbol: "ARS",
    one: "peso argentí",
    other: "pesos argentins"
}, {
    id: "ARM",
    displayName: "peso argentí (1981–1970)",
    symbol: "ARM",
    one: "peso argentí moneda nacional",
    other: "pesos argentins moneda nacional"
}, {
    id: "ARP",
    displayName: "peso argentí (1983–1985)",
    symbol: "ARP",
    one: "peso argentí (1983–1985)",
    other: "pesos argentins (1983–1985)"
}, {
    id: "BOP",
    displayName: "peso bolivià",
    symbol: "BOP",
    one: "peso bolivià",
    other: "pesos bolivians"
}, {
    id: "COP",
    displayName: "peso colombià",
    symbol: "COP",
    one: "peso colombià",
    other: "pesos colombians"
}, {
    id: "CUC",
    displayName: "peso convertible cubà",
    symbol: "CUC",
    one: "peso convertible cubà",
    other: "pesos convertibles cubans"
}, {
    id: "CUP",
    displayName: "peso cubà",
    symbol: "CUP",
    one: "peso cubà",
    other: "pesos cubans"
}, {
    id: "GWP",
    displayName: "peso de Guinea Bissau",
    symbol: "GWP",
    one: "peso de Guinea Bissau",
    other: "pesos de Guinea Bissau"
}, {
    id: "MXP",
    displayName: "peso de plata mexicà (1861–1992)",
    symbol: "MXP",
    one: "peso de plata mexicà (1861–1992)",
    other: "pesos de plata mexicans (1861–1992)"
}, {
    id: "DOP",
    displayName: "peso dominicà",
    symbol: "DOP",
    one: "peso dominicà",
    other: "pesos dominicans"
}, {
    id: "PHP",
    displayName: "peso filipí",
    symbol: "PHP",
    one: "peso filipí",
    other: "pesos filipins"
}, {
    id: "ARL",
    displayName: "peso ley argentí (1970–1983)",
    symbol: "ARL",
    one: "peso ley argentí (1970–1983)",
    other: "pesos ley argentins (1970–1983)"
}, {
    id: "MXN",
    displayName: "peso mexicà",
    symbol: "MXN",
    one: "peso mexicà",
    other: "pesos mexicans"
}, {
    id: "UYU",
    displayName: "peso uruguaià",
    symbol: "UYU",
    one: "peso uruguaià",
    other: "pesos uruguaians"
}, {
    id: "UYP",
    displayName: "peso uruguaià (1975–1993)",
    symbol: "UYP",
    one: "peso uruguaià (1975–1993)",
    other: "pesos uruguaians (1975–1993)"
}, {
    id: "UYI",
    displayName: "peso uruguaià en unitats indexades",
    symbol: "UYI",
    one: "peso uruguaià en unitats indexades",
    other: "pesos uruguaians en unitats indexades"
}, {
    id: "CLP",
    displayName: "peso xilè",
    symbol: "CLP",
    one: "peso xilè",
    other: "pesos xilens"
}, {
    id: "ADP",
    displayName: "pesseta andorrana",
    symbol: "ADP",
    one: "pesseta andorrana",
    other: "pessetes andorranes"
}, {
    id: "ESP",
    displayName: "pesseta espanyola",
    symbol: "₧",
    one: "pesseta espanyola",
    other: "pessetes espanyoles"
}, {
    id: "ESA",
    displayName: "pesseta espanyola (compte A)",
    symbol: "ESA",
    one: "pesseta espanyola (compte A)",
    other: "pessetes espanyoles (compte A)"
}, {
    id: "ESB",
    displayName: "pesseta espanyola (compte convertible)",
    symbol: "ESB",
    one: "pesseta espanyola (compte convertible)",
    other: "pessetes espanyoles (compte convertible)"
}, {
    id: "XAG",
    displayName: "plata",
    symbol: "XAG",
    one: "plata",
    other: "plata"
}, {
    id: "XPT",
    displayName: "platí",
    symbol: "XPT",
    one: "platí",
    other: "platí"
}, {
    id: "BWP",
    displayName: "pula de Botswana",
    symbol: "BWP",
    one: "pula de Botswana",
    other: "pula de Botswana"
}, {
    id: "GTQ",
    displayName: "quetzal guatemalenc",
    symbol: "GTQ",
    one: "quetzal guatemalenc",
    other: "quetzals guatemalencs"
}, {
    id: "ZAR",
    displayName: "rand sud-africà",
    symbol: "ZAR",
    one: "rand sud-africà",
    other: "rands sud-africans"
}, {
    id: "ZAL",
    displayName: "rand sud-africà (financer)",
    symbol: "ZAL",
    one: "rand sud-africà (financer)",
    other: "rands sud-africans (financers)"
}, {
    id: "BRL",
    displayName: "real brasiler",
    symbol: "BRL",
    one: "real brasiler",
    other: "reals brasilers"
}, {
    id: "QAR",
    displayName: "rial de Qatar",
    symbol: "QAR",
    one: "rial de Qatar",
    other: "rials qatarians"
}, {
    id: "YER",
    displayName: "rial iemenita",
    symbol: "YER",
    one: "rial iemenita",
    other: "rials iemenites"
}, {
    id: "IRR",
    displayName: "rial iranià",
    symbol: "IRR",
    one: "rial iranià",
    other: "rials iranians"
}, {
    id: "OMR",
    displayName: "rial omanita",
    symbol: "OMR",
    one: "rial omanita",
    other: "rials omanites"
}, {
    id: "SAR",
    displayName: "rial saudita",
    symbol: "SAR",
    one: "rial saudita",
    other: "rials saudites"
}, {
    id: "KHR",
    displayName: "riel cambodjà",
    symbol: "KHR",
    one: "riel cambodjà",
    other: "riels cambodjans"
}, {
    id: "MYR",
    displayName: "ringgit de Malàisia",
    symbol: "MYR",
    one: "ringgit de Malàisia",
    other: "ringgits de Malàisia"
}, {
    id: "BYR",
    displayName: "ruble bielorús",
    symbol: "BYR",
    one: "ruble bielorús",
    other: "rubles bielorussos"
}, {
    id: "LVR",
    displayName: "ruble letó",
    symbol: "LVR",
    one: "ruble letó",
    other: "rubles letons"
}, {
    id: "RUB",
    displayName: "ruble rus",
    symbol: "RUB",
    one: "ruble rus",
    other: "rubles russos"
}, {
    id: "RUR",
    displayName: "ruble rus (1991–1998)",
    symbol: "RUR",
    one: "ruble rus (1991–1998)",
    other: "rubles russos (1991–1998)"
}, {
    id: "SUR",
    displayName: "ruble soviètic",
    symbol: "SUR",
    one: "ruble soviètic",
    other: "rubles soviètics"
}, {
    id: "TJR",
    displayName: "ruble tadjik",
    symbol: "TJR",
    one: "ruble tadjik",
    other: "rubles tadjiks"
}, {
    id: "LKR",
    displayName: "rupia de Sri Lanka",
    symbol: "LKR",
    one: "rupia de Sri Lanka",
    other: "rupies de Sri Lanka"
}, {
    id: "MVR",
    displayName: "rupia de les Maldives",
    symbol: "MVR",
    one: "rupia de les Maldives",
    other: "rupies de les Maldives"
}, {
    id: "SCR",
    displayName: "rupia de les Seychelles",
    symbol: "SCR",
    one: "rupia de les Seychelles",
    other: "rupies de les Seychelles"
}, {
    id: "IDR",
    displayName: "rupia indonèsia",
    symbol: "IDR",
    one: "rupia indonèsia",
    other: "rupies indonèsies"
}, {
    id: "MUR",
    displayName: "rupia mauriciana",
    symbol: "MUR",
    one: "rupia mauriciana",
    other: "rupies mauricianes"
}, {
    id: "NPR",
    displayName: "rupia nepalesa",
    symbol: "NPR",
    one: "rupia nepalesa",
    other: "rupies nepaleses"
}, {
    id: "PKR",
    displayName: "rupia pakistanesa",
    symbol: "PKR",
    one: "rupia pakistanesa",
    other: "rupies pakistaneses"
}, {
    id: "INR",
    displayName: "rupia índia",
    symbol: "₹",
    one: "rupia índia",
    other: "rupies índies"
}, {
    id: "PES",
    displayName: "sol peruà",
    symbol: "PES",
    one: "sol peruà",
    other: "sols peruans"
}, {
    id: "KGS",
    displayName: "som kirguís",
    symbol: "KGS",
    one: "som kirguís",
    other: "soms kirguisos"
}, {
    id: "UZS",
    displayName: "som uzbek",
    symbol: "UZS",
    one: "som uzbek",
    other: "soms uzbeks"
}, {
    id: "TJS",
    displayName: "somoni tadjik",
    symbol: "TJS",
    one: "somoni tadjik",
    other: "somonis tadjiks"
}, {
    id: "ECS",
    displayName: "sucre equatorià",
    symbol: "ECS",
    one: "sucre equatorià",
    other: "sucres equatorians"
}, {
    id: "GNS",
    displayName: "syli guineà",
    symbol: "GNS",
    one: "syli guineà",
    other: "sylis guineans"
}, {
    id: "BDT",
    displayName: "taka de Bangla Desh",
    symbol: "BDT",
    one: "taka de Bangla Desh",
    other: "taka de Bangla Desh"
}, {
    id: "WST",
    displayName: "tala samoà",
    symbol: "WST",
    one: "tala samoà",
    other: "tales samoans"
}, {
    id: "LTT",
    displayName: "talonas lituà",
    symbol: "LTT",
    one: "talonas lituà",
    other: "talonai lituans"
}, {
    id: "KZT",
    displayName: "tenge kazakh",
    symbol: "KZT",
    one: "tenge kazakh",
    other: "tenges kazakhs"
}, {
    id: "SIT",
    displayName: "tolar eslovè",
    symbol: "SIT",
    one: "tolar eslovè",
    other: "tolars eslovens"
}, {
    id: "MNT",
    displayName: "tögrög mongol",
    symbol: "MNT",
    one: "tögrög mongol",
    other: "tögrögs mongols"
}, {
    id: "CLF",
    displayName: "unidad de fomento xilena",
    symbol: "CLF",
    one: "unidad de fomento xilena",
    other: "unidades de fomento xilenes"
}, {
    id: "MXV",
    displayName: "unidad de inversión (UDI) mexicana",
    symbol: "MXV",
    one: "unidad de inversión (UDI) mexicana",
    other: "unidades de inversión (UDI) mexicanes"
}, {
    id: "ECV",
    displayName: "unidad de valor constante (UVC) equatoriana",
    symbol: "ECV",
    one: "unidad de valor constante (UVC) equatoriana",
    other: "unidades de valor constante (UVC) equatorianes"
}, {
    id: "COU",
    displayName: "unidad de valor real colombiana",
    symbol: "COU",
    one: "unidad de valor real colombiana",
    other: "unidades de valor real colombianes"
}, {
    id: "XBA",
    displayName: "unitat compensatòria europea",
    symbol: "XBA",
    one: "unitat compensatòria europea",
    other: "unitats compensatòries europees"
}, {
    id: "XBC",
    displayName: "unitat de compte europea (XBC)",
    symbol: "XBC",
    one: "unitat de compte europea (XBC)",
    other: "unitats de compte europees (XBC)"
}, {
    id: "XBD",
    displayName: "unitat de compte europea (XBD)",
    symbol: "XBD",
    one: "unitat de compte europea (XBD)",
    other: "unitats de compte europees (XBD)"
}, {
    id: "XEU",
    displayName: "unitat de moneda europea",
    symbol: "XEU",
    one: "unitat de moneda europea",
    other: "unitats de moneda europees"
}, {
    id: "XBB",
    displayName: "unitat monetària europea",
    symbol: "XBB",
    one: "unitat monetària europea",
    other: "unitats monetàries europees"
}, {
    id: "VUV",
    displayName: "vatu de Vanuatu",
    symbol: "VUV",
    one: "vatu de Vanuatu",
    other: "vatus de Vanuatu"
}, {
    id: "KPW",
    displayName: "won nord-coreà",
    symbol: "KPW",
    one: "won nord-coreà",
    other: "wons nord-coreans"
}, {
    id: "KRW",
    displayName: "won sud-coreà",
    symbol: "₩",
    one: "won sud-coreà",
    other: "wons sud-coreans"
}, {
    id: "ILR",
    displayName: "xéquel israelià",
    one: "xéquel israelià",
    other: "xéquel israelià"
}, {
    id: "ATS",
    displayName: "xíling austríac",
    symbol: "ATS",
    one: "xíling austríac",
    other: "xílings austríacs"
}, {
    id: "KES",
    displayName: "xíling kenyà",
    symbol: "KES",
    one: "xíling kenyà",
    other: "xílings kenyans"
}, {
    id: "SOS",
    displayName: "xíling somali",
    symbol: "SOS",
    one: "xíling somali",
    other: "xílings somalis"
}, {
    id: "TZS",
    displayName: "xíling tanzà",
    symbol: "TZS",
    one: "xíling tanzà",
    other: "xílings tanzans"
}, {
    id: "UGX",
    displayName: "xíling ugandès",
    symbol: "UGX",
    one: "xíling ugandès",
    other: "xílings ugandesos"
}, {
    id: "UGS",
    displayName: "xíling ugandès (1966–1987)",
    symbol: "UGS",
    one: "xíling ugandès (1966–1987)",
    other: "xílings ugandesos (1966–1987)"
}, {
    id: "ZRZ",
    displayName: "zaire zairès",
    symbol: "ZRZ",
    one: "zaire zairès",
    other: "zaires zairesos"
}, {
    id: "PLN",
    displayName: "zloty polonès",
    symbol: "PLN",
    one: "zloty polonès",
    other: "zlote polonesos"
}, {
    id: "PLZ",
    displayName: "zloty polonès (1950–1995)",
    symbol: "PLZ",
    one: "zloty polonès (1950–1995)",
    other: "zlote polonesos (1950–1995)"
} ];

module.exports = inter;