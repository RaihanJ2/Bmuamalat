function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _6bdj1 = {
    one: "0K",
    other: "0K"
}, _6bdj2 = {
    one: "0M",
    other: "0M"
}, _6bdj3 = [ "T1", "T2", "T3", "T4" ], _6bdj4 = {
    all: {
        leap: "{0}bis"
    }
}, _6bdj5 = {
    one: "00K",
    other: "00K"
}, _6bdj6 = {
    one: "00M",
    other: "00M"
}, _6bdj7 = {
    one: "0 B",
    other: "0 B"
}, _6bdj8 = {
    one: "¤0K",
    other: "¤0K"
}, _6bdj9 = {
    one: "¤0M",
    other: "¤0M"
}, _6bdj10 = {
    one: "{0}°",
    other: "{0}°"
}, _6bdj11 = {
    one: "000K",
    other: "000K"
}, _6bdj12 = {
    one: "000M",
    other: "000M"
}, _6bdj13 = {
    one: "0k M",
    other: "0k M"
}, _6bdj14 = {
    one: "00 B",
    other: "00 B"
}, _6bdj15 = {
    one: "¤00K",
    other: "¤00K"
}, _6bdj16 = {
    one: "¤00M",
    other: "¤00M"
}, _6bdj17 = {
    one: "¤0 B",
    other: "¤0 B"
}, _6bdj18 = {
    a: "h a – h a",
    h: "h–h a"
}, _6bdj19 = {
    displayName: "a.m./p.m."
}, _6bdj20 = [ "Before R.O.C.", "R.O.C." ], _6bdj21 = {
    one: "{0} m",
    other: "{0} m"
}, _6bdj22 = {
    one: "{0}°F",
    other: "{0}°F"
}, _6bdj23 = {
    one: "{0} s",
    other: "{0} s"
}, _6bdj24 = {
    one: "0 mil",
    other: "0 mil"
}, _6bdj25 = {
    one: "00k M",
    other: "00k M"
}, _6bdj26 = {
    one: "000 B",
    other: "000 B"
}, _6bdj27 = {
    one: "¤000K",
    other: "¤000K"
}, _6bdj28 = {
    one: "¤000M",
    other: "¤000M"
}, _6bdj29 = {
    one: "¤0k M",
    other: "¤0k M"
}, _6bdj30 = {
    one: "¤00 B",
    other: "¤00 B"
}, _6bdj31 = {
    displayName: "Fuso horario"
}, _6bdj32 = {
    one: "{0} ct",
    other: "{0} ct"
}, _6bdj33 = {
    one: "00 mil",
    other: "00 mil"
}, _6bdj34 = {
    one: "000k M",
    other: "000k M"
}, _6bdj35 = {
    one: "¤00k M",
    other: "¤00k M"
}, _6bdj36 = {
    one: "¤000 B",
    other: "¤000 B"
}, _6bdj37 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _6bdj38 = {
    d: "d/M – d/M",
    M: "d/M – d/M"
}, _6bdj39 = {
    M: "M/y – M/y",
    y: "M/y – M/y"
}, _6bdj40 = [ "D", "L", "M", "M", "X", "V", "S" ], _6bdj41 = {
    displayName: "Día da semana"
}, _6bdj42 = {
    one: "000 mil",
    other: "000 mil"
}, _6bdj43 = {
    one: "¤000k M",
    other: "¤000k M"
}, _6bdj44 = {
    d: "d–d MMM",
    M: "d MMM – d MMM"
}, _6bdj45 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _6bdj46 = {
    one: "{0} ano",
    other: "{0} anos"
}, _6bdj47 = {
    one: "{0} día",
    other: "{0} días"
}, _6bdj48 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _6bdj49 = {
    one: "{0} km/h",
    other: "{0} km/h"
}, _6bdj50 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _6bdj51 = {
    M: "MMM–MMM y",
    y: "MMM y – MMM y"
}, _6bdj52 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _6bdj53 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _6bdj54 = {
    one: "{0} hora",
    other: "{0} horas"
}, _6bdj55 = {
    one: "0 millón",
    other: "0 millóns"
}, _6bdj56 = {
    one: "0 billóns",
    other: "0 billóns"
}, _6bdj57 = {
    one: "En {0} m.",
    other: "En {0} m."
}, _6bdj58 = {
    one: "En {0} d.",
    other: "En {0} d."
}, _6bdj59 = {
    one: "En {0} s.",
    other: "En {0} s."
}, _6bdj60 = {
    one: "En {0} h.",
    other: "en {0} hr."
}, _6bdj61 = {
    one: "00 millóns",
    other: "00 millóns"
}, _6bdj62 = {
    one: "00 billóns",
    other: "00 billóns"
}, _6bdj63 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _6bdj64 = {
    M: "MMMM–MMMM y",
    y: "MMMM y – MMMM y"
}, _6bdj65 = {
    one: "Hai {0} m.",
    other: "Hai {0} m."
}, _6bdj66 = {
    one: "Hai {0} d.",
    other: "Hai {0} d."
}, _6bdj67 = {
    one: "En {0} hr.",
    other: "En {0} hr."
}, _6bdj68 = {
    one: "Hai {0} s.",
    other: "Hai {0} s."
}, _6bdj69 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _6bdj70 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _6bdj71 = {
    one: "En {0} ano",
    other: "En {0} anos"
}, _6bdj72 = {
    one: "En {0} día",
    other: "En {0} días"
}, _6bdj73 = {
    one: "000 millóns",
    other: "000 millóns"
}, _6bdj74 = {
    one: "000 billóns",
    other: "000 billóns"
}, _6bdj75 = {
    one: "En {0} anos",
    other: "En {0} anos"
}, _6bdj76 = {
    one: "En {0} mes",
    other: "En {0} meses"
}, _6bdj77 = {
    one: "En {0} sem.",
    other: "En {0} sem."
}, _6bdj78 = {
    one: "Hai {0} hr.",
    other: "Hai {0} hr."
}, _6bdj79 = {
    one: "En {0} min.",
    other: "En {0} min."
}, _6bdj80 = {
    one: "En {0} seg.",
    other: "En {0} seg."
}, _6bdj81 = {
    one: "{0} quilate",
    other: "{0} quilates"
}, _6bdj82 = [ "dom", "luns", "mt", "mc", "xv", "ve", "sáb" ], _6bdj83 = {
    one: "Hai {0} ano",
    other: "Hai {0} anos"
}, _6bdj84 = {
    one: "Hai {0} día",
    other: "Hai {0} días"
}, _6bdj85 = {
    one: "En {0} hora",
    other: "En {0} horas"
}, _6bdj86 = {
    one: "{0} L/100 km",
    other: "{0} L/100 km"
}, _6bdj87 = {
    d: "E, d/M – E, d/M",
    M: "E, d/M – E, d/M"
}, _6bdj88 = [ "Dom", "Luns", "Mt", "Mc", "Xv", "Ven", "Sáb" ], _6bdj89 = {
    one: "Hai {0} anos",
    other: "Hai {0} anos"
}, _6bdj90 = {
    one: "En {0} trim.",
    other: "En {0} trim."
}, _6bdj91 = {
    one: "Hai {0} mes",
    other: "Hai {0} meses"
}, _6bdj92 = {
    one: "Hai {0} sem.",
    other: "Hai {0} sem."
}, _6bdj93 = {
    one: "Hai {0} min.",
    other: "Hai {0} min."
}, _6bdj94 = {
    one: "Hai {0} seg.",
    other: "Hai {0} seg."
}, _6bdj95 = {
    one: "Hai {0} hora",
    other: "Hai {0} horas"
}, _6bdj96 = {
    one: "0 mil millóns",
    other: "0 mil millóns"
}, _6bdj97 = [ "Dom", "Lun", "Mar", "Mér", "Xov", "Ven", "Sáb" ], _6bdj98 = {
    one: "Hai {0} trim.",
    other: "Hai {0} trim."
}, _6bdj99 = [ "dom", "luns", "mar", "mér", "xov", "ven", "sáb" ], _6bdj100 = {
    one: "En {0} semana",
    other: "En {0} semanas"
}, _6bdj101 = {
    one: "En {0} minuto",
    other: "En {0} minutos"
}, _6bdj102 = {
    one: "00 mil millóns",
    other: "00 mil millóns"
}, _6bdj103 = {
    "0": "este d.",
    "1": "próximo d.",
    "-1": "d. pasado"
}, _6bdj104 = {
    "0": "este l.",
    "1": "próximo l.",
    "-1": "l. pasado"
}, _6bdj105 = {
    "0": "este v.",
    "1": "próximo v.",
    "-1": "v. pasado"
}, _6bdj106 = {
    "0": "este s.",
    "1": "próximo s.",
    "-1": "s. pasado"
}, _6bdj107 = {
    "0": "este m.",
    "1": "m. seguinte",
    "-1": "m. pasado"
}, _6bdj108 = {
    one: "Hai {0} semana",
    other: "Hai {0} semanas"
}, _6bdj109 = {
    one: "Hai {0} minuto",
    other: "Hai {0} minutos"
}, _6bdj110 = {
    one: "En {0} segundo",
    other: "En {0} segundos"
}, _6bdj111 = {
    one: "000 mil millóns",
    other: "000 mil millóns"
}, _6bdj112 = {
    "0": "este l.",
    "1": "próximo luns",
    "-1": "l. pasado"
}, _6bdj113 = {
    one: "Hai {0} segundo",
    other: "Hai {0} segundos"
}, _6bdj114 = {
    d: "E, d MMM – E, d MMM",
    M: "E, d MMM – E, d MMM"
}, _6bdj115 = [ "X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D" ], _6bdj116 = {
    "0": "este ano",
    "1": "seguinte ano",
    "-1": "ano pasado"
}, _6bdj117 = {
    "0": "este mes",
    "1": "mes seguinte",
    "-1": "mes pasado"
}, _6bdj118 = {
    "0": "este x.",
    "1": "próximo xov.",
    "-1": "xov. pasado"
}, _6bdj119 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _6bdj120 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _6bdj121 = {
    id: "001",
    displayName: "Mundo",
    hasTimeZones: false
}, _6bdj122 = {
    one: "En {0} trimestre",
    other: "En {0} trimestres"
}, _6bdj123 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _6bdj124 = {
    "0": "este dom.",
    "1": "próximo dom.",
    "-1": "dom. pasado"
}, _6bdj125 = {
    "0": "este luns",
    "1": "próximo luns",
    "-1": "luns pasado"
}, _6bdj126 = {
    "0": "este mar.",
    "1": "próximo mar.",
    "-1": "mar. pasado"
}, _6bdj127 = {
    "0": "este mér.",
    "1": "próximo mér.",
    "-1": "mér. pasado"
}, _6bdj128 = {
    "0": "este xov.",
    "1": "próximo xov.",
    "-1": "xov. pasado"
}, _6bdj129 = {
    "0": "este ven.",
    "1": "próximo ven.",
    "-1": "ven. pasado"
}, _6bdj130 = {
    "0": "este sáb.",
    "1": "próximo sáb.",
    "-1": "sáb. pasado"
}, _6bdj131 = {
    id: "AQ",
    displayName: "Antártida",
    hasTimeZones: true
}, _6bdj132 = {
    one: "Hai {0} trimestre",
    other: "Hai {0} trimestres"
}, _6bdj133 = {
    "0": "esta sem.",
    "1": "sem. seguinte",
    "-1": "sem. pasada"
}, _6bdj134 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _6bdj135 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _6bdj136 = {
    "0": "este mart.",
    "1": "próximo mart.",
    "-1": "mart. pasado"
}, _6bdj137 = {
    "0": "este mérc.",
    "1": "próximo mérc.",
    "-1": "mérc. pasado"
}, _6bdj138 = {
    "0": "este xoves",
    "1": "próximo xoves",
    "-1": "xoves pasado"
}, _6bdj139 = {
    id: "BV",
    displayName: "Illa Bouvet",
    hasTimeZones: false
}, _6bdj140 = {
    d: "d/M/y – d/M/y",
    M: "d/M/y – d/M/y",
    y: "d/M/y – d/M/y"
}, _6bdj141 = {
    "0": "este trim.",
    "1": "trim. seguinte",
    "-1": "trim. pasado"
}, _6bdj142 = {
    id: "DG",
    displayName: "Diego García",
    hasTimeZones: false
}, _6bdj143 = {
    relative: _6bdj103
}, _6bdj144 = {
    relative: _6bdj104
}, _6bdj145 = {
    relative: _6bdj105
}, _6bdj146 = {
    relative: _6bdj106
}, _6bdj147 = {
    id: "CX",
    displayName: "Illa Christmas",
    hasTimeZones: true
}, _6bdj148 = {
    "0": "este martes",
    "1": "próximo martes",
    "-1": "martes pasado"
}, _6bdj149 = {
    "0": "este venres",
    "1": "próximo venres",
    "-1": "venres pasado"
}, _6bdj150 = {
    "0": "este sábado",
    "1": "próximo sábado",
    "-1": "sábado pasado"
}, _6bdj151 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _6bdj152 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _6bdj153 = {
    id: "IC",
    displayName: "Illas Canarias",
    hasTimeZones: false
}, _6bdj154 = {
    "0": "esta semana",
    "1": "semana seguinte",
    "-1": "semana pasada"
}, _6bdj155 = {
    relative: _6bdj112
}, _6bdj156 = {
    id: "EA",
    displayName: "Ceuta e Melilla",
    hasTimeZones: false
}, _6bdj157 = {
    id: "CP",
    displayName: "Illa Clipperton",
    hasTimeZones: false
}, _6bdj158 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _6bdj159 = {
    id: "TA",
    displayName: "Tristán da Cunha",
    hasTimeZones: false
}, _6bdj160 = {
    "0": "este domingo",
    "1": "próximo domingo",
    "-1": "domingo pasado"
}, _6bdj161 = {
    relative: _6bdj118
}, _6bdj162 = {
    id: "AC",
    displayName: "Illa de Ascensión",
    hasTimeZones: false
}, _6bdj163 = {
    d: "d–d MMM, y",
    M: "d MMM – d MMM, y",
    y: "d MMM, y – d MMM, y"
}, _6bdj164 = [ "1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre" ], _6bdj165 = {
    "0": "hoxe",
    "1": "mañá",
    "2": "pasadomañá",
    "-2": "antonte",
    "-1": "onte"
}, _6bdj166 = {
    id: "TD",
    displayName: "Chad",
    regionId: "017",
    hasTimeZones: true
}, _6bdj167 = {
    id: "CU",
    displayName: "Cuba",
    regionId: "029",
    hasTimeZones: true
}, _6bdj168 = {
    id: "FJ",
    displayName: "Fixi",
    regionId: "054",
    hasTimeZones: true
}, _6bdj169 = {
    id: "GH",
    displayName: "Gana",
    regionId: "011",
    hasTimeZones: true
}, _6bdj170 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _6bdj171 = {
    id: "IQ",
    displayName: "Iraq",
    regionId: "145",
    hasTimeZones: true
}, _6bdj172 = {
    id: "IR",
    displayName: "Irán",
    regionId: "034",
    hasTimeZones: true
}, _6bdj173 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _6bdj174 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _6bdj175 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _6bdj176 = {
    id: "OM",
    displayName: "Omán",
    regionId: "145",
    hasTimeZones: true
}, _6bdj177 = {
    id: "PE",
    displayName: "Perú",
    regionId: "005",
    hasTimeZones: true
}, _6bdj178 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _6bdj179 = {
    relative: _6bdj124
}, _6bdj180 = {
    relative: _6bdj125
}, _6bdj181 = {
    relative: _6bdj126
}, _6bdj182 = {
    relative: _6bdj127
}, _6bdj183 = {
    relative: _6bdj128
}, _6bdj184 = {
    relative: _6bdj129
}, _6bdj185 = {
    relative: _6bdj130
}, _6bdj186 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _6bdj187 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _6bdj188 = {
    id: "BT",
    displayName: "Bután",
    regionId: "034",
    hasTimeZones: true
}, _6bdj189 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _6bdj190 = {
    id: "CN",
    displayName: "China",
    regionId: "030",
    hasTimeZones: true
}, _6bdj191 = {
    id: "CG",
    displayName: "Congo",
    regionId: "017",
    hasTimeZones: true
}, _6bdj192 = {
    id: "GA",
    displayName: "Gabón",
    regionId: "017",
    hasTimeZones: true
}, _6bdj193 = {
    id: "HT",
    displayName: "Haití",
    regionId: "029",
    hasTimeZones: true
}, _6bdj194 = {
    id: "YE",
    displayName: "Iemen",
    regionId: "145",
    hasTimeZones: true
}, _6bdj195 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _6bdj196 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _6bdj197 = {
    id: "LY",
    displayName: "Libia",
    regionId: "015",
    hasTimeZones: true
}, _6bdj198 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _6bdj199 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _6bdj200 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _6bdj201 = {
    id: "NE",
    displayName: "Níxer",
    regionId: "011",
    hasTimeZones: true
}, _6bdj202 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _6bdj203 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _6bdj204 = {
    id: "RU",
    displayName: "Rusia",
    regionId: "151",
    hasTimeZones: true
}, _6bdj205 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _6bdj206 = {
    id: "SY",
    displayName: "Siria",
    regionId: "145",
    hasTimeZones: true
}, _6bdj207 = {
    id: "SD",
    displayName: "Sudán",
    regionId: "015",
    hasTimeZones: true
}, _6bdj208 = {
    id: "CH",
    displayName: "Suíza",
    regionId: "155",
    hasTimeZones: true
}, _6bdj209 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _6bdj210 = {
    id: "JP",
    displayName: "Xapón",
    regionId: "030",
    hasTimeZones: true
}, _6bdj211 = {
    "0": "este mércores",
    "1": "próximo mércores",
    "-1": "mércores pasado"
}, _6bdj212 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _6bdj213 = {
    id: "BZ",
    displayName: "Belice",
    regionId: "013",
    hasTimeZones: true
}, _6bdj214 = {
    id: "BR",
    displayName: "Brasil",
    regionId: "005",
    hasTimeZones: true
}, _6bdj215 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _6bdj216 = {
    id: "CA",
    displayName: "Canadá",
    regionId: "021",
    hasTimeZones: true
}, _6bdj217 = {
    id: "CY",
    displayName: "Chipre",
    regionId: "145",
    hasTimeZones: true
}, _6bdj218 = {
    id: "ES",
    displayName: "España",
    regionId: "039",
    hasTimeZones: true
}, _6bdj219 = {
    id: "EG",
    displayName: "Exipto",
    regionId: "015",
    hasTimeZones: true
}, _6bdj220 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _6bdj221 = {
    id: "GR",
    displayName: "Grecia",
    regionId: "039",
    hasTimeZones: true
}, _6bdj222 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _6bdj223 = {
    id: "GY",
    displayName: "Güiana",
    regionId: "005",
    hasTimeZones: true
}, _6bdj224 = {
    id: "CC",
    displayName: "Illas Cocos (Keeling)",
    hasTimeZones: true
}, _6bdj225 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _6bdj226 = {
    id: "IT",
    displayName: "Italia",
    regionId: "039",
    hasTimeZones: true
}, _6bdj227 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _6bdj228 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _6bdj229 = {
    id: "LB",
    displayName: "Líbano",
    regionId: "145",
    hasTimeZones: true
}, _6bdj230 = {
    id: "MW",
    displayName: "Malaui",
    regionId: "014",
    hasTimeZones: true
}, _6bdj231 = {
    id: "MX",
    displayName: "México",
    regionId: "013",
    hasTimeZones: true
}, _6bdj232 = {
    id: "MC",
    displayName: "Mónaco",
    regionId: "155",
    hasTimeZones: true
}, _6bdj233 = {
    id: "PA",
    displayName: "Panamá",
    regionId: "013",
    hasTimeZones: true
}, _6bdj234 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _6bdj235 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _6bdj236 = {
    id: "SE",
    displayName: "Suecia",
    regionId: "154",
    hasTimeZones: true
}, _6bdj237 = {
    id: "TW",
    displayName: "Taiwán",
    regionId: "030",
    hasTimeZones: true
}, _6bdj238 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _6bdj239 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _6bdj240 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _6bdj241 = [ "domingo", "luns", "martes", "mércores", "xoves", "venres", "sábado" ], _6bdj242 = [ "Domingo", "Luns", "Martes", "Mércores", "Xoves", "Venres", "Sábado" ], _6bdj243 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _6bdj244 = {
    id: "DE",
    displayName: "Alemaña",
    regionId: "155",
    hasTimeZones: true
}, _6bdj245 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _6bdj246 = {
    id: "AI",
    displayName: "Anguila",
    regionId: "029",
    hasTimeZones: true
}, _6bdj247 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _6bdj248 = {
    id: "DZ",
    displayName: "Arxelia",
    regionId: "015",
    hasTimeZones: true
}, _6bdj249 = {
    id: "AT",
    displayName: "Austria",
    regionId: "155",
    hasTimeZones: true
}, _6bdj250 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _6bdj251 = {
    id: "BH",
    displayName: "Bahrein",
    regionId: "145",
    hasTimeZones: true
}, _6bdj252 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _6bdj253 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _6bdj254 = {
    id: "BE",
    displayName: "Bélxica",
    regionId: "155",
    hasTimeZones: true
}, _6bdj255 = {
    id: "CM",
    displayName: "Camerún",
    regionId: "017",
    hasTimeZones: true
}, _6bdj256 = {
    id: "KM",
    displayName: "Comores",
    regionId: "014",
    hasTimeZones: true
}, _6bdj257 = {
    id: "HR",
    displayName: "Croacia",
    regionId: "039",
    hasTimeZones: true
}, _6bdj258 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _6bdj259 = {
    id: "DJ",
    displayName: "Djibuti",
    regionId: "014",
    hasTimeZones: true
}, _6bdj260 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _6bdj261 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _6bdj262 = {
    id: "EE",
    displayName: "Estonia",
    regionId: "154",
    hasTimeZones: true
}, _6bdj263 = {
    id: "ET",
    displayName: "Etiopía",
    regionId: "014",
    hasTimeZones: true
}, _6bdj264 = {
    id: "FR",
    displayName: "Francia",
    regionId: "155",
    hasTimeZones: true
}, _6bdj265 = {
    id: "GD",
    displayName: "Granada",
    regionId: "029",
    hasTimeZones: true
}, _6bdj266 = {
    id: "HU",
    displayName: "Hungría",
    regionId: "151",
    hasTimeZones: true
}, _6bdj267 = {
    id: "IE",
    displayName: "Irlanda",
    regionId: "154",
    hasTimeZones: true
}, _6bdj268 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _6bdj269 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _6bdj270 = {
    id: "LV",
    displayName: "Letonia",
    regionId: "154",
    hasTimeZones: true
}, _6bdj271 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _6bdj272 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _6bdj273 = {
    id: "MD",
    displayName: "Moldova",
    regionId: "151",
    hasTimeZones: true
}, _6bdj274 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _6bdj275 = {
    id: "NG",
    displayName: "Nixeria",
    regionId: "011",
    hasTimeZones: true
}, _6bdj276 = {
    id: "NO",
    displayName: "Noruega",
    regionId: "154",
    hasTimeZones: true
}, _6bdj277 = {
    id: "PL",
    displayName: "Polonia",
    regionId: "151",
    hasTimeZones: true
}, _6bdj278 = {
    id: "RE",
    displayName: "Reunión",
    regionId: "014",
    hasTimeZones: true
}, _6bdj279 = {
    id: "RO",
    displayName: "Romanía",
    regionId: "151",
    hasTimeZones: true
}, _6bdj280 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _6bdj281 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _6bdj282 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _6bdj283 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _6bdj284 = {
    id: "TN",
    displayName: "Tunisia",
    regionId: "015",
    hasTimeZones: true
}, _6bdj285 = {
    id: "TR",
    displayName: "Turquía",
    regionId: "145",
    hasTimeZones: true
}, _6bdj286 = {
    id: "UA",
    displayName: "Ucraína",
    regionId: "151",
    hasTimeZones: true
}, _6bdj287 = {
    id: "UY",
    displayName: "Uruguai",
    regionId: "005",
    hasTimeZones: true
}, _6bdj288 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _6bdj289 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _6bdj290 = {
    id: "JM",
    displayName: "Xamaica",
    regionId: "029",
    hasTimeZones: true
}, _6bdj291 = {
    id: "GE",
    displayName: "Xeorxia",
    regionId: "145",
    hasTimeZones: true
}, _6bdj292 = {
    relative: _6bdj136
}, _6bdj293 = {
    relative: _6bdj137
}, _6bdj294 = {
    relative: _6bdj138
}, _6bdj295 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _6bdj296 = {
    id: "BM",
    displayName: "Bermudas",
    regionId: "021",
    hasTimeZones: true
}, _6bdj297 = {
    id: "BW",
    displayName: "Botsuana",
    regionId: "018",
    hasTimeZones: true
}, _6bdj298 = {
    id: "BG",
    displayName: "Bulgaria",
    regionId: "151",
    hasTimeZones: true
}, _6bdj299 = {
    id: "KH",
    displayName: "Cambodia",
    regionId: "035",
    hasTimeZones: true
}, _6bdj300 = {
    id: "ZW",
    displayName: "Cimbabue",
    regionId: "014",
    hasTimeZones: true
}, _6bdj301 = {
    id: "CO",
    displayName: "Colombia",
    regionId: "005",
    hasTimeZones: true
}, _6bdj302 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _6bdj303 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _6bdj304 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _6bdj305 = {
    id: "IS",
    displayName: "Islandia",
    regionId: "154",
    hasTimeZones: true
}, _6bdj306 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _6bdj307 = {
    id: "LT",
    displayName: "Lituania",
    regionId: "154",
    hasTimeZones: true
}, _6bdj308 = {
    id: "MY",
    displayName: "Malaisia",
    regionId: "035",
    hasTimeZones: true
}, _6bdj309 = {
    id: "MV",
    displayName: "Maldivas",
    regionId: "034",
    hasTimeZones: true
}, _6bdj310 = {
    id: "MA",
    displayName: "Marrocos",
    regionId: "015",
    hasTimeZones: true
}, _6bdj311 = {
    id: "MU",
    displayName: "Mauricio",
    regionId: "014",
    hasTimeZones: true
}, _6bdj312 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _6bdj313 = {
    id: "PY",
    displayName: "Paraguai",
    regionId: "005",
    hasTimeZones: true
}, _6bdj314 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _6bdj315 = {
    id: "SC",
    displayName: "Seixeles",
    regionId: "014",
    hasTimeZones: true
}, _6bdj316 = {
    id: "SG",
    displayName: "Singapur",
    regionId: "035",
    hasTimeZones: true
}, _6bdj317 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _6bdj318 = {
    id: "JO",
    displayName: "Xordania",
    regionId: "145",
    hasTimeZones: true
}, _6bdj319 = {
    "2": "{0} e {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0} e {1}"
}, _6bdj320 = {
    id: "AR",
    displayName: "Arxentina",
    regionId: "005",
    hasTimeZones: true
}, _6bdj321 = {
    id: "AU",
    displayName: "Australia",
    regionId: "053",
    hasTimeZones: true
}, _6bdj322 = {
    id: "DK",
    displayName: "Dinamarca",
    regionId: "154",
    hasTimeZones: true
}, _6bdj323 = {
    id: "SI",
    displayName: "Eslovenia",
    regionId: "039",
    hasTimeZones: true
}, _6bdj324 = {
    id: "PH",
    displayName: "Filipinas",
    regionId: "035",
    hasTimeZones: true
}, _6bdj325 = {
    id: "FI",
    displayName: "Finlandia",
    regionId: "154",
    hasTimeZones: true
}, _6bdj326 = {
    id: "GP",
    displayName: "Guadalupe",
    regionId: "029",
    hasTimeZones: true
}, _6bdj327 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _6bdj328 = {
    id: "ID",
    displayName: "Indonesia",
    regionId: "035",
    hasTimeZones: true
}, _6bdj329 = {
    id: "MK",
    displayName: "Macedonia",
    regionId: "039",
    hasTimeZones: true
}, _6bdj330 = {
    id: "MQ",
    displayName: "Martinica",
    regionId: "029",
    hasTimeZones: true
}, _6bdj331 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _6bdj332 = {
    id: "PK",
    displayName: "Paquistán",
    regionId: "034",
    hasTimeZones: true
}, _6bdj333 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _6bdj334 = {
    id: "ZA",
    displayName: "Sudáfrica",
    regionId: "018",
    hasTimeZones: true
}, _6bdj335 = {
    id: "TH",
    displayName: "Tailandia",
    regionId: "035",
    hasTimeZones: true
}, _6bdj336 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _6bdj337 = {
    id: "GI",
    displayName: "Xibraltar",
    regionId: "039",
    hasTimeZones: true
}, _6bdj338 = {
    "0": "este trimestre",
    "1": "seguinte trimestre",
    "-1": "trimestre pasado"
}, _6bdj339 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _6bdj340 = {
    id: "AZ",
    displayName: "Acerbaixán",
    regionId: "145",
    hasTimeZones: true
}, _6bdj341 = {
    id: "AF",
    displayName: "Afganistán",
    regionId: "034",
    hasTimeZones: true
}, _6bdj342 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _6bdj343 = {
    id: "CV",
    displayName: "Cabo Verde",
    regionId: "011",
    hasTimeZones: true
}, _6bdj344 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _6bdj345 = {
    id: "SK",
    displayName: "Eslovaquia",
    regionId: "151",
    hasTimeZones: true
}, _6bdj346 = {
    id: "GL",
    displayName: "Grenlandia",
    regionId: "021",
    hasTimeZones: true
}, _6bdj347 = {
    id: "CK",
    displayName: "Illas Cook",
    regionId: "061",
    hasTimeZones: true
}, _6bdj348 = {
    id: "KZ",
    displayName: "Kazakhstan",
    regionId: "143",
    hasTimeZones: true
}, _6bdj349 = {
    id: "LU",
    displayName: "Luxemburgo",
    regionId: "155",
    hasTimeZones: true
}, _6bdj350 = {
    id: "MG",
    displayName: "Madagascar",
    regionId: "014",
    hasTimeZones: true
}, _6bdj351 = {
    id: "MR",
    displayName: "Mauritania",
    regionId: "011",
    hasTimeZones: true
}, _6bdj352 = {
    id: "FM",
    displayName: "Micronesia",
    regionId: "057",
    hasTimeZones: true
}, _6bdj353 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _6bdj354 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _6bdj355 = {
    id: "MZ",
    displayName: "Mozambique",
    regionId: "014",
    hasTimeZones: true
}, _6bdj356 = {
    id: "PR",
    displayName: "Porto Rico",
    regionId: "029",
    hasTimeZones: true
}, _6bdj357 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _6bdj358 = {
    id: "SL",
    displayName: "Serra Leoa",
    regionId: "011",
    hasTimeZones: true
}, _6bdj359 = {
    id: "UZ",
    displayName: "Uzbekistán",
    regionId: "143",
    hasTimeZones: true
}, _6bdj360 = {
    relative: _6bdj148
}, _6bdj361 = {
    relative: _6bdj149
}, _6bdj362 = {
    relative: _6bdj150
}, _6bdj363 = {
    id: "BY",
    displayName: "Bielorrusia",
    regionId: "151",
    hasTimeZones: true
}, _6bdj364 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _6bdj365 = {
    id: "IM",
    displayName: "Illa de Man",
    regionId: "154",
    hasTimeZones: true
}, _6bdj366 = {
    id: "AX",
    displayName: "Illas Aland",
    regionId: "154",
    hasTimeZones: true
}, _6bdj367 = {
    id: "FO",
    displayName: "Illas Feroe",
    regionId: "154",
    hasTimeZones: true
}, _6bdj368 = {
    id: "GB",
    displayName: "Reino Unido",
    regionId: "154",
    hasTimeZones: true
}, _6bdj369 = {
    id: "MF",
    displayName: "San Martiño",
    regionId: "029",
    hasTimeZones: true
}, _6bdj370 = {
    id: "LC",
    displayName: "Santa Lucía",
    regionId: "029",
    hasTimeZones: true
}, _6bdj371 = {
    id: "SZ",
    displayName: "Suacilandia",
    regionId: "018",
    hasTimeZones: true
}, _6bdj372 = {
    id: "TJ",
    displayName: "Taxiquistán",
    regionId: "143",
    hasTimeZones: true
}, _6bdj373 = {
    id: "TL",
    displayName: "Timor Leste",
    regionId: "035",
    hasTimeZones: true
}, _6bdj374 = {
    id: "142",
    displayName: "Asia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _6bdj375 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _6bdj376 = {
    id: "KR",
    displayName: "Corea do Sur",
    regionId: "030",
    hasTimeZones: true
}, _6bdj377 = {
    id: "NF",
    displayName: "Illa Norfolk",
    regionId: "053",
    hasTimeZones: true
}, _6bdj378 = {
    id: "KY",
    displayName: "Illas Caimán",
    regionId: "029",
    hasTimeZones: true
}, _6bdj379 = {
    id: "SH",
    displayName: "Santa Helena",
    regionId: "011",
    hasTimeZones: true
}, _6bdj380 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _6bdj381 = {
    id: "SS",
    displayName: "Sudán do sur",
    regionId: "014",
    hasTimeZones: true
}, _6bdj382 = {
    id: "TM",
    displayName: "Turkmenistán",
    regionId: "143",
    hasTimeZones: true
}, _6bdj383 = {
    id: "GW",
    displayName: "Guinea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _6bdj384 = {
    id: "HM",
    displayName: "Illa Heard e Illas McDonald",
    hasTimeZones: false
}, _6bdj385 = {
    id: "SB",
    displayName: "Illas Salomón",
    regionId: "054",
    hasTimeZones: true
}, _6bdj386 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _6bdj387 = {
    id: "NZ",
    displayName: "Nova Celandia",
    regionId: "053",
    hasTimeZones: true
}, _6bdj388 = {
    id: "NL",
    displayName: "Países Baixos",
    regionId: "155",
    hasTimeZones: true
}, _6bdj389 = {
    id: "KG",
    displayName: "Quirguicistán",
    regionId: "143",
    hasTimeZones: true
}, _6bdj390 = {
    id: "BL",
    displayName: "San Bartolomé",
    regionId: "029",
    hasTimeZones: true
}, _6bdj391 = {
    id: "TF",
    displayName: "Territorios Franceses do Sul",
    hasTimeZones: true
}, _6bdj392 = {
    relative: _6bdj160
}, _6bdj393 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _6bdj394 = {
    id: "SA",
    displayName: "Arabia Saudita",
    regionId: "145",
    hasTimeZones: true
}, _6bdj395 = {
    id: "029",
    displayName: "Caribe",
    hasTimeZones: false,
    parentRegionId: "019"
}, _6bdj396 = {
    id: "KP",
    displayName: "Corea do Norte",
    regionId: "030",
    hasTimeZones: true
}, _6bdj397 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _6bdj398 = {
    id: "FK",
    displayName: "Illas Malvinas",
    regionId: "005",
    hasTimeZones: true
}, _6bdj399 = {
    id: "MH",
    displayName: "Illas Marshall",
    regionId: "057",
    hasTimeZones: true
}, _6bdj400 = {
    id: "PN",
    displayName: "Illas Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _6bdj401 = {
    id: "NC",
    displayName: "Nova Caledonia",
    regionId: "054",
    hasTimeZones: true
}, _6bdj402 = {
    id: "002",
    displayName: "África",
    hasTimeZones: false,
    parentRegionId: "001"
}, _6bdj403 = {
    id: "019",
    displayName: "América",
    hasTimeZones: false,
    parentRegionId: "001"
}, _6bdj404 = {
    id: "CI",
    displayName: "Costa de Marfil",
    regionId: "011",
    hasTimeZones: true
}, _6bdj405 = {
    id: "GF",
    displayName: "Güiana Francesa",
    regionId: "005",
    hasTimeZones: true
}, _6bdj406 = {
    id: "009",
    displayName: "Oceanía",
    hasTimeZones: false,
    parentRegionId: "001"
}, _6bdj407 = {
    id: "CZ",
    displayName: "República Checa",
    regionId: "151",
    hasTimeZones: true
}, _6bdj408 = {
    id: "AS",
    displayName: "Samoa Americana",
    regionId: "061",
    hasTimeZones: true
}, _6bdj409 = {
    id: "WF",
    displayName: "Wallis e Futuna",
    regionId: "061",
    hasTimeZones: true
}, _6bdj410 = {
    d: "E, d/M/y – E, d/M/y",
    M: "E, d/M/y – E, d/M/y",
    y: "E, d/M/y – E, d/M/y"
}, _6bdj411 = [ "xan", "feb", "mar", "abr", "mai", "xuñ", "xul", "ago", "set", "out", "nov", "dec" ], _6bdj412 = [ "Xan", "Feb", "Mar", "Abr", "Mai", "Xuñ", "Xul", "Ago", "Set", "Out", "Nov", "Dec" ], _6bdj413 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _6bdj414 = {
    id: "AG",
    displayName: "Antiga e Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _6bdj415 = {
    id: "GS",
    displayName: "Xeorxia do Sur e Illas Sandwich",
    hasTimeZones: true
}, _6bdj416 = {
    relative: _6bdj211
}, _6bdj417 = {
    id: "BQ",
    displayName: "Caribe neerlandés",
    regionId: "029",
    hasTimeZones: true
}, _6bdj418 = {
    id: "GQ",
    displayName: "Guinea Ecuatorial",
    regionId: "017",
    hasTimeZones: true
}, _6bdj419 = {
    id: "UM",
    displayName: "Illas Menores Distantes dos EUA.",
    hasTimeZones: true
}, _6bdj420 = {
    id: "054",
    displayName: "Melanesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _6bdj421 = {
    id: "PG",
    displayName: "Papúa Nova Guinea",
    regionId: "054",
    hasTimeZones: true
}, _6bdj422 = {
    id: "061",
    displayName: "Polinesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _6bdj423 = {
    id: "EH",
    displayName: "Sáhara Occidental",
    regionId: "015",
    hasTimeZones: true
}, _6bdj424 = {
    id: "TT",
    displayName: "Trindade e Tobago",
    regionId: "029",
    hasTimeZones: true
}, _6bdj425 = {
    id: "VA",
    displayName: "Cidade do Vaticano",
    regionId: "039",
    hasTimeZones: true
}, _6bdj426 = {
    id: "MO",
    displayName: "Macau RAE de China",
    regionId: "030",
    hasTimeZones: true
}, _6bdj427 = {
    id: "MM",
    displayName: "Myanmar (Birmania)",
    regionId: "035",
    hasTimeZones: true
}, _6bdj428 = {
    id: "PF",
    displayName: "Polinesia Francesa",
    regionId: "061",
    hasTimeZones: true
}, _6bdj429 = {
    id: "005",
    displayName: "Sudamérica",
    hasTimeZones: false,
    parentRegionId: "019"
}, _6bdj430 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _6bdj431 = {
    id: "053",
    displayName: "Australasia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _6bdj432 = {
    id: "ST",
    displayName: "San Tomé e Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _6bdj433 = {
    id: "034",
    displayName: "Sul de Asia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _6bdj434 = {
    id: "143",
    displayName: "Asia Central",
    hasTimeZones: false,
    parentRegionId: "142"
}, _6bdj435 = {
    id: "BA",
    displayName: "Bosnia e Hercegovina",
    regionId: "039",
    hasTimeZones: true
}, _6bdj436 = {
    id: "TC",
    displayName: "Illas Turks e Caicos",
    regionId: "029",
    hasTimeZones: true
}, _6bdj437 = {
    id: "DO",
    displayName: "República Dominicana",
    regionId: "029",
    hasTimeZones: true
}, _6bdj438 = {
    id: "KN",
    displayName: "San Cristovo e Nevis",
    regionId: "029",
    hasTimeZones: true
}, _6bdj439 = {
    id: "PM",
    displayName: "San Pedro e Miguelón",
    regionId: "021",
    hasTimeZones: true
}, _6bdj440 = {
    id: "SJ",
    displayName: "Svalbard e Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _6bdj441 = {
    id: "030",
    displayName: "Asia Oriental",
    hasTimeZones: false,
    parentRegionId: "142"
}, _6bdj442 = {
    id: "AE",
    displayName: "Emiratos Árabes Unidos",
    regionId: "145",
    hasTimeZones: true
}, _6bdj443 = {
    id: "HK",
    displayName: "Hong Kong RAE de China",
    regionId: "030",
    hasTimeZones: true
}, _6bdj444 = {
    id: "IO",
    displayName: "Territorio Británico do Océano Índico",
    hasTimeZones: true
}, _6bdj445 = {
    id: "PS",
    displayName: "Territorios palestinos",
    regionId: "145",
    hasTimeZones: true
}, _6bdj446 = {
    id: "017",
    displayName: "África Central",
    hasTimeZones: false,
    parentRegionId: "002"
}, _6bdj447 = {
    id: "013",
    displayName: "América Central",
    hasTimeZones: false,
    parentRegionId: "019"
}, _6bdj448 = {
    id: "145",
    displayName: "Asia Occidental",
    hasTimeZones: false,
    parentRegionId: "142"
}, _6bdj449 = {
    id: "151",
    displayName: "Europa do Leste",
    hasTimeZones: false,
    parentRegionId: "150"
}, _6bdj450 = {
    id: "MP",
    displayName: "Illas Marianas do norte",
    regionId: "057",
    hasTimeZones: true
}, _6bdj451 = {
    id: "VG",
    displayName: "Illas Virxes Británicas",
    regionId: "029",
    hasTimeZones: true
}, _6bdj452 = {
    id: "014",
    displayName: "África Oriental",
    hasTimeZones: false,
    parentRegionId: "002"
}, _6bdj453 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _6bdj454 = {
    id: "021",
    displayName: "América do Norte",
    hasTimeZones: false,
    parentRegionId: "019"
}, _6bdj455 = {
    id: "CF",
    displayName: "República Centroafricana",
    regionId: "017",
    hasTimeZones: true
}, _6bdj456 = {
    id: "VC",
    displayName: "San Vicente e Granadinas",
    regionId: "029",
    hasTimeZones: true
}, _6bdj457 = {
    id: "035",
    displayName: "Sureste Asiático",
    hasTimeZones: false,
    parentRegionId: "142"
}, _6bdj458 = {
    id: "US",
    displayName: "Estados Unidos de América",
    regionId: "021",
    hasTimeZones: true
}, _6bdj459 = {
    id: "039",
    displayName: "Europa Meridional",
    hasTimeZones: false,
    parentRegionId: "150"
}, _6bdj460 = {
    id: "155",
    displayName: "Europa Occidental",
    hasTimeZones: false,
    parentRegionId: "150"
}, _6bdj461 = {
    id: "018",
    displayName: "África Meridional",
    hasTimeZones: false,
    parentRegionId: "002"
}, _6bdj462 = {
    id: "011",
    displayName: "África Occidental",
    hasTimeZones: false,
    parentRegionId: "002"
}, _6bdj463 = {
    d: "E, d MMM – E, d MMM, y",
    M: "E, d MMM – E, d MMM, y",
    y: "E, d MMM, y – E, d MMM, y"
}, _6bdj464 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _6bdj465 = {
    id: "154",
    displayName: "Europa Septentrional",
    hasTimeZones: false,
    parentRegionId: "150"
}, _6bdj466 = {
    id: "VI",
    displayName: "Illas Virxes Estadounidenses",
    regionId: "029",
    hasTimeZones: true
}, _6bdj467 = {
    id: "057",
    displayName: "Rexión da Micronesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _6bdj468 = {
    id: "015",
    displayName: "África Septentrional",
    hasTimeZones: false,
    parentRegionId: "002"
}, _6bdj469 = {
    future: _6bdj57,
    past: _6bdj65
}, _6bdj470 = {
    future: _6bdj58,
    past: _6bdj66
}, _6bdj471 = {
    future: _6bdj59,
    past: _6bdj68
}, _6bdj472 = {
    id: "CD",
    displayName: "República Democrática do Congo",
    regionId: "017",
    hasTimeZones: true
}, _6bdj473 = {
    future: _6bdj60,
    past: _6bdj78
}, _6bdj474 = {
    future: _6bdj67,
    past: _6bdj78
}, _6bdj475 = {
    future: _6bdj71,
    past: _6bdj83
}, _6bdj476 = {
    future: _6bdj72,
    past: _6bdj84
}, _6bdj477 = {
    future: _6bdj75,
    past: _6bdj89
}, _6bdj478 = {
    future: _6bdj76,
    past: _6bdj91
}, _6bdj479 = {
    future: _6bdj77,
    past: _6bdj92
}, _6bdj480 = {
    future: _6bdj79,
    past: _6bdj93
}, _6bdj481 = {
    future: _6bdj80,
    past: _6bdj94
}, _6bdj482 = {
    future: _6bdj85,
    past: _6bdj95
}, _6bdj483 = {
    future: _6bdj90,
    past: _6bdj98
}, _6bdj484 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _6bdj485 = {
    future: _6bdj100,
    past: _6bdj108
}, _6bdj486 = {
    future: _6bdj101,
    past: _6bdj109
}, _6bdj487 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _6bdj488 = {
    future: _6bdj110,
    past: _6bdj113
}, _6bdj489 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _6bdj490 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _6bdj491 = [ "xaneiro", "febreiro", "marzo", "abril", "maio", "xuño", "xullo", "agosto", "setembro", "outubro", "novembro", "decembro" ], _6bdj492 = [ "Xaneiro", "Febreiro", "Marzo", "Abril", "Maio", "Xuño", "Xullo", "Agosto", "Setembro", "Outubro", "Novembro", "Decembro" ], _6bdj493 = {
    future: _6bdj122,
    past: _6bdj132
}, _6bdj494 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _6bdj495 = {
    displayName: "s",
    relativeTime: _6bdj471
}, _6bdj496 = {
    displayName: "Día",
    relativeTime: _6bdj470
}, _6bdj497 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _6bdj498 = {
    displayName: "h",
    relativeTime: _6bdj473
}, _6bdj499 = {
    displayName: "h",
    relativeTime: _6bdj474
}, _6bdj500 = {
    displayName: "s",
    relativeTime: _6bdj481
}, _6bdj501 = {
    abbreviated: _6bdj3,
    narrow: [ "1", "2", "3", "4" ],
    wide: _6bdj164
}, _6bdj502 = {
    displayName: "min",
    relativeTime: _6bdj480
}, _6bdj503 = {
    displayName: "Hora",
    relativeTime: _6bdj482
}, _6bdj504 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _6bdj505 = {
    midnight: "medianoite",
    am: "a.m.",
    pm: "p.m.",
    morning1: "madrugada",
    morning2: "mañá",
    afternoon1: "mediodía",
    evening1: "tarde",
    night1: "noite"
}, _6bdj506 = {
    displayName: "Minuto",
    relativeTime: _6bdj486
}, _6bdj507 = {
    midnight: "da noite",
    am: "a.m.",
    pm: "p.m.",
    morning1: "da mañá",
    morning2: "da mañá",
    afternoon1: "da mediodía",
    evening1: "da tarde",
    night1: "da noite"
}, _6bdj508 = {
    displayName: "Segundo",
    relative: [ "agora" ],
    relativeTime: _6bdj488
}, _6bdj509 = {
    decimal: ",",
    group: ".",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _6bdj510 = {
    displayName: "Mes",
    relative: _6bdj107,
    relativeTime: _6bdj469
}, _6bdj511 = {
    symbols: _6bdj509
}, _6bdj512 = {
    displayName: "Ano",
    relative: _6bdj116,
    relativeTime: _6bdj475
}, _6bdj513 = {
    displayName: "Ano",
    relative: _6bdj116,
    relativeTime: _6bdj477
}, _6bdj514 = {
    displayName: "Mes",
    relative: _6bdj117,
    relativeTime: _6bdj478
}, _6bdj515 = {
    displayName: "sem.",
    relative: _6bdj133,
    relativeTime: _6bdj479
}, _6bdj516 = {
    format: _6bdj393,
    numeric: _6bdj4,
    standAlone: _6bdj393
}, _6bdj517 = {
    displayName: "Día",
    relative: _6bdj165,
    relativeTime: _6bdj476
}, _6bdj518 = {
    displayName: "trim.",
    relative: _6bdj141,
    relativeTime: _6bdj483
}, _6bdj519 = {
    displayName: "Semana",
    relative: _6bdj154,
    relativeTime: _6bdj485
}, _6bdj520 = {
    symbols: _6bdj509,
    digits: "renderSpelloutCardinal"
}, _6bdj521 = {
    abbreviated: _6bdj99,
    narrow: _6bdj40,
    wide: _6bdj241,
    "short": _6bdj82
}, _6bdj522 = {
    abbreviated: _6bdj97,
    narrow: _6bdj40,
    wide: _6bdj242,
    "short": _6bdj88
}, _6bdj523 = {
    symbols: _6bdj509,
    digits: "renderSpelloutCardinalFinancial"
}, _6bdj524 = {
    abbreviated: _6bdj413,
    narrow: _6bdj134,
    wide: _6bdj413
}, _6bdj525 = {
    displayName: "Trimestre",
    relative: _6bdj338,
    relativeTime: _6bdj493
}, _6bdj526 = {
    abbreviated: _6bdj430,
    narrow: _6bdj430,
    wide: _6bdj430
}, _6bdj527 = {
    abbreviated: _6bdj411,
    narrow: _6bdj115,
    wide: _6bdj491
}, _6bdj528 = {
    abbreviated: _6bdj412,
    narrow: _6bdj115,
    wide: _6bdj492
}, _6bdj529 = {
    format: _6bdj526
}, _6bdj530 = {
    format: _6bdj501,
    standAlone: _6bdj501
}, _6bdj531 = {
    abbreviated: _6bdj487,
    narrow: _6bdj152,
    wide: _6bdj487
}, _6bdj532 = {
    abbreviated: _6bdj489,
    narrow: _6bdj134,
    wide: _6bdj489
}, _6bdj533 = {
    abbreviated: _6bdj490,
    narrow: _6bdj152,
    wide: _6bdj490
}, _6bdj534 = {
    abbreviated: _6bdj484,
    narrow: _6bdj134,
    wide: _6bdj504
}, _6bdj535 = {
    abbreviated: _6bdj494,
    narrow: _6bdj152,
    wide: _6bdj494
}, _6bdj536 = {
    abbreviated: _6bdj497,
    narrow: _6bdj134,
    wide: _6bdj497
}, _6bdj537 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _6bdj538 = {
    fullDate: "EEEE dd MMMM y G",
    longDate: "dd MMMM y G",
    mediumDate: "d MMM, y G",
    shortDate: "dd/MM/yy GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd/MM/yy GGGGG HH:mm",
    mediumDateTime: "d MMM, y G HH:mm:ss",
    longDateTime: "dd MMMM y G HH:mm:ss z",
    fullDateTime: "EEEE dd MMMM y G HH:mm:ss zzzz"
}, _6bdj539 = {
    "1000": _6bdj1,
    "10000": _6bdj5,
    "100000": _6bdj11,
    "1000000": _6bdj2,
    "10000000": _6bdj6,
    "100000000": _6bdj12,
    "1000000000": _6bdj13,
    "10000000000": _6bdj25,
    "100000000000": _6bdj34,
    "1000000000000": _6bdj7,
    "10000000000000": _6bdj14,
    "100000000000000": _6bdj26
}, _6bdj540 = {
    "1000": _6bdj8,
    "10000": _6bdj15,
    "100000": _6bdj27,
    "1000000": _6bdj9,
    "10000000": _6bdj16,
    "100000000": _6bdj28,
    "1000000000": _6bdj29,
    "10000000000": _6bdj35,
    "100000000000": _6bdj43,
    "1000000000000": _6bdj17,
    "10000000000000": _6bdj30,
    "100000000000000": _6bdj36
}, _6bdj541 = {
    abbreviated: _6bdj505,
    narrow: _6bdj505,
    wide: _6bdj505
}, _6bdj542 = {
    format: _6bdj521,
    standAlone: _6bdj522
}, _6bdj543 = {
    abbreviated: _6bdj507,
    narrow: _6bdj507,
    wide: _6bdj507
}, _6bdj544 = {
    format: _6bdj524,
    standAlone: _6bdj524
}, _6bdj545 = {
    "1000": _6bdj24,
    "10000": _6bdj33,
    "100000": _6bdj42,
    "1000000": _6bdj55,
    "10000000": _6bdj61,
    "100000000": _6bdj73,
    "1000000000": _6bdj96,
    "10000000000": _6bdj102,
    "100000000000": _6bdj111,
    "1000000000000": _6bdj56,
    "10000000000000": _6bdj62,
    "100000000000000": _6bdj74
}, _6bdj546 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _6bdj547 = {
    format: _6bdj527,
    standAlone: _6bdj528
}, _6bdj548 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _6bdj549 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _6bdj550 = {
    format: _6bdj534,
    standAlone: _6bdj534
}, _6bdj551 = {
    d: "d",
    E: "ccc",
    Ed: "d E",
    Gy: "G y",
    GyMMM: "G y MMM",
    GyMMMd: "G y MMM d",
    GyMMMEd: "G y MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "d/M",
    MEd: "E, d/M",
    MMdd: "dd/MM",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E d MMM",
    MMMMd: "d MMMM",
    MMMMEd: "E d MMMM",
    ms: "mm:ss",
    y: "G y",
    yM: "M-y",
    yMd: "d/M/y",
    yMEd: "E, d/M/y",
    yMM: "MM/y",
    yMMM: "MMM y",
    yMMMd: "d MMM, y",
    yMMMEd: "E, d MMM, y",
    yMMMM: "MMMM y",
    yQQQ: "QQQ y",
    yQQQQ: "QQQQ y",
    yyyy: "G y",
    yyyyM: "GGGGG M/y",
    yyyyMd: "GGGGG d/M/y",
    yyyyMEd: "GGGGG E, d/M/y",
    yyyyMMM: "G MMM y",
    yyyyMMMd: "G d, MMM y",
    yyyyMMMEd: "G E, d MMM y",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "G QQQ y",
    yyyyQQQQ: "G y QQQQ",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _6bdj552 = {
    basic: _6bdj537,
    cldr: _6bdj546
}, _6bdj553 = {
    format: _6bdj543,
    standAlone: _6bdj541
}, _6bdj554 = {
    "long": _6bdj545,
    "short": _6bdj539,
    "default": "#,##0.###"
}, _6bdj555 = {
    d: {
        d: "d–d"
    },
    h: _6bdj18,
    H: {
        H: "HH–HH"
    },
    hm: _6bdj135,
    Hm: _6bdj50,
    hmv: _6bdj158,
    Hmv: _6bdj63,
    hv: _6bdj37,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _6bdj38,
    MEd: _6bdj87,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _6bdj44,
    MMMEd: _6bdj114,
    y: {
        y: "y–y"
    },
    yM: _6bdj39,
    yMd: _6bdj140,
    yMEd: _6bdj410,
    yMMM: _6bdj51,
    yMMMd: _6bdj163,
    yMMMEd: _6bdj463,
    yMMMM: _6bdj64
}, _6bdj556 = {
    d: {
        d: "d–d"
    },
    h: _6bdj18,
    H: {
        H: "HH–HH"
    },
    hm: _6bdj135,
    Hm: _6bdj50,
    hmv: _6bdj158,
    Hmv: _6bdj63,
    hv: _6bdj37,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _6bdj69,
    MEd: _6bdj119,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _6bdj45,
    MMMEd: _6bdj120,
    y: {
        y: "U–U"
    },
    yM: _6bdj52,
    yMd: _6bdj339,
    yMEd: _6bdj464,
    yMMM: _6bdj53,
    yMMMd: _6bdj151,
    yMMMEd: _6bdj453,
    yMMMM: _6bdj70
}, _6bdj557 = {
    basic: _6bdj538,
    cldr: _6bdj551
}, _6bdj558 = {
    beforeCurrency: _6bdj548,
    afterCurrency: _6bdj548
}, _6bdj559 = {
    "short": _6bdj540,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _6bdj558
}, _6bdj560 = {
    abbreviated: _6bdj549,
    narrow: _6bdj549,
    wide: _6bdj549
}, _6bdj561 = {
    format: _6bdj560
}, _6bdj562 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _6bdj554,
    currency: _6bdj559,
    percent: {
        "default": "#,##0%"
    }
}, _6bdj563 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _6bdj564 = {
    era: {
        displayName: "Era"
    },
    year: _6bdj512,
    "year-short": _6bdj513,
    "year-narrow": _6bdj513,
    quarter: _6bdj525,
    "quarter-short": _6bdj518,
    "quarter-narrow": _6bdj518,
    month: _6bdj514,
    "month-short": _6bdj510,
    "month-narrow": {
        displayName: "Mes"
    },
    week: _6bdj519,
    "week-short": _6bdj515,
    "week-narrow": {
        displayName: "sem."
    },
    day: _6bdj517,
    "day-short": {
        displayName: "Día"
    },
    "day-narrow": _6bdj496,
    weekday: _6bdj41,
    dayperiod: _6bdj19,
    hour: _6bdj503,
    "hour-short": _6bdj499,
    "hour-narrow": _6bdj498,
    minute: _6bdj506,
    "minute-short": _6bdj502,
    "minute-narrow": {
        displayName: "min"
    },
    second: _6bdj508,
    "second-short": _6bdj500,
    "second-narrow": _6bdj495,
    zone: _6bdj31,
    sun: _6bdj392,
    "sun-short": _6bdj179,
    "sun-narrow": _6bdj143,
    mon: _6bdj180,
    "mon-short": _6bdj144,
    "mon-narrow": _6bdj155,
    tue: _6bdj360,
    "tue-short": _6bdj292,
    "tue-narrow": _6bdj181,
    wed: _6bdj416,
    "wed-short": _6bdj293,
    "wed-narrow": _6bdj182,
    thu: _6bdj294,
    "thu-short": _6bdj183,
    "thu-narrow": _6bdj161,
    fri: _6bdj361,
    "fri-short": _6bdj184,
    "fri-narrow": _6bdj145,
    sat: _6bdj362,
    "sat-short": _6bdj185,
    "sat-narrow": _6bdj146
}, _6bdj565 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _6bdj564
}, _6bdj566 = {
    dayParts: _6bdj529,
    days: _6bdj561,
    months: _6bdj561,
    years: _6bdj561,
    zodiacs: _6bdj529
}, _6bdj567 = {
    dateFormats: _6bdj557,
    datePartsOrder: "dmy",
    dateIntervalFormats: _6bdj555,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _6bdj542,
    dayPeriods: _6bdj553,
    monthNames: _6bdj550,
    eraNames: _6bdj48,
    quarterNames: _6bdj530,
    fields: _6bdj564
}, _6bdj568 = {
    dateFormats: _6bdj552,
    datePartsOrder: "md",
    dateIntervalFormats: _6bdj556,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _6bdj542,
    dayPeriods: _6bdj553,
    cyclicNames: _6bdj566,
    monthNames: _6bdj544,
    monthPatterns: _6bdj516,
    quarterNames: _6bdj530,
    fields: _6bdj564
};

inter.id = "gl";

inter.listPatterns = {
    "default": _6bdj319,
    unit: _6bdj319,
    unitNarrow: _6bdj319,
    unitShort: _6bdj319
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} forza G",
                other: "{0} forzas G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} metro por segundo cadrado",
                other: "{0} metros por segundo cadrado"
            },
            angleRevolution: {
                one: "{0} revolución",
                other: "{0} revolucións"
            },
            angleRadian: {
                one: "{0} radián",
                other: "{0} radiáns"
            },
            angleDegree: {
                one: "{0} grao",
                other: "{0} graos"
            },
            angleArcMinute: {
                one: "{0} arcominuto",
                other: "{0} arcominutos"
            },
            angleArcSecond: {
                one: "{0} arcosegundo",
                other: "{0} arcosegundos"
            },
            areaSquareKilometer: {
                one: "{0} quilómetro cadrado",
                other: "{0} quilómetros cadrados"
            },
            areaHectare: {
                one: "{0} hectárea",
                other: "{0} hectáreas"
            },
            areaSquareMeter: {
                one: "{0} metro cadrado",
                other: "{0} metros cadrados"
            },
            areaSquareCentimeter: {
                one: "{0} centímetro cadrado",
                other: "{0} centímetros cadrados"
            },
            areaSquareMile: {
                one: "{0} milla cadrada",
                other: "{0} millas cadradas"
            },
            areaAcre: {
                one: "{0} acre",
                other: "{0} acres"
            },
            areaSquareYard: {
                one: "{0} iarda cadrada",
                other: "{0} iardas cadradas"
            },
            areaSquareFoot: {
                one: "{0} pé carado",
                other: "{0} pés cadrados"
            },
            areaSquareInch: {
                one: "{0} polgada cadrada",
                other: "{0} polgadas cadradas"
            },
            concentrKarat: _6bdj81,
            consumptionLiterPerKilometer: {
                one: "{0} litro por quilómetro",
                other: "{0} litros por quilómetro"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} litro por 100 quilómetros",
                other: "{0} litros por 100 quilómetros"
            },
            consumptionMilePerGallon: {
                one: "{0} milla por galón",
                other: "{0} millas por galón"
            },
            digitalTerabyte: {
                one: "{0} terabyte",
                other: "{0} terabytes"
            },
            digitalTerabit: {
                one: "{0} terabit",
                other: "{0} terabits"
            },
            digitalGigabyte: {
                one: "{0} xigabyte",
                other: "{0} xigabytes"
            },
            digitalGigabit: {
                one: "{0} xigabit",
                other: "{0} xigabits"
            },
            digitalMegabyte: {
                one: "{0} megabyte",
                other: "{0} megabytes"
            },
            digitalMegabit: {
                one: "{0} megabit",
                other: "{0} megabits"
            },
            digitalKilobyte: {
                one: "{0} kilobyte",
                other: "{0} kilobytes"
            },
            digitalKilobit: {
                one: "{0} kilobit",
                other: "{0} kilobits"
            },
            digitalByte: {
                one: "{0} byte",
                other: "{0} bytes"
            },
            digitalBit: {
                one: "{0} bit",
                other: "{0} bits"
            },
            durationCentury: {
                one: "{0} século",
                other: "{0} séculos"
            },
            durationYear: _6bdj46,
            durationMonth: {
                one: "{0} mes",
                other: "{0} meses"
            },
            durationWeek: {
                one: "{0} semana",
                other: "{0} semanas"
            },
            durationDay: _6bdj47,
            durationHour: _6bdj54,
            durationMinute: {
                one: "{0} minuto",
                other: "{0} minutos"
            },
            durationSecond: {
                one: "{0} segundo",
                other: "{0} segundos"
            },
            durationMillisecond: {
                one: "{0} milisegundo",
                other: "{0} milisegundos"
            },
            durationMicrosecond: {
                one: "{0} microsegundo",
                other: "{0} microsegundos"
            },
            durationNanosecond: {
                one: "{0} nanosegundo",
                other: "{0} nanosegundos"
            },
            electricAmpere: {
                one: "{0} amperio",
                other: "{0} amperios"
            },
            electricMilliampere: {
                one: "{0} miliamperio",
                other: "{0} miliamperios"
            },
            electricOhm: {
                one: "{0} ohm",
                other: "{0} ohms"
            },
            electricVolt: {
                one: "{0} volt",
                other: "{0} volts"
            },
            energyKilocalorie: {
                one: "{0} quilocaloría",
                other: "{0} quilocalorías"
            },
            energyCalorie: {
                one: "{0} caloría",
                other: "{0} calorías"
            },
            energyFoodcalorie: {
                one: "{0} Caloría",
                other: "{0} Calorías"
            },
            energyKilojoule: {
                one: "{0} quilojoule",
                other: "{0} quilojoules"
            },
            energyJoule: {
                one: "{0} joule",
                other: "{0} joules"
            },
            energyKilowattHour: {
                one: "{0} quilowatt/hora",
                other: "{0} quilowatts/hora"
            },
            frequencyGigahertz: {
                one: "{0} xigahertz",
                other: "{0} xigahertz"
            },
            frequencyMegahertz: {
                one: "{0} megahertz",
                other: "{0} megahertz"
            },
            frequencyKilohertz: {
                one: "{0} kilohertz",
                other: "{0} kilohertz"
            },
            frequencyHertz: {
                one: "{0} hertz",
                other: "{0} hertz"
            },
            lengthKilometer: {
                one: "{0} quilómetro",
                other: "{0} quilómetros"
            },
            lengthMeter: {
                one: "{0} metro",
                other: "{0} metros"
            },
            lengthDecimeter: {
                one: "{0} decímetro",
                other: "{0} decímetros"
            },
            lengthCentimeter: {
                one: "{0} centímetro",
                other: "{0} centímetros"
            },
            lengthMillimeter: {
                one: "{0} milímetro",
                other: "{0} milímetros"
            },
            lengthMicrometer: {
                one: "{0} micrómetro",
                other: "{0} micrómetros"
            },
            lengthNanometer: {
                one: "{0} nanómetro",
                other: "{0} nanómetros"
            },
            lengthPicometer: {
                one: "{0} picómetro",
                other: "{0} picómetros"
            },
            lengthMile: {
                one: "{0} milla",
                other: "{0} millas"
            },
            lengthYard: {
                one: "{0} iarda",
                other: "{0} iardas"
            },
            lengthFoot: {
                one: "{0} pé",
                other: "{0} pés"
            },
            lengthInch: {
                one: "{0} polgada",
                other: "{0} polgadas"
            },
            lengthParsec: {
                one: "{0} pársec",
                other: "{0} pársecs"
            },
            lengthLightYear: {
                one: "{0} ano luz",
                other: "{0} anos luz"
            },
            lengthAstronomicalUnit: {
                one: "{0} unidad astronómica",
                other: "{0} unidades astronómicas"
            },
            lengthNauticalMile: {
                one: "{0} milla náutica",
                other: "{0} millas náuticas"
            },
            lengthMileScandinavian: {
                one: "{0} milla escandinava",
                other: "{0} millas escandinavas"
            },
            lightLux: {
                one: "{0} lux",
                other: "{0} lux"
            },
            massMetricTon: {
                one: "{0} tonelada métrica",
                other: "{0} toneladas métricas"
            },
            massKilogram: {
                one: "{0} quilogramo",
                other: "{0} quilogramos"
            },
            massGram: {
                one: "{0} gramo",
                other: "{0} gramos"
            },
            massMilligram: {
                one: "{0} miligramo",
                other: "{0} miligramos"
            },
            massMicrogram: {
                one: "{0} microgramo",
                other: "{0} microgramos"
            },
            massTon: {
                one: "{0} tonelada",
                other: "{0} toneladas"
            },
            massPound: {
                one: "{0} libra",
                other: "{0} libras"
            },
            massOunce: {
                one: "{0} onza",
                other: "{0} onzas"
            },
            massOunceTroy: {
                one: "{0} onza troy",
                other: "{0} onzas troy"
            },
            massCarat: _6bdj81,
            powerGigawatt: {
                one: "{0} xigawatt",
                other: "{0} xigawatts"
            },
            powerMegawatt: {
                one: "{0} megawatt",
                other: "{0} megawatts"
            },
            powerKilowatt: {
                one: "{0} quilowatt",
                other: "{0} quilowatts"
            },
            powerWatt: {
                one: "{0} watt",
                other: "{0} watts"
            },
            powerMilliwatt: {
                one: "{0} milliwatt",
                other: "{0} milliwatts"
            },
            powerHorsepower: {
                one: "{0} cabalo de potencia",
                other: "{0} cabalos de potencia"
            },
            pressureHectopascal: {
                one: "{0} hectopascal",
                other: "{0} hectopascais"
            },
            pressureMillimeterOfMercury: {
                one: "{0} milímetro de mercurio",
                other: "{0} milímetros de mercurio"
            },
            pressurePoundPerSquareInch: {
                one: "{0} libra por polgada cadrada",
                other: "{0} libras por polgada cadrada"
            },
            pressureInchHg: {
                one: "{0} polgada de mercurio",
                other: "{0} polgadas de mercurio"
            },
            pressureMillibar: {
                one: "{0} milibar",
                other: "{0} milibares"
            },
            speedKilometerPerHour: {
                one: "{0} quilómetro por hora",
                other: "{0} quilómetros por hora"
            },
            speedMeterPerSecond: {
                one: "{0} metro por segundo",
                other: "{0} metros por segundo"
            },
            speedMilePerHour: {
                one: "{0} milla por hora",
                other: "{0} millas por hora"
            },
            speedKnot: {
                one: "{0} nó",
                other: "{0} nós"
            },
            temperatureGeneric: _6bdj10,
            temperatureCelsius: {
                one: "{0} grao Celsius",
                other: "{0} graos Celsius"
            },
            temperatureFahrenheit: {
                one: "{0} grao Fahrenheit",
                other: "{0} graos Fahrenheit"
            },
            temperatureKelvin: {
                one: "{0} grao Kelvin",
                other: "{0} graos Kelvin"
            },
            volumeCubicKilometer: {
                one: "{0} quilómetro cúbico",
                other: "{0} quilómetros cúbicos"
            },
            volumeCubicMeter: {
                one: "{0} metro cúbico",
                other: "{0} metros cúbicos"
            },
            volumeCubicCentimeter: {
                one: "{0} centímetro cúbico",
                other: "{0} centímetros cúbicos"
            },
            volumeCubicMile: {
                one: "{0} milla cúbica",
                other: "{0} millas cúbicas"
            },
            volumeCubicYard: {
                one: "{0} iarda cúbica",
                other: "{0} iardas cúbicas"
            },
            volumeCubicFoot: {
                one: "{0} pé cúbico",
                other: "{0} pés cúbicos"
            },
            volumeCubicInch: {
                one: "{0} polgada cúbica",
                other: "{0} polgadas cúbicas"
            },
            volumeMegaliter: {
                one: "{0} megalitro",
                other: "{0} megalitros"
            },
            volumeHectoliter: {
                one: "{0} hectolitro",
                other: "{0} hectolitros"
            },
            volumeLiter: {
                one: "{0} litro",
                other: "{0} litros"
            },
            volumeDeciliter: {
                one: "{0} decilitro",
                other: "{0} decilitros"
            },
            volumeCentiliter: {
                one: "{0} centilitro",
                other: "{0} centilitros"
            },
            volumeMilliliter: {
                one: "{0} mililitro",
                other: "{0} mililitros"
            },
            volumePintMetric: {
                one: "{0} pinta métrica",
                other: "{0} pintas métricas"
            },
            volumeCupMetric: {
                one: "{0} cunca métrica",
                other: "{0} cuncas métricas"
            },
            volumeAcreFoot: {
                one: "{0} acre pé",
                other: "{0} acres pés"
            },
            volumeGallon: {
                one: "{0} galón",
                other: "{0} galóns"
            },
            volumeQuart: {
                one: "{0} cuarto",
                other: "{0} cuartos"
            },
            volumePint: {
                one: "{0} pinta",
                other: "{0} pintas"
            },
            volumeCup: {
                one: "{0} cunca",
                other: "{0} cuncas"
            },
            volumeFluidOunce: {
                one: "{0} onza líquida",
                other: "{0} onzas líquidas"
            },
            volumeTablespoon: {
                one: "{0} cullerada",
                other: "{0} culleradas"
            },
            volumeTeaspoon: {
                one: "{0} culleriña",
                other: "{0} culleriñas"
            }
        },
        compoundUnit: {
            per: "{0} por {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                one: "{0} G",
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: {
                one: "{0} rev",
                other: "{0} rev"
            },
            angleRadian: {
                one: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: _6bdj10,
            angleArcMinute: {
                one: "{0} arcomin",
                other: "{0} arcomin"
            },
            angleArcSecond: {
                one: "{0} arcoseg",
                other: "{0} arcoseg"
            },
            areaSquareKilometer: {
                one: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                one: "{0} ha",
                other: "{0} ha"
            },
            areaSquareMeter: {
                one: "{0} m²",
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: {
                one: "{0} mi²",
                other: "{0} mi²"
            },
            areaAcre: {
                one: "{0} ac",
                other: "{0} ac"
            },
            areaSquareYard: {
                one: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: {
                one: "{0} ft²",
                other: "{0} ft²"
            },
            areaSquareInch: {
                one: "{0} in²",
                other: "{0} in²"
            },
            concentrKarat: _6bdj32,
            consumptionLiterPerKilometer: {
                one: "{0} l/km",
                other: "{0} l/km"
            },
            "consumptionLiterPer-100kilometers": _6bdj86,
            consumptionMilePerGallon: {
                one: "{0} mpg",
                other: "{0} mpg"
            },
            digitalTerabyte: {
                one: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: {
                one: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: {
                one: "{0} kB",
                other: "{0} kB"
            },
            digitalKilobit: {
                one: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: {
                one: "{0} byte",
                other: "{0} byte"
            },
            digitalBit: {
                one: "{0} bit",
                other: "{0} bit"
            },
            durationCentury: {
                one: "{0} séc.",
                other: "{0} séc."
            },
            durationYear: _6bdj46,
            durationMonth: _6bdj21,
            durationWeek: {
                one: "{0} sem",
                other: "{0} sem"
            },
            durationDay: _6bdj47,
            durationHour: _6bdj54,
            durationMinute: {
                one: "{0} min",
                other: "{0} min"
            },
            durationSecond: {
                one: "{0} seg",
                other: "{0} seg"
            },
            durationMillisecond: {
                one: "{0} miliseg",
                other: "{0} miliseg"
            },
            durationMicrosecond: {
                one: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: {
                one: "{0} kcal",
                other: "{0} kcal"
            },
            energyCalorie: {
                one: "{0} cal",
                other: "{0} cal"
            },
            energyFoodcalorie: {
                one: "{0} Cal",
                other: "{0} Cal"
            },
            energyKilojoule: {
                one: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kW/h",
                other: "{0} kW/h"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: {
                one: "{0} quilóm",
                other: "{0} quilóm"
            },
            lengthMeter: {
                one: "{0} met",
                other: "{0} met"
            },
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: {
                one: "{0} cent",
                other: "{0} cent"
            },
            lengthMillimeter: {
                one: "{0} milím",
                other: "{0} milím"
            },
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: {
                one: "{0} pm",
                other: "{0} pm"
            },
            lengthMile: {
                one: "{0} mi",
                other: "{0} mi"
            },
            lengthYard: {
                one: "{0} yd",
                other: "{0} yd"
            },
            lengthFoot: {
                one: "{0} ft",
                other: "{0} ft"
            },
            lengthInch: {
                one: "{0} in",
                other: "{0} in"
            },
            lengthParsec: {
                one: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: {
                one: "{0} al",
                other: "{0} al"
            },
            lengthAstronomicalUnit: {
                one: "{0} ua",
                other: "{0} ua"
            },
            lengthNauticalMile: {
                one: "{0} nmi",
                other: "{0} nmi"
            },
            lengthMileScandinavian: {
                one: "{0} smi",
                other: "{0} smi"
            },
            lightLux: {
                one: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: {
                one: "{0} tm",
                other: "{0} tm"
            },
            massKilogram: {
                one: "{0} quilog",
                other: "{0} quilog"
            },
            massGram: {
                one: "{0} gram",
                other: "{0} gram"
            },
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} µg",
                other: "{0} µg"
            },
            massTon: {
                one: "{0} t",
                other: "{0} t"
            },
            massPound: {
                one: "{0} lb",
                other: "{0} lb"
            },
            massOunce: {
                one: "{0} oz",
                other: "{0} oz"
            },
            massOunceTroy: {
                one: "{0} oz t",
                other: "{0} oz t"
            },
            massCarat: _6bdj32,
            powerGigawatt: {
                one: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: {
                one: "{0} kW",
                other: "{0} kW"
            },
            powerWatt: {
                one: "{0} W",
                other: "{0} W"
            },
            powerMilliwatt: {
                one: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: {
                one: "{0} hp",
                other: "{0} hp"
            },
            pressureHectopascal: {
                one: "{0} hPa",
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                one: "{0} mm Hg",
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0} psi",
                other: "{0} psi"
            },
            pressureInchHg: {
                one: "{0} inHg",
                other: "{0} inHg"
            },
            pressureMillibar: {
                one: "{0} mbar",
                other: "{0} mbar"
            },
            speedKilometerPerHour: _6bdj49,
            speedMeterPerSecond: {
                one: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: {
                one: "{0} mi/h",
                other: "{0} mi/h"
            },
            speedKnot: {
                one: "{0} kn",
                other: "{0} kn"
            },
            temperatureGeneric: _6bdj10,
            temperatureCelsius: {
                one: "{0} g Celsius",
                other: "{0} g Celsius"
            },
            temperatureFahrenheit: _6bdj22,
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: {
                one: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMeter: {
                one: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: {
                one: "{0} mi³",
                other: "{0} mi³"
            },
            volumeCubicYard: {
                one: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: {
                one: "{0} in³",
                other: "{0} in³"
            },
            volumeMegaliter: {
                one: "{0} Ml",
                other: "{0} Ml"
            },
            volumeHectoliter: {
                one: "{0} hl",
                other: "{0} hl"
            },
            volumeLiter: {
                one: "{0} lit",
                other: "{0} lit"
            },
            volumeDeciliter: {
                one: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} cl",
                other: "{0} cl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                other: "{0} ml"
            },
            volumePintMetric: {
                one: "{0} mpt",
                other: "{0} mpt"
            },
            volumeCupMetric: {
                one: "{0} mc",
                other: "{0} mc"
            },
            volumeAcreFoot: {
                one: "{0} ac ft",
                other: "{0} ac ft"
            },
            volumeGallon: {
                one: "{0} gal",
                other: "{0} gal"
            },
            volumeQuart: {
                one: "{0} qt",
                other: "{0} qt"
            },
            volumePint: {
                one: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: {
                one: "{0} c",
                other: "{0} c"
            },
            volumeFluidOunce: {
                one: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} tbsp",
                other: "{0} tbsp"
            },
            volumeTeaspoon: {
                one: "{0} tsp",
                other: "{0} tsp"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            massStone: {
                other: "{0} st"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            angleArcMinute: {
                one: "{0}′",
                other: "{0}′"
            },
            "consumptionLiterPer-100kilometers": _6bdj86,
            durationYear: {
                one: "{0} a",
                other: "{0} a"
            },
            durationMonth: _6bdj21,
            durationWeek: _6bdj23,
            durationDay: {
                one: "{0} d",
                other: "{0} d"
            },
            durationHour: {
                one: "{0} h",
                other: "{0} h"
            },
            durationMinute: _6bdj21,
            durationSecond: _6bdj23,
            durationMillisecond: {
                one: "{0} ms",
                other: "{0} ms"
            },
            lengthKilometer: {
                one: "{0} km",
                other: "{0} km"
            },
            lengthMeter: _6bdj21,
            lengthCentimeter: {
                one: "{0} cm",
                other: "{0} cm"
            },
            lengthMillimeter: {
                one: "{0} mm",
                other: "{0} mm"
            },
            massKilogram: {
                one: "{0} kg",
                other: "{0} kg"
            },
            massGram: {
                one: "{0} g",
                other: "{0} g"
            },
            speedKilometerPerHour: _6bdj49,
            temperatureCelsius: {
                one: "{0}°C",
                other: "{0}°C"
            },
            temperatureFahrenheit: _6bdj22,
            volumeLiter: {
                one: "{0} l",
                other: "{0} l"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "Horario de {0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "Horario de verán de {0}",
        standard: "Horario estándar de {0}"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "á", "b", "c", "d", "e", "é", "f", "g", "h", "i", "í", "j", "k", "l", "m", "n", "ñ", "o", "ó", "p", "q", "r", "s", "t", "u", "ú", "ü", "v", "w", "x", "y", "z" ],
        auxiliary: [ "ª", "à", "â", "ä", "ã", "ç", "è", "ê", "ë", "ì", "î", "ï", "º", "ò", "ô", "ö", "õ", "ù", "û" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "Ñ", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ],
        punctuation: [ "\\-", "‐", "–", "—", ",", ";", "\\:", "!", "?", ".", "…", "'", "‘", "’", '"', "“", "”", "(", ")", "\\[", "\\]", "§", "@", "*", "/", "\\&", "#", "†", "‡", "′", "″" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0}…",
        "word-initial": "…{0}",
        "word-medial": "{0}… {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _6bdj509,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _6bdj562,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _6bdj562,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _6bdj509,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _6bdj509,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _6bdj509,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _6bdj509,
        digits: "renderEthiopic"
    },
    finance: _6bdj511,
    fullwide: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _6bdj509,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _6bdj509,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _6bdj509,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _6bdj509,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _6bdj520,
    hansfin: _6bdj523,
    hant: _6bdj520,
    hantfin: _6bdj523,
    hebr: {
        symbols: _6bdj509,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _6bdj509,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _6bdj520,
    jpanfin: _6bdj523,
    kali: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _6bdj509,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _6bdj509,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _6bdj509,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _6bdj509,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _6bdj509,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _6bdj509,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _6bdj509,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _6bdj509,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _6bdj511,
    nkoo: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _6bdj509,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _6bdj509,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _6bdj509,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _6bdj509,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _6bdj509,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _6bdj509,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _6bdj511,
    vaii: {
        symbols: _6bdj509,
        formats: _6bdj562,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _6bdj509,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _6bdj557,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6bdj555,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6bdj542,
        dayPeriods: _6bdj553,
        monthNames: _6bdj547,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _6bdj530,
        fields: _6bdj564
    },
    chinese: _6bdj568,
    coptic: {
        dateFormats: _6bdj557,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6bdj555,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6bdj542,
        dayPeriods: _6bdj553,
        monthNames: {
            format: _6bdj533,
            standAlone: _6bdj533
        },
        eraNames: _6bdj123,
        quarterNames: _6bdj530,
        fields: _6bdj564
    },
    dangi: _6bdj568,
    ethioaa: _6bdj565,
    ethiopic: {
        dateFormats: _6bdj557,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6bdj555,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6bdj542,
        dayPeriods: _6bdj553,
        monthNames: {
            format: _6bdj535,
            standAlone: _6bdj535
        },
        eraNames: _6bdj123,
        quarterNames: _6bdj530,
        fields: _6bdj564
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE dd MMMM y",
                longDate: "dd MMMM y",
                mediumDate: "d MMM, y",
                shortDate: "dd/MM/yy",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "dd/MM/yy HH:mm",
                mediumDateTime: "d MMM, y HH:mm:ss",
                longDateTime: "dd MMMM y HH:mm:ss z",
                fullDateTime: "EEEE dd MMMM y HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "d E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "d-M",
                MEd: "E, d-M",
                MMdd: "dd/MM",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E d MMM",
                MMMMd: "d MMMM",
                MMMMEd: "E d MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "M-y",
                yMd: "d/M/y",
                yMEd: "E, d/M/y",
                yMM: "MM/y",
                yMMM: "MMM y",
                yMMMd: "d MMM, y",
                yMMMEd: "E, d MMM, y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: _6bdj555,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6bdj542,
        dayPeriods: _6bdj553,
        monthNames: _6bdj547,
        eraNames: {
            wide: [ "antes de Cristo", "despois de Cristo" ],
            abbreviated: [ "a.C.", "d.C." ]
        },
        quarterNames: _6bdj530,
        fields: _6bdj564
    },
    hebrew: {
        dateFormats: _6bdj557,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6bdj555,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6bdj542,
        dayPeriods: _6bdj553,
        monthNames: {
            format: _6bdj531,
            standAlone: _6bdj531
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _6bdj530,
        fields: _6bdj564
    },
    indian: {
        dateFormats: _6bdj557,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6bdj555,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6bdj542,
        dayPeriods: _6bdj553,
        monthNames: {
            format: _6bdj536,
            standAlone: _6bdj536
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _6bdj530,
        fields: _6bdj564
    },
    islamic: _6bdj567,
    "islamic-umalqura": _6bdj567,
    "islamic-tbla": _6bdj567,
    "islamic-civil": _6bdj567,
    "islamic-rgsa": _6bdj567,
    iso8601: _6bdj565,
    japanese: {
        dateFormats: _6bdj557,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6bdj555,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6bdj542,
        dayPeriods: _6bdj553,
        monthNames: _6bdj547,
        eraNames: {
            wide: _6bdj563,
            abbreviated: _6bdj563
        },
        quarterNames: _6bdj530,
        fields: _6bdj564
    },
    persian: {
        dateFormats: _6bdj557,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6bdj555,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6bdj542,
        dayPeriods: _6bdj553,
        monthNames: {
            format: _6bdj532,
            standAlone: _6bdj532
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _6bdj530,
        fields: _6bdj564
    },
    roc: {
        dateFormats: _6bdj557,
        datePartsOrder: "dmy",
        dateIntervalFormats: _6bdj555,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _6bdj542,
        dayPeriods: _6bdj553,
        monthNames: _6bdj547,
        eraNames: {
            wide: _6bdj20,
            abbreviated: _6bdj20
        },
        quarterNames: _6bdj530,
        fields: _6bdj564
    },
    islamicc: _6bdj565
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length;
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 1 && v === 0) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 4), {
    id: "Pacific/Honolulu",
    regionId: "021",
    utcStandardOffsetSeconds: -36e3,
    displayName: "Honolulú",
    countryId: "US"
}, P.timeZones[5], {
    id: "Pacific/Tahiti",
    regionId: "061",
    utcStandardOffsetSeconds: -36e3,
    displayName: "Tahití",
    countryId: "PF"
}, P.timeZones.slice(7, 15), {
    id: "America/Los_Angeles",
    regionId: "021",
    utcStandardOffsetSeconds: -28800,
    displayName: "Os Ánxeles",
    countryId: "US"
}, P.timeZones.slice(16, 19), {
    id: "America/Cambridge_Bay",
    regionId: "021",
    utcStandardOffsetSeconds: -25200,
    displayName: "Abadía de Cambridge",
    countryId: "CA"
}, P.timeZones[19], P.timeZones.slice(21, 30), {
    id: "America/Mazatlan",
    regionId: "013",
    utcStandardOffsetSeconds: -25200,
    displayName: "Mazatlán",
    countryId: "MX"
}, P.timeZones.slice(31, 34), {
    id: "America/Bahia_Banderas",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Baía de Bandeiras",
    countryId: "MX"
}, {
    id: "America/Belize",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Belice",
    countryId: "BZ"
}, {
    id: "America/North_Dakota/Beulah",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Beulah, Dakota do Norte",
    countryId: "US"
}, {
    id: "America/North_Dakota/Center",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Center, Dakota do Norte",
    countryId: "US"
}, P.timeZones.slice(38, 40), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Cidade de México",
    countryId: "MX"
}, P.timeZones[40], P.timeZones[44], {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Illa de Pascua",
    countryId: "CL"
}, {
    id: "Pacific/Galapagos",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Illas Galápagos",
    countryId: "EC"
}, P.timeZones.slice(45, 49), {
    id: "America/Monterrey",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Monterrei",
    countryId: "MX"
}, {
    id: "America/Merida",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mérida",
    countryId: "MX"
}, {
    id: "America/North_Dakota/New_Salem",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "New Salem, Dakota do Norte",
    countryId: "US"
}, {
    id: "America/El_Salvador",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "O Salvador",
    countryId: "SV"
}, P.timeZones.slice(53, 62), {
    id: "America/Bogota",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Bogotá",
    countryId: "CO"
}, {
    id: "America/Cayman",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Caimán",
    countryId: "KY"
}, {
    id: "America/Cancun",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Cancún",
    countryId: "MX"
}, P.timeZones.slice(65, 67), {
    id: "America/Grand_Turk",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Gran Turca",
    countryId: "TC"
}, P.timeZones[68], {
    id: "America/Havana",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Habana",
    countryId: "CU"
}, P.timeZones.slice(70, 72), P.timeZones.slice(73, 78), {
    id: "America/New_York",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Nova York",
    countryId: "US"
}, {
    id: "America/Panama",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Panamá",
    countryId: "PA"
}, {
    id: "America/Indiana/Petersburg",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Petersburgo, Indiana",
    countryId: "US"
}, {
    id: "America/Port-au-Prince",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Porto Príncipe",
    countryId: "HT"
}, {
    id: "America/Rio_Branco",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Río Branco",
    countryId: "BR"
}, P.timeZones.slice(83, 87), {
    id: "America/Jamaica",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Xamaica",
    countryId: "JM"
}, {
    id: "America/Anguilla",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Anguila",
    countryId: "AI"
}, {
    id: "America/Antigua",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Antiga",
    countryId: "AG"
}, P.timeZones[89], {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones[91], {
    id: "Atlantic/Bermuda",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Bermudas",
    countryId: "BM"
}, P.timeZones.slice(93, 97), {
    id: "America/Cuiaba",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Cuiabá",
    countryId: "BR"
}, {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 102), {
    id: "America/Grenada",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Granada",
    countryId: "GD"
}, {
    id: "America/Guadeloupe",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Guadalupe",
    countryId: "GP"
}, {
    id: "America/Guyana",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Güiana",
    countryId: "GY"
}, P.timeZones.slice(105, 111), {
    id: "America/Martinique",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Martinica",
    countryId: "MQ"
}, P.timeZones.slice(112, 114), {
    id: "America/Port_of_Spain",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Porto España",
    countryId: "TT"
}, {
    id: "America/Puerto_Rico",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Porto Rico",
    countryId: "PR"
}, P.timeZones[115], {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "San Bartolomé",
    countryId: "BL"
}, {
    id: "America/St_Kitts",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "San Cristovo",
    countryId: "KN"
}, {
    id: "America/St_Thomas",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "San Tomé",
    countryId: "VI"
}, {
    id: "America/St_Vincent",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "San Vicente",
    countryId: "VC"
}, P.timeZones.slice(117, 119), P.timeZones[121], P.timeZones.slice(124, 127), {
    id: "America/Araguaina",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Araguaína",
    countryId: "BR"
}, P.timeZones[128], {
    id: "America/Belem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Belém",
    countryId: "BR"
}, P.timeZones[130], {
    id: "America/Cayenne",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Caiena",
    countryId: "GF"
}, P.timeZones[131], P.timeZones.slice(133, 137), {
    id: "America/Maceio",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Maceió",
    countryId: "BR"
}, P.timeZones.slice(138, 145), P.timeZones[146], {
    id: "America/Argentina/Rio_Gallegos",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Río Gallegos",
    countryId: "AR"
}, P.timeZones.slice(147, 151), P.timeZones[152], {
    id: "America/Sao_Paulo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "São Paulo",
    countryId: "BR"
}, {
    id: "America/Argentina/Tucuman",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Tucumán",
    countryId: "AR"
}, P.timeZones.slice(154, 157), {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Xeorxia do Sur",
    countryId: "GS"
}, P.timeZones[158], {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Cabo Verde",
    countryId: "CV"
}, P.timeZones.slice(160, 162), {
    id: "Africa/Accra",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Acra",
    countryId: "GH"
}, {
    id: "Africa/Bamako",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Bamaco",
    countryId: "ML"
}, P.timeZones.slice(164, 166), P.timeZones[167], {
    id: "Africa/Dakar",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Dacar",
    countryId: "SN"
}, P.timeZones[169], {
    id: "Europe/Dublin",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Dublín",
    countryId: "IE"
}, P.timeZones.slice(171, 173), {
    id: "Europe/Guernsey",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Guernesei",
    countryId: "GG"
}, {
    id: "Europe/Isle_of_Man",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Illa de Man",
    countryId: "IM"
}, {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Illas Canarias",
    countryId: "ES"
}, P.timeZones[175], {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lisboa",
    countryId: "PT"
}, {
    id: "Africa/Lome",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Lomé",
    countryId: "TG"
}, {
    id: "Europe/London",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Londres",
    countryId: "GB"
}, P.timeZones.slice(179, 182), {
    id: "Atlantic/Reykjavik",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Reiquiavik",
    countryId: "IS"
}, {
    id: "Atlantic/St_Helena",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Santa Helena",
    countryId: "SH"
}, {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Africa/Ouagadougou",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Uagadugú",
    countryId: "BF"
}, {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Alxer",
    countryId: "DZ"
}, P.timeZones.slice(189, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrado",
    countryId: "RS"
}, {
    id: "Europe/Berlin",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Berlín",
    countryId: "DE"
}, P.timeZones.slice(193, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bruxelas",
    countryId: "BE"
}, P.timeZones.slice(196, 200), {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Copenhaguen",
    countryId: "DK"
}, P.timeZones[201], P.timeZones.slice(204, 207), {
    id: "Europe/Ljubljana",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Liubliana",
    countryId: "SI"
}, P.timeZones.slice(208, 210), {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luxemburgo",
    countryId: "LU"
}, P.timeZones.slice(211, 214), {
    id: "Europe/Monaco",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Mónaco",
    countryId: "MC"
}, P.timeZones[216], {
    id: "Africa/El_Aaiun",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "O Aiún",
    countryId: "EH"
}, P.timeZones[217], {
    id: "Europe/Paris",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "París",
    countryId: "FR"
}, P.timeZones[219], {
    id: "Africa/Porto-Novo",
    regionId: "011",
    utcStandardOffsetSeconds: 3600,
    displayName: "Porto Novo",
    countryId: "BJ"
}, {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Praga",
    countryId: "CZ"
}, P.timeZones.slice(222, 227), {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, {
    id: "Africa/Tunis",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Túnez",
    countryId: "TN"
}, P.timeZones[229], {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Varsovia",
    countryId: "PL"
}, {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Vaticano",
    countryId: "VA"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Viena",
    countryId: "AT"
}, {
    id: "Africa/Ndjamena",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "Xamena",
    countryId: "TD"
}, {
    id: "Europe/Gibraltar",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Xibraltar",
    countryId: "GI"
}, P.timeZones[233], {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zúric",
    countryId: "CH"
}, {
    id: "Europe/Amsterdam",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Ámsterdan",
    countryId: "NL"
}, P.timeZones.slice(235, 238), {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bucarest",
    countryId: "RO"
}, P.timeZones.slice(239, 249), P.timeZones[250], {
    id: "Europe/Kaliningrad",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kaliningrado",
    countryId: "RU"
}, {
    id: "Africa/Khartoum",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Khartún",
    countryId: "SD"
}, P.timeZones.slice(253, 256), {
    id: "Africa/Lusaka",
    regionId: "014",
    utcStandardOffsetSeconds: 7200,
    displayName: "Lusaca",
    countryId: "ZM"
}, P.timeZones.slice(257, 264), {
    id: "Europe/Tallinn",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Talín",
    countryId: "EE"
}, {
    id: "Africa/Tripoli",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Trípoli",
    countryId: "LY"
}, P.timeZones.slice(266, 268), {
    id: "Africa/Johannesburg",
    regionId: "018",
    utcStandardOffsetSeconds: 7200,
    displayName: "Xohanesburgo",
    countryId: "ZA"
}, {
    id: "Asia/Aden",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Adén",
    countryId: "YE"
}, {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Adís Abeba",
    countryId: "ET"
}, {
    id: "Asia/Amman",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Amán",
    countryId: "JO"
}, P.timeZones.slice(271, 273), {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdad",
    countryId: "IQ"
}, P.timeZones[274], {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damasco",
    countryId: "SY"
}, P.timeZones[277], {
    id: "Europe/Istanbul",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Estanbul",
    countryId: "TR"
}, {
    id: "Indian/Comoro",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Illas Comores",
    countryId: "KM"
}, P.timeZones.slice(280, 285), {
    id: "Africa/Mogadishu",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Mogadixo",
    countryId: "SO"
}, {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moscova",
    countryId: "RU"
}, P.timeZones.slice(287, 289), {
    id: "Asia/Riyadh",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Riad",
    countryId: "SA"
}, P.timeZones.slice(290, 292), {
    id: "Europe/Volgograd",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Volgogrado",
    countryId: "RU"
}, {
    id: "Africa/Djibouti",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Xibutí",
    countryId: "DJ"
}, P.timeZones.slice(293, 295), {
    id: "Asia/Baku",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Bacú",
    countryId: "AZ"
}, P.timeZones[296], {
    id: "Asia/Yerevan",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Iereván",
    countryId: "AM"
}, P.timeZones[297], {
    id: "Asia/Muscat",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Mascat",
    countryId: "OM"
}, {
    id: "Indian/Mauritius",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Mauricio",
    countryId: "MU"
}, {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Reunión",
    countryId: "RE"
}, P.timeZones.slice(301, 305), {
    id: "Asia/Kabul",
    regionId: "034",
    utcStandardOffsetSeconds: 16200,
    displayName: "Cabul",
    countryId: "AF"
}, P.timeZones.slice(307, 312), {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Ecaterinburgo",
    countryId: "RU"
}, P.timeZones.slice(312, 314), {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Maldivas",
    countryId: "MV"
}, P.timeZones.slice(315, 318), {
    id: "Asia/Samarkand",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Samarcanda",
    countryId: "UZ"
}, P.timeZones[319], P.timeZones.slice(321, 324), {
    id: "Asia/Almaty",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Almati",
    countryId: "KZ"
}, P.timeZones.slice(325, 330), {
    id: "Asia/Thimphu",
    regionId: "034",
    utcStandardOffsetSeconds: 21600,
    displayName: "Timbu",
    countryId: "BT"
}, P.timeZones.slice(331, 337), P.timeZones.slice(338, 341), {
    id: "Asia/Jakarta",
    regionId: "035",
    utcStandardOffsetSeconds: 25200,
    displayName: "Iacarta",
    countryId: "ID"
}, {
    id: "Indian/Christmas",
    utcStandardOffsetSeconds: 25200,
    displayName: "Illa de Nadal",
    countryId: "CX"
}, P.timeZones.slice(342, 360), {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Singapur",
    countryId: "SG"
}, P.timeZones[361], {
    id: "Asia/Ulaanbaatar",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Ulán Bátor",
    countryId: "MN"
}, P.timeZones.slice(363, 366), {
    id: "Asia/Jayapura",
    regionId: "035",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jaiapura",
    countryId: "ID"
}, P.timeZones.slice(367, 370), {
    id: "Asia/Seoul",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Seúl",
    countryId: "KR"
}, {
    id: "Asia/Tokyo",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Toquio",
    countryId: "JP"
}, P.timeZones.slice(372, 378), {
    id: "Antarctica/DumontDUrville",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Dumont-d’Urville",
    countryId: "AQ"
}, P.timeZones.slice(379, 385), {
    id: "Pacific/Saipan",
    regionId: "057",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Saipán",
    countryId: "MP"
}, {
    id: "Australia/Sydney",
    regionId: "053",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Sidney",
    countryId: "AU"
}, P.timeZones.slice(387, 401), {
    id: "Asia/Anadyr",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Anadir",
    countryId: "RU"
}, P.timeZones[402], {
    id: "Pacific/Fiji",
    regionId: "054",
    utcStandardOffsetSeconds: 43200,
    displayName: "Fidxi",
    countryId: "FJ"
}, P.timeZones.slice(404, 419));

inter.territories = [ _6bdj340, _6bdj341, _6bdj243, _6bdj244, _6bdj403, _6bdj447, _6bdj454, _6bdj245, _6bdj212, _6bdj246, _6bdj414, _6bdj131, _6bdj394, _6bdj247, _6bdj186, _6bdj248, _6bdj320, _6bdj374, _6bdj434, _6bdj448, _6bdj441, _6bdj431, _6bdj321, _6bdj249, _6bdj250, _6bdj251, _6bdj342, _6bdj295, _6bdj213, _6bdj187, _6bdj296, _6bdj363, _6bdj252, _6bdj435, _6bdj297, _6bdj214, _6bdj215, _6bdj298, _6bdj375, _6bdj253, _6bdj188, _6bdj254, _6bdj343, _6bdj299, _6bdj255, _6bdj216, _6bdj395, _6bdj417, _6bdj156, _6bdj166, _6bdj189, _6bdj190, _6bdj217, _6bdj425, _6bdj300, _6bdj301, _6bdj256, _6bdj191, _6bdj396, _6bdj376, _6bdj344, _6bdj404, _6bdj257, _6bdj167, _6bdj258, _6bdj142, _6bdj322, _6bdj259, _6bdj302, _6bdj260, _6bdj364, _6bdj442, _6bdj261, _6bdj345, _6bdj323, _6bdj218, _6bdj458, _6bdj262, _6bdj263, _6bdj397, _6bdj459, _6bdj460, _6bdj465, _6bdj449, _6bdj219, _6bdj324, _6bdj325, _6bdj168, _6bdj264, _6bdj192, _6bdj220, _6bdj169, _6bdj265, _6bdj221, _6bdj346, _6bdj326, _6bdj170, _6bdj327, _6bdj303, _6bdj222, _6bdj418, _6bdj383, _6bdj223, _6bdj405, _6bdj193, _6bdj304, _6bdj443, _6bdj266, _6bdj194, _6bdj139, _6bdj147, _6bdj157, _6bdj384, _6bdj377, _6bdj162, _6bdj365, _6bdj366, _6bdj378, _6bdj153, _6bdj224, _6bdj347, _6bdj367, _6bdj398, _6bdj450, _6bdj399, _6bdj419, _6bdj400, _6bdj385, _6bdj436, _6bdj451, _6bdj466, _6bdj195, _6bdj328, _6bdj171, _6bdj267, _6bdj172, _6bdj305, _6bdj225, _6bdj226, _6bdj227, _6bdj348, _6bdj196, _6bdj306, _6bdj268, _6bdj228, _6bdj173, _6bdj269, _6bdj270, _6bdj271, _6bdj197, _6bdj386, _6bdj307, _6bdj349, _6bdj229, _6bdj426, _6bdj329, _6bdj350, _6bdj308, _6bdj230, _6bdj309, _6bdj174, _6bdj198, _6bdj310, _6bdj330, _6bdj311, _6bdj351, _6bdj272, _6bdj420, _6bdj352, _6bdj273, _6bdj312, _6bdj353, _6bdj354, _6bdj355, _6bdj121, _6bdj427, _6bdj231, _6bdj232, _6bdj274, _6bdj199, _6bdj200, _6bdj331, _6bdj175, _6bdj275, _6bdj276, _6bdj401, _6bdj387, _6bdj201, _6bdj406, {
    id: "QO",
    displayName: "Oceanía Distante",
    regionId: "009",
    hasTimeZones: false
}, _6bdj176, _6bdj202, _6bdj233, _6bdj421, _6bdj332, _6bdj313, _6bdj388, _6bdj177, _6bdj422, _6bdj428, _6bdj277, _6bdj356, _6bdj314, _6bdj203, _6bdj389, _6bdj368, _6bdj455, _6bdj407, _6bdj472, _6bdj437, _6bdj278, _6bdj467, _6bdj279, _6bdj234, _6bdj204, _6bdj205, _6bdj408, _6bdj390, _6bdj438, _6bdj357, _6bdj369, _6bdj439, _6bdj432, _6bdj456, _6bdj379, _6bdj370, _6bdj315, _6bdj280, _6bdj235, _6bdj358, _6bdj316, _6bdj380, _6bdj206, _6bdj281, _6bdj333, _6bdj371, _6bdj429, _6bdj334, _6bdj207, _6bdj381, _6bdj236, _6bdj433, _6bdj457, _6bdj282, _6bdj208, _6bdj440, _6bdj423, _6bdj335, _6bdj237, _6bdj317, _6bdj372, _6bdj444, _6bdj391, _6bdj445, _6bdj373, _6bdj178, _6bdj283, _6bdj209, _6bdj424, _6bdj159, _6bdj284, _6bdj382, _6bdj285, _6bdj238, _6bdj286, _6bdj239, _6bdj287, _6bdj359, _6bdj288, _6bdj336, _6bdj289, _6bdj409, _6bdj290, _6bdj210, _6bdj291, _6bdj415, _6bdj337, _6bdj318, _6bdj240, _6bdj402, _6bdj446, _6bdj461, _6bdj462, _6bdj452, _6bdj468 ];

inter.regions = [ _6bdj403, _6bdj447, _6bdj454, _6bdj374, _6bdj434, _6bdj448, _6bdj441, _6bdj431, _6bdj395, _6bdj397, _6bdj459, _6bdj460, _6bdj465, _6bdj449, _6bdj420, _6bdj121, _6bdj406, _6bdj422, _6bdj467, _6bdj429, _6bdj433, _6bdj457, _6bdj402, _6bdj446, _6bdj461, _6bdj462, _6bdj452, _6bdj468 ];

inter.countries = [ _6bdj340, _6bdj341, _6bdj243, _6bdj244, _6bdj245, _6bdj212, _6bdj246, _6bdj414, _6bdj131, _6bdj394, _6bdj247, _6bdj186, _6bdj248, _6bdj320, _6bdj321, _6bdj249, _6bdj250, _6bdj251, _6bdj342, _6bdj295, _6bdj213, _6bdj187, _6bdj296, _6bdj363, _6bdj252, _6bdj435, _6bdj297, _6bdj214, _6bdj215, _6bdj298, _6bdj375, _6bdj253, _6bdj188, _6bdj254, _6bdj343, _6bdj299, _6bdj255, _6bdj216, _6bdj417, _6bdj156, _6bdj166, _6bdj189, _6bdj190, _6bdj217, _6bdj425, _6bdj300, _6bdj301, _6bdj256, _6bdj191, _6bdj396, _6bdj376, _6bdj344, _6bdj404, _6bdj257, _6bdj167, _6bdj258, _6bdj142, _6bdj322, _6bdj259, _6bdj302, _6bdj260, _6bdj364, _6bdj442, _6bdj261, _6bdj345, _6bdj323, _6bdj218, _6bdj458, _6bdj262, _6bdj263, _6bdj219, _6bdj324, _6bdj325, _6bdj168, _6bdj264, _6bdj192, _6bdj220, _6bdj169, _6bdj265, _6bdj221, _6bdj346, _6bdj326, _6bdj170, _6bdj327, _6bdj303, _6bdj222, _6bdj418, _6bdj383, _6bdj223, _6bdj405, _6bdj193, _6bdj304, _6bdj443, _6bdj266, _6bdj194, _6bdj139, _6bdj147, _6bdj157, _6bdj384, _6bdj377, _6bdj162, _6bdj365, _6bdj366, _6bdj378, _6bdj153, _6bdj224, _6bdj347, _6bdj367, _6bdj398, _6bdj450, _6bdj399, _6bdj419, _6bdj400, _6bdj385, _6bdj436, _6bdj451, _6bdj466, _6bdj195, _6bdj328, _6bdj171, _6bdj267, _6bdj172, _6bdj305, _6bdj225, _6bdj226, _6bdj227, _6bdj348, _6bdj196, _6bdj306, _6bdj268, _6bdj228, _6bdj173, _6bdj269, _6bdj270, _6bdj271, _6bdj197, _6bdj386, _6bdj307, _6bdj349, _6bdj229, _6bdj426, _6bdj329, _6bdj350, _6bdj308, _6bdj230, _6bdj309, _6bdj174, _6bdj198, _6bdj310, _6bdj330, _6bdj311, _6bdj351, _6bdj272, _6bdj352, _6bdj273, _6bdj312, _6bdj353, _6bdj354, _6bdj355, _6bdj427, _6bdj231, _6bdj232, _6bdj274, _6bdj199, _6bdj200, _6bdj331, _6bdj175, _6bdj275, _6bdj276, _6bdj401, _6bdj387, _6bdj201, _6bdj176, _6bdj202, _6bdj233, _6bdj421, _6bdj332, _6bdj313, _6bdj388, _6bdj177, _6bdj428, _6bdj277, _6bdj356, _6bdj314, _6bdj203, _6bdj389, _6bdj368, _6bdj455, _6bdj407, _6bdj472, _6bdj437, _6bdj278, _6bdj279, _6bdj234, _6bdj204, _6bdj205, _6bdj408, _6bdj390, _6bdj438, _6bdj357, _6bdj369, _6bdj439, _6bdj432, _6bdj456, _6bdj379, _6bdj370, _6bdj315, _6bdj280, _6bdj235, _6bdj358, _6bdj316, _6bdj380, _6bdj206, _6bdj281, _6bdj333, _6bdj371, _6bdj334, _6bdj207, _6bdj381, _6bdj236, _6bdj282, _6bdj208, _6bdj440, _6bdj423, _6bdj335, _6bdj237, _6bdj317, _6bdj372, _6bdj444, _6bdj391, _6bdj445, _6bdj373, _6bdj178, _6bdj283, _6bdj209, _6bdj424, _6bdj159, _6bdj284, _6bdj382, _6bdj285, _6bdj238, _6bdj286, _6bdj239, _6bdj287, _6bdj359, _6bdj288, _6bdj336, _6bdj289, _6bdj409, _6bdj290, _6bdj210, _6bdj291, _6bdj415, _6bdj337, _6bdj318, _6bdj240 ];

inter.languages = [ {
    id: "ab",
    displayName: "abkhazo"
}, {
    id: "ach",
    displayName: "acoli"
}, {
    id: "af",
    displayName: "afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "agq",
    nativeDisplayName: "Aghem"
}, {
    id: "ay",
    displayName: "aimará"
}, {
    id: "ak",
    displayName: "akán",
    nativeDisplayName: "Akan"
}, {
    id: "en_us",
    displayName: "inglés dos Estados Unidos",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "smn",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "an",
    displayName: "aragonés"
}, {
    id: "arc",
    displayName: "arameo"
}, {
    id: "ast",
    displayName: "asturiano",
    nativeDisplayName: "asturianu"
}, {
    id: "en_au",
    displayName: "inglés australiano",
    nativeDisplayName: "Australian English"
}, {
    id: "az",
    displayName: "acerbaixano",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "malaio",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "nds",
    displayName: "Baixo alemán"
}, {
    id: "nds_nl",
    displayName: "Baixo saxón"
}, {
    id: "bgn",
    displayName: "Baluchi occidental"
}, {
    id: "bm",
    displayName: "bm",
    nativeDisplayName: "bamanakan"
}, {
    id: "ba",
    displayName: "baskir"
}, {
    id: "bs",
    displayName: "bosnio",
    nativeDisplayName: "bosanski"
}, {
    id: "br",
    displayName: "bretón",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "inglés británico",
    nativeDisplayName: "British English"
}, {
    id: "en_ca",
    displayName: "inglés canadiano",
    nativeDisplayName: "Canadian English"
}, {
    id: "ca",
    displayName: "catalán",
    nativeDisplayName: "català"
}, {
    id: "ny",
    displayName: "chewa"
}, {
    id: "kde",
    displayName: "makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "sn",
    displayName: "shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cv",
    displayName: "Chuvash"
}, {
    id: "co",
    displayName: "corso"
}, {
    id: "cy",
    displayName: "galés",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "dinamarqués",
    nativeDisplayName: "dansk"
}, {
    id: "se",
    displayName: "sami do norte",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "de",
    displayName: "alemán",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "dv",
    displayName: "divehi"
}, {
    id: "dsb",
    displayName: "dsb",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "estoniano",
    nativeDisplayName: "eesti"
}, {
    id: "guz",
    displayName: "gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "en",
    displayName: "inglés",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "español",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "castelán",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "español de México",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "español latinoamericano",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "éuscaro",
    nativeDisplayName: "euskara"
}, {
    id: "egy",
    displayName: "exipcio antigo"
}, {
    id: "ee",
    displayName: "ewé",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fil",
    displayName: "filipino",
    nativeDisplayName: "Filipino"
}, {
    id: "fj",
    displayName: "fixiano"
}, {
    id: "fr",
    displayName: "francés",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "francés canadiano",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "francés suízo",
    nativeDisplayName: "français suisse"
}, {
    id: "fo",
    displayName: "faroés",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "ga"
}, {
    id: "ga",
    displayName: "irlandés",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "gagauz"
}, {
    id: "gl",
    displayName: "galego",
    nativeDisplayName: "galego"
}, {
    id: "ki",
    displayName: "kikuyu",
    nativeDisplayName: "Gikuyu"
}, {
    id: "grc",
    displayName: "grego antigo"
}, {
    id: "gn",
    displayName: "guaraní"
}, {
    id: "gd",
    displayName: "gaélico escocés",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "ht",
    displayName: "haitiano"
}, {
    id: "ha",
    displayName: "hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "bez",
    displayName: "bez",
    nativeDisplayName: "Hibena"
}, {
    id: "hsb",
    displayName: "hsb",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "croata",
    nativeDisplayName: "hrvatski"
}, {
    id: "efi",
    displayName: "ibibio"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "ig",
    displayName: "ibo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "id",
    displayName: "indonesio",
    nativeDisplayName: "Indonesia"
}, {
    id: "ia",
    displayName: "interlingua"
}, {
    id: "sbp",
    displayName: "sbp",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "ndebele do norte",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "zulú",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "italiano",
    nativeDisplayName: "italiano"
}, {
    id: "iu",
    displayName: "iu"
}, {
    id: "dyo",
    displayName: "jola-fonyi",
    nativeDisplayName: "joola"
}, {
    id: "kea",
    displayName: "caboverdiano",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kl",
    displayName: "kl",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kln",
    nativeDisplayName: "Kalenjin"
}, {
    id: "kw",
    displayName: "kw",
    nativeDisplayName: "kernewek"
}, {
    id: "naq",
    displayName: "naq",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "rof",
    displayName: "rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "mapache",
    nativeDisplayName: "Kimachame"
}, {
    id: "rw",
    displayName: "ruandés",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asu",
    nativeDisplayName: "Kipare"
}, {
    id: "rwk",
    displayName: "rwk",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "saq",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "shambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "swahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "swc",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "tlh",
    displayName: "klingon"
}, {
    id: "koi",
    displayName: "komi permio"
}, {
    id: "kg",
    displayName: "kongo"
}, {
    id: "khq",
    displayName: "koyra Chiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "ses",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "mfe",
    displayName: "crioulo mauritano",
    nativeDisplayName: "kreol morisien"
}, {
    id: "ku",
    displayName: "kurdo"
}, {
    id: "sdh",
    displayName: "Kurdo meridional"
}, {
    id: "nmg",
    displayName: "nmg",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ebu",
    displayName: "embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "Langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "lkt",
    displayName: "Lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lv",
    displayName: "letón",
    nativeDisplayName: "latviešu"
}, {
    id: "la",
    displayName: "latín"
}, {
    id: "to",
    displayName: "tonganés",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lt",
    displayName: "lituano",
    nativeDisplayName: "lietuvių"
}, {
    id: "und",
    displayName: "Lingua descoñecida"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "loz",
    displayName: "lozi"
}, {
    id: "lua",
    displayName: "luba-lulua"
}, {
    id: "lg",
    displayName: "ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "luy",
    displayName: "luyia",
    nativeDisplayName: "Luluhia"
}, {
    id: "lb",
    displayName: "luxemburgués",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "masai",
    nativeDisplayName: "Maa"
}, {
    id: "hu",
    displayName: "húngaro",
    nativeDisplayName: "magyar"
}, {
    id: "mgh",
    displayName: "mgh",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "malgaxe",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "maltés",
    nativeDisplayName: "Malti"
}, {
    id: "mi",
    displayName: "maorí"
}, {
    id: "arn",
    displayName: "mapuche"
}, {
    id: "mgo",
    displayName: "mgo",
    nativeDisplayName: "metaʼ"
}, {
    id: "moh",
    displayName: "mohawk"
}, {
    id: "mua",
    displayName: "mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "jgo",
    displayName: "ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "nl",
    displayName: "holandés",
    nativeDisplayName: "Nederlands"
}, {
    id: "nb",
    displayName: "noruegués bokmal",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "noruegués"
}, {
    id: "nqo",
    displayName: "nqo"
}, {
    id: "nn",
    displayName: "noruegués nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "oc",
    displayName: "occitano"
}, {
    id: "xog",
    displayName: "soga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "uz",
    displayName: "uzbeco",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pl",
    displayName: "polaco",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "portugués",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "portugués brasileiro",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "portugués europeo",
    nativeDisplayName: "português europeu"
}, {
    id: "quc",
    displayName: "quiché"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "ro",
    displayName: "romanés",
    nativeDisplayName: "română"
}, {
    id: "cgg",
    displayName: "kiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "romanche",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "quechua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "sm",
    displayName: "samoano"
}, {
    id: "de_ch",
    displayName: "alto alemán suízo",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "alemán suízo",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "zxx",
    displayName: "sen contido lingüístico"
}, {
    id: "seh",
    displayName: "sena",
    nativeDisplayName: "sena"
}, {
    id: "sh",
    displayName: "serbocroata"
}, {
    id: "nso",
    displayName: "sesotho sa leboa"
}, {
    id: "st",
    displayName: "sesoto"
}, {
    id: "sq",
    displayName: "albanés",
    nativeDisplayName: "shqip"
}, {
    id: "sd",
    displayName: "sindhi"
}, {
    id: "sk",
    displayName: "eslovaco",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "esloveno",
    nativeDisplayName: "slovenščina"
}, {
    id: "sma",
    displayName: "sma"
}, {
    id: "smj",
    displayName: "smj"
}, {
    id: "sms",
    displayName: "sms"
}, {
    id: "su",
    displayName: "sondanés"
}, {
    id: "so",
    displayName: "somalí",
    nativeDisplayName: "Soomaali"
}, {
    id: "fi",
    displayName: "finés",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "sueco",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "swati"
}, {
    id: "sa",
    displayName: "sánscrito"
}, {
    id: "sg",
    displayName: "sango",
    nativeDisplayName: "Sängö"
}, {
    id: "tl",
    displayName: "tagalo"
}, {
    id: "ty",
    displayName: "tahitiano"
}, {
    id: "tzm",
    displayName: "tzm",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "kabile",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "twq",
    displayName: "twq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tg",
    displayName: "taxico"
}, {
    id: "tet",
    displayName: "tetún"
}, {
    id: "nus",
    displayName: "nus",
    nativeDisplayName: "Thok Nath"
}, {
    id: "vi",
    displayName: "vietnamita",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tpi",
    displayName: "tok pisin"
}, {
    id: "lu",
    displayName: "luba-Katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tn",
    displayName: "tswana"
}, {
    id: "tum",
    displayName: "tumbuka"
}, {
    id: "tw",
    displayName: "twi"
}, {
    id: "tt",
    displayName: "tártaro"
}, {
    id: "tk",
    displayName: "turcomano",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "turco",
    nativeDisplayName: "Türkçe"
}, {
    id: "mul",
    displayName: "varias linguas"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "nl_be",
    displayName: "flamenco",
    nativeDisplayName: "Vlaams"
}, {
    id: "wbp",
    displayName: "Warlpiri"
}, {
    id: "fy",
    displayName: "frisón",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "wólof"
}, {
    id: "jv",
    displayName: "xavanés"
}, {
    id: "xh",
    displayName: "xhosa"
}, {
    id: "ts",
    displayName: "xitsonga"
}, {
    id: "dje",
    displayName: "zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "yo",
    displayName: "ioruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islandés",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "alemán de austria",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "checo",
    nativeDisplayName: "čeština"
}, {
    id: "haw",
    displayName: "hawaiano",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "grego",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "bielorruso",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "búlgaro",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "osetio",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "quirguiz",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "macedonio",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongol",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "Checheno",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "ruso",
    nativeDisplayName: "русский"
}, {
    id: "sr",
    displayName: "serbio",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ucraíno",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "eslavo eclesiástico",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "casaco",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armenio",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "yiddish",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "hebreo",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uigur",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdú",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "árabe",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "árabe estándar moderno",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "persa",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "Lurí do norte",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "Mazandaraní",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "paxtún",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "curdo soraní",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "cachemir",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepalí",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "brx",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "assamés",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengalí",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "punjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "guxaratiano",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malabar",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "cingalés",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "tailandés",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "laotiano",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibetano",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "birmano",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "xeorxiano",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigriña",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amárico",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "cambodiano",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "tamazight de Marrocos estándar",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "tachelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "chinés",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "xaponés",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "chinés simplificado",
    nativeDisplayName: "简体中文"
}, {
    id: "zh_hant",
    displayName: "chinés tradicional",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "yi sichuanés",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "cheroqui",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "coreano",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Armn",
    displayName: "Armenio"
}, {
    id: "Beng",
    displayName: "Bengalí"
}, {
    id: "Mymr",
    displayName: "Birmania"
}, {
    id: "Bopo",
    displayName: "Bopomofo"
}, {
    id: "Brai",
    displayName: "Braille"
}, {
    id: "Khmr",
    displayName: "Camboxano"
}, {
    id: "Sinh",
    displayName: "Cingalés"
}, {
    id: "Cyrl",
    displayName: "Cirílico"
}, {
    id: "Zyyy",
    displayName: "Común"
}, {
    id: "Kore",
    displayName: "Coreano"
}, {
    id: "Deva",
    displayName: "Devanagari"
}, {
    id: "Zzzz",
    displayName: "Escritura descoñecida"
}, {
    id: "Ethi",
    displayName: "Etíope"
}, {
    id: "Grek",
    displayName: "Grego"
}, {
    id: "Guru",
    displayName: "Gurmukhi"
}, {
    id: "Hani",
    displayName: "Han"
}, {
    id: "Hang",
    displayName: "Hangul"
}, {
    id: "Hebr",
    displayName: "Hebreo"
}, {
    id: "Hira",
    displayName: "Hiragana"
}, {
    id: "Kana",
    displayName: "Katakana"
}, {
    id: "Laoo",
    displayName: "Laosiano"
}, {
    id: "Latn",
    displayName: "Latino"
}, {
    id: "Mlym",
    displayName: "Malabar"
}, {
    id: "Mong",
    displayName: "Mongol"
}, {
    id: "Zxxx",
    displayName: "Non escrita"
}, {
    id: "Orya",
    displayName: "Oriya"
}, {
    id: "Cans",
    displayName: "Silabario aborixe canadiano unificado"
}, {
    id: "Hans",
    displayName: "Simplificado"
}, {
    id: "Zsym",
    displayName: "Símbolos"
}, {
    id: "Thai",
    displayName: "Tailandés"
}, {
    id: "Telu",
    displayName: "Telugú"
}, {
    id: "Thaa",
    displayName: "Thaana"
}, {
    id: "Tibt",
    displayName: "Tibetano"
}, {
    id: "Hant",
    displayName: "Tradicional"
}, {
    id: "Taml",
    displayName: "Támil"
}, {
    id: "Jpan",
    displayName: "Xaponés"
}, {
    id: "Geor",
    displayName: "Xeorxiano"
}, {
    id: "Knda",
    displayName: "canarés"
}, {
    id: "Gujr",
    displayName: "guxaratí"
}, {
    id: "Arab",
    displayName: "Árabe"
} ];

inter.currencies = [ {
    id: "AFN",
    displayName: "Afgani afgano",
    symbol: "AFN",
    one: "afgani afgano",
    other: "afganis afganos"
}, {
    id: "MGA",
    displayName: "Ariary malgaxe",
    symbol: "MGA",
    one: "ariary malgaxe",
    other: "ariarys malgaxes"
}, {
    id: "THB",
    displayName: "Baht tailandés",
    symbol: "฿",
    one: "baht tailandés",
    other: "bahts tailandeses"
}, {
    id: "PAB",
    displayName: "Balboa panameño",
    symbol: "PAB",
    one: "balboa panameño",
    other: "balboas panameños"
}, {
    id: "ETB",
    displayName: "Birr etíope",
    symbol: "ETB",
    one: "birr etíope",
    other: "birres etíopes"
}, {
    id: "BOB",
    displayName: "Boliviano",
    symbol: "BOB",
    one: "boliviano",
    other: "bolivianos"
}, {
    id: "VEF",
    displayName: "Bolívar venezolano",
    symbol: "VEF",
    one: "bolívar venezolano",
    other: "bolívares venezolanos"
}, {
    id: "VEB",
    displayName: "Bolívar venezolano (1871–2008)",
    one: "bolívar venezolano (1871–2008)",
    other: "bolívares venezolanos (1871–2008)"
}, {
    id: "GHS",
    displayName: "Cedi de Gana",
    symbol: "GHS",
    one: "cedi de Gana",
    other: "cedis de Gana"
}, {
    id: "KES",
    displayName: "Chelín kenyano",
    symbol: "KES",
    one: "chelín kenyano",
    other: "chelíns kenyanos"
}, {
    id: "SOS",
    displayName: "Chelín somalí",
    symbol: "SOS",
    one: "chelín somalí",
    other: "chelíns somalíes"
}, {
    id: "TZS",
    displayName: "Chelín tanzano",
    symbol: "TZS",
    one: "chelín tanzano",
    other: "chelíns tanzanos"
}, {
    id: "UGX",
    displayName: "Chelín ugandés",
    symbol: "UGX",
    one: "chelín ugandés",
    other: "chelíns ugandeses"
}, {
    id: "CRC",
    displayName: "Colón costarricense",
    symbol: "CRC",
    one: "colón costarricense",
    other: "colóns costarricenses"
}, {
    id: "SVC",
    displayName: "Colón salvadoreño",
    one: "colón salvadoreño",
    other: "colóns salvadoreños"
}, {
    id: "CZK",
    displayName: "Coroa checa",
    symbol: "CZK",
    one: "coroa checa",
    other: "coroas checas"
}, {
    id: "DKK",
    displayName: "Coroa dinamarquesa",
    symbol: "DKK",
    one: "coroa dinamarquesa",
    other: "coroas dinamarquesas"
}, {
    id: "ISK",
    displayName: "Coroa islandesa",
    symbol: "ISK",
    one: "coroa islandesa",
    other: "coroas islandesas"
}, {
    id: "NOK",
    displayName: "Coroa norueguesa",
    symbol: "NOK",
    one: "coroa norueguesa",
    other: "coroas norueguesas"
}, {
    id: "SEK",
    displayName: "Coroa sueca",
    symbol: "SEK",
    one: "coroa sueca",
    other: "coroas suecas"
}, {
    id: "BRC",
    displayName: "Cruzado brasileiro",
    one: "cruzado brasileiro",
    other: "cruzados brasileiros"
}, {
    id: "BRN",
    displayName: "Cruzado novo brasileiro",
    one: "cruzado novo brasileiro",
    other: "cruzados novos brasileiros"
}, {
    id: "BRR",
    displayName: "Cruzeiro brasileiro",
    one: "cruzeiro brasileiro",
    other: "cruzeiros brasileiros"
}, {
    id: "BRE",
    displayName: "Cruzeiro brasileiro (1990–1993)",
    one: "cruzeiro brasileiro (BRE)",
    other: "cruzeiros brasileiros (BRE)"
}, {
    id: "BRB",
    displayName: "Cruzeiro novo brasileiro (1967–1986)",
    one: "cruzeiro novo brasileiro",
    other: "cruzeiros novos brasileiros"
}, {
    id: "NIO",
    displayName: "Córdoba de ouro nicaragüense",
    symbol: "NIO",
    one: "córdoba de ouro nicaragüense",
    other: "córdobas de ouro nicaragüense"
}, {
    id: "NIC",
    displayName: "Córdoba nicaragüense"
}, {
    id: "GMD",
    displayName: "Dalasi gambiano",
    symbol: "GMD",
    one: "dalasi gambiano",
    other: "dalasis gambianos"
}, {
    id: "DZD",
    displayName: "Dinar alxeriano",
    symbol: "DZD",
    one: "dinar alxeriano",
    other: "dinares alxerianos"
}, {
    id: "BHD",
    displayName: "Dinar de Baréin",
    symbol: "BHD",
    one: "dinar de Baréin",
    other: "dinares de Baréin"
}, {
    id: "IQD",
    displayName: "Dinar iraquí",
    symbol: "IQD",
    one: "dinar iraquí",
    other: "dinares iraquíes"
}, {
    id: "KWD",
    displayName: "Dinar kuwaití",
    symbol: "KWD",
    one: "dinar kuwaití",
    other: "dinares kuwaitíes"
}, {
    id: "LYD",
    displayName: "Dinar libio",
    symbol: "LYD",
    one: "dinar libio",
    other: "dinares libios"
}, {
    id: "MKD",
    displayName: "Dinar macedonio",
    symbol: "MKD",
    one: "dinar macedonio",
    other: "dinares macedonios"
}, {
    id: "RSD",
    displayName: "Dinar serbio",
    symbol: "RSD",
    one: "dinar serbio",
    other: "dinares serbios"
}, {
    id: "TND",
    displayName: "Dinar tunesino",
    symbol: "TND",
    one: "dinar tunesino",
    other: "dinares tunesinos"
}, {
    id: "JOD",
    displayName: "Dinar xordano",
    symbol: "JOD",
    one: "dinar xordano",
    other: "dinares xordanos"
}, {
    id: "AED",
    displayName: "Dirham dos Emiratos Árabes Unidos",
    symbol: "AED",
    one: "dirham dos Emiratos Árabes Unidos",
    other: "dirhams dos Emiratos Árabes Unidos"
}, {
    id: "MAD",
    displayName: "Dirham marroquí",
    symbol: "MAD",
    one: "dirham marroquí",
    other: "dirhams marroquís"
}, {
    id: "STD",
    displayName: "Dobra de San Tomé e Príncipe",
    symbol: "STD",
    one: "dobra de San Tomé e Príncipe",
    other: "dobras de San Tomé e Príncipe"
}, {
    id: "VND",
    displayName: "Dong vietnamita",
    symbol: "₫",
    one: "dong vietnamita",
    other: "dongs vietnamitas"
}, {
    id: "GRD",
    displayName: "Dracma grego"
}, {
    id: "AMD",
    displayName: "Dram armenio",
    symbol: "AMD",
    one: "dram armenio",
    other: "drams armenios"
}, {
    id: "XCD",
    displayName: "Dólar Caribe-Leste",
    symbol: "EC$",
    one: "dólar Caribe-Leste",
    other: "dólares Caribe-Leste"
}, {
    id: "AUD",
    displayName: "Dólar australiano",
    symbol: "$A",
    one: "dólar australiano",
    other: "dólares australianos"
}, {
    id: "BZD",
    displayName: "Dólar beliceño",
    symbol: "BZD",
    one: "dólar beliceño",
    other: "dólares beliceños"
}, {
    id: "CAD",
    displayName: "Dólar canadiano",
    symbol: "$CA",
    one: "dólar canadiano",
    other: "dólares canadianos"
}, {
    id: "BSD",
    displayName: "Dólar das Bahamas",
    symbol: "BSD",
    one: "dólar das Bahamas",
    other: "dólares das Bahamas"
}, {
    id: "BMD",
    displayName: "Dólar das Bemudas",
    symbol: "BMD",
    one: "dólar das Bermudas",
    other: "dólares das Bermudas"
}, {
    id: "KYD",
    displayName: "Dólar das Illas Caimán",
    symbol: "KYD",
    one: "dólar das Illas Caimán",
    other: "dólares das Illas Caimán"
}, {
    id: "SBD",
    displayName: "Dólar das Illas Salomón",
    symbol: "SBD",
    one: "dólar das Illas Salomón",
    other: "dólares das Illas Salomón"
}, {
    id: "BBD",
    displayName: "Dólar de Barbados",
    symbol: "BBD",
    one: "dólar de Barbados",
    other: "dólares de Barbados"
}, {
    id: "BND",
    displayName: "Dólar de Brunei",
    symbol: "BND",
    one: "dólar de Brunei",
    other: "dólares de Brunei"
}, {
    id: "HKD",
    displayName: "Dólar de Hong Kong",
    symbol: "$HK",
    one: "dólar de Hong Kong",
    other: "dólares de Hong Kong"
}, {
    id: "SGD",
    displayName: "Dólar de Singapur",
    symbol: "SGD",
    one: "dólar de Singapur",
    other: "dólares de Singapur"
}, {
    id: "TTD",
    displayName: "Dólar de Trinidade e Tobago",
    symbol: "TTD",
    one: "dólar de Trinidade e Tobago",
    other: "dólares de Trinidade e Tobago"
}, {
    id: "USD",
    displayName: "Dólar estadounidense",
    symbol: "$",
    one: "dólar estadounidense",
    other: "dólares estadounidenses"
}, {
    id: "FJD",
    displayName: "Dólar fixiano",
    symbol: "FJD",
    one: "dólar fixiano",
    other: "dólares fixianos"
}, {
    id: "GYD",
    displayName: "Dólar güianés",
    symbol: "GYD",
    one: "dólar güianés",
    other: "dólares güianeses"
}, {
    id: "LRD",
    displayName: "Dólar liberiano",
    symbol: "LRD",
    one: "dólar liberiano",
    other: "dólares liberianos"
}, {
    id: "NAD",
    displayName: "Dólar namibio",
    symbol: "NAD",
    one: "dólar namibio",
    other: "dólares namibios"
}, {
    id: "NZD",
    displayName: "Dólar neozelandés",
    symbol: "NZ$",
    one: "dólar neozelandés",
    other: "dólares neozelandés"
}, {
    id: "SRD",
    displayName: "Dólar surinamés",
    symbol: "SRD",
    one: "dólar surinamés",
    other: "dólares surinamés"
}, {
    id: "JMD",
    displayName: "Dólar xamaicano",
    symbol: "JMD",
    one: "dólar xamaicano",
    other: "dólares xamaicanos"
}, {
    id: "GQE",
    displayName: "Ekwele guineana"
}, {
    id: "CVE",
    displayName: "Escudo caboverdiano",
    symbol: "CVE",
    one: "escudo caboverdiano",
    other: "escudos caboverdianos"
}, {
    id: "PTE",
    displayName: "Escudo portugués",
    one: "escudo portugués",
    other: "escudos portugueses"
}, {
    id: "EUR",
    displayName: "Euro",
    symbol: "€",
    one: "euro",
    other: "euros"
}, {
    id: "AWG",
    displayName: "Florín arubeño",
    symbol: "AWG",
    one: "florín arubeño",
    other: "floríns arubeños"
}, {
    id: "ANG",
    displayName: "Florín das Antillas Neerlandesas",
    symbol: "ANG",
    one: "florín das Antillas Neerlandesas",
    other: "floríns das Antillas Neerlandesas"
}, {
    id: "NLG",
    displayName: "Florín holandés"
}, {
    id: "HUF",
    displayName: "Florín húngaro",
    symbol: "HUF",
    one: "florín húngaro",
    other: "floríns húngaros"
}, {
    id: "XOF",
    displayName: "Franco CFA BCEAO",
    symbol: "CFA",
    one: "franco CFA BCEAO",
    other: "francos CFA BCEAO"
}, {
    id: "XAF",
    displayName: "Franco CFA BEAC",
    symbol: "FCFA",
    one: "franco CFA BEAC",
    other: "francos CFA BEAC"
}, {
    id: "XPF",
    displayName: "Franco CFP",
    symbol: "CFPF",
    one: "franco CFP",
    other: "francos CFP"
}, {
    id: "BEF",
    displayName: "Franco belga",
    one: "franco belga",
    other: "francos belgas"
}, {
    id: "BEC",
    displayName: "Franco belga (convertible)",
    one: "franco belga (convertible)",
    other: "francos belgas (convertibles)"
}, {
    id: "BEL",
    displayName: "Franco belga (financeiro)",
    one: "franco belga (financeiro)",
    other: "francos belgas (financeiros)"
}, {
    id: "BIF",
    displayName: "Franco burundés",
    symbol: "BIF",
    one: "franco burundés",
    other: "francos burundeses"
}, {
    id: "KMF",
    displayName: "Franco comoriano",
    symbol: "KMF",
    one: "franco comoriano",
    other: "francos comorianos"
}, {
    id: "CDF",
    displayName: "Franco congolés",
    symbol: "CDF",
    one: "franco congolés",
    other: "francos congoleses"
}, {
    id: "LUC",
    displayName: "Franco convertible luxemburgués"
}, {
    id: "LUL",
    displayName: "Franco financeiro luxemburgués"
}, {
    id: "FRF",
    displayName: "Franco francés",
    one: "franco francés",
    other: "francos franceses"
}, {
    id: "GNF",
    displayName: "Franco guineano",
    symbol: "GNF",
    one: "franco guineano",
    other: "francos guineanos"
}, {
    id: "LUF",
    displayName: "Franco luxemburgués"
}, {
    id: "MAF",
    displayName: "Franco marroquí"
}, {
    id: "RWF",
    displayName: "Franco ruandés",
    symbol: "RWF",
    one: "franco ruandés",
    other: "francos ruandeses"
}, {
    id: "CHF",
    displayName: "Franco suízo",
    symbol: "CHF",
    one: "franco suízo",
    other: "francos suizos"
}, {
    id: "DJF",
    displayName: "Franco xibutiano",
    symbol: "DJF",
    one: "franco xibutiano",
    other: "francos xibutianos"
}, {
    id: "HTG",
    displayName: "Gourde haitiano",
    symbol: "HTG",
    one: "gourde haitiano",
    other: "gourdes haitianos"
}, {
    id: "UAH",
    displayName: "Grivna ucraína",
    symbol: "UAH",
    one: "grivna ucraína",
    other: "grivnas ucraínas"
}, {
    id: "PYG",
    displayName: "Guaraní paraguaio",
    symbol: "PYG",
    one: "guaraní paraguaio",
    other: "guaranís paraguaios"
}, {
    id: "JPY",
    displayName: "Ien xaponés",
    symbol: "¥JP",
    one: "ien xaponés",
    other: "iens xaponeses"
}, {
    id: "PEI",
    displayName: "Inti peruano"
}, {
    id: "CNY",
    displayName: "Iuán chinés",
    symbol: "CN¥",
    one: "iuán chinés",
    other: "iuáns chineses"
}, {
    id: "MMK",
    displayName: "Kiat birmano",
    symbol: "MMK",
    one: "kiat birmano",
    other: "kiats birmanos"
}, {
    id: "PGK",
    displayName: "Kina de Papúa Nova Guinea",
    symbol: "PGK",
    one: "kina de Papúa Nova Guinea",
    other: "kinas de Papúa Nova Guinea"
}, {
    id: "LAK",
    displayName: "Kip laosiano",
    symbol: "LAK",
    one: "kip laosiano",
    other: "kips laosianos"
}, {
    id: "HRK",
    displayName: "Kuna croata",
    symbol: "HRK",
    one: "kuna croata",
    other: "kunas croatas"
}, {
    id: "MWK",
    displayName: "Kwacha de Malaui",
    symbol: "MWK",
    one: "kwacha de Malaui",
    other: "kwachas de Malaui"
}, {
    id: "ZMW",
    displayName: "Kwacha zambiano",
    symbol: "ZMW",
    one: "kwacha zambiano",
    other: "kwachas zambianos"
}, {
    id: "ZMK",
    displayName: "Kwacha zambiano (1968–2012)"
}, {
    id: "AOA",
    displayName: "Kwanza angoleño",
    symbol: "AOA",
    one: "kwanza ngoleño",
    other: "kwanzas angoleños"
}, {
    id: "GEL",
    displayName: "Lari xeorxiano",
    symbol: "GEL",
    one: "lari xeorxiano",
    other: "laris xeorxianos"
}, {
    id: "LVL",
    displayName: "Lats letón",
    symbol: "LVL",
    one: "lats letón",
    other: "lats letóns"
}, {
    id: "ALL",
    displayName: "Lek albanés",
    symbol: "ALL",
    one: "lek albanés",
    other: "leks albaneses"
}, {
    id: "HNL",
    displayName: "Lempira hondureño",
    symbol: "HNL",
    one: "lempira hondureño",
    other: "lempiras hondureños"
}, {
    id: "SLL",
    displayName: "Leone de Serra Leoa",
    symbol: "SLL",
    one: "leones de Serra Leoa",
    other: "leones de Serra Leoa"
}, {
    id: "MDL",
    displayName: "Leu moldavo",
    symbol: "MDL",
    one: "leu moldavo",
    other: "leus moldavos"
}, {
    id: "RON",
    displayName: "Leu romanés",
    symbol: "RON",
    one: "leu romanés",
    other: "leus romaneses"
}, {
    id: "BGN",
    displayName: "Lev búlgaro",
    symbol: "BGN",
    one: "lev búlgaro",
    other: "levs búlgaros"
}, {
    id: "FKP",
    displayName: "Libra das Malvinas",
    symbol: "FKP",
    one: "libra de Malvinas",
    other: "libras de Malvinas"
}, {
    id: "SHP",
    displayName: "Libra de Santa Helena",
    symbol: "SHP",
    one: "libra de Santa Helena",
    other: "libras de Santa Helena"
}, {
    id: "GIP",
    displayName: "Libra de Xibraltar",
    symbol: "GIP",
    one: "libra xibraltareña",
    other: "libras xibraltareñas"
}, {
    id: "GBP",
    displayName: "Libra esterlina",
    symbol: "£",
    one: "libra esterlina",
    other: "libras esterlinas"
}, {
    id: "EGP",
    displayName: "Libra exipcia",
    symbol: "EGP",
    one: "libra exipcia",
    other: "libras exipcias"
}, {
    id: "IEP",
    displayName: "Libra irlandesa",
    one: "libra irlandesa",
    other: "libras irlandesas"
}, {
    id: "LBP",
    displayName: "Libra libanesa",
    symbol: "LBP",
    one: "libra libanesa",
    other: "libras libanesas"
}, {
    id: "SYP",
    displayName: "Libra siria",
    symbol: "SYP",
    one: "libra siria",
    other: "libras sirias"
}, {
    id: "SDG",
    displayName: "Libra sudanesa",
    symbol: "SDG",
    one: "libra sudanesa",
    other: "libras sudanesas"
}, {
    id: "SSP",
    displayName: "Libra sursudanesa",
    symbol: "SSP",
    one: "libra sursudanesa",
    other: "libras sursudanesa"
}, {
    id: "SZL",
    displayName: "Lilanxeni de Suacilandia",
    symbol: "SZL",
    one: "lilanxeni de Suacilandia",
    other: "lilanxeni de Suacilandia"
}, {
    id: "ITL",
    displayName: "Lira italiana"
}, {
    id: "TRY",
    displayName: "Lira turca",
    symbol: "TRY",
    one: "lira turca",
    other: "liras turcas"
}, {
    id: "LTL",
    displayName: "Litas lituana",
    symbol: "LTL",
    one: "litas lituana",
    other: "litas lituanas"
}, {
    id: "LSL",
    displayName: "Loti de Lesoto"
}, {
    id: "BOV",
    displayName: "MVDOL boliviano"
}, {
    id: "AZN",
    displayName: "Manat acerbaixano",
    symbol: "AZN",
    one: "manat acerbaixano",
    other: "manats acerbaixanos"
}, {
    id: "TMT",
    displayName: "Manat turcomano",
    symbol: "TMT",
    one: "manat turcomano",
    other: "manats turcomanos"
}, {
    id: "DEM",
    displayName: "Marco alemán",
    one: "marco alemán",
    other: "marcos alemáns"
}, {
    id: "BAM",
    displayName: "Marco convertible de Bosnia e Hercegovina",
    symbol: "BAM",
    one: "marco convertible de Bosnia e Hercegovina",
    other: "marcos convertibles de Bosnia e Hercegovina"
}, {
    id: "MZN",
    displayName: "Metical de Mozambique",
    symbol: "MZN",
    one: "metical de Mozambique",
    other: "meticais de Mozambique"
}, {
    id: "NGN",
    displayName: "Naira nixeriano",
    symbol: "NGN",
    one: "naira nixeriano",
    other: "nairas nixerianos"
}, {
    id: "ERN",
    displayName: "Nakfa eritreo",
    symbol: "ERN",
    one: "nakfa eritreo",
    other: "nakfas eritreos"
}, {
    id: "BTN",
    displayName: "Ngultrum butanés",
    symbol: "BTN",
    one: "ngultrum butanés",
    other: "ngultrums butaneses"
}, {
    id: "TWD",
    displayName: "Novo dólar taiwanés",
    symbol: "$NT",
    one: "novo dólar taiwanés",
    other: "novos dólares taiwaneses"
}, {
    id: "ILS",
    displayName: "Novo shequel israelí",
    symbol: "₪",
    one: "novo shequel israelí",
    other: "novos shequeis israelíes"
}, {
    id: "MRO",
    displayName: "Ouguiya mauritano",
    symbol: "MRO",
    one: "ouguiya mauritano",
    other: "ouguiyasmauritanos"
}, {
    id: "XAU",
    displayName: "Ouro"
}, {
    id: "XPD",
    displayName: "Paladio"
}, {
    id: "MOP",
    displayName: "Pataca de Macau",
    symbol: "MOP",
    one: "pataca de Macau",
    other: "patacas de Macau"
}, {
    id: "TOP",
    displayName: "Paʻanga de Tonga",
    symbol: "TOP",
    one: "paʻanga de Tonga",
    other: "pa’anga de Tonga"
}, {
    id: "ESP",
    displayName: "Peseta española",
    symbol: "₧",
    one: "peseta",
    other: "pesetas"
}, {
    id: "ESA",
    displayName: "Peseta española (conta A)"
}, {
    id: "ESB",
    displayName: "Peseta española (conta convertible)"
}, {
    id: "ARS",
    displayName: "Peso arxentino",
    symbol: "ARS",
    one: "peso arxentino",
    other: "pesos arxentinos"
}, {
    id: "ARP",
    displayName: "Peso arxentino (1983–1985)",
    one: "peso arxentino (ARP)",
    other: "pesos arxentinos (ARP)"
}, {
    id: "BOP",
    displayName: "Peso boliviano",
    one: "peso boliviano",
    other: "pesos bolivianos"
}, {
    id: "CLP",
    displayName: "Peso chileno",
    symbol: "CLP",
    one: "peso chileno",
    other: "pesos chilenos"
}, {
    id: "COP",
    displayName: "Peso colombiano",
    symbol: "COP",
    one: "peso colombiano",
    other: "pesos colombianos"
}, {
    id: "CUP",
    displayName: "Peso cubano",
    symbol: "CUP",
    one: "peso cubano",
    other: "pesos cubanos"
}, {
    id: "CUC",
    displayName: "Peso cubano convertible",
    symbol: "CUC",
    one: "peso cubano convertible",
    other: "pesos cubanos convertibles"
}, {
    id: "MXP",
    displayName: "Peso de prata mexicano (1861–1992)"
}, {
    id: "DOP",
    displayName: "Peso dominicano",
    symbol: "DOP",
    one: "peso dominicano",
    other: "pesos dominicanos"
}, {
    id: "UYI",
    displayName: "Peso en unidades indexadas uruguaio"
}, {
    id: "PHP",
    displayName: "Peso filipino",
    symbol: "PHP",
    one: "peso filipino",
    other: "pesos filipinos"
}, {
    id: "MXN",
    displayName: "Peso mexicano",
    symbol: "$MX",
    one: "peso mexicano",
    other: "pesos mexicanos"
}, {
    id: "UYU",
    displayName: "Peso uruguaio",
    symbol: "UYU",
    one: "peso uruguaio",
    other: "pesos uruguaios"
}, {
    id: "UYP",
    displayName: "Peso uruguaio (1975–1993)"
}, {
    id: "XPT",
    displayName: "Platino"
}, {
    id: "XAG",
    displayName: "Prata"
}, {
    id: "BWP",
    displayName: "Pula botsuano",
    symbol: "BWP",
    one: "pula botsuano",
    other: "pulas botsuanos"
}, {
    id: "GTQ",
    displayName: "Quetzal guatemalteco",
    symbol: "GTQ",
    one: "quetzal guatemalteco",
    other: "quetzal guatemaltecos"
}, {
    id: "ZAR",
    displayName: "Rand sudafricano",
    symbol: "ZAR",
    one: "rand sudafricano",
    other: "rands sudafricanos"
}, {
    id: "BRL",
    displayName: "Real brasileiro",
    symbol: "$R",
    one: "real brasileiro",
    other: "reais brasileiros"
}, {
    id: "YER",
    displayName: "Rial iemení",
    symbol: "YER",
    one: "rial iemení",
    other: "riais iemeníes"
}, {
    id: "IRR",
    displayName: "Rial iraniano",
    symbol: "IRR",
    one: "rial iraniano",
    other: "riais iranianos"
}, {
    id: "OMR",
    displayName: "Rial omaní",
    symbol: "OMR",
    one: "rial omaní",
    other: "riais omaníes"
}, {
    id: "QAR",
    displayName: "Rial qatarí",
    symbol: "QAR",
    one: "rial qatarí",
    other: "riais qataríes"
}, {
    id: "SAR",
    displayName: "Rial saudita",
    symbol: "SAR",
    one: "rial saudita",
    other: "riais sauditas"
}, {
    id: "KHR",
    displayName: "Riel camboxano",
    symbol: "KHR",
    one: "riel camboxano",
    other: "rieis camboxanos"
}, {
    id: "MYR",
    displayName: "Ringgit malaio",
    symbol: "MYR",
    one: "ringgit malaio",
    other: "ringgits malaios"
}, {
    id: "BYR",
    displayName: "Rublo bielorruso",
    symbol: "BYR",
    one: "rublo bielorruso",
    other: "rublos bielorrusos"
}, {
    id: "RUB",
    displayName: "Rublo ruso",
    symbol: "RUB",
    one: "rublo ruso",
    other: "rublos rusos"
}, {
    id: "RUR",
    displayName: "Rublo ruso (1991–1998)",
    symbol: "р."
}, {
    id: "SUR",
    displayName: "Rublo soviético",
    one: "rublo soviético",
    other: "rublos soviéticos"
}, {
    id: "MUR",
    displayName: "Rupia de Mauricio",
    symbol: "MUR",
    one: "rupia de Mauricio",
    other: "rupias de Mauricio"
}, {
    id: "SCR",
    displayName: "Rupia de Seixeles",
    symbol: "SCR",
    one: "rupia de Seixeles",
    other: "rupias de Seixeles"
}, {
    id: "LKR",
    displayName: "Rupia de Sri Lanka",
    symbol: "LKR",
    one: "rupia de Sri Lanka",
    other: "rupias de Sri Lanka"
}, {
    id: "INR",
    displayName: "Rupia india",
    symbol: "₹",
    one: "rupia india",
    other: "rupias indias"
}, {
    id: "IDR",
    displayName: "Rupia indonesia",
    symbol: "IDR",
    one: "rupia indonesia",
    other: "rupias indonesias"
}, {
    id: "MVR",
    displayName: "Rupia maldiva",
    symbol: "MVR",
    one: "rupia maldiva",
    other: "rupias maldivas"
}, {
    id: "NPR",
    displayName: "Rupia nepalesa",
    symbol: "NPR",
    one: "rupia nepalesa",
    other: "rupias nepalesas"
}, {
    id: "PKR",
    displayName: "Rupia paquistaní",
    symbol: "PKR",
    one: "rupia paquistaní",
    other: "rupias paquistaníes"
}, {
    id: "PEN",
    displayName: "Sol novo peruano",
    symbol: "PEN",
    one: "sol novo peruano",
    other: "soles novos peruanos"
}, {
    id: "PES",
    displayName: "Sol peruano"
}, {
    id: "KGS",
    displayName: "Som quirguizo",
    symbol: "KGS",
    one: "som quirguizo",
    other: "soms quirguizos"
}, {
    id: "UZS",
    displayName: "Som usbeco",
    symbol: "UZS",
    one: "som usbeco",
    other: "soms usbecos"
}, {
    id: "TJS",
    displayName: "Somoni taxico",
    symbol: "TJS",
    one: "somoni taxico",
    other: "somonis taxicos"
}, {
    id: "ECS",
    displayName: "Sucre ecuatoriano",
    one: "sucre ecuatoriano",
    other: "sucres ecuatorianos"
}, {
    id: "GNS",
    displayName: "Syli guineano"
}, {
    id: "BDT",
    displayName: "Taka de Bangladesh",
    symbol: "BDT",
    one: "taka de Bangladesh",
    other: "takas de Bangladesh"
}, {
    id: "WST",
    displayName: "Tala samoano",
    symbol: "WST",
    one: "tala samoano",
    other: "talas samoanos"
}, {
    id: "KZT",
    displayName: "Tenge casaco",
    symbol: "KZT",
    one: "tenge casaco",
    other: "tenges casacos"
}, {
    id: "MNT",
    displayName: "Tugrik mongol",
    symbol: "MNT",
    one: "tugrik mongol",
    other: "tugriks mongoles"
}, {
    id: "MXV",
    displayName: "Unidade de inversión mexicana"
}, {
    id: "ECV",
    displayName: "Unidade de valor constante ecuatoriana"
}, {
    id: "XXX",
    displayName: "Unidade monetaria descoñecida",
    one: "(unidade monetaria descoñecida)",
    other: "(unidades monetarias descoñecidas)"
}, {
    id: "CLF",
    displayName: "Unidades de fomento chilenas",
    one: "unidade de fomento chilena",
    other: "unidades de fomento chilenas"
}, {
    id: "VUV",
    displayName: "Vatu vanuatense",
    symbol: "VUV",
    one: "vatu vanuatense",
    other: "vatus vanuatenses"
}, {
    id: "KPW",
    displayName: "Won norcoreano",
    symbol: "KPW",
    one: "won norcoreano",
    other: "wons norcoreanos"
}, {
    id: "KRW",
    displayName: "Won surcoreano",
    symbol: "₩",
    one: "won surcoreano",
    other: "wons surcoreanos"
}, {
    id: "PLN",
    displayName: "Zloty polaco",
    symbol: "PLN",
    one: "zloty polaco",
    other: "zlotys polacos"
}, {
    id: "ADP",
    displayName: "peseta andorrana",
    one: "peseta andorrana",
    other: "pesetas andorranas"
} ];

module.exports = inter;