function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _4cs61 = [ "T1", "T2", "T3", "T4" ], _4cs62 = {
    displayName: "AM/PM"
}, _4cs63 = {
    all: {
        leap: "{0}bis"
    }
}, _4cs64 = {
    one: "¤0K",
    other: "¤0K"
}, _4cs65 = {
    one: "¤0M",
    other: "¤0M"
}, _4cs66 = {
    one: "¤0G",
    other: "¤0G"
}, _4cs67 = {
    one: "¤0T",
    other: "¤0T"
}, _4cs68 = {
    one: "¤00K",
    other: "¤00K"
}, _4cs69 = {
    one: "¤00M",
    other: "¤00M"
}, _4cs610 = {
    one: "¤00G",
    other: "¤00G"
}, _4cs611 = {
    one: "¤00T",
    other: "¤00T"
}, _4cs612 = {
    a: "h a – h a",
    h: "h–h a"
}, _4cs613 = [ "Before R.O.C.", "R.O.C." ], _4cs614 = {
    one: "¤000K",
    other: "¤000K"
}, _4cs615 = {
    one: "¤000M",
    other: "¤000M"
}, _4cs616 = {
    one: "¤000G",
    other: "¤000G"
}, _4cs617 = {
    one: "¤000T",
    other: "¤000T"
}, _4cs618 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _4cs619 = [ "A", "A", "T", "A", "A", "Z", "A" ], _4cs620 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _4cs621 = {
    displayName: "Day of the Week"
}, _4cs622 = {
    symbols: P.numbers.ahom.symbols
}, _4cs623 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _4cs624 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _4cs625 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _4cs626 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _4cs627 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _4cs628 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _4cs629 = {
    M: "G y MMM–MMM",
    y: "G y MMM – y MMM"
}, _4cs630 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _4cs631 = {
    "0": "Anio",
    "1": "Rahampitso",
    "-1": "Omaly"
}, _4cs632 = {
    M: "G y MMMM–MMMM",
    y: "G y MMMM – y MMMM"
}, _4cs633 = {
    M: "GGGGG y-MM – y-MM",
    y: "GGGGG y-MM – y-MM"
}, _4cs634 = {
    "0": "this year",
    "1": "next year",
    "-1": "last year"
}, _4cs635 = {
    "0": "this week",
    "1": "next week",
    "-1": "last week"
}, _4cs636 = {
    future: {
        other: "+{0} y"
    },
    past: {
        other: "-{0} y"
    }
}, _4cs637 = {
    future: {
        other: "+{0} m"
    },
    past: {
        other: "-{0} m"
    }
}, _4cs638 = {
    future: {
        other: "+{0} w"
    },
    past: {
        other: "-{0} w"
    }
}, _4cs639 = {
    future: {
        other: "+{0} d"
    },
    past: {
        other: "-{0} d"
    }
}, _4cs640 = {
    future: {
        other: "+{0} h"
    },
    past: {
        other: "-{0} h"
    }
}, _4cs641 = {
    future: {
        other: "+{0} s"
    },
    past: {
        other: "-{0} s"
    }
}, _4cs642 = {
    future: {
        other: "+{0} Q"
    },
    past: {
        other: "-{0} Q"
    }
}, _4cs643 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _4cs644 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _4cs645 = [ "Alah", "Alats", "Tal", "Alar", "Alak", "Zom", "Asab" ], _4cs646 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _4cs647 = {
    "0": "this month",
    "1": "next month",
    "-1": "last month"
}, _4cs648 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _4cs649 = {
    future: {
        other: "+{0} min"
    },
    past: {
        other: "-{0} min"
    }
}, _4cs650 = {
    "0": "this Sunday",
    "1": "next Sunday",
    "-1": "last Sunday"
}, _4cs651 = {
    "0": "this Monday",
    "1": "next Monday",
    "-1": "last Monday"
}, _4cs652 = {
    "0": "this Friday",
    "1": "next Friday",
    "-1": "last Friday"
}, _4cs653 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _4cs654 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _4cs655 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _4cs656 = {
    "0": "this Tuesday",
    "1": "next Tuesday",
    "-1": "last Tuesday"
}, _4cs657 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _4cs658 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _4cs659 = {
    "0": "this Thursday",
    "1": "next Thursday",
    "-1": "last Thursday"
}, _4cs660 = {
    "0": "this Saturday",
    "1": "next Saturday",
    "-1": "last Saturday"
}, _4cs661 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _4cs662 = {
    "0": "this Wednesday",
    "1": "next Wednesday",
    "-1": "last Wednesday"
}, _4cs663 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _4cs664 = {
    id: "IN",
    displayName: "Indy",
    regionId: "034",
    hasTimeZones: true
}, _4cs665 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _4cs666 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _4cs667 = {
    id: "LA",
    displayName: "Laôs",
    regionId: "035",
    hasTimeZones: true
}, _4cs668 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _4cs669 = {
    id: "NU",
    displayName: "Nioé",
    regionId: "061",
    hasTimeZones: true
}, _4cs670 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _4cs671 = {
    id: "CN",
    displayName: "Sina",
    regionId: "030",
    hasTimeZones: true
}, _4cs672 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _4cs673 = {
    id: "AW",
    displayName: "Arobà",
    regionId: "029",
    hasTimeZones: true
}, _4cs674 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _4cs675 = {
    id: "FJ",
    displayName: "Fidji",
    regionId: "054",
    hasTimeZones: true
}, _4cs676 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _4cs677 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _4cs678 = {
    id: "GN",
    displayName: "Ginea",
    regionId: "011",
    hasTimeZones: true
}, _4cs679 = {
    id: "GR",
    displayName: "Gresy",
    regionId: "039",
    hasTimeZones: true
}, _4cs680 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _4cs681 = {
    id: "QA",
    displayName: "Katar",
    regionId: "145",
    hasTimeZones: true
}, _4cs682 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _4cs683 = {
    id: "CU",
    displayName: "Kiobà",
    regionId: "029",
    hasTimeZones: true
}, _4cs684 = {
    id: "CG",
    displayName: "Kôngô",
    regionId: "017",
    hasTimeZones: true
}, _4cs685 = {
    id: "LY",
    displayName: "Libya",
    regionId: "015",
    hasTimeZones: true
}, _4cs686 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _4cs687 = {
    id: "NR",
    displayName: "Naorò",
    regionId: "057",
    hasTimeZones: true
}, _4cs688 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _4cs689 = {
    id: "PW",
    displayName: "Palao",
    regionId: "057",
    hasTimeZones: true
}, _4cs690 = {
    id: "PE",
    displayName: "Peroa",
    regionId: "005",
    hasTimeZones: true
}, _4cs691 = {
    id: "RU",
    displayName: "Rosia",
    regionId: "151",
    hasTimeZones: true
}, _4cs692 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _4cs693 = {
    id: "CL",
    displayName: "Shili",
    regionId: "005",
    hasTimeZones: true
}, _4cs694 = {
    id: "SD",
    displayName: "Sodan",
    regionId: "015",
    hasTimeZones: true
}, _4cs695 = {
    id: "SE",
    displayName: "Soedy",
    regionId: "154",
    hasTimeZones: true
}, _4cs696 = {
    id: "CH",
    displayName: "Soisa",
    regionId: "155",
    hasTimeZones: true
}, _4cs697 = {
    id: "CY",
    displayName: "Sypra",
    regionId: "145",
    hasTimeZones: true
}, _4cs698 = {
    id: "SY",
    displayName: "Syria",
    regionId: "145",
    hasTimeZones: true
}, _4cs699 = {
    id: "TO",
    displayName: "Tongà",
    regionId: "061",
    hasTimeZones: true
}, _4cs6100 = {
    id: "TD",
    displayName: "Tsady",
    regionId: "017",
    hasTimeZones: true
}, _4cs6101 = {
    id: "YE",
    displayName: "Yemen",
    regionId: "145",
    hasTimeZones: true
}, _4cs6102 = {
    d: "G y MMM d–d",
    M: "G y MMM d – MMM d",
    y: "G y MMM d – y MMM d"
}, _4cs6103 = {
    relative: _4cs650
}, _4cs6104 = {
    relative: _4cs651
}, _4cs6105 = {
    relative: _4cs652
}, _4cs6106 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _4cs6107 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _4cs6108 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _4cs6109 = {
    id: "EG",
    displayName: "Ejypta",
    regionId: "015",
    hasTimeZones: true
}, _4cs6110 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _4cs6111 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _4cs6112 = {
    id: "IT",
    displayName: "Italia",
    regionId: "039",
    hasTimeZones: true
}, _4cs6113 = {
    id: "JP",
    displayName: "Japana",
    regionId: "030",
    hasTimeZones: true
}, _4cs6114 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _4cs6115 = {
    id: "KW",
    displayName: "Kôeity",
    regionId: "145",
    hasTimeZones: true
}, _4cs6116 = {
    id: "LB",
    displayName: "Libana",
    regionId: "145",
    hasTimeZones: true
}, _4cs6117 = {
    id: "MW",
    displayName: "Malaoì",
    regionId: "014",
    hasTimeZones: true
}, _4cs6118 = {
    id: "MA",
    displayName: "Marôka",
    regionId: "015",
    hasTimeZones: true
}, _4cs6119 = {
    id: "YT",
    displayName: "Mayôty",
    regionId: "014",
    hasTimeZones: true
}, _4cs6120 = {
    id: "MC",
    displayName: "Mônakô",
    regionId: "155",
    hasTimeZones: true
}, _4cs6121 = {
    id: "NP",
    displayName: "Nepala",
    regionId: "034",
    hasTimeZones: true
}, _4cs6122 = {
    id: "UG",
    displayName: "Oganda",
    regionId: "014",
    hasTimeZones: true
}, _4cs6123 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _4cs6124 = {
    id: "PL",
    displayName: "Pôlôna",
    regionId: "151",
    hasTimeZones: true
}, _4cs6125 = {
    id: "RW",
    displayName: "Roanda",
    regionId: "014",
    hasTimeZones: true
}, _4cs6126 = {
    id: "TR",
    displayName: "Torkia",
    regionId: "145",
    hasTimeZones: true
}, _4cs6127 = {
    id: "TV",
    displayName: "Tovalò",
    regionId: "061",
    hasTimeZones: true
}, _4cs6128 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _4cs6129 = {
    symbols: P.numbers.ahom.symbols,
    digits: "renderSpelloutCardinal"
}, _4cs6130 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _4cs6131 = {
    id: "DZ",
    displayName: "Alzeria",
    regionId: "015",
    hasTimeZones: true
}, _4cs6132 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _4cs6133 = {
    id: "AT",
    displayName: "Aotrisy",
    regionId: "155",
    hasTimeZones: true
}, _4cs6134 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _4cs6135 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _4cs6136 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _4cs6137 = {
    id: "BB",
    displayName: "Barbady",
    regionId: "029",
    hasTimeZones: true
}, _4cs6138 = {
    id: "BE",
    displayName: "Belzika",
    regionId: "155",
    hasTimeZones: true
}, _4cs6139 = {
    id: "BT",
    displayName: "Bhotana",
    regionId: "034",
    hasTimeZones: true
}, _4cs6140 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _4cs6141 = {
    id: "BI",
    displayName: "Borondi",
    regionId: "014",
    hasTimeZones: true
}, _4cs6142 = {
    id: "BR",
    displayName: "Brezila",
    regionId: "005",
    hasTimeZones: true
}, _4cs6143 = {
    id: "DJ",
    displayName: "Djiboti",
    regionId: "014",
    hasTimeZones: true
}, _4cs6144 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _4cs6145 = {
    id: "ES",
    displayName: "Espaina",
    regionId: "039",
    hasTimeZones: true
}, _4cs6146 = {
    id: "EE",
    displayName: "Estonia",
    regionId: "154",
    hasTimeZones: true
}, _4cs6147 = {
    id: "FR",
    displayName: "Frantsa",
    regionId: "155",
    hasTimeZones: true
}, _4cs6148 = {
    id: "GD",
    displayName: "Grenady",
    regionId: "029",
    hasTimeZones: true
}, _4cs6149 = {
    id: "NL",
    displayName: "Holanda",
    regionId: "155",
    hasTimeZones: true
}, _4cs6150 = {
    id: "HU",
    displayName: "Hongria",
    regionId: "151",
    hasTimeZones: true
}, _4cs6151 = {
    id: "IE",
    displayName: "Irlandy",
    regionId: "154",
    hasTimeZones: true
}, _4cs6152 = {
    id: "IS",
    displayName: "Islandy",
    regionId: "154",
    hasTimeZones: true
}, _4cs6153 = {
    id: "IL",
    displayName: "Israely",
    regionId: "145",
    hasTimeZones: true
}, _4cs6154 = {
    id: "JM",
    displayName: "Jamaïka",
    regionId: "029",
    hasTimeZones: true
}, _4cs6155 = {
    id: "HR",
    displayName: "Kroasia",
    regionId: "039",
    hasTimeZones: true
}, _4cs6156 = {
    id: "KM",
    displayName: "Kômaoro",
    regionId: "014",
    hasTimeZones: true
}, _4cs6157 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _4cs6158 = {
    id: "LV",
    displayName: "Letonia",
    regionId: "154",
    hasTimeZones: true
}, _4cs6159 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _4cs6160 = {
    id: "MV",
    displayName: "Maldiva",
    regionId: "034",
    hasTimeZones: true
}, _4cs6161 = {
    id: "MU",
    displayName: "Maorisy",
    regionId: "014",
    hasTimeZones: true
}, _4cs6162 = {
    id: "MX",
    displayName: "Meksika",
    regionId: "013",
    hasTimeZones: true
}, _4cs6163 = {
    id: "MM",
    displayName: "Myanmar",
    regionId: "035",
    hasTimeZones: true
}, _4cs6164 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _4cs6165 = {
    id: "NG",
    displayName: "Nizeria",
    regionId: "011",
    hasTimeZones: true
}, _4cs6166 = {
    id: "NO",
    displayName: "Nôrvezy",
    regionId: "154",
    hasTimeZones: true
}, _4cs6167 = {
    id: "UA",
    displayName: "Okraina",
    regionId: "151",
    hasTimeZones: true
}, _4cs6168 = {
    id: "UY",
    displayName: "Orogoay",
    regionId: "005",
    hasTimeZones: true
}, _4cs6169 = {
    id: "RO",
    displayName: "Romania",
    regionId: "151",
    hasTimeZones: true
}, _4cs6170 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _4cs6171 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _4cs6172 = {
    id: "SR",
    displayName: "Sorinam",
    regionId: "005",
    hasTimeZones: true
}, _4cs6173 = {
    id: "TW",
    displayName: "Taioana",
    regionId: "030",
    hasTimeZones: true
}, _4cs6174 = {
    id: "TK",
    displayName: "Tokelao",
    regionId: "061",
    hasTimeZones: true
}, _4cs6175 = {
    id: "TN",
    displayName: "Tonizia",
    regionId: "015",
    hasTimeZones: true
}, _4cs6176 = {
    id: "VU",
    displayName: "Vanoatò",
    regionId: "054",
    hasTimeZones: true
}, _4cs6177 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _4cs6178 = {
    id: "GE",
    displayName: "Zeorzia",
    regionId: "145",
    hasTimeZones: true
}, _4cs6179 = {
    id: "DE",
    displayName: "Alemaina",
    regionId: "155",
    hasTimeZones: true
}, _4cs6180 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _4cs6181 = {
    id: "BY",
    displayName: "Belarosy",
    regionId: "151",
    hasTimeZones: true
}, _4cs6182 = {
    id: "BM",
    displayName: "Bermioda",
    regionId: "021",
    hasTimeZones: true
}, _4cs6183 = {
    id: "BW",
    displayName: "Botsoana",
    regionId: "018",
    hasTimeZones: true
}, _4cs6184 = {
    id: "DK",
    displayName: "Danmarka",
    regionId: "154",
    hasTimeZones: true
}, _4cs6185 = {
    id: "DM",
    displayName: "Dominika",
    regionId: "029",
    hasTimeZones: true
}, _4cs6186 = {
    id: "EC",
    displayName: "Ekoatera",
    regionId: "005",
    hasTimeZones: true
}, _4cs6187 = {
    id: "US",
    displayName: "Etazonia",
    regionId: "021",
    hasTimeZones: true
}, _4cs6188 = {
    id: "ET",
    displayName: "Ethiopia",
    regionId: "014",
    hasTimeZones: true
}, _4cs6189 = {
    id: "PH",
    displayName: "Filipina",
    regionId: "035",
    hasTimeZones: true
}, _4cs6190 = {
    id: "FI",
    displayName: "Finlandy",
    regionId: "154",
    hasTimeZones: true
}, _4cs6191 = {
    id: "JO",
    displayName: "Jordania",
    regionId: "145",
    hasTimeZones: true
}, _4cs6192 = {
    id: "KH",
    displayName: "Kambôdja",
    regionId: "035",
    hasTimeZones: true
}, _4cs6193 = {
    id: "CM",
    displayName: "Kamerona",
    regionId: "017",
    hasTimeZones: true
}, _4cs6194 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _4cs6195 = {
    id: "CO",
    displayName: "Kôlômbia",
    regionId: "005",
    hasTimeZones: true
}, _4cs6196 = {
    id: "RE",
    displayName: "Larenion",
    regionId: "014",
    hasTimeZones: true
}, _4cs6197 = {
    id: "LT",
    displayName: "Litoania",
    regionId: "154",
    hasTimeZones: true
}, _4cs6198 = {
    id: "MY",
    displayName: "Malaizia",
    regionId: "035",
    hasTimeZones: true
}, _4cs6199 = {
    id: "MD",
    displayName: "Môldavia",
    regionId: "151",
    hasTimeZones: true
}, _4cs6200 = {
    id: "MN",
    displayName: "Môngôlia",
    regionId: "030",
    hasTimeZones: true
}, _4cs6201 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _4cs6202 = {
    id: "PY",
    displayName: "Paragoay",
    regionId: "005",
    hasTimeZones: true
}, _4cs6203 = {
    id: "PN",
    displayName: "Pitkairn",
    regionId: "061",
    hasTimeZones: true
}, _4cs6204 = {
    id: "SC",
    displayName: "Seyshela",
    regionId: "014",
    hasTimeZones: true
}, _4cs6205 = {
    id: "SK",
    displayName: "Slovakia",
    regionId: "151",
    hasTimeZones: true
}, _4cs6206 = {
    id: "SI",
    displayName: "Slovenia",
    regionId: "039",
    hasTimeZones: true
}, _4cs6207 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _4cs6208 = {
    id: "ZW",
    displayName: "Zimbaboe",
    regionId: "014",
    hasTimeZones: true
}, _4cs6209 = {
    relative: _4cs656
}, _4cs6210 = {
    id: "GB",
    displayName: "Angletera",
    regionId: "154",
    hasTimeZones: true
}, _4cs6211 = {
    id: "AU",
    displayName: "Aostralia",
    regionId: "053",
    hasTimeZones: true
}, _4cs6212 = {
    id: "AR",
    displayName: "Arzantina",
    regionId: "005",
    hasTimeZones: true
}, _4cs6213 = {
    id: "BG",
    displayName: "Biolgaria",
    regionId: "151",
    hasTimeZones: true
}, _4cs6214 = {
    id: "GP",
    displayName: "Goadelopy",
    regionId: "029",
    hasTimeZones: true
}, _4cs6215 = {
    id: "GT",
    displayName: "Goatemalà",
    regionId: "013",
    hasTimeZones: true
}, _4cs6216 = {
    id: "GL",
    displayName: "Groenland",
    regionId: "021",
    hasTimeZones: true
}, _4cs6217 = {
    id: "ID",
    displayName: "Indonezia",
    regionId: "035",
    hasTimeZones: true
}, _4cs6218 = {
    id: "MK",
    displayName: "Makedonia",
    regionId: "039",
    hasTimeZones: true
}, _4cs6219 = {
    id: "MQ",
    displayName: "Martinika",
    regionId: "029",
    hasTimeZones: true
}, _4cs6220 = {
    id: "MZ",
    displayName: "Mozambika",
    regionId: "014",
    hasTimeZones: true
}, _4cs6221 = {
    id: "NI",
    displayName: "Nikaragoà",
    regionId: "013",
    hasTimeZones: true
}, _4cs6222 = {
    id: "CK",
    displayName: "Nosy Kook",
    regionId: "061",
    hasTimeZones: true
}, _4cs6223 = {
    id: "PS",
    displayName: "Palestina",
    regionId: "145",
    hasTimeZones: true
}, _4cs6224 = {
    id: "SG",
    displayName: "Singaporo",
    regionId: "035",
    hasTimeZones: true
}, _4cs6225 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _4cs6226 = {
    id: "TH",
    displayName: "Thailandy",
    regionId: "035",
    hasTimeZones: true
}, _4cs6227 = {
    id: "VE",
    displayName: "Venezoelà",
    regionId: "005",
    hasTimeZones: true
}, _4cs6228 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _4cs6229 = {
    id: "BD",
    displayName: "Bangladesy",
    regionId: "034",
    hasTimeZones: true
}, _4cs6230 = {
    id: "GW",
    displayName: "Giné-Bisao",
    regionId: "011",
    hasTimeZones: true
}, _4cs6231 = {
    id: "HN",
    displayName: "Hondiorasy",
    regionId: "013",
    hasTimeZones: true
}, _4cs6232 = {
    id: "KZ",
    displayName: "Kazakhstan",
    regionId: "143",
    hasTimeZones: true
}, _4cs6233 = {
    id: "KG",
    displayName: "Kiordistan",
    regionId: "143",
    hasTimeZones: true
}, _4cs6234 = {
    id: "CR",
    displayName: "Kosta Rikà",
    regionId: "013",
    hasTimeZones: true
}, _4cs6235 = {
    id: "MR",
    displayName: "Maoritania",
    regionId: "011",
    hasTimeZones: true
}, _4cs6236 = {
    id: "FM",
    displayName: "Mikrônezia",
    regionId: "057",
    hasTimeZones: true
}, _4cs6237 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _4cs6238 = {
    id: "UZ",
    displayName: "Ozbekistan",
    regionId: "143",
    hasTimeZones: true
}, _4cs6239 = {
    id: "PT",
    displayName: "Pôrtiogala",
    regionId: "039",
    hasTimeZones: true
}, _4cs6240 = {
    id: "PR",
    displayName: "Pôrtô Rikô",
    regionId: "029",
    hasTimeZones: true
}, _4cs6241 = {
    id: "SZ",
    displayName: "Soazilandy",
    regionId: "018",
    hasTimeZones: true
}, _4cs6242 = {
    id: "TJ",
    displayName: "Tajikistan",
    regionId: "143",
    hasTimeZones: true
}, _4cs6243 = {
    id: "GI",
    displayName: "Zibraltara",
    regionId: "039",
    hasTimeZones: true
}, _4cs6244 = {
    id: "AF",
    displayName: "Afghanistan",
    regionId: "034",
    hasTimeZones: true
}, _4cs6245 = {
    id: "AZ",
    displayName: "Azerbaidjan",
    regionId: "145",
    hasTimeZones: true
}, _4cs6246 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _4cs6247 = {
    id: "LU",
    displayName: "Lioksamboro",
    regionId: "155",
    hasTimeZones: true
}, _4cs6248 = {
    id: "LI",
    displayName: "Listenstein",
    regionId: "155",
    hasTimeZones: true
}, _4cs6249 = {
    id: "KY",
    displayName: "Nosy Kayman",
    regionId: "029",
    hasTimeZones: true
}, _4cs6250 = {
    id: "SM",
    displayName: "Saint-Marin",
    regionId: "039",
    hasTimeZones: true
}, _4cs6251 = {
    relative: _4cs659
}, _4cs6252 = {
    relative: _4cs660
}, _4cs6253 = {
    id: "BF",
    displayName: "Borkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _4cs6254 = {
    id: "KR",
    displayName: "Korea Atsimo",
    regionId: "030",
    hasTimeZones: true
}, _4cs6255 = {
    id: "MG",
    displayName: "Madagasikara",
    regionId: "014",
    hasTimeZones: true
}, _4cs6256 = {
    id: "FK",
    displayName: "Nosy Falkand",
    regionId: "005",
    hasTimeZones: true
}, _4cs6257 = {
    id: "NF",
    displayName: "Nosy Norfolk",
    regionId: "053",
    hasTimeZones: true
}, _4cs6258 = {
    id: "LC",
    displayName: "Sainte-Lucie",
    regionId: "029",
    hasTimeZones: true
}, _4cs6259 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _4cs6260 = {
    id: "TM",
    displayName: "Torkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _4cs6261 = {
    id: "ZA",
    displayName: "Afrika Atsimo",
    regionId: "018",
    hasTimeZones: true
}, _4cs6262 = {
    id: "CI",
    displayName: "Côte d’Ivoire",
    regionId: "011",
    hasTimeZones: true
}, _4cs6263 = {
    id: "CV",
    displayName: "Nosy Cap-Vert",
    regionId: "011",
    hasTimeZones: true
}, _4cs6264 = {
    id: "MH",
    displayName: "Nosy Marshall",
    regionId: "057",
    hasTimeZones: true
}, _4cs6265 = {
    id: "SB",
    displayName: "Nosy Salomona",
    regionId: "054",
    hasTimeZones: true
}, _4cs6266 = {
    id: "SH",
    displayName: "Sainte-Hélène",
    regionId: "011",
    hasTimeZones: true
}, _4cs6267 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _4cs6268 = {
    id: "SA",
    displayName: "Arabia saodita",
    regionId: "145",
    hasTimeZones: true
}, _4cs6269 = {
    id: "KP",
    displayName: "Korea Avaratra",
    regionId: "030",
    hasTimeZones: true
}, _4cs6270 = {
    relative: _4cs662
}, _4cs6271 = {
    id: "GQ",
    displayName: "Guinea Ekoatera",
    regionId: "017",
    hasTimeZones: true
}, _4cs6272 = {
    id: "GF",
    displayName: "Guyana frantsay",
    regionId: "005",
    hasTimeZones: true
}, _4cs6273 = {
    symbols: P.numbers.ahom.symbols,
    digits: "renderSpelloutCardinalFinancial"
}, _4cs6274 = [ "Jan", "Feb", "Mar", "Apr", "Mey", "Jon", "Jol", "Aog", "Sep", "Okt", "Nov", "Des" ], _4cs6275 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _4cs6276 = {
    id: "NZ",
    displayName: "Nouvelle-Zélande",
    regionId: "053",
    hasTimeZones: true
}, _4cs6277 = {
    id: "TL",
    displayName: "Timor Atsinanana",
    regionId: "035",
    hasTimeZones: true
}, _4cs6278 = {
    id: "WF",
    displayName: "Wallis sy Futuna",
    regionId: "061",
    hasTimeZones: true
}, _4cs6279 = {
    id: "AG",
    displayName: "Antiga sy Barboda",
    regionId: "029",
    hasTimeZones: true
}, _4cs6280 = {
    id: "AS",
    displayName: "Samoa amerikanina",
    regionId: "061",
    hasTimeZones: true
}, _4cs6281 = [ "Alahady", "Alatsinainy", "Talata", "Alarobia", "Alakamisy", "Zoma", "Asabotsy" ], _4cs6282 = {
    id: "IO",
    displayName: "Faridranomasina indiana britanika",
    hasTimeZones: true
}, _4cs6283 = {
    id: "VA",
    displayName: "Firenen’i Vatikana",
    regionId: "039",
    hasTimeZones: true
}, _4cs6284 = {
    id: "NC",
    displayName: "Nouvelle-Calédonie",
    regionId: "054",
    hasTimeZones: true
}, _4cs6285 = {
    id: "PF",
    displayName: "Polynezia frantsay",
    regionId: "061",
    hasTimeZones: true
}, _4cs6286 = {
    id: "CD",
    displayName: "Repoblikan’i Kongo",
    regionId: "017",
    hasTimeZones: true
}, _4cs6287 = {
    id: "CZ",
    displayName: "Repoblikan’i Tseky",
    regionId: "151",
    hasTimeZones: true
}, _4cs6288 = {
    id: "TT",
    displayName: "Trinidad sy Tobagô",
    regionId: "029",
    hasTimeZones: true
}, _4cs6289 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _4cs6290 = {
    id: "ST",
    displayName: "São Tomé-et-Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _4cs6291 = {
    id: "BA",
    displayName: "Bosnia sy Herzegovina",
    regionId: "039",
    hasTimeZones: true
}, _4cs6292 = {
    id: "TC",
    displayName: "Nosy Turks sy Caïques",
    regionId: "029",
    hasTimeZones: true
}, _4cs6293 = {
    id: "CF",
    displayName: "Repoblika Ivon’Afrika",
    regionId: "017",
    hasTimeZones: true
}, _4cs6294 = {
    abbreviated: {
        am: "AM",
        pm: "PM"
    },
    narrow: {
        am: "AM",
        pm: "PM"
    },
    wide: {
        am: "AM",
        pm: "PM"
    }
}, _4cs6295 = {
    id: "AE",
    displayName: "Emirà Arabo mitambatra",
    regionId: "145",
    hasTimeZones: true
}, _4cs6296 = {
    id: "VI",
    displayName: "Nosy Virijiny Etazonia",
    regionId: "029",
    hasTimeZones: true
}, _4cs6297 = {
    id: "DO",
    displayName: "Repoblika Dominikanina",
    regionId: "029",
    hasTimeZones: true
}, _4cs6298 = {
    displayName: "Ora",
    relativeTime: _4cs640
}, _4cs6299 = {
    id: "MP",
    displayName: "Nosy Mariana Atsinanana",
    regionId: "057",
    hasTimeZones: true
}, _4cs6300 = {
    id: "VG",
    displayName: "Nosy britanika virijiny",
    regionId: "029",
    hasTimeZones: true
}, _4cs6301 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _4cs6302 = {
    id: "PM",
    displayName: "Saint-Pierre-et-Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _4cs6303 = {
    id: "PG",
    displayName: "Papouasie-Nouvelle-Guinée",
    regionId: "054",
    hasTimeZones: true
}, _4cs6304 = {
    id: "KN",
    displayName: "Saint-Christophe-et-Niévès",
    regionId: "029",
    hasTimeZones: true
}, _4cs6305 = {
    d: "GGGGG y-MM-dd – y-MM-dd",
    M: "GGGGG y-MM-dd – y-MM-dd",
    y: "GGGGG y-MM-dd – y-MM-dd"
}, _4cs6306 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _4cs6307 = {
    d: "G y MMM d, E – MMM d, E",
    M: "G y MMM d, E – MMM d, E",
    y: "G y MMM d, E – y MMM d, E"
}, _4cs6308 = {
    displayName: "Minitra",
    relativeTime: _4cs649
}, _4cs6309 = {
    id: "VC",
    displayName: "Saint-Vincent-et-les Grenadines",
    regionId: "029",
    hasTimeZones: true
}, _4cs6310 = [ "Telovolana voalohany", "Telovolana faharoa", "Telovolana fahatelo", "Telovolana fahefatra" ], _4cs6311 = {
    displayName: "Segondra",
    relative: [ "now" ],
    relativeTime: _4cs641
}, _4cs6312 = {
    d: "GGGGG y-MM-dd, E – y-MM-dd, E",
    M: "GGGGG y-MM-dd, E – y-MM-dd, E",
    y: "GGGGG y-MM-dd, E – y-MM-dd, E"
}, _4cs6313 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _4cs6314 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _4cs6315 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _4cs6316 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _4cs6317 = [ "Janoary", "Febroary", "Martsa", "Aprily", "Mey", "Jona", "Jolay", "Aogositra", "Septambra", "Oktobra", "Novambra", "Desambra" ], _4cs6318 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _4cs6319 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _4cs6320 = {
    displayName: "Andro",
    relative: _4cs631,
    relativeTime: _4cs639
}, _4cs6321 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _4cs6322 = {
    displayName: "Taona",
    relative: _4cs634,
    relativeTime: _4cs636
}, _4cs6323 = {
    displayName: "Volana",
    relative: _4cs647,
    relativeTime: _4cs637
}, _4cs6324 = {
    displayName: "Herinandro",
    relative: _4cs635,
    relativeTime: _4cs638
}, _4cs6325 = {
    displayName: "Quarter",
    relative: _4cs655,
    relativeTime: _4cs642
}, _4cs6326 = {
    abbreviated: _4cs61,
    narrow: [ "1", "2", "3", "4" ],
    wide: _4cs6310
}, _4cs6327 = {
    decimal: ".",
    group: ",",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _4cs6328 = {
    format: _4cs6294,
    standAlone: _4cs6294
}, _4cs6329 = {
    format: _4cs6267,
    numeric: _4cs63,
    standAlone: _4cs6267
}, _4cs6330 = {
    "1000": {
        other: "0K"
    },
    "10000": {
        other: "00K"
    },
    "100000": {
        other: "000K"
    },
    "1000000": {
        other: "0M"
    },
    "10000000": {
        other: "00M"
    },
    "100000000": {
        other: "000M"
    },
    "1000000000": {
        other: "0G"
    },
    "10000000000": {
        other: "00G"
    },
    "100000000000": {
        other: "000G"
    },
    "1000000000000": {
        other: "0T"
    },
    "10000000000000": {
        other: "00T"
    },
    "100000000000000": {
        other: "000T"
    }
}, _4cs6331 = {
    abbreviated: _4cs6275,
    narrow: _4cs653,
    wide: _4cs6275
}, _4cs6332 = {
    abbreviated: _4cs645,
    narrow: _4cs619,
    wide: _4cs6281,
    "short": _4cs645
}, _4cs6333 = {
    abbreviated: _4cs6289,
    narrow: _4cs6289,
    wide: _4cs6289
}, _4cs6334 = {
    format: _4cs6333
}, _4cs6335 = {
    abbreviated: _4cs6274,
    narrow: _4cs646,
    wide: _4cs6317
}, _4cs6336 = {
    abbreviated: _4cs6314,
    narrow: _4cs658,
    wide: _4cs6314
}, _4cs6337 = {
    abbreviated: _4cs6315,
    narrow: _4cs653,
    wide: _4cs6315
}, _4cs6338 = {
    abbreviated: _4cs6316,
    narrow: _4cs658,
    wide: _4cs6316
}, _4cs6339 = {
    abbreviated: _4cs6313,
    narrow: _4cs653,
    wide: _4cs6321
}, _4cs6340 = {
    abbreviated: _4cs6318,
    narrow: _4cs658,
    wide: _4cs6318
}, _4cs6341 = {
    abbreviated: _4cs6319,
    narrow: _4cs653,
    wide: _4cs6319
}, _4cs6342 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _4cs6343 = {
    format: _4cs6326,
    standAlone: _4cs6326
}, _4cs6344 = {
    fullDate: "EEEE d MMMM y G",
    longDate: "d MMMM y G",
    mediumDate: "d MMM, y G",
    shortDate: "d/M/y GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "d/M/y GGGGG HH:mm",
    mediumDateTime: "d MMM, y G HH:mm:ss",
    longDateTime: "d MMMM y G HH:mm:ss z",
    fullDateTime: "EEEE d MMMM y G HH:mm:ss zzzz"
}, _4cs6345 = {
    "1000": _4cs64,
    "10000": _4cs68,
    "100000": _4cs614,
    "1000000": _4cs65,
    "10000000": _4cs69,
    "100000000": _4cs615,
    "1000000000": _4cs66,
    "10000000000": _4cs610,
    "100000000000": _4cs616,
    "1000000000000": _4cs67,
    "10000000000000": _4cs611,
    "100000000000000": _4cs617
}, _4cs6346 = {
    format: _4cs6331,
    standAlone: _4cs6331
}, _4cs6347 = {
    "long": _4cs6330,
    "short": _4cs6330,
    "default": "#,##0.###"
}, _4cs6348 = {
    format: _4cs6332,
    standAlone: _4cs6332
}, _4cs6349 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _4cs6350 = {
    format: _4cs6335,
    standAlone: _4cs6335
}, _4cs6351 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _4cs6352 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _4cs6353 = {
    format: _4cs6339,
    standAlone: _4cs6339
}, _4cs6354 = {
    M: "M",
    Md: "d/M",
    MEd: "E d/M",
    MMd: "d/MM",
    MMdd: "dd/MM",
    MMM: "MMM",
    MMMd: "d MMM",
    MMMEd: "E d MMM",
    MMMMd: "d MMMM",
    MMMMEd: "E d MMMM",
    ms: "m:ss",
    y: "y",
    yM: "M/y",
    yMEd: "E d/M/y",
    yMM: "MM/y",
    yMMM: "MMM y",
    yMMMd: "d MMM y",
    yMMMEd: "E d MMM y",
    yMMMM: "MMMM y",
    yQQQ: "QQQ y",
    yQQQQ: "QQQQ y",
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss",
    Gy: "G y",
    GyMMM: "G y MMM",
    GyMMMd: "G y MMM d",
    GyMMMEd: "G y MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    yyyy: "G y",
    yyyyM: "GGGGG y-MM",
    yyyyMd: "GGGGG y-MM-dd",
    yyyyMEd: "GGGGG y-MM-dd, E",
    yyyyMMM: "G y MMM",
    yyyyMMMd: "G y MMM d",
    yyyyMMMEd: "G y MMM d, E",
    yyyyMMMM: "G y MMMM",
    yyyyQQQ: "G y QQQ",
    yyyyQQQQ: "G y QQQQ"
}, _4cs6355 = {
    basic: _4cs6342,
    cldr: _4cs6349
}, _4cs6356 = {
    d: {
        d: "d–d"
    },
    h: _4cs612,
    H: {
        H: "HH–HH"
    },
    hm: _4cs654,
    Hm: _4cs624,
    hmv: _4cs661,
    Hmv: _4cs627,
    hv: _4cs618,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _4cs628,
    MEd: _4cs643,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _4cs620,
    MMMEd: _4cs644,
    y: {
        y: "U–U"
    },
    yM: _4cs625,
    yMd: _4cs6228,
    yMEd: _4cs6306,
    yMMM: _4cs626,
    yMMMd: _4cs657,
    yMMMEd: _4cs6301,
    yMMMM: _4cs630
}, _4cs6357 = {
    d: {
        d: "d–d"
    },
    h: _4cs612,
    H: {
        H: "HH–HH"
    },
    hm: _4cs654,
    Hm: _4cs624,
    hmv: _4cs661,
    Hmv: _4cs627,
    hv: _4cs618,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _4cs628,
    MEd: _4cs643,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _4cs620,
    MMMEd: _4cs644,
    y: {
        y: "G y–y"
    },
    yM: _4cs633,
    yMd: _4cs6305,
    yMEd: _4cs6312,
    yMMM: _4cs629,
    yMMMd: _4cs6102,
    yMMMEd: _4cs6307,
    yMMMM: _4cs632
}, _4cs6358 = {
    basic: _4cs6344,
    cldr: _4cs6354
}, _4cs6359 = {
    beforeCurrency: _4cs6351,
    afterCurrency: _4cs6351
}, _4cs6360 = {
    "short": _4cs6345,
    "default": "¤#,##0.00",
    other: "{0} {1}",
    currencySpacing: _4cs6359
}, _4cs6361 = {
    era: {
        displayName: "Era"
    },
    year: _4cs6322,
    month: _4cs6323,
    week: _4cs6324,
    day: _4cs6320,
    dayperiod: _4cs62,
    hour: _4cs6298,
    minute: _4cs6308,
    second: _4cs6311,
    quarter: _4cs6325,
    weekday: _4cs621,
    zone: {
        displayName: "Zone"
    },
    sun: _4cs6103,
    mon: _4cs6104,
    tue: _4cs6209,
    wed: _4cs6270,
    thu: _4cs6251,
    fri: _4cs6105,
    sat: _4cs6252
}, _4cs6362 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _4cs6361
}, _4cs6363 = {
    abbreviated: _4cs6352,
    narrow: _4cs6352,
    wide: _4cs6352
}, _4cs6364 = {
    format: _4cs6363
}, _4cs6365 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _4cs6347,
    currency: _4cs6360,
    percent: {
        "default": "#,##0%"
    }
}, _4cs6366 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _4cs6367 = {
    dateFormats: _4cs6358,
    datePartsOrder: "dmy",
    dateIntervalFormats: _4cs6357,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _4cs6348,
    dayPeriods: _4cs6328,
    monthNames: _4cs6353,
    eraNames: _4cs623,
    quarterNames: _4cs6343,
    fields: _4cs6361
}, _4cs6368 = {
    dayParts: _4cs6334,
    days: _4cs6364,
    months: _4cs6364,
    years: _4cs6364,
    zodiacs: _4cs6334
}, _4cs6369 = {
    dateFormats: _4cs6355,
    datePartsOrder: "md",
    dateIntervalFormats: _4cs6356,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _4cs6348,
    dayPeriods: _4cs6328,
    cyclicNames: _4cs6368,
    monthNames: _4cs6346,
    monthPatterns: _4cs6329,
    quarterNames: _4cs6343,
    fields: _4cs6361
}, _4cs6370 = [ _4cs6244, _4cs6261, _4cs6130, _4cs6179, _4cs6131, _4cs6132, _4cs6210, _4cs6106, _4cs6180, _4cs6279, _4cs6211, _4cs6133, _4cs6268, _4cs6134, _4cs673, _4cs6212, _4cs6245, _4cs6135, _4cs6136, _4cs6229, _4cs6137, _4cs6181, _4cs6107, _4cs6138, _4cs674, _4cs6182, _4cs6139, _4cs6213, _4cs6140, _4cs6253, _4cs6141, _4cs6291, _4cs6183, _4cs6142, _4cs6108, _4cs6262, _4cs6184, _4cs6143, _4cs6185, _4cs6109, _4cs6186, _4cs6246, _4cs6295, _4cs6144, _4cs6145, _4cs6146, _4cs6187, _4cs6188, _4cs6282, _4cs675, _4cs6189, _4cs6190, _4cs6283, _4cs6147, _4cs676, _4cs6110, _4cs677, _4cs678, _4cs6230, _4cs6214, _4cs6215, _4cs6148, _4cs679, _4cs6216, _4cs663, _4cs6271, _4cs6111, _4cs6272, _4cs680, _4cs6149, _4cs6231, _4cs6150, _4cs6217, _4cs664, _4cs665, _4cs666, _4cs6151, _4cs6152, _4cs6153, _4cs6112, _4cs6154, _4cs6113, _4cs6191, _4cs6192, _4cs6193, _4cs6114, _4cs681, _4cs6232, _4cs682, _4cs683, _4cs6233, _4cs6194, _4cs6254, _4cs6269, _4cs6234, _4cs6155, _4cs6115, _4cs6195, _4cs6156, _4cs684, _4cs6196, _4cs667, _4cs6157, _4cs6158, _4cs6116, _4cs6159, _4cs685, _4cs6247, _4cs6248, _4cs6197, _4cs6255, _4cs6218, _4cs6198, _4cs6117, _4cs6160, _4cs668, _4cs686, _4cs6161, _4cs6235, _4cs6219, _4cs6118, _4cs6119, _4cs6162, _4cs6236, _4cs6237, _4cs6220, _4cs6163, _4cs6199, _4cs6120, _4cs6200, _4cs6164, _4cs687, _4cs6121, _4cs688, _4cs6221, _4cs669, _4cs6165, _4cs6263, _4cs6256, _4cs6249, _4cs6222, _4cs6299, _4cs6264, _4cs6257, _4cs6265, _4cs6292, _4cs6296, _4cs6300, _4cs6284, _4cs6276, _4cs6166, _4cs6122, _4cs6167, _4cs670, _4cs6168, _4cs6238, _4cs6201, _4cs689, _4cs6223, _4cs6123, _4cs6303, _4cs6202, _4cs690, _4cs6203, _4cs6285, _4cs6124, _4cs6239, _4cs6240, _4cs6297, _4cs6293, _4cs6286, _4cs6287, _4cs6125, _4cs6169, _4cs691, _4cs6304, _4cs6250, _4cs6302, _4cs6309, _4cs6266, _4cs6258, _4cs692, _4cs6280, _4cs6170, _4cs6204, _4cs693, _4cs6259, _4cs671, _4cs6224, _4cs6205, _4cs6206, _4cs6241, _4cs694, _4cs695, _4cs696, _4cs6171, _4cs6172, _4cs6225, _4cs697, _4cs698, _4cs6290, _4cs6173, _4cs6242, _4cs6207, _4cs6226, _4cs6277, _4cs672, _4cs6174, _4cs699, _4cs6175, _4cs6126, _4cs6260, _4cs6127, _4cs6288, _4cs6100, _4cs6176, _4cs6227, _4cs6177, _4cs6278, _4cs6101, _4cs6128, _4cs6178, _4cs6243, _4cs6208 ];

inter.id = "mg";

inter.delimiters = {
    quotationStart: "«",
    quotationEnd: "»",
    alternateQuotationStart: "“",
    alternateQuotationEnd: "”"
};

inter.characters = {
    exemplar: {
        "default": [ "a", "à", "â", "b", "d", "e", "é", "è", "ê", "ë", "f", "g", "h", "i", "ì", "î", "ï", "j", "k", "l", "m", "n", "ñ", "o", "ô", "p", "r", "s", "t", "v", "y", "z" ],
        auxiliary: [ "c", "q", "u", "w", "x" ],
        index: [ "A", "B", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "R", "S", "T", "V", "Y", "Z" ],
        punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "(", ")", "\\[", "\\]", "\\{", "\\}" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: P.numbers.ahom,
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _4cs6365,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _4cs6365,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderEthiopic"
    },
    finance: _4cs622,
    fullwide: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _4cs6129,
    hansfin: _4cs6273,
    hant: _4cs6129,
    hantfin: _4cs6273,
    hebr: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _4cs6129,
    jpanfin: _4cs6273,
    kali: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _4cs622,
    nkoo: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: P.numbers.ahom.symbols,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _4cs622,
    vaii: {
        symbols: _4cs6327,
        formats: _4cs6365,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: P.numbers.ahom.symbols,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _4cs6358,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4cs6357,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _4cs6348,
        dayPeriods: _4cs6328,
        monthNames: _4cs6350,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _4cs6343,
        fields: _4cs6361
    },
    chinese: _4cs6369,
    coptic: {
        dateFormats: _4cs6358,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4cs6357,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _4cs6348,
        dayPeriods: _4cs6328,
        monthNames: {
            format: _4cs6338,
            standAlone: _4cs6338
        },
        eraNames: _4cs648,
        quarterNames: _4cs6343,
        fields: _4cs6361
    },
    dangi: _4cs6369,
    ethioaa: _4cs6362,
    ethiopic: {
        dateFormats: _4cs6358,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4cs6357,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _4cs6348,
        dayPeriods: _4cs6328,
        monthNames: {
            format: _4cs6340,
            standAlone: _4cs6340
        },
        eraNames: _4cs648,
        quarterNames: _4cs6343,
        fields: _4cs6361
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE d MMMM y",
                longDate: "d MMMM y",
                mediumDate: "d MMM, y",
                shortDate: "d/M/y",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "d/M/y HH:mm",
                mediumDateTime: "d MMM, y HH:mm:ss",
                longDateTime: "d MMMM y HH:mm:ss z",
                fullDateTime: "EEEE d MMMM y HH:mm:ss zzzz"
            },
            cldr: {
                M: "M",
                Md: "d/M",
                MEd: "E d/M",
                MMd: "d/MM",
                MMdd: "dd/MM",
                MMM: "MMM",
                MMMd: "d MMM",
                MMMEd: "E d MMM",
                MMMMd: "d MMMM",
                MMMMEd: "E d MMMM",
                ms: "m:ss",
                y: "y",
                yM: "M/y",
                yMEd: "E d/M/y",
                yMM: "MM/y",
                yMMM: "MMM y",
                yMMMd: "d MMM y",
                yMMMEd: "E d MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y",
                d: "d",
                E: "ccc",
                Ed: "d, E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                yMd: "y-MM-dd"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _4cs612,
            H: {
                H: "HH–HH"
            },
            hm: _4cs654,
            Hm: _4cs624,
            hmv: _4cs661,
            Hmv: _4cs627,
            hv: _4cs618,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "MM–MM"
            },
            Md: _4cs628,
            MEd: _4cs643,
            MMM: {
                M: "LLL–LLL"
            },
            MMMd: _4cs620,
            MMMEd: _4cs644,
            y: {
                y: "y–y"
            },
            yM: _4cs625,
            yMd: _4cs6228,
            yMEd: _4cs6306,
            yMMM: {
                M: "y MMM–MMM",
                y: "y MMM – y MMM"
            },
            yMMMd: {
                d: "y MMM d–d",
                M: "y MMM d – MMM d",
                y: "y MMM d – y MMM d"
            },
            yMMMEd: {
                d: "y MMM d, E – MMM d, E",
                M: "y MMM d, E – MMM d, E",
                y: "y MMM d, E – y MMM d, E"
            },
            yMMMM: {
                M: "y MMMM–MMMM",
                y: "y MMMM – y MMMM"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _4cs6348,
        dayPeriods: _4cs6328,
        monthNames: _4cs6350,
        eraNames: {
            wide: [ "Alohan’i JK", "Aorian’i JK" ],
            abbreviated: [ "BC", "AD" ]
        },
        quarterNames: _4cs6343,
        fields: _4cs6361
    },
    hebrew: {
        dateFormats: _4cs6358,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4cs6357,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _4cs6348,
        dayPeriods: _4cs6328,
        monthNames: {
            format: _4cs6336,
            standAlone: _4cs6336
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _4cs6343,
        fields: _4cs6361
    },
    indian: {
        dateFormats: _4cs6358,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4cs6357,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _4cs6348,
        dayPeriods: _4cs6328,
        monthNames: {
            format: _4cs6341,
            standAlone: _4cs6341
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _4cs6343,
        fields: _4cs6361
    },
    islamic: _4cs6367,
    "islamic-umalqura": _4cs6367,
    "islamic-tbla": _4cs6367,
    "islamic-civil": _4cs6367,
    "islamic-rgsa": _4cs6367,
    iso8601: _4cs6362,
    japanese: {
        dateFormats: _4cs6358,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4cs6357,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _4cs6348,
        dayPeriods: _4cs6328,
        monthNames: _4cs6350,
        eraNames: {
            wide: _4cs6366,
            abbreviated: _4cs6366
        },
        quarterNames: _4cs6343,
        fields: _4cs6361
    },
    persian: {
        dateFormats: _4cs6358,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4cs6357,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _4cs6348,
        dayPeriods: _4cs6328,
        monthNames: {
            format: _4cs6337,
            standAlone: _4cs6337
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _4cs6343,
        fields: _4cs6361
    },
    roc: {
        dateFormats: _4cs6358,
        datePartsOrder: "dmy",
        dateIntervalFormats: _4cs6357,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _4cs6348,
        dayPeriods: _4cs6328,
        monthNames: _4cs6350,
        eraNames: {
            wide: _4cs613,
            abbreviated: _4cs613
        },
        quarterNames: _4cs6343,
        fields: _4cs6361
    },
    islamicc: _4cs6362
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === Math.floor(n) && n >= 0 && n <= 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.territories = _4cs6370;

inter.countries = _4cs6370;

inter.languages = [ {
    id: "ak",
    displayName: "Akan",
    nativeDisplayName: "Akan"
}, {
    id: "ms",
    displayName: "Malay",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "de",
    displayName: "Alemanina",
    nativeDisplayName: "Deutsch"
}, {
    id: "en",
    displayName: "Anglisy",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "Espaniola",
    nativeDisplayName: "español"
}, {
    id: "fr",
    displayName: "Frantsay",
    nativeDisplayName: "français"
}, {
    id: "ha",
    displayName: "haoussa",
    nativeDisplayName: "Hausa"
}, {
    id: "ig",
    displayName: "igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "id",
    displayName: "Indonezianina",
    nativeDisplayName: "Indonesia"
}, {
    id: "zu",
    displayName: "Zolò",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "Italianina",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "Javaney"
}, {
    id: "rw",
    displayName: "Roande",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "hu",
    displayName: "hongroà",
    nativeDisplayName: "magyar"
}, {
    id: "mg",
    displayName: "Malagasy",
    nativeDisplayName: "Malagasy"
}, {
    id: "nl",
    displayName: "Holandey",
    nativeDisplayName: "Nederlands"
}, {
    id: "pl",
    displayName: "Poloney",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "Portiogey",
    nativeDisplayName: "português"
}, {
    id: "ro",
    displayName: "Romanianina",
    nativeDisplayName: "română"
}, {
    id: "so",
    displayName: "Somalianina",
    nativeDisplayName: "Soomaali"
}, {
    id: "sv",
    displayName: "Soisa",
    nativeDisplayName: "svenska"
}, {
    id: "vi",
    displayName: "Vietnamianina",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tr",
    displayName: "Tiorka",
    nativeDisplayName: "Türkçe"
}, {
    id: "yo",
    displayName: "Yôrobà",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "cs",
    displayName: "Tseky",
    nativeDisplayName: "čeština"
}, {
    id: "el",
    displayName: "Grika",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "Bielorosy",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "Biolgara",
    nativeDisplayName: "български"
}, {
    id: "ru",
    displayName: "Rosianina",
    nativeDisplayName: "русский"
}, {
    id: "uk",
    displayName: "Okrainianina",
    nativeDisplayName: "українська"
}, {
    id: "ur",
    displayName: "Ordò",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "Arabo",
    nativeDisplayName: "العربية"
}, {
    id: "fa",
    displayName: "Persa",
    nativeDisplayName: "فارسی"
}, {
    id: "ne",
    displayName: "Nepale",
    nativeDisplayName: "नेपाली"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "bn",
    displayName: "Bengali",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "Penjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "ta",
    displayName: "Tamoila",
    nativeDisplayName: "தமிழ்"
}, {
    id: "th",
    displayName: "Taioaney",
    nativeDisplayName: "ไทย"
}, {
    id: "my",
    displayName: "Birmana",
    nativeDisplayName: "ဗမာ"
}, {
    id: "am",
    displayName: "Amharika",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "khmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zh",
    displayName: "Sinoa, Mandarin",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "Japoney",
    nativeDisplayName: "日本語"
}, {
    id: "ko",
    displayName: "Koreanina",
    nativeDisplayName: "한국어"
} ];

inter.currencies = [ {
    id: "MGA",
    displayName: "Ariary",
    symbol: "Ar"
}, {
    id: "ETB",
    displayName: "Bir etiopianina"
}, {
    id: "GMD",
    displayName: "Dalasi gambianina"
}, {
    id: "TND",
    displayName: "Dinar tonizianina"
}, {
    id: "LYD",
    displayName: "Dinara Libyanina"
}, {
    id: "SDG",
    displayName: "Dinara Sodaney"
}, {
    id: "DZD",
    displayName: "Dinara alzerianina"
}, {
    id: "AED",
    displayName: "Dirham"
}, {
    id: "MAD",
    displayName: "Dirham marokianina"
}, {
    id: "STD",
    displayName: "Dobra",
    symbol: "Db"
}, {
    id: "USD",
    displayName: "Dolara amerikanina",
    symbol: "US$"
}, {
    id: "AUD",
    displayName: "Dolara aostralianina",
    symbol: "A$"
}, {
    id: "NAD",
    displayName: "Dolara namibianina",
    symbol: "$"
}, {
    id: "CAD",
    displayName: "Dôlara Kanadianina",
    symbol: "CA$"
}, {
    id: "LRD",
    displayName: "Dôlara Liberianina",
    symbol: "$"
}, {
    id: "ZWD",
    displayName: "Dôlara Zimbaboeanina"
}, {
    id: "EUR",
    displayName: "Eoro",
    symbol: "€"
}, {
    id: "CVE",
    displayName: "Escudo"
}, {
    id: "BIF",
    displayName: "Farantsa Borondi"
}, {
    id: "XOF",
    displayName: "Farantsa CFA (BCEAO)",
    symbol: "CFA"
}, {
    id: "XAF",
    displayName: "Farantsa CFA (BEAC)",
    symbol: "FCFA"
}, {
    id: "DJF",
    displayName: "Farantsa Djibotianina"
}, {
    id: "GNS",
    displayName: "Farantsa Gineanina"
}, {
    id: "KMF",
    displayName: "Farantsa Komorianina",
    symbol: "CF"
}, {
    id: "RWF",
    displayName: "Farantsa Roande",
    symbol: "RF"
}, {
    id: "CDF",
    displayName: "Farantsa kôngôley"
}, {
    id: "CHF",
    displayName: "Farantsa soisa"
}, {
    id: "ZMW",
    displayName: "Kwacha zambianina",
    symbol: "ZK"
}, {
    id: "ZMK",
    displayName: "Kwacha zambianina (1968–2012)"
}, {
    id: "SLL",
    displayName: "Leone"
}, {
    id: "SZL",
    displayName: "Lilangeni"
}, {
    id: "LSL",
    displayName: "Loti"
}, {
    id: "MZM",
    displayName: "Metikaly"
}, {
    id: "NGN",
    displayName: "Naira nigerianina",
    symbol: "₦"
}, {
    id: "ERN",
    displayName: "Nakfà Eritreanina"
}, {
    id: "MRO",
    displayName: "Ouguiya moritanianina"
}, {
    id: "BWP",
    displayName: "Pola botsoaney",
    symbol: "P"
}, {
    id: "ZAR",
    displayName: "Rand afrikanina tatsimo",
    symbol: "R"
}, {
    id: "SAR",
    displayName: "Rial saodianina"
}, {
    id: "INR",
    displayName: "Ropia Indianina",
    symbol: "₹"
}, {
    id: "SCR",
    displayName: "Ropia Seysheloà"
}, {
    id: "MUR",
    displayName: "Ropia maorisianina",
    symbol: "Rs"
}, {
    id: "KES",
    displayName: "Shilling kenianina"
}, {
    id: "UGX",
    displayName: "Shilling ogandianina"
}, {
    id: "SOS",
    displayName: "Shilling somalianina"
}, {
    id: "TZS",
    displayName: "Shilling tanzanianina"
}, {
    id: "JPY",
    displayName: "Yen Japoney",
    symbol: "JP¥"
}, {
    id: "CNY",
    displayName: "Yoan sinoa Renminbi",
    symbol: "CN¥"
}, {
    id: "GHC",
    displayName: "cédi"
}, {
    id: "BHD",
    displayName: "dinar bahreïni"
}, {
    id: "MWK",
    displayName: "kwacha malawite"
}, {
    id: "AOA",
    displayName: "kwanza angoley",
    symbol: "Kz"
}, {
    id: "SHP",
    displayName: "livre de Sainte-Hélène",
    symbol: "£"
}, {
    id: "SDP",
    displayName: "livre soudanaise (1956–2007)"
}, {
    id: "GBP",
    displayName: "livre sterling",
    symbol: "£"
}, {
    id: "EGP",
    displayName: "vola venty ejipsiana",
    symbol: "E£"
} ];

module.exports = inter;