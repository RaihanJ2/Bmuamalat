function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _5k621 = {
    "default": "#,##0 %"
}, _5k622 = {
    displayName: "AM/PM"
}, _5k623 = {
    all: {
        leap: "{0}bis"
    }
}, _5k624 = {
    displayName: "tíðarøki"
}, _5k625 = {
    one: "{0}°",
    other: "{0}°"
}, _5k626 = {
    a: "h a – h a",
    h: "h–h a"
}, _5k627 = [ "Before R.O.C.", "R.O.C." ], _5k628 = {
    one: "{0}°F",
    other: "{0}°F"
}, _5k629 = {
    one: "{0}m.",
    other: "{0}m."
}, _5k6210 = {
    displayName: "tíðarrokning"
}, _5k6211 = {
    one: "{0} ár",
    other: "{0} ár"
}, _5k6212 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _5k6213 = [ "S", "M", "T", "M", "H", "F", "L" ], _5k6214 = {
    displayName: "gerandisdagur"
}, _5k6215 = {
    one: "{0} být",
    other: "{0} být"
}, _5k6216 = {
    one: "{0} bit",
    other: "{0} bit"
}, _5k6217 = {
    one: "{0} míl",
    other: "{0} míl"
}, _5k6218 = {
    one: "{0} psi",
    other: "{0} psi"
}, _5k6219 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _5k6220 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _5k6221 = {
    one: "{0} stig",
    other: "{0} stig"
}, _5k6222 = {
    one: "{0} pund",
    other: "{0} pund"
}, _5k6223 = {
    one: "0 túsund",
    other: "0 túsund"
}, _5k6224 = {
    one: "0 tús'.'",
    other: "0 tús'.'"
}, _5k6225 = {
    one: "0 mió'.'",
    other: "0 mió'.'"
}, _5k6226 = {
    one: "0 mia'.'",
    other: "0 mia'.'"
}, _5k6227 = {
    one: "0 bió'.'",
    other: "0 bió'.'"
}, _5k6228 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _5k6229 = {
    d: "dd.MM–dd.MM",
    M: "dd.MM–dd.MM"
}, _5k6230 = {
    d: "d.–d. MMM",
    M: "d. MMM–d. MMM"
}, _5k6231 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _5k6232 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _5k6233 = {
    one: "{0} ekra",
    other: "{0} ekrur"
}, _5k6234 = {
    one: "{0} unsa",
    other: "{0} unsur"
}, _5k6235 = {
    one: "{0} pint",
    other: "{0} pints"
}, _5k6236 = {
    one: "{0} karat",
    other: "{0} karat"
}, _5k6237 = {
    one: "{0} fótur",
    other: "{0} føtur"
}, _5k6238 = {
    one: "{0} míl/t",
    other: "{0} míl/t"
}, _5k6239 = {
    one: "00 túsund",
    other: "00 túsund"
}, _5k6240 = {
    one: "00 tús'.'",
    other: "00 tús'.'"
}, _5k6241 = {
    one: "00 mió'.'",
    other: "00 mió'.'"
}, _5k6242 = {
    one: "00 mia'.'",
    other: "00 mia'.'"
}, _5k6243 = {
    one: "00 bió'.'",
    other: "00 bió'.'"
}, _5k6244 = {
    M: "MMM–MMM y G",
    y: "MMM y–MMM y G"
}, _5k6245 = {
    one: "um {0} ár",
    other: "um {0} ár"
}, _5k6246 = {
    one: "um {0} v.",
    other: "um {0} v."
}, _5k6247 = {
    one: "um {0} d.",
    other: "um {0} d."
}, _5k6248 = {
    one: "um {0} t.",
    other: "um {0} t."
}, _5k6249 = {
    one: "um {0} m.",
    other: "um {0} m."
}, _5k6250 = {
    one: "um {0} s.",
    other: "um {0} s."
}, _5k6251 = {
    one: "{0} quart",
    other: "{0} quarts"
}, _5k6252 = [ "su", "má", "tý", "mi", "hó", "fr", "le" ], _5k6253 = {
    one: "{0} ljósár",
    other: "{0} ljósár"
}, _5k6254 = {
    one: "{0} koppur",
    other: "{0} koppar"
}, _5k6255 = {
    one: "000 túsund",
    other: "000 túsund"
}, _5k6256 = {
    one: "0 millión",
    other: "0 milliónir"
}, _5k6257 = {
    one: "0 billión",
    other: "0 billiónir"
}, _5k6258 = {
    one: "000 tús'.'",
    other: "000 tús'.'"
}, _5k6259 = {
    one: "000 mió'.'",
    other: "000 mió'.'"
}, _5k6260 = {
    one: "000 mia'.'",
    other: "000 mia'.'"
}, _5k6261 = {
    one: "000 bió'.'",
    other: "000 bió'.'"
}, _5k6262 = {
    one: "0 tús'.' ¤",
    other: "0 tús'.' ¤"
}, _5k6263 = {
    one: "0 mió'.' ¤",
    other: "0 mió'.' ¤"
}, _5k6264 = {
    one: "0 mia'.' ¤",
    other: "0 mia'.' ¤"
}, _5k6265 = {
    one: "0 bió'.' ¤",
    other: "0 bió'.' ¤"
}, _5k6266 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _5k6267 = {
    "0": "í ár",
    "1": "næsta ár",
    "-1": "í fjør"
}, _5k6268 = {
    one: "um {0} vi.",
    other: "um {0} vi."
}, _5k6269 = {
    one: "um {0} da.",
    other: "um {0} da."
}, _5k6270 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _5k6271 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _5k6272 = {
    one: "{0} gallon",
    other: "{0} gallons"
}, _5k6273 = {
    one: "0 milliard",
    other: "0 milliardir"
}, _5k6274 = {
    one: "00 tús'.' ¤",
    other: "00 tús'.' ¤"
}, _5k6275 = {
    one: "00 mió'.' ¤",
    other: "00 mió'.' ¤"
}, _5k6276 = {
    one: "00 mia'.' ¤",
    other: "00 mia'.' ¤"
}, _5k6277 = {
    one: "00 bió'.' ¤",
    other: "00 bió'.' ¤"
}, _5k6278 = {
    M: "MMMM–MMMM y G",
    y: "MMMM y–MMMM y G"
}, _5k6279 = {
    one: "um {0} mnð.",
    other: "um {0} mnð."
}, _5k6280 = {
    one: "um {0} dag",
    other: "um {0} dagar"
}, _5k6281 = {
    one: "um {0} min.",
    other: "um {0} min."
}, _5k6282 = {
    one: "um {0} sek.",
    other: "um {0} sek."
}, _5k6283 = {
    one: "um {0} viku",
    other: "um {0} vikur"
}, _5k6284 = {
    one: "um {0} tíma",
    other: "um {0} tímar"
}, _5k6285 = {
    one: "00 milliónir",
    other: "00 milliónir"
}, _5k6286 = {
    one: "00 billiónir",
    other: "00 billiónir"
}, _5k6287 = {
    one: "000 tús'.' ¤",
    other: "000 tús'.' ¤"
}, _5k6288 = {
    one: "000 mió'.' ¤",
    other: "000 mió'.' ¤"
}, _5k6289 = {
    one: "000 mia'.' ¤",
    other: "000 mia'.' ¤"
}, _5k6290 = {
    one: "000 bió'.' ¤",
    other: "000 bió'.' ¤"
}, _5k6291 = {
    d: "E dd.MM–E dd.MM",
    M: "E dd.MM–E dd.MM"
}, _5k6292 = {
    M: "MM.y–MM.y GGGGG",
    y: "MM.y–MM.y GGGGG"
}, _5k6293 = {
    one: "{0} ár síðan",
    other: "{0} ár síðan"
}, _5k6294 = {
    one: "{0} v. síðan",
    other: "{0} v. síðan"
}, _5k6295 = {
    one: "{0} d. síðan",
    other: "{0} d. síðan"
}, _5k6296 = {
    one: "{0} t. síðan",
    other: "{0} t. síðan"
}, _5k6297 = {
    one: "{0} m. síðan",
    other: "{0} m. síðan"
}, _5k6298 = {
    one: "{0} s. síðan",
    other: "{0} s. síðan"
}, _5k6299 = {
    one: "{0} ekrafótur",
    other: "{0} ekraføtur"
}, _5k62100 = {
    one: "000 milliónir",
    other: "000 milliónir"
}, _5k62101 = {
    one: "00 milliardir",
    other: "00 milliardir"
}, _5k62102 = {
    one: "000 billiónir",
    other: "000 billiónir"
}, _5k62103 = [ "su.", "má.", "tý.", "mi.", "hó.", "fr.", "le." ], _5k62104 = [ "sun", "mán", "týs", "mik", "hós", "frí", "ley" ], _5k62105 = {
    one: "um {0} ársfj.",
    other: "um {0} ársfj."
}, _5k62106 = {
    one: "um {0} mánað",
    other: "um {0} mánaðir"
}, _5k62107 = {
    one: "{0} vi. síðan",
    other: "{0} vi. síðan"
}, _5k62108 = {
    one: "{0} da. síðan",
    other: "{0} da. síðan"
}, _5k62109 = {
    one: "um {0} sekund",
    other: "um {0} sekund"
}, _5k62110 = {
    one: "{0} troy unsa",
    other: "{0} troy unsur"
}, _5k62111 = {
    one: "000 milliardir",
    other: "000 milliardir"
}, _5k62112 = {
    d: "E d. MMM–E d. MMM",
    M: "E d. MMM–E d. MMM"
}, _5k62113 = {
    one: "{0} mnð. síðan",
    other: "{0} mnð. síðan"
}, _5k62114 = {
    one: "um {0} minutt",
    other: "um {0} minuttir"
}, _5k62115 = {
    one: "{0} min. síðan",
    other: "{0} min. síðan"
}, _5k62116 = {
    one: "{0} sek. síðan",
    other: "{0} sek. síðan"
}, _5k62117 = {
    one: "{0} vika síðan",
    other: "{0} vikur síðan"
}, _5k62118 = {
    one: "{0} tími síðan",
    other: "{0} tímar síðan"
}, _5k62119 = {
    one: "{0} dagur síðan",
    other: "{0} dagar síðan"
}, _5k62120 = {
    one: "{0} kostkaloria",
    other: "{0} kostkaloriur"
}, _5k62121 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _5k62122 = [ "1. ársfj.", "2. ársfj.", "3. ársfj.", "4. ársfj." ], _5k62123 = {
    one: "{0} ársfj. síðan",
    other: "{0} ársfj. síðan"
}, _5k62124 = {
    one: "{0} mánað síðan",
    other: "{0} mánaðir síðan"
}, _5k62125 = {
    one: "{0} sekund síðan",
    other: "{0} sekund síðan"
}, _5k62126 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _5k62127 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _5k62128 = [ "sun.", "mán.", "týs.", "mik.", "hós.", "frí.", "ley." ], _5k62129 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _5k62130 = {
    id: "001",
    displayName: "heimur",
    hasTimeZones: false
}, _5k62131 = {
    "0": "hesu viku",
    "1": "næstu viku",
    "-1": "seinastu viku"
}, _5k62132 = {
    one: "{0} minutt síðan",
    other: "{0} minuttir síðan"
}, _5k62133 = {
    id: "AQ",
    displayName: "Antarktis",
    hasTimeZones: true
}, _5k62134 = {
    one: "{0} metralag pint",
    other: "{0} metralag pints"
}, _5k62135 = {
    one: "{0} flótandi unsa",
    other: "{0} flótandi unsur"
}, _5k62136 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _5k62137 = {
    id: "AC",
    displayName: "Ascension",
    hasTimeZones: false
}, _5k62138 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _5k62139 = {
    id: "CP",
    displayName: "Clipperton",
    hasTimeZones: false
}, _5k62140 = {
    id: "CX",
    displayName: "Jólaoyggjin",
    hasTimeZones: true
}, _5k62141 = {
    id: "BV",
    displayName: "Bouvetoyggj",
    hasTimeZones: false
}, _5k62142 = {
    id: "CC",
    displayName: "Kokosoyggjar",
    hasTimeZones: true
}, _5k62143 = {
    one: "{0} metralag koppur",
    other: "{0} metralag koppar"
}, _5k62144 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _5k62145 = {
    one: "um {0} ársfjórðing",
    other: "um {0} ársfjórðingar"
}, _5k62146 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _5k62147 = {
    "0": "næsta su.",
    "1": "su. í næstu viku",
    "-1": "seinasta su."
}, _5k62148 = {
    "0": "næsta má.",
    "1": "má. í næstu viku",
    "-1": "seinasta má."
}, _5k62149 = {
    "0": "næsta tý.",
    "1": "tý. í næstu viku",
    "-1": "seinasta tý."
}, _5k62150 = {
    "0": "næsta mi.",
    "1": "mi. í næstu viku",
    "-1": "seinasta mi."
}, _5k62151 = {
    "0": "næsta hó.",
    "1": "hó. í næstu viku",
    "-1": "seinasta hó."
}, _5k62152 = {
    "0": "næsta fr.",
    "1": "fr. í næstu viku",
    "-1": "seinasta fr."
}, _5k62153 = {
    "0": "næsta le.",
    "1": "le. í næstu viku",
    "-1": "seinasta le."
}, _5k62154 = {
    "0": "henda mánaðin",
    "1": "næsta mánað",
    "-1": "seinasta mánað"
}, _5k62155 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _5k62156 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _5k62157 = {
    id: "IC",
    displayName: "Kanariuoyggjar",
    hasTimeZones: false
}, _5k62158 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _5k62159 = {
    "0": "næsta sun.",
    "1": "sun. í næstu viku",
    "-1": "seinasta sun."
}, _5k62160 = {
    "0": "næsta mán.",
    "1": "mán. í næstu viku",
    "-1": "seinasta mán."
}, _5k62161 = {
    "0": "næsta týs.",
    "1": "týs. í næstu viku",
    "-1": "seinasta týs."
}, _5k62162 = {
    "0": "næsta mik.",
    "1": "mik. í næstu viku",
    "-1": "seinasta mik."
}, _5k62163 = {
    "0": "næsta hós.",
    "1": "hós. í næstu viku",
    "-1": "seinasta hós."
}, _5k62164 = {
    "0": "næsta frí.",
    "1": "frí. í næstu viku",
    "-1": "seinasta frí."
}, _5k62165 = {
    "0": "næsta ley.",
    "1": "ley. í næstu viku",
    "-1": "seinasta ley."
}, _5k62166 = {
    id: "EA",
    displayName: "Ceuta og Melilla",
    hasTimeZones: false
}, _5k62167 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _5k62168 = {
    one: "{0} ársfjórðing síðan",
    other: "{0} ársfjórðingar síðan"
}, _5k62169 = {
    id: "FJ",
    displayName: "Fiji",
    regionId: "054",
    hasTimeZones: true
}, _5k62170 = {
    id: "GH",
    displayName: "Gana",
    regionId: "011",
    hasTimeZones: true
}, _5k62171 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _5k62172 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _5k62173 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _5k62174 = {
    id: "CL",
    displayName: "Kili",
    regionId: "005",
    hasTimeZones: true
}, _5k62175 = {
    id: "CN",
    displayName: "Kina",
    regionId: "030",
    hasTimeZones: true
}, _5k62176 = {
    id: "TD",
    displayName: "Kjad",
    regionId: "017",
    hasTimeZones: true
}, _5k62177 = {
    id: "CU",
    displayName: "Kuba",
    regionId: "029",
    hasTimeZones: true
}, _5k62178 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _5k62179 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _5k62180 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _5k62181 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _5k62182 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _5k62183 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _5k62184 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _5k62185 = {
    id: "BZ",
    displayName: "Belis",
    regionId: "013",
    hasTimeZones: true
}, _5k62186 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _5k62187 = {
    id: "BT",
    displayName: "Butan",
    regionId: "034",
    hasTimeZones: true
}, _5k62188 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _5k62189 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _5k62190 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _5k62191 = {
    id: "JP",
    displayName: "Japan",
    regionId: "030",
    hasTimeZones: true
}, _5k62192 = {
    id: "YE",
    displayName: "Jemen",
    regionId: "145",
    hasTimeZones: true
}, _5k62193 = {
    id: "QA",
    displayName: "Katar",
    regionId: "145",
    hasTimeZones: true
}, _5k62194 = {
    id: "KE",
    displayName: "Kenja",
    regionId: "014",
    hasTimeZones: true
}, _5k62195 = {
    id: "CG",
    displayName: "Kongo",
    regionId: "017",
    hasTimeZones: true
}, _5k62196 = {
    id: "LY",
    displayName: "Libya",
    regionId: "015",
    hasTimeZones: true
}, _5k62197 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _5k62198 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _5k62199 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _5k62200 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _5k62201 = {
    id: "NO",
    displayName: "Noreg",
    regionId: "154",
    hasTimeZones: true
}, _5k62202 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _5k62203 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _5k62204 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _5k62205 = {
    id: "CH",
    displayName: "Sveis",
    regionId: "155",
    hasTimeZones: true
}, _5k62206 = {
    id: "SY",
    displayName: "Sýria",
    regionId: "145",
    hasTimeZones: true
}, _5k62207 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _5k62208 = {
    id: "AX",
    displayName: "Áland",
    regionId: "154",
    hasTimeZones: true
}, _5k62209 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _5k62210 = {
    id: "BH",
    displayName: "Barein",
    regionId: "145",
    hasTimeZones: true
}, _5k62211 = {
    id: "BE",
    displayName: "Belgia",
    regionId: "155",
    hasTimeZones: true
}, _5k62212 = {
    id: "BR",
    displayName: "Brasil",
    regionId: "005",
    hasTimeZones: true
}, _5k62213 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _5k62214 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _5k62215 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _5k62216 = {
    id: "GY",
    displayName: "Gujana",
    regionId: "005",
    hasTimeZones: true
}, _5k62217 = {
    id: "IT",
    displayName: "Italia",
    regionId: "039",
    hasTimeZones: true
}, _5k62218 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _5k62219 = {
    id: "JO",
    displayName: "Jordan",
    regionId: "145",
    hasTimeZones: true
}, _5k62220 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _5k62221 = {
    id: "CZ",
    displayName: "Kekkia",
    regionId: "151",
    hasTimeZones: true
}, _5k62222 = {
    id: "KW",
    displayName: "Kuvait",
    regionId: "145",
    hasTimeZones: true
}, _5k62223 = {
    id: "CY",
    displayName: "Kýpros",
    regionId: "145",
    hasTimeZones: true
}, _5k62224 = {
    id: "LS",
    displayName: "Lesoto",
    regionId: "018",
    hasTimeZones: true
}, _5k62225 = {
    id: "LT",
    displayName: "Litava",
    regionId: "154",
    hasTimeZones: true
}, _5k62226 = {
    id: "MW",
    displayName: "Malavi",
    regionId: "014",
    hasTimeZones: true
}, _5k62227 = {
    id: "MC",
    displayName: "Monako",
    regionId: "155",
    hasTimeZones: true
}, _5k62228 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _5k62229 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _5k62230 = {
    id: "ZM",
    displayName: "Sambia",
    regionId: "014",
    hasTimeZones: true
}, _5k62231 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _5k62232 = {
    id: "ES",
    displayName: "Spania",
    regionId: "039",
    hasTimeZones: true
}, _5k62233 = {
    id: "TW",
    displayName: "Taivan",
    regionId: "030",
    hasTimeZones: true
}, _5k62234 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _5k62235 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _5k62236 = {
    id: "HU",
    displayName: "Ungarn",
    regionId: "151",
    hasTimeZones: true
}, _5k62237 = {
    id: "IE",
    displayName: "Írland",
    regionId: "154",
    hasTimeZones: true
}, _5k62238 = {
    id: "IS",
    displayName: "Ísland",
    regionId: "154",
    hasTimeZones: true
}, _5k62239 = {
    id: "IL",
    displayName: "Ísrael",
    regionId: "145",
    hasTimeZones: true
}, _5k62240 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _5k62241 = {
    id: "DZ",
    displayName: "Algeria",
    regionId: "015",
    hasTimeZones: true
}, _5k62242 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _5k62243 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _5k62244 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _5k62245 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _5k62246 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _5k62247 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _5k62248 = {
    id: "DK",
    displayName: "Danmark",
    regionId: "154",
    hasTimeZones: true
}, _5k62249 = {
    id: "DJ",
    displayName: "Djibuti",
    regionId: "014",
    hasTimeZones: true
}, _5k62250 = {
    id: "EC",
    displayName: "Ekvador",
    regionId: "005",
    hasTimeZones: true
}, _5k62251 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _5k62252 = {
    id: "EE",
    displayName: "Estland",
    regionId: "154",
    hasTimeZones: true
}, _5k62253 = {
    id: "ET",
    displayName: "Etiopia",
    regionId: "014",
    hasTimeZones: true
}, _5k62254 = {
    id: "FO",
    displayName: "Føroyar",
    regionId: "154",
    hasTimeZones: true
}, _5k62255 = {
    id: "GE",
    displayName: "Georgia",
    regionId: "145",
    hasTimeZones: true
}, _5k62256 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _5k62257 = {
    id: "JM",
    displayName: "Jamaika",
    regionId: "029",
    hasTimeZones: true
}, _5k62258 = {
    id: "CM",
    displayName: "Kamerun",
    regionId: "017",
    hasTimeZones: true
}, _5k62259 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _5k62260 = {
    id: "HR",
    displayName: "Kroatia",
    regionId: "039",
    hasTimeZones: true
}, _5k62261 = {
    id: "LB",
    displayName: "Libanon",
    regionId: "145",
    hasTimeZones: true
}, _5k62262 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _5k62263 = {
    id: "MA",
    displayName: "Marokko",
    regionId: "015",
    hasTimeZones: true
}, _5k62264 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _5k62265 = {
    id: "MX",
    displayName: "Meksiko",
    regionId: "013",
    hasTimeZones: true
}, _5k62266 = {
    id: "MD",
    displayName: "Moldova",
    regionId: "151",
    hasTimeZones: true
}, _5k62267 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _5k62268 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _5k62269 = {
    id: "PL",
    displayName: "Pólland",
    regionId: "151",
    hasTimeZones: true
}, _5k62270 = {
    id: "RO",
    displayName: "Rumenia",
    regionId: "151",
    hasTimeZones: true
}, _5k62271 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _5k62272 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _5k62273 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _5k62274 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _5k62275 = {
    id: "SE",
    displayName: "Svøríki",
    regionId: "154",
    hasTimeZones: true
}, _5k62276 = {
    id: "TH",
    displayName: "Tailand",
    regionId: "035",
    hasTimeZones: true
}, _5k62277 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _5k62278 = {
    id: "TN",
    displayName: "Tunesia",
    regionId: "015",
    hasTimeZones: true
}, _5k62279 = {
    id: "UA",
    displayName: "Ukraina",
    regionId: "151",
    hasTimeZones: true
}, _5k62280 = {
    id: "UY",
    displayName: "Uruguai",
    regionId: "005",
    hasTimeZones: true
}, _5k62281 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _5k62282 = {
    id: "VN",
    displayName: "Vjetnam",
    regionId: "035",
    hasTimeZones: true
}, _5k62283 = {
    d: "d.–d. MMM y G",
    M: "d. MMM–d. MMM y G",
    y: "d. MMM y–d. MMM y G"
}, _5k62284 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _5k62285 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _5k62286 = {
    id: "BW",
    displayName: "Botsvana",
    regionId: "018",
    hasTimeZones: true
}, _5k62287 = {
    id: "BG",
    displayName: "Bulgaria",
    regionId: "151",
    hasTimeZones: true
}, _5k62288 = {
    id: "DM",
    displayName: "Dominika",
    regionId: "029",
    hasTimeZones: true
}, _5k62289 = {
    id: "FI",
    displayName: "Finnland",
    regionId: "154",
    hasTimeZones: true
}, _5k62290 = {
    id: "FR",
    displayName: "Frakland",
    regionId: "155",
    hasTimeZones: true
}, _5k62291 = {
    id: "GL",
    displayName: "Grønland",
    regionId: "021",
    hasTimeZones: true
}, _5k62292 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _5k62293 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _5k62294 = {
    id: "KH",
    displayName: "Kambodja",
    regionId: "035",
    hasTimeZones: true
}, _5k62295 = {
    id: "KG",
    displayName: "Kirgisia",
    regionId: "143",
    hasTimeZones: true
}, _5k62296 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _5k62297 = {
    id: "CO",
    displayName: "Kolombia",
    regionId: "005",
    hasTimeZones: true
}, _5k62298 = {
    id: "LV",
    displayName: "Lettland",
    regionId: "154",
    hasTimeZones: true
}, _5k62299 = {
    id: "MY",
    displayName: "Malaisia",
    regionId: "035",
    hasTimeZones: true
}, _5k62300 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _5k62301 = {
    id: "MZ",
    displayName: "Mosambik",
    regionId: "014",
    hasTimeZones: true
}, _5k62302 = {
    id: "MU",
    displayName: "Móritius",
    regionId: "014",
    hasTimeZones: true
}, _5k62303 = {
    id: "NZ",
    displayName: "Nýsæland",
    regionId: "053",
    hasTimeZones: true
}, _5k62304 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _5k62305 = {
    id: "PY",
    displayName: "Paraguai",
    regionId: "005",
    hasTimeZones: true
}, _5k62306 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _5k62307 = {
    id: "RU",
    displayName: "Russland",
    regionId: "151",
    hasTimeZones: true
}, _5k62308 = {
    id: "ZW",
    displayName: "Simbabvi",
    regionId: "014",
    hasTimeZones: true
}, _5k62309 = {
    id: "SG",
    displayName: "Singapor",
    regionId: "035",
    hasTimeZones: true
}, _5k62310 = {
    id: "SK",
    displayName: "Slovakia",
    regionId: "151",
    hasTimeZones: true
}, _5k62311 = {
    id: "SI",
    displayName: "Slovenia",
    regionId: "039",
    hasTimeZones: true
}, _5k62312 = {
    id: "TZ",
    displayName: "Tansania",
    regionId: "014",
    hasTimeZones: true
}, _5k62313 = {
    id: "DE",
    displayName: "Týskland",
    regionId: "155",
    hasTimeZones: true
}, _5k62314 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _5k62315 = {
    id: "AU",
    displayName: "Avstralia",
    regionId: "053",
    hasTimeZones: true
}, _5k62316 = {
    id: "TF",
    displayName: "Fronsku sunnaru landaøki",
    hasTimeZones: true
}, _5k62317 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _5k62318 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _5k62319 = {
    id: "ID",
    displayName: "Indonesia",
    regionId: "035",
    hasTimeZones: true
}, _5k62320 = {
    id: "KZ",
    displayName: "Kasakstan",
    regionId: "143",
    hasTimeZones: true
}, _5k62321 = {
    id: "MK",
    displayName: "Makedónia",
    regionId: "039",
    hasTimeZones: true
}, _5k62322 = {
    id: "MR",
    displayName: "Móritania",
    regionId: "011",
    hasTimeZones: true
}, _5k62323 = {
    id: "NI",
    displayName: "Nikaragua",
    regionId: "013",
    hasTimeZones: true
}, _5k62324 = {
    id: "NL",
    displayName: "Niðurlond",
    regionId: "155",
    hasTimeZones: true
}, _5k62325 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _5k62326 = {
    id: "MF",
    displayName: "St-Martin",
    regionId: "029",
    hasTimeZones: true
}, _5k62327 = {
    id: "LC",
    displayName: "St. Lusia",
    regionId: "029",
    hasTimeZones: true
}, _5k62328 = {
    id: "SZ",
    displayName: "Svasiland",
    regionId: "018",
    hasTimeZones: true
}, _5k62329 = {
    id: "TR",
    displayName: "Turkaland",
    regionId: "145",
    hasTimeZones: true
}, _5k62330 = {
    id: "VE",
    displayName: "Venesuela",
    regionId: "005",
    hasTimeZones: true
}, _5k62331 = {
    relative: _5k62147
}, _5k62332 = {
    relative: _5k62148
}, _5k62333 = {
    "0": "næsta týsdag",
    "1": "týsdagin í næstu viku",
    "-1": "seinasta týsdag"
}, _5k62334 = {
    relative: _5k62149
}, _5k62335 = {
    relative: _5k62150
}, _5k62336 = {
    "0": "næsta hósdag",
    "1": "hósdagin í næstu viku",
    "-1": "seinasta hósdag"
}, _5k62337 = {
    relative: _5k62151
}, _5k62338 = {
    relative: _5k62152
}, _5k62339 = {
    relative: _5k62153
}, _5k62340 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _5k62341 = {
    id: "AF",
    displayName: "Afganistan",
    regionId: "034",
    hasTimeZones: true
}, _5k62342 = {
    id: "AZ",
    displayName: "Aserbadjan",
    regionId: "145",
    hasTimeZones: true
}, _5k62343 = {
    id: "BD",
    displayName: "Bangladesj",
    regionId: "034",
    hasTimeZones: true
}, _5k62344 = {
    id: "EG",
    displayName: "Egyptaland",
    regionId: "015",
    hasTimeZones: true
}, _5k62345 = {
    id: "AT",
    displayName: "Eysturríki",
    regionId: "155",
    hasTimeZones: true
}, _5k62346 = {
    id: "GR",
    displayName: "Grikkaland",
    regionId: "039",
    hasTimeZones: true
}, _5k62347 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _5k62348 = {
    id: "HM",
    displayName: "Heard og McDonaldoyggjar",
    hasTimeZones: false
}, _5k62349 = {
    id: "CR",
    displayName: "Kosta Rika",
    regionId: "013",
    hasTimeZones: true
}, _5k62350 = {
    id: "LU",
    displayName: "Luksemborg",
    regionId: "155",
    hasTimeZones: true
}, _5k62351 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _5k62352 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _5k62353 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _5k62354 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _5k62355 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _5k62356 = {
    id: "SH",
    displayName: "St. Helena",
    regionId: "011",
    hasTimeZones: true
}, _5k62357 = {
    id: "KR",
    displayName: "Suðurkorea",
    regionId: "030",
    hasTimeZones: true
}, _5k62358 = {
    id: "SS",
    displayName: "Suðursudan",
    regionId: "014",
    hasTimeZones: true
}, _5k62359 = {
    id: "UZ",
    displayName: "Usbekistan",
    regionId: "143",
    hasTimeZones: true
}, _5k62360 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _5k62361 = {
    id: "TL",
    displayName: "Eysturtimor",
    regionId: "035",
    hasTimeZones: true
}, _5k62362 = {
    id: "IM",
    displayName: "Isle of Man",
    regionId: "154",
    hasTimeZones: true
}, _5k62363 = {
    id: "LI",
    displayName: "Liktinstein",
    regionId: "155",
    hasTimeZones: true
}, _5k62364 = {
    id: "KP",
    displayName: "Norðurkorea",
    regionId: "030",
    hasTimeZones: true
}, _5k62365 = {
    id: "NC",
    displayName: "Nýkaledónia",
    regionId: "054",
    hasTimeZones: true
}, _5k62366 = {
    id: "PR",
    displayName: "Puerto Riko",
    regionId: "029",
    hasTimeZones: true
}, _5k62367 = {
    id: "SA",
    displayName: "Saudiarabia",
    regionId: "145",
    hasTimeZones: true
}, _5k62368 = {
    id: "ZA",
    displayName: "Suðurafrika",
    regionId: "018",
    hasTimeZones: true
}, _5k62369 = {
    id: "VA",
    displayName: "Vatikanbýur",
    regionId: "039",
    hasTimeZones: true
}, _5k62370 = {
    id: "142",
    displayName: "Asia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5k62371 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _5k62372 = {
    id: "CK",
    displayName: "Cooksoyggjar",
    regionId: "061",
    hasTimeZones: true
}, _5k62373 = {
    id: "KM",
    displayName: "Komoroyggjar",
    regionId: "014",
    hasTimeZones: true
}, _5k62374 = {
    id: "SL",
    displayName: "Sierra Leona",
    regionId: "011",
    hasTimeZones: true
}, _5k62375 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _5k62376 = {
    id: "TJ",
    displayName: "Tadsjikistan",
    regionId: "143",
    hasTimeZones: true
}, _5k62377 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _5k62378 = {
    id: "EH",
    displayName: "Vestursahara",
    regionId: "015",
    hasTimeZones: true
}, _5k62379 = {
    relative: _5k62159
}, _5k62380 = {
    "0": "næsta mánadag",
    "1": "mánadagin í næstu viku",
    "-1": "seinasta mánadag"
}, _5k62381 = {
    relative: _5k62160
}, _5k62382 = {
    relative: _5k62161
}, _5k62383 = {
    "0": "næsta mikudag",
    "1": "mikudagin í næstu viku",
    "-1": "seinasta mikudag"
}, _5k62384 = {
    relative: _5k62162
}, _5k62385 = {
    relative: _5k62163
}, _5k62386 = {
    relative: _5k62164
}, _5k62387 = {
    relative: _5k62165
}, _5k62388 = {
    id: "BS",
    displayName: "Bahamaoyggjar",
    regionId: "029",
    hasTimeZones: true
}, _5k62389 = {
    id: "KY",
    displayName: "Caymanoyggjar",
    regionId: "029",
    hasTimeZones: true
}, _5k62390 = {
    id: "GQ",
    displayName: "Ekvatorguinea",
    regionId: "017",
    hasTimeZones: true
}, _5k62391 = {
    id: "PH",
    displayName: "Filipsoyggjar",
    regionId: "035",
    hasTimeZones: true
}, _5k62392 = {
    id: "GW",
    displayName: "Guinea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _5k62393 = {
    id: "BY",
    displayName: "Hvítarussland",
    regionId: "151",
    hasTimeZones: true
}, _5k62394 = {
    id: "MV",
    displayName: "Maldivoyggjar",
    regionId: "034",
    hasTimeZones: true
}, _5k62395 = {
    id: "NF",
    displayName: "Norfolksoyggj",
    regionId: "053",
    hasTimeZones: true
}, _5k62396 = {
    id: "BL",
    displayName: "St-Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _5k62397 = {
    id: "GB",
    displayName: "Stórabretland",
    regionId: "154",
    hasTimeZones: true
}, _5k62398 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _5k62399 = {
    id: "002",
    displayName: "Afrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5k62400 = {
    id: "150",
    displayName: "Evropa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5k62401 = {
    id: "GF",
    displayName: "Franska Gujana",
    regionId: "005",
    hasTimeZones: true
}, _5k62402 = {
    id: "MO",
    displayName: "Makao SAR Kina",
    regionId: "030",
    hasTimeZones: true
}, _5k62403 = {
    id: "PG",
    displayName: "Papua Nýguinea",
    regionId: "054",
    hasTimeZones: true
}, _5k62404 = {
    id: "SB",
    displayName: "Salomonoyggjar",
    regionId: "054",
    hasTimeZones: true
}, _5k62405 = {
    id: "019",
    displayName: "Amerika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5k62406 = {
    id: "029",
    displayName: "Karibia",
    hasTimeZones: false,
    parentRegionId: "019"
}, _5k62407 = {
    id: "MH",
    displayName: "Marshalloyggjar",
    regionId: "057",
    hasTimeZones: true
}, _5k62408 = {
    id: "143",
    displayName: "Miðasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5k62409 = {
    id: "MM",
    displayName: "Myanmar (Burma)",
    regionId: "035",
    hasTimeZones: true
}, _5k62410 = {
    id: "009",
    displayName: "Osiania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5k62411 = {
    id: "PN",
    displayName: "Pitcairnoyggjar",
    regionId: "061",
    hasTimeZones: true
}, _5k62412 = {
    id: "SC",
    displayName: "Seyskelloyggjar",
    regionId: "014",
    hasTimeZones: true
}, _5k62413 = [ "jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des" ], _5k62414 = {
    "0": "í dag",
    "1": "í morgin",
    "2": "í ovurmorgin",
    "-2": "fyrradagin",
    "-1": "í gjár"
}, _5k62415 = {
    "0": "næsta sunnudag",
    "1": "sunnudagin í næstu viku",
    "-1": "seinasta sunnudag"
}, _5k62416 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _5k62417 = {
    id: "FK",
    displayName: "Falklandsoyggjar",
    regionId: "005",
    hasTimeZones: true
}, _5k62418 = {
    id: "CV",
    displayName: "Grønhøvdaoyggjar",
    regionId: "011",
    hasTimeZones: true
}, _5k62419 = {
    id: "IO",
    displayName: "Stóra Bretlands Indiahavoyggjar",
    hasTimeZones: true
}, _5k62420 = {
    id: "AS",
    displayName: "Amerikanska Samoa",
    regionId: "061",
    hasTimeZones: true
}, _5k62421 = {
    id: "AG",
    displayName: "Antigua & Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _5k62422 = {
    id: "DO",
    displayName: "Dominikalýðveldið",
    regionId: "029",
    hasTimeZones: true
}, _5k62423 = {
    id: "PF",
    displayName: "Franska Polynesia",
    regionId: "061",
    hasTimeZones: true
}, _5k62424 = {
    id: "CI",
    displayName: "Fílabeinsstrondin",
    regionId: "011",
    hasTimeZones: true
}, _5k62425 = {
    id: "054",
    displayName: "Melanesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _5k62426 = {
    id: "017",
    displayName: "Miðafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5k62427 = {
    id: "061",
    displayName: "Polynesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _5k62428 = {
    id: "KN",
    displayName: "St. Kitts & Nevis",
    regionId: "029",
    hasTimeZones: true
}, _5k62429 = {
    id: "034",
    displayName: "Suðurasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5k62430 = {
    id: "TT",
    displayName: "Trinidad & Tobago",
    regionId: "029",
    hasTimeZones: true
}, _5k62431 = {
    id: "BA",
    displayName: "Bosnia-Hersegovina",
    regionId: "039",
    hasTimeZones: true
}, _5k62432 = {
    id: "030",
    displayName: "Eysturasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5k62433 = {
    id: "HK",
    displayName: "Hong Kong SAR Kina",
    regionId: "030",
    hasTimeZones: true
}, _5k62434 = {
    id: "CF",
    displayName: "Miðafrikalýðveldið",
    regionId: "017",
    hasTimeZones: true
}, _5k62435 = {
    id: "013",
    displayName: "Miðamerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _5k62436 = {
    id: "BQ",
    displayName: "Niðurlonds Karibia",
    regionId: "029",
    hasTimeZones: true
}, _5k62437 = {
    id: "145",
    displayName: "Vesturasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5k62438 = {
    "0": "næsta leygardag",
    "1": "leygardagin í næstu viku",
    "-1": "seinasta leygardag"
}, _5k62439 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _5k62440 = {
    id: "053",
    displayName: "Avstralasia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _5k62441 = {
    id: "FM",
    displayName: "Mikronesiasamveldið",
    regionId: "057",
    hasTimeZones: true
}, _5k62442 = {
    id: "PS",
    displayName: "Palestinskt landøki",
    regionId: "145",
    hasTimeZones: true
}, _5k62443 = {
    id: "AE",
    displayName: "Sameindu Emirríkini",
    regionId: "145",
    hasTimeZones: true
}, _5k62444 = {
    id: "ST",
    displayName: "Sao Tome & Prinsipi",
    regionId: "017",
    hasTimeZones: true
}, _5k62445 = {
    id: "039",
    displayName: "Suðurevropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _5k62446 = {
    d: "E d. MMM–E d. MMM y",
    M: "E d. MMM–E d. MMM y",
    y: "E d. MMM y–E d. MMM y G"
}, _5k62447 = [ "1. ársfjórðingur", "2. ársfjórðingur", "3. ársfjórðingur", "4. ársfjórðingur" ], _5k62448 = {
    id: "014",
    displayName: "Eysturafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5k62449 = {
    id: "151",
    displayName: "Eysturevropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _5k62450 = {
    id: "MP",
    displayName: "Norðaru Mariuoyggjar",
    regionId: "057",
    hasTimeZones: true
}, _5k62451 = {
    id: "015",
    displayName: "Norðurafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5k62452 = {
    id: "154",
    displayName: "Norðurevropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _5k62453 = {
    id: "US",
    displayName: "Sambandsríki Amerika",
    regionId: "021",
    hasTimeZones: true
}, _5k62454 = {
    id: "005",
    displayName: "Suðuramerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _5k62455 = {
    id: "SJ",
    displayName: "Svalbard & Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _5k62456 = {
    id: "011",
    displayName: "Vesturafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5k62457 = {
    id: "155",
    displayName: "Vesturevropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _5k62458 = {
    relative: _5k62333
}, _5k62459 = {
    relative: _5k62336
}, _5k62460 = {
    id: "CD",
    displayName: "Kongo, Dem. Lýðveldið",
    regionId: "017",
    hasTimeZones: true
}, _5k62461 = {
    id: "057",
    displayName: "Mikronesi øki",
    hasTimeZones: false,
    parentRegionId: "009"
}, _5k62462 = {
    id: "GS",
    displayName: "Suðurgeorgia og Suðursandwichoyggjar",
    hasTimeZones: true
}, _5k62463 = {
    d: "dd.MM.y–dd.MM.y GGGGG",
    M: "dd.MM.y–dd.MM.y GGGGG",
    y: "dd.MM.y–dd.MM.y GGGGG"
}, _5k62464 = {
    abbreviated: {
        am: "AM",
        pm: "PM"
    },
    narrow: {
        am: "AM",
        pm: "PM"
    },
    wide: {
        am: "AM",
        pm: "PM"
    }
}, _5k62465 = {
    "0": "næsta fríggjadag",
    "1": "fríggjadagin í næstu viku",
    "-1": "seinasta fríggjadag"
}, _5k62466 = {
    id: "035",
    displayName: "Útsynningsasia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5k62467 = {
    id: "TC",
    displayName: "Turks- og Caicosoyggjar",
    regionId: "029",
    hasTimeZones: true
}, _5k62468 = {
    relative: _5k62380
}, _5k62469 = {
    relative: _5k62383
}, _5k62470 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _5k62471 = {
    id: "PM",
    displayName: "Saint Pierre og Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _5k62472 = {
    id: "WF",
    displayName: "Wallis- og Futunaoyggjar",
    regionId: "061",
    hasTimeZones: true
}, _5k62473 = {
    id: "UM",
    displayName: "Sambandsríki Amerikas fjarskotnu oyggjar",
    hasTimeZones: true
}, _5k62474 = [ "jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des." ], _5k62475 = {
    relative: _5k62415
}, _5k62476 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _5k62477 = {
    id: "VC",
    displayName: "St. Vinsent & Grenadinoyggjar",
    regionId: "029",
    hasTimeZones: true
}, _5k62478 = {
    id: "VG",
    displayName: "Stóra Bretlands Jomfrúoyggjar",
    regionId: "029",
    hasTimeZones: true
}, _5k62479 = {
    relative: _5k62438
}, _5k62480 = [ "sunnudagur", "mánadagur", "týsdagur", "mikudagur", "hósdagur", "fríggjadagur", "leygardagur" ], _5k62481 = {
    id: "018",
    displayName: "sunnari partur av Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5k62482 = {
    relative: _5k62465
}, _5k62483 = {
    d: "E dd.MM.y–E dd.MM.y GGGGG",
    M: "E dd.MM.y–E dd.MM.y GGGGG",
    y: "E dd.MM.y–E dd.MM.y GGGGG"
}, _5k62484 = {
    future: _5k6245,
    past: _5k6293
}, _5k62485 = {
    future: _5k6246,
    past: _5k6294
}, _5k62486 = {
    future: _5k6247,
    past: _5k6295
}, _5k62487 = {
    future: _5k6248,
    past: _5k6296
}, _5k62488 = {
    future: _5k6249,
    past: _5k6297
}, _5k62489 = {
    future: _5k6250,
    past: _5k6298
}, _5k62490 = {
    id: "021",
    displayName: "Amerika norðanfyri Meksiko",
    hasTimeZones: false,
    parentRegionId: "019"
}, _5k62491 = {
    id: "VI",
    displayName: "Sambandsríki Amerikas Jomfrúoyggjar",
    regionId: "029",
    hasTimeZones: true
}, _5k62492 = {
    future: _5k6268,
    past: _5k62107
}, _5k62493 = {
    future: _5k6269,
    past: _5k62108
}, _5k62494 = {
    future: _5k6279,
    past: _5k62113
}, _5k62495 = {
    future: _5k6281,
    past: _5k62115
}, _5k62496 = {
    future: _5k6282,
    past: _5k62116
}, _5k62497 = {
    future: _5k6283,
    past: _5k62117
}, _5k62498 = {
    future: _5k6280,
    past: _5k62119
}, _5k62499 = {
    future: _5k6284,
    past: _5k62118
}, _5k62500 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _5k62501 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _5k62502 = {
    future: _5k62105,
    past: _5k62123
}, _5k62503 = {
    future: _5k62106,
    past: _5k62124
}, _5k62504 = {
    future: _5k62109,
    past: _5k62125
}, _5k62505 = [ "januar", "februar", "mars", "apríl", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember" ], _5k62506 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _5k62507 = {
    future: _5k62114,
    past: _5k62132
}, _5k62508 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _5k62509 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _5k62510 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _5k62511 = {
    displayName: "ár",
    relativeTime: _5k62484
}, _5k62512 = {
    displayName: "v.",
    relativeTime: _5k62485
}, _5k62513 = {
    displayName: "d.",
    relativeTime: _5k62486
}, _5k62514 = {
    displayName: "t.",
    relativeTime: _5k62487
}, _5k62515 = {
    displayName: "m.",
    relativeTime: _5k62488
}, _5k62516 = {
    displayName: "s.",
    relativeTime: _5k62489
}, _5k62517 = {
    displayName: "vi.",
    relativeTime: _5k62492
}, _5k62518 = {
    displayName: "da.",
    relativeTime: _5k62493
}, _5k62519 = {
    future: _5k62145,
    past: _5k62168
}, _5k62520 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _5k62521 = {
    displayName: "mnð.",
    relativeTime: _5k62494
}, _5k62522 = {
    displayName: "min.",
    relativeTime: _5k62495
}, _5k62523 = {
    displayName: "sek.",
    relativeTime: _5k62496
}, _5k62524 = {
    displayName: "tími",
    relativeTime: _5k62499
}, _5k62525 = {
    displayName: "ársfj.",
    relativeTime: _5k62502
}, _5k62526 = {
    displayName: "minuttur",
    relativeTime: _5k62507
}, _5k62527 = {
    displayName: "sekund",
    relative: [ "now" ],
    relativeTime: _5k62504
}, _5k62528 = {
    displayName: "ár",
    relative: _5k6267,
    relativeTime: _5k62484
}, _5k62529 = {
    abbreviated: _5k62122,
    narrow: [ "1", "2", "3", "4" ],
    wide: _5k62447
}, _5k62530 = {
    decimal: ",",
    group: ".",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "−",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _5k62531 = {
    format: _5k62464,
    standAlone: _5k62464
}, _5k62532 = {
    symbols: _5k62530
}, _5k62533 = {
    format: _5k62398,
    numeric: _5k623,
    standAlone: _5k62398
}, _5k62534 = {
    displayName: "vika",
    relative: _5k62131,
    relativeTime: _5k62497
}, _5k62535 = {
    displayName: "mánaður",
    relative: _5k62154,
    relativeTime: _5k62503
}, _5k62536 = {
    symbols: _5k62530,
    digits: "renderSpelloutCardinal"
}, _5k62537 = {
    displayName: "dagur",
    relative: _5k62414,
    relativeTime: _5k62498
}, _5k62538 = {
    symbols: _5k62530,
    digits: "renderSpelloutCardinalFinancial"
}, _5k62539 = {
    abbreviated: _5k62416,
    narrow: _5k62136,
    wide: _5k62416
}, _5k62540 = {
    abbreviated: _5k62104,
    narrow: _5k6213,
    wide: _5k62480,
    "short": _5k6252
}, _5k62541 = {
    displayName: "ársfjórðingur",
    relative: _5k62144,
    relativeTime: _5k62519
}, _5k62542 = {
    abbreviated: _5k62128,
    narrow: _5k6213,
    wide: _5k62480,
    "short": _5k62103
}, _5k62543 = {
    abbreviated: _5k62439,
    narrow: _5k62439,
    wide: _5k62439
}, _5k62544 = {
    abbreviated: _5k62413,
    narrow: _5k62121,
    wide: _5k62505
}, _5k62545 = {
    format: _5k62543
}, _5k62546 = {
    abbreviated: _5k62474,
    narrow: _5k62121,
    wide: _5k62505
}, _5k62547 = {
    abbreviated: _5k62501,
    narrow: _5k62156,
    wide: _5k62501
}, _5k62548 = {
    abbreviated: _5k62506,
    narrow: _5k62136,
    wide: _5k62506
}, _5k62549 = {
    abbreviated: _5k62508,
    narrow: _5k62156,
    wide: _5k62508
}, _5k62550 = {
    abbreviated: _5k62500,
    narrow: _5k62136,
    wide: _5k62520
}, _5k62551 = {
    abbreviated: _5k62509,
    narrow: _5k62156,
    wide: _5k62509
}, _5k62552 = {
    abbreviated: _5k62510,
    narrow: _5k62136,
    wide: _5k62510
}, _5k62553 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _5k62554 = {
    format: _5k62529,
    standAlone: _5k62529
}, _5k62555 = {
    fullDate: "EEEE, dd. MMMM y G",
    longDate: "d. MMMM y G",
    mediumDate: "d. MMM y G",
    shortDate: "dd.MM.y GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd.MM.y GGGGG, HH:mm",
    mediumDateTime: "d. MMM y G, HH:mm:ss",
    longDateTime: "d. MMMM y G 'kl'. HH:mm:ss z",
    fullDateTime: "EEEE, dd. MMMM y G 'kl'. HH:mm:ss zzzz"
}, _5k62556 = {
    format: _5k62539,
    standAlone: _5k62539
}, _5k62557 = {
    "1000": _5k6224,
    "10000": _5k6240,
    "100000": _5k6258,
    "1000000": _5k6225,
    "10000000": _5k6241,
    "100000000": _5k6259,
    "1000000000": _5k6226,
    "10000000000": _5k6242,
    "100000000000": _5k6260,
    "1000000000000": _5k6227,
    "10000000000000": _5k6243,
    "100000000000000": _5k6261
}, _5k62558 = {
    format: _5k62542,
    standAlone: _5k62540
}, _5k62559 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _5k62560 = {
    "1000": _5k6262,
    "10000": _5k6274,
    "100000": _5k6287,
    "1000000": _5k6263,
    "10000000": _5k6275,
    "100000000": _5k6288,
    "1000000000": _5k6264,
    "10000000000": _5k6276,
    "100000000000": _5k6289,
    "1000000000000": _5k6265,
    "10000000000000": _5k6277,
    "100000000000000": _5k6290
}, _5k62561 = {
    "1000": _5k6223,
    "10000": _5k6239,
    "100000": _5k6255,
    "1000000": _5k6256,
    "10000000": _5k6285,
    "100000000": _5k62100,
    "1000000000": _5k6273,
    "10000000000": _5k62101,
    "100000000000": _5k62111,
    "1000000000000": _5k6257,
    "10000000000000": _5k6286,
    "100000000000000": _5k62102
}, _5k62562 = {
    format: _5k62546,
    standAlone: _5k62544
}, _5k62563 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _5k62564 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _5k62565 = {
    format: _5k62550,
    standAlone: _5k62550
}, _5k62566 = {
    d: "d.",
    E: "ccc",
    Ed: "E d.",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d. MMM y G",
    GyMMMEd: "E d. MMM y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "dd.MM",
    MEd: "E dd.MM",
    MMM: "LLL",
    MMMd: "d. MMM",
    MMMEd: "E d. MMM",
    MMMMd: "d. MMMM",
    ms: "mm:ss",
    y: "y G",
    yM: "MM.y",
    yMd: "dd.MM.y",
    yMEd: "E dd.MM.y",
    yMMM: "MMM y",
    yMMMd: "d. MMM y",
    yMMMEd: "E d. MMM y",
    yQQQ: "QQQ 'í' y",
    yQQQQ: "QQQQ 'í' y",
    yyyy: "y G",
    yyyyM: "MM.y GGGGG",
    yyyyMd: "dd.MM.y GGGGG",
    yyyyMEd: "E dd.MM.y GGGGG",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d. MMM y G",
    yyyyMMMEd: "E d. MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ 'í' y G",
    yyyyQQQQ: "QQQQ 'í' y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _5k62567 = {
    basic: _5k62553,
    cldr: _5k62559
}, _5k62568 = {
    d: {
        d: "d–d"
    },
    h: _5k626,
    H: {
        H: "HH–HH"
    },
    hm: _5k62138,
    Hm: _5k6228,
    hmv: _5k62158,
    Hmv: _5k6266,
    hv: _5k6212,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _5k6270,
    MEd: _5k62126,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _5k6219,
    MMMEd: _5k62127,
    y: {
        y: "U–U"
    },
    yM: _5k6231,
    yMd: _5k62340,
    yMEd: _5k62476,
    yMMM: _5k6232,
    yMMMd: _5k62155,
    yMMMEd: _5k62470,
    yMMMM: _5k6271
}, _5k62569 = {
    d: {
        d: "d.–d."
    },
    h: _5k626,
    H: {
        H: "HH–HH"
    },
    hm: _5k62138,
    Hm: _5k6228,
    hmv: _5k62158,
    Hmv: _5k6266,
    hv: _5k6212,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _5k6229,
    MEd: _5k6291,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _5k6230,
    MMMEd: _5k62112,
    y: {
        y: "y–y G"
    },
    yM: _5k6292,
    yMd: _5k62463,
    yMEd: _5k62483,
    yMMM: _5k6244,
    yMMMd: _5k62283,
    yMMMEd: _5k62446,
    yMMMM: _5k6278
}, _5k62570 = {
    basic: _5k62555,
    cldr: _5k62566
}, _5k62571 = {
    "long": _5k62561,
    "short": _5k62557,
    "default": "#,##0.###"
}, _5k62572 = {
    beforeCurrency: _5k62563,
    afterCurrency: _5k62563
}, _5k62573 = {
    "short": _5k62560,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _5k62572
}, _5k62574 = {
    abbreviated: _5k62564,
    narrow: _5k62564,
    wide: _5k62564
}, _5k62575 = {
    format: _5k62574
}, _5k62576 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _5k62571,
    currency: _5k62573,
    percent: _5k621
}, _5k62577 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _5k62578 = {
    era: _5k6210,
    year: _5k62528,
    "year-short": _5k62511,
    "year-narrow": _5k62511,
    quarter: _5k62541,
    "quarter-short": _5k62525,
    "quarter-narrow": _5k62525,
    month: _5k62535,
    "month-short": _5k62521,
    "month-narrow": _5k62521,
    week: _5k62534,
    "week-short": _5k62517,
    "week-narrow": _5k62512,
    day: _5k62537,
    "day-short": _5k62518,
    "day-narrow": _5k62513,
    weekday: _5k6214,
    dayperiod: _5k622,
    hour: _5k62524,
    "hour-short": _5k62514,
    "hour-narrow": _5k62514,
    minute: _5k62526,
    "minute-short": _5k62522,
    "minute-narrow": _5k62515,
    second: _5k62527,
    "second-short": _5k62523,
    "second-narrow": _5k62516,
    zone: _5k624,
    sun: _5k62475,
    "sun-short": _5k62379,
    "sun-narrow": _5k62331,
    mon: _5k62468,
    "mon-short": _5k62381,
    "mon-narrow": _5k62332,
    tue: _5k62458,
    "tue-short": _5k62382,
    "tue-narrow": _5k62334,
    wed: _5k62469,
    "wed-short": _5k62384,
    "wed-narrow": _5k62335,
    thu: _5k62459,
    "thu-short": _5k62385,
    "thu-narrow": _5k62337,
    fri: _5k62482,
    "fri-short": _5k62386,
    "fri-narrow": _5k62338,
    sat: _5k62479,
    "sat-short": _5k62387,
    "sat-narrow": _5k62339
}, _5k62579 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _5k62578
}, _5k62580 = {
    dayParts: _5k62545,
    days: _5k62575,
    months: _5k62575,
    years: _5k62575,
    zodiacs: _5k62545
}, _5k62581 = {
    dateFormats: _5k62570,
    datePartsOrder: "dmy",
    dateIntervalFormats: _5k62569,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _5k62558,
    dayPeriods: _5k62531,
    monthNames: _5k62565,
    eraNames: _5k6220,
    quarterNames: _5k62554,
    fields: _5k62578
}, _5k62582 = {
    dateFormats: _5k62567,
    datePartsOrder: "md",
    dateIntervalFormats: _5k62568,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _5k62558,
    dayPeriods: _5k62531,
    cyclicNames: _5k62580,
    monthNames: _5k62556,
    monthPatterns: _5k62533,
    quarterNames: _5k62554,
    fields: _5k62578
};

inter.id = "fo";

inter.listPatterns = {
    "default": {
        "2": "{0} og {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0} og {1}"
    },
    unit: {
        "2": "{0}, {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0} og {1}"
    },
    unitNarrow: {
        "2": "{0} {1}",
        start: "{0} {1}",
        middle: "{0} {1}",
        end: "{0} {1}"
    },
    unitShort: P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} G-kraft",
                other: "{0} G-kreftir"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} metur um sekundi²",
                other: "{0} metrar um sekundi²"
            },
            angleRevolution: {
                one: "{0} snúningur",
                other: "{0} snúningar"
            },
            angleRadian: {
                one: "{0} radian",
                other: "{0} radianir"
            },
            angleDegree: _5k6221,
            angleArcMinute: {
                one: "{0} bogaminuttur",
                other: "{0} bogaminuttir"
            },
            angleArcSecond: {
                one: "{0} bogasekund",
                other: "{0} bogasekundir"
            },
            areaSquareKilometer: {
                one: "{0} ferkilometur",
                other: "{0} ferkilometrar"
            },
            areaHectare: {
                one: "{0} hektari",
                other: "{0} hektarar"
            },
            areaSquareMeter: {
                one: "{0} fermetur",
                other: "{0} fermetrar"
            },
            areaSquareCentimeter: {
                one: "{0} fersentimetur",
                other: "{0} fersentimetrar"
            },
            areaSquareMile: {
                one: "{0} fermíl",
                other: "{0} fermíl"
            },
            areaAcre: _5k6233,
            areaSquareYard: {
                one: "{0} feryard",
                other: "{0} feryards"
            },
            areaSquareFoot: {
                one: "{0} ferfót",
                other: "{0} ferføtur"
            },
            areaSquareInch: {
                one: "{0} fertummi",
                other: "{0} fertummar"
            },
            concentrKarat: _5k6236,
            consumptionLiterPerKilometer: {
                one: "{0} litur fyri hvønn kilometrar",
                other: "{0} litrar fyri hvønn kilometrar"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} litur fyri hvørjar 100 kilometrar",
                other: "{0} litrar fyri hvørjar 100 kilometrar"
            },
            consumptionMilePerGallon: {
                one: "{0} míl fyri hvønn gallon",
                other: "{0} míl fyri hvønn gallon"
            },
            digitalTerabyte: {
                one: "{0} terabýt",
                other: "{0} terabýt"
            },
            digitalTerabit: {
                one: "{0} terabit",
                other: "{0} terabit"
            },
            digitalGigabyte: {
                one: "{0} gigabýt",
                other: "{0} gigabýt"
            },
            digitalGigabit: {
                one: "{0} gigabit",
                other: "{0} gigabit"
            },
            digitalMegabyte: {
                one: "{0} megabýt",
                other: "{0} megabýt"
            },
            digitalMegabit: {
                one: "{0} megabit",
                other: "{0} megabit"
            },
            digitalKilobyte: {
                one: "{0} kilobýt",
                other: "{0} kilobýt"
            },
            digitalKilobit: {
                one: "{0} kilobit",
                other: "{0} kilobit"
            },
            digitalByte: _5k6215,
            digitalBit: _5k6216,
            durationCentury: {
                one: "{0} øld",
                other: "{0} øldir"
            },
            durationYear: _5k6211,
            durationMonth: {
                one: "{0} mánaður",
                other: "{0} mánaðir"
            },
            durationWeek: {
                one: "{0} vika",
                other: "{0} vikur"
            },
            durationDay: {
                one: "{0} dagur",
                other: "{0} dagar"
            },
            durationHour: {
                one: "{0} tími",
                other: "{0} tímar"
            },
            durationMinute: {
                one: "{0} minuttur",
                other: "{0} minuttir"
            },
            durationSecond: {
                one: "{0} sekund",
                other: "{0} sekundir"
            },
            durationMillisecond: {
                one: "{0} millisekund",
                other: "{0} millisekundir"
            },
            durationMicrosecond: {
                one: "{0} mikrosekund",
                other: "{0} mikrosekundir"
            },
            durationNanosecond: {
                one: "{0} nanosekund",
                other: "{0} nanosekundir"
            },
            electricAmpere: {
                one: "{0} ampera",
                other: "{0} amperur"
            },
            electricMilliampere: {
                one: "{0} milliampera",
                other: "{0} milliamperur"
            },
            electricOhm: {
                one: "{0} ohm",
                other: "{0} ohm"
            },
            electricVolt: {
                one: "{0} volt",
                other: "{0} volt"
            },
            energyKilocalorie: {
                one: "{0} kilokaloria",
                other: "{0} kilokaloriur"
            },
            energyCalorie: {
                one: "{0} kaloria",
                other: "{0} kaloriur"
            },
            energyFoodcalorie: _5k62120,
            energyKilojoule: {
                one: "{0} kilojoule",
                other: "{0} kilojoule"
            },
            energyJoule: {
                one: "{0} joule",
                other: "{0} joule"
            },
            energyKilowattHour: {
                one: "{0} kilowatttími",
                other: "{0} kilowatttímar"
            },
            frequencyGigahertz: {
                one: "{0} gigahertz",
                other: "{0} gigahertz"
            },
            frequencyMegahertz: {
                one: "{0} megahertz",
                other: "{0} megahertz"
            },
            frequencyKilohertz: {
                one: "{0} kilohertz",
                other: "{0} kilohertz"
            },
            frequencyHertz: {
                one: "{0} hertz",
                other: "{0} hertz"
            },
            lengthKilometer: {
                one: "{0} kilometur",
                other: "{0} kilometrar"
            },
            lengthMeter: {
                one: "{0} metur",
                other: "{0} metrar"
            },
            lengthDecimeter: {
                one: "{0} desimetur",
                other: "{0} desimetrar"
            },
            lengthCentimeter: {
                one: "{0} sentimetur",
                other: "{0} sentimetrar"
            },
            lengthMillimeter: {
                one: "{0} millimetur",
                other: "{0} millimetrar"
            },
            lengthMicrometer: {
                one: "{0} mikrometur",
                other: "{0} mikrometrar"
            },
            lengthNanometer: {
                one: "{0} nanometur",
                other: "{0} nanometrar"
            },
            lengthPicometer: {
                one: "{0} picometur",
                other: "{0} picometrar"
            },
            lengthMile: _5k6217,
            lengthYard: {
                one: "{0} yard",
                other: "{0} yards"
            },
            lengthFoot: _5k6237,
            lengthInch: {
                one: "{0} tummi",
                other: "{0} tummar"
            },
            lengthParsec: {
                one: "{0} parsec",
                other: "{0} parsecs"
            },
            lengthLightYear: _5k6253,
            lengthAstronomicalUnit: {
                one: "{0} stjørnufrøðilig eind",
                other: "{0} stjørnufrøðiligar eindir"
            },
            lengthNauticalMile: {
                one: "{0} sjómíl",
                other: "{0} sjómíl"
            },
            lengthMileScandinavian: {
                one: "{0} skandinaviskt míl",
                other: "{0} skandinaviskt míl"
            },
            lightLux: {
                one: "{0} luks",
                other: "{0} luks"
            },
            massMetricTon: {
                one: "{0} tons",
                other: "{0} tons"
            },
            massKilogram: {
                one: "{0} kilogramm",
                other: "{0} kilogramm"
            },
            massGram: {
                one: "{0} gramm",
                other: "{0} gramm"
            },
            massMilligram: {
                one: "{0} milligramm",
                other: "{0} milligramm"
            },
            massMicrogram: {
                one: "{0} mikrogramm",
                other: "{0} mikrogramm"
            },
            massTon: {
                one: "{0} stutt tons",
                other: "{0} stutt tons"
            },
            massPound: _5k6222,
            massOunce: _5k6234,
            massOunceTroy: _5k62110,
            massCarat: _5k6236,
            powerGigawatt: {
                one: "{0} gigawatt",
                other: "{0} gigawatt"
            },
            powerMegawatt: {
                one: "{0} megawatt",
                other: "{0} megawatt"
            },
            powerKilowatt: {
                one: "{0} kilowatt",
                other: "{0} kilowatt"
            },
            powerWatt: {
                one: "{0} watt",
                other: "{0} watt"
            },
            powerMilliwatt: {
                one: "{0} milliwatt",
                other: "{0} milliwatt"
            },
            powerHorsepower: {
                one: "{0} hestakraft",
                other: "{0} hestakreftur"
            },
            pressureHectopascal: {
                one: "{0} hektopascal",
                other: "{0} hektopascal"
            },
            pressureMillimeterOfMercury: {
                one: "{0} millimetur av kviksilvur",
                other: "{0} millimetrar av kviksilvur"
            },
            pressurePoundPerSquareInch: _5k6218,
            pressureInchHg: {
                one: "{0} tummi av kviksilvur",
                other: "{0} tummar av kviksilvur"
            },
            pressureMillibar: {
                one: "{0} millibar",
                other: "{0} millibar"
            },
            speedKilometerPerHour: {
                one: "{0} kilometur um tíman",
                other: "{0} kilometrar um tíman"
            },
            speedMeterPerSecond: {
                one: "{0} metur um sekundi",
                other: "{0} metrar um sekundi"
            },
            speedMilePerHour: _5k6238,
            speedKnot: {
                one: "{0} sjómíl um tíman",
                other: "{0} sjómíl um tíman"
            },
            temperatureGeneric: _5k625,
            temperatureCelsius: {
                one: "{0} stig Celsius",
                other: "{0} stig Celsius"
            },
            temperatureFahrenheit: {
                one: "{0} stig Fahrenheit",
                other: "{0} stig Fahrenheit"
            },
            temperatureKelvin: {
                one: "{0} Kelvin",
                other: "{0} Kelvin"
            },
            volumeCubicKilometer: {
                one: "{0} kubikkkilometur",
                other: "{0} kubikkkilometrar"
            },
            volumeCubicMeter: {
                one: "{0} kubikkmetur",
                other: "{0} kubikkmetrar"
            },
            volumeCubicCentimeter: {
                one: "{0} kubikksentimetur",
                other: "{0} kubikksentimetrar"
            },
            volumeCubicMile: {
                one: "{0} kubikkmíl",
                other: "{0} kubikkmíl"
            },
            volumeCubicYard: {
                one: "{0} kubikkyard",
                other: "{0} kubikkyards"
            },
            volumeCubicFoot: {
                one: "{0} kubikkfótur",
                other: "{0} kubikkføtur"
            },
            volumeCubicInch: {
                one: "{0} kubikktummi",
                other: "{0} kubikktummar"
            },
            volumeMegaliter: {
                one: "{0} megalitur",
                other: "{0} megalitrar"
            },
            volumeHectoliter: {
                one: "{0} hektolitur",
                other: "{0} hektolitrar"
            },
            volumeLiter: {
                one: "{0} litur",
                other: "{0} litrar"
            },
            volumeDeciliter: {
                one: "{0} desilitur",
                other: "{0} desilitrar"
            },
            volumeCentiliter: {
                one: "{0} sentilitur",
                other: "{0} sentilitrar"
            },
            volumeMilliliter: {
                one: "{0} millilitur",
                other: "{0} millilitrar"
            },
            volumePintMetric: _5k62134,
            volumeCupMetric: _5k62143,
            volumeAcreFoot: _5k6299,
            volumeGallon: _5k6272,
            volumeQuart: _5k6251,
            volumePint: _5k6235,
            volumeCup: _5k6254,
            volumeFluidOunce: _5k62135,
            volumeTablespoon: {
                one: "{0} súpiskeið",
                other: "{0} súpiskeiðir"
            },
            volumeTeaspoon: {
                one: "{0} teskeið",
                other: "{0} teskeiðir"
            }
        },
        compoundUnit: {
            per: "{0} á {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                one: "{0} G",
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: {
                one: "{0} snú.",
                other: "{0} snú."
            },
            angleRadian: {
                one: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: _5k6221,
            angleArcMinute: {
                one: "{0} bogamin.",
                other: "{0} bogamin."
            },
            angleArcSecond: {
                one: "{0} bogasek.",
                other: "{0} bogasek."
            },
            areaSquareKilometer: {
                one: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                one: "{0} ha",
                other: "{0} ha"
            },
            areaSquareMeter: {
                one: "{0} m²",
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: {
                one: "{0} míl²",
                other: "{0} míl²"
            },
            areaAcre: _5k6233,
            areaSquareYard: {
                one: "{0} yard²",
                other: "{0} yards²"
            },
            areaSquareFoot: {
                one: "{0} fót²",
                other: "{0} føtur²"
            },
            areaSquareInch: {
                one: "{0} tum.²",
                other: "{0} tum.²"
            },
            concentrKarat: _5k6236,
            consumptionLiterPerKilometer: {
                one: "{0} l/km",
                other: "{0} l/km"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} l/100 km",
                other: "{0} l/100 km"
            },
            consumptionMilePerGallon: {
                one: "{0} míl/gallon",
                other: "{0} míl/gallon"
            },
            digitalTerabyte: {
                one: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: {
                one: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: {
                one: "{0} KB",
                other: "{0} KB"
            },
            digitalKilobit: {
                one: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: _5k6215,
            digitalBit: _5k6216,
            durationCentury: {
                one: "{0} ø.",
                other: "{0} ø."
            },
            durationYear: _5k6211,
            durationMonth: {
                one: "{0} mán.",
                other: "{0} mán."
            },
            durationWeek: {
                one: "{0} vi.",
                other: "{0} vi."
            },
            durationDay: {
                one: "{0} d.",
                other: "{0} d."
            },
            durationHour: {
                one: "{0} t.",
                other: "{0} t."
            },
            durationMinute: {
                one: "{0} min.",
                other: "{0} min."
            },
            durationSecond: {
                one: "{0} sek.",
                other: "{0} sek."
            },
            durationMillisecond: {
                one: "{0} ms.",
                other: "{0} ms."
            },
            durationMicrosecond: {
                one: "{0} μs.",
                other: "{0} μs."
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: {
                one: "{0} kcal",
                other: "{0} kcal"
            },
            energyCalorie: {
                one: "{0} kal.",
                other: "{0} kal."
            },
            energyFoodcalorie: _5k62120,
            energyKilojoule: {
                one: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: {
                one: "{0} km",
                other: "{0} km"
            },
            lengthMeter: {
                one: "{0} m",
                other: "{0} m"
            },
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: {
                one: "{0} cm",
                other: "{0} cm"
            },
            lengthMillimeter: {
                one: "{0} mm",
                other: "{0} mm"
            },
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: {
                one: "{0} pm",
                other: "{0} pm"
            },
            lengthMile: _5k6217,
            lengthYard: {
                one: "{0} yd",
                other: "{0} yd"
            },
            lengthFoot: _5k6237,
            lengthInch: {
                one: "{0} tum.",
                other: "{0} tum."
            },
            lengthParsec: {
                one: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: _5k6253,
            lengthAstronomicalUnit: {
                one: "{0} au",
                other: "{0} au"
            },
            lengthNauticalMile: {
                one: "{0} sm",
                other: "{0} sm"
            },
            lengthMileScandinavian: {
                one: "{0} sk. míl",
                other: "{0} sk. míl"
            },
            lightLux: {
                one: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: {
                one: "{0} t",
                other: "{0} t"
            },
            massKilogram: {
                one: "{0} kg",
                other: "{0} kg"
            },
            massGram: {
                one: "{0} g",
                other: "{0} g"
            },
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} µg",
                other: "{0} µg"
            },
            massTon: {
                one: "{0} stutt t",
                other: "{0} stutt t"
            },
            massPound: _5k6222,
            massOunce: _5k6234,
            massOunceTroy: _5k62110,
            massCarat: {
                one: "{0} CD",
                other: "{0} CD"
            },
            powerGigawatt: {
                one: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: {
                one: "{0} kW",
                other: "{0} kW"
            },
            powerWatt: {
                one: "{0} W",
                other: "{0} W"
            },
            powerMilliwatt: {
                one: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: {
                one: "{0} hk",
                other: "{0} hk"
            },
            pressureHectopascal: {
                one: "{0} hPa",
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                one: "{0} mmHg",
                other: "{0} mmHg"
            },
            pressurePoundPerSquareInch: _5k6218,
            pressureInchHg: {
                one: "{0} inHg",
                other: "{0} inHg"
            },
            pressureMillibar: {
                one: "{0} mb",
                other: "{0} mb"
            },
            speedKilometerPerHour: {
                one: "{0} km/t",
                other: "{0} km/t"
            },
            speedMeterPerSecond: {
                one: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: _5k6238,
            speedKnot: {
                one: "{0} smíl/t",
                other: "{0} smíl/t"
            },
            temperatureGeneric: _5k625,
            temperatureCelsius: {
                one: "{0}°C",
                other: "{0}°C"
            },
            temperatureFahrenheit: _5k628,
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: {
                one: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMeter: {
                one: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: {
                one: "{0} míl³",
                other: "{0} míl³"
            },
            volumeCubicYard: {
                one: "{0} yard³",
                other: "{0} yards³"
            },
            volumeCubicFoot: {
                one: "{0} fótur³",
                other: "{0} føtur³"
            },
            volumeCubicInch: {
                one: "{0} tum.³",
                other: "{0} tum.³"
            },
            volumeMegaliter: {
                one: "{0} Ml",
                other: "{0} Ml"
            },
            volumeHectoliter: {
                one: "{0} hl",
                other: "{0} hl"
            },
            volumeLiter: {
                one: "{0} l",
                other: "{0} l"
            },
            volumeDeciliter: {
                one: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} cl",
                other: "{0} cl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                other: "{0} ml"
            },
            volumePintMetric: _5k62134,
            volumeCupMetric: _5k62143,
            volumeAcreFoot: _5k6299,
            volumeGallon: _5k6272,
            volumeQuart: _5k6251,
            volumePint: _5k6235,
            volumeCup: _5k6254,
            volumeFluidOunce: _5k62135,
            volumeTablespoon: {
                one: "{0} súpisk.",
                other: "{0} súpisk."
            },
            volumeTeaspoon: {
                one: "{0} tesk.",
                other: "{0} tesk."
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            massStone: {
                other: "{0} st"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                one: "{0}G",
                other: "{0}G"
            },
            angleDegree: _5k625,
            angleArcMinute: {
                one: "{0}′",
                other: "{0}′"
            },
            angleArcSecond: {
                one: "{0}″",
                other: "{0}″"
            },
            areaSquareKilometer: {
                one: "{0}km²",
                other: "{0}km²"
            },
            areaHectare: {
                one: "{0}ha",
                other: "{0}ha"
            },
            areaSquareMeter: {
                one: "{0}m²",
                other: "{0}m²"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0}l/100km",
                other: "{0}l/100km"
            },
            durationYear: {
                one: "{0}ár",
                other: "{0}ár"
            },
            durationMonth: _5k629,
            durationWeek: {
                one: "{0}v.",
                other: "{0}v."
            },
            durationDay: {
                one: "{0}d.",
                other: "{0}d."
            },
            durationHour: {
                one: "{0}t.",
                other: "{0}t."
            },
            durationMinute: _5k629,
            durationSecond: {
                one: "{0}s.",
                other: "{0}s."
            },
            durationMillisecond: {
                one: "{0}ms.",
                other: "{0}ms."
            },
            lengthKilometer: {
                one: "{0}km",
                other: "{0}km"
            },
            lengthMeter: {
                one: "{0}m",
                other: "{0}m"
            },
            lengthCentimeter: {
                one: "{0}cm",
                other: "{0}cm"
            },
            lengthMillimeter: {
                one: "{0}mm",
                other: "{0}mm"
            },
            lengthPicometer: {
                one: "{0}pm",
                other: "{0}pm"
            },
            massKilogram: {
                one: "{0}kg",
                other: "{0}kg"
            },
            massGram: {
                one: "{0}g",
                other: "{0}g"
            },
            powerKilowatt: {
                one: "{0}kW",
                other: "{0}kW"
            },
            powerWatt: {
                one: "{0}W",
                other: "{0}W"
            },
            pressureHectopascal: {
                one: "{0}hPa",
                other: "{0}hPa"
            },
            pressureMillibar: {
                one: "{0}mbar",
                other: "{0}mbar"
            },
            speedKilometerPerHour: {
                one: "{0}km/t",
                other: "{0}km/t"
            },
            speedMeterPerSecond: {
                one: "{0}m/s",
                other: "{0}m/s"
            },
            temperatureCelsius: _5k625,
            temperatureFahrenheit: _5k628,
            volumeCubicKilometer: {
                one: "{0}km³",
                other: "{0}km³"
            },
            volumeLiter: {
                one: "{0}l",
                other: "{0}l"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "{0} tíð",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} summartíð",
        standard: "{0} vanlig tíð"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "á", "b", "d", "ð", "e", "f", "g", "h", "i", "í", "j", "k", "l", "m", "n", "o", "ó", "p", "r", "s", "t", "u", "ú", "v", "y", "ý", "æ", "ø" ],
        auxiliary: [ "c", "q", "w", "x", "z" ],
        index: [ "A", "Á", "B", "C", "D", "Ð", "E", "F", "G", "H", "I", "Í", "J", "K", "L", "M", "N", "O", "Ó", "P", "Q", "R", "S", "T", "U", "Ú", "V", "W", "X", "Y", "Ý", "Z", "Æ", "Ø" ],
        punctuation: [ "\\-", "‐", "–", ",", ";", "\\:", "!", "?", ".", "…", "'", "‘", "’", '"', "“", "”", "(", ")", "\\[", "\\]", "§", "@", "*", "/", "\\&", "#", "†", "′", "″" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _5k62530,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _5k62576,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _5k62576,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _5k62530,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _5k62530,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _5k62530,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _5k62530,
        digits: "renderEthiopic"
    },
    finance: _5k62532,
    fullwide: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _5k62530,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _5k62530,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _5k62530,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _5k62530,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _5k62536,
    hansfin: _5k62538,
    hant: _5k62536,
    hantfin: _5k62538,
    hebr: {
        symbols: _5k62530,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _5k62530,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _5k62536,
    jpanfin: _5k62538,
    kali: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _5k62530,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _5k62530,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _5k62530,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _5k62530,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _5k62530,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _5k62530,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _5k62530,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _5k62530,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _5k62532,
    nkoo: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _5k62530,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _5k62530,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _5k62530,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _5k62530,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _5k62530,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _5k62530,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _5k62532,
    vaii: {
        symbols: _5k62530,
        formats: _5k62576,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _5k62530,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _5k62570,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5k62569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5k62558,
        dayPeriods: _5k62531,
        monthNames: _5k62562,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _5k62554,
        fields: _5k62578
    },
    chinese: _5k62582,
    coptic: {
        dateFormats: _5k62570,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5k62569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5k62558,
        dayPeriods: _5k62531,
        monthNames: {
            format: _5k62549,
            standAlone: _5k62549
        },
        eraNames: _5k62129,
        quarterNames: _5k62554,
        fields: _5k62578
    },
    dangi: _5k62582,
    ethioaa: _5k62579,
    ethiopic: {
        dateFormats: _5k62570,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5k62569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5k62558,
        dayPeriods: _5k62531,
        monthNames: {
            format: _5k62551,
            standAlone: _5k62551
        },
        eraNames: _5k62129,
        quarterNames: _5k62554,
        fields: _5k62578
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d. MMMM y",
                longDate: "d. MMMM y",
                mediumDate: "dd.MM.y",
                shortDate: "dd.MM.yy",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "dd.MM.yy, HH:mm",
                mediumDateTime: "dd.MM.y, HH:mm:ss",
                longDateTime: "d. MMMM y 'kl'. HH:mm:ss z",
                fullDateTime: "EEEE, d. MMMM y 'kl'. HH:mm:ss zzzz"
            },
            cldr: {
                d: "d.",
                E: "ccc",
                Ed: "E d.",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d. MMM y G",
                GyMMMEd: "E d. MMM y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "LL",
                Md: "dd.MM",
                MEd: "E dd.MM",
                MMM: "LLL",
                MMMd: "d. MMM",
                MMMEd: "E d. MMM",
                MMMMd: "d. MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "MM.y",
                yMd: "dd.MM.y",
                yMEd: "E dd.MM.y",
                yMMM: "MMM y",
                yMMMd: "d. MMM y",
                yMMMEd: "E d. MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ 'í' y",
                yQQQQ: "QQQQ 'í' y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d.–d."
            },
            h: {
                a: "h a–h a",
                h: "h–h a"
            },
            H: {
                H: "HH–HH"
            },
            hm: {
                a: "h:mm a–h:mm a",
                h: "h:mm–h:mm a",
                m: "h:mm–h:mm a"
            },
            Hm: _5k6228,
            hmv: {
                a: "h:mm a–h:mm a v",
                h: "h:mm–h:mm a v",
                m: "h:mm–h:mm a v"
            },
            Hmv: _5k6266,
            hv: {
                a: "h a–h a v",
                h: "h–h a v"
            },
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "MM–MM"
            },
            Md: _5k6229,
            MEd: _5k6291,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _5k6230,
            MMMEd: _5k62112,
            y: {
                y: "y–y"
            },
            yM: {
                M: "MM.y–MM.y",
                y: "MM.y–MM.y"
            },
            yMd: {
                d: "dd.MM.y–dd.MM.y",
                M: "dd.MM.y–dd.MM.y",
                y: "dd.MM.y–dd.MM.y"
            },
            yMEd: {
                d: "E dd.MM.y–E dd.MM.y",
                M: "E dd.MM.y–E dd.MM.y",
                y: "E dd.MM.y–E dd.MM.y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y–MMM y"
            },
            yMMMd: {
                d: "d.–d. MMM y",
                M: "dd. MMM–dd. MMM y",
                y: "dd. MMM y–dd. MMM y"
            },
            yMMMEd: {
                d: "E dd. MMM–E dd. MMM y",
                M: "E dd. MMM–E dd. MMM y",
                y: "E dd. MMM y–E dd. MMM y"
            },
            yMMMM: {
                M: "MMMM–MMMM y",
                y: "MMMM y–MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5k62558,
        dayPeriods: _5k62531,
        monthNames: _5k62562,
        eraNames: {
            wide: [ "fyri Krist", "eftir Krist" ],
            abbreviated: [ "f.Kr.", "e.Kr." ]
        },
        quarterNames: _5k62554,
        fields: _5k62578
    },
    hebrew: {
        dateFormats: _5k62570,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5k62569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5k62558,
        dayPeriods: _5k62531,
        monthNames: {
            format: _5k62547,
            standAlone: _5k62547
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _5k62554,
        fields: _5k62578
    },
    indian: {
        dateFormats: _5k62570,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5k62569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5k62558,
        dayPeriods: _5k62531,
        monthNames: {
            format: _5k62552,
            standAlone: _5k62552
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _5k62554,
        fields: _5k62578
    },
    islamic: _5k62581,
    "islamic-umalqura": _5k62581,
    "islamic-tbla": _5k62581,
    "islamic-civil": _5k62581,
    "islamic-rgsa": _5k62581,
    iso8601: _5k62579,
    japanese: {
        dateFormats: _5k62570,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5k62569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5k62558,
        dayPeriods: _5k62531,
        monthNames: _5k62562,
        eraNames: {
            wide: _5k62577,
            abbreviated: _5k62577
        },
        quarterNames: _5k62554,
        fields: _5k62578
    },
    persian: {
        dateFormats: _5k62570,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5k62569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5k62558,
        dayPeriods: _5k62531,
        monthNames: {
            format: _5k62548,
            standAlone: _5k62548
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _5k62554,
        fields: _5k62578
    },
    roc: {
        dateFormats: _5k62570,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5k62569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5k62558,
        dayPeriods: _5k62531,
        monthNames: _5k62562,
        eraNames: {
            wide: _5k627,
            abbreviated: _5k627
        },
        quarterNames: _5k62554,
        fields: _5k62578
    },
    islamicc: _5k62579
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinalMasculine(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderSpelloutCardinalMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculine(Math.floor(n)) + " komma " + this.renderSpelloutCardinalMasculine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e15)) + " billiarder" + (n === 2e15 ? "" : " og " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 1e15) return "ein billiard" + (n === 1e15 ? "" : " og " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e12)) + " billióner" + (n === 2e12 ? "" : " og " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 1e12) return "ein billión" + (n === 1e12 ? "" : " og " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e9)) + " milliarder" + (n === 2e9 ? "" : " og " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 1e9) return "ein milliard" + (n === 1e9 ? "" : " og " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e6)) + " millióner" + (n === 2e6 ? "" : " og " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 1e6) return "ein millión" + (n === 1e6 ? "" : " og " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 1e3) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e3)) + " tusin" + (n === 1e3 ? "" : " og " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 100) return this.renderSpelloutCardinalNeuter(Math.floor(n / 100)) + "­hundrað" + (n === 100 ? "" : "­og­" + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 90) return "níti" + (n === 90 ? "" : "­" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 80) return "áttati" + (n === 80 ? "" : "­" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 70) return "sjeyti" + (n === 70 ? "" : "­" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 60) return "seksti" + (n === 60 ? "" : "­" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 50) return "fimmti" + (n === 50 ? "" : "­" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 40) return "fýrati" + (n === 40 ? "" : "­" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 30) return "tríati" + (n === 30 ? "" : "­" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 20) return "tjúgo" + (n === 20 ? "" : "­" + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 19) return "nítjan";
    if (n >= 18) return "átjan";
    if (n >= 17) return "seytan";
    if (n >= 16) return "sekstan";
    if (n >= 15) return "fímtan";
    if (n >= 14) return "fjúrtan";
    if (n >= 13) return "trettan";
    if (n >= 12) return "tólv";
    if (n >= 11) return "ellivu";
    if (n >= 10) return "tíggju";
    if (n >= 9) return "níggju";
    if (n >= 8) return "átta";
    if (n >= 7) return "sjey";
    if (n >= 6) return "seks";
    if (n >= 5) return "fimm";
    if (n >= 4) return "fýre";
    if (n >= 3) return "tríggir";
    if (n >= 2) return "tveir";
    if (n >= 1) return "ein";
    if (n >= 0) return "null";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderSpelloutCardinalFeminine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalFeminine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalFeminine(Math.floor(n)) + " komma " + this.renderSpelloutCardinalFeminine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e15)) + " billiarder" + (n === 2e15 ? "" : " og " + this.renderSpelloutCardinalFeminine(n % 1e15));
    if (n >= 1e15) return "ein billiard" + (n === 1e15 ? "" : " og " + this.renderSpelloutCardinalFeminine(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e12)) + " billióner" + (n === 2e12 ? "" : " og " + this.renderSpelloutCardinalFeminine(n % 1e12));
    if (n >= 1e12) return "ein billión" + (n === 1e12 ? "" : " og " + this.renderSpelloutCardinalFeminine(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e9)) + " milliarder" + (n === 2e9 ? "" : " og " + this.renderSpelloutCardinalFeminine(n % 1e9));
    if (n >= 1e9) return "ein milliard" + (n === 1e9 ? "" : " og " + this.renderSpelloutCardinalFeminine(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e6)) + " millióner" + (n === 2e6 ? "" : " og " + this.renderSpelloutCardinalFeminine(n % 1e6));
    if (n >= 1e6) return "ein millión" + (n === 1e6 ? "" : " og " + this.renderSpelloutCardinalFeminine(n % 1e6));
    if (n >= 1e3) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e3)) + " tusin" + (n === 1e3 ? "" : " og " + this.renderSpelloutCardinalFeminine(n % 1e3));
    if (n >= 100) return this.renderSpelloutCardinalNeuter(Math.floor(n / 100)) + "­hundrað" + (n === 100 ? "" : "­og­" + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 90) return "níti" + (n === 90 ? "" : "­" + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 80) return "áttati" + (n === 80 ? "" : "­" + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 70) return "sjeyti" + (n === 70 ? "" : "­" + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 60) return "seksti" + (n === 60 ? "" : "­" + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 50) return "fimmti" + (n === 50 ? "" : "­" + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 40) return "fýrati" + (n === 40 ? "" : "­" + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 30) return "tríati" + (n === 30 ? "" : "­" + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 20) return "tjúgo" + (n === 20 ? "" : "­" + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 5) return this.renderSpelloutCardinalMasculine(n);
    if (n >= 4) return "fýre";
    if (n >= 3) return "tríggjar";
    if (n >= 2) return "tvær";
    if (n >= 1) return "ein";
    if (n >= 0) return "null";
};

inter.renderSpelloutCardinalNeuter = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalNeuter(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalNeuter(Math.floor(n)) + " komma " + this.renderSpelloutCardinalNeuter(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e15)) + " billiarder" + (n === 2e15 ? "" : " og " + this.renderSpelloutCardinalNeuter(n % 1e15));
    if (n >= 1e15) return "ein billiard" + (n === 1e15 ? "" : " og " + this.renderSpelloutCardinalNeuter(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e12)) + " billióner" + (n === 2e12 ? "" : " og " + this.renderSpelloutCardinalNeuter(n % 1e12));
    if (n >= 1e12) return "ein billión" + (n === 1e12 ? "" : " og " + this.renderSpelloutCardinalNeuter(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e9)) + " milliarder" + (n === 2e9 ? "" : " og " + this.renderSpelloutCardinalNeuter(n % 1e9));
    if (n >= 1e9) return "ein milliard" + (n === 1e9 ? "" : " og " + this.renderSpelloutCardinalNeuter(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e6)) + " millióner" + (n === 2e6 ? "" : " og " + this.renderSpelloutCardinalNeuter(n % 1e6));
    if (n >= 1e6) return "ein millión" + (n === 1e6 ? "" : " og " + this.renderSpelloutCardinalNeuter(n % 1e6));
    if (n >= 1e3) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e3)) + " tusin" + (n === 1e3 ? "" : " og " + this.renderSpelloutCardinalNeuter(n % 1e3));
    if (n >= 100) return this.renderSpelloutCardinalNeuter(Math.floor(n / 100)) + "­hundrað" + (n === 100 ? "" : "­og­" + this.renderSpelloutCardinalNeuter(n % 100));
    if (n >= 90) return "níti" + (n === 90 ? "" : "­" + this.renderSpelloutCardinalNeuter(n % 10));
    if (n >= 80) return "áttati" + (n === 80 ? "" : "­" + this.renderSpelloutCardinalNeuter(n % 10));
    if (n >= 70) return "sjeyti" + (n === 70 ? "" : "­" + this.renderSpelloutCardinalNeuter(n % 10));
    if (n >= 60) return "seksti" + (n === 60 ? "" : "­" + this.renderSpelloutCardinalNeuter(n % 10));
    if (n >= 50) return "fimmti" + (n === 50 ? "" : "­" + this.renderSpelloutCardinalNeuter(n % 10));
    if (n >= 40) return "fýrati" + (n === 40 ? "" : "­" + this.renderSpelloutCardinalNeuter(n % 10));
    if (n >= 30) return "tríati" + (n === 30 ? "" : "­" + this.renderSpelloutCardinalNeuter(n % 10));
    if (n >= 20) return "tjúgo" + (n === 20 ? "" : "­" + this.renderSpelloutCardinalNeuter(n % 10));
    if (n >= 5) return this.renderSpelloutCardinalMasculine(n);
    if (n >= 4) return "fýre";
    if (n >= 3) return "trý";
    if (n >= 2) return "tvey";
    if (n >= 1) return "eitt";
    if (n >= 0) return "null";
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 35), {
    id: "America/Belize",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Belis",
    countryId: "BZ"
}, P.timeZones.slice(36, 40), P.timeZones.slice(41, 46), {
    id: "America/Costa_Rica",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Kosta Rika",
    countryId: "CR"
}, P.timeZones.slice(46, 72), {
    id: "America/Jamaica",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Jamaika",
    countryId: "JM"
}, P.timeZones.slice(73, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones.slice(91, 98), {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 116), {
    id: "America/Puerto_Rico",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Puerto Riko",
    countryId: "PR"
}, P.timeZones.slice(117, 119), {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "St-Barthélemy",
    countryId: "BL"
}, P.timeZones.slice(120, 157), {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Suðurgeorgiaoyggjar",
    countryId: "GS"
}, {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azorurnar",
    countryId: "PT"
}, {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Grønhøvdaoyggjar",
    countryId: "CV"
}, P.timeZones.slice(160, 176), {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lissabon",
    countryId: "PT"
}, P.timeZones.slice(177, 183), {
    id: "Atlantic/Reykjavik",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Reykjavík",
    countryId: "IS"
}, P.timeZones.slice(184, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Beograd",
    countryId: "RS"
}, P.timeZones.slice(192, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bruxelles",
    countryId: "BE"
}, P.timeZones.slice(196, 200), P.timeZones.slice(201, 204), {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Keypmannahavn",
    countryId: "DK"
}, P.timeZones.slice(204, 210), {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luksemborg",
    countryId: "LU"
}, P.timeZones.slice(211, 214), {
    id: "Europe/Monaco",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Monako",
    countryId: "MC"
}, P.timeZones.slice(215, 221), {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Prag",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Rom",
    countryId: "IT"
}, P.timeZones.slice(223, 226), {
    id: "Europe/Stockholm",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Stokkhólm",
    countryId: "SE"
}, P.timeZones.slice(227, 230), {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Varsjava",
    countryId: "PL"
}, {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Vatikanið",
    countryId: "VA"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Wien",
    countryId: "AT"
}, P.timeZones[233], {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zürich",
    countryId: "CH"
}, {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Aten",
    countryId: "GR"
}, P.timeZones.slice(236, 238), P.timeZones[239], {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bukarest",
    countryId: "RO"
}, P.timeZones.slice(240, 244), {
    id: "Asia/Gaza",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Gasa",
    countryId: "PS"
}, P.timeZones.slice(245, 274), {
    id: "Asia/Bahrain",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Barein",
    countryId: "BH"
}, P.timeZones.slice(275, 278), {
    id: "Africa/Djibouti",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Djibuti",
    countryId: "DJ"
}, P.timeZones.slice(279, 282), {
    id: "Asia/Kuwait",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Kuvait",
    countryId: "KW"
}, P.timeZones.slice(283, 286), {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moskva",
    countryId: "RU"
}, P.timeZones.slice(287, 293), {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Teheran",
    countryId: "IR"
}, P.timeZones.slice(294, 298), P.timeZones[299], {
    id: "Indian/Mauritius",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Móritius",
    countryId: "MU"
}, {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Réunion",
    countryId: "RE"
}, P.timeZones.slice(301, 314), {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Maldivoyggjar",
    countryId: "MV"
}, P.timeZones.slice(315, 355), {
    id: "Asia/Macau",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Makao",
    countryId: "MO"
}, P.timeZones.slice(356, 360), {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Singapor",
    countryId: "SG"
}, P.timeZones.slice(361, 419));

inter.territories = [ _5k62341, _5k62399, _5k62240, _5k62241, _5k62405, _5k62490, _5k62420, _5k62242, _5k62209, _5k62284, _5k62133, _5k62421, _5k62314, _5k62243, _5k62184, _5k62137, _5k62342, _5k62370, _5k62440, _5k62315, _5k62388, _5k62343, _5k62285, _5k62210, _5k62211, _5k62185, _5k62186, _5k62244, _5k62245, _5k62431, _5k62286, _5k62141, _5k62212, _5k62213, _5k62287, _5k62371, _5k62246, _5k62187, _5k62389, _5k62166, _5k62139, _5k62372, _5k62247, _5k62248, _5k62146, _5k62249, _5k62288, _5k62422, _5k62344, _5k62250, _5k62390, _5k62360, _5k62251, _5k62252, _5k62253, _5k62400, _5k62448, _5k62432, _5k62449, _5k62345, _5k62361, _5k62417, _5k62169, _5k62391, _5k62289, _5k62290, _5k62401, _5k62423, _5k62316, _5k62424, _5k62254, _5k62188, _5k62214, _5k62170, _5k62255, _5k62317, _5k62256, _5k62346, _5k62418, _5k62291, _5k62347, _5k62171, _5k62318, _5k62292, _5k62215, _5k62392, _5k62216, _5k62189, _5k62348, _5k62293, _5k62433, _5k62393, _5k62190, _5k62319, _5k62172, _5k62173, _5k62362, _5k62217, _5k62257, _5k62191, _5k62192, _5k62218, _5k62219, _5k62140, _5k62294, _5k62258, _5k62220, _5k62157, _5k62406, _5k62320, _5k62193, _5k62221, _5k62194, _5k62174, _5k62175, _5k62295, _5k62296, _5k62176, _5k62142, _5k62297, _5k62373, _5k62195, _5k62460, _5k62259, _5k62349, _5k62260, _5k62177, _5k62222, _5k62223, _5k62178, _5k62224, _5k62298, _5k62261, _5k62262, _5k62196, _5k62363, _5k62225, _5k62350, _5k62351, _5k62402, _5k62321, _5k62299, _5k62226, _5k62394, _5k62179, _5k62197, _5k62263, _5k62407, _5k62352, _5k62264, _5k62265, _5k62425, _5k62461, _5k62441, _5k62426, _5k62434, _5k62435, _5k62408, _5k62266, _5k62227, _5k62300, _5k62353, _5k62354, _5k62301, _5k62409, _5k62322, _5k62302, _5k62267, _5k62198, _5k62199, _5k62200, _5k62268, _5k62323, _5k62180, _5k62324, _5k62436, _5k62201, _5k62395, _5k62450, _5k62451, _5k62452, _5k62364, _5k62365, _5k62303, _5k62181, _5k62410, _5k62304, _5k62202, _5k62442, _5k62228, _5k62403, _5k62305, _5k62182, _5k62411, _5k62427, _5k62306, _5k62366, _5k62269, _5k62229, _5k62270, _5k62307, _5k62271, _5k62471, _5k62404, _5k62453, _5k62491, _5k62473, _5k62230, _5k62443, _5k62203, _5k62355, _5k62444, _5k62367, _5k62272, _5k62231, _5k62412, _5k62374, _5k62308, _5k62309, _5k62375, _5k62310, _5k62311, _5k62273, _5k62232, _5k62325, _5k62396, _5k62326, _5k62356, _5k62428, _5k62327, _5k62477, _5k62419, _5k62478, _5k62397, _5k62204, _5k62274, _5k62368, _5k62454, _5k62429, _5k62445, _5k62462, _5k62357, _5k62358, _5k62455, _5k62328, _5k62205, _5k62275, _5k62206, _5k62376, _5k62276, _5k62233, _5k62312, _5k62183, _5k62277, _5k62207, _5k62430, _5k62167, _5k62278, _5k62329, _5k62377, _5k62467, _5k62234, _5k62313, _5k62235, _5k62279, _5k62236, _5k62280, _5k62359, _5k62281, _5k62369, _5k62330, _5k62456, _5k62437, _5k62457, _5k62378, _5k62282, _5k62472, {
    id: "QO",
    displayName: "fjarskoti Osiania",
    regionId: "009",
    hasTimeZones: false
}, _5k62130, _5k62481, _5k62208, _5k62237, _5k62238, _5k62239, _5k62466 ];

inter.regions = [ _5k62399, _5k62405, _5k62490, _5k62370, _5k62440, _5k62400, _5k62448, _5k62432, _5k62449, _5k62406, _5k62425, _5k62461, _5k62426, _5k62435, _5k62408, _5k62451, _5k62452, _5k62410, _5k62427, _5k62454, _5k62429, _5k62445, _5k62456, _5k62437, _5k62457, _5k62130, _5k62481, _5k62466 ];

inter.countries = [ _5k62341, _5k62240, _5k62241, _5k62420, _5k62242, _5k62209, _5k62284, _5k62133, _5k62421, _5k62314, _5k62243, _5k62184, _5k62137, _5k62342, _5k62315, _5k62388, _5k62343, _5k62285, _5k62210, _5k62211, _5k62185, _5k62186, _5k62244, _5k62245, _5k62431, _5k62286, _5k62141, _5k62212, _5k62213, _5k62287, _5k62371, _5k62246, _5k62187, _5k62389, _5k62166, _5k62139, _5k62372, _5k62247, _5k62248, _5k62146, _5k62249, _5k62288, _5k62422, _5k62344, _5k62250, _5k62390, _5k62360, _5k62251, _5k62252, _5k62253, _5k62345, _5k62361, _5k62417, _5k62169, _5k62391, _5k62289, _5k62290, _5k62401, _5k62423, _5k62316, _5k62424, _5k62254, _5k62188, _5k62214, _5k62170, _5k62255, _5k62317, _5k62256, _5k62346, _5k62418, _5k62291, _5k62347, _5k62171, _5k62318, _5k62292, _5k62215, _5k62392, _5k62216, _5k62189, _5k62348, _5k62293, _5k62433, _5k62393, _5k62190, _5k62319, _5k62172, _5k62173, _5k62362, _5k62217, _5k62257, _5k62191, _5k62192, _5k62218, _5k62219, _5k62140, _5k62294, _5k62258, _5k62220, _5k62157, _5k62320, _5k62193, _5k62221, _5k62194, _5k62174, _5k62175, _5k62295, _5k62296, _5k62176, _5k62142, _5k62297, _5k62373, _5k62195, _5k62460, _5k62259, _5k62349, _5k62260, _5k62177, _5k62222, _5k62223, _5k62178, _5k62224, _5k62298, _5k62261, _5k62262, _5k62196, _5k62363, _5k62225, _5k62350, _5k62351, _5k62402, _5k62321, _5k62299, _5k62226, _5k62394, _5k62179, _5k62197, _5k62263, _5k62407, _5k62352, _5k62264, _5k62265, _5k62441, _5k62434, _5k62266, _5k62227, _5k62300, _5k62353, _5k62354, _5k62301, _5k62409, _5k62322, _5k62302, _5k62267, _5k62198, _5k62199, _5k62200, _5k62268, _5k62323, _5k62180, _5k62324, _5k62436, _5k62201, _5k62395, _5k62450, _5k62364, _5k62365, _5k62303, _5k62181, _5k62304, _5k62202, _5k62442, _5k62228, _5k62403, _5k62305, _5k62182, _5k62411, _5k62306, _5k62366, _5k62269, _5k62229, _5k62270, _5k62307, _5k62271, _5k62471, _5k62404, _5k62453, _5k62491, _5k62473, _5k62230, _5k62443, _5k62203, _5k62355, _5k62444, _5k62367, _5k62272, _5k62231, _5k62412, _5k62374, _5k62308, _5k62309, _5k62375, _5k62310, _5k62311, _5k62273, _5k62232, _5k62325, _5k62396, _5k62326, _5k62356, _5k62428, _5k62327, _5k62477, _5k62419, _5k62478, _5k62397, _5k62204, _5k62274, _5k62368, _5k62462, _5k62357, _5k62358, _5k62455, _5k62328, _5k62205, _5k62275, _5k62206, _5k62376, _5k62276, _5k62233, _5k62312, _5k62183, _5k62277, _5k62207, _5k62430, _5k62167, _5k62278, _5k62329, _5k62377, _5k62467, _5k62234, _5k62313, _5k62235, _5k62279, _5k62236, _5k62280, _5k62359, _5k62281, _5k62369, _5k62330, _5k62378, _5k62282, _5k62472, _5k62208, _5k62237, _5k62238, _5k62239 ];

inter.languages = [ {
    id: "ab",
    displayName: "abkhasiskt"
}, {
    id: "af",
    displayName: "afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ak",
    displayName: "akan",
    nativeDisplayName: "Akan"
}, {
    id: "en_us",
    displayName: "enskt (USA)",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "inari sami",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "ay",
    displayName: "aymara"
}, {
    id: "az",
    displayName: "aserbajdsjanskt",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "malaiiskt",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bss",
    displayName: "bakossi"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "ba",
    displayName: "bashkir"
}, {
    id: "bs",
    displayName: "bosniskt",
    nativeDisplayName: "bosanski"
}, {
    id: "br",
    displayName: "bretonskt",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "enskt (UK)",
    nativeDisplayName: "British English"
}, {
    id: "ca",
    displayName: "katalani",
    nativeDisplayName: "català"
}, {
    id: "kde",
    displayName: "makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "sn",
    displayName: "shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cv",
    displayName: "chuvash"
}, {
    id: "cy",
    displayName: "walisiskt",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "danskt",
    nativeDisplayName: "dansk"
}, {
    id: "se",
    displayName: "norður sámiskt",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "de",
    displayName: "týskt",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "dv",
    displayName: "divehi"
}, {
    id: "dsb",
    displayName: "lágt sorbian",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "estiskt",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efik"
}, {
    id: "zxx",
    displayName: "einki málsligt innihald"
}, {
    id: "guz",
    displayName: "gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "en",
    displayName: "enskt",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "spanskt",
    nativeDisplayName: "español"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "baskiskt",
    nativeDisplayName: "euskara"
}, {
    id: "ee",
    displayName: "ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fj",
    displayName: "fijimál"
}, {
    id: "fil",
    displayName: "filipiniskt",
    nativeDisplayName: "Filipino"
}, {
    id: "fr",
    displayName: "franskt",
    nativeDisplayName: "français"
}, {
    id: "fo",
    displayName: "føroyskt",
    nativeDisplayName: "føroyskt"
}, {
    id: "ga",
    displayName: "írskt",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "gagauz"
}, {
    id: "gl",
    displayName: "galisiskt",
    nativeDisplayName: "galego"
}, {
    id: "ki",
    displayName: "kikuyu",
    nativeDisplayName: "Gikuyu"
}, {
    id: "gn",
    displayName: "guarani"
}, {
    id: "gd",
    displayName: "skotskt gæliskt",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "ht",
    displayName: "haitiskt"
}, {
    id: "ha",
    displayName: "hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "bez",
    displayName: "bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hsb",
    displayName: "ovara sorbian",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "kroatiskt",
    nativeDisplayName: "hrvatski"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "ig",
    displayName: "igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "id",
    displayName: "indonesiskt",
    nativeDisplayName: "Indonesia"
}, {
    id: "ia",
    displayName: "interlingua"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "iu",
    displayName: "inuktitut"
}, {
    id: "sbp",
    displayName: "sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "norður ndebele",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "sulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "italskt",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "javanskt"
}, {
    id: "dyo",
    displayName: "jola-fonyi",
    nativeDisplayName: "joola"
}, {
    id: "kea",
    displayName: "grønhøvdaoyggjarskt",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kl",
    displayName: "kalaallisut",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "kw",
    displayName: "corniskt",
    nativeDisplayName: "kernewek"
}, {
    id: "naq",
    displayName: "nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "rof",
    displayName: "rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "machame",
    nativeDisplayName: "Kimachame"
}, {
    id: "rw",
    displayName: "kinyarwanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asu",
    nativeDisplayName: "Kipare"
}, {
    id: "rwk",
    displayName: "rwa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "shambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "swahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "kongo svahili",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "tlh",
    displayName: "klingonskt"
}, {
    id: "koi",
    displayName: "komi-permyak"
}, {
    id: "co",
    displayName: "korsikanskt"
}, {
    id: "khq",
    displayName: "koyra chiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "koyraboro senni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "mfe",
    displayName: "morisyen",
    nativeDisplayName: "kreol morisien"
}, {
    id: "ku",
    displayName: "kurdiskt"
}, {
    id: "nmg",
    displayName: "kwasio",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ebu",
    displayName: "embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "quc",
    displayName: "kʼicheʼ"
}, {
    id: "lah",
    displayName: "lahnda"
}, {
    id: "lkt",
    displayName: "lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lv",
    displayName: "lettiskt",
    nativeDisplayName: "latviešu"
}, {
    id: "la",
    displayName: "latín"
}, {
    id: "to",
    displayName: "tonganskt",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lt",
    displayName: "litaviskt",
    nativeDisplayName: "lietuvių"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "lg",
    displayName: "ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "smj",
    displayName: "lule sámiskt"
}, {
    id: "luy",
    displayName: "luyia",
    nativeDisplayName: "Luluhia"
}, {
    id: "nds_nl",
    displayName: "lágt saksiskt"
}, {
    id: "nds",
    displayName: "lágt týskt"
}, {
    id: "lb",
    displayName: "luksemborgskt",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "masai",
    nativeDisplayName: "Maa"
}, {
    id: "hu",
    displayName: "ungarskt",
    nativeDisplayName: "magyar"
}, {
    id: "mgh",
    displayName: "makhuwa-meetto",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "malagassiskt",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "maltiskt",
    nativeDisplayName: "Malti"
}, {
    id: "mi",
    displayName: "maori"
}, {
    id: "arn",
    displayName: "mapuche"
}, {
    id: "mgo",
    displayName: "metaʼ",
    nativeDisplayName: "metaʼ"
}, {
    id: "moh",
    displayName: "mohawk"
}, {
    id: "ro_md",
    displayName: "moldaviskt",
    nativeDisplayName: "moldovenească"
}, {
    id: "mua",
    displayName: "mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "jgo",
    displayName: "ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "nl",
    displayName: "hálendskt",
    nativeDisplayName: "Nederlands"
}, {
    id: "nb",
    displayName: "norskt bókmál",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "norskt"
}, {
    id: "ny",
    displayName: "nyanja"
}, {
    id: "nn",
    displayName: "nýnorskt",
    nativeDisplayName: "nynorsk"
}, {
    id: "nqo",
    displayName: "nʼko"
}, {
    id: "oc",
    displayName: "occitan"
}, {
    id: "xog",
    displayName: "soga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "uz",
    displayName: "usbekiskt",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pl",
    displayName: "pólskt",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "portugiskiskt",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "portugiskiskt (Brasilia)",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "portugiskiskt (Evropa)",
    nativeDisplayName: "português europeu"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "ro",
    displayName: "rumenskt",
    nativeDisplayName: "română"
}, {
    id: "cgg",
    displayName: "chiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "retoromanskt",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "quechua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "sm",
    displayName: "samoiskt"
}, {
    id: "sa",
    displayName: "sanskrit"
}, {
    id: "de_ch",
    displayName: "høgt týskt (Sveis)",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "týskt (Sveis)",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "seh",
    displayName: "sena",
    nativeDisplayName: "sena"
}, {
    id: "sh",
    displayName: "serbokroatiskt"
}, {
    id: "st",
    displayName: "sesotho"
}, {
    id: "swb",
    displayName: "shimaoré"
}, {
    id: "sq",
    displayName: "albanskt",
    nativeDisplayName: "shqip"
}, {
    id: "sd",
    displayName: "sindhi"
}, {
    id: "sms",
    displayName: "skolt sámiskt"
}, {
    id: "sk",
    displayName: "slovakiskt",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "slovenskt",
    nativeDisplayName: "slovenščina"
}, {
    id: "so",
    displayName: "somaliskt",
    nativeDisplayName: "Soomaali"
}, {
    id: "su",
    displayName: "sundanesiskt"
}, {
    id: "fi",
    displayName: "finskt",
    nativeDisplayName: "suomi"
}, {
    id: "sdh",
    displayName: "suður kurdiskt"
}, {
    id: "sma",
    displayName: "suður sámiskt"
}, {
    id: "sv",
    displayName: "svenskt",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "swatiskt"
}, {
    id: "sg",
    displayName: "sango",
    nativeDisplayName: "Sängö"
}, {
    id: "tl",
    displayName: "tagalog"
}, {
    id: "ty",
    displayName: "tahitiskt"
}, {
    id: "tg",
    displayName: "tajik"
}, {
    id: "tzm",
    displayName: "miðatlasfjøll tamazight",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "kabyle",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "twq",
    displayName: "tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "tatar"
}, {
    id: "tet",
    displayName: "tetum"
}, {
    id: "nus",
    displayName: "nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "vi",
    displayName: "vjetnamesiskt",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tpi",
    displayName: "tok pisin"
}, {
    id: "lu",
    displayName: "luba-katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "ts",
    displayName: "tsonga"
}, {
    id: "tn",
    displayName: "tswana"
}, {
    id: "tw",
    displayName: "twi"
}, {
    id: "tk",
    displayName: "turkmenskt",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "turkiskt",
    nativeDisplayName: "Türkçe"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "bgn",
    displayName: "vestur balochi"
}, {
    id: "nl_be",
    displayName: "flamskt",
    nativeDisplayName: "Vlaams"
}, {
    id: "wbp",
    displayName: "warlpiri"
}, {
    id: "fy",
    displayName: "vestur frísiskt",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "wolof"
}, {
    id: "xh",
    displayName: "xhosa"
}, {
    id: "dje",
    displayName: "sarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "yo",
    displayName: "yoruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "íslendskt",
    nativeDisplayName: "íslenska"
}, {
    id: "und",
    displayName: "ókent mál"
}, {
    id: "cs",
    displayName: "kekkiskt",
    nativeDisplayName: "čeština"
}, {
    id: "haw",
    displayName: "hawaiianskt",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "grikskt",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "hvitarussiskt",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bulgarskt",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "ossetiskt",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "kyrgyz",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "makedónskt",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongolskt",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "tjetjenskt",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "russiskt",
    nativeDisplayName: "русский"
}, {
    id: "sr",
    displayName: "serbiskt",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ukrainskt",
    nativeDisplayName: "українська"
}, {
    id: "kk",
    displayName: "kazakh",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armenskt",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "jiddiskt",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "hebraiskt",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uyghur",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "arabiskt",
    nativeDisplayName: "العربية"
}, {
    id: "fa",
    displayName: "persiskt",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "norður luri",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "mazanderani",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "pashto",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "miðkurdiskt",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "kashmiri",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepalskt",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "assamesiskt",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengalskt",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "punjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gujarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamilskt",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malayalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "singalesiskt",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "tailendskt",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "laoskt",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibetskt",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "burmesiskt",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "georgiskt",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrinya",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amhariskt",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "khmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "vanligt marokanskt tamazight",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "tachelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "kinesiskt",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japanskt",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "einkult kinesiskt",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "kantonesískt",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "vanligt kinesiskt",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "sichuan yi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "cherokee",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "koreanskt",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Arab",
    displayName: "arabisk"
}, {
    id: "Armn",
    displayName: "armenskt"
}, {
    id: "Beng",
    displayName: "bengali"
}, {
    id: "Brai",
    displayName: "blindaskrift"
}, {
    id: "Bopo",
    displayName: "bopomofo"
}, {
    id: "Deva",
    displayName: "devanagari"
}, {
    id: "Hans",
    displayName: "einkult"
}, {
    id: "Ethi",
    displayName: "etiopiskt"
}, {
    id: "Geor",
    displayName: "georgianskt"
}, {
    id: "Grek",
    displayName: "grikskt"
}, {
    id: "Gujr",
    displayName: "gujarati"
}, {
    id: "Guru",
    displayName: "gurmukhi"
}, {
    id: "Hani",
    displayName: "han"
}, {
    id: "Hang",
    displayName: "hangul"
}, {
    id: "Hebr",
    displayName: "hebraiskt"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Jpan",
    displayName: "japanskt"
}, {
    id: "Knda",
    displayName: "kannada"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Khmr",
    displayName: "khmer"
}, {
    id: "Kore",
    displayName: "koreanskt"
}, {
    id: "Cyrl",
    displayName: "kyrilliskt"
}, {
    id: "Laoo",
    displayName: "lao"
}, {
    id: "Latn",
    displayName: "latínskt"
}, {
    id: "Mlym",
    displayName: "malayalam"
}, {
    id: "Mong",
    displayName: "mongolsk"
}, {
    id: "Mymr",
    displayName: "myanmarskt"
}, {
    id: "Orya",
    displayName: "oriya"
}, {
    id: "Sinh",
    displayName: "sinhala"
}, {
    id: "Thai",
    displayName: "tailendskt"
}, {
    id: "Taml",
    displayName: "tamilskt"
}, {
    id: "Zsym",
    displayName: "tekin"
}, {
    id: "Telu",
    displayName: "telugu"
}, {
    id: "Thaa",
    displayName: "thaana"
}, {
    id: "Tibt",
    displayName: "tibetskt"
}, {
    id: "Zyyy",
    displayName: "vanlig"
}, {
    id: "Hant",
    displayName: "vanligt"
}, {
    id: "Zzzz",
    displayName: "ókend skrift"
}, {
    id: "Zxxx",
    displayName: "óskriva"
} ];

inter.currencies = [ {
    id: "AFN",
    displayName: "Afganistan afghani",
    symbol: "AFN",
    one: "Afganistan afghani",
    other: "Afganistan afghani"
}, {
    id: "ALL",
    displayName: "Albania lek",
    symbol: "ALL",
    one: "Albania lek",
    other: "Albania lek"
}, {
    id: "DZD",
    displayName: "Algeria dinar",
    symbol: "DZD",
    one: "Algeria dinar",
    other: "Algeria dinar"
}, {
    id: "AOA",
    displayName: "Angola kwanza",
    symbol: "AOA",
    one: "Angola kwanza",
    other: "Angola kwanza"
}, {
    id: "ARS",
    displayName: "Argentina peso",
    symbol: "ARS",
    one: "Argentina peso",
    other: "Argentina peso"
}, {
    id: "AMD",
    displayName: "Armenia dram",
    symbol: "AMD",
    one: "Armenia dram",
    other: "Armenia dram"
}, {
    id: "AWG",
    displayName: "Aruba florin",
    symbol: "AWG",
    one: "Aruba florin",
    other: "Aruba florin"
}, {
    id: "AZN",
    displayName: "Aserbadjan manat",
    symbol: "AZN",
    one: "Aserbadjan manat",
    other: "Aserbadjan manat"
}, {
    id: "AUD",
    displayName: "Avstralskur dollari",
    symbol: "A$",
    one: "Avstralskur dollari",
    other: "Avstralskir dollarar"
}, {
    id: "BSD",
    displayName: "Bahamaoyggjar dollari",
    symbol: "BSD",
    one: "Bahamaoyggjar dollari",
    other: "Bahamaoyggjar dollarar"
}, {
    id: "BDT",
    displayName: "Bangladesj taka",
    symbol: "BDT",
    one: "Bangladesj taka",
    other: "Bangladesj taka"
}, {
    id: "BBD",
    displayName: "Barbados dollari",
    symbol: "BBD",
    one: "Barbados dollari",
    other: "Barbados dollarar"
}, {
    id: "BHD",
    displayName: "Barein dinar",
    symbol: "BHD",
    one: "Barein dinar",
    other: "Barein dinar"
}, {
    id: "BZD",
    displayName: "Belis dollari",
    symbol: "BZD",
    one: "Belis dollari",
    other: "Belis dollarar"
}, {
    id: "BMD",
    displayName: "Bermuda dollari",
    symbol: "BMD",
    one: "Bermuda dollari",
    other: "Bermuda dollarar"
}, {
    id: "BOB",
    displayName: "Bolivia boliviano",
    symbol: "BOB",
    one: "Bolivia boliviano",
    other: "Bolivia boliviano"
}, {
    id: "BAM",
    displayName: "Bosnia-Hersegovina mark (kann vekslast)",
    symbol: "BAM",
    one: "Bosnia-Hersegovina mark (kann vekslast)",
    other: "Bosnia-Hersegovina mark (kann vekslast)"
}, {
    id: "BWP",
    displayName: "Botsvana pula",
    symbol: "BWP",
    one: "Botsvana pula",
    other: "Botsvana pula"
}, {
    id: "BRL",
    displayName: "Brasilianskur real",
    symbol: "R$",
    one: "Brasilianskur real",
    other: "Brasilianskir real"
}, {
    id: "BND",
    displayName: "Brunei dollari",
    symbol: "BND",
    one: "Brunei dollari",
    other: "Brunei dollarar"
}, {
    id: "BGN",
    displayName: "Bulgaria lev",
    symbol: "BGN",
    one: "Bulgaria lev",
    other: "Bulgaria lev"
}, {
    id: "BIF",
    displayName: "Burundi frankur",
    symbol: "BIF",
    one: "Burundi frankur",
    other: "Burundi frankar"
}, {
    id: "BTN",
    displayName: "Butan ngultrum",
    symbol: "BTN",
    one: "Butan ngultrum",
    other: "Butan ngultrum"
}, {
    id: "XPF",
    displayName: "CFP frankur",
    symbol: "CFPF",
    one: "CFP frankur",
    other: "CFP frankar"
}, {
    id: "KYD",
    displayName: "Caymanoyggjar dollari",
    symbol: "KYD",
    one: "Caymanoyggjar dollari",
    other: "Caymanoyggjar dollarar"
}, {
    id: "DJF",
    displayName: "Djibuti frankur",
    symbol: "DJF",
    one: "Djibuti frankur",
    other: "Djibuti frankar"
}, {
    id: "DOP",
    displayName: "Dominika peso",
    symbol: "DOP",
    one: "Dominika peso",
    other: "Dominika peso"
}, {
    id: "EGP",
    displayName: "Egyptaland pund",
    symbol: "EGP",
    one: "Egyptaland pund",
    other: "Egyptaland pund"
}, {
    id: "ERN",
    displayName: "Eritrea nakfa",
    symbol: "ERN",
    one: "Eritrea nakfa",
    other: "Eritrea nakfa"
}, {
    id: "ETB",
    displayName: "Etiopia birr",
    symbol: "ETB",
    one: "Etiopia birr",
    other: "Etiopia birr"
}, {
    id: "EUR",
    displayName: "Evra",
    symbol: "€",
    one: "evra",
    other: "evrur"
}, {
    id: "XCD",
    displayName: "Eystur Karibia dollari",
    symbol: "EC$",
    one: "Eystur Karibia dollari",
    other: "Eystur Karibia dollarar"
}, {
    id: "FKP",
    displayName: "Falklandsoyggjar pund",
    symbol: "FKP",
    one: "Falklandsoyggjar pund",
    other: "Falklandsoyggjar pund"
}, {
    id: "FJD",
    displayName: "Fiji dollari",
    symbol: "FJD",
    one: "Fiji dollari",
    other: "Fiji dollarar"
}, {
    id: "PHP",
    displayName: "Filipsoyggjar peso",
    symbol: "PHP",
    one: "Filipsoyggjar peso",
    other: "Filipsoyggjar peso"
}, {
    id: "GMD",
    displayName: "Gambia dalasi",
    symbol: "GMD",
    one: "Gambia dalasi",
    other: "Gambia dalasi"
}, {
    id: "GHS",
    displayName: "Gana cedi",
    symbol: "GHS",
    one: "Gana cedi",
    other: "Gana cedi"
}, {
    id: "GEL",
    displayName: "Georgia lari",
    symbol: "GEL",
    one: "Georgia lari",
    other: "Georgia lari"
}, {
    id: "GIP",
    displayName: "Gibraltar pund",
    symbol: "GIP",
    one: "Gibraltar pund",
    other: "Gibraltar pund"
}, {
    id: "CVE",
    displayName: "Grønhøvdaoyggjar escudo",
    symbol: "CVE",
    one: "Grønhøvdaoyggjar escudo",
    other: "Grønhøvdaoyggjar escudo"
}, {
    id: "GTQ",
    displayName: "Guatemala quetzal",
    symbol: "GTQ",
    one: "Guatemala quetzal",
    other: "Guatemala quetzal"
}, {
    id: "GNF",
    displayName: "Guinea frankur",
    symbol: "GNF",
    one: "Guinea frankur",
    other: "Guinea frankar"
}, {
    id: "GYD",
    displayName: "Gujana dollari",
    symbol: "GYD",
    one: "Gujana dollari",
    other: "Gujana dollarar"
}, {
    id: "HTG",
    displayName: "Haiti gourde",
    symbol: "HTG",
    one: "Haiti gourde",
    other: "Haiti gourde"
}, {
    id: "HNL",
    displayName: "Honduras lempira",
    symbol: "HNL",
    one: "Honduras lempira",
    other: "Honduras lempira"
}, {
    id: "HKD",
    displayName: "Hong Kong dollari",
    symbol: "HK$",
    one: "Hong Kong dollari",
    other: "Hong Kong dollarar"
}, {
    id: "BYR",
    displayName: "Hvítarussland ruble",
    symbol: "BYR",
    one: "Hvítarussland ruble",
    other: "Hvítarussland ruble"
}, {
    id: "IDR",
    displayName: "Indonesia rupiah",
    symbol: "IDR",
    one: "Indonesia rupiah",
    other: "Indonesia rupiah"
}, {
    id: "IQD",
    displayName: "Irak dinar",
    symbol: "IQD",
    one: "Irak dinar",
    other: "Irak dinar"
}, {
    id: "JMD",
    displayName: "Jamaika dollari",
    symbol: "JMD",
    one: "Jamaika dollari",
    other: "Jamaika dollarar"
}, {
    id: "YER",
    displayName: "Jemen rial",
    symbol: "YER",
    one: "Jemen rial",
    other: "Jemen rial"
}, {
    id: "JOD",
    displayName: "Jordan dinar",
    symbol: "JOD",
    one: "Jordan dinar",
    other: "Jordan dinar"
}, {
    id: "KHR",
    displayName: "Kambodja riel",
    symbol: "KHR",
    one: "Kambodja riel",
    other: "Kambodja riel"
}, {
    id: "CAD",
    displayName: "Kanada dollari",
    symbol: "CA$",
    one: "Kanada dollari",
    other: "Kanada dollarar"
}, {
    id: "KZT",
    displayName: "Kasakstan tenge",
    symbol: "KZT",
    one: "Kasakstan tenge",
    other: "Kasakstan tenge"
}, {
    id: "QAR",
    displayName: "Katar rial",
    symbol: "QAR",
    one: "Katar rial",
    other: "Katar rial"
}, {
    id: "CZK",
    displayName: "Kekkia koruna",
    symbol: "CZK",
    one: "Kekkia koruna",
    other: "Kekkia koruna"
}, {
    id: "CLP",
    displayName: "Kili peso",
    symbol: "CLP",
    one: "Kili peso",
    other: "Kili peso"
}, {
    id: "KGS",
    displayName: "Kirgisia som",
    symbol: "KGS",
    one: "Kirgisia som",
    other: "Kirgisia som"
}, {
    id: "COP",
    displayName: "Kolombia peso",
    symbol: "COP",
    one: "Kolombia peso",
    other: "Kolombia peso"
}, {
    id: "KMF",
    displayName: "Komoroyggjar frankur",
    symbol: "KMF",
    one: "Komoroyggjar frankur",
    other: "Komoroyggjar frankar"
}, {
    id: "CDF",
    displayName: "Kongo frankur",
    symbol: "CDF",
    one: "Kongo frankur",
    other: "Kongo frankar"
}, {
    id: "CRC",
    displayName: "Kosta Rika colón",
    symbol: "CRC",
    one: "Kosta Rika colón",
    other: "Kosta Rika colón"
}, {
    id: "HRK",
    displayName: "Kroatia kuna",
    symbol: "HRK",
    one: "Kroatia kuna",
    other: "Kroatia kuna"
}, {
    id: "CUP",
    displayName: "Kuba peso",
    symbol: "CUP",
    one: "Kuba peso",
    other: "Kuba peso"
}, {
    id: "CUC",
    displayName: "Kuba peso (sum kann vekslast)",
    symbol: "CUC",
    one: "Kuba peso (sum kann vekslast)",
    other: "Kuba peso (sum kann vekslast)"
}, {
    id: "KWD",
    displayName: "Kuvait dinar",
    symbol: "KWD",
    one: "Kuvait dinar",
    other: "Kuvait dinar"
}, {
    id: "LAK",
    displayName: "Laos kip",
    symbol: "LAK",
    one: "Laos kip",
    other: "Laos kip"
}, {
    id: "LBP",
    displayName: "Libanon pund",
    symbol: "LBP",
    one: "Libanon pund",
    other: "Libanon pund"
}, {
    id: "LRD",
    displayName: "Liberia dollari",
    symbol: "LRD",
    one: "Liberia dollari",
    other: "Liberia dollarar"
}, {
    id: "LYD",
    displayName: "Libya dinar",
    symbol: "LYD",
    one: "Libya dinar",
    other: "Libya dinar"
}, {
    id: "MGA",
    displayName: "Madagaskar ariary",
    symbol: "MGA",
    one: "Madagaskar ariary",
    other: "Madagaskar ariary"
}, {
    id: "MOP",
    displayName: "Makao pataca",
    symbol: "MOP",
    one: "Makao pataca",
    other: "Makao pataca"
}, {
    id: "MKD",
    displayName: "Makedónia denar",
    symbol: "MKD",
    one: "Makedónia denar",
    other: "Makedónia denar"
}, {
    id: "MYR",
    displayName: "Malaisia ringgit",
    symbol: "MYR",
    one: "Malaisia ringgit",
    other: "Malaisia ringgit"
}, {
    id: "MWK",
    displayName: "Malavi kwacha",
    symbol: "MWK",
    one: "Malavi kwacha",
    other: "Malavi kwacha"
}, {
    id: "MVR",
    displayName: "Maldivoyggjar rufiyaa",
    symbol: "MVR",
    one: "Maldivoyggjar rufiyaa",
    other: "Maldivoyggjar rufiyaa"
}, {
    id: "MAD",
    displayName: "Marokko dirham",
    symbol: "MAD",
    one: "Marokko dirham",
    other: "Marokko dirham"
}, {
    id: "MXN",
    displayName: "Meksiko peso",
    symbol: "MX$",
    one: "Meksiko peso",
    other: "Meksiko peso"
}, {
    id: "XAF",
    displayName: "Miðafrika CFA frankur",
    symbol: "FCFA",
    one: "Miðafrika CFA frankur",
    other: "Miðafrika CFA frankar"
}, {
    id: "MDL",
    displayName: "Moldova leu",
    symbol: "MDL",
    one: "Moldova leu",
    other: "Moldova leu"
}, {
    id: "MNT",
    displayName: "Mongolia tugrik",
    symbol: "MNT",
    one: "Mongolia tugrik",
    other: "Mongolia tugrik"
}, {
    id: "MZN",
    displayName: "Mosambik metical",
    symbol: "MZN",
    one: "Mosambik metical",
    other: "Mosambik metical"
}, {
    id: "MMK",
    displayName: "Myanmar (Burma) kyat",
    symbol: "MMK",
    one: "Myanmar (Burma) kyat",
    other: "Myanmar (Burma) kyat"
}, {
    id: "MRO",
    displayName: "Móritania ouguiya",
    symbol: "MRO",
    one: "Móritania ouguiya",
    other: "Móritania ouguiya"
}, {
    id: "MUR",
    displayName: "Móritius rupi",
    symbol: "MUR",
    one: "Móritius rupi",
    other: "Móritius rupi"
}, {
    id: "NAD",
    displayName: "Namibia dollari",
    symbol: "NAD",
    one: "Namibia dollari",
    other: "Namibia dollarar"
}, {
    id: "NPR",
    displayName: "Nepal rupi",
    symbol: "NPR",
    one: "Nepal rupi",
    other: "Nepal rupis"
}, {
    id: "NGN",
    displayName: "Nigeria naira",
    symbol: "NGN",
    one: "Nigeria naira",
    other: "Nigeria naira"
}, {
    id: "NIO",
    displayName: "Nikaragua córdoba",
    symbol: "NIO",
    one: "Nikaragua córdoba",
    other: "Nikaragua córdoba"
}, {
    id: "ANG",
    displayName: "Niðurlonds Karibia gyllin",
    symbol: "ANG",
    one: "Niðurlonds Karibia gyllin",
    other: "Niðurlonds Karibia gyllin"
}, {
    id: "KPW",
    displayName: "Norðurkorea won",
    symbol: "KPW",
    one: "Norðurkorea won",
    other: "Norðurkorea won"
}, {
    id: "NZD",
    displayName: "Nýsæland dollari",
    symbol: "NZ$",
    one: "Nýsæland dollari",
    other: "Nýsæland dollarar"
}, {
    id: "OMR",
    displayName: "Oman rial",
    symbol: "OMR",
    one: "Oman rial",
    other: "Oman rial"
}, {
    id: "PKR",
    displayName: "Pakistan rupi",
    symbol: "PKR",
    one: "Pakistan rupi",
    other: "Pakistan rupis"
}, {
    id: "PAB",
    displayName: "Panama balboa",
    symbol: "PAB",
    one: "Panama balboa",
    other: "Panama balboa"
}, {
    id: "PGK",
    displayName: "Papua Nýguinea kina",
    symbol: "PGK",
    one: "Papua Nýguinea kina",
    other: "Papua Nýguinea kina"
}, {
    id: "PYG",
    displayName: "Paraguai guarani",
    symbol: "PYG",
    one: "Paraguai guarani",
    other: "Paraguai guarani"
}, {
    id: "PEN",
    displayName: "Peru nuevo sol",
    symbol: "PEN",
    one: "Peru nuevo sol",
    other: "Peru nuevo sol"
}, {
    id: "PLN",
    displayName: "Pólland zloty",
    symbol: "PLN",
    one: "Pólland zloty",
    other: "Pólland zloty"
}, {
    id: "RWF",
    displayName: "Ruanda frankur",
    symbol: "RWF",
    one: "Ruanda frankur",
    other: "Ruanda frankar"
}, {
    id: "RON",
    displayName: "Rumenia leu",
    symbol: "RON",
    one: "Rumenia leu",
    other: "Rumenia leu"
}, {
    id: "RUB",
    displayName: "Russland ruble",
    symbol: "RUB",
    one: "Russland ruble",
    other: "Russland ruble"
}, {
    id: "SBD",
    displayName: "Salomonoyggjar dollari",
    symbol: "SBD",
    one: "Salomonoyggjar dollari",
    other: "Salomonoyggjar dollarar"
}, {
    id: "ZMW",
    displayName: "Sambia kwacha",
    symbol: "ZMW",
    one: "Sambia kwacha",
    other: "Sambia kwacha"
}, {
    id: "AED",
    displayName: "Sameindu Emirríkini dirham",
    symbol: "AED",
    one: "Sameindu Emirríkini dirham",
    other: "Sameindu Emirríkini dirham"
}, {
    id: "WST",
    displayName: "Samoa tala",
    symbol: "WST",
    one: "Samoa tala",
    other: "Samoa tala"
}, {
    id: "STD",
    displayName: "Sao Tome & Prinsipi dobra",
    symbol: "STD",
    one: "Sao Tome & Prinsipi dobra",
    other: "Sao Tome & Prinsipi dobra"
}, {
    id: "SAR",
    displayName: "Saudiarabia riyal",
    symbol: "SAR",
    one: "Saudiarabia riyal",
    other: "Saudiarabia riyal"
}, {
    id: "RSD",
    displayName: "Serbia dinar",
    symbol: "RSD",
    one: "Serbia dinar",
    other: "Serbia dinar"
}, {
    id: "SCR",
    displayName: "Seyskelloyggjar rupi",
    symbol: "SCR",
    one: "Seyskelloyggjar rupi",
    other: "Seyskelloyggjar rupi"
}, {
    id: "SLL",
    displayName: "Sierra Leona leone",
    symbol: "SLL",
    one: "Sierra Leona leone",
    other: "Sierra Leona leone"
}, {
    id: "SGD",
    displayName: "Singapor dollari",
    symbol: "SGD",
    one: "Singapor dollari",
    other: "Singapor dollarar"
}, {
    id: "SOS",
    displayName: "Somalia skillingur",
    symbol: "SOS",
    one: "Somalia skillingur",
    other: "Somalia skillingar"
}, {
    id: "LKR",
    displayName: "Sri Lanka rupi",
    symbol: "LKR",
    one: "Sri Lanka rupi",
    other: "Sri Lanka rupis"
}, {
    id: "SHP",
    displayName: "St. Helena pund",
    symbol: "SHP",
    one: "St. Helena pund",
    other: "St. Helena pund"
}, {
    id: "SDG",
    displayName: "Sudan pund",
    symbol: "SDG",
    one: "Sudan pund",
    other: "Sudan pund"
}, {
    id: "SRD",
    displayName: "Surinam dollari",
    symbol: "SRD",
    one: "Surinam dollari",
    other: "Surinam dollarar"
}, {
    id: "ZAR",
    displayName: "Suðurafrika rand",
    symbol: "ZAR",
    one: "Suðurafrika rand",
    other: "Suðurafrika rand"
}, {
    id: "KRW",
    displayName: "Suðurkorea won",
    symbol: "₩",
    one: "Suðurkorea won",
    other: "Suðurkorea won"
}, {
    id: "SSP",
    displayName: "Suðursudan pund",
    symbol: "SSP",
    one: "Suðursudan pund",
    other: "Suðursudan pund"
}, {
    id: "SZL",
    displayName: "Svasiland lilangeni",
    symbol: "SZL",
    one: "Svasiland lilangeni",
    other: "Svasiland lilangeni"
}, {
    id: "SYP",
    displayName: "Sýria pund",
    symbol: "SYP",
    one: "Sýria pund",
    other: "Sýria pund"
}, {
    id: "TJS",
    displayName: "Tadsjikistan somoni",
    symbol: "TJS",
    one: "Tadsjikistan somoni",
    other: "Tadsjikistan somoni"
}, {
    id: "THB",
    displayName: "Tailand baht",
    symbol: "THB",
    one: "Tailand baht",
    other: "Tailand baht"
}, {
    id: "TWD",
    displayName: "Taivan new dollari",
    symbol: "NT$",
    one: "Taivan new dollari",
    other: "Taivan new dollarar"
}, {
    id: "TZS",
    displayName: "Tansania skillingur",
    symbol: "TZS",
    one: "Tansania skillingur",
    other: "Tansania skillingar"
}, {
    id: "TOP",
    displayName: "Tonga paʻanga",
    symbol: "TOP",
    one: "Tonga paʻanga",
    other: "Tonga paʻanga"
}, {
    id: "TTD",
    displayName: "Trinidad & Tobago dollari",
    symbol: "TTD",
    one: "Trinidad & Tobago dollari",
    other: "Trinidad & Tobago dollarar"
}, {
    id: "TND",
    displayName: "Tunesia dinar",
    symbol: "TND",
    one: "Tunesia dinar",
    other: "Tunesia dinar"
}, {
    id: "TRY",
    displayName: "Turkaland liri",
    symbol: "TRY",
    one: "Turkaland liri",
    other: "Turkaland lirir"
}, {
    id: "TMT",
    displayName: "Turkmenistan manat",
    symbol: "TMT",
    one: "Turkmenistan manat",
    other: "Turkmenistan manat"
}, {
    id: "USD",
    displayName: "US dollari",
    symbol: "US$",
    one: "US dollari",
    other: "US dollarar"
}, {
    id: "UGX",
    displayName: "Uganda skillingur",
    symbol: "UGX",
    one: "Uganda skillingur",
    other: "Uganda skillingar"
}, {
    id: "UAH",
    displayName: "Ukraina hryvnia",
    symbol: "UAH",
    one: "Ukraina hryvnia",
    other: "Ukraina hryvnia"
}, {
    id: "HUF",
    displayName: "Ungarn forint",
    symbol: "HUF",
    one: "Ungarn forint",
    other: "Ungarn forint"
}, {
    id: "UYU",
    displayName: "Uruguai peso",
    symbol: "UYU",
    one: "Uruguai peso",
    other: "Uruguai peso"
}, {
    id: "UZS",
    displayName: "Usbekistan som",
    symbol: "UZS",
    one: "Usbekistan som",
    other: "Usbekistan som"
}, {
    id: "VUV",
    displayName: "Vanuatu vatu",
    symbol: "VUV",
    one: "Vanuatu vatu",
    other: "Vanuatu vatu"
}, {
    id: "VEF",
    displayName: "Venesuela bolívar",
    symbol: "VEF",
    one: "Venesuela bolívar",
    other: "Venesuela bolívar"
}, {
    id: "XOF",
    displayName: "Vesturafrika CFA frankur",
    symbol: "CFA",
    one: "Vesturafrika CFA frankur",
    other: "Vesturafrika CFA frankar"
}, {
    id: "VND",
    displayName: "Vjetnam dong",
    symbol: "₫",
    one: "Vjetnam dong",
    other: "Vjetnam dong"
}, {
    id: "GBP",
    displayName: "bretsk pund",
    symbol: "£",
    one: "bretsk pund",
    other: "bretsk pund"
}, {
    id: "DKK",
    displayName: "donsk króna",
    symbol: "kr",
    one: "donsk króna",
    other: "danskar krónur"
}, {
    id: "INR",
    displayName: "indiskir rupis",
    symbol: "₹",
    one: "indiskur rupi",
    other: "indiskir rupis"
}, {
    id: "IRR",
    displayName: "iranskir rials",
    symbol: "IRR",
    one: "iranskur rial",
    other: "iranskir rials"
}, {
    id: "JPY",
    displayName: "japanskur yen",
    symbol: "JP¥",
    one: "japanskur yen",
    other: "japanskir yen"
}, {
    id: "KES",
    displayName: "kenjanskur skillingur",
    symbol: "KES",
    one: "kenjanskur skillingur",
    other: "kenjanskir skillingar"
}, {
    id: "CNY",
    displayName: "kinesiskur yuan",
    symbol: "CN¥",
    one: "kinesiskur yuan",
    other: "kinesiskir yuan"
}, {
    id: "NOK",
    displayName: "norsk króna",
    symbol: "NOK",
    one: "norsk króna",
    other: "norskar krónur"
}, {
    id: "CHF",
    displayName: "sveisiskur frankur",
    symbol: "CHF",
    one: "sveisiskur frankur",
    other: "sveisiskir frankar"
}, {
    id: "SEK",
    displayName: "svensk króna",
    symbol: "SEK",
    one: "svensk króna",
    other: "svenskar krónur"
}, {
    id: "XAU",
    displayName: "unse guld",
    one: "unse guld",
    other: "unse guld"
}, {
    id: "XPD",
    displayName: "unse palladium",
    one: "unse palladium",
    other: "unse palladium"
}, {
    id: "XPT",
    displayName: "unse platin",
    one: "unse platin",
    other: "unse platin"
}, {
    id: "XAG",
    displayName: "unse sølv",
    one: "unse sølv",
    other: "unse sølv"
}, {
    id: "ILS",
    displayName: "Ísrael new sheqel",
    symbol: "₪",
    one: "Ísrael new sheqel",
    other: "Ísrael new sheqel"
}, {
    id: "ISK",
    displayName: "íslendsk króna",
    symbol: "ISK",
    one: "íslendsk króna",
    other: "íslendskar krónur"
}, {
    id: "XXX",
    displayName: "ókent gjaldoyra",
    one: "(ókent gjaldoyra)",
    other: "(ókent gjaldoyra)"
} ];

module.exports = inter;