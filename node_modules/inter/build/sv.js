function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _5fvj1 = {
    "default": "#,##0 %"
}, _5fvj2 = [ "K1", "K2", "K3", "K4" ], _5fvj3 = {
    displayName: "fm/em"
}, _5fvj4 = {
    all: {
        leap: "{0}bis"
    }
}, _5fvj5 = {
    d: "d–d/M",
    M: "d/M–d/M"
}, _5fvj6 = {
    displayName: "tidszon"
}, _5fvj7 = {
    displayName: "veckodag"
}, _5fvj8 = {
    one: "{0}°",
    other: "{0}°"
}, _5fvj9 = {
    one: "{0}′",
    other: "{0}′"
}, _5fvj10 = {
    one: "{0}″",
    other: "{0}″"
}, _5fvj11 = {
    one: "{0}m",
    other: "{0}m"
}, _5fvj12 = {
    one: "0 tn",
    other: "0 tn"
}, _5fvj13 = {
    one: "0 mn",
    other: "0 mn"
}, _5fvj14 = {
    one: "0 md",
    other: "0 md"
}, _5fvj15 = {
    one: "0 bn",
    other: "0 bn"
}, _5fvj16 = {
    a: "h a – h a",
    h: "h–h a"
}, _5fvj17 = {
    one: "{0} l",
    other: "{0} l"
}, _5fvj18 = {
    one: "00 tn",
    other: "00 tn"
}, _5fvj19 = {
    one: "00 mn",
    other: "00 mn"
}, _5fvj20 = {
    one: "00 md",
    other: "00 md"
}, _5fvj21 = {
    one: "00 bn",
    other: "00 bn"
}, _5fvj22 = {
    one: "{0} GB",
    other: "{0} GB"
}, _5fvj23 = {
    one: "{0} MB",
    other: "{0} MB"
}, _5fvj24 = {
    one: "{0} kB",
    other: "{0} kB"
}, _5fvj25 = {
    one: "{0} år",
    other: "{0} år"
}, _5fvj26 = {
    one: "{0} ac",
    other: "{0} ac"
}, _5fvj27 = {
    one: "{0} °C",
    other: "{0} °C"
}, _5fvj28 = {
    one: "000 tn",
    other: "000 tn"
}, _5fvj29 = {
    one: "000 mn",
    other: "000 mn"
}, _5fvj30 = {
    one: "000 md",
    other: "000 md"
}, _5fvj31 = {
    one: "000 bn",
    other: "000 bn"
}, _5fvj32 = {
    one: "0 tn ¤",
    other: "0 tn ¤"
}, _5fvj33 = {
    one: "0 mn ¤",
    other: "0 mn ¤"
}, _5fvj34 = {
    one: "0 md ¤",
    other: "0 md ¤"
}, _5fvj35 = {
    one: "0 bn ¤",
    other: "0 bn ¤"
}, _5fvj36 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _5fvj37 = [ "S", "M", "T", "O", "T", "F", "L" ], _5fvj38 = {
    one: "−{0} v",
    other: "−{0} v"
}, _5fvj39 = {
    one: "+{0} d",
    other: "+{0} d"
}, _5fvj40 = {
    one: "−{0} d",
    other: "−{0} d"
}, _5fvj41 = {
    one: "+{0} h",
    other: "+{0} h"
}, _5fvj42 = {
    one: "−{0} h",
    other: "−{0} h"
}, _5fvj43 = {
    one: "+{0} s",
    other: "+{0} s"
}, _5fvj44 = {
    one: "−{0} s",
    other: "−{0} s"
}, _5fvj45 = {
    one: "{0} MHz",
    other: "{0} MHz"
}, _5fvj46 = {
    one: "{0} fot",
    other: "{0} fot"
}, _5fvj47 = {
    one: "{0} tum",
    other: "{0} tum"
}, _5fvj48 = {
    one: "{0} mil",
    other: "{0} mil"
}, _5fvj49 = {
    one: "{0} lux",
    other: "{0} lux"
}, _5fvj50 = {
    one: "{0} uns",
    other: "{0} uns"
}, _5fvj51 = {
    one: "{0} cal",
    other: "{0} cal"
}, _5fvj52 = {
    one: "0 tusen",
    other: "0 tusen"
}, _5fvj53 = {
    one: "00 tn ¤",
    other: "00 tn ¤"
}, _5fvj54 = {
    one: "00 mn ¤",
    other: "00 mn ¤"
}, _5fvj55 = {
    one: "00 md ¤",
    other: "00 md ¤"
}, _5fvj56 = {
    one: "00 bn ¤",
    other: "00 bn ¤"
}, _5fvj57 = {
    d: "d–d MMM",
    M: "d MMM – d MMM"
}, _5fvj58 = {
    one: "+{0} år",
    other: "+{0} år"
}, _5fvj59 = {
    one: "−{0} år",
    other: "−{0} år"
}, _5fvj60 = {
    one: "−{0} kv",
    other: "−{0} kv"
}, _5fvj61 = {
    one: "+{0} v.",
    other: "+{0} v."
}, _5fvj62 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _5fvj63 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _5fvj64 = {
    one: "{0} varv",
    other: "{0} varv"
}, _5fvj65 = {
    one: "{0} pund",
    other: "{0} pund"
}, _5fvj66 = {
    one: "{0} knop",
    other: "{0} knop"
}, _5fvj67 = {
    one: "{0} pint",
    other: "{0} pint"
}, _5fvj68 = {
    one: "{0} tum²",
    other: "{0} tum²"
}, _5fvj69 = {
    one: "{0} kcal",
    other: "{0} kcal"
}, _5fvj70 = {
    one: "{0} mi/h",
    other: "{0} mi/h"
}, _5fvj71 = {
    one: "{0} fot³",
    other: "{0} fot³"
}, _5fvj72 = {
    one: "{0} tum³",
    other: "{0} tum³"
}, _5fvj73 = {
    one: "00 tusen",
    other: "00 tusen"
}, _5fvj74 = {
    one: "000 tn ¤",
    other: "000 tn ¤"
}, _5fvj75 = {
    one: "000 mn ¤",
    other: "000 mn ¤"
}, _5fvj76 = {
    one: "000 md ¤",
    other: "000 md ¤"
}, _5fvj77 = {
    one: "000 bn ¤",
    other: "000 bn ¤"
}, _5fvj78 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _5fvj79 = {
    one: "+{0} kv.",
    other: "+{0} kv."
}, _5fvj80 = {
    one: "−{0} mån",
    other: "−{0} mån"
}, _5fvj81 = {
    one: "om {0} d",
    other: "om {0} d"
}, _5fvj82 = {
    one: "+{0} min",
    other: "+{0} min"
}, _5fvj83 = {
    one: "−{0} min",
    other: "−{0} min"
}, _5fvj84 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _5fvj85 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _5fvj86 = {
    one: "{0} yard²",
    other: "{0} yard²"
}, _5fvj87 = {
    one: "{0} karat",
    other: "{0} karat"
}, _5fvj88 = {
    one: "{0} famn",
    other: "{0} famnar"
}, _5fvj89 = {
    one: "{0} quart",
    other: "{0} quart"
}, _5fvj90 = {
    one: "{0} kopp",
    other: "{0} koppar"
}, _5fvj91 = {
    one: "000 tusen",
    other: "000 tusen"
}, _5fvj92 = {
    one: "0 miljon",
    other: "0 miljoner"
}, _5fvj93 = {
    one: "0 biljon",
    other: "0 biljoner"
}, _5fvj94 = {
    M: "G y-MM – MM",
    y: "G y-MM – y-MM"
}, _5fvj95 = {
    one: "om {0} år",
    other: "om {0} år"
}, _5fvj96 = {
    one: "+{0} mån.",
    other: "+{0} mån."
}, _5fvj97 = {
    one: "om {0} v.",
    other: "om {0} v."
}, _5fvj98 = [ "sö", "må", "ti", "on", "to", "fr", "lö" ], _5fvj99 = {
    one: "{0} parsec",
    other: "{0} parsec"
}, _5fvj100 = {
    one: "{0} ljusår",
    other: "{0} ljusår"
}, _5fvj101 = {
    one: "{0} tum Hg",
    other: "{0} tum Hg"
}, _5fvj102 = {
    one: "00 miljon",
    other: "00 miljoner"
}, _5fvj103 = {
    one: "0 miljard",
    other: "0 miljarder"
}, _5fvj104 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _5fvj105 = {
    d: "E d/M – E d/M",
    M: "E d/M – E d/M"
}, _5fvj106 = {
    M: "MMM–MMM y G",
    y: "MMM y – MMM y G"
}, _5fvj107 = {
    "0": "i år",
    "1": "nästa år",
    "-1": "i fjol"
}, _5fvj108 = {
    one: "om {0} kv.",
    other: "om {0} kv."
}, _5fvj109 = {
    one: "om {0} tim",
    other: "om {0} tim"
}, _5fvj110 = {
    one: "om {0} min",
    other: "om {0} min"
}, _5fvj111 = {
    one: "om {0} sek",
    other: "om {0} sek"
}, _5fvj112 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _5fvj113 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _5fvj114 = {
    one: "{0} skäppa",
    other: "{0} skäppor"
}, _5fvj115 = {
    one: "00 biljoner",
    other: "00 biljoner"
}, _5fvj116 = {
    one: "om {0} mån.",
    other: "om {0} mån."
}, _5fvj117 = {
    one: "om {0} dag",
    other: "om {0} dagar"
}, _5fvj118 = {
    one: "{0} l/100 km",
    other: "{0} l/100 km"
}, _5fvj119 = {
    one: "000 miljoner",
    other: "000 miljoner"
}, _5fvj120 = {
    one: "00 miljarder",
    other: "00 miljarder"
}, _5fvj121 = {
    one: "000 biljoner",
    other: "000 biljoner"
}, _5fvj122 = {
    d: "E d – E d MMM",
    M: "E d MMM – E d MMM"
}, _5fvj123 = {
    M: "MMMM–MMMM y G",
    y: "MMMM y – MMMM y G"
}, _5fvj124 = {
    one: "om {0} vecka",
    other: "om {0} veckor"
}, _5fvj125 = {
    one: "om {0} timme",
    other: "om {0} timmar"
}, _5fvj126 = {
    one: "000 miljarder",
    other: "000 miljarder"
}, _5fvj127 = {
    one: "om {0} månad",
    other: "om {0} månader"
}, _5fvj128 = {
    "0": "denna v.",
    "1": "nästa v.",
    "-1": "förra v."
}, _5fvj129 = {
    one: "om {0} minut",
    other: "om {0} minuter"
}, _5fvj130 = [ "sön", "mån", "tis", "ons", "tors", "fre", "lör" ], _5fvj131 = {
    one: "{0} kvadratfot",
    other: "{0} kvadratfot"
}, _5fvj132 = {
    one: "om {0} kvartal",
    other: "om {0} kvartal"
}, _5fvj133 = {
    one: "om {0} sekund",
    other: "om {0} sekunder"
}, _5fvj134 = {
    "0": "detta kv.",
    "1": "nästa kv.",
    "-1": "förra kv."
}, _5fvj135 = {
    one: "{0} kilokalori",
    other: "{0} kilokalorier"
}, _5fvj136 = {
    one: "för {0} d sedan",
    other: "för {0} d sedan"
}, _5fvj137 = {
    id: "CX",
    displayName: "Julön",
    hasTimeZones: true
}, _5fvj138 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _5fvj139 = {
    one: "för {0} år sedan",
    other: "för {0} år sedan"
}, _5fvj140 = {
    "0": "denna mån.",
    "1": "nästa mån.",
    "-1": "förra mån."
}, _5fvj141 = {
    one: "för {0} v. sedan",
    other: "för {0} v. sedan"
}, _5fvj142 = {
    "0": "denna sön.",
    "1": "nästa sön.",
    "-1": "förra sön."
}, _5fvj143 = {
    "0": "denna tis.",
    "1": "nästa tis.",
    "-1": "förra tis."
}, _5fvj144 = {
    "0": "denna ons.",
    "1": "nästa ons.",
    "-1": "förra ons."
}, _5fvj145 = {
    "0": "denna fre.",
    "1": "nästa fre.",
    "-1": "förra fre."
}, _5fvj146 = {
    "0": "denna lör.",
    "1": "nästa lör.",
    "-1": "förra lör."
}, _5fvj147 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _5fvj148 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _5fvj149 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _5fvj150 = {
    one: "för {0} kv. sedan",
    other: "för {0} kv. sedan"
}, _5fvj151 = {
    one: "för {0} tim sedan",
    other: "för {0} tim sedan"
}, _5fvj152 = {
    one: "för {0} min sedan",
    other: "för {0} min sedan"
}, _5fvj153 = {
    one: "för {0} sek sedan",
    other: "för {0} sek sedan"
}, _5fvj154 = {
    id: "AQ",
    displayName: "Antarktis",
    hasTimeZones: true
}, _5fvj155 = {
    id: "BV",
    displayName: "Bouvetön",
    hasTimeZones: false
}, _5fvj156 = {
    id: "001",
    displayName: "världen",
    hasTimeZones: false
}, _5fvj157 = {
    "0": "denna tors.",
    "1": "nästa tors.",
    "-1": "förra tors."
}, _5fvj158 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _5fvj159 = {
    id: "AC",
    displayName: "Ascension",
    hasTimeZones: false
}, _5fvj160 = {
    id: "CC",
    displayName: "Kokosöarna",
    hasTimeZones: true
}, _5fvj161 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _5fvj162 = {
    one: "för {0} mån. sedan",
    other: "för {0} mån. sedan"
}, _5fvj163 = {
    "0": "denna vecka",
    "1": "nästa vecka",
    "-1": "förra veckan"
}, _5fvj164 = {
    one: "för {0} dag sedan",
    other: "för {0} dagar sedan"
}, _5fvj165 = {
    "0": "denna månad",
    "1": "nästa månad",
    "-1": "förra månaden"
}, _5fvj166 = {
    id: "CP",
    displayName: "Clippertonön",
    hasTimeZones: false
}, _5fvj167 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _5fvj168 = {
    id: "IC",
    displayName: "Kanarieöarna",
    hasTimeZones: false
}, _5fvj169 = {
    one: "för {0} vecka sedan",
    other: "för {0} veckor sedan"
}, _5fvj170 = {
    one: "för {0} timme sedan",
    other: "för {0} timmar sedan"
}, _5fvj171 = {
    one: "för {0} månad sedan",
    other: "för {0} månader sedan"
}, _5fvj172 = {
    one: "för {0} minut sedan",
    other: "för {0} minuter sedan"
}, _5fvj173 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _5fvj174 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _5fvj175 = {
    id: "UM",
    displayName: "USA:s yttre öar",
    hasTimeZones: true
}, _5fvj176 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _5fvj177 = {
    d: "d–d MMM y G",
    M: "d MMM–d MMM y G",
    y: "d MMM y–d MMM y G"
}, _5fvj178 = {
    one: "för {0} kvartal sedan",
    other: "för {0} kvartal sedan"
}, _5fvj179 = {
    one: "för {0} sekund sedan",
    other: "för {0} sekunder sedan"
}, _5fvj180 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _5fvj181 = {
    "0": "detta kvartal",
    "1": "nästa kvartal",
    "-1": "förra kvartalet"
}, _5fvj182 = {
    relative: _5fvj142
}, _5fvj183 = {
    relative: _5fvj140
}, _5fvj184 = {
    relative: _5fvj143
}, _5fvj185 = {
    relative: _5fvj144
}, _5fvj186 = {
    relative: _5fvj145
}, _5fvj187 = {
    relative: _5fvj146
}, _5fvj188 = {
    id: "EA",
    displayName: "Ceuta och Melilla",
    hasTimeZones: false
}, _5fvj189 = {
    id: "US",
    displayName: "USA",
    regionId: "021",
    hasTimeZones: true
}, _5fvj190 = {
    id: "FJ",
    displayName: "Fiji",
    regionId: "054",
    hasTimeZones: true
}, _5fvj191 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _5fvj192 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _5fvj193 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _5fvj194 = {
    id: "CN",
    displayName: "Kina",
    regionId: "030",
    hasTimeZones: true
}, _5fvj195 = {
    id: "CU",
    displayName: "Kuba",
    regionId: "029",
    hasTimeZones: true
}, _5fvj196 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _5fvj197 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _5fvj198 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _5fvj199 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _5fvj200 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _5fvj201 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _5fvj202 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _5fvj203 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _5fvj204 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _5fvj205 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _5fvj206 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _5fvj207 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _5fvj208 = {
    id: "JP",
    displayName: "Japan",
    regionId: "030",
    hasTimeZones: true
}, _5fvj209 = {
    id: "YE",
    displayName: "Jemen",
    regionId: "145",
    hasTimeZones: true
}, _5fvj210 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _5fvj211 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _5fvj212 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _5fvj213 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _5fvj214 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _5fvj215 = {
    id: "NO",
    displayName: "Norge",
    regionId: "154",
    hasTimeZones: true
}, _5fvj216 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _5fvj217 = {
    id: "PL",
    displayName: "Polen",
    regionId: "151",
    hasTimeZones: true
}, _5fvj218 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _5fvj219 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _5fvj220 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _5fvj221 = {
    id: "TD",
    displayName: "Tchad",
    regionId: "017",
    hasTimeZones: true
}, _5fvj222 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _5fvj223 = {
    id: "AX",
    displayName: "Åland",
    regionId: "154",
    hasTimeZones: true
}, _5fvj224 = {
    relative: _5fvj157
}, _5fvj225 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _5fvj226 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _5fvj227 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _5fvj228 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _5fvj229 = {
    id: "CY",
    displayName: "Cypern",
    regionId: "145",
    hasTimeZones: true
}, _5fvj230 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _5fvj231 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _5fvj232 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _5fvj233 = {
    id: "IN",
    displayName: "Indien",
    regionId: "034",
    hasTimeZones: true
}, _5fvj234 = {
    id: "IE",
    displayName: "Irland",
    regionId: "154",
    hasTimeZones: true
}, _5fvj235 = {
    id: "IS",
    displayName: "Island",
    regionId: "154",
    hasTimeZones: true
}, _5fvj236 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _5fvj237 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _5fvj238 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _5fvj239 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _5fvj240 = {
    id: "LY",
    displayName: "Libyen",
    regionId: "015",
    hasTimeZones: true
}, _5fvj241 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _5fvj242 = {
    id: "MX",
    displayName: "Mexiko",
    regionId: "013",
    hasTimeZones: true
}, _5fvj243 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _5fvj244 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _5fvj245 = {
    id: "RW",
    displayName: "Rwanda",
    regionId: "014",
    hasTimeZones: true
}, _5fvj246 = {
    id: "SY",
    displayName: "Syrien",
    regionId: "145",
    hasTimeZones: true
}, _5fvj247 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _5fvj248 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _5fvj249 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _5fvj250 = {
    id: "HU",
    displayName: "Ungern",
    regionId: "151",
    hasTimeZones: true
}, _5fvj251 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _5fvj252 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _5fvj253 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _5fvj254 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _5fvj255 = {
    id: "BE",
    displayName: "Belgien",
    regionId: "155",
    hasTimeZones: true
}, _5fvj256 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _5fvj257 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _5fvj258 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _5fvj259 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _5fvj260 = {
    id: "DK",
    displayName: "Danmark",
    regionId: "154",
    hasTimeZones: true
}, _5fvj261 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _5fvj262 = {
    id: "EG",
    displayName: "Egypten",
    regionId: "015",
    hasTimeZones: true
}, _5fvj263 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _5fvj264 = {
    id: "EE",
    displayName: "Estland",
    regionId: "154",
    hasTimeZones: true
}, _5fvj265 = {
    id: "FI",
    displayName: "Finland",
    regionId: "154",
    hasTimeZones: true
}, _5fvj266 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _5fvj267 = {
    id: "IT",
    displayName: "Italien",
    regionId: "039",
    hasTimeZones: true
}, _5fvj268 = {
    id: "JM",
    displayName: "Jamaica",
    regionId: "029",
    hasTimeZones: true
}, _5fvj269 = {
    id: "CM",
    displayName: "Kamerun",
    regionId: "017",
    hasTimeZones: true
}, _5fvj270 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _5fvj271 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _5fvj272 = {
    id: "LB",
    displayName: "Libanon",
    regionId: "145",
    hasTimeZones: true
}, _5fvj273 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _5fvj274 = {
    id: "LT",
    displayName: "Litauen",
    regionId: "154",
    hasTimeZones: true
}, _5fvj275 = {
    id: "MA",
    displayName: "Marocko",
    regionId: "015",
    hasTimeZones: true
}, _5fvj276 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _5fvj277 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _5fvj278 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _5fvj279 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _5fvj280 = {
    id: "CH",
    displayName: "Schweiz",
    regionId: "155",
    hasTimeZones: true
}, _5fvj281 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _5fvj282 = {
    id: "RS",
    displayName: "Serbien",
    regionId: "039",
    hasTimeZones: true
}, _5fvj283 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _5fvj284 = {
    id: "ES",
    displayName: "Spanien",
    regionId: "039",
    hasTimeZones: true
}, _5fvj285 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _5fvj286 = {
    id: "SE",
    displayName: "Sverige",
    regionId: "154",
    hasTimeZones: true
}, _5fvj287 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _5fvj288 = {
    id: "TR",
    displayName: "Turkiet",
    regionId: "145",
    hasTimeZones: true
}, _5fvj289 = {
    id: "UA",
    displayName: "Ukraina",
    regionId: "151",
    hasTimeZones: true
}, _5fvj290 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _5fvj291 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _5fvj292 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _5fvj293 = [ "söndag", "måndag", "tisdag", "onsdag", "torsdag", "fredag", "lördag" ], _5fvj294 = [ "1:a kvartalet", "2:a kvartalet", "3:e kvartalet", "4:e kvartalet" ], _5fvj295 = {
    id: "AL",
    displayName: "Albanien",
    regionId: "039",
    hasTimeZones: true
}, _5fvj296 = {
    id: "DZ",
    displayName: "Algeriet",
    regionId: "015",
    hasTimeZones: true
}, _5fvj297 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _5fvj298 = {
    id: "AM",
    displayName: "Armenien",
    regionId: "145",
    hasTimeZones: true
}, _5fvj299 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _5fvj300 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _5fvj301 = {
    id: "CO",
    displayName: "Colombia",
    regionId: "005",
    hasTimeZones: true
}, _5fvj302 = {
    id: "DJ",
    displayName: "Djibouti",
    regionId: "014",
    hasTimeZones: true
}, _5fvj303 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _5fvj304 = {
    id: "ET",
    displayName: "Etiopien",
    regionId: "014",
    hasTimeZones: true
}, _5fvj305 = {
    id: "FO",
    displayName: "Färöarna",
    regionId: "154",
    hasTimeZones: true
}, _5fvj306 = {
    id: "GE",
    displayName: "Georgien",
    regionId: "145",
    hasTimeZones: true
}, _5fvj307 = {
    id: "GR",
    displayName: "Grekland",
    regionId: "039",
    hasTimeZones: true
}, _5fvj308 = {
    id: "GL",
    displayName: "Grönland",
    regionId: "021",
    hasTimeZones: true
}, _5fvj309 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _5fvj310 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _5fvj311 = {
    id: "KH",
    displayName: "Kambodja",
    regionId: "035",
    hasTimeZones: true
}, _5fvj312 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _5fvj313 = {
    id: "HR",
    displayName: "Kroatien",
    regionId: "039",
    hasTimeZones: true
}, _5fvj314 = {
    id: "LV",
    displayName: "Lettland",
    regionId: "154",
    hasTimeZones: true
}, _5fvj315 = {
    id: "MY",
    displayName: "Malaysia",
    regionId: "035",
    hasTimeZones: true
}, _5fvj316 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _5fvj317 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _5fvj318 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _5fvj319 = {
    id: "RO",
    displayName: "Rumänien",
    regionId: "151",
    hasTimeZones: true
}, _5fvj320 = {
    id: "RU",
    displayName: "Ryssland",
    regionId: "151",
    hasTimeZones: true
}, _5fvj321 = {
    id: "KR",
    displayName: "Sydkorea",
    regionId: "030",
    hasTimeZones: true
}, _5fvj322 = {
    id: "SS",
    displayName: "Sydsudan",
    regionId: "014",
    hasTimeZones: true
}, _5fvj323 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _5fvj324 = {
    id: "TH",
    displayName: "Thailand",
    regionId: "035",
    hasTimeZones: true
}, _5fvj325 = {
    id: "CZ",
    displayName: "Tjeckien",
    regionId: "151",
    hasTimeZones: true
}, _5fvj326 = {
    id: "TN",
    displayName: "Tunisien",
    regionId: "015",
    hasTimeZones: true
}, _5fvj327 = {
    id: "DE",
    displayName: "Tyskland",
    regionId: "155",
    hasTimeZones: true
}, _5fvj328 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _5fvj329 = {
    id: "TL",
    displayName: "Östtimor",
    regionId: "035",
    hasTimeZones: true
}, _5fvj330 = {
    d: "G y-MM-dd – dd",
    M: "G y-MM-dd – MM-dd",
    y: "G y-MM-dd – y-MM-dd"
}, _5fvj331 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _5fvj332 = {
    id: "BR",
    displayName: "Brasilien",
    regionId: "005",
    hasTimeZones: true
}, _5fvj333 = {
    id: "BG",
    displayName: "Bulgarien",
    regionId: "151",
    hasTimeZones: true
}, _5fvj334 = {
    id: "CK",
    displayName: "Cooköarna",
    regionId: "061",
    hasTimeZones: true
}, _5fvj335 = {
    id: "FR",
    displayName: "Frankrike",
    regionId: "155",
    hasTimeZones: true
}, _5fvj336 = {
    id: "TF",
    displayName: "Franska sydterritorierna",
    hasTimeZones: true
}, _5fvj337 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _5fvj338 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _5fvj339 = {
    id: "JO",
    displayName: "Jordanien",
    regionId: "145",
    hasTimeZones: true
}, _5fvj340 = {
    id: "CV",
    displayName: "Kap Verde",
    regionId: "011",
    hasTimeZones: true
}, _5fvj341 = {
    id: "KZ",
    displayName: "Kazakstan",
    regionId: "143",
    hasTimeZones: true
}, _5fvj342 = {
    id: "KM",
    displayName: "Komorerna",
    regionId: "014",
    hasTimeZones: true
}, _5fvj343 = {
    id: "LU",
    displayName: "Luxemburg",
    regionId: "155",
    hasTimeZones: true
}, _5fvj344 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _5fvj345 = {
    id: "MD",
    displayName: "Moldavien",
    regionId: "151",
    hasTimeZones: true
}, _5fvj346 = {
    id: "MN",
    displayName: "Mongoliet",
    regionId: "030",
    hasTimeZones: true
}, _5fvj347 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _5fvj348 = {
    id: "KP",
    displayName: "Nordkorea",
    regionId: "030",
    hasTimeZones: true
}, _5fvj349 = {
    id: "NF",
    displayName: "Norfolkön",
    regionId: "053",
    hasTimeZones: true
}, _5fvj350 = {
    id: "LC",
    displayName: "S:t Lucia",
    regionId: "029",
    hasTimeZones: true
}, _5fvj351 = {
    id: "SG",
    displayName: "Singapore",
    regionId: "035",
    hasTimeZones: true
}, _5fvj352 = {
    id: "SK",
    displayName: "Slovakien",
    regionId: "151",
    hasTimeZones: true
}, _5fvj353 = {
    id: "SI",
    displayName: "Slovenien",
    regionId: "039",
    hasTimeZones: true
}, _5fvj354 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _5fvj355 = {
    id: "SZ",
    displayName: "Swaziland",
    regionId: "018",
    hasTimeZones: true
}, _5fvj356 = {
    id: "ZA",
    displayName: "Sydafrika",
    regionId: "018",
    hasTimeZones: true
}, _5fvj357 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _5fvj358 = {
    id: "AT",
    displayName: "Österrike",
    regionId: "155",
    hasTimeZones: true
}, _5fvj359 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _5fvj360 = {
    id: "AU",
    displayName: "Australien",
    regionId: "053",
    hasTimeZones: true
}, _5fvj361 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _5fvj362 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _5fvj363 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _5fvj364 = {
    id: "ID",
    displayName: "Indonesien",
    regionId: "035",
    hasTimeZones: true
}, _5fvj365 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _5fvj366 = {
    id: "MK",
    displayName: "Makedonien",
    regionId: "039",
    hasTimeZones: true
}, _5fvj367 = {
    id: "MV",
    displayName: "Maldiverna",
    regionId: "034",
    hasTimeZones: true
}, _5fvj368 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _5fvj369 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _5fvj370 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _5fvj371 = {
    id: "MZ",
    displayName: "Moçambique",
    regionId: "014",
    hasTimeZones: true
}, _5fvj372 = {
    id: "SH",
    displayName: "S:t Helena",
    regionId: "011",
    hasTimeZones: true
}, _5fvj373 = {
    id: "MF",
    displayName: "S:t Martin",
    regionId: "029",
    hasTimeZones: true
}, _5fvj374 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _5fvj375 = {
    id: "UZ",
    displayName: "Uzbekistan",
    regionId: "143",
    hasTimeZones: true
}, _5fvj376 = {
    id: "EH",
    displayName: "Västsahara",
    regionId: "015",
    hasTimeZones: true
}, _5fvj377 = {
    "0": "sön. denna vecka",
    "1": "sön. nästa vecka",
    "-1": "sön. förra veckan"
}, _5fvj378 = {
    "0": "mån. denna vecka",
    "1": "mån. nästa vecka",
    "-1": "mån. förra veckan"
}, _5fvj379 = {
    "0": "tis. denna vecka",
    "1": "tis. nästa vecka",
    "-1": "tis. förra veckan"
}, _5fvj380 = {
    "0": "ons. denna vecka",
    "1": "ons. nästa vecka",
    "-1": "ons. förra veckan"
}, _5fvj381 = {
    "0": "fre. denna vecka",
    "1": "fre. nästa vecka",
    "-1": "fre. förra veckan"
}, _5fvj382 = {
    "0": "lör. denna vecka",
    "1": "lör. nästa vecka",
    "-1": "lör. förra veckan"
}, _5fvj383 = {
    id: "AF",
    displayName: "Afghanistan",
    regionId: "034",
    hasTimeZones: true
}, _5fvj384 = {
    id: "KY",
    displayName: "Caymanöarna",
    regionId: "029",
    hasTimeZones: true
}, _5fvj385 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _5fvj386 = {
    id: "HM",
    displayName: "Heardön och McDonaldöarna",
    hasTimeZones: false
}, _5fvj387 = {
    id: "IM",
    displayName: "Isle of Man",
    regionId: "154",
    hasTimeZones: true
}, _5fvj388 = {
    id: "KG",
    displayName: "Kirgizistan",
    regionId: "143",
    hasTimeZones: true
}, _5fvj389 = {
    id: "MR",
    displayName: "Mauretanien",
    regionId: "011",
    hasTimeZones: true
}, _5fvj390 = {
    id: "FM",
    displayName: "Mikronesien",
    regionId: "057",
    hasTimeZones: true
}, _5fvj391 = {
    id: "NZ",
    displayName: "Nya Zeeland",
    regionId: "053",
    hasTimeZones: true
}, _5fvj392 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _5fvj393 = {
    id: "BY",
    displayName: "Vitryssland",
    regionId: "151",
    hasTimeZones: true
}, _5fvj394 = {
    id: "AZ",
    displayName: "Azerbajdzjan",
    regionId: "145",
    hasTimeZones: true
}, _5fvj395 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _5fvj396 = {
    id: "PH",
    displayName: "Filippinerna",
    regionId: "035",
    hasTimeZones: true
}, _5fvj397 = {
    id: "SB",
    displayName: "Salomonöarna",
    regionId: "054",
    hasTimeZones: true
}, _5fvj398 = {
    id: "SA",
    displayName: "Saudiarabien",
    regionId: "145",
    hasTimeZones: true
}, _5fvj399 = {
    id: "SC",
    displayName: "Seychellerna",
    regionId: "014",
    hasTimeZones: true
}, _5fvj400 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _5fvj401 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _5fvj402 = {
    id: "TJ",
    displayName: "Tadzjikistan",
    regionId: "143",
    hasTimeZones: true
}, _5fvj403 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _5fvj404 = {
    id: "142",
    displayName: "Asien",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5fvj405 = {
    id: "GW",
    displayName: "Guinea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _5fvj406 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _5fvj407 = {
    id: "MH",
    displayName: "Marshallöarna",
    regionId: "057",
    hasTimeZones: true
}, _5fvj408 = {
    id: "NL",
    displayName: "Nederländerna",
    regionId: "155",
    hasTimeZones: true
}, _5fvj409 = {
    id: "PN",
    displayName: "Pitcairnöarna",
    regionId: "061",
    hasTimeZones: true
}, _5fvj410 = {
    id: "VA",
    displayName: "Vatikanstaten",
    regionId: "039",
    hasTimeZones: true
}, _5fvj411 = {
    "0": "i dag",
    "1": "i morgon",
    "2": "i övermorgon",
    "-2": "i förrgår",
    "-1": "i går"
}, _5fvj412 = {
    "0": "tors. denna vecka",
    "1": "tors. nästa vecka",
    "-1": "tors. förra veckan"
}, _5fvj413 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _5fvj414 = {
    id: "002",
    displayName: "Afrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5fvj415 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5fvj416 = {
    id: "FK",
    displayName: "Falklandsöarna",
    regionId: "005",
    hasTimeZones: true
}, _5fvj417 = {
    id: "GF",
    displayName: "Franska Guyana",
    regionId: "005",
    hasTimeZones: true
}, _5fvj418 = {
    id: "CD",
    displayName: "Kongo-Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _5fvj419 = {
    id: "MP",
    displayName: "Nordmarianerna",
    regionId: "057",
    hasTimeZones: true
}, _5fvj420 = {
    id: "NC",
    displayName: "Nya Kaledonien",
    regionId: "054",
    hasTimeZones: true
}, _5fvj421 = {
    id: "BL",
    displayName: "S:t Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _5fvj422 = {
    id: "GB",
    displayName: "Storbritannien",
    regionId: "154",
    hasTimeZones: true
}, _5fvj423 = {
    id: "CI",
    displayName: "Elfenbenskusten",
    regionId: "011",
    hasTimeZones: true
}, _5fvj424 = {
    id: "MM",
    displayName: "Myanmar (Burma)",
    regionId: "035",
    hasTimeZones: true
}, _5fvj425 = {
    future: _5fvj39,
    past: _5fvj40
}, _5fvj426 = {
    future: _5fvj41,
    past: _5fvj42
}, _5fvj427 = {
    future: _5fvj43,
    past: _5fvj44
}, _5fvj428 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _5fvj429 = {
    id: "GQ",
    displayName: "Ekvatorialguinea",
    regionId: "017",
    hasTimeZones: true
}, _5fvj430 = {
    id: "029",
    displayName: "Karibien",
    hasTimeZones: false,
    parentRegionId: "019"
}, _5fvj431 = {
    id: "009",
    displayName: "Oceanien",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5fvj432 = {
    id: "PG",
    displayName: "Papua Nya Guinea",
    regionId: "054",
    hasTimeZones: true
}, _5fvj433 = {
    id: "034",
    displayName: "Sydasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5fvj434 = {
    id: "030",
    displayName: "Östasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5fvj435 = {
    "0": "söndag denna vecka",
    "1": "söndag nästa vecka",
    "-1": "söndag förra veckan"
}, _5fvj436 = {
    "0": "måndag denna vecka",
    "1": "måndag nästa vecka",
    "-1": "måndag förra veckan"
}, _5fvj437 = {
    "0": "tisdag denna vecka",
    "1": "tisdag nästa vecka",
    "-1": "tisdag förra veckan"
}, _5fvj438 = {
    "0": "onsdag denna vecka",
    "1": "onsdag nästa vecka",
    "-1": "onsdag förra veckan"
}, _5fvj439 = {
    "0": "fredag denna vecka",
    "1": "fredag nästa vecka",
    "-1": "fredag förra veckan"
}, _5fvj440 = {
    "0": "lördag denna vecka",
    "1": "lördag nästa vecka",
    "-1": "lördag förra veckan"
}, _5fvj441 = {
    id: "AS",
    displayName: "Amerikanska Samoa",
    regionId: "061",
    hasTimeZones: true
}, _5fvj442 = {
    id: "CG",
    displayName: "Kongo-Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _5fvj443 = {
    id: "039",
    displayName: "Sydeuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _5fvj444 = {
    id: "GS",
    displayName: "Sydgeorgien och Sydsandwichöarna",
    hasTimeZones: true
}, _5fvj445 = {
    id: "145",
    displayName: "Västasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5fvj446 = {
    id: "014",
    displayName: "Östafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5fvj447 = {
    id: "151",
    displayName: "Östeuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _5fvj448 = {
    future: _5fvj61,
    past: _5fvj38
}, _5fvj449 = {
    id: "PF",
    displayName: "Franska Polynesien",
    regionId: "061",
    hasTimeZones: true
}, _5fvj450 = {
    id: "MO",
    displayName: "Macao, S.A.R. Kina",
    regionId: "030",
    hasTimeZones: true
}, _5fvj451 = {
    id: "054",
    displayName: "Melanesien",
    hasTimeZones: false,
    parentRegionId: "009"
}, _5fvj452 = {
    id: "015",
    displayName: "Nordafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5fvj453 = {
    id: "154",
    displayName: "Nordeuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _5fvj454 = {
    id: "061",
    displayName: "Polynesien",
    hasTimeZones: false,
    parentRegionId: "009"
}, _5fvj455 = {
    id: "005",
    displayName: "Sydamerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _5fvj456 = {
    id: "011",
    displayName: "Västafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5fvj457 = {
    id: "155",
    displayName: "Västeuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _5fvj458 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _5fvj459 = {
    id: "AG",
    displayName: "Antigua och Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _5fvj460 = {
    id: "KN",
    displayName: "S:t Kitts och Nevis",
    regionId: "029",
    hasTimeZones: true
}, _5fvj461 = {
    id: "035",
    displayName: "Sydostasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5fvj462 = {
    id: "TT",
    displayName: "Trinidad och Tobago",
    regionId: "029",
    hasTimeZones: true
}, _5fvj463 = {
    future: _5fvj58,
    past: _5fvj59
}, _5fvj464 = {
    "0": "torsdag denna vecka",
    "1": "torsdag nästa vecka",
    "-1": "torsdag förra veckan"
}, _5fvj465 = {
    id: "053",
    displayName: "Australasien",
    hasTimeZones: false,
    parentRegionId: "009"
}, _5fvj466 = {
    id: "143",
    displayName: "Centralasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5fvj467 = {
    id: "018",
    displayName: "södra Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5fvj468 = {
    id: "017",
    displayName: "Centralafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5fvj469 = {
    id: "AE",
    displayName: "Förenade Arabemiraten",
    regionId: "145",
    hasTimeZones: true
}, _5fvj470 = {
    id: "HK",
    displayName: "Hongkong, S.A.R. Kina",
    regionId: "030",
    hasTimeZones: true
}, _5fvj471 = {
    id: "ST",
    displayName: "São Tomé och Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _5fvj472 = {
    id: "021",
    displayName: "norra Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _5fvj473 = {
    future: _5fvj79,
    past: _5fvj60
}, _5fvj474 = {
    relative: _5fvj377
}, _5fvj475 = {
    relative: _5fvj378
}, _5fvj476 = {
    relative: _5fvj379
}, _5fvj477 = {
    relative: _5fvj380
}, _5fvj478 = {
    relative: _5fvj381
}, _5fvj479 = {
    relative: _5fvj382
}, _5fvj480 = {
    id: "VG",
    displayName: "Brittiska Jungfruöarna",
    regionId: "029",
    hasTimeZones: true
}, _5fvj481 = {
    id: "013",
    displayName: "Centralamerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _5fvj482 = {
    id: "SJ",
    displayName: "Svalbard och Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _5fvj483 = {
    id: "TC",
    displayName: "Turks- och Caicosöarna",
    regionId: "029",
    hasTimeZones: true
}, _5fvj484 = {
    id: "BA",
    displayName: "Bosnien och Hercegovina",
    regionId: "039",
    hasTimeZones: true
}, _5fvj485 = {
    id: "DO",
    displayName: "Dominikanska republiken",
    regionId: "029",
    hasTimeZones: true
}, _5fvj486 = {
    id: "BQ",
    displayName: "Karibiska Nederländerna",
    regionId: "029",
    hasTimeZones: true
}, _5fvj487 = {
    id: "PM",
    displayName: "S:t Pierre och Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _5fvj488 = {
    id: "WF",
    displayName: "Wallis- och Futunaöarna",
    regionId: "061",
    hasTimeZones: true
}, _5fvj489 = {
    d: "E dd MMM–E dd MMM y G",
    M: "E dd MMM–E dd MMM y G",
    y: "E dd MMM y–E dd MMM y G"
}, _5fvj490 = {
    future: _5fvj82,
    past: _5fvj83
}, _5fvj491 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _5fvj492 = {
    id: "VI",
    displayName: "Amerikanska Jungfruöarna",
    regionId: "029",
    hasTimeZones: true
}, _5fvj493 = {
    id: "IO",
    displayName: "Brittiska territoriet i Indiska oceanen",
    hasTimeZones: true
}, _5fvj494 = {
    relative: _5fvj412
}, _5fvj495 = {
    id: "PS",
    displayName: "Palestinska territorierna",
    regionId: "145",
    hasTimeZones: true
}, _5fvj496 = {
    d: "E y-MM-dd – E y-MM-dd",
    M: "E y-MM-dd – E y-MM-dd G",
    y: "E y-MM-dd – E y-MM-dd G"
}, _5fvj497 = {
    future: _5fvj96,
    past: _5fvj80
}, _5fvj498 = {
    id: "057",
    displayName: "Mikronesiska öarna",
    hasTimeZones: false,
    parentRegionId: "009"
}, _5fvj499 = [ "jan.", "feb.", "mars", "apr.", "maj", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "dec." ], _5fvj500 = {
    relative: _5fvj435
}, _5fvj501 = {
    relative: _5fvj436
}, _5fvj502 = {
    relative: _5fvj437
}, _5fvj503 = {
    relative: _5fvj438
}, _5fvj504 = {
    relative: _5fvj439
}, _5fvj505 = {
    relative: _5fvj440
}, _5fvj506 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _5fvj507 = {
    id: "CF",
    displayName: "Centralafrikanska republiken",
    regionId: "017",
    hasTimeZones: true
}, _5fvj508 = {
    id: "019",
    displayName: "Nord- och Sydamerika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5fvj509 = {
    id: "VC",
    displayName: "S:t Vincent och Grenadinerna",
    regionId: "029",
    hasTimeZones: true
}, _5fvj510 = {
    relative: _5fvj464
}, _5fvj511 = {
    future: _5fvj81,
    past: _5fvj136
}, _5fvj512 = {
    future: _5fvj95,
    past: _5fvj139
}, _5fvj513 = {
    future: _5fvj97,
    past: _5fvj141
}, _5fvj514 = {
    future: _5fvj108,
    past: _5fvj150
}, _5fvj515 = {
    future: _5fvj109,
    past: _5fvj151
}, _5fvj516 = {
    future: _5fvj110,
    past: _5fvj152
}, _5fvj517 = {
    future: _5fvj111,
    past: _5fvj153
}, _5fvj518 = {
    displayName: "h",
    relativeTime: _5fvj426
}, _5fvj519 = {
    displayName: "s",
    relativeTime: _5fvj427
}, _5fvj520 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _5fvj521 = {
    future: _5fvj116,
    past: _5fvj162
}, _5fvj522 = {
    future: _5fvj117,
    past: _5fvj164
}, _5fvj523 = [ "tishrí", "heshván", "kislév", "tevét", "shevát", "adár I", "adár", "nisán", "ijjár", "siván", "tammúz", "ab", "elúl" ], _5fvj524 = [ "Tishrí", "Heshván", "Kislév", "Tevét", "Shevát", "Adár I", "Adár", "Nisán", "Ijjár", "Siván", "Tammúz", "Ab", "Elúl" ], _5fvj525 = [ "farvardin", "ordibehesht", "khordād", "tir", "mordād", "shahrivar", "mehr", "ābān", "āzar", "dey", "bahman", "esfand" ], _5fvj526 = [ "Farvardin", "Ordibehesht", "Khordād", "Tir", "Mordād", "Shahrivar", "Mehr", "Ābān", "Āzar", "Dey", "Bahman", "Esfand" ], _5fvj527 = [ "januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december" ], _5fvj528 = {
    displayName: "m",
    relativeTime: _5fvj490
}, _5fvj529 = {
    future: _5fvj124,
    past: _5fvj169
}, _5fvj530 = {
    future: _5fvj125,
    past: _5fvj170
}, _5fvj531 = {
    future: _5fvj127,
    past: _5fvj171
}, _5fvj532 = {
    future: _5fvj129,
    past: _5fvj172
}, _5fvj533 = {
    future: _5fvj132,
    past: _5fvj178
}, _5fvj534 = {
    future: _5fvj133,
    past: _5fvj179
}, _5fvj535 = [ "tout", "bâbâ", "hâtour", "kiahk", "toubah", "amshîr", "barmahât", "barmoudah", "bashans", "ba’ounah", "abîb", "misra", "al-nasi" ], _5fvj536 = [ "Tout", "Bâbâ", "Hâtour", "Kiahk", "Toubah", "Amshîr", "Barmahât", "Barmoudah", "Bashans", "Ba’ounah", "Abîb", "Misra", "Al-nasi" ], _5fvj537 = [ "mäskäräm", "teqemt", "hedar", "tahesas", "ter", "yäkatit", "mägabit", "miyazya", "guenbot", "säné", "hamlé", "nähasé", "pagumén" ], _5fvj538 = [ "Mäskäräm", "Teqemt", "Hedar", "Tahesas", "Ter", "Yäkatit", "Mägabit", "Miyazya", "Guenbot", "Säné", "Hamlé", "Nähasé", "Pagumén" ], _5fvj539 = {
    midnight: "midn.",
    am: "fm",
    pm: "em",
    morning1: "morg.",
    morning2: "förm.",
    afternoon1: "efterm.",
    evening1: "kväll",
    night1: "natt"
}, _5fvj540 = [ "chaitra", "vaishākh", "jyaishtha", "āshādha", "shrāvana", "bhādrapad", "āshwin", "kārtik", "mārgashīrsha", "paush", "māgh", "phālgun" ], _5fvj541 = [ "Chaitra", "Vaishākh", "Jyaishtha", "Āshādha", "Shrāvana", "Bhādrapad", "Āshwin", "Kārtik", "Mārgashīrsha", "Paush", "Māgh", "Phālgun" ], _5fvj542 = {
    midnight: "midnatt",
    am: "f.m.",
    pm: "e.m.",
    morning1: "morgon",
    morning2: "förm.",
    afternoon1: "efterm.",
    evening1: "kväll",
    night1: "natt"
}, _5fvj543 = {
    abbreviated: _5fvj2,
    narrow: [ "1", "2", "3", "4" ],
    wide: _5fvj294
}, _5fvj544 = {
    displayName: "tim",
    relativeTime: _5fvj515
}, _5fvj545 = {
    displayName: "min",
    relativeTime: _5fvj516
}, _5fvj546 = {
    displayName: "sek",
    relativeTime: _5fvj517
}, _5fvj547 = {
    midnight: "midn.",
    am: "fm",
    pm: "em",
    morning1: "på morg.",
    morning2: "på förm.",
    afternoon1: "på efterm.",
    evening1: "på kvällen",
    night1: "på natten"
}, _5fvj548 = {
    midnight: "midnatt",
    am: "fm",
    pm: "em",
    morning1: "på morg.",
    morning2: "på förm.",
    afternoon1: "på efterm.",
    evening1: "på kvällen",
    night1: "på natten"
}, _5fvj549 = {
    midnight: "midnatt",
    am: "förmiddag",
    pm: "eftermiddag",
    morning1: "morgon",
    morning2: "förmiddag",
    afternoon1: "eftermiddag",
    evening1: "kväll",
    night1: "natt"
}, _5fvj550 = {
    displayName: "timme",
    relativeTime: _5fvj530
}, _5fvj551 = {
    displayName: "minut",
    relativeTime: _5fvj532
}, _5fvj552 = [ "muharram", "safar", "rabi’ al-awwal", "rabi’ al-akhir", "jumada-l-ula", "jumada-l-akhira", "rajab", "sha’ban", "ramadan", "shawwal", "dhu-l-ga’da", "dhu-l-hijja" ], _5fvj553 = [ "Muharram", "Safar", "Rabi’ al-awwal", "Rabi’ al-akhir", "Jumada-l-ula", "Jumada-l-akhira", "Rajab", "Sha’ban", "Ramadan", "Shawwal", "Dhu-l-ga’da", "Dhu-l-hijja" ], _5fvj554 = {
    midnight: "midnatt",
    am: "fm",
    pm: "em",
    morning1: "på morgonen",
    morning2: "på förmiddagen",
    afternoon1: "på eftermiddagen",
    evening1: "på kvällen",
    night1: "på natten"
}, _5fvj555 = {
    displayName: "år",
    relative: _5fvj107,
    relativeTime: _5fvj463
}, _5fvj556 = {
    displayName: "v",
    relative: _5fvj128,
    relativeTime: _5fvj448
}, _5fvj557 = {
    displayName: "kv.",
    relative: _5fvj134,
    relativeTime: _5fvj473
}, _5fvj558 = {
    displayName: "sekund",
    relative: [ "nu" ],
    relativeTime: _5fvj534
}, _5fvj559 = {
    displayName: "m",
    relative: _5fvj140,
    relativeTime: _5fvj497
}, _5fvj560 = {
    decimal: ",",
    group: " ",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "−",
    exponential: "×10^",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "¤¤¤",
    timeSeparator: ":"
}, _5fvj561 = {
    minusSign: "‏−",
    timeSeparator: ":",
    decimal: ",",
    group: " ",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    exponential: "×10^",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "¤¤¤"
}, _5fvj562 = {
    displayName: "år",
    relative: _5fvj107,
    relativeTime: _5fvj512
}, _5fvj563 = {
    displayName: "v",
    relative: _5fvj128,
    relativeTime: _5fvj513
}, _5fvj564 = {
    symbols: _5fvj561
}, _5fvj565 = {
    displayName: "dag",
    relative: _5fvj411,
    relativeTime: _5fvj425
}, _5fvj566 = {
    displayName: "kv.",
    relative: _5fvj134,
    relativeTime: _5fvj514
}, _5fvj567 = {
    format: _5fvj413,
    numeric: _5fvj4,
    standAlone: _5fvj413
}, _5fvj568 = {
    displayName: "m",
    relative: _5fvj140,
    relativeTime: _5fvj521
}, _5fvj569 = {
    displayName: "dag",
    relative: _5fvj411,
    relativeTime: _5fvj511
}, _5fvj570 = {
    abbreviated: _5fvj130,
    narrow: _5fvj37,
    wide: _5fvj293,
    "short": _5fvj98
}, _5fvj571 = {
    displayName: "vecka",
    relative: _5fvj163,
    relativeTime: _5fvj529
}, _5fvj572 = {
    displayName: "månad",
    relative: _5fvj165,
    relativeTime: _5fvj531
}, _5fvj573 = {
    symbols: _5fvj561,
    digits: "renderSpelloutCardinal"
}, _5fvj574 = {
    displayName: "dag",
    relative: _5fvj411,
    relativeTime: _5fvj522
}, _5fvj575 = {
    displayName: "kvartal",
    relative: _5fvj181,
    relativeTime: _5fvj533
}, _5fvj576 = {
    abbreviated: _5fvj428,
    narrow: _5fvj158,
    wide: _5fvj428
}, _5fvj577 = {
    symbols: _5fvj561,
    digits: "renderSpelloutCardinalFinancial"
}, _5fvj578 = {
    abbreviated: _5fvj458,
    narrow: _5fvj458,
    wide: _5fvj458
}, _5fvj579 = {
    format: _5fvj578
}, _5fvj580 = {
    abbreviated: _5fvj499,
    narrow: _5fvj138,
    wide: _5fvj527
}, _5fvj581 = {
    format: _5fvj543,
    standAlone: _5fvj543
}, _5fvj582 = {
    abbreviated: _5fvj520,
    narrow: _5fvj158,
    wide: _5fvj552
}, _5fvj583 = {
    abbreviated: _5fvj520,
    narrow: _5fvj158,
    wide: _5fvj553
}, _5fvj584 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "'kl'. HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE 'kl'. HH:mm:ss zzzz"
}, _5fvj585 = {
    fullDate: "EEEE d MMMM y G",
    longDate: "d MMMM y G",
    mediumDate: "d MMM y G",
    shortDate: "G y-MM-dd",
    fullTime: "'kl'. HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "G y-MM-dd HH:mm",
    mediumDateTime: "d MMM y G HH:mm:ss",
    longDateTime: "d MMMM y G HH:mm:ss z",
    fullDateTime: "EEEE d MMMM y G 'kl'. HH:mm:ss zzzz"
}, _5fvj586 = {
    "1000": _5fvj12,
    "10000": _5fvj18,
    "100000": _5fvj28,
    "1000000": _5fvj13,
    "10000000": _5fvj19,
    "100000000": _5fvj29,
    "1000000000": _5fvj14,
    "10000000000": _5fvj20,
    "100000000000": _5fvj30,
    "1000000000000": _5fvj15,
    "10000000000000": _5fvj21,
    "100000000000000": _5fvj31
}, _5fvj587 = {
    abbreviated: _5fvj542,
    narrow: _5fvj539,
    wide: _5fvj549
}, _5fvj588 = {
    "1000": _5fvj32,
    "10000": _5fvj53,
    "100000": _5fvj74,
    "1000000": _5fvj33,
    "10000000": _5fvj54,
    "100000000": _5fvj75,
    "1000000000": _5fvj34,
    "10000000000": _5fvj55,
    "100000000000": _5fvj76,
    "1000000000000": _5fvj35,
    "10000000000000": _5fvj56,
    "100000000000000": _5fvj77
}, _5fvj589 = {
    format: _5fvj570,
    standAlone: _5fvj570
}, _5fvj590 = {
    abbreviated: _5fvj548,
    narrow: _5fvj547,
    wide: _5fvj554
}, _5fvj591 = {
    format: _5fvj576,
    standAlone: _5fvj576
}, _5fvj592 = {
    "1000": _5fvj52,
    "10000": _5fvj73,
    "100000": _5fvj91,
    "1000000": _5fvj92,
    "10000000": _5fvj102,
    "100000000": _5fvj119,
    "1000000000": _5fvj103,
    "10000000000": _5fvj120,
    "100000000000": _5fvj126,
    "1000000000000": _5fvj93,
    "10000000000000": _5fvj115,
    "100000000000000": _5fvj121
}, _5fvj593 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _5fvj594 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _5fvj595 = {
    format: _5fvj580,
    standAlone: _5fvj580
}, _5fvj596 = {
    d: "d",
    E: "ccc",
    Ed: "E d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E d MMM y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "d/M",
    MEd: "E d/M",
    MMd: "d/M",
    MMdd: "dd/MM",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E d MMM",
    MMMMd: "d MMMM",
    MMMMEd: "E d MMMM",
    ms: "mm:ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "y-MM G",
    yyyyMd: "y-MM-dd G",
    yyyyMEd: "E y-MM-dd G",
    yyyyMM: "G y-MM",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E d MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _5fvj597 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _5fvj598 = {
    format: _5fvj582,
    standAlone: _5fvj583
}, _5fvj599 = {
    basic: _5fvj584,
    cldr: _5fvj593
}, _5fvj600 = {
    format: _5fvj590,
    standAlone: _5fvj587
}, _5fvj601 = {
    basic: _5fvj585,
    cldr: _5fvj596
}, _5fvj602 = {
    "long": _5fvj592,
    "short": _5fvj586,
    "default": "#,##0.###"
}, _5fvj603 = {
    d: {
        d: "d–d"
    },
    h: _5fvj16,
    H: {
        H: "HH–HH"
    },
    hm: _5fvj161,
    Hm: _5fvj78,
    hmv: _5fvj176,
    Hmv: _5fvj104,
    hv: _5fvj36,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _5fvj5,
    MEd: _5fvj105,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _5fvj57,
    MMMEd: _5fvj122,
    y: {
        y: "y–y G"
    },
    yM: _5fvj94,
    yMd: _5fvj330,
    yMEd: _5fvj496,
    yMMM: _5fvj106,
    yMMMd: _5fvj177,
    yMMMEd: _5fvj489,
    yMMMM: _5fvj123
}, _5fvj604 = {
    d: {
        d: "d–d"
    },
    h: _5fvj16,
    H: {
        H: "HH–HH"
    },
    hm: _5fvj161,
    Hm: _5fvj78,
    hmv: _5fvj176,
    Hmv: _5fvj104,
    hv: _5fvj36,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _5fvj112,
    MEd: _5fvj147,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _5fvj62,
    MMMEd: _5fvj148,
    y: {
        y: "U–U"
    },
    yM: _5fvj84,
    yMd: _5fvj359,
    yMEd: _5fvj506,
    yMMM: _5fvj85,
    yMMMd: _5fvj173,
    yMMMEd: _5fvj491,
    yMMMM: _5fvj113
}, _5fvj605 = {
    beforeCurrency: _5fvj594,
    afterCurrency: _5fvj594
}, _5fvj606 = {
    "short": _5fvj588,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _5fvj605
}, _5fvj607 = {
    abbreviated: _5fvj597,
    narrow: _5fvj597,
    wide: _5fvj597
}, _5fvj608 = {
    format: _5fvj607
}, _5fvj609 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _5fvj602,
    currency: _5fvj606,
    percent: _5fvj1
}, _5fvj610 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tempyō (729–749)", "Tempyō-kampō (749–749)", "Tempyō-shōhō (749–757)", "Tempyō-hōji (757–765)", "Temphō-jingo (765–767)", "Jingo-keiun (767–770)", "Hōki (770–780)", "Ten-ō (781–782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saiko (854–857)", "Tennan (857–859)", "Jōgan (859–877)", "Genkei (877–885)", "Ninna (885–889)", "Kampyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Shōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten-en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Ei-en (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eiho (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kaho (1094–1096)", "Eichō (1096–1097)", "Shōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110–1113)", "Eikyū (1113–1118)", "Gen-ei (1118–1120)", "Hoan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hoen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Tenyō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hogen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin-an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryuku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken-ei (1206–1207)", "Shōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Shōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tempuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En-ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun-ō (1260–1261)", "Kōchō (1261–1264)", "Bun-ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkei (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkyō (1321–1324)", "Shōchū (1324–1326)", "Kareki (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kemmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun-an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenmon (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genwa (1615–1624)", "Kan-ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Shōō (1652–1655)", "Meiryaku (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenwa (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan-en (1748–1751)", "Hōryaku (1751–1764)", "Meiwa (1764–1772)", "An-ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man-en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _5fvj611 = {
    dayParts: _5fvj579,
    days: _5fvj608,
    months: _5fvj608,
    years: _5fvj608,
    zodiacs: _5fvj579
}, _5fvj612 = {
    era: {
        displayName: "era"
    },
    year: _5fvj562,
    "year-short": _5fvj562,
    "year-narrow": _5fvj555,
    quarter: _5fvj575,
    "quarter-short": _5fvj566,
    "quarter-narrow": _5fvj557,
    month: _5fvj572,
    "month-short": _5fvj568,
    "month-narrow": _5fvj559,
    week: _5fvj571,
    "week-short": _5fvj563,
    "week-narrow": _5fvj556,
    day: _5fvj574,
    "day-short": _5fvj569,
    "day-narrow": _5fvj565,
    weekday: _5fvj7,
    dayperiod: _5fvj3,
    hour: _5fvj550,
    "hour-short": _5fvj544,
    "hour-narrow": _5fvj518,
    minute: _5fvj551,
    "minute-short": _5fvj545,
    "minute-narrow": _5fvj528,
    second: _5fvj558,
    "second-short": _5fvj546,
    "second-narrow": _5fvj519,
    zone: _5fvj6,
    sun: _5fvj500,
    "sun-short": _5fvj474,
    "sun-narrow": _5fvj182,
    mon: _5fvj501,
    "mon-short": _5fvj475,
    "mon-narrow": _5fvj183,
    tue: _5fvj502,
    "tue-short": _5fvj476,
    "tue-narrow": _5fvj184,
    wed: _5fvj503,
    "wed-short": _5fvj477,
    "wed-narrow": _5fvj185,
    thu: _5fvj510,
    "thu-short": _5fvj494,
    "thu-narrow": _5fvj224,
    fri: _5fvj504,
    "fri-short": _5fvj478,
    "fri-narrow": _5fvj186,
    sat: _5fvj505,
    "sat-short": _5fvj479,
    "sat-narrow": _5fvj187
}, _5fvj613 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _5fvj612
}, _5fvj614 = {
    dateFormats: _5fvj601,
    datePartsOrder: "ymd",
    dateIntervalFormats: _5fvj603,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _5fvj589,
    dayPeriods: _5fvj600,
    monthNames: _5fvj598,
    eraNames: _5fvj63,
    quarterNames: _5fvj581,
    fields: _5fvj612
}, _5fvj615 = {
    dateFormats: _5fvj599,
    datePartsOrder: "md",
    dateIntervalFormats: _5fvj604,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _5fvj589,
    dayPeriods: _5fvj600,
    cyclicNames: _5fvj611,
    monthNames: _5fvj591,
    monthPatterns: _5fvj567,
    quarterNames: _5fvj581,
    fields: _5fvj612
};

inter.id = "sv";

inter.delimiters = {
    quotationStart: "”",
    quotationEnd: "”",
    alternateQuotationStart: "’",
    alternateQuotationEnd: "’"
};

inter.listPatterns = {
    "default": {
        "2": "{0} och {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0} och {1}"
    },
    unit: P.listPatterns.default,
    unitNarrow: {
        "2": "{0} {1}",
        start: "{0} {1}",
        middle: "{0} {1}",
        end: "{0} {1}"
    },
    unitShort: P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} gånger jordens gravitation",
                other: "{0} gånger jordens gravitation"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} meter per kvadratsekund",
                other: "{0} meter per kvadratsekund"
            },
            angleRevolution: _5fvj64,
            angleRadian: {
                one: "{0} radian",
                other: "{0} radianer"
            },
            angleDegree: {
                one: "{0} grad",
                other: "{0} grader"
            },
            angleArcMinute: {
                one: "{0} bågminut",
                other: "{0} bågminuter"
            },
            angleArcSecond: {
                one: "{0} bågsekund",
                other: "{0} bågsekunder"
            },
            areaSquareKilometer: {
                one: "{0} kvadratkilometer",
                other: "{0} kvadratkilometer"
            },
            areaHectare: {
                one: "{0} hektar",
                other: "{0} hektar"
            },
            areaSquareMeter: {
                one: "{0} kvadratmeter",
                other: "{0} kvadratmeter"
            },
            areaSquareCentimeter: {
                one: "{0} kvadratcentimeter",
                other: "{0} kvadratcentimeter"
            },
            areaSquareMile: {
                one: "{0} engelsk kvadratmil",
                other: "{0} engelska kvadratmil"
            },
            areaAcre: {
                one: "{0} engelskt tunnland",
                other: "{0} engelska tunnland"
            },
            areaSquareYard: _5fvj86,
            areaSquareFoot: _5fvj131,
            areaSquareInch: {
                one: "{0} kvadrattum",
                other: "{0} kvadrattum"
            },
            concentrKarat: _5fvj87,
            consumptionLiterPerKilometer: {
                one: "{0} liter per kilometer",
                other: "{0} liter per kilometer"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} liter per 100 kilometer",
                other: "{0} liter per 100 kilometer"
            },
            consumptionMilePerGallon: {
                one: "{0} mile per gallon",
                other: "{0} miles per gallon"
            },
            digitalTerabyte: {
                one: "{0} terabyte",
                other: "{0} terabyte"
            },
            digitalTerabit: {
                one: "{0} terabit",
                other: "{0} terabit"
            },
            digitalGigabyte: _5fvj22,
            digitalGigabit: {
                one: "{0} gigabit",
                other: "{0} gigabit"
            },
            digitalMegabyte: _5fvj23,
            digitalMegabit: {
                one: "{0} megabit",
                other: "{0} megabit"
            },
            digitalKilobyte: _5fvj24,
            digitalKilobit: {
                one: "{0} kilobit",
                other: "{0} kilobit"
            },
            digitalByte: {
                one: "{0} byte",
                other: "{0} byte"
            },
            digitalBit: {
                one: "{0} bit",
                other: "{0} bit"
            },
            durationCentury: {
                one: "{0} århundrade",
                other: "{0} århundraden"
            },
            durationYear: _5fvj25,
            durationMonth: {
                one: "{0} månad",
                other: "{0} månader"
            },
            durationWeek: {
                one: "{0} vecka",
                other: "{0} veckor"
            },
            durationDay: {
                one: "{0} dygn",
                other: "{0} dygn"
            },
            durationHour: {
                one: "{0} timme",
                other: "{0} timmar"
            },
            durationMinute: {
                one: "{0} minut",
                other: "{0} minuter"
            },
            durationSecond: {
                one: "{0} sekund",
                other: "{0} sekunder"
            },
            durationMillisecond: {
                one: "{0} millisekund",
                other: "{0} millisekunder"
            },
            durationMicrosecond: {
                one: "{0} mikrosekund",
                other: "{0} mikrosekunder"
            },
            durationNanosecond: {
                one: "{0} nanosekund",
                other: "{0} nanosekunder"
            },
            electricAmpere: {
                one: "{0} ampere",
                other: "{0} ampere"
            },
            electricMilliampere: {
                one: "{0} milliampere",
                other: "{0} milliampere"
            },
            electricOhm: {
                one: "{0} ohm",
                other: "{0} ohm"
            },
            electricVolt: {
                one: "{0} volt",
                other: "{0} volt"
            },
            energyKilocalorie: _5fvj135,
            energyCalorie: {
                one: "{0} kalori",
                other: "{0} kalorier"
            },
            energyFoodcalorie: _5fvj135,
            energyKilojoule: {
                one: "{0} kilojoule",
                other: "{0} kilojoule"
            },
            energyJoule: {
                one: "{0} joule",
                other: "{0} joule"
            },
            energyKilowattHour: {
                one: "{0} kilowattimme",
                other: "{0} kilowattimmar"
            },
            frequencyGigahertz: {
                one: "{0} gigahertz",
                other: "{0} gigahertz"
            },
            frequencyMegahertz: _5fvj45,
            frequencyKilohertz: {
                one: "{0} kilohertz",
                other: "{0} kilohertz"
            },
            frequencyHertz: {
                one: "{0} hertz",
                other: "{0} hertz"
            },
            lengthKilometer: {
                one: "{0} kilometer",
                other: "{0} kilometer"
            },
            lengthMeter: {
                one: "{0} meter",
                other: "{0} meter"
            },
            lengthDecimeter: {
                one: "{0} decimeter",
                other: "{0} decimeter"
            },
            lengthCentimeter: {
                one: "{0} centimeter",
                other: "{0} centimeter"
            },
            lengthMillimeter: {
                one: "{0} millimeter",
                other: "{0} millimeter"
            },
            lengthMicrometer: {
                one: "{0} mikrometer",
                other: "{0} mikrometer"
            },
            lengthNanometer: {
                one: "{0} nanometer",
                other: "{0} nanometer"
            },
            lengthPicometer: {
                one: "{0} pikometer",
                other: "{0} pikometer"
            },
            lengthMile: {
                one: "{0} engelsk mil",
                other: "{0} engelska mil"
            },
            lengthYard: {
                one: "{0} engelsk yard",
                other: "{0} engelska yard"
            },
            lengthFoot: _5fvj46,
            lengthInch: _5fvj47,
            lengthParsec: _5fvj99,
            lengthLightYear: _5fvj100,
            lengthAstronomicalUnit: {
                one: "{0} astronomisk enhet",
                other: "{0} astronomiska enheter"
            },
            lengthFurlong: {
                one: "{0} engelsk plogfårelängd",
                other: "{0} engelska plogfårelängder"
            },
            lengthFathom: _5fvj88,
            lengthNauticalMile: {
                one: "{0} nautisk mil",
                other: "{0} nautiska mil"
            },
            lengthMileScandinavian: _5fvj48,
            lightLux: _5fvj49,
            massMetricTon: {
                one: "{0} ton",
                other: "{0} ton"
            },
            massKilogram: {
                one: "{0} kilogram",
                other: "{0} kilogram"
            },
            massGram: {
                one: "{0} gram",
                other: "{0} gram"
            },
            massMilligram: {
                one: "{0} milligram",
                other: "{0} milligram"
            },
            massMicrogram: {
                one: "{0} mikrogram",
                other: "{0} mikrogram"
            },
            massTon: {
                one: "{0} engelskt kort ton",
                other: "{0} engelska korta ton"
            },
            massStone: {
                one: "{0} engelsk sten",
                other: "{0} engelska stenar"
            },
            massPound: _5fvj65,
            massOunce: _5fvj50,
            massOunceTroy: {
                one: "{0} troy uns",
                other: "{0} troy uns"
            },
            massCarat: _5fvj87,
            powerGigawatt: {
                one: "{0} gigawatt",
                other: "{0} gigawatt"
            },
            powerMegawatt: {
                one: "{0} megawatt",
                other: "{0} megawatt"
            },
            powerKilowatt: {
                one: "{0} kilowatt",
                other: "{0} kilowatt"
            },
            powerWatt: {
                one: "{0} watt",
                other: "{0} watt"
            },
            powerMilliwatt: {
                one: "{0} milliwatt",
                other: "{0} milliwatt"
            },
            powerHorsepower: {
                one: "{0} hästkraft",
                other: "{0} hästkrafter"
            },
            pressureHectopascal: {
                one: "{0} hektopascal",
                other: "{0} hektopascal"
            },
            pressureMillimeterOfMercury: {
                one: "{0} millimeter kvicksilver",
                other: "{0} millimeter kvicksilver"
            },
            pressurePoundPerSquareInch: {
                one: "{0} pund per kvadrattum",
                other: "{0} pund per kvadrattum"
            },
            pressureInchHg: {
                one: "{0} tum kvicksilver",
                other: "{0} tum kvicksilver"
            },
            pressureMillibar: {
                one: "{0} millibar",
                other: "{0} millibar"
            },
            speedKilometerPerHour: {
                one: "{0} kilometer per timme",
                other: "{0} kilometer per timme"
            },
            speedMeterPerSecond: {
                one: "{0} meter per sekund",
                other: "{0} meter per sekund"
            },
            speedMilePerHour: {
                one: "{0} engelsk mil per timme",
                other: "{0} engelska mil per timme"
            },
            speedKnot: _5fvj66,
            temperatureGeneric: _5fvj8,
            temperatureCelsius: {
                one: "{0} grad Celsius",
                other: "{0} grader Celsius"
            },
            temperatureFahrenheit: {
                one: "{0} grad Fahrenheit",
                other: "{0} grader Fahrenheit"
            },
            temperatureKelvin: {
                one: "{0} kelvin",
                other: "{0} kelvin"
            },
            volumeCubicKilometer: {
                one: "{0} kubikkilometer",
                other: "{0} kubikkilometer"
            },
            volumeCubicMeter: {
                one: "{0} kubikmeter",
                other: "{0} kubikmeter"
            },
            volumeCubicCentimeter: {
                one: "{0} kubikcentimeter",
                other: "{0} kubikcentimeter"
            },
            volumeCubicMile: {
                one: "{0} engelsk kubikmil",
                other: "{0} engelska kubikmil"
            },
            volumeCubicYard: {
                one: "{0} engelsk kubikyard",
                other: "{0} engelska kubikyard"
            },
            volumeCubicFoot: {
                one: "{0} kubikfot",
                other: "{0} kubikfot"
            },
            volumeCubicInch: {
                one: "{0} kubiktum",
                other: "{0} kubiktum"
            },
            volumeMegaliter: {
                one: "{0} megaliter",
                other: "{0} megaliter"
            },
            volumeHectoliter: {
                one: "{0} hektoliter",
                other: "{0} hektoliter"
            },
            volumeLiter: {
                one: "{0} liter",
                other: "{0} liter"
            },
            volumeDeciliter: {
                one: "{0} deciliter",
                other: "{0} deciliter"
            },
            volumeCentiliter: {
                one: "{0} centiliter",
                other: "{0} centiliter"
            },
            volumeMilliliter: {
                one: "{0} milliliter",
                other: "{0} milliliter"
            },
            volumePintMetric: {
                one: "{0} pint à 500 ml",
                other: "{0} pint à 500 ml"
            },
            volumeCupMetric: {
                one: "{0} kopp à 2,5 dl",
                other: "{0} koppar à 2,5 dl"
            },
            volumeAcreFoot: {
                one: "{0} engelskt tunnland gånger fot",
                other: "{0} engelska tunnland gånger fot"
            },
            volumeBushel: _5fvj114,
            volumeGallon: {
                one: "{0} gallon",
                other: "{0} gallon"
            },
            volumeQuart: _5fvj89,
            volumePint: _5fvj67,
            volumeCup: _5fvj90,
            volumeFluidOunce: {
                one: "{0} fluid ounce",
                other: "{0} fluid ounces"
            },
            volumeTablespoon: {
                one: "{0} matsked",
                other: "{0} matskedar"
            },
            volumeTeaspoon: {
                one: "{0} tesked",
                other: "{0} teskedar"
            }
        },
        compoundUnit: {
            per: "{0} per {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                one: "{0} G",
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: _5fvj64,
            angleRadian: {
                one: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: _5fvj8,
            angleArcMinute: _5fvj9,
            angleArcSecond: _5fvj10,
            areaSquareKilometer: {
                one: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                one: "{0} ha",
                other: "{0} ha"
            },
            areaSquareMeter: {
                one: "{0} m²",
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: {
                one: "{0} eng.mil²",
                other: "{0} eng.mil²"
            },
            areaAcre: _5fvj26,
            areaSquareYard: _5fvj86,
            areaSquareFoot: _5fvj131,
            areaSquareInch: _5fvj68,
            concentrKarat: {
                one: "{0} kt",
                other: "{0} kt"
            },
            consumptionLiterPerKilometer: {
                one: "{0} l/km",
                other: "{0} l/km"
            },
            "consumptionLiterPer-100kilometers": _5fvj118,
            consumptionMilePerGallon: {
                one: "{0} mpg",
                other: "{0} mpg"
            },
            digitalTerabyte: {
                one: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: _5fvj22,
            digitalGigabit: {
                one: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: _5fvj23,
            digitalMegabit: {
                one: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: _5fvj24,
            digitalKilobit: {
                one: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: {
                one: "{0} B",
                other: "{0} B"
            },
            digitalBit: {
                one: "{0} b",
                other: "{0} b"
            },
            durationCentury: {
                one: "{0} årh",
                other: "{0} årh"
            },
            durationYear: _5fvj25,
            durationMonth: {
                one: "{0} mån",
                other: "{0} mån"
            },
            durationWeek: {
                one: "{0} v",
                other: "{0} v"
            },
            durationDay: {
                one: "{0} d",
                other: "{0} d"
            },
            durationHour: {
                one: "{0} tim",
                other: "{0} tim"
            },
            durationMinute: {
                one: "{0} min",
                other: "{0} min"
            },
            durationSecond: {
                one: "{0} s",
                other: "{0} s"
            },
            durationMillisecond: {
                one: "{0} ms",
                other: "{0} ms"
            },
            durationMicrosecond: {
                one: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: _5fvj69,
            energyCalorie: _5fvj51,
            energyFoodcalorie: _5fvj69,
            energyKilojoule: {
                one: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: _5fvj45,
            frequencyKilohertz: {
                one: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: {
                one: "{0} km",
                other: "{0} km"
            },
            lengthMeter: {
                one: "{0} m",
                other: "{0} m"
            },
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: {
                one: "{0} cm",
                other: "{0} cm"
            },
            lengthMillimeter: {
                one: "{0} mm",
                other: "{0} mm"
            },
            lengthMicrometer: {
                one: "{0} μm",
                other: "{0} μm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: {
                one: "{0} pm",
                other: "{0} pm"
            },
            lengthMile: {
                one: "{0} eng. mil",
                other: "{0} eng. mil"
            },
            lengthYard: {
                one: "{0} eng. yard",
                other: "{0} eng. yard"
            },
            lengthFoot: _5fvj46,
            lengthInch: _5fvj47,
            lengthParsec: _5fvj99,
            lengthLightYear: {
                one: "{0} ly",
                other: "{0} ly"
            },
            lengthAstronomicalUnit: {
                one: "{0} AU",
                other: "{0} AU"
            },
            lengthFurlong: {
                one: "{0} eng. plogfårelgd",
                other: "{0} eng. plogfårelgd"
            },
            lengthFathom: _5fvj88,
            lengthNauticalMile: {
                one: "{0} naut. mil",
                other: "{0} naut. mil"
            },
            lengthMileScandinavian: _5fvj48,
            lightLux: _5fvj49,
            massMetricTon: {
                one: "{0} t",
                other: "{0} t"
            },
            massKilogram: {
                one: "{0} kg",
                other: "{0} kg"
            },
            massGram: {
                one: "{0} g",
                other: "{0} g"
            },
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} μg",
                other: "{0} μg"
            },
            massTon: {
                one: "{0} eng. k. ton",
                other: "{0} eng. k. ton"
            },
            massStone: {
                one: "{0} eng. sten",
                other: "{0} eng. sten"
            },
            massPound: _5fvj65,
            massOunce: _5fvj50,
            massOunceTroy: {
                one: "{0} ozt",
                other: "{0} ozt"
            },
            massCarat: {
                one: "{0} ct",
                other: "{0} ct"
            },
            powerGigawatt: {
                one: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: {
                one: "{0} kW",
                other: "{0} kW"
            },
            powerWatt: {
                one: "{0} W",
                other: "{0} W"
            },
            powerMilliwatt: {
                one: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: {
                one: "{0} hk",
                other: "{0} hk"
            },
            pressureHectopascal: {
                one: "{0} hPa",
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                one: "{0} mm Hg",
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0} psi",
                other: "{0} psi"
            },
            pressureInchHg: _5fvj101,
            pressureMillibar: {
                one: "{0} mbar",
                other: "{0} mbar"
            },
            speedKilometerPerHour: {
                one: "{0} km/h",
                other: "{0} km/h"
            },
            speedMeterPerSecond: {
                one: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: _5fvj70,
            speedKnot: _5fvj66,
            temperatureGeneric: _5fvj8,
            temperatureCelsius: _5fvj27,
            temperatureFahrenheit: {
                one: "{0} °F",
                other: "{0} °F"
            },
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: {
                one: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMeter: {
                one: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: {
                one: "{0} eng. mil³",
                other: "{0} eng. mil³"
            },
            volumeCubicYard: {
                one: "{0} eng. yard³",
                other: "{0} eng. yard³"
            },
            volumeCubicFoot: _5fvj71,
            volumeCubicInch: _5fvj72,
            volumeMegaliter: {
                one: "{0} Ml",
                other: "{0} Ml"
            },
            volumeHectoliter: {
                one: "{0} hl",
                other: "{0} hl"
            },
            volumeLiter: _5fvj17,
            volumeDeciliter: {
                one: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} cl",
                other: "{0} cl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                other: "{0} ml"
            },
            volumePintMetric: {
                one: "{0} pt à 500 ml",
                other: "{0} pt à 500 ml"
            },
            volumeCupMetric: {
                one: "{0} kp 2,5dl",
                other: "{0} kp 2,5dl"
            },
            volumeAcreFoot: {
                one: "{0} eng. t:d·fot",
                other: "{0} eng. t:d·fot"
            },
            volumeBushel: _5fvj114,
            volumeGallon: {
                one: "{0} gal",
                other: "{0} gal"
            },
            volumeQuart: _5fvj89,
            volumePint: _5fvj67,
            volumeCup: _5fvj90,
            volumeFluidOunce: {
                one: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} msk",
                other: "{0} msk"
            },
            volumeTeaspoon: {
                one: "{0} tsk",
                other: "{0} tsk"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                one: "{0}G",
                other: "{0}G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0}m/s²",
                other: "{0}m/s²"
            },
            angleRevolution: {
                one: "{0}varv",
                other: "{0}varv"
            },
            angleRadian: {
                one: "{0}rad",
                other: "{0}rad"
            },
            angleDegree: _5fvj8,
            angleArcMinute: _5fvj9,
            angleArcSecond: _5fvj10,
            areaSquareKilometer: {
                one: "{0}km²",
                other: "{0}km²"
            },
            areaHectare: {
                one: "{0}ha",
                other: "{0}ha"
            },
            areaSquareMeter: {
                one: "{0}m²",
                other: "{0}m²"
            },
            areaSquareCentimeter: {
                one: "{0}cm²",
                other: "{0}cm²"
            },
            areaSquareMile: {
                one: "{0} mi²",
                other: "{0} mi²"
            },
            areaAcre: _5fvj26,
            areaSquareYard: {
                one: "{0} en. yrd²",
                other: "{0} en. yrd²"
            },
            areaSquareFoot: {
                one: "{0} fot²",
                other: "{0} fot²"
            },
            areaSquareInch: _5fvj68,
            consumptionLiterPerKilometer: {
                one: "{0}L/km",
                other: "{0}L/km"
            },
            "consumptionLiterPer-100kilometers": _5fvj118,
            consumptionMilePerGallon: {
                one: "{0}e.mil/gn",
                other: "{0}e.mil/gn"
            },
            digitalTerabit: {
                one: "{0}Tb",
                other: "{0}Tb"
            },
            digitalGigabit: {
                one: "{0}Gb",
                other: "{0}Gb"
            },
            digitalMegabit: {
                one: "{0}Mb",
                other: "{0}Mb"
            },
            digitalKilobit: {
                one: "{0}kb",
                other: "{0}kb"
            },
            digitalByte: {
                one: "{0}B",
                other: "{0}B"
            },
            digitalBit: {
                one: "{0}b",
                other: "{0}b"
            },
            durationCentury: {
                one: "{0}årh",
                other: "{0}årh"
            },
            durationYear: {
                one: "{0}å",
                other: "{0}å"
            },
            durationMonth: _5fvj11,
            durationWeek: {
                one: "{0}v",
                other: "{0}v"
            },
            durationDay: {
                one: "{0}d",
                other: "{0}d"
            },
            durationHour: {
                one: "{0}h",
                other: "{0}h"
            },
            durationMinute: _5fvj11,
            durationSecond: {
                one: "{0}s",
                other: "{0}s"
            },
            durationMillisecond: {
                one: "{0}ms",
                other: "{0}ms"
            },
            durationMicrosecond: {
                one: "{0}μs",
                other: "{0}μs"
            },
            durationNanosecond: {
                one: "{0}ns",
                other: "{0}ns"
            },
            electricAmpere: {
                one: "{0}A",
                other: "{0}A"
            },
            electricMilliampere: {
                one: "{0}mA",
                other: "{0}mA"
            },
            electricOhm: {
                one: "{0}Ω",
                other: "{0}Ω"
            },
            electricVolt: {
                one: "{0}V",
                other: "{0}V"
            },
            energyKilocalorie: _5fvj69,
            energyCalorie: _5fvj51,
            energyFoodcalorie: _5fvj69,
            energyKilojoule: {
                one: "{0}kJ",
                other: "{0}kJ"
            },
            energyJoule: {
                one: "{0}J",
                other: "{0}J"
            },
            energyKilowattHour: {
                one: "{0}kWh",
                other: "{0}kWh"
            },
            frequencyGigahertz: {
                one: "{0}GHz",
                other: "{0}GHz"
            },
            frequencyMegahertz: {
                one: "{0}MHz",
                other: "{0}MHz"
            },
            frequencyKilohertz: {
                one: "{0}kHz",
                other: "{0}kHz"
            },
            frequencyHertz: {
                one: "{0}Hz",
                other: "{0}Hz"
            },
            lengthKilometer: {
                one: "{0}km",
                other: "{0}km"
            },
            lengthMeter: _5fvj11,
            lengthDecimeter: {
                one: "{0}dm",
                other: "{0}dm"
            },
            lengthCentimeter: {
                one: "{0}cm",
                other: "{0}cm"
            },
            lengthMillimeter: {
                one: "{0}mm",
                other: "{0}mm"
            },
            lengthMicrometer: {
                one: "{0}μm",
                other: "{0}μm"
            },
            lengthNanometer: {
                one: "{0}nm",
                other: "{0}nm"
            },
            lengthPicometer: {
                one: "{0}pm",
                other: "{0}pm"
            },
            lengthMile: {
                one: "{0} mi",
                other: "{0}mi"
            },
            lengthYard: {
                one: "{0}yd",
                other: "{0}yd"
            },
            lengthFoot: _5fvj46,
            lengthInch: _5fvj47,
            lengthParsec: {
                one: "{0} parsek",
                other: "{0} parsek"
            },
            lengthLightYear: _5fvj100,
            lengthAstronomicalUnit: {
                one: "{0}AE",
                other: "{0}AE"
            },
            lengthFurlong: {
                one: "{0}en.pfrld",
                other: "{0}en.pfrld"
            },
            lengthFathom: _5fvj88,
            lengthNauticalMile: {
                one: "{0}M",
                other: "{0}M"
            },
            lengthMileScandinavian: {
                one: "{0}mil",
                other: "{0}mil"
            },
            lightLux: {
                one: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: {
                one: "{0}t",
                other: "{0}t"
            },
            massKilogram: {
                one: "{0}kg",
                other: "{0}kg"
            },
            massGram: {
                one: "{0}g",
                other: "{0}g"
            },
            massMilligram: {
                one: "{0}mg",
                other: "{0}mg"
            },
            massMicrogram: {
                one: "{0}μg",
                other: "{0}μg"
            },
            massTon: {
                one: "{0} en.k.ton",
                other: "{0} en.k.ton"
            },
            massStone: {
                one: "{0} eng. s:n",
                other: "{0} eng. s:n"
            },
            massPound: {
                one: "{0} skålpund",
                other: "{0} skålpund"
            },
            massOunce: _5fvj50,
            massOunceTroy: {
                one: "{0} tr.uns",
                other: "{0} tr.uns"
            },
            massCarat: _5fvj87,
            powerGigawatt: {
                one: "{0}GW",
                other: "{0}GW"
            },
            powerMegawatt: {
                one: "{0}MW",
                other: "{0}MW"
            },
            powerKilowatt: {
                one: "{0}kW",
                other: "{0}kW"
            },
            powerWatt: {
                one: "{0}W",
                other: "{0}W"
            },
            powerMilliwatt: {
                one: "{0}mW",
                other: "{0}mW"
            },
            powerHorsepower: {
                one: "{0}hk",
                other: "{0}hk"
            },
            pressureHectopascal: {
                one: "{0}hPa",
                other: "{0}hPa"
            },
            pressureMillimeterOfMercury: {
                one: "{0}mm Hg",
                other: "{0}mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0}s:d/tum²",
                other: "{0}s:d/tum²"
            },
            pressureInchHg: _5fvj101,
            pressureMillibar: {
                one: "{0}mbar",
                other: "{0}mbar"
            },
            speedKilometerPerHour: {
                one: "{0}km/h",
                other: "{0}km/h"
            },
            speedMeterPerSecond: {
                one: "{0}m/s",
                other: "{0}m/s"
            },
            speedMilePerHour: _5fvj70,
            speedKnot: {
                one: "{0}knop",
                other: "{0}knop"
            },
            temperatureGeneric: _5fvj8,
            temperatureCelsius: _5fvj27,
            temperatureFahrenheit: {
                one: "{0}°F",
                other: "{0}°F"
            },
            temperatureKelvin: {
                one: "{0}K",
                other: "{0}K"
            },
            volumeCubicKilometer: {
                one: "{0}km³",
                other: "{0}km³"
            },
            volumeCubicMeter: {
                one: "{0}m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0}cm³",
                other: "{0}cm³"
            },
            volumeCubicMile: {
                one: "{0} mi³",
                other: "{0} mi³"
            },
            volumeCubicYard: {
                one: "{0} en. yrd³",
                other: "{0} en. yrd³"
            },
            volumeCubicFoot: _5fvj71,
            volumeCubicInch: _5fvj72,
            volumeMegaliter: {
                one: "{0}ML",
                other: "{0}ML"
            },
            volumeHectoliter: {
                one: "{0}hL",
                other: "{0}hL"
            },
            volumeLiter: _5fvj17,
            volumeDeciliter: {
                one: "{0}dL",
                other: "{0}dL"
            },
            volumeCentiliter: {
                one: "{0}cL",
                other: "{0}cL"
            },
            volumeMilliliter: {
                one: "{0}mL",
                other: "{0}mL"
            },
            volumePintMetric: {
                one: "{0}pt·50cL",
                other: "{0}pt·50cL"
            },
            volumeCupMetric: {
                one: "{0}kp·2½dl",
                other: "{0}kp·2½dl"
            },
            volumeAcreFoot: {
                one: "{0}en.td·fot",
                other: "{0}en.td·fot"
            },
            volumeBushel: _5fvj114,
            volumeGallon: {
                one: "{0} v:egal:n",
                other: "{0} v:egal:n"
            },
            volumeQuart: {
                one: "{0} v:equart",
                other: "{0} v:equart"
            },
            volumePint: {
                one: "{0} v:epint",
                other: "{0} v:epint"
            },
            volumeCup: {
                one: "{0}kp·2½dL",
                other: "{0}kp·2½dL"
            },
            volumeFluidOunce: {
                one: "{0} v:euns",
                other: "{0} v:euns"
            },
            volumeTablespoon: {
                one: "{0}msk",
                other: "{0}msk"
            },
            volumeTeaspoon: {
                one: "{0}tsk",
                other: "{0}tsk"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "−HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "{0}tid",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} (sommartid)",
        standard: "{0} (normaltid)"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "à", "b", "c", "d", "e", "é", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "å", "ä", "ö" ],
        auxiliary: [ "á", "â", "ã", "ā", "ç", "ë", "í", "î", "ï", "ī", "ñ", "ó", "ú", "ÿ", "ü", "æ", "ø" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "Å", "Ä", "Ö" ],
        punctuation: [ "\\-", "‐", "–", "—", ",", ";", "\\:", "!", "?", ".", "…", "'", "‘", "’", '"', "“", "”", "(", ")", "\\[", "\\]", "§", "@", "*", "/", "\\&", "#", "†", "‡", "′", "″" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _5fvj561,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: {
            minusSign: "‏−",
            timeSeparator: ":",
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‏+",
            exponential: "اس",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN"
        },
        formats: _5fvj609,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            minusSign: "‏−",
            timeSeparator: ":",
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN"
        },
        formats: _5fvj609,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _5fvj561,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _5fvj561,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _5fvj561,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _5fvj561,
        digits: "renderEthiopic"
    },
    finance: _5fvj564,
    fullwide: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _5fvj561,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _5fvj561,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _5fvj561,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _5fvj561,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _5fvj573,
    hansfin: _5fvj577,
    hant: _5fvj573,
    hantfin: _5fvj577,
    hebr: {
        symbols: _5fvj561,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _5fvj561,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _5fvj573,
    jpanfin: _5fvj577,
    kali: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _5fvj561,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _5fvj561,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _5fvj561,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _5fvj561,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _5fvj561,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _5fvj561,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _5fvj561,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _5fvj561,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _5fvj564,
    nkoo: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _5fvj561,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _5fvj561,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _5fvj561,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _5fvj561,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _5fvj561,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _5fvj561,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _5fvj564,
    vaii: {
        symbols: _5fvj560,
        formats: _5fvj609,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _5fvj561,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _5fvj601,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5fvj603,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5fvj589,
        dayPeriods: _5fvj600,
        monthNames: _5fvj595,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _5fvj581,
        fields: _5fvj612
    },
    chinese: _5fvj615,
    coptic: {
        dateFormats: _5fvj601,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5fvj603,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5fvj589,
        dayPeriods: _5fvj600,
        monthNames: {
            format: {
                abbreviated: _5fvj535,
                narrow: _5fvj174,
                wide: _5fvj535
            },
            standAlone: {
                abbreviated: _5fvj536,
                narrow: _5fvj174,
                wide: _5fvj536
            }
        },
        eraNames: _5fvj149,
        quarterNames: _5fvj581,
        fields: _5fvj612
    },
    dangi: _5fvj615,
    ethioaa: _5fvj613,
    ethiopic: {
        dateFormats: _5fvj601,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5fvj603,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5fvj589,
        dayPeriods: _5fvj600,
        monthNames: {
            format: {
                abbreviated: _5fvj537,
                narrow: _5fvj174,
                wide: _5fvj537
            },
            standAlone: {
                abbreviated: _5fvj538,
                narrow: _5fvj174,
                wide: _5fvj538
            }
        },
        eraNames: _5fvj149,
        quarterNames: _5fvj581,
        fields: _5fvj612
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE d MMMM y",
                longDate: "d MMMM y",
                mediumDate: "d MMM y",
                shortDate: "y-MM-dd",
                fullTime: "'kl'. HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "y-MM-dd HH:mm",
                mediumDateTime: "d MMM y HH:mm:ss",
                longDateTime: "d MMMM y HH:mm:ss z",
                fullDateTime: "EEEE d MMMM y 'kl'. HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E d",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E d MMM y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "d/M",
                MEd: "E d/M",
                MMd: "d/M",
                MMdd: "dd/MM",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E d MMM",
                MMMMd: "d MMMM",
                MMMMEd: "E d MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "y-MM",
                yMd: "y-MM-dd",
                yMEd: "E, y-MM-dd",
                yMM: "y-MM",
                yMMM: "MMM y",
                yMMMd: "d MMM y",
                yMMMEd: "E d MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "ymd",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _5fvj16,
            H: {
                H: "HH–HH"
            },
            hm: _5fvj161,
            Hm: _5fvj78,
            hmv: _5fvj176,
            Hmv: _5fvj104,
            hv: _5fvj36,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            Md: _5fvj5,
            MEd: _5fvj105,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _5fvj57,
            MMMEd: _5fvj122,
            y: {
                y: "y–y"
            },
            yM: {
                M: "y-MM – MM",
                y: "y-MM – y-MM"
            },
            yMd: {
                d: "y-MM-dd – dd",
                M: "y-MM-dd – MM-dd",
                y: "y-MM-dd – y-MM-dd"
            },
            yMEd: {
                d: "E, y-MM-dd – E, y-MM-dd",
                M: "E, y-MM-dd – E, y-MM-dd",
                y: "E, y-MM-dd – E, y-MM-dd"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "d–d MMM y",
                M: "d MMM–d MMM y",
                y: "d MMM y–d MMM y"
            },
            yMMMEd: {
                d: "E dd MMM–E dd MMM y",
                M: "E dd MMM–E dd MMM y",
                y: "E dd MMM y–E dd MMM y"
            },
            yMMMM: {
                M: "MMMM–MMMM y",
                y: "MMMM y – MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5fvj589,
        dayPeriods: _5fvj600,
        monthNames: _5fvj595,
        eraNames: {
            wide: [ "före Kristus", "efter Kristus" ],
            abbreviated: [ "f.Kr.", "e.Kr." ]
        },
        quarterNames: _5fvj581,
        fields: _5fvj612
    },
    hebrew: {
        dateFormats: _5fvj601,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5fvj603,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5fvj589,
        dayPeriods: _5fvj600,
        monthNames: {
            format: {
                abbreviated: _5fvj523,
                narrow: _5fvj174,
                wide: _5fvj523
            },
            standAlone: {
                abbreviated: _5fvj524,
                narrow: _5fvj174,
                wide: _5fvj524
            }
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _5fvj581,
        fields: _5fvj612
    },
    indian: {
        dateFormats: _5fvj601,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5fvj603,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5fvj589,
        dayPeriods: _5fvj600,
        monthNames: {
            format: {
                abbreviated: _5fvj540,
                narrow: _5fvj158,
                wide: _5fvj540
            },
            standAlone: {
                abbreviated: _5fvj541,
                narrow: _5fvj158,
                wide: _5fvj541
            }
        },
        eraNames: {
            wide: [ "Saka-eran" ],
            abbreviated: [ "SAKA" ]
        },
        quarterNames: _5fvj581,
        fields: _5fvj612
    },
    islamic: _5fvj614,
    "islamic-umalqura": _5fvj614,
    "islamic-tbla": _5fvj614,
    "islamic-civil": _5fvj614,
    "islamic-rgsa": _5fvj614,
    iso8601: _5fvj613,
    japanese: {
        dateFormats: _5fvj601,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5fvj603,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5fvj589,
        dayPeriods: _5fvj600,
        monthNames: _5fvj595,
        eraNames: {
            wide: _5fvj610,
            abbreviated: _5fvj610
        },
        quarterNames: _5fvj581,
        fields: _5fvj612
    },
    persian: {
        dateFormats: _5fvj601,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5fvj603,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5fvj589,
        dayPeriods: _5fvj600,
        monthNames: {
            format: {
                abbreviated: _5fvj525,
                narrow: _5fvj158,
                wide: _5fvj525
            },
            standAlone: {
                abbreviated: _5fvj526,
                narrow: _5fvj158,
                wide: _5fvj526
            }
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _5fvj581,
        fields: _5fvj612
    },
    roc: {
        dateFormats: _5fvj601,
        datePartsOrder: "ymd",
        dateIntervalFormats: _5fvj603,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5fvj589,
        dayPeriods: _5fvj600,
        monthNames: _5fvj595,
        eraNames: {
            wide: [ "före R.K.", "R.K." ],
            abbreviated: [ "före R.K.", "R.K." ]
        },
        quarterNames: _5fvj581,
        fields: _5fvj612
    },
    islamicc: _5fvj613
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length;
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 1 && v === 0) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderDigitsOrdinalFeminine(n);
};

inter.renderSpelloutNumbering = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutNumbering(-n);
    if (isFractional && n > 1) return this.renderSpelloutNumbering(Math.floor(n)) + " komma " + this.renderSpelloutNumbering(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalReale(Math.floor(n / 1e15)) + " biljarder" + (n === 2e15 ? "" : " " + this.renderSpelloutNumbering(n % 1e15));
    if (n >= 1e15) return "en biljard" + (n === 1e15 ? "" : " " + this.renderSpelloutNumbering(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalReale(Math.floor(n / 1e12)) + " biljoner" + (n === 2e12 ? "" : " " + this.renderSpelloutNumbering(n % 1e12));
    if (n >= 1e12) return "en biljon" + (n === 1e12 ? "" : " " + this.renderSpelloutNumbering(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalReale(Math.floor(n / 1e9)) + " miljarder" + (n === 2e9 ? "" : " " + this.renderSpelloutNumbering(n % 1e9));
    if (n >= 1e9) return "en miljard" + (n === 1e9 ? "" : " " + this.renderSpelloutNumbering(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalReale(Math.floor(n / 1e6)) + " miljoner" + (n === 2e6 ? "" : " " + this.renderSpelloutNumbering(n % 1e6));
    if (n >= 1e6) return "en miljon" + (n === 1e6 ? "" : " " + this.renderSpelloutNumbering(n % 1e6));
    if (n >= 1e3) return this.renderSpelloutNumberingT(Math.floor(n / 1e3)) + "­tusen" + (n === 1e3 ? "" : " " + this.renderSpelloutNumbering(n % 1e3));
    if (n >= 100) return this.renderSpelloutNumbering(Math.floor(n / 100)) + "­hundra" + (n === 100 ? "" : "­" + this.renderSpelloutNumbering(n % 100));
    if (n >= 90) return "nittio" + (n === 90 ? "" : "­" + this.renderSpelloutNumbering(n % 10));
    if (n >= 80) return "åttio" + (n === 80 ? "" : "­" + this.renderSpelloutNumbering(n % 10));
    if (n >= 70) return "sjuttio" + (n === 70 ? "" : "­" + this.renderSpelloutNumbering(n % 10));
    if (n >= 60) return "sextio" + (n === 60 ? "" : "­" + this.renderSpelloutNumbering(n % 10));
    if (n >= 50) return "femtio" + (n === 50 ? "" : "­" + this.renderSpelloutNumbering(n % 10));
    if (n >= 40) return "fyrtio" + (n === 40 ? "" : "­" + this.renderSpelloutNumbering(n % 10));
    if (n >= 30) return "trettio" + (n === 30 ? "" : "­" + this.renderSpelloutNumbering(n % 10));
    if (n >= 20) return "tjugo" + (n === 20 ? "" : "­" + this.renderSpelloutNumbering(n % 10));
    if (n >= 19) return "nitton";
    if (n >= 18) return "arton";
    if (n >= 17) return "sjutton";
    if (n >= 16) return "sexton";
    if (n >= 15) return "femton";
    if (n >= 14) return "fjorton";
    if (n >= 13) return "tretton";
    if (n >= 12) return "tolv";
    if (n >= 11) return "elva";
    if (n >= 10) return "tio";
    if (n >= 9) return "nio";
    if (n >= 8) return "åtta";
    if (n >= 7) return "sju";
    if (n >= 6) return "sex";
    if (n >= 5) return "fem";
    if (n >= 4) return "fyra";
    if (n >= 3) return "tre";
    if (n >= 2) return "två";
    if (n >= 1) return "ett";
    if (n >= 0) return "noll";
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderDigitsOrdinalFeminine = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinalFeminine(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + this.renderDordFemabbrev(n);
};

inter.renderSpelloutCardinalReale = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalReale(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalReale(Math.floor(n)) + " komma " + this.renderSpelloutCardinalReale(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalReale(Math.floor(n / 1e15)) + " biljarder" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e15));
    if (n >= 1e15) return "en biljard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalReale(Math.floor(n / 1e12)) + " biljoner" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e12));
    if (n >= 1e12) return "en biljon" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalReale(Math.floor(n / 1e9)) + " miljarder" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e9));
    if (n >= 1e9) return "en miljard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalReale(Math.floor(n / 1e6)) + " miljoner" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e6));
    if (n >= 1e6) return "en miljon" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalReale(Math.floor(n / 1e3)) + "­tusen" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e3));
    if (n >= 1e3) return "ettusen" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalReale(n % 1e3));
    if (n >= 100) return this.renderSpelloutCardinalNeuter(Math.floor(n / 100)) + "­hundra" + (n === 100 ? "" : "­" + this.renderSpelloutCardinalReale(n % 100));
    if (n >= 90) return "nittio" + (n === 90 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 80) return "åttio" + (n === 80 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 70) return "sjuttio" + (n === 70 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 60) return "sextio" + (n === 60 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 50) return "femtio" + (n === 50 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 40) return "fyrtio" + (n === 40 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 30) return "trettio" + (n === 30 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 20) return "tjugo" + (n === 20 ? "" : "­" + this.renderSpelloutCardinalReale(n % 10));
    if (n >= 2) return this.renderSpelloutNumbering(n);
    if (n >= 1) return "en";
    if (n >= 0) return "noll";
};

inter.renderSpelloutNumberingT = function(n) {
    if (n >= 1e3) return "ERROR";
    if (n >= 100) return this.renderSpelloutNumbering(Math.floor(n / 100)) + "­hundra" + (n === 100 ? "" : "­" + this.renderSpelloutNumberingT(n % 100));
    if (n >= 90) return "nittio" + (n === 90 ? "" : "­" + this.renderSpelloutNumberingT(n % 10));
    if (n >= 80) return "åttio" + (n === 80 ? "" : "­" + this.renderSpelloutNumberingT(n % 10));
    if (n >= 70) return "sjuttio" + (n === 70 ? "" : "­" + this.renderSpelloutNumberingT(n % 10));
    if (n >= 60) return "sextio" + (n === 60 ? "" : "­" + this.renderSpelloutNumberingT(n % 10));
    if (n >= 50) return "femtio" + (n === 50 ? "" : "­" + this.renderSpelloutNumberingT(n % 10));
    if (n >= 40) return "fyrtio" + (n === 40 ? "" : "­" + this.renderSpelloutNumberingT(n % 10));
    if (n >= 30) return "trettio" + (n === 30 ? "" : "­" + this.renderSpelloutNumberingT(n % 10));
    if (n >= 20) return "tjugo" + (n === 20 ? "" : "­" + this.renderSpelloutNumberingT(n % 10));
    if (n >= 19) return "nitton";
    if (n >= 18) return "arton";
    if (n >= 17) return "sjutton";
    if (n >= 16) return "sexton";
    if (n >= 15) return "femton";
    if (n >= 14) return "fjorton";
    if (n >= 13) return "tretton";
    if (n >= 12) return "tolv";
    if (n >= 11) return "elva";
    if (n >= 10) return "tio";
    if (n >= 9) return "nio";
    if (n >= 8) return "åtta";
    if (n >= 7) return "sju";
    if (n >= 6) return "sex";
    if (n >= 5) return "fem";
    if (n >= 4) return "fyra";
    if (n >= 3) return "tre";
    if (n >= 2) return "två";
    if (n >= 1) return "et";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderDordFemabbrev = function(n) {
    if (n >= 100) return this.renderDordFemabbrev(n % 100);
    if (n >= 20) return this.renderDordFemabbrev(n % 10);
    if (n >= 3) return ":e";
    if (n >= 2) return ":a";
    if (n >= 1) return ":a";
    if (n >= 0) return ":e";
};

inter.renderSpelloutCardinalNeuter = function(n) {
    if (n >= 0) return this.renderSpelloutNumbering(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat({
    id: "Pacific/Midway",
    utcStandardOffsetSeconds: -39600,
    displayName: "Midwayöarna",
    countryId: "UM"
}, P.timeZones.slice(1, 7), {
    id: "Pacific/Marquesas",
    regionId: "061",
    utcStandardOffsetSeconds: -34200,
    displayName: "Marquesasöarna",
    countryId: "PF"
}, P.timeZones[8], {
    id: "Pacific/Gambier",
    regionId: "061",
    utcStandardOffsetSeconds: -32400,
    displayName: "Gambieröarna",
    countryId: "PF"
}, P.timeZones.slice(10, 16), {
    id: "Pacific/Pitcairn",
    regionId: "061",
    utcStandardOffsetSeconds: -28800,
    displayName: "Pitcairnöarna",
    countryId: "PN"
}, P.timeZones.slice(17, 30), {
    id: "America/Mazatlan",
    regionId: "013",
    utcStandardOffsetSeconds: -25200,
    displayName: "Mazatlán",
    countryId: "MX"
}, P.timeZones.slice(31, 34), {
    id: "America/Bahia_Banderas",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Bahía de Banderas",
    countryId: "MX"
}, P.timeZones.slice(35, 41), P.timeZones[42], {
    id: "Pacific/Galapagos",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Galápagos",
    countryId: "EC"
}, P.timeZones.slice(44, 49), P.timeZones.slice(50, 52), {
    id: "America/Merida",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mérida",
    countryId: "MX"
}, P.timeZones.slice(52, 54), {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Påskön",
    countryId: "CL"
}, P.timeZones.slice(54, 62), {
    id: "America/Bogota",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Bogotá",
    countryId: "CO"
}, {
    id: "America/Cancun",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Cancún",
    countryId: "MX"
}, {
    id: "America/Cayman",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Caymanöarna",
    countryId: "KY"
}, P.timeZones[65], {
    id: "America/Eirunepe",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Eirunepé",
    countryId: "BR"
}, P.timeZones.slice(67, 69), {
    id: "America/Havana",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Havanna",
    countryId: "CU"
}, P.timeZones.slice(70, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones.slice(91, 97), {
    id: "America/Cuiaba",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Cuiabá",
    countryId: "BR"
}, {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 117), {
    id: "America/Thule",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Qaanaaq",
    countryId: "GL"
}, {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "S:t Barthélemy",
    countryId: "BL"
}, {
    id: "America/St_Kitts",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "S:t Kitts",
    countryId: "KN"
}, {
    id: "America/St_Lucia",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "S:t Lucia",
    countryId: "LC"
}, {
    id: "America/St_Thomas",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "S:t Thomas",
    countryId: "VI"
}, {
    id: "America/St_Vincent",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "S:t Vincent",
    countryId: "VC"
}, P.timeZones.slice(117, 119), P.timeZones[125], {
    id: "America/St_Johns",
    regionId: "021",
    utcStandardOffsetSeconds: -12600,
    displayName: "S:t Johns",
    countryId: "CA"
}, {
    id: "America/Araguaina",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Araguaína",
    countryId: "BR"
}, P.timeZones[128], {
    id: "America/Belem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Belém",
    countryId: "BR"
}, P.timeZones.slice(130, 137), {
    id: "America/Maceio",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Maceió",
    countryId: "BR"
}, P.timeZones.slice(138, 145), P.timeZones[146], {
    id: "America/Argentina/Rio_Gallegos",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Río Gallegos",
    countryId: "AR"
}, P.timeZones.slice(147, 150), {
    id: "America/Santarem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Santarém",
    countryId: "BR"
}, P.timeZones[152], {
    id: "America/Sao_Paulo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "São Paulo",
    countryId: "BR"
}, {
    id: "America/Argentina/Tucuman",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Tucumán",
    countryId: "AR"
}, P.timeZones[154], {
    id: "America/Noronha",
    regionId: "005",
    utcStandardOffsetSeconds: -7200,
    displayName: "Fernando de Noronha",
    countryId: "BR"
}, P.timeZones[156], {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Sydgeorgien",
    countryId: "GS"
}, {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azorerna",
    countryId: "PT"
}, P.timeZones[160], {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Kap Verde",
    countryId: "CV"
}, P.timeZones.slice(161, 166), P.timeZones.slice(167, 176), {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Kanarieöarna",
    countryId: "ES"
}, {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lissabon",
    countryId: "PT"
}, {
    id: "Africa/Lome",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Lomé",
    countryId: "TG"
}, P.timeZones.slice(178, 184), {
    id: "Atlantic/St_Helena",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "S:t Helena",
    countryId: "SH"
}, {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Alger",
    countryId: "DZ"
}, P.timeZones.slice(188, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrad",
    countryId: "RS"
}, P.timeZones.slice(192, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bryssel",
    countryId: "BE"
}, P.timeZones[196], {
    id: "Europe/Busingen",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Büsingen am Hochrhein",
    countryId: "DE"
}, P.timeZones.slice(198, 200), P.timeZones[201], {
    id: "Africa/El_Aaiun",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "El-Aaiún",
    countryId: "EH"
}, P.timeZones.slice(203, 205), {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Köpenhamn",
    countryId: "DK"
}, P.timeZones.slice(205, 210), {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luxemburg",
    countryId: "LU"
}, P.timeZones.slice(211, 215), P.timeZones[216], {
    id: "Africa/Ndjamena",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "N’Djamena",
    countryId: "TD"
}, P.timeZones.slice(217, 221), {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Prag",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Rom",
    countryId: "IT"
}, P.timeZones.slice(223, 227), {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, P.timeZones.slice(228, 230), {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Vatikanen",
    countryId: "VA"
}, {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Warszawa",
    countryId: "PL"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Wien",
    countryId: "AT"
}, P.timeZones[233], {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zürich",
    countryId: "CH"
}, {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Aten",
    countryId: "GR"
}, P.timeZones.slice(236, 238), P.timeZones[239], {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bukarest",
    countryId: "RO"
}, {
    id: "Europe/Chisinau",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Chișinău",
    countryId: "MD"
}, P.timeZones.slice(242, 247), {
    id: "Europe/Helsinki",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Helsingfors",
    countryId: "FI"
}, P.timeZones.slice(248, 251), {
    id: "Africa/Cairo",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kairo",
    countryId: "EG"
}, P.timeZones.slice(251, 268), {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Addis Abeba",
    countryId: "ET"
}, P.timeZones.slice(269, 273), {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdad",
    countryId: "IQ"
}, P.timeZones[274], {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damaskus",
    countryId: "SY"
}, {
    id: "Africa/Dar_es_Salaam",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Dar es-Salaam",
    countryId: "TZ"
}, P.timeZones.slice(278, 282), {
    id: "Indian/Comoro",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Komorerna",
    countryId: "KM"
}, P.timeZones.slice(282, 286), {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moskva",
    countryId: "RU"
}, P.timeZones.slice(287, 293), {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Teheran",
    countryId: "IR"
}, P.timeZones.slice(294, 297), {
    id: "Asia/Yerevan",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Jerevan",
    countryId: "AM"
}, {
    id: "Indian/Mahe",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Mahé",
    countryId: "SC"
}, P.timeZones[298], {
    id: "Asia/Muscat",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Muskat",
    countryId: "OM"
}, {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Réunion",
    countryId: "RE"
}, P.timeZones.slice(301, 305), P.timeZones[306], {
    id: "Asia/Aqtau",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aktau",
    countryId: "KZ"
}, {
    id: "Asia/Aqtobe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aqtöbe",
    countryId: "KZ"
}, {
    id: "Asia/Ashgabat",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Asjchabad",
    countryId: "TM"
}, P.timeZones[310], {
    id: "Asia/Dushanbe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Dusjanbe",
    countryId: "TJ"
}, {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Jekaterinburg",
    countryId: "RU"
}, P.timeZones[312], {
    id: "Indian/Kerguelen",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Kerguelenöarna",
    countryId: "TF"
}, {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Maldiverna",
    countryId: "MV"
}, P.timeZones.slice(315, 319), {
    id: "Asia/Tashkent",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Tasjkent",
    countryId: "UZ"
}, P.timeZones.slice(321, 324), {
    id: "Asia/Almaty",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Alma-Ata",
    countryId: "KZ"
}, {
    id: "Asia/Bishkek",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Bisjkek",
    countryId: "KG"
}, {
    id: "Indian/Chagos",
    utcStandardOffsetSeconds: 21600,
    displayName: "Chagosöarna",
    countryId: "IO"
}, P.timeZones.slice(327, 331), P.timeZones[332], {
    id: "Asia/Urumqi",
    regionId: "030",
    utcStandardOffsetSeconds: 21600,
    displayName: "Ürümqi",
    countryId: "CN"
}, {
    id: "Indian/Cocos",
    utcStandardOffsetSeconds: 23400,
    displayName: "Kokosöarna",
    countryId: "CC"
}, P.timeZones.slice(334, 337), {
    id: "Asia/Hovd",
    regionId: "030",
    utcStandardOffsetSeconds: 25200,
    displayName: "Chovd",
    countryId: "MN"
}, P.timeZones.slice(338, 340), P.timeZones[341], {
    id: "Indian/Christmas",
    utcStandardOffsetSeconds: 25200,
    displayName: "Julön",
    countryId: "CX"
}, {
    id: "Asia/Krasnoyarsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Krasnojarsk",
    countryId: "RU"
}, P.timeZones.slice(343, 350), {
    id: "Asia/Hong_Kong",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Hongkong",
    countryId: "HK"
}, P.timeZones.slice(352, 355), {
    id: "Asia/Macau",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Macao",
    countryId: "MO"
}, P.timeZones[356], {
    id: "Asia/Manila",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Manilla",
    countryId: "PH"
}, P.timeZones.slice(358, 362), {
    id: "Asia/Choibalsan",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Tjojbalsan",
    countryId: "MN"
}, P.timeZones.slice(362, 364), {
    id: "Asia/Khandyga",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Chandyga",
    countryId: "RU"
}, P.timeZones[365], {
    id: "Asia/Yakutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jakutsk",
    countryId: "RU"
}, P.timeZones[366], P.timeZones.slice(368, 370), {
    id: "Asia/Seoul",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Söul",
    countryId: "KR"
}, {
    id: "Asia/Chita",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tjita",
    countryId: "RU"
}, P.timeZones[371], P.timeZones.slice(373, 397), {
    id: "Pacific/Noumea",
    regionId: "054",
    utcStandardOffsetSeconds: 39600,
    displayName: "Nouméa",
    countryId: "NC"
}, P.timeZones[398], {
    id: "Asia/Sakhalin",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Sachalin",
    countryId: "RU"
}, P.timeZones.slice(400, 405), {
    id: "Asia/Kamchatka",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Kamtjatka",
    countryId: "RU"
}, P.timeZones.slice(406, 412), {
    id: "Pacific/Wallis",
    regionId: "061",
    utcStandardOffsetSeconds: 43200,
    displayName: "Wallisön",
    countryId: "WF"
}, P.timeZones.slice(413, 419));

inter.territories = [ _5fvj383, _5fvj414, _5fvj295, _5fvj296, _5fvj492, _5fvj441, _5fvj252, _5fvj225, _5fvj297, _5fvj154, _5fvj459, _5fvj331, _5fvj298, _5fvj202, _5fvj159, _5fvj404, _5fvj465, _5fvj360, _5fvj394, _5fvj253, _5fvj254, _5fvj361, _5fvj299, _5fvj255, _5fvj226, _5fvj203, _5fvj256, _5fvj227, _5fvj257, _5fvj484, _5fvj300, _5fvj155, _5fvj332, _5fvj480, _5fvj493, _5fvj228, _5fvj333, _5fvj395, _5fvj258, _5fvj384, _5fvj468, _5fvj507, _5fvj481, _5fvj466, _5fvj188, _5fvj204, _5fvj166, _5fvj301, _5fvj334, _5fvj362, _5fvj259, _5fvj229, _5fvj260, _5fvj167, _5fvj302, _5fvj303, _5fvj485, _5fvj261, _5fvj262, _5fvj429, _5fvj385, _5fvj423, _5fvj263, _5fvj264, _5fvj304, _5fvj415, _5fvj416, _5fvj190, _5fvj396, _5fvj265, _5fvj335, _5fvj417, _5fvj449, _5fvj336, _5fvj305, _5fvj469, _5fvj205, _5fvj230, _5fvj306, _5fvj206, _5fvj337, _5fvj307, _5fvj266, _5fvj308, _5fvj363, _5fvj191, _5fvj338, _5fvj309, _5fvj231, _5fvj405, _5fvj232, _5fvj207, _5fvj386, _5fvj310, _5fvj470, _5fvj233, _5fvj364, _5fvj192, _5fvj193, _5fvj234, _5fvj235, _5fvj387, _5fvj236, _5fvj267, _5fvj268, _5fvj208, _5fvj209, _5fvj237, _5fvj339, _5fvj137, _5fvj311, _5fvj269, _5fvj238, _5fvj168, _5fvj340, _5fvj430, _5fvj486, _5fvj341, _5fvj210, _5fvj194, _5fvj388, _5fvj312, _5fvj160, _5fvj342, _5fvj442, _5fvj418, _5fvj270, _5fvj313, _5fvj195, _5fvj239, _5fvj196, _5fvj271, _5fvj314, _5fvj272, _5fvj273, _5fvj240, _5fvj406, _5fvj274, _5fvj343, _5fvj450, _5fvj365, _5fvj366, _5fvj241, _5fvj315, _5fvj367, _5fvj197, _5fvj211, _5fvj275, _5fvj407, _5fvj368, _5fvj389, _5fvj344, _5fvj276, _5fvj451, _5fvj242, _5fvj390, _5fvj498, _5fvj345, _5fvj243, _5fvj346, _5fvj369, _5fvj370, _5fvj371, _5fvj424, _5fvj277, _5fvj212, _5fvj408, _5fvj213, _5fvj347, _5fvj214, _5fvj278, _5fvj198, _5fvj508, _5fvj452, _5fvj453, _5fvj348, _5fvj419, _5fvj349, _5fvj215, _5fvj420, _5fvj391, _5fvj431, _5fvj199, _5fvj316, _5fvj216, _5fvj495, _5fvj244, _5fvj432, _5fvj317, _5fvj200, _5fvj409, _5fvj217, _5fvj454, _5fvj318, _5fvj392, _5fvj218, _5fvj319, _5fvj245, _5fvj320, _5fvj279, _5fvj421, _5fvj372, _5fvj460, _5fvj350, _5fvj373, _5fvj487, _5fvj509, _5fvj397, _5fvj219, _5fvj374, _5fvj398, _5fvj280, _5fvj281, _5fvj282, _5fvj399, _5fvj400, _5fvj351, _5fvj401, _5fvj352, _5fvj353, _5fvj283, _5fvj284, _5fvj354, _5fvj422, _5fvj220, _5fvj285, _5fvj482, _5fvj286, _5fvj355, _5fvj356, _5fvj455, _5fvj433, _5fvj443, _5fvj444, _5fvj321, _5fvj461, _5fvj322, _5fvj246, _5fvj471, _5fvj402, _5fvj247, _5fvj323, _5fvj221, _5fvj324, _5fvj325, _5fvj201, _5fvj287, _5fvj222, _5fvj462, _5fvj180, _5fvj326, _5fvj288, _5fvj403, _5fvj483, _5fvj248, _5fvj327, _5fvj189, _5fvj175, _5fvj249, _5fvj289, _5fvj250, _5fvj290, _5fvj375, _5fvj291, _5fvj410, _5fvj357, _5fvj292, _5fvj393, _5fvj456, _5fvj445, _5fvj457, _5fvj376, _5fvj488, _5fvj251, _5fvj328, _5fvj472, _5fvj467, _5fvj156, {
    id: "QO",
    displayName: "yttre öar i Oceanien",
    regionId: "009",
    hasTimeZones: false
}, _5fvj223, _5fvj446, _5fvj434, _5fvj358, _5fvj447, _5fvj329 ];

inter.regions = [ _5fvj414, _5fvj404, _5fvj465, _5fvj468, _5fvj481, _5fvj466, _5fvj415, _5fvj430, _5fvj451, _5fvj498, _5fvj508, _5fvj452, _5fvj453, _5fvj431, _5fvj454, _5fvj455, _5fvj433, _5fvj443, _5fvj461, _5fvj456, _5fvj445, _5fvj457, _5fvj472, _5fvj467, _5fvj156, _5fvj446, _5fvj434, _5fvj447 ];

inter.countries = [ _5fvj383, _5fvj295, _5fvj296, _5fvj492, _5fvj441, _5fvj252, _5fvj225, _5fvj297, _5fvj154, _5fvj459, _5fvj331, _5fvj298, _5fvj202, _5fvj159, _5fvj360, _5fvj394, _5fvj253, _5fvj254, _5fvj361, _5fvj299, _5fvj255, _5fvj226, _5fvj203, _5fvj256, _5fvj227, _5fvj257, _5fvj484, _5fvj300, _5fvj155, _5fvj332, _5fvj480, _5fvj493, _5fvj228, _5fvj333, _5fvj395, _5fvj258, _5fvj384, _5fvj507, _5fvj188, _5fvj204, _5fvj166, _5fvj301, _5fvj334, _5fvj362, _5fvj259, _5fvj229, _5fvj260, _5fvj167, _5fvj302, _5fvj303, _5fvj485, _5fvj261, _5fvj262, _5fvj429, _5fvj385, _5fvj423, _5fvj263, _5fvj264, _5fvj304, _5fvj416, _5fvj190, _5fvj396, _5fvj265, _5fvj335, _5fvj417, _5fvj449, _5fvj336, _5fvj305, _5fvj469, _5fvj205, _5fvj230, _5fvj306, _5fvj206, _5fvj337, _5fvj307, _5fvj266, _5fvj308, _5fvj363, _5fvj191, _5fvj338, _5fvj309, _5fvj231, _5fvj405, _5fvj232, _5fvj207, _5fvj386, _5fvj310, _5fvj470, _5fvj233, _5fvj364, _5fvj192, _5fvj193, _5fvj234, _5fvj235, _5fvj387, _5fvj236, _5fvj267, _5fvj268, _5fvj208, _5fvj209, _5fvj237, _5fvj339, _5fvj137, _5fvj311, _5fvj269, _5fvj238, _5fvj168, _5fvj340, _5fvj486, _5fvj341, _5fvj210, _5fvj194, _5fvj388, _5fvj312, _5fvj160, _5fvj342, _5fvj442, _5fvj418, _5fvj270, _5fvj313, _5fvj195, _5fvj239, _5fvj196, _5fvj271, _5fvj314, _5fvj272, _5fvj273, _5fvj240, _5fvj406, _5fvj274, _5fvj343, _5fvj450, _5fvj365, _5fvj366, _5fvj241, _5fvj315, _5fvj367, _5fvj197, _5fvj211, _5fvj275, _5fvj407, _5fvj368, _5fvj389, _5fvj344, _5fvj276, _5fvj242, _5fvj390, _5fvj345, _5fvj243, _5fvj346, _5fvj369, _5fvj370, _5fvj371, _5fvj424, _5fvj277, _5fvj212, _5fvj408, _5fvj213, _5fvj347, _5fvj214, _5fvj278, _5fvj198, _5fvj348, _5fvj419, _5fvj349, _5fvj215, _5fvj420, _5fvj391, _5fvj199, _5fvj316, _5fvj216, _5fvj495, _5fvj244, _5fvj432, _5fvj317, _5fvj200, _5fvj409, _5fvj217, _5fvj318, _5fvj392, _5fvj218, _5fvj319, _5fvj245, _5fvj320, _5fvj279, _5fvj421, _5fvj372, _5fvj460, _5fvj350, _5fvj373, _5fvj487, _5fvj509, _5fvj397, _5fvj219, _5fvj374, _5fvj398, _5fvj280, _5fvj281, _5fvj282, _5fvj399, _5fvj400, _5fvj351, _5fvj401, _5fvj352, _5fvj353, _5fvj283, _5fvj284, _5fvj354, _5fvj422, _5fvj220, _5fvj285, _5fvj482, _5fvj286, _5fvj355, _5fvj356, _5fvj444, _5fvj321, _5fvj322, _5fvj246, _5fvj471, _5fvj402, _5fvj247, _5fvj323, _5fvj221, _5fvj324, _5fvj325, _5fvj201, _5fvj287, _5fvj222, _5fvj462, _5fvj180, _5fvj326, _5fvj288, _5fvj403, _5fvj483, _5fvj248, _5fvj327, _5fvj189, _5fvj175, _5fvj249, _5fvj289, _5fvj250, _5fvj290, _5fvj375, _5fvj291, _5fvj410, _5fvj357, _5fvj292, _5fvj393, _5fvj376, _5fvj488, _5fvj251, _5fvj328, _5fvj223, _5fvj358, _5fvj329 ];

inter.languages = [ {
    id: "ab",
    displayName: "abchaziska"
}, {
    id: "ace",
    displayName: "acehnesiska"
}, {
    id: "ach",
    displayName: "acholi"
}, {
    id: "ada",
    displayName: "adangme"
}, {
    id: "ady",
    displayName: "adygeiska"
}, {
    id: "aa",
    displayName: "afar"
}, {
    id: "afh",
    displayName: "afrihili"
}, {
    id: "af",
    displayName: "afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ain",
    displayName: "ainu"
}, {
    id: "ak",
    displayName: "akan",
    nativeDisplayName: "Akan"
}, {
    id: "akk",
    displayName: "akkadiska"
}, {
    id: "akz",
    displayName: "Alabama-muskogee"
}, {
    id: "ale",
    displayName: "aleutiska"
}, {
    id: "arq",
    displayName: "algerisk arabiska"
}, {
    id: "en_us",
    displayName: "amerikansk engelska",
    nativeDisplayName: "American English"
}, {
    id: "ase",
    displayName: "amerikanskt teckenspråk"
}, {
    id: "smn",
    displayName: "enaresamiska",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "anp",
    displayName: "angika"
}, {
    id: "njo",
    displayName: "ao-naga"
}, {
    id: "an",
    displayName: "aragonesiska"
}, {
    id: "arc",
    displayName: "arameiska"
}, {
    id: "aro",
    displayName: "araoniska"
}, {
    id: "arp",
    displayName: "arapaho"
}, {
    id: "arn",
    displayName: "araukanska"
}, {
    id: "arw",
    displayName: "arawakiska"
}, {
    id: "rup",
    displayName: "arumänska"
}, {
    id: "ast",
    displayName: "asturiska",
    nativeDisplayName: "asturianu"
}, {
    id: "cch",
    displayName: "atsam"
}, {
    id: "en_au",
    displayName: "australisk engelska",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "avariska"
}, {
    id: "ae",
    displayName: "avestiska"
}, {
    id: "awa",
    displayName: "awadhi"
}, {
    id: "ay",
    displayName: "aymara"
}, {
    id: "az",
    displayName: "azerbajdzjanska",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "bfd",
    displayName: "bafut"
}, {
    id: "bfq",
    displayName: "bagada"
}, {
    id: "byv",
    displayName: "bagangte"
}, {
    id: "ms",
    displayName: "malajiska",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bqi",
    displayName: "bakhtiari"
}, {
    id: "bss",
    displayName: "bakossi"
}, {
    id: "ban",
    displayName: "balinesiska"
}, {
    id: "bal",
    displayName: "baluchiska"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bkm",
    displayName: "bamekon"
}, {
    id: "ybb",
    displayName: "bamileké-jemba"
}, {
    id: "bax",
    displayName: "bamunska"
}, {
    id: "bjn",
    displayName: "banjariska"
}, {
    id: "ba",
    displayName: "basjkiriska"
}, {
    id: "bbc",
    displayName: "batak-toba"
}, {
    id: "bar",
    displayName: "bayerska"
}, {
    id: "bej",
    displayName: "beja"
}, {
    id: "bew",
    displayName: "betawiska"
}, {
    id: "bho",
    displayName: "bhojpuri"
}, {
    id: "bik",
    displayName: "bikol"
}, {
    id: "bin",
    displayName: "bini"
}, {
    id: "bpy",
    displayName: "bishnupriya"
}, {
    id: "bi",
    displayName: "bislama"
}, {
    id: "byn",
    displayName: "blin"
}, {
    id: "zbl",
    displayName: "blissymboler"
}, {
    id: "bs",
    displayName: "bosniska",
    nativeDisplayName: "bosanski"
}, {
    id: "bum",
    displayName: "boulou"
}, {
    id: "brh",
    displayName: "brahuiska"
}, {
    id: "bra",
    displayName: "braj"
}, {
    id: "br",
    displayName: "bretonska",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "brittisk engelska",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "buginesiska"
}, {
    id: "bua",
    displayName: "burjätiska"
}, {
    id: "cad",
    displayName: "caddo"
}, {
    id: "frc",
    displayName: "cajun-franska"
}, {
    id: "en_ca",
    displayName: "kanadensisk engelska",
    nativeDisplayName: "Canadian English"
}, {
    id: "ca",
    displayName: "katalanska",
    nativeDisplayName: "català"
}, {
    id: "cay",
    displayName: "cayuga"
}, {
    id: "ceb",
    displayName: "cebuano"
}, {
    id: "esu",
    displayName: "centralalaskisk jupiska"
}, {
    id: "dtp",
    displayName: "centraldusun"
}, {
    id: "shu",
    displayName: "Chad-arabiska"
}, {
    id: "chg",
    displayName: "chagatai"
}, {
    id: "ch",
    displayName: "chamorro"
}, {
    id: "chy",
    displayName: "cheyenne"
}, {
    id: "chb",
    displayName: "chibcha"
}, {
    id: "kde",
    displayName: "makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "qug",
    displayName: "Chimborazo-höglandskichwa"
}, {
    id: "chn",
    displayName: "chinook"
}, {
    id: "chp",
    displayName: "chipewyan"
}, {
    id: "sn",
    displayName: "shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cho",
    displayName: "choctaw"
}, {
    id: "chk",
    displayName: "chuukesiska"
}, {
    id: "cr",
    displayName: "cree"
}, {
    id: "cy",
    displayName: "walesiska",
    nativeDisplayName: "Cymraeg"
}, {
    id: "dak",
    displayName: "dakota"
}, {
    id: "da",
    displayName: "danska",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "darginska"
}, {
    id: "se",
    displayName: "nordsamiska",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "dzg",
    displayName: "dazaga"
}, {
    id: "del",
    displayName: "delaware"
}, {
    id: "de",
    displayName: "tyska",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "dinka"
}, {
    id: "dv",
    displayName: "divehi"
}, {
    id: "doi",
    displayName: "dogri"
}, {
    id: "dgr",
    displayName: "dogrib"
}, {
    id: "dsb",
    displayName: "lågsorbiska",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "dyu",
    displayName: "dyula"
}, {
    id: "et",
    displayName: "estniska",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efik"
}, {
    id: "arz",
    displayName: "egyptisk arabiska"
}, {
    id: "eka",
    displayName: "ekajuk"
}, {
    id: "guz",
    displayName: "gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "elx",
    displayName: "elamitiska"
}, {
    id: "egl",
    displayName: "emiliska"
}, {
    id: "en",
    displayName: "engelska",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "erjya"
}, {
    id: "es",
    displayName: "spanska",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "europeisk spanska",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "mexikansk spanska",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "latinamerikansk spanska",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "gez",
    displayName: "etiopiska"
}, {
    id: "eu",
    displayName: "baskiska",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ext",
    displayName: "extremaduriska"
}, {
    id: "ee",
    displayName: "ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "fang"
}, {
    id: "fat",
    displayName: "fanti"
}, {
    id: "gur",
    displayName: "farefare"
}, {
    id: "phn",
    displayName: "feniciska"
}, {
    id: "hif",
    displayName: "Fiji-hindi"
}, {
    id: "fj",
    displayName: "fijianska"
}, {
    id: "fil",
    displayName: "filippinska",
    nativeDisplayName: "Filipino"
}, {
    id: "mul",
    displayName: "flera språk"
}, {
    id: "fon",
    displayName: "fonspråket"
}, {
    id: "egy",
    displayName: "fornegyptiska"
}, {
    id: "ang",
    displayName: "fornengelska"
}, {
    id: "fro",
    displayName: "fornfranska"
}, {
    id: "grc",
    displayName: "forngrekiska"
}, {
    id: "goh",
    displayName: "fornhögtyska"
}, {
    id: "sga",
    displayName: "forniriska"
}, {
    id: "non",
    displayName: "fornnordiska"
}, {
    id: "peo",
    displayName: "fornpersiska"
}, {
    id: "pro",
    displayName: "fornprovensalska"
}, {
    id: "frp",
    displayName: "frankoprovensalska"
}, {
    id: "fr",
    displayName: "franska",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "kanadensisk franska",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "schweizisk franska",
    nativeDisplayName: "français suisse"
}, {
    id: "fur",
    displayName: "friulianska",
    nativeDisplayName: "furlan"
}, {
    id: "fo",
    displayName: "färöiska",
    nativeDisplayName: "føroyskt"
}, {
    id: "ga",
    displayName: "iriska",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "gagauziska"
}, {
    id: "gl",
    displayName: "galiciska",
    nativeDisplayName: "galego"
}, {
    id: "gan",
    displayName: "gan"
}, {
    id: "gay",
    displayName: "gayo"
}, {
    id: "gba",
    displayName: "gbaya"
}, {
    id: "aln",
    displayName: "gegiska"
}, {
    id: "bbj",
    displayName: "ghomala"
}, {
    id: "ki",
    displayName: "kikuyu",
    nativeDisplayName: "Gikuyu"
}, {
    id: "glk",
    displayName: "gilaki"
}, {
    id: "gil",
    displayName: "gilbertiska"
}, {
    id: "gom",
    displayName: "Goa-konkani"
}, {
    id: "gon",
    displayName: "gondi"
}, {
    id: "gor",
    displayName: "gorontalo"
}, {
    id: "got",
    displayName: "gotiska"
}, {
    id: "grb",
    displayName: "grebo"
}, {
    id: "gn",
    displayName: "guaraní"
}, {
    id: "gwi",
    displayName: "gwichin"
}, {
    id: "gd",
    displayName: "skotsk gäliska",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "gaa",
    displayName: "gã"
}, {
    id: "hai",
    displayName: "haida"
}, {
    id: "ht",
    displayName: "haitiska"
}, {
    id: "hak",
    displayName: "hakka"
}, {
    id: "ha",
    displayName: "hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "hz",
    displayName: "herero"
}, {
    id: "hit",
    displayName: "hettitiska"
}, {
    id: "bez",
    displayName: "bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hil",
    displayName: "hiligaynon"
}, {
    id: "ho",
    displayName: "hirimotu"
}, {
    id: "hmn",
    displayName: "hmongspråk"
}, {
    id: "hsb",
    displayName: "högsorbiska",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "kroatiska",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "hupa"
}, {
    id: "iba",
    displayName: "ibanska"
}, {
    id: "ibb",
    displayName: "ibibio"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "io",
    displayName: "ido"
}, {
    id: "ig",
    displayName: "igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "iloko"
}, {
    id: "id",
    displayName: "indonesiska",
    nativeDisplayName: "Indonesia"
}, {
    id: "zxx",
    displayName: "inget språkligt innehåll"
}, {
    id: "izh",
    displayName: "ingriska"
}, {
    id: "inh",
    displayName: "ingusjiska"
}, {
    id: "ia",
    displayName: "interlingua"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "iu",
    displayName: "inuktitut"
}, {
    id: "ik",
    displayName: "inupiak"
}, {
    id: "sbp",
    displayName: "sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "nordndebele",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "italienska",
    nativeDisplayName: "italiano"
}, {
    id: "jam",
    displayName: "jamaikansk engelsk kreol"
}, {
    id: "yap",
    displayName: "japetiska"
}, {
    id: "jv",
    displayName: "javanesiska"
}, {
    id: "kaj",
    displayName: "jju"
}, {
    id: "dyo",
    displayName: "jola-fonyi",
    nativeDisplayName: "joola"
}, {
    id: "jrb",
    displayName: "judisk arabiska"
}, {
    id: "jpr",
    displayName: "judisk persiska"
}, {
    id: "jut",
    displayName: "jylländska"
}, {
    id: "kbd",
    displayName: "kabardinska"
}, {
    id: "kea",
    displayName: "kapverdiska",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kac",
    displayName: "kachin"
}, {
    id: "kgp",
    displayName: "kaingang"
}, {
    id: "kkj",
    displayName: "mkako",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "grönländska",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "xal",
    displayName: "kalmuckiska"
}, {
    id: "kbl",
    displayName: "kanembu"
}, {
    id: "kr",
    displayName: "kanuri"
}, {
    id: "cps",
    displayName: "kapisnon"
}, {
    id: "krc",
    displayName: "karachay-balkar"
}, {
    id: "kaa",
    displayName: "karakalpakiska"
}, {
    id: "krl",
    displayName: "karelska"
}, {
    id: "car",
    displayName: "karibiska"
}, {
    id: "csb",
    displayName: "kasjubiska"
}, {
    id: "kaw",
    displayName: "kawi"
}, {
    id: "ken",
    displayName: "kenjang"
}, {
    id: "kw",
    displayName: "korniska",
    nativeDisplayName: "kernewek"
}, {
    id: "kha",
    displayName: "khasi"
}, {
    id: "naq",
    displayName: "nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "kho",
    displayName: "khotanesiska"
}, {
    id: "khw",
    displayName: "khowar"
}, {
    id: "rof",
    displayName: "rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "kg",
    displayName: "kikongo"
}, {
    id: "jmc",
    displayName: "kimashami",
    nativeDisplayName: "Kimachame"
}, {
    id: "kmb",
    displayName: "kimbundu"
}, {
    id: "krj",
    displayName: "kinaray-a"
}, {
    id: "rw",
    displayName: "kinjarwanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asu",
    nativeDisplayName: "Kipare"
}, {
    id: "kiu",
    displayName: "kirmanjki"
}, {
    id: "rwk",
    displayName: "rwa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "kisambaa",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "swahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "Kongo-swahili",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "yao",
    displayName: "kiyao"
}, {
    id: "nwc",
    displayName: "klassisk newariska"
}, {
    id: "syc",
    displayName: "klassisk syriska"
}, {
    id: "tlh",
    displayName: "klingonska"
}, {
    id: "kv",
    displayName: "kome"
}, {
    id: "koi",
    displayName: "komi-permjakiska"
}, {
    id: "cop",
    displayName: "koptiska"
}, {
    id: "kfo",
    displayName: "koro"
}, {
    id: "co",
    displayName: "korsikanska"
}, {
    id: "kos",
    displayName: "kosreanska"
}, {
    id: "avk",
    displayName: "kotava"
}, {
    id: "khq",
    displayName: "Timbuktu-songhoy",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "Gao-songhay",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "kpe",
    displayName: "kpelle"
}, {
    id: "mfe",
    displayName: "mauritansk kreol",
    nativeDisplayName: "kreol morisien"
}, {
    id: "crh",
    displayName: "krimtatariska"
}, {
    id: "kri",
    displayName: "krio"
}, {
    id: "kj",
    displayName: "kuanyama"
}, {
    id: "kum",
    displayName: "kumykiska"
}, {
    id: "ku",
    displayName: "kurdiska"
}, {
    id: "kru",
    displayName: "kurukh"
}, {
    id: "kut",
    displayName: "kutenaj"
}, {
    id: "nmg",
    displayName: "kwasio",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ksh",
    displayName: "kölniska",
    nativeDisplayName: "Kölsch"
}, {
    id: "ebu",
    displayName: "embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "lad",
    displayName: "ladino"
}, {
    id: "lah",
    displayName: "lahnda"
}, {
    id: "lkt",
    displayName: "lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lam",
    displayName: "lamba"
}, {
    id: "la",
    displayName: "latin"
}, {
    id: "lv",
    displayName: "lettiska",
    nativeDisplayName: "latviešu"
}, {
    id: "lzz",
    displayName: "laziska"
}, {
    id: "to",
    displayName: "tonganska",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "ltg",
    displayName: "lettgalliska"
}, {
    id: "lez",
    displayName: "lezghien"
}, {
    id: "lt",
    displayName: "litauiska",
    nativeDisplayName: "lietuvių"
}, {
    id: "lij",
    displayName: "liguriska"
}, {
    id: "li",
    displayName: "limburgiska"
}, {
    id: "lfn",
    displayName: "lingua franca nova"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "lzh",
    displayName: "litterär kineiska"
}, {
    id: "liv",
    displayName: "livoniska"
}, {
    id: "jbo",
    displayName: "lojban"
}, {
    id: "lmo",
    displayName: "lombardiska"
}, {
    id: "loz",
    displayName: "lozi"
}, {
    id: "lua",
    displayName: "luba-lulua"
}, {
    id: "lg",
    displayName: "luganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "luiseño"
}, {
    id: "smj",
    displayName: "lulesamiska"
}, {
    id: "luy",
    displayName: "luhya",
    nativeDisplayName: "Luluhia"
}, {
    id: "lun",
    displayName: "lunda"
}, {
    id: "lus",
    displayName: "lushai"
}, {
    id: "nds_nl",
    displayName: "lågsaxiska"
}, {
    id: "sli",
    displayName: "lågsilesiska"
}, {
    id: "nds",
    displayName: "lågtyska"
}, {
    id: "lb",
    displayName: "luxemburgiska",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "massajiska",
    nativeDisplayName: "Maa"
}, {
    id: "mde",
    displayName: "maba"
}, {
    id: "mad",
    displayName: "maduresiska"
}, {
    id: "maf",
    displayName: "mafa"
}, {
    id: "mag",
    displayName: "magahi"
}, {
    id: "hu",
    displayName: "ungerska",
    nativeDisplayName: "magyar"
}, {
    id: "vmf",
    displayName: "Main-frankiska"
}, {
    id: "mai",
    displayName: "maithili"
}, {
    id: "mak",
    displayName: "makasar"
}, {
    id: "mgh",
    displayName: "makhuwa-meetto",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "malagassiska",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "maltesiska",
    nativeDisplayName: "Malti"
}, {
    id: "mnc",
    displayName: "manchuriska"
}, {
    id: "mdr",
    displayName: "mandar"
}, {
    id: "man",
    displayName: "mande"
}, {
    id: "mni",
    displayName: "manipuri"
}, {
    id: "mi",
    displayName: "maori"
}, {
    id: "chm",
    displayName: "mariska"
}, {
    id: "ary",
    displayName: "marockansk arabiska"
}, {
    id: "mh",
    displayName: "marshalliska"
}, {
    id: "mwr",
    displayName: "marwari"
}, {
    id: "enm",
    displayName: "medelengelska"
}, {
    id: "frm",
    displayName: "medelfranska"
}, {
    id: "gmh",
    displayName: "medelhögtyska"
}, {
    id: "mga",
    displayName: "medeliriska"
}, {
    id: "dum",
    displayName: "medelnederländska"
}, {
    id: "pal",
    displayName: "medelpersiska"
}, {
    id: "men",
    displayName: "mende"
}, {
    id: "pdt",
    displayName: "mennonitisk lågtyska"
}, {
    id: "mwv",
    displayName: "mentawai"
}, {
    id: "mgo",
    displayName: "meta’",
    nativeDisplayName: "metaʼ"
}, {
    id: "fit",
    displayName: "meänkieli"
}, {
    id: "nan",
    displayName: "min nan"
}, {
    id: "min",
    displayName: "minangkabau"
}, {
    id: "xmf",
    displayName: "mingrelianska"
}, {
    id: "mwl",
    displayName: "mirandesiska"
}, {
    id: "mic",
    displayName: "mi’kmaq"
}, {
    id: "moh",
    displayName: "mohawk"
}, {
    id: "mdf",
    displayName: "moksja"
}, {
    id: "ro_md",
    displayName: "moldaviska",
    nativeDisplayName: "moldovenească"
}, {
    id: "lol",
    displayName: "mongo"
}, {
    id: "mos",
    displayName: "mossi"
}, {
    id: "mua",
    displayName: "mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "mus",
    displayName: "muskogee"
}, {
    id: "ttt",
    displayName: "muslimsk tatariska"
}, {
    id: "mye",
    displayName: "myene"
}, {
    id: "nqo",
    displayName: "n-kå"
}, {
    id: "nap",
    displayName: "napolitanska"
}, {
    id: "na",
    displayName: "nauru"
}, {
    id: "nv",
    displayName: "navaho"
}, {
    id: "jgo",
    displayName: "ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "ng",
    displayName: "ndonga"
}, {
    id: "nl",
    displayName: "nederländska",
    nativeDisplayName: "Nederlands"
}, {
    id: "new",
    displayName: "newariska"
}, {
    id: "sba",
    displayName: "ngambay"
}, {
    id: "yrl",
    displayName: "nheengatu"
}, {
    id: "nia",
    displayName: "nias"
}, {
    id: "niu",
    displayName: "niueanska"
}, {
    id: "nog",
    displayName: "nogai"
}, {
    id: "frr",
    displayName: "nordfrisiska"
}, {
    id: "nso",
    displayName: "nordsotho"
}, {
    id: "nb",
    displayName: "norskt bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "norska"
}, {
    id: "nov",
    displayName: "novial"
}, {
    id: "yav",
    displayName: "yangben",
    nativeDisplayName: "nuasue"
}, {
    id: "nym",
    displayName: "nyamwezi"
}, {
    id: "ny",
    displayName: "nyanja"
}, {
    id: "tog",
    displayName: "nyasatonganska"
}, {
    id: "nn",
    displayName: "nynorska",
    nativeDisplayName: "nynorsk"
}, {
    id: "nyo",
    displayName: "nyoro"
}, {
    id: "nzi",
    displayName: "nzima"
}, {
    id: "und",
    displayName: "obestämt språk"
}, {
    id: "oc",
    displayName: "occitanska"
}, {
    id: "oj",
    displayName: "odjibwa"
}, {
    id: "xog",
    displayName: "lusoga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "osage"
}, {
    id: "ota",
    displayName: "ottomanska"
}, {
    id: "uz",
    displayName: "uzbekiska",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pau",
    displayName: "palau"
}, {
    id: "pi",
    displayName: "pali"
}, {
    id: "pam",
    displayName: "pampanga"
}, {
    id: "pag",
    displayName: "pangasinan"
}, {
    id: "pap",
    displayName: "papiamento"
}, {
    id: "pdc",
    displayName: "Pennsylvaniatyska"
}, {
    id: "pfl",
    displayName: "Pfalz-tyska"
}, {
    id: "pms",
    displayName: "piemontesiska"
}, {
    id: "pcd",
    displayName: "pikardiska"
}, {
    id: "pl",
    displayName: "polska",
    nativeDisplayName: "polski"
}, {
    id: "pon",
    displayName: "ponape"
}, {
    id: "pnt",
    displayName: "pontiska"
}, {
    id: "pt",
    displayName: "portugisiska",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "brasiliansk portugisiska",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "europeisk portugisiska",
    nativeDisplayName: "português europeu"
}, {
    id: "prg",
    displayName: "fornpreussiska",
    nativeDisplayName: "prūsiskan"
}, {
    id: "ff",
    displayName: "fulani",
    nativeDisplayName: "Pulaar"
}, {
    id: "quc",
    displayName: "quiché"
}, {
    id: "raj",
    displayName: "rajasthani"
}, {
    id: "rap",
    displayName: "rapanui"
}, {
    id: "rar",
    displayName: "rarotonganska"
}, {
    id: "rif",
    displayName: "riffianska"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "rgn",
    displayName: "romagnol"
}, {
    id: "rom",
    displayName: "romani"
}, {
    id: "ro",
    displayName: "rumänska",
    nativeDisplayName: "română"
}, {
    id: "root",
    displayName: "rot"
}, {
    id: "rtm",
    displayName: "rotumänska"
}, {
    id: "rug",
    displayName: "rovianska"
}, {
    id: "cgg",
    displayName: "chiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "rätoromanska",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "quechua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "rue",
    displayName: "rusyn"
}, {
    id: "ssy",
    displayName: "saho"
}, {
    id: "sam",
    displayName: "samaritanska"
}, {
    id: "sm",
    displayName: "samoanska"
}, {
    id: "sgs",
    displayName: "samogitiska"
}, {
    id: "sad",
    displayName: "sandawe"
}, {
    id: "sa",
    displayName: "sanskrit"
}, {
    id: "sat",
    displayName: "santali"
}, {
    id: "sc",
    displayName: "sardiska"
}, {
    id: "sas",
    displayName: "sasak"
}, {
    id: "sdc",
    displayName: "sassaresisk sardiska"
}, {
    id: "stq",
    displayName: "saterfrisiska"
}, {
    id: "saz",
    displayName: "saurashtra"
}, {
    id: "de_ch",
    displayName: "schweizisk högtyska",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "schweizertyska",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "sly",
    displayName: "selayar"
}, {
    id: "sel",
    displayName: "selkup"
}, {
    id: "seh",
    displayName: "sena",
    nativeDisplayName: "sena"
}, {
    id: "see",
    displayName: "seneca"
}, {
    id: "sh",
    displayName: "serbokroatiska"
}, {
    id: "srr",
    displayName: "serer"
}, {
    id: "sei",
    displayName: "seri"
}, {
    id: "shn",
    displayName: "shan"
}, {
    id: "swb",
    displayName: "shimaoré"
}, {
    id: "sq",
    displayName: "albanska",
    nativeDisplayName: "shqip"
}, {
    id: "nnh",
    displayName: "bamileké-ngiemboon",
    nativeDisplayName: "Shwóŋò ngiembɔɔn"
}, {
    id: "scn",
    displayName: "sicilianska"
}, {
    id: "sid",
    displayName: "sidamo"
}, {
    id: "bla",
    displayName: "siksika"
}, {
    id: "szl",
    displayName: "silesiska"
}, {
    id: "sd",
    displayName: "sindhi"
}, {
    id: "sms",
    displayName: "skoltsamiska"
}, {
    id: "sco",
    displayName: "skotska"
}, {
    id: "den",
    displayName: "slavej"
}, {
    id: "sk",
    displayName: "slovakiska",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "slovenska",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "sogdiska"
}, {
    id: "snk",
    displayName: "soninke"
}, {
    id: "so",
    displayName: "somaliska",
    nativeDisplayName: "Soomaali"
}, {
    id: "srn",
    displayName: "sranan tongo"
}, {
    id: "suk",
    displayName: "sukuma"
}, {
    id: "sux",
    displayName: "sumeriska"
}, {
    id: "su",
    displayName: "sundanesiska"
}, {
    id: "fi",
    displayName: "finska",
    nativeDisplayName: "suomi"
}, {
    id: "sus",
    displayName: "susu"
}, {
    id: "sv",
    displayName: "svenska",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "swati"
}, {
    id: "alt",
    displayName: "sydaltaiska"
}, {
    id: "sdh",
    displayName: "sydkurdiska"
}, {
    id: "nr",
    displayName: "sydndebele"
}, {
    id: "sma",
    displayName: "sydsamiska"
}, {
    id: "st",
    displayName: "sydsotho"
}, {
    id: "syr",
    displayName: "syriska"
}, {
    id: "sg",
    displayName: "sango",
    nativeDisplayName: "Sängö"
}, {
    id: "tg",
    displayName: "tadzjikiska"
}, {
    id: "tl",
    displayName: "tagalog"
}, {
    id: "ty",
    displayName: "tahitiska"
}, {
    id: "tly",
    displayName: "talysh"
}, {
    id: "tmh",
    displayName: "tamashek"
}, {
    id: "tzm",
    displayName: "centralmarockansk tamazight",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "kabyliska",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "trv",
    displayName: "taroko"
}, {
    id: "twq",
    displayName: "tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "tatariska"
}, {
    id: "tem",
    displayName: "temne"
}, {
    id: "ter",
    displayName: "tereno"
}, {
    id: "tet",
    displayName: "tetum"
}, {
    id: "nus",
    displayName: "nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "tig",
    displayName: "tigré"
}, {
    id: "tiv",
    displayName: "tivi"
}, {
    id: "vi",
    displayName: "vietnamesiska",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "cv",
    displayName: "tjuvasjiska"
}, {
    id: "tli",
    displayName: "tlingit"
}, {
    id: "tpi",
    displayName: "tok pisin"
}, {
    id: "tkl",
    displayName: "tokelauiska"
}, {
    id: "tkr",
    displayName: "tsakhur"
}, {
    id: "tsd",
    displayName: "tsakodiska"
}, {
    id: "lu",
    displayName: "luba-katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tsi",
    displayName: "tsimshian"
}, {
    id: "ts",
    displayName: "tsonga"
}, {
    id: "tn",
    displayName: "tswana"
}, {
    id: "tcy",
    displayName: "tulu"
}, {
    id: "tum",
    displayName: "tumbuka"
}, {
    id: "aeb",
    displayName: "tunisisk arabiska"
}, {
    id: "tru",
    displayName: "turoyo"
}, {
    id: "tvl",
    displayName: "tuvaluanska"
}, {
    id: "tyv",
    displayName: "tuviniska"
}, {
    id: "tw",
    displayName: "twi"
}, {
    id: "kcg",
    displayName: "tyap"
}, {
    id: "tk",
    displayName: "turkmeniska",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "turkiska",
    nativeDisplayName: "Türkçe"
}, {
    id: "udm",
    displayName: "udmurtiska"
}, {
    id: "uga",
    displayName: "ugaritiska"
}, {
    id: "umb",
    displayName: "umbundu"
}, {
    id: "wa",
    displayName: "vallonska"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "vec",
    displayName: "venetianska"
}, {
    id: "vep",
    displayName: "veps"
}, {
    id: "nl_be",
    displayName: "flamländska",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "volapük",
    nativeDisplayName: "Volapük"
}, {
    id: "vot",
    displayName: "votiska"
}, {
    id: "bgn",
    displayName: "västbaluchiska"
}, {
    id: "vls",
    displayName: "västflamländska"
}, {
    id: "mrj",
    displayName: "västmariska"
}, {
    id: "vro",
    displayName: "võru"
}, {
    id: "wal",
    displayName: "walamo"
}, {
    id: "wae",
    displayName: "walsertyska",
    nativeDisplayName: "Walser"
}, {
    id: "war",
    displayName: "waray"
}, {
    id: "wbp",
    displayName: "warlpiri"
}, {
    id: "was",
    displayName: "washo"
}, {
    id: "guc",
    displayName: "wayuu"
}, {
    id: "fy",
    displayName: "västfrisiska",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "wolof"
}, {
    id: "wuu",
    displayName: "wu"
}, {
    id: "xh",
    displayName: "xhosa"
}, {
    id: "hsn",
    displayName: "xiang"
}, {
    id: "zap",
    displayName: "zapotek"
}, {
    id: "dje",
    displayName: "zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "zazaiska"
}, {
    id: "zea",
    displayName: "zeeländska"
}, {
    id: "zen",
    displayName: "zenaga"
}, {
    id: "za",
    displayName: "zhuang"
}, {
    id: "gbz",
    displayName: "zoroastrisk dari"
}, {
    id: "zun",
    displayName: "zuni"
}, {
    id: "yo",
    displayName: "yoruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "isländska",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "österrikisk tyska",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "frs",
    displayName: "östfrisiska"
}, {
    id: "cs",
    displayName: "tjeckiska",
    nativeDisplayName: "čeština"
}, {
    id: "bas",
    displayName: "basa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "hawaiiska",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "grekiska",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "vitryska",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bulgariska",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "ossetiska",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "kirgisiska",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "makedonska",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongoliska",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "tjetjenska",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "ryska",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "jakutiska",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "serbiska",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ukrainska",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "kyrkslaviska",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "kazakiska",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armeniska",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "jiddisch",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "hebreiska",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uiguriska",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "arabiska",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "modern standardarabiska",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "persiska",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "nordluri",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "mazanderani",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "afghanska",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "soranisk kurdiska",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "kashmiriska",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepalesiska",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "assamesiska",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengali",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "punjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gujarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugiska",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malayalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "singalesiska",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "thailändska",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "laotiska",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibetanska",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "bhutanesiska",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "burmesiska",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "georgiska",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrinja",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amhariska",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "kambodjanska",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "marockansk standard-tamazight",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "tachelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "kinesiska",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japanska",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "förenklad kinesiska",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "kantonesiska",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "traditionell kinesiska",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "szezuan i",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vaj",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "cherokesiska",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "koreanska",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Dupl",
    displayName: "Duployéstenografiska"
}, {
    id: "Lisu",
    displayName: "Fraser"
}, {
    id: "Pauc",
    displayName: "Pau Cin Hau-skrift"
}, {
    id: "Afak",
    displayName: "afakiska"
}, {
    id: "Ahom",
    displayName: "ahom"
}, {
    id: "Arab",
    displayName: "arabiska"
}, {
    id: "Armn",
    displayName: "armeniska"
}, {
    id: "Avst",
    displayName: "avestiska"
}, {
    id: "Bali",
    displayName: "balinesiska"
}, {
    id: "Bamu",
    displayName: "bamunska"
}, {
    id: "Bass",
    displayName: "bassaiska vah"
}, {
    id: "Batk",
    displayName: "batak"
}, {
    id: "Beng",
    displayName: "bengaliska"
}, {
    id: "Blis",
    displayName: "blissymboler"
}, {
    id: "Phlv",
    displayName: "bokpahlavi"
}, {
    id: "Bopo",
    displayName: "bopomofo"
}, {
    id: "Brah",
    displayName: "brami"
}, {
    id: "Bugi",
    displayName: "buginesiska"
}, {
    id: "Buhd",
    displayName: "buhid"
}, {
    id: "Mymr",
    displayName: "burmesiska"
}, {
    id: "Cakm",
    displayName: "chakma"
}, {
    id: "Cham",
    displayName: "cham"
}, {
    id: "Cher",
    displayName: "cherokee"
}, {
    id: "Cirt",
    displayName: "cirt"
}, {
    id: "Cprt",
    displayName: "cypriotiska"
}, {
    id: "Egyd",
    displayName: "demotiska"
}, {
    id: "Dsrt",
    displayName: "deseret"
}, {
    id: "Deva",
    displayName: "devanagari"
}, {
    id: "Egyp",
    displayName: "egyptiska hieroglyfer"
}, {
    id: "Elba",
    displayName: "elbasiska"
}, {
    id: "Syre",
    displayName: "estrangelosyriska"
}, {
    id: "Ethi",
    displayName: "etiopiska"
}, {
    id: "Phnx",
    displayName: "fenikiska"
}, {
    id: "Ital",
    displayName: "fornitaliska"
}, {
    id: "Cyrs",
    displayName: "fornkyrkoslavisk kyrilliska"
}, {
    id: "Narb",
    displayName: "fornnordarabiska"
}, {
    id: "Perm",
    displayName: "fornpermiska"
}, {
    id: "Xpeo",
    displayName: "fornpersiska"
}, {
    id: "Sarb",
    displayName: "fornsydarabiska"
}, {
    id: "Hung",
    displayName: "fornungerska"
}, {
    id: "Latf",
    displayName: "frakturlatin"
}, {
    id: "Hans",
    displayName: "förenklade"
}, {
    id: "Latg",
    displayName: "gaeliskt latin"
}, {
    id: "Gran",
    displayName: "gammaltamilska"
}, {
    id: "Zyyy",
    displayName: "gemensamma"
}, {
    id: "Geor",
    displayName: "georgiska"
}, {
    id: "Glag",
    displayName: "glagolitiska"
}, {
    id: "Goth",
    displayName: "gotiska"
}, {
    id: "Grek",
    displayName: "grekiska"
}, {
    id: "Gujr",
    displayName: "gujarati"
}, {
    id: "Guru",
    displayName: "gurmukhi"
}, {
    id: "Hani",
    displayName: "han"
}, {
    id: "Hang",
    displayName: "hangul"
}, {
    id: "Hano",
    displayName: "hanunå"
}, {
    id: "Hatr",
    displayName: "hatran"
}, {
    id: "Hebr",
    displayName: "hebreiska"
}, {
    id: "Egyh",
    displayName: "hieratiska"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Hluw",
    displayName: "hittitiska hieroglyfer"
}, {
    id: "Armi",
    displayName: "imperisk arameiska"
}, {
    id: "Inds",
    displayName: "indus"
}, {
    id: "Jpan",
    displayName: "japanska"
}, {
    id: "Java",
    displayName: "javanska"
}, {
    id: "Jurc",
    displayName: "jurchenska"
}, {
    id: "Kthi",
    displayName: "kaithiska"
}, {
    id: "Cans",
    displayName: "kanadensiska stavelsetecken"
}, {
    id: "Knda",
    displayName: "kanaresiska"
}, {
    id: "Cari",
    displayName: "kariska"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Hrkt",
    displayName: "katakana/hiragana"
}, {
    id: "Aghb",
    displayName: "kaukasiska albanska"
}, {
    id: "Kali",
    displayName: "kaya li"
}, {
    id: "Khar",
    displayName: "kharoshti"
}, {
    id: "Khmr",
    displayName: "khmeriska"
}, {
    id: "Khoj",
    displayName: "khojkiska"
}, {
    id: "Copt",
    displayName: "koptiska"
}, {
    id: "Kore",
    displayName: "koreanska"
}, {
    id: "Kpel",
    displayName: "kpellé"
}, {
    id: "Merc",
    displayName: "kursiv-meroitiska"
}, {
    id: "Geok",
    displayName: "kutsuri"
}, {
    id: "Cyrl",
    displayName: "kyrilliska"
}, {
    id: "Lana",
    displayName: "lanna"
}, {
    id: "Laoo",
    displayName: "laotiska"
}, {
    id: "Latn",
    displayName: "latinska"
}, {
    id: "Limb",
    displayName: "limbu"
}, {
    id: "Lina",
    displayName: "linjär A"
}, {
    id: "Linb",
    displayName: "linjär B"
}, {
    id: "Loma",
    displayName: "loma"
}, {
    id: "Lydi",
    displayName: "lydiska"
}, {
    id: "Lyci",
    displayName: "lykiska"
}, {
    id: "Mahj",
    displayName: "mahajaniska"
}, {
    id: "Mlym",
    displayName: "malayalam"
}, {
    id: "Mand",
    displayName: "mandaéiska"
}, {
    id: "Mani",
    displayName: "manikeanska"
}, {
    id: "Zmth",
    displayName: "matematisk notation"
}, {
    id: "Maya",
    displayName: "mayahieroglyfer"
}, {
    id: "Mtei",
    displayName: "meitei-mayek"
}, {
    id: "Mend",
    displayName: "mende"
}, {
    id: "Mero",
    displayName: "meroitiska"
}, {
    id: "Modi",
    displayName: "modiska"
}, {
    id: "Mong",
    displayName: "mongoliska"
}, {
    id: "Moon",
    displayName: "moon"
}, {
    id: "Mroo",
    displayName: "mru"
}, {
    id: "Mult",
    displayName: "multaniska"
}, {
    id: "Nkoo",
    displayName: "n-kå"
}, {
    id: "Nbat",
    displayName: "nabatateiska"
}, {
    id: "Nkgb",
    displayName: "naxi geba"
}, {
    id: "Nshu",
    displayName: "nüshu"
}, {
    id: "Ogam",
    displayName: "ogham"
}, {
    id: "Zzzz",
    displayName: "okänt skriftsystem"
}, {
    id: "Olck",
    displayName: "ol-chiki"
}, {
    id: "Orya",
    displayName: "oriya"
}, {
    id: "Orkh",
    displayName: "orkon"
}, {
    id: "Zxxx",
    displayName: "oskrivet språk"
}, {
    id: "Osma",
    displayName: "osmanja"
}, {
    id: "Hmng",
    displayName: "pahaw mong"
}, {
    id: "Palm",
    displayName: "palmyreniska"
}, {
    id: "Phag",
    displayName: "phags-pa"
}, {
    id: "Plrd",
    displayName: "pollardtecken"
}, {
    id: "Phlp",
    displayName: "psaltaren-pahlavi"
}, {
    id: "Brai",
    displayName: "punktskrift"
}, {
    id: "Rjng",
    displayName: "rejang"
}, {
    id: "Lepc",
    displayName: "rong"
}, {
    id: "Roro",
    displayName: "rongo-rongo"
}, {
    id: "Runr",
    displayName: "runor"
}, {
    id: "Samr",
    displayName: "samaritiska"
}, {
    id: "Sara",
    displayName: "sarati"
}, {
    id: "Saur",
    displayName: "saurashtra"
}, {
    id: "Shrd",
    displayName: "sharada"
}, {
    id: "Shaw",
    displayName: "shawiska"
}, {
    id: "Sidd",
    displayName: "siddhamska"
}, {
    id: "Sind",
    displayName: "sindhiska"
}, {
    id: "Sinh",
    displayName: "singalesiska"
}, {
    id: "Sora",
    displayName: "sora sompeng"
}, {
    id: "Xsux",
    displayName: "sumeo-akkadisk kilskrift"
}, {
    id: "Sund",
    displayName: "sundanesiska"
}, {
    id: "Sylo",
    displayName: "syloti nagri"
}, {
    id: "Zsym",
    displayName: "symboler"
}, {
    id: "Visp",
    displayName: "synligt tal"
}, {
    id: "Syrc",
    displayName: "syriska"
}, {
    id: "Thaa",
    displayName: "taana"
}, {
    id: "Tglg",
    displayName: "tagalog"
}, {
    id: "Tagb",
    displayName: "tagbanwa"
}, {
    id: "Tale",
    displayName: "tai le"
}, {
    id: "Talu",
    displayName: "tai lue"
}, {
    id: "Tavt",
    displayName: "tai viet"
}, {
    id: "Takr",
    displayName: "takritiska"
}, {
    id: "Taml",
    displayName: "tamilska"
}, {
    id: "Tang",
    displayName: "tangutiska"
}, {
    id: "Sgnw",
    displayName: "teckningsskrift"
}, {
    id: "Telu",
    displayName: "telugu"
}, {
    id: "Teng",
    displayName: "tengwar"
}, {
    id: "Thai",
    displayName: "thailändska"
}, {
    id: "Tibt",
    displayName: "tibetanska"
}, {
    id: "Phli",
    displayName: "tidig pahlavi"
}, {
    id: "Prti",
    displayName: "tidig parthianska"
}, {
    id: "Tfng",
    displayName: "tifinaghiska"
}, {
    id: "Tirh",
    displayName: "tirhuta"
}, {
    id: "Hant",
    displayName: "traditionella"
}, {
    id: "Ugar",
    displayName: "ugaritiska"
}, {
    id: "Vaii",
    displayName: "vaj"
}, {
    id: "Wara",
    displayName: "varang kshiti"
}, {
    id: "Syrj",
    displayName: "västsyriska"
}, {
    id: "Wole",
    displayName: "woleai"
}, {
    id: "Yiii",
    displayName: "yi"
}, {
    id: "Zinh",
    displayName: "ärvda"
}, {
    id: "Syrn",
    displayName: "östsyriska"
} ];

inter.currencies = [ {
    id: "BBD",
    displayName: "Barbados-dollar",
    symbol: "Bds$",
    one: "Barbados-dollar",
    other: "Barbados-dollar"
}, {
    id: "BMD",
    displayName: "Bermuda-dollar",
    symbol: "BM$",
    one: "Bermuda-dollar",
    other: "Bermuda-dollar"
}, {
    id: "XPF",
    displayName: "CFP-franc",
    symbol: "CFPF",
    one: "CFP-franc",
    other: "CFP-franc"
}, {
    id: "KYD",
    displayName: "Cayman-dollar",
    symbol: "KYD",
    one: "Cayman-dollar",
    other: "Cayman-dollar"
}, {
    id: "FKP",
    displayName: "Falklandspund",
    symbol: "FKP",
    one: "Falklandspund",
    other: "Falklandspund"
}, {
    id: "FJD",
    displayName: "Fijidollar",
    symbol: "FJD",
    one: "Fijidollar",
    other: "Fijidollar"
}, {
    id: "XFU",
    displayName: "French UIC-Franc",
    one: "internationella järnvägsunionens franc",
    other: "internationella järnvägsunionens franc"
}, {
    id: "AED",
    displayName: "Förenade Arabemiratens dirham",
    symbol: "AED",
    one: "Förenade Arabemiratens dirham",
    other: "Förenade Arabemiratens dirham"
}, {
    id: "GWP",
    displayName: "Guinea-Bissau-peso",
    one: "Guinea-Bissau-peso",
    other: "Guinea-Bissau-pesos"
}, {
    id: "HKD",
    displayName: "Hongkongdollar",
    symbol: "HKD",
    one: "Hongkongdollar",
    other: "Hongkongdollar"
}, {
    id: "XDR",
    displayName: "IMF särskild dragningsrätt",
    one: "IMF särskild dragningsrätt",
    other: "IMF särskilda dragningsrätter"
}, {
    id: "JMD",
    displayName: "Jamaica-dollar",
    symbol: "JM$",
    one: "Jamaica-dollar",
    other: "Jamaica-dollar"
}, {
    id: "ANG",
    displayName: "Nederländska Antillernas gulden",
    symbol: "ANG",
    one: "Nederländska Antillernas gulden",
    other: "Nederländska Antillernas gulden"
}, {
    id: "GWE",
    displayName: "Portugisiska Guinea-escudo",
    one: "Portugisiska Guinea-escudo",
    other: "Portugisiska Guinea-escudos"
}, {
    id: "XRE",
    displayName: "RINET-fond",
    one: "RINET-fond",
    other: "RINET-fond"
}, {
    id: "SHP",
    displayName: "S:t Helena-pund",
    symbol: "SHP",
    one: "S:t Helena-pund",
    other: "S:t Helena-pund"
}, {
    id: "SBD",
    displayName: "Salomondollar",
    symbol: "SBD",
    one: "Salomondollar",
    other: "Salomondollar"
}, {
    id: "TWD",
    displayName: "Taiwandollar",
    symbol: "TWD",
    one: "Taiwandollar",
    other: "Taiwandollar"
}, {
    id: "TTD",
    displayName: "Trinidad och Tobago-dollar",
    symbol: "TTD",
    one: "Trinidad och Tobago-dollar",
    other: "Trinidad och Tobago-dollar"
}, {
    id: "USD",
    displayName: "US-dollar",
    symbol: "US$",
    one: "US-dollar",
    other: "US-dollar"
}, {
    id: "USN",
    displayName: "US-dollar (nästa dag)",
    one: "US-dollar (nästa dag)",
    other: "US-dollar (nästa dag)"
}, {
    id: "USS",
    displayName: "US-dollar (samma dag)",
    one: "US-dollar (samma dag)",
    other: "US-dollar (samma dag)"
}, {
    id: "ZWD",
    displayName: "Zimbabwe-dollar",
    one: "Zimbabwe-dollar",
    other: "Zimbabwe-dollar"
}, {
    id: "ZWR",
    displayName: "Zimbabwe-dollar (2008)",
    one: "Zimbabwe-dollar (2008)",
    other: "Zimbabwe-dollar (2008)"
}, {
    id: "ZWL",
    displayName: "Zimbabwe-dollar (2009)",
    one: "Zimbabwe-dollar (2009)",
    other: "Zimbabwe-dollar (2009)"
}, {
    id: "AFA",
    displayName: "afghani (1927–2002)",
    one: "afghani (1927–2002)",
    other: "afghani (1927–2002)"
}, {
    id: "AFN",
    displayName: "afghansk afghani",
    symbol: "AFN",
    one: "afghansk afghani",
    other: "afghanska afghani"
}, {
    id: "XUA",
    displayName: "afrikansk kontoenhet",
    one: "afrikansk kontoenhet",
    other: "afrikanska kontoenheter"
}, {
    id: "ALL",
    displayName: "albansk lek",
    symbol: "ALL",
    one: "albansk lek",
    other: "albanska leke"
}, {
    id: "ALK",
    displayName: "albansk lek (1946–1965)",
    one: "albansk lek (1946–1965)",
    other: "albanska lek (1946–1965)"
}, {
    id: "DZD",
    displayName: "algerisk dinar",
    symbol: "DZD",
    one: "algerisk dinar",
    other: "algeriska dinarer"
}, {
    id: "ADP",
    displayName: "andorransk peseta",
    one: "andorransk peseta",
    other: "andorranska pesetas"
}, {
    id: "AOA",
    displayName: "angolansk kwanza",
    symbol: "AOA",
    one: "angolansk kwanza",
    other: "angolanska kwanza"
}, {
    id: "AOK",
    displayName: "angolansk kwanza (1977–1990)",
    one: "angolansk kwanza (1977–1990)",
    other: "angolanska kwanza (1977–1990)"
}, {
    id: "AOR",
    displayName: "angolansk kwanza reajustado (1995–1999)",
    one: "angolansk kwanza reajustado (1995–1999)",
    other: "angolanska kwanza reajustado (1995–1999)"
}, {
    id: "AON",
    displayName: "angolansk ny kwanza (1990–2000)",
    one: "angolansk kwanza (1990–2000)",
    other: "angolanska nya kwanza (1990–2000)"
}, {
    id: "ARA",
    displayName: "argentinsk austral",
    one: "argentinsk austral",
    other: "argentinska australer"
}, {
    id: "ARS",
    displayName: "argentinsk peso",
    symbol: "ARS",
    one: "argentinsk peso",
    other: "argentinska pesos"
}, {
    id: "ARP",
    displayName: "argentinsk peso (1983–1985)",
    one: "argentinsk peso (1983–1985)",
    other: "argentinska pesos (1983–1985)"
}, {
    id: "ARM",
    displayName: "argentisk peso (1881–1969)",
    one: "argentisk peso (1881–1969)",
    other: "argentiska pesos (1881–1969)"
}, {
    id: "ARL",
    displayName: "argentisk peso (1970–1983)",
    one: "argentisk peso (1970–1983)",
    other: "argentiska pesos (1970–1983)"
}, {
    id: "AMD",
    displayName: "armenisk dram",
    symbol: "AMD",
    one: "armenisk dram",
    other: "armeniska dram"
}, {
    id: "AWG",
    displayName: "arubansk florin",
    symbol: "AWG",
    one: "arubansk florin",
    other: "arubanska floriner"
}, {
    id: "AUD",
    displayName: "australisk dollar",
    symbol: "AUD",
    one: "australisk dollar",
    other: "australiska dollar"
}, {
    id: "AZN",
    displayName: "azerbajdzjansk manat",
    symbol: "AZN",
    one: "azerbajdzjansk manat",
    other: "azerbajdzjanska manat"
}, {
    id: "AZM",
    displayName: "azerbajdzjansk manat (1993–2006)",
    one: "azerbajdzjansk manat (1993–2006)",
    other: "azerbajdzjanska manat (1993–2006)"
}, {
    id: "BSD",
    displayName: "bahamansk dollar",
    symbol: "BS$",
    one: "bahamansk dollar",
    other: "bahamanska dollar"
}, {
    id: "BHD",
    displayName: "bahrainsk dinar",
    symbol: "BHD",
    one: "bahrainsk dinar",
    other: "bahrainska dinarer"
}, {
    id: "BDT",
    displayName: "bangladeshisk taka",
    symbol: "BDT",
    one: "bangladeshisk taka",
    other: "bangladeshiska taka"
}, {
    id: "BEF",
    displayName: "belgisk franc",
    one: "belgisk franc",
    other: "belgiska franc"
}, {
    id: "BEL",
    displayName: "belgisk franc (finansiell)",
    one: "belgisk franc (finansiell)",
    other: "belgiska franc (finansiella)"
}, {
    id: "BEC",
    displayName: "belgisk franc (konvertibel)",
    one: "belgisk franc (konvertibel)",
    other: "belgiska franc (konvertibla)"
}, {
    id: "BZD",
    displayName: "belizisk dollar",
    symbol: "BZ$",
    one: "belizisk dollar",
    other: "beliziska dollar"
}, {
    id: "BTN",
    displayName: "bhutanesisk ngultrum",
    symbol: "BTN",
    one: "bhutanesisk ngultrum",
    other: "bhutanesiska ngultrum"
}, {
    id: "BOB",
    displayName: "boliviansk boliviano",
    symbol: "BOB",
    one: "boliviansk boliviano",
    other: "bolivianska bolivianos"
}, {
    id: "BOL",
    displayName: "boliviansk boliviano (1864–1963)",
    one: "boliviansk boliviano (1864–1963)",
    other: "bolivianska bolivianos (1864–1963)"
}, {
    id: "BOV",
    displayName: "boliviansk mvdol",
    one: "boliviansk mvdol",
    other: "bolivianska mvdol"
}, {
    id: "BOP",
    displayName: "boliviansk peso",
    one: "boliviansk peso",
    other: "bolivianska pesos"
}, {
    id: "BAD",
    displayName: "bosnisk-hercegovinsk dinar (1992–1994)",
    symbol: "BAD",
    one: "bosnisk-hercegovinsk dinar (1992–1994)",
    other: "bosnisk-hercegovinska dinarer (1992–1994)"
}, {
    id: "BAN",
    displayName: "bosnisk-hercegovinsk dinar (1994–1998)",
    one: "bosnisk-hercegovinsk dinar (1994–1998)",
    other: "bosnisk-hercegovinska dinarer (1994–1998)"
}, {
    id: "BAM",
    displayName: "bosnisk-hercegovinsk mark (konvertibel)",
    symbol: "BAM",
    one: "bosnisk-hercegovinsk mark (konvertibel)",
    other: "bosnisk-hercegovinska mark (konvertibla)"
}, {
    id: "BWP",
    displayName: "botswansk pula",
    symbol: "BWP",
    one: "botswansk pula",
    other: "botswanska pula"
}, {
    id: "BRC",
    displayName: "brasiliansk cruzado",
    one: "brasiliansk cruzado",
    other: "brasilianska cruzado"
}, {
    id: "BRN",
    displayName: "brasiliansk cruzado novo",
    one: "brasiliansk cruzado novo",
    other: "brasilianska cruzado novo"
}, {
    id: "BRR",
    displayName: "brasiliansk cruzeiro",
    one: "brasiliansk cruzeiro",
    other: "brasilianska cruzeiros"
}, {
    id: "BRZ",
    displayName: "brasiliansk cruzeiro (1942–1967)",
    one: "brasiliansk cruzeiro (1942–1967)",
    other: "brasilianska cruzeiros (1942–1967)"
}, {
    id: "BRE",
    displayName: "brasiliansk cruzeiro (1990–1993)",
    one: "brasiliansk cruzeiro (1990–1993)",
    other: "brasilianska cruzeiro (1990–1993)"
}, {
    id: "BRB",
    displayName: "brasiliansk cruzeiro novo (1967–1986)",
    one: "brasiliansk cruzeiro (1967–1986)",
    other: "brasilianska cruzeiro novo (1967–1986)"
}, {
    id: "BRL",
    displayName: "brasiliansk real",
    symbol: "BR$",
    one: "brasiliansk real",
    other: "brasilianska real"
}, {
    id: "GBP",
    displayName: "brittiskt pund",
    symbol: "GBP",
    one: "brittiskt pund",
    other: "brittiska pund"
}, {
    id: "BND",
    displayName: "bruneisk dollar",
    symbol: "BND",
    one: "bruneisk dollar",
    other: "bruneiska dollar"
}, {
    id: "BGL",
    displayName: "bulgarisk hård lev (1962–1999)",
    one: "bulgarisk hård lev (1962–1999)",
    other: "bulgariska hård lev (1962–1999)"
}, {
    id: "BGN",
    displayName: "bulgarisk lev",
    symbol: "BGN",
    one: "bulgarisk lev",
    other: "bulgariska leva"
}, {
    id: "BGO",
    displayName: "bulgarisk lev (1881–1952)",
    one: "bulgarisk lev (1881–1952)",
    other: "bulgarisk lev (1881–1952)"
}, {
    id: "BGM",
    displayName: "bulgarisk lev (1952–1962)",
    one: "bulgarisk lev (1952–1962)",
    other: "bulgariska lev (1952–1962)"
}, {
    id: "BUK",
    displayName: "burmesisk kyat",
    one: "burmesisk kyat",
    other: "burmesiska kyat"
}, {
    id: "BIF",
    displayName: "burundisk franc",
    symbol: "BIF",
    one: "burundisk franc",
    other: "burundiska franc"
}, {
    id: "XAF",
    displayName: "centralafrikansk franc",
    symbol: "FCFA",
    one: "centralafrikansk franc",
    other: "centralafrikanska franc"
}, {
    id: "CLE",
    displayName: "chilensk escudo (1960–1975)",
    one: "chilensk escudo (1960–1975)",
    other: "chilenska escudos (1960–1975)"
}, {
    id: "CLP",
    displayName: "chilensk peso",
    symbol: "CLP",
    one: "chilensk peso",
    other: "chilenska pesos"
}, {
    id: "CLF",
    displayName: "chilensk unidad de fomento",
    one: "chilensk unidad de fomento",
    other: "chilenska unidad de fomento"
}, {
    id: "COP",
    displayName: "colombiansk peso",
    symbol: "COP",
    one: "colombiansk peso",
    other: "colombianska pesos"
}, {
    id: "COU",
    displayName: "colombiansk unidad de valor real",
    one: "colombiansk unidad de valor real",
    other: "colombianska unidad de valor real"
}, {
    id: "CRC",
    displayName: "costarikansk colón",
    symbol: "CRC",
    one: "costarikansk colón",
    other: "costarikanska colón"
}, {
    id: "CYP",
    displayName: "cypriotiskt pund",
    symbol: "CYP",
    one: "cypriotiskt pund",
    other: "cypriotiska pund"
}, {
    id: "DKK",
    displayName: "dansk krona",
    symbol: "Dkr",
    one: "dansk krona",
    other: "danska kronor"
}, {
    id: "DJF",
    displayName: "djiboutisk franc",
    symbol: "DJF",
    one: "djiboutisk franc",
    other: "djiboutiska franc"
}, {
    id: "DOP",
    displayName: "dominikansk peso",
    symbol: "RD$",
    one: "dominikansk peso",
    other: "dominikanska pesos"
}, {
    id: "ECS",
    displayName: "ecuadoriansk sucre",
    one: "ecuadoriansk sucre",
    other: "ecuadorianska sucre"
}, {
    id: "ECV",
    displayName: "ecuadoriansk unidad de valor constante",
    one: "ecuadoriansk unidad de valor constante",
    other: "ecuadorianska unidad de valor constante"
}, {
    id: "EGP",
    displayName: "egyptiskt pund",
    symbol: "EG£",
    one: "egyptiskt pund",
    other: "egyptiska pund"
}, {
    id: "GQE",
    displayName: "ekvatorialguineansk ekwele",
    one: "ekvatorialguineansk ekwele",
    other: "ekvatorialguineanska ekweler"
}, {
    id: "ERN",
    displayName: "eritreansk nakfa",
    symbol: "ERN",
    one: "eritreansk nakfa",
    other: "eritreanska nakfa"
}, {
    id: "EEK",
    displayName: "estnisk krona",
    symbol: "Ekr",
    one: "estnisk krona",
    other: "estniska kronor"
}, {
    id: "ETB",
    displayName: "etiopisk birr",
    symbol: "ETB",
    one: "etiopisk birr",
    other: "etiopiska birr"
}, {
    id: "EUR",
    displayName: "euro",
    symbol: "€",
    one: "euro",
    other: "euro"
}, {
    id: "CHE",
    displayName: "euro (konvertibelt konto, WIR Bank, Schweiz)",
    one: "euro (WIR Bank)",
    other: "euro (konvertibelt konto, WIR Bank, Schweiz)"
}, {
    id: "XBA",
    displayName: "europeisk kompositenhet",
    one: "europeisk gammal kompositenhet",
    other: "europeiska kompositenheter"
}, {
    id: "XBC",
    displayName: "europeisk kontoenhet (XBC)",
    one: "europeisk gammal kontoenhet-9",
    other: "europeiska kontoenheter (XBC)"
}, {
    id: "XBD",
    displayName: "europeisk kontoenhet (XBD)",
    one: "europeisk kontoenhet (XBD)",
    other: "europeiska kontoenheter (XBD)"
}, {
    id: "XBB",
    displayName: "europeisk monetär enhet",
    one: "europeisk gammal monetär enhet",
    other: "europeiska monetära enheter"
}, {
    id: "XEU",
    displayName: "europeisk valutaenhet",
    one: "europeisk valutaenhet",
    other: "europeiska valutaenheter"
}, {
    id: "PHP",
    displayName: "filippinsk peso",
    symbol: "PHP",
    one: "filippinsk peso",
    other: "filippinska pesos"
}, {
    id: "FIM",
    displayName: "finsk mark",
    one: "finsk mark",
    other: "finska mark"
}, {
    id: "CHW",
    displayName: "franc (konvertibelt konto, WIR Bank, Schweiz)",
    one: "franc (WIR Bank)",
    other: "franc (konvertibelt konto, WIR Bank, Schweiz)"
}, {
    id: "FRF",
    displayName: "fransk franc",
    one: "fransk franc",
    other: "franska franc"
}, {
    id: "XFO",
    displayName: "fransk guldfranc",
    one: "fransk guldfranc",
    other: "franska guldfranc"
}, {
    id: "GMD",
    displayName: "gambisk dalasi",
    symbol: "GMD",
    one: "gambisk dalasi",
    other: "gambiska dalasi"
}, {
    id: "MZM",
    displayName: "gammal moçambikisk metical",
    one: "moçambikisk metical (1980–2006)",
    other: "gammla moçambikiska metical"
}, {
    id: "GEK",
    displayName: "georgisk kupon larit",
    one: "georgisk kupon larit",
    other: "georgiska kupon larit"
}, {
    id: "GEL",
    displayName: "georgisk lari",
    symbol: "GEL",
    one: "georgisk lari",
    other: "georgiska lari"
}, {
    id: "GHS",
    displayName: "ghanansk cedi",
    symbol: "GHS",
    one: "ghanansk cedi",
    other: "ghananska cedi"
}, {
    id: "GHC",
    displayName: "ghanansk cedi (1979–2007)",
    one: "ghanansk cedi (1979–2007)",
    other: "ghananska cedi (1979–2007)"
}, {
    id: "GIP",
    displayName: "gibraltiskt pund",
    symbol: "GIP",
    one: "gibraltiskt pund",
    other: "gibraltiska pund"
}, {
    id: "GRD",
    displayName: "grekisk drachma",
    one: "grekisk drachma",
    other: "grekiska drachmer"
}, {
    id: "GTQ",
    displayName: "guatemalansk quetzal",
    symbol: "GTQ",
    one: "guatemalansk quetzal",
    other: "guatemalanska quetzal"
}, {
    id: "GNF",
    displayName: "guineansk franc",
    symbol: "GNF",
    one: "guineansk franc",
    other: "guineanska franc"
}, {
    id: "GNS",
    displayName: "guineansk syli",
    one: "guineansk syli",
    other: "guineanska syli"
}, {
    id: "XAU",
    displayName: "guld",
    one: "uns guld",
    other: "gulduns"
}, {
    id: "GYD",
    displayName: "guyanansk dollar",
    symbol: "GYD",
    one: "guyanansk dollar",
    other: "guyanska dollar"
}, {
    id: "HTG",
    displayName: "haitisk gourde",
    symbol: "HTG",
    one: "haitisk gourde",
    other: "haitiska gourder"
}, {
    id: "HNL",
    displayName: "honduransk lempira",
    symbol: "HNL",
    one: "honduransk lempira",
    other: "honduranska lempira"
}, {
    id: "INR",
    displayName: "indisk rupie",
    symbol: "INR",
    one: "indisk rupie",
    other: "indiska rupier"
}, {
    id: "IDR",
    displayName: "indonesisk rupiah",
    symbol: "IDR",
    one: "indonesisk rupiah",
    other: "indonesiska rupiah"
}, {
    id: "IQD",
    displayName: "irakisk dinar",
    symbol: "IQD",
    one: "irakisk dinar",
    other: "irakiska dinarer"
}, {
    id: "IRR",
    displayName: "iransk rial",
    symbol: "IRR",
    one: "iransk rial",
    other: "iranska rial"
}, {
    id: "IEP",
    displayName: "irländskt pund",
    one: "irländskt pund",
    other: "irländska pund"
}, {
    id: "ISJ",
    displayName: "isländsk gammal krona",
    symbol: "ISJ",
    one: "isländsk gammal krona",
    other: "isländska kronor (1874–1981)"
}, {
    id: "ISK",
    displayName: "isländsk krona",
    symbol: "Ikr",
    one: "isländsk krona",
    other: "isländska kronor"
}, {
    id: "ILS",
    displayName: "israelisk ny shekel",
    symbol: "₪",
    one: "israelisk ny shekel",
    other: "israeliska nya shekel"
}, {
    id: "ILR",
    displayName: "israelisk shekel (1980–1985)",
    one: "israelisk shekel (1980–1985)",
    other: "israeliska shekel (1980–1985)"
}, {
    id: "ILP",
    displayName: "israeliskt pund",
    one: "israeliskt pund",
    other: "israeliska pund"
}, {
    id: "ITL",
    displayName: "italiensk lire",
    symbol: "ITL",
    one: "italiensk lire",
    other: "italienska lire"
}, {
    id: "JPY",
    displayName: "japansk yen",
    symbol: "JPY",
    one: "japansk yen",
    other: "japanska yen"
}, {
    id: "YDD",
    displayName: "jemenitisk dinar",
    one: "jemenitisk dinar",
    other: "jemenitiska dinarer"
}, {
    id: "YER",
    displayName: "jemenitisk rial",
    symbol: "YER",
    one: "jemenitisk rial",
    other: "jemenitiska rial"
}, {
    id: "JOD",
    displayName: "jordansk dinar",
    symbol: "JOD",
    one: "jordansk dinar",
    other: "jordanska dinarer"
}, {
    id: "YUD",
    displayName: "jugoslavisk dinar (1966–1990)",
    symbol: "YUD",
    one: "jugoslavisk dinar (1966–1990)",
    other: "jugoslaviska dinarer (1966–1990)"
}, {
    id: "YUN",
    displayName: "jugoslavisk dinar (1990–1992)",
    symbol: "YUN",
    one: "jugoslavisk dinar (1990–1992)",
    other: "jugoslaviska dinarer (1990–1992)"
}, {
    id: "YUR",
    displayName: "jugoslavisk dinar (1992–1993)",
    one: "jugoslavisk dinar (1992–1993)",
    other: "jugoslaviska dinarer (1992–1993)"
}, {
    id: "YUM",
    displayName: "jugoslavisk dinar (1994–2002)",
    symbol: "YUM",
    one: "jugoslavisk dinar (1994–2002)",
    other: "jugoslaviska dinarer (1994–2002)"
}, {
    id: "KHR",
    displayName: "kambodjansk riel",
    symbol: "KHR",
    one: "kambodjansk riel",
    other: "kambodjanska riel"
}, {
    id: "CAD",
    displayName: "kanadensisk dollar",
    symbol: "CA$",
    one: "kanadensisk dollar",
    other: "kanadensiska dollar"
}, {
    id: "CVE",
    displayName: "kapverdisk escudo",
    symbol: "CVE",
    one: "kapverdisk escudo",
    other: "kapverdiska escudos"
}, {
    id: "KZT",
    displayName: "kazakisk tenge",
    symbol: "KZT",
    one: "kazakisk tenge",
    other: "kazakiska tenge"
}, {
    id: "KES",
    displayName: "kenyansk shilling",
    symbol: "KES",
    one: "kenyansk shilling",
    other: "kenyanska shilling"
}, {
    id: "CNX",
    displayName: "kinesisk dollar",
    symbol: "CNX",
    one: "kinesisk dollar",
    other: "kinesiska dollar"
}, {
    id: "CNY",
    displayName: "kinesisk yuan",
    symbol: "CNY",
    one: "kinesisk yuan",
    other: "kinesiska yuan"
}, {
    id: "KGS",
    displayName: "kirgizisk som",
    symbol: "KGS",
    one: "kirgizisk som",
    other: "kirgiziska somer"
}, {
    id: "KMF",
    displayName: "komorisk franc",
    symbol: "KMF",
    one: "komorisk franc",
    other: "komoriska franc"
}, {
    id: "CDF",
    displayName: "kongolesisk franc",
    symbol: "CDF",
    one: "kongolesisk franc",
    other: "kongolesiska franc"
}, {
    id: "HRD",
    displayName: "kroatisk dinar",
    one: "kroatisk dinar",
    other: "kroatiska dinarer"
}, {
    id: "HRK",
    displayName: "kroatisk kuna",
    symbol: "HRK",
    one: "kroatisk kuna",
    other: "kroatiska kunor"
}, {
    id: "CUP",
    displayName: "kubansk peso",
    symbol: "CUP",
    one: "kubansk peso",
    other: "kubanska pesos"
}, {
    id: "CUC",
    displayName: "kubansk peso (konvertibel)",
    symbol: "CUC",
    one: "kubansk peso (konvertibel)",
    other: "kubanska pesos (konvertibla)"
}, {
    id: "KWD",
    displayName: "kuwaitisk dinar",
    symbol: "KWD",
    one: "kuwaitisk dinar",
    other: "kuwaitiska dinarer"
}, {
    id: "LAK",
    displayName: "laotisk kip",
    symbol: "LAK",
    one: "laotisk kip",
    other: "laotiska kip"
}, {
    id: "XSU",
    displayName: "latinamerikansk sucre",
    one: "latinamerikansk sucre",
    other: "latinamerikanska sucre"
}, {
    id: "LSL",
    displayName: "lesothisk loti",
    one: "lesothisk loti",
    other: "lesothiska lotier"
}, {
    id: "LVL",
    displayName: "lettisk lats",
    symbol: "LVL",
    one: "lettisk lats",
    other: "lettiska lati"
}, {
    id: "LVR",
    displayName: "lettisk rubel",
    one: "lettisk rubel",
    other: "lettiska rubel"
}, {
    id: "LBP",
    displayName: "libanesiskt pund",
    symbol: "LBP",
    one: "libanesiskt pund",
    other: "libanesiska pund"
}, {
    id: "LRD",
    displayName: "liberiansk dollar",
    symbol: "LRD",
    one: "liberiansk dollar",
    other: "liberianska dollar"
}, {
    id: "LYD",
    displayName: "libysk dinar",
    symbol: "LYD",
    one: "libysk dinar",
    other: "libyska dinarer"
}, {
    id: "LTL",
    displayName: "litauisk litas",
    symbol: "LTL",
    one: "litauisk litas",
    other: "litauiska litai"
}, {
    id: "LTT",
    displayName: "litauisk talonas",
    one: "litauisk talonas",
    other: "litauiska talonas"
}, {
    id: "LUF",
    displayName: "luxemburgsk franc",
    one: "luxemburgsk franc",
    other: "luxemburgska franc"
}, {
    id: "LUL",
    displayName: "luxemburgsk franc (finansiell)",
    one: "luxemburgsk franc (finansiell)",
    other: "luxemburgska franc (finansiella)"
}, {
    id: "LUC",
    displayName: "luxemburgsk franc (konvertibel)",
    one: "luxemburgsk franc (konvertibel)",
    other: "luxemburgska franc (konvertibla)"
}, {
    id: "MOP",
    displayName: "macaosk pataca",
    symbol: "MOP",
    one: "macaosk pataca",
    other: "macaoska pataca"
}, {
    id: "MGA",
    displayName: "madagaskisk ariary",
    symbol: "MGA",
    one: "madagaskisk ariary",
    other: "madagaskiska ariary"
}, {
    id: "MGF",
    displayName: "madagaskisk franc",
    one: "madagaskisk franc",
    other: "madagaskiska franc"
}, {
    id: "MKD",
    displayName: "makedonisk denar",
    symbol: "MKD",
    one: "makedonisk denar",
    other: "makedoniska denarer"
}, {
    id: "MKN",
    displayName: "makedonisk denar (1992–1993)",
    symbol: "MKN",
    one: "makedonisk denar (1992–1993)",
    other: "makedoniska denarer (1992–1993)"
}, {
    id: "MWK",
    displayName: "malawisk kwacha",
    symbol: "MWK",
    one: "malawisk kwacha",
    other: "malawiska kwacha"
}, {
    id: "MYR",
    displayName: "malaysisk ringgit",
    symbol: "MYR",
    one: "malaysisk ringgit",
    other: "malaysiska ringgiter"
}, {
    id: "MVR",
    displayName: "maldivisk rufiyaa",
    symbol: "MVR",
    one: "maldivisk rufiyaa",
    other: "maldiviska rufiyer"
}, {
    id: "MVP",
    displayName: "maldivisk rupie",
    symbol: "MVP",
    one: "maldivisk rupie",
    other: "maldiviska rupier"
}, {
    id: "MLF",
    displayName: "malisk franc",
    one: "malisk franc",
    other: "maliska franc"
}, {
    id: "MTL",
    displayName: "maltesisk lire",
    symbol: "MTL",
    one: "maltesisk lire",
    other: "maltesiska lire"
}, {
    id: "MTP",
    displayName: "maltesiskt pund",
    one: "maltesiskt pund",
    other: "maltesiska pund"
}, {
    id: "MAD",
    displayName: "marockansk dirham",
    symbol: "MAD",
    one: "marockansk dirham",
    other: "marockanska dirhamer"
}, {
    id: "MAF",
    displayName: "marockansk franc",
    one: "marockansk franc",
    other: "marockanska franc"
}, {
    id: "MRO",
    displayName: "mauretansk ouguiya",
    symbol: "MRO",
    one: "mauretansk ouguiya",
    other: "mauretanska ouguiya"
}, {
    id: "MUR",
    displayName: "mauritisk rupie",
    symbol: "MUR",
    one: "mauritisk rupie",
    other: "mauritiska rupier"
}, {
    id: "MXN",
    displayName: "mexikansk peso",
    symbol: "MX$",
    one: "mexikansk peso",
    other: "mexikanska pesos"
}, {
    id: "MXP",
    displayName: "mexikansk silverpeso (1861–1992)",
    one: "mexikansk silverpeso (1861–1992)",
    other: "mexikanska silverpesos (1861–1992)"
}, {
    id: "MXV",
    displayName: "mexikansk unidad de inversion",
    one: "mexikansk unidad de inversion",
    other: "mexikanska unidad de inversion"
}, {
    id: "MDC",
    displayName: "moldavisk cupon (1992–1993)",
    one: "moldavisk cupon (1992–1993)",
    other: "moldaviska cupon (1992–1993)"
}, {
    id: "MDL",
    displayName: "moldavisk leu",
    symbol: "MDL",
    one: "moldavisk leu",
    other: "moldaviska lei"
}, {
    id: "MCF",
    displayName: "monegaskisk franc (–2001)",
    one: "monegaskisk franc (–2001)",
    other: "monegaskiska franc (–2001)"
}, {
    id: "MNT",
    displayName: "mongolisk tögrög",
    symbol: "MNT",
    one: "mongolisk tögrög",
    other: "mongoliska tögrög"
}, {
    id: "MZE",
    displayName: "moçambikisk escudo",
    one: "moçambikisk escudo (1914–1980)",
    other: "moçambikiska escudos"
}, {
    id: "MZN",
    displayName: "moçambikisk metical",
    symbol: "MZN",
    one: "moçambikisk metical",
    other: "moçambikiska metical"
}, {
    id: "MMK",
    displayName: "myanmarisk kyat",
    symbol: "MMK",
    one: "myanmarisk kyat",
    other: "myanmariska kyat"
}, {
    id: "NAD",
    displayName: "namibisk dollar",
    symbol: "NAD",
    one: "namibisk dollar",
    other: "namibiska dollar"
}, {
    id: "NLG",
    displayName: "nederländsk gulden",
    one: "nederländsk gulden",
    other: "nederländska gulden"
}, {
    id: "NPR",
    displayName: "nepalesisk rupie",
    symbol: "NPR",
    one: "nepalesisk rupie",
    other: "nepalesiska rupier"
}, {
    id: "NIO",
    displayName: "nicaraguansk córdoba",
    symbol: "NIO",
    one: "nicaraguansk córdoba",
    other: "nicaraguanska córdobas"
}, {
    id: "NIC",
    displayName: "nicaraguansk córdoba (1998–1991)",
    symbol: "NIC",
    one: "nicaraguansk córdoba (1998–1991)",
    other: "nicaraguanska córdobas (1988–1991)"
}, {
    id: "NGN",
    displayName: "nigeriansk naira",
    symbol: "NGN",
    one: "nigeriansk naira",
    other: "nigerianska naira"
}, {
    id: "KPW",
    displayName: "nordkoreansk won",
    symbol: "KPW",
    one: "nordkoreansk won",
    other: "nordkoreanska won"
}, {
    id: "NOK",
    displayName: "norsk krona",
    symbol: "Nkr",
    one: "norsk krona",
    other: "norska kronor"
}, {
    id: "NZD",
    displayName: "nyzeeländsk dollar",
    symbol: "NZD",
    one: "nyzeeländsk dollar",
    other: "nyzeeländska dollar"
}, {
    id: "XXX",
    displayName: "okänd valuta",
    one: "(okänd valutaenhet)",
    other: "(okända valutaenheter)"
}, {
    id: "OMR",
    displayName: "omansk rial",
    symbol: "OMR",
    one: "omansk rial",
    other: "omanska rial"
}, {
    id: "PKR",
    displayName: "pakistansk rupie",
    symbol: "PKR",
    one: "pakistansk rupie",
    other: "pakistanska rupier"
}, {
    id: "XPD",
    displayName: "palladium",
    one: "uns palladium",
    other: "palladium"
}, {
    id: "PAB",
    displayName: "panamansk balboa",
    symbol: "PAB",
    one: "panamansk balboa",
    other: "panamanska balboa"
}, {
    id: "PGK",
    displayName: "papuansk kina",
    symbol: "PGK",
    one: "papuansk kina",
    other: "papuanska kinor"
}, {
    id: "PYG",
    displayName: "paraguayansk guarani",
    symbol: "PYG",
    one: "paraguayansk guarani",
    other: "paraguayska guarani"
}, {
    id: "PEI",
    displayName: "peruansk inti",
    one: "peruansk inti",
    other: "peruanska intier"
}, {
    id: "PEN",
    displayName: "peruansk nuevo sol",
    symbol: "PEN",
    one: "peruansk nuevo sol",
    other: "peruanska nuevo sol"
}, {
    id: "PES",
    displayName: "peruansk sol (1863–1965)",
    one: "peruansk sol (1863–1965)",
    other: "peruanska sol (1863–1965)"
}, {
    id: "XPT",
    displayName: "platina",
    one: "uns platina",
    other: "platina"
}, {
    id: "PLN",
    displayName: "polsk zloty",
    symbol: "PLN",
    one: "polsk zloty",
    other: "polska zloty"
}, {
    id: "PLZ",
    displayName: "polsk zloty (1950–1995)",
    one: "polsk zloty (1950–1995)",
    other: "polska zloty (1950–1995)"
}, {
    id: "PTE",
    displayName: "portugisisk escudo",
    one: "portugisisk escudo",
    other: "portugisiska escudos"
}, {
    id: "QAR",
    displayName: "qatarisk rial",
    symbol: "QAR",
    one: "qatarisk rial",
    other: "qatariska rial"
}, {
    id: "RHD",
    displayName: "rhodesisk dollar",
    one: "rhodesisk dollar",
    other: "rhodesiska dollar"
}, {
    id: "RON",
    displayName: "rumänsk leu",
    symbol: "RON",
    one: "rumänsk leu",
    other: "rumänska lei"
}, {
    id: "ROL",
    displayName: "rumänsk leu (1952–2005)",
    one: "rumänsk leu (1952–2005)",
    other: "rumänska leu (1952–2005)"
}, {
    id: "RWF",
    displayName: "rwandisk franc",
    symbol: "RWF",
    one: "rwandisk franc",
    other: "rwandiska franc"
}, {
    id: "RUB",
    displayName: "rysk rubel",
    symbol: "RUB",
    one: "rysk rubel",
    other: "ryska rubel"
}, {
    id: "RUR",
    displayName: "rysk rubel (1991–1998)",
    symbol: "р.",
    one: "rysk rubel (1991–1998)",
    other: "ryska rubel (1991–1998)"
}, {
    id: "SVC",
    displayName: "salvadoransk colón",
    one: "salvadoransk colón",
    other: "salvadoranska colón"
}, {
    id: "STD",
    displayName: "saotomeansk dobra",
    symbol: "STD",
    one: "saotomeansk dobra",
    other: "saotomeanska dobra"
}, {
    id: "SAR",
    displayName: "saudisk riyal",
    symbol: "SAR",
    one: "saudisk riyal",
    other: "saudiska riyal"
}, {
    id: "CHF",
    displayName: "schweizisk franc",
    symbol: "CHF",
    one: "schweizisk franc",
    other: "schweiziska franc"
}, {
    id: "RSD",
    displayName: "serbisk dinar",
    symbol: "RSD",
    one: "serbisk dinar",
    other: "serbiska dinarer"
}, {
    id: "CSD",
    displayName: "serbisk dinar (2002–2006)",
    one: "serbisk dinar (2002–2006)",
    other: "serbiska dinarer (2002–2006)"
}, {
    id: "SCR",
    displayName: "seychellisk rupie",
    symbol: "SCR",
    one: "seychellisk rupie",
    other: "seychelliska rupier"
}, {
    id: "SLL",
    displayName: "sierraleonsk leone",
    symbol: "SLL",
    one: "sierraleonsk leone",
    other: "sierraleonska leoner"
}, {
    id: "XAG",
    displayName: "silver",
    one: "uns silver",
    other: "silveruns"
}, {
    id: "SGD",
    displayName: "singaporiansk dollar",
    symbol: "SGD",
    one: "singaporiansk dollar",
    other: "singaporianska dollar"
}, {
    id: "SKK",
    displayName: "slovakisk koruna",
    one: "slovakisk krona",
    other: "slovakiska korunor"
}, {
    id: "SIT",
    displayName: "slovensk tolar",
    symbol: "SIT",
    one: "slovensk tolar",
    other: "slovenska tolar"
}, {
    id: "SOS",
    displayName: "somalisk shilling",
    symbol: "SOS",
    one: "somalisk shilling",
    other: "somaliska shilling"
}, {
    id: "SUR",
    displayName: "sovjetisk rubel",
    one: "sovjetisk rubel",
    other: "sovjetiska rubler"
}, {
    id: "ESP",
    displayName: "spansk peseta",
    symbol: "ESP",
    one: "spansk peseta",
    other: "spanska pesetas"
}, {
    id: "ESA",
    displayName: "spansk peseta (konto)",
    one: "spansk peseta (konto)",
    other: "spanska pesetas (konto)"
}, {
    id: "ESB",
    displayName: "spansk peseta (konvertibelt konto)",
    one: "spansk peseta (konvertibelt konto)",
    other: "spanska pesetas (konvertibelt konto)"
}, {
    id: "LKR",
    displayName: "srilankesisk rupie",
    symbol: "LKR",
    one: "srilankesisk rupie",
    other: "srilankesiska rupier"
}, {
    id: "SDG",
    displayName: "sudanesiskt pund",
    symbol: "SDG",
    one: "sudanesiskt pund",
    other: "sudanesiska pund"
}, {
    id: "SDD",
    displayName: "sudansk dinar (1992–2007)",
    one: "sudansk dinar (1992–2007)",
    other: "sudanska dinarer (1992–2007)"
}, {
    id: "SDP",
    displayName: "sudanskt pund (1916–1992)",
    one: "sudanskt pund (1916–1992)",
    other: "sudanska pund (1916–1992)"
}, {
    id: "SRD",
    displayName: "surinamesisk dollar",
    symbol: "SRD",
    one: "surinamesisk dollar",
    other: "surinamesiska dollar"
}, {
    id: "SRG",
    displayName: "surinamesisk gulden",
    one: "Surinam-gulden",
    other: "Surinam-gulden"
}, {
    id: "SEK",
    displayName: "svensk krona",
    symbol: "kr",
    one: "svensk krona",
    other: "svenska kronor"
}, {
    id: "SZL",
    displayName: "swaziländsk lilangeni",
    symbol: "SZL",
    one: "swaziländsk lilangeni",
    other: "swaziländska lilangeni"
}, {
    id: "ZAR",
    displayName: "sydafrikansk rand",
    symbol: "ZAR",
    one: "sydafrikansk rand",
    other: "sydafrikanska rand"
}, {
    id: "ZAL",
    displayName: "sydafrikansk rand (finansiell)",
    one: "sydafrikansk rand (finansiell)",
    other: "sydafrikanska rand (finansiella)"
}, {
    id: "KRH",
    displayName: "sydkoreansk hwan (1953–1962)",
    one: "sydkoreansk hwan (1953–1962)",
    other: "sydkoreanska hwan (1953–1962)"
}, {
    id: "KRW",
    displayName: "sydkoreansk won",
    symbol: "KRW",
    one: "sydkoreansk won",
    other: "sydkoreanska won"
}, {
    id: "KRO",
    displayName: "sydkoreansk won (1945–1953)",
    one: "sydkoreansk won (1945–1953)",
    other: "sydkoreanska won (1945–1953)"
}, {
    id: "SSP",
    displayName: "sydsudanesiskt pund",
    symbol: "SSP",
    one: "sydsudanesiskt pund",
    other: "sydsudanesiska pund"
}, {
    id: "SYP",
    displayName: "syriskt pund",
    symbol: "SYP",
    one: "syriskt pund",
    other: "syriska pund"
}, {
    id: "TJR",
    displayName: "tadzjikisk rubel",
    one: "tadzjikisk rubel",
    other: "tadzjikiska rubler"
}, {
    id: "TJS",
    displayName: "tadzjikisk somoni",
    symbol: "TJS",
    one: "tadzjikisk somoni",
    other: "tadzjikiska somoni"
}, {
    id: "TZS",
    displayName: "tanzanisk shilling",
    symbol: "TZS",
    one: "tanzanisk shilling",
    other: "tanzaniska shilling"
}, {
    id: "XTS",
    displayName: "test-valutakod",
    symbol: "XTS",
    one: "(valutakod för teständamål)",
    other: "test-valutakod"
}, {
    id: "THB",
    displayName: "thailändsk baht",
    symbol: "THB",
    one: "thailändsk baht",
    other: "thailändska baht"
}, {
    id: "TPE",
    displayName: "timoriansk escudo",
    one: "östtimoresisk escudo",
    other: "timorianska escudos"
}, {
    id: "CZK",
    displayName: "tjeckisk koruna",
    symbol: "CZK",
    one: "tjeckisk koruna",
    other: "tjeckiska koruna"
}, {
    id: "CSK",
    displayName: "tjeckoslovakisk krona (–1993)",
    one: "tjeckoslovakisk hård koruna",
    other: "tjeckiska hårda koruna"
}, {
    id: "TOP",
    displayName: "tongansk paʻanga",
    symbol: "TOP",
    one: "tongansk paʻanga",
    other: "tonganska paʻanga"
}, {
    id: "TND",
    displayName: "tunisisk dinar",
    symbol: "TND",
    one: "tunisisk dinar",
    other: "tunisiska dinarer"
}, {
    id: "TRY",
    displayName: "turkisk lira",
    symbol: "TRY",
    one: "turkisk lira",
    other: "turkiska lira"
}, {
    id: "TRL",
    displayName: "turkisk lire (1922–2005)",
    symbol: "TRL",
    one: "turkisk lire (1922–2005)",
    other: "turkiska lire (1922–2005)"
}, {
    id: "TMT",
    displayName: "turkmenistansk manat",
    symbol: "TMT",
    one: "turkmenistansk manat",
    other: "turkmenistanska manat"
}, {
    id: "TMM",
    displayName: "turkmenistansk manat (1993–2009)",
    one: "turkmenistansk manat (1993–2009)",
    other: "turkmenistanska manat (1993–2009)"
}, {
    id: "DEM",
    displayName: "tysk mark",
    one: "tysk mark",
    other: "tyska mark"
}, {
    id: "UGX",
    displayName: "ugandisk shilling",
    symbol: "UGX",
    one: "ugandisk shilling",
    other: "ugandiska shilling"
}, {
    id: "UGS",
    displayName: "ugandisk shilling (1966–1987)",
    one: "ugandisk shilling (1966–1987)",
    other: "ugandiska shilling (1966–1987)"
}, {
    id: "UAH",
    displayName: "ukrainsk hryvnia",
    symbol: "UAH",
    one: "ukrainsk hryvnia",
    other: "ukrainska hryvnia"
}, {
    id: "UAK",
    displayName: "ukrainsk karbovanetz",
    one: "ukrainsk karbovanetz (1992–1996)",
    other: "ukrainska karbovanetz (1992–1996)"
}, {
    id: "HUF",
    displayName: "ungersk forint",
    symbol: "HUF",
    one: "ungersk forint",
    other: "ungerska forinter"
}, {
    id: "UYU",
    displayName: "uruguayansk peso",
    symbol: "UYU",
    one: "uruguayansk peso",
    other: "uruguayanska pesos"
}, {
    id: "UYP",
    displayName: "uruguayansk peso (1975–1993)",
    one: "uruguayansk peso (1975–1993)",
    other: "uruguayanska pesos (1975–1993)"
}, {
    id: "UYI",
    displayName: "uruguayansk peso en unidades indexadas",
    one: "uruguayansk peso en unidades indexadas",
    other: "uruguayanska pesos en unidades indexadas"
}, {
    id: "UZS",
    displayName: "uzbekisk sum",
    symbol: "UZS",
    one: "uzbekisk sum",
    other: "uzbekiska sum"
}, {
    id: "VUV",
    displayName: "vanuatisk vatu",
    symbol: "VUV",
    one: "vanuatisk vatu",
    other: "vanuatiska vatu"
}, {
    id: "VEB",
    displayName: "venezuelansk bolivar (1871–2008)",
    one: "venezuelansk bolivar (1871–2008)",
    other: "venezuelanska bolivar (1871–2008)"
}, {
    id: "VEF",
    displayName: "venezuelansk bolívar",
    symbol: "VEF",
    one: "venezuelansk bolívar",
    other: "venezuelanska bolívar"
}, {
    id: "VND",
    displayName: "vietnamesisk dong",
    symbol: "VND",
    one: "vietnamesisk dong",
    other: "vietnamesiska dong"
}, {
    id: "VNN",
    displayName: "vietnamesisk dong (1978–1985)",
    one: "vietnamesisk dong (1978–1985)",
    other: "vietnamesiska dong (1978–1985)"
}, {
    id: "BYB",
    displayName: "vitrysk ny rubel (1994–1999)",
    one: "vitrysk rubel (1994–1999)",
    other: "vitryska nya rubel (1994–1999)"
}, {
    id: "BYR",
    displayName: "vitrysk rubel",
    symbol: "BYR",
    one: "vitrysk rubel",
    other: "vitryska rubel"
}, {
    id: "XOF",
    displayName: "västafrikansk franc",
    symbol: "CFA",
    one: "västafrikansk franc",
    other: "västafrikanska franc"
}, {
    id: "WST",
    displayName: "västsamoansk tala",
    symbol: "WST",
    one: "västsamoansk tala",
    other: "västsamoanska tala"
}, {
    id: "ZRN",
    displayName: "zairisk ny zaire",
    one: "zaïrisk ny zaïre",
    other: "zaïriska nya zaïre"
}, {
    id: "ZRZ",
    displayName: "zairisk zaire",
    one: "zaïrisk zaïre",
    other: "zaïriska zaïre"
}, {
    id: "ZMW",
    displayName: "zambisk kwacha",
    symbol: "ZMW",
    one: "zambisk kwacha",
    other: "zambiska kwacha"
}, {
    id: "ZMK",
    displayName: "zambisk kwacha (1968–2012)",
    one: "zambisk kwacha (1968–2012)",
    other: "zambiska kwacha (1968–2012)"
}, {
    id: "ATS",
    displayName: "österrikisk schilling",
    one: "österrikisk schilling",
    other: "österrikiska schilling"
}, {
    id: "XCD",
    displayName: "östkaribisk dollar",
    symbol: "EC$",
    one: "östkaribisk dollar",
    other: "östkaribiska dollar"
}, {
    id: "DDM",
    displayName: "östtysk mark",
    one: "östtysk mark",
    other: "östtyska mark"
} ];

module.exports = inter;