function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _7gcu1 = {
    "default": "#,##0 %"
}, _7gcu2 = [ "Q1", "Q2", "Q3", "Q4" ], _7gcu3 = {
    displayName: "döwür"
}, _7gcu4 = {
    all: {
        leap: "{0}bis"
    }
}, _7gcu5 = {
    one: "{0}°",
    other: "{0}°"
}, _7gcu6 = {
    one: "{0}g",
    other: "{0}g"
}, _7gcu7 = {
    one: "{0}m",
    other: "{0}m"
}, _7gcu8 = {
    a: "h a – h a",
    h: "h–h a"
}, _7gcu9 = [ "Before R.O.C.", "R.O.C." ], _7gcu10 = {
    one: "{0} G",
    other: "{0} G"
}, _7gcu11 = {
    one: "{0}°C",
    other: "{0}°C"
}, _7gcu12 = {
    one: "0 müň",
    other: "0 müň"
}, _7gcu13 = {
    one: "0 müň",
    other: "0 müň"
}, _7gcu14 = {
    one: "0 mln",
    other: "0 mln"
}, _7gcu15 = {
    displayName: "güniň dowamy"
}, _7gcu16 = {
    one: "00 müň",
    other: "00 müň"
}, _7gcu17 = {
    one: "00 müň",
    other: "00 müň"
}, _7gcu18 = {
    one: "00 mln",
    other: "00 mln"
}, _7gcu19 = {
    one: "0 mlrd",
    other: "0 mlrd"
}, _7gcu20 = {
    one: "0 trln",
    other: "0 trln"
}, _7gcu21 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _7gcu22 = [ "Ý", "D", "S", "Ç", "P", "A", "Ş" ], _7gcu23 = {
    displayName: "hepdäniň güni"
}, _7gcu24 = {
    one: "{0} akr",
    other: "{0} akr"
}, _7gcu25 = {
    one: "{0} bit",
    other: "{0} bit"
}, _7gcu26 = {
    one: "{0} gün",
    other: "{0} gün"
}, _7gcu27 = {
    one: "{0} kar",
    other: "{0} kar"
}, _7gcu28 = {
    one: "000 müň",
    other: "000 müň"
}, _7gcu29 = {
    one: "000 müň",
    other: "000 müň"
}, _7gcu30 = {
    one: "000 mln",
    other: "000 mln"
}, _7gcu31 = {
    one: "00 mlrd",
    other: "00 mlrd"
}, _7gcu32 = {
    one: "00 trln",
    other: "00 trln"
}, _7gcu33 = {
    one: "0 müň ¤",
    other: "0 müň ¤"
}, _7gcu34 = {
    one: "0 mln ¤",
    other: "0 mln ¤"
}, _7gcu35 = {
    displayName: "sagat guşaklygy"
}, _7gcu36 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _7gcu37 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _7gcu38 = {
    one: "{0} funt",
    other: "{0} funt"
}, _7gcu39 = {
    one: "000 mlrd",
    other: "000 mlrd"
}, _7gcu40 = {
    one: "000 trln",
    other: "000 trln"
}, _7gcu41 = {
    one: "00 müň ¤",
    other: "00 müň ¤"
}, _7gcu42 = {
    one: "00 mln ¤",
    other: "00 mln ¤"
}, _7gcu43 = {
    one: "0 mlrd ¤",
    other: "0 mlrd ¤"
}, _7gcu44 = {
    one: "0 trln ¤",
    other: "0 trln ¤"
}, _7gcu45 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _7gcu46 = {
    d: "d – d MMM",
    M: "d MMM – d MMM"
}, _7gcu47 = {
    M: "MM.y – MM.y",
    y: "MM.y – MM.y"
}, _7gcu48 = {
    M: "MMM–MMM y",
    y: "MMM y – MMM y"
}, _7gcu49 = {
    one: "{0}ý. öň",
    other: "{0}ý. öň"
}, _7gcu50 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _7gcu51 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _7gcu52 = {
    "0": "şu gün",
    "1": "ertir",
    "-1": "düýn"
}, _7gcu53 = {
    one: "{0} minut",
    other: "{0} minut"
}, _7gcu54 = {
    one: "{0} karat",
    other: "{0} karat"
}, _7gcu55 = {
    one: "0 million",
    other: "0 million"
}, _7gcu56 = {
    one: "000 müň ¤",
    other: "000 müň ¤"
}, _7gcu57 = {
    one: "000 mln ¤",
    other: "000 mln ¤"
}, _7gcu58 = {
    one: "00 mlrd ¤",
    other: "00 mlrd ¤"
}, _7gcu59 = {
    one: "00 trln ¤",
    other: "00 trln ¤"
}, _7gcu60 = {
    one: "{0}ý.-dan",
    other: "{0}ý.-dan"
}, _7gcu61 = {
    one: "{0} ç-den",
    other: "{0} ç-den"
}, _7gcu62 = {
    one: "{0} ç. öň",
    other: "{0} ç. öň"
}, _7gcu63 = {
    one: "{0} aýdan",
    other: "{0} aýdan"
}, _7gcu64 = {
    one: "{0} aý öň",
    other: "{0} aý öň"
}, _7gcu65 = {
    one: "{0} h-den",
    other: "{0} h-den"
}, _7gcu66 = {
    one: "{0} h. öň",
    other: "{0} h. öň"
}, _7gcu67 = {
    one: "{0} g-den",
    other: "{0} g-den"
}, _7gcu68 = {
    one: "{0} g. öň",
    other: "{0} g. öň"
}, _7gcu69 = [ "ýb", "db", "sb", "çb", "pb", "an", "şb" ], _7gcu70 = {
    one: "{0} sekunt",
    other: "{0} sekunt"
}, _7gcu71 = {
    one: "00 million",
    other: "00 million"
}, _7gcu72 = {
    one: "0 milliard",
    other: "0 milliard"
}, _7gcu73 = {
    one: "0 trillion",
    other: "0 trillion"
}, _7gcu74 = {
    one: "000 mlrd ¤",
    other: "000 mlrd ¤"
}, _7gcu75 = {
    one: "000 trln ¤",
    other: "000 trln ¤"
}, _7gcu76 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _7gcu77 = {
    d: "dd.MM – dd.MM",
    M: "dd.MM – dd.MM"
}, _7gcu78 = {
    M: "MMMM–MMMM y",
    y: "MMMM y – MMMM y"
}, _7gcu79 = {
    one: "{0} ýyldan",
    other: "{0} ýyldan"
}, _7gcu80 = {
    one: "{0} ýyl öň",
    other: "{0} ýyl öň"
}, _7gcu81 = {
    one: "{0} günden",
    other: "{0} günden"
}, _7gcu82 = {
    one: "{0} gün öň",
    other: "{0} gün öň"
}, _7gcu83 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _7gcu84 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _7gcu85 = {
    one: "000 million",
    other: "000 million"
}, _7gcu86 = {
    one: "00 milliard",
    other: "00 milliard"
}, _7gcu87 = {
    one: "00 trillion",
    other: "00 trillion"
}, _7gcu88 = {
    one: "{0} çär-den",
    other: "{0} çär-den"
}, _7gcu89 = {
    one: "{0} çär. öň",
    other: "{0} çär. öň"
}, _7gcu90 = {
    one: "{0} hep-den",
    other: "{0} hep-den"
}, _7gcu91 = {
    one: "{0} hep. öň",
    other: "{0} hep. öň"
}, _7gcu92 = {
    one: "{0} sag-dan",
    other: "{0} sag-dan"
}, _7gcu93 = {
    one: "{0} sag. öň",
    other: "{0} sag. öň"
}, _7gcu94 = {
    one: "{0} min-dan",
    other: "{0} min-dan"
}, _7gcu95 = {
    one: "{0} min. öň",
    other: "{0} min. öň"
}, _7gcu96 = {
    one: "{0} sek-dan",
    other: "{0} sek-dan"
}, _7gcu97 = {
    one: "{0} sek. öň",
    other: "{0} sek. öň"
}, _7gcu98 = {
    one: "{0} l/100 km",
    other: "{0} l/100 km"
}, _7gcu99 = {
    one: "000 milliard",
    other: "000 milliard"
}, _7gcu100 = {
    one: "000 trillion",
    other: "000 trillion"
}, _7gcu101 = {
    "0": "şu aý",
    "1": "indiki aý",
    "-1": "geçen aý"
}, _7gcu102 = {
    one: "{0} hepdeden",
    other: "{0} hepdeden"
}, _7gcu103 = {
    one: "{0} hepde öň",
    other: "{0} hepde öň"
}, _7gcu104 = {
    one: "{0} sagatdan",
    other: "{0} sagatdan"
}, _7gcu105 = {
    one: "{0} sagat öň",
    other: "{0} sagat öň"
}, _7gcu106 = {
    one: "{0} minutdan",
    other: "{0} minutdan"
}, _7gcu107 = {
    one: "{0} minut öň",
    other: "{0} minut öň"
}, _7gcu108 = {
    one: "{0} çärýekden",
    other: "{0} çärýekden"
}, _7gcu109 = {
    one: "{0} çärýek öň",
    other: "{0} çärýek öň"
}, _7gcu110 = {
    one: "{0} sekuntdan",
    other: "{0} sekuntdan"
}, _7gcu111 = {
    one: "{0} sekunt öň",
    other: "{0} sekunt öň"
}, _7gcu112 = {
    "0": "şu ýyl",
    "1": "indiki ýyl",
    "-1": "geçen ýyl"
}, _7gcu113 = {
    d: "dd.MM E – dd.MM E",
    M: "dd.MM E – dd.MM E"
}, _7gcu114 = {
    d: "d MMM E – d MMM E",
    M: "d MMM E – d MMM E"
}, _7gcu115 = [ "Ý", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D" ], _7gcu116 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _7gcu117 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _7gcu118 = {
    id: "001",
    displayName: "Dunýä",
    hasTimeZones: false
}, _7gcu119 = {
    "0": "şu hepde",
    "1": "indiki hepde",
    "-1": "geçen hepde"
}, _7gcu120 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _7gcu121 = {
    "0": "this Sunday",
    "1": "next Sunday",
    "-1": "last Sunday"
}, _7gcu122 = {
    "0": "this Monday",
    "1": "next Monday",
    "-1": "last Monday"
}, _7gcu123 = {
    "0": "this Friday",
    "1": "next Friday",
    "-1": "last Friday"
}, _7gcu124 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _7gcu125 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _7gcu126 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _7gcu127 = {
    "0": "this Tuesday",
    "1": "next Tuesday",
    "-1": "last Tuesday"
}, _7gcu128 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _7gcu129 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _7gcu130 = {
    "0": "this Thursday",
    "1": "next Thursday",
    "-1": "last Thursday"
}, _7gcu131 = {
    "0": "this Saturday",
    "1": "next Saturday",
    "-1": "last Saturday"
}, _7gcu132 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _7gcu133 = {
    d: "d – d MMM y",
    M: "d MMM – d MMM y",
    y: "d MMM y – d MMM y"
}, _7gcu134 = {
    "0": "this Wednesday",
    "1": "next Wednesday",
    "-1": "last Wednesday"
}, _7gcu135 = {
    id: "IR",
    displayName: "Eýran",
    regionId: "034",
    hasTimeZones: true
}, _7gcu136 = {
    id: "CN",
    displayName: "Hytaý",
    regionId: "030",
    hasTimeZones: true
}, _7gcu137 = {
    relative: _7gcu121
}, _7gcu138 = {
    relative: _7gcu122
}, _7gcu139 = {
    relative: _7gcu123
}, _7gcu140 = {
    id: "US",
    displayName: "A.B.Ş.",
    regionId: "021",
    hasTimeZones: true
}, _7gcu141 = {
    id: "IT",
    displayName: "Italiýa",
    regionId: "039",
    hasTimeZones: true
}, _7gcu142 = {
    id: "RU",
    displayName: "Orusýet",
    regionId: "151",
    hasTimeZones: true
}, _7gcu143 = {
    id: "TR",
    displayName: "Türkiýe",
    regionId: "145",
    hasTimeZones: true
}, _7gcu144 = {
    id: "UA",
    displayName: "Ukraina",
    regionId: "151",
    hasTimeZones: true
}, _7gcu145 = {
    id: "IL",
    displayName: "Ysraýyl",
    regionId: "145",
    hasTimeZones: true
}, _7gcu146 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _7gcu147 = {
    id: "JP",
    displayName: "Ýaponiýa",
    regionId: "030",
    hasTimeZones: true
}, _7gcu148 = {
    relative: _7gcu127
}, _7gcu149 = {
    id: "GB",
    displayName: "Britaniýa",
    regionId: "154",
    hasTimeZones: true
}, _7gcu150 = {
    id: "DE",
    displayName: "Germaniýa",
    regionId: "155",
    hasTimeZones: true
}, _7gcu151 = {
    id: "IN",
    displayName: "Hindistan",
    regionId: "034",
    hasTimeZones: true
}, _7gcu152 = {
    d: "dd.MM.y – dd.MM.y",
    M: "dd.MM.y – dd.MM.y",
    y: "dd.MM.y – dd.MM.y"
}, _7gcu153 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _7gcu154 = {
    id: "AU",
    displayName: "Awstraliýa",
    regionId: "053",
    hasTimeZones: true
}, _7gcu155 = {
    id: "AZ",
    displayName: "Azerbaýjan",
    regionId: "145",
    hasTimeZones: true
}, _7gcu156 = {
    id: "UZ",
    displayName: "Özbegistan",
    regionId: "143",
    hasTimeZones: true
}, _7gcu157 = {
    "2": "{0} we {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0} we {1}"
}, _7gcu158 = [ "ýekşenbe", "duşenbe", "sişenbe", "çarşenbe", "penşenbe", "anna", "şenbe" ], _7gcu159 = {
    relative: _7gcu130
}, _7gcu160 = {
    relative: _7gcu131
}, _7gcu161 = {
    id: "TM",
    displayName: "Türkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _7gcu162 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _7gcu163 = {
    relative: _7gcu134
}, _7gcu164 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _7gcu165 = [ "ýan", "few", "mart", "apr", "maý", "iýun", "iýul", "awg", "sen", "okt", "noý", "dek" ], _7gcu166 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _7gcu167 = {
    d: "dd.MM.y E – dd.MM.y E",
    M: "dd.MM.y E – dd.MM.y E",
    y: "dd.MM.y E – dd.MM.y E"
}, _7gcu168 = {
    d: "d MMM y E – d MMM y E",
    M: "d MMM y E – d MMM y E",
    y: "d MMM y E – d MMM y E"
}, _7gcu169 = {
    abbreviated: {
        am: "AM",
        pm: "PM"
    },
    narrow: {
        am: "AM",
        pm: "PM"
    },
    wide: {
        am: "AM",
        pm: "PM"
    }
}, _7gcu170 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _7gcu171 = {
    future: _7gcu60,
    past: _7gcu49
}, _7gcu172 = {
    future: _7gcu61,
    past: _7gcu62
}, _7gcu173 = {
    future: _7gcu63,
    past: _7gcu64
}, _7gcu174 = {
    future: _7gcu65,
    past: _7gcu66
}, _7gcu175 = {
    future: _7gcu67,
    past: _7gcu68
}, _7gcu176 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _7gcu177 = {
    abbreviated: _7gcu2,
    narrow: [ "1", "2", "3", "4" ],
    wide: _7gcu2
}, _7gcu178 = {
    future: _7gcu79,
    past: _7gcu80
}, _7gcu179 = {
    future: _7gcu81,
    past: _7gcu82
}, _7gcu180 = {
    future: _7gcu88,
    past: _7gcu89
}, _7gcu181 = {
    future: _7gcu90,
    past: _7gcu91
}, _7gcu182 = {
    future: _7gcu92,
    past: _7gcu93
}, _7gcu183 = {
    future: _7gcu94,
    past: _7gcu95
}, _7gcu184 = {
    future: _7gcu96,
    past: _7gcu97
}, _7gcu185 = {
    future: _7gcu102,
    past: _7gcu103
}, _7gcu186 = {
    future: _7gcu104,
    past: _7gcu105
}, _7gcu187 = {
    future: _7gcu106,
    past: _7gcu107
}, _7gcu188 = {
    future: _7gcu108,
    past: _7gcu109
}, _7gcu189 = {
    future: _7gcu110,
    past: _7gcu111
}, _7gcu190 = [ "ýanwar", "fewral", "mart", "aprel", "maý", "iýun", "iýul", "awgust", "sentýabr", "oktýabr", "noýabr", "dekabr" ], _7gcu191 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _7gcu192 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _7gcu193 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _7gcu194 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _7gcu195 = {
    displayName: "ý.",
    relativeTime: _7gcu171
}, _7gcu196 = {
    displayName: "aý",
    relativeTime: _7gcu173
}, _7gcu197 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _7gcu198 = {
    displayName: "gün",
    relativeTime: _7gcu175
}, _7gcu199 = {
    displayName: "çär.",
    relativeTime: _7gcu172
}, _7gcu200 = {
    displayName: "hep.",
    relativeTime: _7gcu174
}, _7gcu201 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _7gcu202 = {
    displayName: "çär.",
    relativeTime: _7gcu180
}, _7gcu203 = {
    displayName: "hep.",
    relativeTime: _7gcu181
}, _7gcu204 = {
    displayName: "sag.",
    relativeTime: _7gcu182
}, _7gcu205 = {
    displayName: "min.",
    relativeTime: _7gcu183
}, _7gcu206 = {
    displayName: "sek.",
    relativeTime: _7gcu184
}, _7gcu207 = {
    displayName: "sagat",
    relativeTime: _7gcu186
}, _7gcu208 = {
    displayName: "minut",
    relativeTime: _7gcu187
}, _7gcu209 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _7gcu210 = {
    displayName: "sekunt",
    relative: [ "now" ],
    relativeTime: _7gcu189
}, _7gcu211 = {
    displayName: "gün",
    relative: _7gcu52,
    relativeTime: _7gcu179
}, _7gcu212 = {
    displayName: "aý",
    relative: _7gcu101,
    relativeTime: _7gcu173
}, _7gcu213 = {
    decimal: ",",
    group: " ",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "san däl",
    timeSeparator: ":"
}, _7gcu214 = {
    displayName: "ýyl",
    relative: _7gcu112,
    relativeTime: _7gcu178
}, _7gcu215 = {
    format: _7gcu169,
    standAlone: _7gcu169
}, _7gcu216 = {
    symbols: _7gcu213
}, _7gcu217 = {
    displayName: "hepde",
    relative: _7gcu119,
    relativeTime: _7gcu185
}, _7gcu218 = {
    format: _7gcu162,
    numeric: _7gcu4,
    standAlone: _7gcu162
}, _7gcu219 = {
    format: _7gcu177,
    standAlone: _7gcu177
}, _7gcu220 = {
    displayName: "çarýek",
    relative: _7gcu126,
    relativeTime: _7gcu188
}, _7gcu221 = {
    abbreviated: _7gcu69,
    narrow: _7gcu22,
    wide: _7gcu158,
    "short": _7gcu69
}, _7gcu222 = {
    symbols: _7gcu213,
    digits: "renderSpelloutCardinal"
}, _7gcu223 = {
    abbreviated: _7gcu164,
    narrow: _7gcu124,
    wide: _7gcu164
}, _7gcu224 = {
    symbols: _7gcu213,
    digits: "renderSpelloutCardinalFinancial"
}, _7gcu225 = {
    abbreviated: _7gcu165,
    narrow: _7gcu115,
    wide: _7gcu190
}, _7gcu226 = {
    abbreviated: _7gcu166,
    narrow: _7gcu166,
    wide: _7gcu166
}, _7gcu227 = {
    format: _7gcu226
}, _7gcu228 = {
    abbreviated: _7gcu192,
    narrow: _7gcu129,
    wide: _7gcu192
}, _7gcu229 = {
    abbreviated: _7gcu193,
    narrow: _7gcu124,
    wide: _7gcu193
}, _7gcu230 = {
    abbreviated: _7gcu194,
    narrow: _7gcu129,
    wide: _7gcu194
}, _7gcu231 = {
    abbreviated: _7gcu191,
    narrow: _7gcu124,
    wide: _7gcu209
}, _7gcu232 = {
    abbreviated: _7gcu197,
    narrow: _7gcu129,
    wide: _7gcu197
}, _7gcu233 = {
    abbreviated: _7gcu201,
    narrow: _7gcu124,
    wide: _7gcu201
}, _7gcu234 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _7gcu235 = {
    fullDate: "d MMMM y G EEEE",
    longDate: "d MMMM y G",
    mediumDate: "d MMM y G",
    shortDate: "dd.MM.y GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd.MM.y GGGGG HH:mm",
    mediumDateTime: "d MMM y G HH:mm:ss",
    longDateTime: "d MMMM y G HH:mm:ss z",
    fullDateTime: "d MMMM y G EEEE HH:mm:ss zzzz"
}, _7gcu236 = {
    "1000": _7gcu13,
    "10000": _7gcu17,
    "100000": _7gcu29,
    "1000000": _7gcu14,
    "10000000": _7gcu18,
    "100000000": _7gcu30,
    "1000000000": _7gcu19,
    "10000000000": _7gcu31,
    "100000000000": _7gcu39,
    "1000000000000": _7gcu20,
    "10000000000000": _7gcu32,
    "100000000000000": _7gcu40
}, _7gcu237 = {
    format: _7gcu221,
    standAlone: _7gcu221
}, _7gcu238 = {
    format: _7gcu223,
    standAlone: _7gcu223
}, _7gcu239 = {
    "1000": _7gcu33,
    "10000": _7gcu41,
    "100000": _7gcu56,
    "1000000": _7gcu34,
    "10000000": _7gcu42,
    "100000000": _7gcu57,
    "1000000000": _7gcu43,
    "10000000000": _7gcu58,
    "100000000000": _7gcu74,
    "1000000000000": _7gcu44,
    "10000000000000": _7gcu59,
    "100000000000000": _7gcu75
}, _7gcu240 = {
    "1000": _7gcu12,
    "10000": _7gcu16,
    "100000": _7gcu28,
    "1000000": _7gcu55,
    "10000000": _7gcu71,
    "100000000": _7gcu85,
    "1000000000": _7gcu72,
    "10000000000": _7gcu86,
    "100000000000": _7gcu99,
    "1000000000000": _7gcu73,
    "10000000000000": _7gcu87,
    "100000000000000": _7gcu100
}, _7gcu241 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _7gcu242 = {
    format: _7gcu225,
    standAlone: _7gcu225
}, _7gcu243 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _7gcu244 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _7gcu245 = {
    format: _7gcu231,
    standAlone: _7gcu231
}, _7gcu246 = {
    d: "d",
    Ed: "d E",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "dd.MM",
    MEd: "dd.MM E",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "d MMM E",
    MMMMd: "d MMMM",
    MMMMEd: "d MMMM E",
    mmss: "mm:ss",
    ms: "mm:ss",
    y: "y",
    yM: "MM.y",
    yMd: "dd.MM.y",
    yMEd: "dd.MM.y E",
    yMMM: "MMM y",
    yMMMd: "d MMM y",
    yMMMEd: "d MMM y E",
    yMMMM: "MMMM y",
    E: "ccc",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss",
    Gy: "G y",
    GyMMM: "G y MMM",
    GyMMMd: "G y MMM d",
    GyMMMEd: "G y MMM d, E",
    h: "h a",
    yyyy: "G y",
    yyyyM: "GGGGG y-MM",
    yyyyMd: "GGGGG y-MM-dd",
    yyyyMEd: "GGGGG y-MM-dd, E",
    yyyyMMM: "G y MMM",
    yyyyMMMd: "G y MMM d",
    yyyyMMMEd: "G y MMM d, E",
    yyyyMMMM: "G y MMMM",
    yyyyQQQ: "G y QQQ",
    yyyyQQQQ: "G y QQQQ"
}, _7gcu247 = {
    basic: _7gcu234,
    cldr: _7gcu241
}, _7gcu248 = {
    d: {
        d: "d–d"
    },
    h: _7gcu8,
    H: {
        H: "HH–HH"
    },
    hm: _7gcu125,
    Hm: _7gcu45,
    hmv: _7gcu132,
    Hmv: _7gcu76,
    hv: _7gcu21,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM – MM"
    },
    Md: _7gcu77,
    MEd: _7gcu113,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _7gcu46,
    MMMEd: _7gcu114,
    y: {
        y: "y–y"
    },
    yM: _7gcu47,
    yMd: _7gcu152,
    yMEd: _7gcu167,
    yMMM: _7gcu48,
    yMMMd: _7gcu133,
    yMMMEd: _7gcu168,
    yMMMM: _7gcu78
}, _7gcu249 = {
    "long": _7gcu240,
    "short": _7gcu236,
    "default": "#,##0.###"
}, _7gcu250 = {
    d: {
        d: "d–d"
    },
    h: _7gcu8,
    H: {
        H: "HH–HH"
    },
    hm: _7gcu125,
    Hm: _7gcu45,
    hmv: _7gcu132,
    Hmv: _7gcu76,
    hv: _7gcu21,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _7gcu83,
    MEd: _7gcu116,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _7gcu36,
    MMMEd: _7gcu117,
    y: {
        y: "U–U"
    },
    yM: _7gcu50,
    yMd: _7gcu153,
    yMEd: _7gcu176,
    yMMM: _7gcu51,
    yMMMd: _7gcu128,
    yMMMEd: _7gcu170,
    yMMMM: _7gcu84
}, _7gcu251 = {
    basic: _7gcu235,
    cldr: _7gcu246
}, _7gcu252 = {
    beforeCurrency: _7gcu243,
    afterCurrency: _7gcu243
}, _7gcu253 = {
    "short": _7gcu239,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _7gcu252
}, _7gcu254 = {
    abbreviated: _7gcu244,
    narrow: _7gcu244,
    wide: _7gcu244
}, _7gcu255 = {
    format: _7gcu254
}, _7gcu256 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _7gcu249,
    currency: _7gcu253,
    percent: _7gcu1
}, _7gcu257 = {
    era: _7gcu3,
    year: _7gcu214,
    "year-short": _7gcu195,
    "year-narrow": _7gcu195,
    quarter: _7gcu220,
    "quarter-short": _7gcu202,
    "quarter-narrow": _7gcu199,
    month: _7gcu212,
    "month-short": _7gcu196,
    "month-narrow": _7gcu196,
    week: _7gcu217,
    "week-short": _7gcu203,
    "week-narrow": _7gcu200,
    day: _7gcu211,
    "day-short": _7gcu198,
    "day-narrow": _7gcu198,
    weekday: _7gcu23,
    dayperiod: _7gcu15,
    hour: _7gcu207,
    "hour-short": _7gcu204,
    "hour-narrow": _7gcu204,
    minute: _7gcu208,
    "minute-short": _7gcu205,
    "minute-narrow": _7gcu205,
    second: _7gcu210,
    "second-short": _7gcu206,
    "second-narrow": _7gcu206,
    zone: _7gcu35,
    sun: _7gcu137,
    mon: _7gcu138,
    tue: _7gcu148,
    wed: _7gcu163,
    thu: _7gcu159,
    fri: _7gcu139,
    sat: _7gcu160
}, _7gcu258 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _7gcu257
}, _7gcu259 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _7gcu260 = {
    dayParts: _7gcu227,
    days: _7gcu255,
    months: _7gcu255,
    years: _7gcu255,
    zodiacs: _7gcu227
}, _7gcu261 = {
    dateFormats: _7gcu251,
    datePartsOrder: "dmy",
    dateIntervalFormats: _7gcu248,
    dateIntervalFallbackFormat: "{0} - {1}",
    dayNames: _7gcu237,
    dayPeriods: _7gcu215,
    monthNames: _7gcu245,
    eraNames: _7gcu37,
    quarterNames: _7gcu219,
    fields: _7gcu257
}, _7gcu262 = {
    dateFormats: _7gcu247,
    datePartsOrder: "md",
    dateIntervalFormats: _7gcu250,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _7gcu237,
    dayPeriods: _7gcu215,
    cyclicNames: _7gcu260,
    monthNames: _7gcu238,
    monthPatterns: _7gcu218,
    quarterNames: _7gcu219,
    fields: _7gcu257
};

inter.id = "tk";

inter.delimiters = {
    quotationStart: "“",
    quotationEnd: "”",
    alternateQuotationStart: "“",
    alternateQuotationEnd: "”"
};

inter.listPatterns = {
    "default": _7gcu157,
    unit: _7gcu157,
    unitNarrow: {
        "2": "{0} {1}",
        start: "{0} {1}",
        middle: "{0} {1}",
        end: "{0} {1}"
    },
    unitShort: {
        "2": "{0}, {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0} we {1}"
    }
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: _7gcu10,
            accelerationMeterPerSecondSquared: {
                one: "{0} inedördül sekuntda metr",
                other: "{0} inedördül sekuntda metr"
            },
            angleRevolution: {
                one: "{0} aýlaw",
                other: "{0} aýlaw"
            },
            angleRadian: {
                one: "{0} radian",
                other: "{0} radian"
            },
            angleDegree: {
                one: "{0} dereje",
                other: "{0} dereje"
            },
            angleArcMinute: _7gcu53,
            angleArcSecond: _7gcu70,
            areaSquareKilometer: {
                one: "{0} inedördül kilometr",
                other: "{0} inedördül kilometr"
            },
            areaHectare: {
                one: "{0} gektar",
                other: "{0} gektar"
            },
            areaSquareMeter: {
                one: "{0} inedördül metr",
                other: "{0} inedördül metr"
            },
            areaSquareCentimeter: {
                one: "{0} inedördül santimetr",
                other: "{0} inedördül santimetr"
            },
            areaSquareMile: {
                one: "{0} inedördül mil",
                other: "{0} inedördül mil"
            },
            areaAcre: _7gcu24,
            areaSquareYard: {
                one: "{0} inedördül ýard",
                other: "{0} inedördül ýard"
            },
            areaSquareFoot: {
                one: "{0} inedördül fut",
                other: "{0} inedördül fut"
            },
            areaSquareInch: {
                one: "{0} inedördül dýuým",
                other: "{0} inedördül dýuým"
            },
            concentrKarat: _7gcu54,
            consumptionLiterPerKilometer: {
                one: "kilometrde {0} litr",
                other: "kilometrde {0} litr"
            },
            "consumptionLiterPer-100kilometers": {
                one: "100 kilometrde {0} litr",
                other: "100 kilometrde {0} litr"
            },
            consumptionMilePerGallon: {
                one: "galonda {0} mil",
                other: "galonda {0} mil"
            },
            digitalTerabyte: {
                one: "{0} terabaýt",
                other: "{0} terabaýt"
            },
            digitalTerabit: {
                one: "{0} terabit",
                other: "{0} terabit"
            },
            digitalGigabyte: {
                one: "{0} gigabaýt",
                other: "{0} gigabaýt"
            },
            digitalGigabit: {
                one: "{0} gigabit",
                other: "{0} gigabit"
            },
            digitalMegabyte: {
                one: "{0} megabaýt",
                other: "{0} megabaýt"
            },
            digitalMegabit: {
                one: "{0} megabit",
                other: "{0} megabit"
            },
            digitalKilobyte: {
                one: "{0} kilobaýt",
                other: "{0} kilobaýt"
            },
            digitalKilobit: {
                one: "{0} kilobit",
                other: "{0} kilobit"
            },
            digitalByte: {
                one: "{0} baýt",
                other: "{0} baýt"
            },
            digitalBit: _7gcu25,
            durationCentury: {
                one: "{0} asyr",
                other: "{0} asyr"
            },
            durationYear: {
                one: "{0} ýyl",
                other: "{0} ýyl"
            },
            durationMonth: {
                one: "{0} aý",
                other: "{0} aý"
            },
            durationWeek: {
                one: "{0} hepde",
                other: "{0} hepde"
            },
            durationDay: _7gcu26,
            durationHour: {
                one: "{0} sagat",
                other: "{0} sagat"
            },
            durationMinute: _7gcu53,
            durationSecond: _7gcu70,
            durationMillisecond: {
                one: "{0} millisekunt",
                other: "{0} millisekunt"
            },
            durationMicrosecond: {
                one: "{0} mikrosekunt",
                other: "{0} mikrosekunt"
            },
            durationNanosecond: {
                one: "{0} nanosekunt",
                other: "{0} nanosekunt"
            },
            electricAmpere: {
                one: "{0} amper",
                other: "{0} amper"
            },
            electricMilliampere: {
                one: "{0} milliamper",
                other: "{0} milliamper"
            },
            electricOhm: {
                one: "{0} om",
                other: "{0} om"
            },
            electricVolt: {
                one: "{0} wolt",
                other: "{0} wolt"
            },
            energyKilocalorie: {
                one: "{0} kilokaloriýa",
                other: "{0} kilokaloriýa"
            },
            energyCalorie: {
                one: "{0} kaloriýa",
                other: "{0} kaloriýa"
            },
            energyFoodcalorie: {
                one: "{0} Kaloriýa",
                other: "{0} Kaloriýa"
            },
            energyKilojoule: {
                one: "{0} kilodžul",
                other: "{0} kilodžul"
            },
            energyJoule: {
                one: "{0} džul",
                other: "{0} džul"
            },
            energyKilowattHour: {
                one: "{0} kilowat-sagat",
                other: "{0} kilowat-sagat"
            },
            frequencyGigahertz: {
                one: "{0} gigagerts",
                other: "{0} gigagerts"
            },
            frequencyMegahertz: {
                one: "{0} megagerts",
                other: "{0} megagerts"
            },
            frequencyKilohertz: {
                one: "{0} kilogerts",
                other: "{0} kilogerts"
            },
            frequencyHertz: {
                one: "{0} gerts",
                other: "{0} gerts"
            },
            lengthKilometer: {
                one: "{0} kilometr",
                other: "{0} kilometr"
            },
            lengthMeter: {
                one: "{0} metr",
                other: "{0} metr"
            },
            lengthDecimeter: {
                one: "{0} desimetr",
                other: "{0} desimetr"
            },
            lengthCentimeter: {
                one: "{0} santimetr",
                other: "{0} santimetr"
            },
            lengthMillimeter: {
                one: "{0} millimetr",
                other: "{0} millimetr"
            },
            lengthMicrometer: {
                one: "{0} mikrometr",
                other: "{0} mikrometr"
            },
            lengthNanometer: {
                one: "{0} nanometr",
                other: "{0} nanometr"
            },
            lengthPicometer: {
                one: "{0} pikometr",
                other: "{0} pikometr"
            },
            lengthMile: {
                one: "{0} mil",
                other: "{0} mil"
            },
            lengthYard: {
                one: "{0} ýard",
                other: "{0} ýard"
            },
            lengthFoot: {
                one: "{0} fut",
                other: "{0} fut"
            },
            lengthInch: {
                one: "{0} dýuým",
                other: "{0} dýuým"
            },
            lengthParsec: {
                one: "{0} parsek",
                other: "{0} parsek"
            },
            lengthLightYear: {
                one: "{0} ýagtylyk ýyly",
                other: "{0} ýagtylyk ýyly"
            },
            lengthAstronomicalUnit: {
                one: "{0} astronomik birlik",
                other: "{0} astronomik birlik"
            },
            lengthNauticalMile: {
                one: "{0} deňiz mili",
                other: "{0} deňiz mili"
            },
            lengthMileScandinavian: {
                one: "{0} skandinaw mili",
                other: "{0} skandinaw mili"
            },
            lightLux: {
                one: "{0} lýuks",
                other: "{0} lýuks"
            },
            massMetricTon: {
                one: "{0} metrik tonna",
                other: "{0} metrik tonna"
            },
            massKilogram: {
                one: "{0} kilogram",
                other: "{0} kilogram"
            },
            massGram: {
                one: "{0} gram",
                other: "{0} gram"
            },
            massMilligram: {
                one: "{0} milligram",
                other: "{0} milligram"
            },
            massMicrogram: {
                one: "{0} mikrogram",
                other: "{0} mikrogram"
            },
            massTon: {
                one: "{0} tonna",
                other: "{0} tonna"
            },
            massPound: _7gcu38,
            massOunce: {
                one: "{0} unsiý",
                other: "{0} unsiý"
            },
            massOunceTroy: {
                one: "{0} troý unsiý",
                other: "{0} troý unsiý"
            },
            massCarat: _7gcu54,
            powerGigawatt: {
                one: "{0} gigawatt",
                other: "{0} gigawatt"
            },
            powerMegawatt: {
                one: "{0} megawatt",
                other: "{0} megawatt"
            },
            powerKilowatt: {
                one: "{0} kilowatt",
                other: "{0} kilowatt"
            },
            powerWatt: {
                one: "{0} watt",
                other: "{0} watt"
            },
            powerMilliwatt: {
                one: "{0} milliwatt",
                other: "{0} milliwatt"
            },
            powerHorsepower: {
                one: "{0} at güýji",
                other: "{0} at güýji"
            },
            pressureHectopascal: {
                one: "{0} gektopaskal",
                other: "{0} gektopaskal"
            },
            pressureMillimeterOfMercury: {
                one: "{0} simap sütüniň millimetri",
                other: "{0} simap sütüniň millimetri"
            },
            pressurePoundPerSquareInch: {
                one: "inedörül dýuým başyna {0} funt",
                other: "inedörül dýuým başyna {0} funt"
            },
            pressureInchHg: {
                one: "{0} simap sütüniň dýuýmy",
                other: "{0} simap sütüniň dýuýmy"
            },
            pressureMillibar: {
                one: "{0} millibar",
                other: "{0} millibar"
            },
            speedKilometerPerHour: {
                one: "sagatda {0} kilometr",
                other: "sagatda {0} kilometr"
            },
            speedMeterPerSecond: {
                one: "sekuntda {0} metr",
                other: "sekuntda {0} metr"
            },
            speedMilePerHour: {
                one: "sagatda {0} mil",
                other: "sagatda {0} mil"
            },
            speedKnot: {
                one: "{0} uzel",
                other: "{0} uzel"
            },
            temperatureGeneric: _7gcu5,
            temperatureCelsius: {
                one: "{0} Selsiý gradusy",
                other: "{0} Selsiý gradusy"
            },
            temperatureFahrenheit: {
                one: "{0} Farangeýt gradusy",
                other: "{0} Farangeýt gradusy"
            },
            temperatureKelvin: {
                one: "{0} Kelwin gradusy",
                other: "{0} Kelwin gradusy"
            },
            volumeCubicKilometer: {
                one: "{0} kub kilometr",
                other: "{0} kub kilometr"
            },
            volumeCubicMeter: {
                one: "{0} kub metr",
                other: "{0} kub metr"
            },
            volumeCubicCentimeter: {
                one: "{0} kub santimetr",
                other: "{0} kub santimetr"
            },
            volumeCubicMile: {
                one: "{0} kub mil",
                other: "{0} kub mil"
            },
            volumeCubicYard: {
                one: "{0} kub ýard",
                other: "{0} kub ýard"
            },
            volumeCubicFoot: {
                one: "{0} kub fut",
                other: "{0} kub fut"
            },
            volumeCubicInch: {
                one: "{0} kub dýuým",
                other: "{0} kub dýuým"
            },
            volumeMegaliter: {
                one: "{0} megalitr",
                other: "{0} megalitr"
            },
            volumeHectoliter: {
                one: "{0} gektolitr",
                other: "{0} gektolitr"
            },
            volumeLiter: {
                one: "{0} litr",
                other: "{0} litr"
            },
            volumeDeciliter: {
                one: "{0} desilitr",
                other: "{0} desilitr"
            },
            volumeCentiliter: {
                one: "{0} santilitr",
                other: "{0} santilitr"
            },
            volumeMilliliter: {
                one: "{0} millilitr",
                other: "{0} millilitr"
            },
            volumePintMetric: {
                one: "{0} metrik pint",
                other: "{0} metrik pint"
            },
            volumeCupMetric: {
                one: "{0} metrik käse",
                other: "{0} metrik käse"
            },
            volumeAcreFoot: {
                one: "{0} akrfut",
                other: "{0} akrfut"
            },
            volumeGallon: {
                one: "{0} galon",
                other: "{0} galon"
            },
            volumeQuart: {
                one: "{0} kwarta",
                other: "{0} kwarta"
            },
            volumePint: {
                one: "{0} pint",
                other: "{0} pint"
            },
            volumeCup: {
                one: "{0} käse",
                other: "{0} käse"
            },
            volumeFluidOunce: {
                one: "{0} suwuklyk unsiý",
                other: "{0} suwuklyk unsiý"
            },
            volumeTablespoon: {
                one: "{0} nahar çemçe",
                other: "{0} nahar çemçe"
            },
            volumeTeaspoon: {
                one: "{0} çaý çemçe",
                other: "{0} çaý çemçe"
            }
        },
        compoundUnit: {
            per: "{1} başyna {0}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: _7gcu10,
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: {
                one: "{0} aýl.",
                other: "{0} aýl."
            },
            angleRadian: {
                one: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: _7gcu5,
            angleArcMinute: {
                one: "{0}′",
                other: "{0}′"
            },
            angleArcSecond: {
                one: "{0}″",
                other: "{0}″"
            },
            areaSquareKilometer: {
                one: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                one: "{0} ga",
                other: "{0} ga"
            },
            areaSquareMeter: {
                one: "{0} m²",
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: {
                one: "{0} mi²",
                other: "{0} mi²"
            },
            areaAcre: _7gcu24,
            areaSquareYard: {
                one: "{0} ýd²",
                other: "{0} ýd²"
            },
            areaSquareFoot: {
                one: "{0} ft²",
                other: "{0} ft²"
            },
            areaSquareInch: {
                one: "{0} dý²",
                other: "{0} dý²"
            },
            concentrKarat: _7gcu27,
            consumptionLiterPerKilometer: {
                one: "{0} l/km",
                other: "{0} l/km"
            },
            "consumptionLiterPer-100kilometers": _7gcu98,
            consumptionMilePerGallon: {
                one: "{0} mil/gal.",
                other: "{0} mil/gal."
            },
            digitalTerabyte: {
                one: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tbit",
                other: "{0} Tbit"
            },
            digitalGigabyte: {
                one: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gbit",
                other: "{0} Gbit"
            },
            digitalMegabyte: {
                one: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mbit",
                other: "{0} Mbit"
            },
            digitalKilobyte: {
                one: "{0} kB",
                other: "{0} kB"
            },
            digitalKilobit: {
                one: "{0} kbit",
                other: "{0} kbit"
            },
            digitalByte: {
                one: "{0} B",
                other: "{0} B"
            },
            digitalBit: _7gcu25,
            durationCentury: {
                one: "{0} as",
                other: "{0} as"
            },
            durationYear: {
                one: "{0} ý.",
                other: "{0} ý."
            },
            durationMonth: {
                one: "{0} a",
                other: "{0} a"
            },
            durationWeek: {
                one: "{0} hep",
                other: "{0} hep"
            },
            durationDay: _7gcu26,
            durationHour: {
                one: "{0} sag",
                other: "{0} sag"
            },
            durationMinute: {
                one: "{0} min",
                other: "{0} min"
            },
            durationSecond: {
                one: "{0} sek",
                other: "{0} sek"
            },
            durationMillisecond: {
                one: "{0} msek",
                other: "{0} msek"
            },
            durationMicrosecond: {
                one: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Om",
                other: "{0} Om"
            },
            electricVolt: {
                one: "{0} W",
                other: "{0} W"
            },
            energyKilocalorie: {
                one: "{0} kkal",
                other: "{0} kkal"
            },
            energyCalorie: {
                one: "{0} kal",
                other: "{0} kal"
            },
            energyFoodcalorie: {
                one: "{0} Kal",
                other: "{0} Kal"
            },
            energyKilojoule: {
                one: "{0} kdž",
                other: "{0} kdž"
            },
            energyJoule: {
                one: "{0} dž",
                other: "{0} dž"
            },
            energyKilowattHour: {
                one: "{0} kWt-sag",
                other: "{0} kWt-sag"
            },
            frequencyGigahertz: {
                one: "{0} GGs",
                other: "{0} GGs"
            },
            frequencyMegahertz: {
                one: "{0} MGs",
                other: "{0} MGs"
            },
            frequencyKilohertz: {
                one: "{0} kGs",
                other: "{0} kGs"
            },
            frequencyHertz: {
                one: "{0} Gs",
                other: "{0} Gs"
            },
            lengthKilometer: {
                one: "{0} km",
                other: "{0} km"
            },
            lengthMeter: {
                one: "{0} m",
                other: "{0} m"
            },
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: {
                one: "{0} sm",
                other: "{0} sm"
            },
            lengthMillimeter: {
                one: "{0} mm",
                other: "{0} mm"
            },
            lengthMicrometer: {
                one: "{0} mkm",
                other: "{0} mkm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: {
                one: "{0} pm",
                other: "{0} pm"
            },
            lengthMile: {
                one: "{0} mi",
                other: "{0} mi"
            },
            lengthYard: {
                one: "{0} ýd",
                other: "{0} ýd"
            },
            lengthFoot: {
                one: "{0} ft",
                other: "{0} ft"
            },
            lengthInch: {
                one: "{0} dý",
                other: "{0} dý"
            },
            lengthParsec: {
                one: "{0} pk",
                other: "{0} pk"
            },
            lengthLightYear: {
                one: "{0} ýý",
                other: "{0} ýý"
            },
            lengthAstronomicalUnit: {
                one: "{0} ab",
                other: "{0} ab"
            },
            lengthNauticalMile: {
                one: "{0} dmi",
                other: "{0} dmi"
            },
            lengthMileScandinavian: {
                one: "{0} smi",
                other: "{0} smi"
            },
            lightLux: {
                one: "{0} lk",
                other: "{0} lk"
            },
            massMetricTon: {
                one: "{0} m. t",
                other: "{0} m. t"
            },
            massKilogram: {
                one: "{0} kg",
                other: "{0} kg"
            },
            massGram: {
                one: "{0} g",
                other: "{0} g"
            },
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} mkg",
                other: "{0} mkg"
            },
            massTon: {
                one: "{0} t",
                other: "{0} t"
            },
            massPound: _7gcu38,
            massOunce: {
                one: "{0} uns.",
                other: "{0} uns."
            },
            massOunceTroy: {
                one: "{0} oz t",
                other: "{0} oz t"
            },
            massCarat: _7gcu27,
            powerGigawatt: {
                one: "{0} GWt",
                other: "{0} GWt"
            },
            powerMegawatt: {
                one: "{0} MWt",
                other: "{0} MWt"
            },
            powerKilowatt: {
                one: "{0} kWt",
                other: "{0} kWt"
            },
            powerWatt: {
                one: "{0} Wt",
                other: "{0} Wt"
            },
            powerMilliwatt: {
                one: "{0} mWt",
                other: "{0} mWt"
            },
            powerHorsepower: {
                one: "{0} a.g.",
                other: "{0} a.g."
            },
            pressureHectopascal: {
                one: "{0} gPa",
                other: "{0} gPa"
            },
            pressureMillimeterOfMercury: {
                one: "{0} s. s. mm",
                other: "{0} s. s. mm"
            },
            pressurePoundPerSquareInch: {
                one: "{0} f./dý²",
                other: "{0} f./dý²"
            },
            pressureInchHg: {
                one: "{0} s. s. dý.",
                other: "{0} s. s. dý."
            },
            pressureMillibar: {
                one: "{0} mbar",
                other: "{0} mbar"
            },
            speedKilometerPerHour: {
                one: "{0} km/sag",
                other: "{0} km/sag"
            },
            speedMeterPerSecond: {
                one: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: {
                one: "{0} mil/sag",
                other: "{0} mil/sag"
            },
            speedKnot: {
                one: "{0} uz.",
                other: "{0} uz."
            },
            temperatureGeneric: _7gcu5,
            temperatureCelsius: _7gcu11,
            temperatureFahrenheit: {
                one: "{0}°F",
                other: "{0}°F"
            },
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: {
                one: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMeter: {
                one: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} sm³",
                other: "{0} sm³"
            },
            volumeCubicMile: {
                one: "{0} mi³",
                other: "{0} mi³"
            },
            volumeCubicYard: {
                one: "{0} ýd³",
                other: "{0} ýd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: {
                one: "{0} dý³",
                other: "{0} dý³"
            },
            volumeMegaliter: {
                one: "{0} Ml",
                other: "{0} Ml"
            },
            volumeHectoliter: {
                one: "{0} gl",
                other: "{0} gl"
            },
            volumeLiter: {
                one: "{0} l",
                other: "{0} l"
            },
            volumeDeciliter: {
                one: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} sl",
                other: "{0} sl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                other: "{0} ml"
            },
            volumePintMetric: {
                one: "{0} mpt",
                other: "{0} mpt"
            },
            volumeCupMetric: {
                one: "{0} mkä",
                other: "{0} mkä"
            },
            volumeAcreFoot: {
                one: "{0} akft",
                other: "{0} akft"
            },
            volumeGallon: {
                one: "{0} gal.",
                other: "{0} gal."
            },
            volumeQuart: {
                one: "{0} kwt",
                other: "{0} kwt"
            },
            volumePint: {
                one: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: {
                one: "{0} kä",
                other: "{0} kä"
            },
            volumeFluidOunce: {
                one: "{0} suw. uns.",
                other: "{0} suw. uns."
            },
            volumeTablespoon: {
                one: "{0} n. ç.",
                other: "{0} n. ç."
            },
            volumeTeaspoon: {
                one: "{0} ç. ç.",
                other: "{0} ç. ç."
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            massStone: {
                other: "{0} st"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            "consumptionLiterPer-100kilometers": _7gcu98,
            durationYear: {
                one: "{0}ý",
                other: "{0}ý"
            },
            durationMonth: {
                one: "{0}a",
                other: "{0}a"
            },
            durationWeek: {
                one: "{0}h",
                other: "{0}h"
            },
            durationDay: _7gcu6,
            durationHour: {
                one: "{0}sg",
                other: "{0}sg"
            },
            durationMinute: _7gcu7,
            durationSecond: {
                one: "{0}se",
                other: "{0}se"
            },
            durationMillisecond: {
                one: "{0}ms",
                other: "{0}ms"
            },
            lengthKilometer: {
                one: "{0}km",
                other: "{0}km"
            },
            lengthMeter: _7gcu7,
            lengthCentimeter: {
                one: "{0}sm",
                other: "{0}sm"
            },
            lengthMillimeter: {
                one: "{0}mm",
                other: "{0}mm"
            },
            massKilogram: {
                one: "{0}kg",
                other: "{0}kg"
            },
            massGram: _7gcu6,
            speedKilometerPerHour: {
                one: "{0}km/sag",
                other: "{0}km/sag"
            },
            temperatureCelsius: _7gcu11,
            volumeLiter: {
                one: "{0}l",
                other: "{0}l"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "{0} wagty",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0}, tomusky wagt",
        standard: "{0}, standart wagt"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "b", "ç", "d", "e", "ä", "f", "g", "h", "i", "j", "ž", "k", "l", "m", "n", "ň", "o", "ö", "p", "r", "s", "ş", "t", "u", "ü", "w", "y", "ý", "z" ],
        auxiliary: [ "c", "q", "v", "x" ],
        index: [ "A", "B", "Ç", "D", "E", "Ä", "F", "G", "H", "I", "J", "Ž", "K", "L", "M", "N", "Ň", "O", "Ö", "P", "R", "S", "Ş", "T", "U", "Ü", "W", "Y", "Ý", "Z" ],
        punctuation: [ "\\-", "–", "—", ",", ";", "\\:", "!", "?", ".", "…", '"', "“", "”", "(", ")", "\\[", "\\]", "\\{", "\\}", "§", "@", "*", "#" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _7gcu213,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _7gcu256,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _7gcu256,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _7gcu213,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _7gcu213,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _7gcu213,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _7gcu213,
        digits: "renderEthiopic"
    },
    finance: _7gcu216,
    fullwide: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _7gcu213,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _7gcu213,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _7gcu213,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _7gcu213,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _7gcu222,
    hansfin: _7gcu224,
    hant: _7gcu222,
    hantfin: _7gcu224,
    hebr: {
        symbols: _7gcu213,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _7gcu213,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _7gcu222,
    jpanfin: _7gcu224,
    kali: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _7gcu213,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _7gcu213,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _7gcu213,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _7gcu213,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _7gcu213,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _7gcu213,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _7gcu213,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _7gcu213,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _7gcu216,
    nkoo: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _7gcu213,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _7gcu213,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _7gcu213,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _7gcu213,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _7gcu213,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _7gcu213,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _7gcu216,
    vaii: {
        symbols: _7gcu213,
        formats: _7gcu256,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _7gcu213,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _7gcu251,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7gcu248,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _7gcu237,
        dayPeriods: _7gcu215,
        monthNames: _7gcu242,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _7gcu219,
        fields: _7gcu257
    },
    chinese: _7gcu262,
    coptic: {
        dateFormats: _7gcu251,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7gcu248,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _7gcu237,
        dayPeriods: _7gcu215,
        monthNames: {
            format: _7gcu230,
            standAlone: _7gcu230
        },
        eraNames: _7gcu120,
        quarterNames: _7gcu219,
        fields: _7gcu257
    },
    dangi: _7gcu262,
    ethioaa: _7gcu258,
    ethiopic: {
        dateFormats: _7gcu251,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7gcu248,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _7gcu237,
        dayPeriods: _7gcu215,
        monthNames: {
            format: _7gcu232,
            standAlone: _7gcu232
        },
        eraNames: _7gcu120,
        quarterNames: _7gcu219,
        fields: _7gcu257
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "d MMMM y EEEE",
                longDate: "d MMMM y",
                mediumDate: "d MMM y",
                shortDate: "dd.MM.y",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "dd.MM.y HH:mm",
                mediumDateTime: "d MMM y HH:mm:ss",
                longDateTime: "d MMMM y HH:mm:ss z",
                fullDateTime: "d MMMM y EEEE HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                Ed: "d E",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                M: "L",
                Md: "dd.MM",
                MEd: "dd.MM E",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "d MMM E",
                MMMMd: "d MMMM",
                MMMMEd: "d MMMM E",
                mmss: "mm:ss",
                ms: "mm:ss",
                y: "y",
                yM: "MM.y",
                yMd: "dd.MM.y",
                yMEd: "dd.MM.y E",
                yMMM: "MMM y",
                yMMMd: "d MMM y",
                yMMMEd: "d MMM y E",
                yMMMM: "MMMM y",
                E: "ccc",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                yQQQ: "y QQQ",
                yQQQQ: "y QQQQ"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: _7gcu248,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _7gcu237,
        dayPeriods: _7gcu215,
        monthNames: _7gcu242,
        eraNames: {
            wide: [ "BCE", "CE" ],
            abbreviated: [ "BCE", "CE" ]
        },
        quarterNames: _7gcu219,
        fields: _7gcu257
    },
    hebrew: {
        dateFormats: _7gcu251,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7gcu248,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _7gcu237,
        dayPeriods: _7gcu215,
        monthNames: {
            format: _7gcu228,
            standAlone: _7gcu228
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _7gcu219,
        fields: _7gcu257
    },
    indian: {
        dateFormats: _7gcu251,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7gcu248,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _7gcu237,
        dayPeriods: _7gcu215,
        monthNames: {
            format: _7gcu233,
            standAlone: _7gcu233
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _7gcu219,
        fields: _7gcu257
    },
    islamic: _7gcu261,
    "islamic-umalqura": _7gcu261,
    "islamic-tbla": _7gcu261,
    "islamic-civil": _7gcu261,
    "islamic-rgsa": _7gcu261,
    iso8601: _7gcu258,
    japanese: {
        dateFormats: _7gcu251,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7gcu248,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _7gcu237,
        dayPeriods: _7gcu215,
        monthNames: _7gcu242,
        eraNames: {
            wide: _7gcu259,
            abbreviated: _7gcu259
        },
        quarterNames: _7gcu219,
        fields: _7gcu257
    },
    persian: {
        dateFormats: _7gcu251,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7gcu248,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _7gcu237,
        dayPeriods: _7gcu215,
        monthNames: {
            format: _7gcu229,
            standAlone: _7gcu229
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _7gcu219,
        fields: _7gcu257
    },
    roc: {
        dateFormats: _7gcu251,
        datePartsOrder: "dmy",
        dateIntervalFormats: _7gcu248,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _7gcu237,
        dayPeriods: _7gcu215,
        monthNames: _7gcu242,
        eraNames: {
            wide: _7gcu9,
            abbreviated: _7gcu9
        },
        quarterNames: _7gcu219,
        fields: _7gcu257
    },
    islamicc: _7gcu258
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat({
    id: "Pacific/Midway",
    utcStandardOffsetSeconds: -39600,
    displayName: "Midweý",
    countryId: "UM"
}, P.timeZones[1], {
    id: "Pacific/Pago_Pago",
    regionId: "061",
    utcStandardOffsetSeconds: -39600,
    displayName: "Pago-Pago",
    countryId: "AS"
}, {
    id: "America/Adak",
    regionId: "021",
    utcStandardOffsetSeconds: -36e3,
    displayName: "Adak adasy",
    countryId: "US"
}, {
    id: "Pacific/Honolulu",
    regionId: "021",
    utcStandardOffsetSeconds: -36e3,
    displayName: "Gonolulu",
    countryId: "US"
}, P.timeZones[5], {
    id: "Pacific/Tahiti",
    regionId: "061",
    utcStandardOffsetSeconds: -36e3,
    displayName: "Taýiti",
    countryId: "PF"
}, {
    id: "Pacific/Marquesas",
    regionId: "061",
    utcStandardOffsetSeconds: -34200,
    displayName: "Markiz adalary",
    countryId: "PF"
}, {
    id: "America/Anchorage",
    regionId: "021",
    utcStandardOffsetSeconds: -32400,
    displayName: "Ankoridž",
    countryId: "US"
}, {
    id: "America/Juneau",
    regionId: "021",
    utcStandardOffsetSeconds: -32400,
    displayName: "Džuno",
    countryId: "US"
}, {
    id: "Pacific/Gambier",
    regionId: "061",
    utcStandardOffsetSeconds: -32400,
    displayName: "Gambýe",
    countryId: "PF"
}, P.timeZones[11], {
    id: "America/Nome",
    regionId: "021",
    utcStandardOffsetSeconds: -32400,
    displayName: "Nom",
    countryId: "US"
}, P.timeZones[13], {
    id: "America/Yakutat",
    regionId: "021",
    utcStandardOffsetSeconds: -32400,
    displayName: "Ýakutat",
    countryId: "US"
}, {
    id: "America/Los_Angeles",
    regionId: "021",
    utcStandardOffsetSeconds: -28800,
    displayName: "Los-Anjeles",
    countryId: "US"
}, {
    id: "Pacific/Pitcairn",
    regionId: "061",
    utcStandardOffsetSeconds: -28800,
    displayName: "Pitkern",
    countryId: "PN"
}, {
    id: "America/Tijuana",
    regionId: "013",
    utcStandardOffsetSeconds: -28800,
    displayName: "Tihuana",
    countryId: "MX"
}, {
    id: "America/Vancouver",
    regionId: "021",
    utcStandardOffsetSeconds: -28800,
    displayName: "Wankuwer",
    countryId: "CA"
}, {
    id: "America/Boise",
    regionId: "021",
    utcStandardOffsetSeconds: -25200,
    displayName: "Boýse",
    countryId: "US"
}, P.timeZones[21], {
    id: "America/Denver",
    regionId: "021",
    utcStandardOffsetSeconds: -25200,
    displayName: "Denwer",
    countryId: "US"
}, {
    id: "America/Dawson",
    regionId: "021",
    utcStandardOffsetSeconds: -25200,
    displayName: "Douson",
    countryId: "CA"
}, {
    id: "America/Dawson_Creek",
    regionId: "021",
    utcStandardOffsetSeconds: -25200,
    displayName: "Dowson-Krik",
    countryId: "CA"
}, P.timeZones[26], {
    id: "America/Hermosillo",
    regionId: "013",
    utcStandardOffsetSeconds: -25200,
    displayName: "Ermosilo",
    countryId: "MX"
}, {
    id: "America/Phoenix",
    regionId: "021",
    utcStandardOffsetSeconds: -25200,
    displayName: "Feniks",
    countryId: "US"
}, P.timeZones[27], {
    id: "America/Inuvik",
    regionId: "021",
    utcStandardOffsetSeconds: -25200,
    displayName: "Inuwik",
    countryId: "CA"
}, {
    id: "America/Cambridge_Bay",
    regionId: "021",
    utcStandardOffsetSeconds: -25200,
    displayName: "Kembrij-Beý",
    countryId: "CA"
}, {
    id: "America/Creston",
    regionId: "021",
    utcStandardOffsetSeconds: -25200,
    displayName: "Kreston",
    countryId: "CA"
}, P.timeZones[30], {
    id: "America/Whitehorse",
    regionId: "021",
    utcStandardOffsetSeconds: -25200,
    displayName: "Waýthors",
    countryId: "CA"
}, {
    id: "America/Yellowknife",
    regionId: "021",
    utcStandardOffsetSeconds: -25200,
    displayName: "Ýellounaýf",
    countryId: "CA"
}, {
    id: "America/Bahia_Banderas",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Baiýa-de-Banderas",
    countryId: "MX"
}, {
    id: "America/Belize",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Beliz",
    countryId: "BZ"
}, {
    id: "America/North_Dakota/Beulah",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Boýla, Demirgazyk Dakota",
    countryId: "US"
}, {
    id: "America/El_Salvador",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "El Salwador",
    countryId: "SV"
}, {
    id: "Pacific/Galapagos",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Galapagos adalary",
    countryId: "EC"
}, {
    id: "America/Guatemala",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Gwatemala",
    countryId: "GT"
}, {
    id: "America/Costa_Rica",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Kosta-Rika",
    countryId: "CR"
}, P.timeZones.slice(46, 48), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mehiko",
    countryId: "MX"
}, {
    id: "America/Menominee",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Menomini",
    countryId: "US"
}, P.timeZones[49], {
    id: "America/Monterrey",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Monterreý",
    countryId: "MX"
}, {
    id: "America/Indiana/Knox",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Noks, Indiana",
    countryId: "US"
}, {
    id: "America/North_Dakota/New_Salem",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Nýu-Salem, D.g. Dakota",
    countryId: "US"
}, {
    id: "America/Ojinaga",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Ohinaga",
    countryId: "MX"
}, {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Pashi adasy",
    countryId: "CL"
}, {
    id: "America/Rankin_Inlet",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Rankin-Inlet",
    countryId: "CA"
}, {
    id: "America/Regina",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Rejaýna",
    countryId: "CA"
}, {
    id: "America/Resolute",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Rozulýut",
    countryId: "CA"
}, {
    id: "America/North_Dakota/Center",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Sentr, Demirgazyk Dakota",
    countryId: "US"
}, {
    id: "America/Swift_Current",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Swift-Karent",
    countryId: "CA"
}, {
    id: "America/Tegucigalpa",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Tegusigalpa",
    countryId: "HN"
}, {
    id: "America/Indiana/Tell_City",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Tell-Siti, Indiana",
    countryId: "US"
}, {
    id: "America/Winnipeg",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Winipeg",
    countryId: "CA"
}, {
    id: "America/Chicago",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Çikago",
    countryId: "US"
}, {
    id: "America/Chihuahua",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Çiuaua",
    countryId: "MX"
}, P.timeZones.slice(61, 63), P.timeZones[65], {
    id: "America/Eirunepe",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Eýrunepe",
    countryId: "BR"
}, {
    id: "America/Havana",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Gawana",
    countryId: "CU"
}, {
    id: "America/Grand_Turk",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Grand Türk",
    countryId: "TC"
}, {
    id: "America/Guayaquil",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Guýakil",
    countryId: "EC"
}, {
    id: "America/Iqaluit",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Ikaluit",
    countryId: "CA"
}, P.timeZones[70], {
    id: "America/Cancun",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Kankun",
    countryId: "MX"
}, {
    id: "America/Cayman",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Kaýman adalary",
    countryId: "KY"
}, P.timeZones.slice(73, 76), {
    id: "America/Kentucky/Monticello",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Montisello, Kentuki",
    countryId: "US"
}, P.timeZones[77], {
    id: "America/New_York",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Nýu-Ýork",
    countryId: "US"
}, P.timeZones.slice(79, 81), {
    id: "America/Port-au-Prince",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Port-o-Prens",
    countryId: "HT"
}, {
    id: "America/Rio_Branco",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Riu-Branku",
    countryId: "BR"
}, P.timeZones[83], {
    id: "America/Indiana/Winamac",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Winamak, Indiana",
    countryId: "US"
}, {
    id: "America/Indiana/Vincennes",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Winsens, Indiana",
    countryId: "US"
}, {
    id: "America/Indiana/Vevay",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Wiweý, Indiana",
    countryId: "US"
}, {
    id: "America/Jamaica",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Ýamaýka",
    countryId: "JM"
}, {
    id: "America/Anguilla",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Angilýa",
    countryId: "AI"
}, P.timeZones.slice(88, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunsýon",
    countryId: "PY"
}, P.timeZones.slice(91, 93), {
    id: "America/Blanc-Sablon",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Blank-Sablon",
    countryId: "CA"
}, {
    id: "America/Boa_Vista",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Boa-Wista",
    countryId: "BR"
}, {
    id: "America/Dominica",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Dominika",
    countryId: "DM"
}, {
    id: "America/Halifax",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Galifaks",
    countryId: "CA"
}, {
    id: "America/Guyana",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Gaýana",
    countryId: "GY"
}, {
    id: "America/Glace_Bay",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Gleýs-Beý",
    countryId: "CA"
}, P.timeZones[102], {
    id: "America/Goose_Bay",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Gus-Beý",
    countryId: "CA"
}, {
    id: "America/Guadeloupe",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Gwadelupa",
    countryId: "GP"
}, {
    id: "America/Campo_Grande",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Kampu-Grandi",
    countryId: "BR"
}, {
    id: "America/Caracas",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Karakas",
    countryId: "VE"
}, {
    id: "America/Kralendijk",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Kralendeýk",
    countryId: "BQ"
}, {
    id: "America/Cuiaba",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Kuýaba",
    countryId: "BR"
}, {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Kýurasao",
    countryId: "CW"
}, {
    id: "America/La_Paz",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "La-Pas",
    countryId: "BO"
}, {
    id: "America/Lower_Princes",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Lower-Prinses-Kuorter",
    countryId: "SX"
}, P.timeZones[109], {
    id: "America/Marigot",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Marigo",
    countryId: "MF"
}, {
    id: "America/Martinique",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Martinika",
    countryId: "MQ"
}, {
    id: "America/Moncton",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Monkton",
    countryId: "CA"
}, {
    id: "America/Montserrat",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Monserrat",
    countryId: "MS"
}, {
    id: "America/Port_of_Spain",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Port-of-Speýn",
    countryId: "TT"
}, {
    id: "America/Porto_Velho",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Portu-Welýu",
    countryId: "BR"
}, {
    id: "America/Puerto_Rico",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Puerto-Riko",
    countryId: "PR"
}, P.timeZones[117], {
    id: "America/Santo_Domingo",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Santo-Domingo",
    countryId: "DO"
}, {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Sen-Bartelmi",
    countryId: "BL"
}, {
    id: "America/St_Kitts",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Sent-Kits",
    countryId: "KN"
}, {
    id: "America/St_Lucia",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Sent-Lýusia",
    countryId: "LC"
}, {
    id: "America/St_Thomas",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Sent-Tomas",
    countryId: "VI"
}, {
    id: "America/St_Vincent",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Sent-Winsent",
    countryId: "VC"
}, P.timeZones[125], {
    id: "America/Thule",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Tule",
    countryId: "GL"
}, {
    id: "America/St_Johns",
    regionId: "021",
    utcStandardOffsetSeconds: -12600,
    displayName: "Sent-Džons",
    countryId: "CA"
}, {
    id: "America/Araguaina",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Araguaýna",
    countryId: "BR"
}, {
    id: "America/Bahia",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Baiýa",
    countryId: "BR"
}, {
    id: "America/Belem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Belen",
    countryId: "BR"
}, P.timeZones.slice(130, 132), P.timeZones.slice(133, 136), {
    id: "America/Cayenne",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Kaýenna",
    countryId: "GF"
}, {
    id: "America/Argentina/La_Rioja",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "La-Rioha",
    countryId: "AR"
}, {
    id: "America/Maceio",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Maseýo",
    countryId: "BR"
}, P.timeZones[138], {
    id: "America/Miquelon",
    regionId: "021",
    utcStandardOffsetSeconds: -10800,
    displayName: "Mikelon",
    countryId: "PM"
}, {
    id: "America/Montevideo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Montewideo",
    countryId: "UY"
}, P.timeZones.slice(141, 144), {
    id: "America/Recife",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Resifi",
    countryId: "BR"
}, {
    id: "America/Argentina/Rio_Gallegos",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Rio-Galegos",
    countryId: "AR"
}, {
    id: "Antarctica/Rothera",
    utcStandardOffsetSeconds: -10800,
    displayName: "Rotera",
    countryId: "AQ"
}, P.timeZones[147], {
    id: "America/Argentina/San_Juan",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "San-Huan",
    countryId: "AR"
}, {
    id: "America/Argentina/San_Luis",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "San-Luis",
    countryId: "AR"
}, {
    id: "America/Sao_Paulo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "San-Paulu",
    countryId: "BR"
}, P.timeZones[150], {
    id: "Atlantic/Stanley",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Stenli",
    countryId: "FK"
}, {
    id: "America/Argentina/Tucuman",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Tukuman",
    countryId: "AR"
}, {
    id: "America/Argentina/Ushuaia",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Uşuaýa",
    countryId: "AR"
}, {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Günorta Georgiýa",
    countryId: "GS"
}, P.timeZones.slice(155, 157), {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azor adalary",
    countryId: "PT"
}, {
    id: "America/Scoresbysund",
    regionId: "021",
    utcStandardOffsetSeconds: -3600,
    displayName: "Illokkortoormiut",
    countryId: "GL"
}, {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Kabo-Werde",
    countryId: "CV"
}, {
    id: "Africa/Abidjan",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Abijan",
    countryId: "CI"
}, {
    id: "Africa/Accra",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Akkra",
    countryId: "GH"
}, P.timeZones.slice(163, 165), {
    id: "Africa/Bissau",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Bisau",
    countryId: "GW"
}, P.timeZones[168], {
    id: "America/Danmarkshavn",
    regionId: "021",
    utcStandardOffsetSeconds: 0,
    displayName: "Denmarkshawn",
    countryId: "GL"
}, P.timeZones.slice(170, 172), {
    id: "Africa/Freetown",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Fritaun",
    countryId: "SL"
}, {
    id: "Europe/Guernsey",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Gernsi",
    countryId: "GG"
}, {
    id: "Europe/Jersey",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Jersi",
    countryId: "JE"
}, {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Kanar adalary",
    countryId: "ES"
}, {
    id: "Atlantic/St_Helena",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Keramatly Elena adalary",
    countryId: "SH"
}, {
    id: "Africa/Conakry",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Konakri",
    countryId: "GN"
}, {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lissabon",
    countryId: "PT"
}, P.timeZones.slice(177, 179), {
    id: "Atlantic/Madeira",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Madeýra adalary",
    countryId: "PT"
}, {
    id: "Europe/Isle_of_Man",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Men adasy",
    countryId: "IM"
}, {
    id: "Africa/Monrovia",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Monrowiýa",
    countryId: "LR"
}, {
    id: "Africa/Nouakchott",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Nuakşot",
    countryId: "MR"
}, {
    id: "Atlantic/Reykjavik",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Reýkýawik",
    countryId: "IS"
}, {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "San-Tome",
    countryId: "ST"
}, {
    id: "Antarctica/Troll",
    utcStandardOffsetSeconds: 0,
    displayName: "Trol",
    countryId: "AQ"
}, {
    id: "Africa/Ouagadougou",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Uagadugu",
    countryId: "BF"
}, {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Aljir",
    countryId: "DZ"
}, P.timeZones.slice(188, 190), {
    id: "Africa/Bangui",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bangi",
    countryId: "CF"
}, {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrad",
    countryId: "RS"
}, P.timeZones[192], {
    id: "Europe/Bratislava",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bratislawa",
    countryId: "SK"
}, {
    id: "Africa/Brazzaville",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "Brazzawil",
    countryId: "CG"
}, {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Brýussel",
    countryId: "BE"
}, {
    id: "Europe/Budapest",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Budapeşt",
    countryId: "HU"
}, {
    id: "Europe/Busingen",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Býuzingen",
    countryId: "DE"
}, {
    id: "Africa/Douala",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "Duala",
    countryId: "CM"
}, {
    id: "Africa/El_Aaiun",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "El-Aýun",
    countryId: "EH"
}, P.timeZones[203], {
    id: "Africa/Ndjamena",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "Jamena",
    countryId: "TD"
}, {
    id: "Africa/Casablanca",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Kasablanka",
    countryId: "MA"
}, {
    id: "Africa/Kinshasa",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "Kinşasa",
    countryId: "CD"
}, {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Kopengagen",
    countryId: "DK"
}, P.timeZones[205], {
    id: "Africa/Libreville",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "Librewil",
    countryId: "GA"
}, {
    id: "Arctic/Longyearbyen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Longir",
    countryId: "SJ"
}, P.timeZones[209], {
    id: "Europe/Ljubljana",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Lýublýana",
    countryId: "SI"
}, {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Lýuksemburg",
    countryId: "LU"
}, P.timeZones.slice(211, 214), {
    id: "Europe/Monaco",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Monako",
    countryId: "MC"
}, {
    id: "Africa/Niamey",
    regionId: "011",
    utcStandardOffsetSeconds: 3600,
    displayName: "Niameý",
    countryId: "NE"
}, P.timeZones[217], {
    id: "Europe/Paris",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Pariž",
    countryId: "FR"
}, {
    id: "Europe/Podgorica",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Podgorisa",
    countryId: "ME"
}, {
    id: "Africa/Porto-Novo",
    regionId: "011",
    utcStandardOffsetSeconds: 3600,
    displayName: "Porto-Nowo",
    countryId: "BJ"
}, {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Praga",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Rim",
    countryId: "IT"
}, {
    id: "Europe/San_Marino",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "San-Marino",
    countryId: "SM"
}, {
    id: "Europe/Sarajevo",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Saraýewo",
    countryId: "BA"
}, {
    id: "Africa/Ceuta",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Seuta",
    countryId: "ES"
}, {
    id: "Europe/Skopje",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Skopýe",
    countryId: "MK"
}, {
    id: "Europe/Stockholm",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Stokgolm",
    countryId: "SE"
}, {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tsýürih",
    countryId: "CH"
}, P.timeZones[228], {
    id: "Europe/Vaduz",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Waduz",
    countryId: "LI"
}, {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Warşawa",
    countryId: "PL"
}, {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Watikan",
    countryId: "VA"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Wena",
    countryId: "AT"
}, P.timeZones[233], {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Afiny",
    countryId: "GR"
}, {
    id: "Asia/Beirut",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Beýrut",
    countryId: "LB"
}, {
    id: "Africa/Blantyre",
    regionId: "014",
    utcStandardOffsetSeconds: 7200,
    displayName: "Blantaýr",
    countryId: "MW"
}, {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Buharest",
    countryId: "RO"
}, P.timeZones[239], P.timeZones.slice(242, 246), {
    id: "Africa/Khartoum",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Hartum",
    countryId: "SD"
}, P.timeZones[247], {
    id: "Asia/Hebron",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Hewron",
    countryId: "PS"
}, {
    id: "Asia/Jerusalem",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Iýerusalim",
    countryId: "IL"
}, P.timeZones[250], {
    id: "Africa/Cairo",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kair",
    countryId: "EG"
}, P.timeZones[251], P.timeZones[253], {
    id: "Europe/Chisinau",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kişinýow",
    countryId: "MD"
}, P.timeZones[254], {
    id: "Africa/Lubumbashi",
    regionId: "017",
    utcStandardOffsetSeconds: 7200,
    displayName: "Lubumbaşi",
    countryId: "CD"
}, P.timeZones.slice(256, 258), {
    id: "Europe/Mariehamn",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Mariýehamn",
    countryId: "AX"
}, P.timeZones.slice(259, 261), {
    id: "Asia/Nicosia",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Nikosiýa",
    countryId: "CY"
}, P.timeZones[262], {
    id: "Europe/Sofia",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Sofiýa",
    countryId: "BG"
}, {
    id: "Europe/Tallinn",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Tallin",
    countryId: "EE"
}, P.timeZones[265], {
    id: "Europe/Vilnius",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Wilnýus",
    countryId: "LT"
}, {
    id: "Africa/Windhoek",
    regionId: "018",
    utcStandardOffsetSeconds: 7200,
    displayName: "Windhuk",
    countryId: "NA"
}, {
    id: "Africa/Johannesburg",
    regionId: "018",
    utcStandardOffsetSeconds: 7200,
    displayName: "Ýohannesburg",
    countryId: "ZA"
}, {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Addid-Abeba",
    countryId: "ET"
}, P.timeZones.slice(269, 271), {
    id: "Indian/Antananarivo",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Antananariwu",
    countryId: "MG"
}, P.timeZones[272], {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdat",
    countryId: "IQ"
}, {
    id: "Asia/Bahrain",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bahreýn",
    countryId: "BH"
}, {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damask",
    countryId: "SY"
}, {
    id: "Africa/Dar_es_Salaam",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Dar-es-Salam",
    countryId: "TZ"
}, {
    id: "Asia/Riyadh",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Er-Riýad",
    countryId: "SA"
}, {
    id: "Africa/Djibouti",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Jibuti",
    countryId: "DJ"
}, P.timeZones[280], {
    id: "Asia/Qatar",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Katar",
    countryId: "QA"
}, P.timeZones[281], {
    id: "Indian/Comoro",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Komor adalary",
    countryId: "KM"
}, {
    id: "Asia/Kuwait",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Kuweýt",
    countryId: "KW"
}, {
    id: "Indian/Mayotte",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Maýotta",
    countryId: "YT"
}, P.timeZones[284], {
    id: "Africa/Mogadishu",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Mogadişo",
    countryId: "SO"
}, {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moskwa",
    countryId: "RU"
}, {
    id: "Africa/Nairobi",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Naýrobi",
    countryId: "KE"
}, P.timeZones[290], {
    id: "Europe/Istanbul",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Stambul",
    countryId: "TR"
}, {
    id: "Antarctica/Syowa",
    utcStandardOffsetSeconds: 10800,
    displayName: "Sýowa",
    countryId: "AQ"
}, {
    id: "Europe/Volgograd",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Wolgograd",
    countryId: "RU"
}, {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Tähran",
    countryId: "IR"
}, P.timeZones.slice(294, 296), {
    id: "Asia/Dubai",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Dubaý",
    countryId: "AE"
}, {
    id: "Asia/Muscat",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Maskat",
    countryId: "OM"
}, {
    id: "Indian/Mauritius",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Mawrikiý",
    countryId: "MU"
}, {
    id: "Indian/Mahe",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Maýe",
    countryId: "SC"
}, {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Reýunion",
    countryId: "RE"
}, P.timeZones.slice(301, 305), {
    id: "Asia/Yerevan",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Ýerewan",
    countryId: "AM"
}, P.timeZones[306], {
    id: "Asia/Aqtau",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aktau",
    countryId: "KZ"
}, {
    id: "Asia/Aqtobe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aktobe",
    countryId: "KZ"
}, P.timeZones[310], {
    id: "Asia/Ashgabat",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aşgabat",
    countryId: "TM"
}, {
    id: "Asia/Dushanbe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Duşanbe",
    countryId: "TJ"
}, {
    id: "Asia/Qyzylorda",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Gyzylorda",
    countryId: "KZ"
}, {
    id: "Asia/Karachi",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Karaçi",
    countryId: "PK"
}, {
    id: "Indian/Kerguelen",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Kergelen",
    countryId: "TF"
}, {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Maldiwler",
    countryId: "MV"
}, {
    id: "Antarctica/Mawson",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Mouson",
    countryId: "AQ"
}, P.timeZones[316], P.timeZones[318], {
    id: "Asia/Tashkent",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Taşkent",
    countryId: "UZ"
}, {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Ýekaterinburg",
    countryId: "RU"
}, P.timeZones[322], {
    id: "Asia/Colombo",
    regionId: "034",
    utcStandardOffsetSeconds: 19800,
    displayName: "Kolombo",
    countryId: "LK"
}, P.timeZones.slice(323, 325), {
    id: "Asia/Bishkek",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Bişkek",
    countryId: "KG"
}, {
    id: "Asia/Dhaka",
    regionId: "034",
    utcStandardOffsetSeconds: 21600,
    displayName: "Dakka",
    countryId: "BD"
}, P.timeZones.slice(328, 330), {
    id: "Asia/Thimphu",
    regionId: "034",
    utcStandardOffsetSeconds: 21600,
    displayName: "Timpu",
    countryId: "BT"
}, {
    id: "Asia/Urumqi",
    regionId: "030",
    utcStandardOffsetSeconds: 21600,
    displayName: "Urumçy",
    countryId: "CN"
}, {
    id: "Antarctica/Vostok",
    utcStandardOffsetSeconds: 21600,
    displayName: "Wostok",
    countryId: "AQ"
}, {
    id: "Indian/Chagos",
    utcStandardOffsetSeconds: 21600,
    displayName: "Çagos",
    countryId: "IO"
}, {
    id: "Indian/Cocos",
    utcStandardOffsetSeconds: 23400,
    displayName: "Kokos",
    countryId: "CC"
}, P.timeZones.slice(334, 337), {
    id: "Antarctica/Davis",
    utcStandardOffsetSeconds: 25200,
    displayName: "Deýwis",
    countryId: "AQ"
}, P.timeZones[339], {
    id: "Asia/Hovd",
    regionId: "030",
    utcStandardOffsetSeconds: 25200,
    displayName: "Howd",
    countryId: "MN"
}, P.timeZones[341], {
    id: "Asia/Krasnoyarsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Krasnoýarsk",
    countryId: "RU"
}, {
    id: "Indian/Christmas",
    utcStandardOffsetSeconds: 25200,
    displayName: "Krismas",
    countryId: "CX"
}, {
    id: "Asia/Novokuznetsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Nowokuznetsk",
    countryId: "RU"
}, {
    id: "Asia/Novosibirsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Nowosibirsk",
    countryId: "RU"
}, {
    id: "Asia/Phnom_Penh",
    regionId: "035",
    utcStandardOffsetSeconds: 25200,
    displayName: "Pnompen",
    countryId: "KH"
}, P.timeZones.slice(346, 348), {
    id: "Asia/Vientiane",
    regionId: "035",
    utcStandardOffsetSeconds: 25200,
    displayName: "Wýentýan",
    countryId: "LA"
}, {
    id: "Asia/Brunei",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Bruneý",
    countryId: "BN"
}, {
    id: "Asia/Hong_Kong",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Gonkong",
    countryId: "HK"
}, P.timeZones[352], {
    id: "Asia/Kuala_Lumpur",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Kuala-Lumpur",
    countryId: "MY"
}, {
    id: "Asia/Kuching",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Kuçing",
    countryId: "MY"
}, {
    id: "Asia/Macau",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Makao",
    countryId: "MO"
}, {
    id: "Asia/Makassar",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Makasar",
    countryId: "ID"
}, P.timeZones[357], {
    id: "Australia/Perth",
    regionId: "053",
    utcStandardOffsetSeconds: 28800,
    displayName: "Pert",
    countryId: "AU"
}, {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Singapur",
    countryId: "SG"
}, {
    id: "Asia/Taipei",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Taýbeý",
    countryId: "TW"
}, {
    id: "Asia/Ulaanbaatar",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Ulan-Bator",
    countryId: "MN"
}, {
    id: "Asia/Choibalsan",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Çoýbalsan",
    countryId: "MN"
}, {
    id: "Asia/Shanghai",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Şanhaý",
    countryId: "CN"
}, {
    id: "Australia/Eucla",
    regionId: "053",
    utcStandardOffsetSeconds: 31500,
    displayName: "Ýukla",
    countryId: "AU"
}, P.timeZones[365], {
    id: "Asia/Khandyga",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Handyga",
    countryId: "RU"
}, {
    id: "Asia/Jayapura",
    regionId: "035",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jaýapura",
    countryId: "ID"
}, P.timeZones[368], {
    id: "Asia/Pyongyang",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Phenýan",
    countryId: "KP"
}, {
    id: "Asia/Seoul",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Seul",
    countryId: "KR"
}, {
    id: "Asia/Tokyo",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tokýo",
    countryId: "JP"
}, {
    id: "Asia/Chita",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Çita",
    countryId: "RU"
}, {
    id: "Asia/Yakutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Ýakutsk",
    countryId: "RU"
}, {
    id: "Australia/Adelaide",
    regionId: "053",
    utcStandardOffsetSeconds: 34200,
    displayName: "Adelaýda",
    countryId: "AU"
}, {
    id: "Australia/Broken_Hill",
    regionId: "053",
    utcStandardOffsetSeconds: 34200,
    displayName: "Broken-Hil",
    countryId: "AU"
}, P.timeZones[375], {
    id: "Australia/Brisbane",
    regionId: "053",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Brisben",
    countryId: "AU"
}, P.timeZones[377], {
    id: "Antarctica/DumontDUrville",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Dýumon-d-Ýurwil",
    countryId: "AQ"
}, P.timeZones.slice(379, 382), {
    id: "Antarctica/Macquarie",
    regionId: "053",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Makkuari",
    countryId: "AU"
}, {
    id: "Australia/Melbourne",
    regionId: "053",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Melburn",
    countryId: "AU"
}, {
    id: "Pacific/Port_Moresby",
    regionId: "054",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Port-Morsbi",
    countryId: "PG"
}, {
    id: "Pacific/Saipan",
    regionId: "057",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Saýpan",
    countryId: "MP"
}, {
    id: "Australia/Sydney",
    regionId: "053",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Sidneý",
    countryId: "AU"
}, P.timeZones[387], {
    id: "Asia/Vladivostok",
    regionId: "151",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Wladiwostok",
    countryId: "RU"
}, {
    id: "Australia/Lord_Howe",
    regionId: "053",
    utcStandardOffsetSeconds: 37800,
    displayName: "Lord-Hau",
    countryId: "AU"
}, {
    id: "Pacific/Bougainville",
    regionId: "054",
    utcStandardOffsetSeconds: 39600,
    displayName: "Bugenwil",
    countryId: "PG"
}, P.timeZones[392], {
    id: "Pacific/Guadalcanal",
    regionId: "054",
    utcStandardOffsetSeconds: 39600,
    displayName: "Gwadalkanal",
    countryId: "SB"
}, {
    id: "Antarctica/Casey",
    utcStandardOffsetSeconds: 39600,
    displayName: "Keýsi",
    countryId: "AQ"
}, {
    id: "Pacific/Kosrae",
    regionId: "057",
    utcStandardOffsetSeconds: 39600,
    displayName: "Kosraýe",
    countryId: "FM"
}, P.timeZones.slice(395, 397), {
    id: "Pacific/Noumea",
    regionId: "054",
    utcStandardOffsetSeconds: 39600,
    displayName: "Numea",
    countryId: "NC"
}, P.timeZones[398], {
    id: "Asia/Sakhalin",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Sahalin",
    countryId: "RU"
}, P.timeZones.slice(400, 402), P.timeZones.slice(403, 405), {
    id: "Asia/Kamchatka",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Kamçatka",
    countryId: "RU"
}, {
    id: "Pacific/Kwajalein",
    regionId: "057",
    utcStandardOffsetSeconds: 43200,
    displayName: "Kwajaleýn",
    countryId: "MH"
}, P.timeZones[407], {
    id: "Antarctica/McMurdo",
    utcStandardOffsetSeconds: 43200,
    displayName: "Mak-Merdo",
    countryId: "AQ"
}, P.timeZones[409], {
    id: "Pacific/Auckland",
    regionId: "053",
    utcStandardOffsetSeconds: 43200,
    displayName: "Oklend",
    countryId: "NZ"
}, P.timeZones[410], {
    id: "Pacific/Wake",
    utcStandardOffsetSeconds: 43200,
    displayName: "Weýk",
    countryId: "UM"
}, {
    id: "Pacific/Wallis",
    regionId: "061",
    utcStandardOffsetSeconds: 43200,
    displayName: "Wollis",
    countryId: "WF"
}, {
    id: "Pacific/Chatham",
    regionId: "053",
    utcStandardOffsetSeconds: 45900,
    displayName: "Çatem",
    countryId: "NZ"
}, {
    id: "Pacific/Apia",
    regionId: "061",
    utcStandardOffsetSeconds: 46800,
    displayName: "Apiýa",
    countryId: "WS"
}, P.timeZones.slice(415, 419));

inter.territories = [ _7gcu140, _7gcu154, _7gcu155, _7gcu149, _7gcu118, _7gcu135, _7gcu150, _7gcu151, _7gcu136, _7gcu141, _7gcu142, _7gcu146, _7gcu143, _7gcu161, _7gcu144, _7gcu145, _7gcu156, _7gcu147 ];

inter.regions = [ _7gcu118 ];

inter.countries = [ _7gcu140, _7gcu154, _7gcu155, _7gcu149, _7gcu135, _7gcu150, _7gcu151, _7gcu136, _7gcu141, _7gcu142, _7gcu146, _7gcu143, _7gcu161, _7gcu144, _7gcu145, _7gcu156, _7gcu147 ];

inter.languages = [ {
    id: "az",
    displayName: "azerbaýjança",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "de",
    displayName: "nemisçe",
    nativeDisplayName: "Deutsch"
}, {
    id: "en",
    displayName: "iňlisçe",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "ispança",
    nativeDisplayName: "español"
}, {
    id: "fr",
    displayName: "fransuzça",
    nativeDisplayName: "français"
}, {
    id: "it",
    displayName: "italýança",
    nativeDisplayName: "italiano"
}, {
    id: "nl",
    displayName: "golland dilini",
    nativeDisplayName: "Nederlands"
}, {
    id: "uz",
    displayName: "özbekçe",
    nativeDisplayName: "o‘zbek"
}, {
    id: "tg",
    displayName: "täjikçe"
}, {
    id: "tk",
    displayName: "türkmençe",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "türkçe",
    nativeDisplayName: "Türkçe"
}, {
    id: "ky",
    displayName: "gyrgyzça",
    nativeDisplayName: "кыргызча"
}, {
    id: "ru",
    displayName: "orusça",
    nativeDisplayName: "русский"
}, {
    id: "uk",
    displayName: "ukrainça",
    nativeDisplayName: "українська"
}, {
    id: "kk",
    displayName: "gazakça",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "ermençe",
    nativeDisplayName: "հայերեն"
}, {
    id: "ar",
    displayName: "arapça",
    nativeDisplayName: "العربية"
}, {
    id: "fa",
    displayName: "parsça",
    nativeDisplayName: "فارسی"
}, {
    id: "ps",
    displayName: "paştoça",
    nativeDisplayName: "پښتو"
}, {
    id: "ka",
    displayName: "gruzinçe",
    nativeDisplayName: "ქართული"
}, {
    id: "zh",
    displayName: "hytaýça",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "ýaponça",
    nativeDisplayName: "日本語"
} ];

inter.scripts = [ {
    id: "Arab",
    displayName: "arap"
}, {
    id: "Cyrl",
    displayName: "kiril"
}, {
    id: "Latn",
    displayName: "latin"
} ];

inter.currencies = [ {
    id: "USD",
    displayName: "ABŞ dollary",
    symbol: "US$",
    one: "ABŞ dollary",
    other: "ABŞ dollary"
}, {
    id: "ALL",
    displayName: "Alban leki",
    symbol: "ALL",
    one: "alban leki",
    other: "alban leki"
}, {
    id: "DZD",
    displayName: "Aljir dinary",
    symbol: "DZD",
    one: "aljir dinary",
    other: "aljir dinary"
}, {
    id: "AOA",
    displayName: "Angol kwanzasy",
    symbol: "AOA",
    one: "angol kwanzasy",
    other: "angol kwanzasy"
}, {
    id: "ARS",
    displayName: "Argentin pesosy",
    symbol: "ARS",
    one: "argentin pesosy",
    other: "argentin pesosy"
}, {
    id: "AWG",
    displayName: "Aruba florini",
    symbol: "AWG",
    one: "aruba florini",
    other: "aruba florini"
}, {
    id: "AUD",
    displayName: "Awstraliýa dollary",
    symbol: "A$",
    one: "awstraliýa dollary",
    other: "awstraliýa dollary"
}, {
    id: "AZN",
    displayName: "Azerbaýjan manaty",
    symbol: "AZN",
    one: "azerbaýjan manaty",
    other: "azerbaýjan manaty"
}, {
    id: "AED",
    displayName: "BAE dirhemi",
    symbol: "AED",
    one: "BAE dirhemi",
    other: "BAE dirhemi"
}, {
    id: "BSD",
    displayName: "Bagama dollary",
    symbol: "BSD",
    one: "bagama dollary",
    other: "bagama dollary"
}, {
    id: "BHD",
    displayName: "Bahreýn dinary",
    symbol: "BHD",
    one: "bahreýn dinary",
    other: "bahreýn dinary"
}, {
    id: "BDT",
    displayName: "Bangladeş takasy",
    symbol: "BDT",
    one: "bangladeş takasy",
    other: "bangladeş takasy"
}, {
    id: "BBD",
    displayName: "Barbados dollary",
    symbol: "BBD",
    one: "barbados dollary",
    other: "barbados dollary"
}, {
    id: "BZD",
    displayName: "Beliz dollary",
    symbol: "BZD",
    one: "beliz dollary",
    other: "beliz dollary"
}, {
    id: "BYR",
    displayName: "Belorus rubly",
    symbol: "BYR",
    one: "belorus rubly",
    other: "belorus rubly"
}, {
    id: "BMD",
    displayName: "Bermuda dollary",
    symbol: "BMD",
    one: "bermuda dollary",
    other: "bermuda dollary"
}, {
    id: "BGN",
    displayName: "Bolgar lewy",
    symbol: "BGN",
    one: "bolgar lewy",
    other: "bolgar lewy"
}, {
    id: "BOB",
    displayName: "Boliwiýa boliwianosy",
    symbol: "BOB",
    one: "boliwiýa boliwianosy",
    other: "boliwiýa boliwianosy"
}, {
    id: "BWP",
    displayName: "Botswana pulasy",
    symbol: "BWP",
    one: "botswana pulasy",
    other: "botswana pulasy"
}, {
    id: "BRL",
    displayName: "Brazil realy",
    symbol: "R$",
    one: "brazil realy",
    other: "brazil realy"
}, {
    id: "BND",
    displayName: "Bruneý dollary",
    symbol: "BND",
    one: "bruneý dollary",
    other: "bruneý dollary"
}, {
    id: "BIF",
    displayName: "Burundiý franky",
    symbol: "BIF",
    one: "burundiý franky",
    other: "burundiý franky"
}, {
    id: "BTN",
    displayName: "Butan ngultrumy",
    symbol: "BTN",
    one: "butan ngultrumy",
    other: "butan ngultrumy"
}, {
    id: "DKK",
    displayName: "Daniýa kronasy",
    symbol: "DKK",
    one: "daniýa kronasy",
    other: "daniýa kronasy"
}, {
    id: "KPW",
    displayName: "Demirgazyk Koreýa wony",
    symbol: "KPW",
    one: "demirgazyk koreýa wony",
    other: "demirgazyk koreýa wony"
}, {
    id: "DOP",
    displayName: "Dominikan pesosy",
    symbol: "DOP",
    one: "dominikan pesosy",
    other: "dominikan pesosy"
}, {
    id: "ETB",
    displayName: "Efiopiýa byry",
    symbol: "ETB",
    one: "efiopiýa byry",
    other: "efiopiýa byry"
}, {
    id: "ERN",
    displayName: "Eritreýa nakfasy",
    symbol: "ERN",
    one: "eritreýa nakfasy",
    other: "eritreýa nakfasy"
}, {
    id: "AMD",
    displayName: "Ermeni dramy",
    symbol: "AMD",
    one: "ermeni dramy",
    other: "ermeni dramy"
}, {
    id: "IRR",
    displayName: "Eýran rialy",
    symbol: "IRR",
    one: "eýran rialy",
    other: "eýran rialy"
}, {
    id: "FJD",
    displayName: "Fiji dollary",
    symbol: "FJD",
    one: "fiji dollary",
    other: "fiji dollary"
}, {
    id: "PHP",
    displayName: "Filippin pesosy",
    symbol: "PHP",
    one: "filippin pesosy",
    other: "filippin pesosy"
}, {
    id: "FKP",
    displayName: "Folklend adalarynyň funty",
    symbol: "FKP",
    one: "folklend adalarynyň funty",
    other: "folklend adalarynyň funty"
}, {
    id: "XPF",
    displayName: "Fransuz ýuwaş umman franky",
    symbol: "CFPF",
    one: "fransuz ýuwaş umman franky",
    other: "fransuz ýuwaş umman franky"
}, {
    id: "HTG",
    displayName: "Gaitýan gurdy",
    symbol: "HTG",
    one: "gaitýan gurdy",
    other: "gaitýan gurdy"
}, {
    id: "GMD",
    displayName: "Gambiýa dalasy",
    symbol: "GMD",
    one: "gambiýa dalasy",
    other: "gambiýa dalasy"
}, {
    id: "GHS",
    displayName: "Gano sedisi",
    symbol: "GHS",
    one: "gano sedisi",
    other: "gano sedisi"
}, {
    id: "KZT",
    displayName: "Gazak teňňesi",
    symbol: "KZT",
    one: "gazak teňňesi",
    other: "gazak teňňesi"
}, {
    id: "GYD",
    displayName: "Gaýan dollary",
    symbol: "GYD",
    one: "gaýan dollary",
    other: "gaýan dollary"
}, {
    id: "GIP",
    displayName: "Gibraltar funty",
    symbol: "GIP",
    one: "gibraltar funty",
    other: "gibraltar funty"
}, {
    id: "HNL",
    displayName: "Gonduras lempirasy",
    symbol: "HNL",
    one: "gonduras lempirasy",
    other: "gonduras lempirasy"
}, {
    id: "HKD",
    displayName: "Gonkong dollary",
    symbol: "HK$",
    one: "gonkong dollary",
    other: "gonkong dollary"
}, {
    id: "GEL",
    displayName: "Gruzin lari",
    symbol: "GEL",
    one: "gruzin lari",
    other: "gruzin lari"
}, {
    id: "GTQ",
    displayName: "Gwatemala ketsaly",
    symbol: "GTQ",
    one: "gwatemala ketsaly",
    other: "gwatemala ketsaly"
}, {
    id: "GNF",
    displayName: "Gwineý franky",
    symbol: "GNF",
    one: "gwineý franky",
    other: "gwineý franky"
}, {
    id: "KGS",
    displayName: "Gyrgyz somy",
    symbol: "KGS",
    one: "gyrgyz somy",
    other: "gyrgyz somy"
}, {
    id: "XCD",
    displayName: "Gündogar karib dollary",
    symbol: "EC$",
    one: "gündogar karib dollary",
    other: "gündogar karib dollary"
}, {
    id: "ZAR",
    displayName: "Günorta Afrika rendi",
    symbol: "ZAR",
    one: "günorta afrika rendi",
    other: "günorta afrika rendi"
}, {
    id: "KRW",
    displayName: "Günorta Koreýa wony",
    symbol: "₩",
    one: "günorta koreýa wony",
    other: "günorta koreýa wony"
}, {
    id: "SSP",
    displayName: "Günorta sudan funty",
    symbol: "SSP",
    one: "günorta sudan funty",
    other: "günorta sudan funty"
}, {
    id: "INR",
    displayName: "Hindi rupiýasy",
    symbol: "₹",
    one: "hindi rupiýasy",
    other: "hindi rupiýasy"
}, {
    id: "HRK",
    displayName: "Horwat kunasy",
    symbol: "HRK",
    one: "horwat kunasy",
    other: "horwat kunasy"
}, {
    id: "CNY",
    displayName: "Hytaý ýuany",
    symbol: "CN¥",
    one: "hytaý ýuany",
    other: "hytaý ýuany"
}, {
    id: "IDR",
    displayName: "Indoneziýa rupiýasy",
    symbol: "IDR",
    one: "indoneziýa rupiýasy",
    other: "indoneziýa rupiýasy"
}, {
    id: "JOD",
    displayName: "Iordaniýa dinary",
    symbol: "JOD",
    one: "iordaniýa dinary",
    other: "iordaniýa dinary"
}, {
    id: "ISK",
    displayName: "Islandiýa kronasy",
    symbol: "ISK",
    one: "islandiýa kronasy",
    other: "islandiýa kronasy"
}, {
    id: "GBP",
    displayName: "Iňlis funt sterlingi",
    symbol: "GBP",
    one: "iňlis funt sterlingi",
    other: "iňlis funt sterlingi"
}, {
    id: "DJF",
    displayName: "Jibuti franky",
    symbol: "DJF",
    one: "jibuti franky",
    other: "jibuti franky"
}, {
    id: "XOF",
    displayName: "KFA BCEAO franky",
    symbol: "CFA",
    one: "KFA BCEAO franky",
    other: "KFA BCEAO franky"
}, {
    id: "XAF",
    displayName: "KFA BEAC franky",
    symbol: "FCFA",
    one: "KFA BEAC franky",
    other: "KFA BEAC franky"
}, {
    id: "CVE",
    displayName: "Kabo-Werde eskudosy",
    symbol: "CVE",
    one: "kabo-werde eskudosy",
    other: "kabo-werde eskudosy"
}, {
    id: "KHR",
    displayName: "Kamboja riýeli",
    symbol: "KHR",
    one: "kamboja riýeli",
    other: "kamboja riýeli"
}, {
    id: "CAD",
    displayName: "Kanada dollary",
    symbol: "CA$",
    one: "kanada dollary",
    other: "kanada dollary"
}, {
    id: "QAR",
    displayName: "Katar rialy",
    symbol: "QAR",
    one: "katar rialy",
    other: "katar rialy"
}, {
    id: "KYD",
    displayName: "Kaýman adalarynyň dollary",
    symbol: "KYD",
    one: "kaýman adalarynyň dollary",
    other: "kaýman adalarynyň dollary"
}, {
    id: "KES",
    displayName: "Keniýa şillingi",
    symbol: "KES",
    one: "keniýa şillingi",
    other: "keniýa şillingi"
}, {
    id: "SHP",
    displayName: "Keramatly Ýelena adasynyň funty",
    symbol: "SHP",
    one: "keramatly ýelena adasynyň funty",
    other: "keramatly ýelena adasynyň funty"
}, {
    id: "COP",
    displayName: "Kolumbiýa pesosy",
    symbol: "COP",
    one: "kolumbiýa pesosy",
    other: "kolumbiýa pesosy"
}, {
    id: "KMF",
    displayName: "Komor adalar franky",
    symbol: "KMF",
    one: "komor adalar franky",
    other: "komor adalar franky"
}, {
    id: "CDF",
    displayName: "Kongolez franky",
    symbol: "CDF",
    one: "kongolez franky",
    other: "kongolez franky"
}, {
    id: "BAM",
    displayName: "Konwertirlenýän bosniýa we gersogowina markasy",
    symbol: "BAM",
    one: "konwertirlenýän bosniýa we gersogowina markasy",
    other: "konwertirlenýän bosniýa we gersogowina markasy"
}, {
    id: "CUC",
    displayName: "Konwertirlenýän kuba pesosy",
    symbol: "CUC",
    one: "konwertirlenýän kuba pesosy",
    other: "konwertirlenýän kuba pesosy"
}, {
    id: "CRC",
    displayName: "Kosta-Rika kolony",
    symbol: "CRC",
    one: "kosta-rika kolony",
    other: "kosta-rika kolony"
}, {
    id: "CUP",
    displayName: "Kuba pesosy",
    symbol: "CUP",
    one: "kuba pesosy",
    other: "kuba pesosy"
}, {
    id: "KWD",
    displayName: "Kuweýt dinary",
    symbol: "KWD",
    one: "kuweýt dinary",
    other: "kuweýt dinary"
}, {
    id: "LAK",
    displayName: "Laos kipi",
    symbol: "LAK",
    one: "laos kipi",
    other: "laos kipi"
}, {
    id: "SLL",
    displayName: "Leon",
    symbol: "SLL",
    one: "leon",
    other: "leon"
}, {
    id: "LRD",
    displayName: "Liberiýa dollary",
    symbol: "LRD",
    one: "liberiýa dollary",
    other: "liberiýa dollary"
}, {
    id: "LBP",
    displayName: "Liwan funty",
    symbol: "LBP",
    one: "liwan funty",
    other: "liwan funty"
}, {
    id: "LYD",
    displayName: "Liwiýa dinary",
    symbol: "LYD",
    one: "liwiýa dinary",
    other: "liwiýa dinary"
}, {
    id: "MOP",
    displayName: "Makao patakasy",
    symbol: "MOP",
    one: "makao patakasy",
    other: "makao patakasy"
}, {
    id: "MKD",
    displayName: "Makedon dinary",
    symbol: "MKD",
    one: "makedon dinary",
    other: "makedon dinary"
}, {
    id: "MGA",
    displayName: "Malagasiý ariarisi",
    symbol: "MGA",
    one: "malagasiý ariarisi",
    other: "malagasiý ariarisi"
}, {
    id: "MWK",
    displayName: "Malawi kwaçasy",
    symbol: "MWK",
    one: "malawi kwaçasy",
    other: "malawi kwaçasy"
}, {
    id: "MYR",
    displayName: "Malaýziýa ringgiti",
    symbol: "MYR",
    one: "malaýziýa ringgiti",
    other: "malaýziýa ringgiti"
}, {
    id: "MVR",
    displayName: "Maldiw rufiýasy",
    symbol: "MVR",
    one: "maldiw rufiýasy",
    other: "maldiw rufiýasy"
}, {
    id: "MAD",
    displayName: "Marokka dirhamy",
    symbol: "MAD",
    one: "marokka dirhamy",
    other: "marokka dirhamy"
}, {
    id: "MUR",
    displayName: "Mawrikiý rupiýasy",
    symbol: "MUR",
    one: "mawrikiý rupiýasy",
    other: "mawrikiý rupiýasy"
}, {
    id: "MRO",
    displayName: "Mawritan ugiýasy",
    symbol: "MRO",
    one: "mawritan ugiýasy",
    other: "mawritan ugiýasy"
}, {
    id: "MXN",
    displayName: "Meksikan pesosy",
    symbol: "MX$",
    one: "meksikan pesosy",
    other: "meksikan pesosy"
}, {
    id: "MDL",
    displayName: "Moldaw leýi",
    symbol: "MDL",
    one: "moldaw leýi",
    other: "moldaw leýi"
}, {
    id: "MNT",
    displayName: "Mongol tugrigi",
    symbol: "MNT",
    one: "mongol tugrigi",
    other: "mongol tugrigi"
}, {
    id: "MZN",
    displayName: "Mozambik metikal",
    symbol: "MZN",
    one: "mozambik metikal",
    other: "mozambik metikal"
}, {
    id: "EGP",
    displayName: "Müsür funty",
    symbol: "EGP",
    one: "müsür funty",
    other: "müsür funty"
}, {
    id: "MMK",
    displayName: "Mýanma kýaty",
    symbol: "MMK",
    one: "mýanma kýaty",
    other: "mýanma kýaty"
}, {
    id: "NAD",
    displayName: "Namibiýa dollary",
    symbol: "NAD",
    one: "namibiýa dollary",
    other: "namibiýa dollary"
}, {
    id: "NPR",
    displayName: "Nepal rupiýasy",
    symbol: "NPR",
    one: "nepal rupiýasy",
    other: "nepal rupiýasy"
}, {
    id: "ANG",
    displayName: "Niderland antil guldeni",
    symbol: "ANG",
    one: "niderland antil guldeni",
    other: "niderland antil guldeni"
}, {
    id: "NGN",
    displayName: "Nigeriýa naýrasy",
    symbol: "NGN",
    one: "nigeriýa naýrasy",
    other: "nigeriýa naýrasy"
}, {
    id: "NIO",
    displayName: "Nikaragua kordobasy",
    symbol: "NIO",
    one: "nikaragua kordobasy",
    other: "nikaragua kordobasy"
}, {
    id: "NOK",
    displayName: "Norwegiýa kronasy",
    symbol: "NOK",
    one: "norwegiýa kronasy",
    other: "norwegiýa kronasy"
}, {
    id: "XXX",
    displayName: "Näbelli ýa-da ýöremeýän pul birligi",
    one: "näbelli ýa-da ýöremeýän pul birligi",
    other: "näbelli ýa-da ýöremeýän pul birligi"
}, {
    id: "OMR",
    displayName: "Oman rialy",
    symbol: "OMR",
    one: "oman rialy",
    other: "oman rialy"
}, {
    id: "AFN",
    displayName: "Owgan afganisi",
    symbol: "AFN",
    one: "owgan afganisi",
    other: "owgan afganisi"
}, {
    id: "PAB",
    displayName: "Panama balboasy",
    symbol: "PAB",
    one: "panama balboasy",
    other: "panama balboasy"
}, {
    id: "PGK",
    displayName: "Papua — Täze Gwineýa kinasy",
    symbol: "PGK",
    one: "papua — täze gwineýa kinasy",
    other: "papua — täze gwineýa kinasy"
}, {
    id: "PYG",
    displayName: "Paragwaý guarani",
    symbol: "PYG",
    one: "paragwaý guarani",
    other: "paragwaý guarani"
}, {
    id: "PLN",
    displayName: "Polýak zloty",
    symbol: "PLN",
    one: "polýak zloty",
    other: "polýak zloty"
}, {
    id: "PKR",
    displayName: "Päkistan rupiýasy",
    symbol: "PKR",
    one: "päkistan rupiýasy",
    other: "päkistan rupiýasy"
}, {
    id: "RON",
    displayName: "Rumyn leýi",
    symbol: "RON",
    one: "rumyn leýi",
    other: "rumyn leýi"
}, {
    id: "RUB",
    displayName: "Rus rubly",
    symbol: "RUB",
    one: "rus rubly",
    other: "rus rubly"
}, {
    id: "RWF",
    displayName: "Rwanda franky",
    symbol: "RWF",
    one: "rwanda franky",
    other: "rwanda franky"
}, {
    id: "WST",
    displayName: "Samoa talasy",
    symbol: "WST",
    one: "samoa talasy",
    other: "samoa talasy"
}, {
    id: "STD",
    displayName: "San-Tome we Prinsipi dobrasy",
    symbol: "STD",
    one: "san-tome we prinsipi dobrasy",
    other: "san-tome we prinsipi dobrasy"
}, {
    id: "SAR",
    displayName: "Saud rialy",
    symbol: "SAR",
    one: "saud rialy",
    other: "saud rialy"
}, {
    id: "RSD",
    displayName: "Serb dinary",
    symbol: "RSD",
    one: "serb dinary",
    other: "serb dinary"
}, {
    id: "SCR",
    displayName: "Seýşel rupiýasy",
    symbol: "SCR",
    one: "seýşel rupiýasy",
    other: "seýşel rupiýasy"
}, {
    id: "SGD",
    displayName: "Singapur dollary",
    symbol: "SGD",
    one: "singapur dollary",
    other: "singapur dollary"
}, {
    id: "SYP",
    displayName: "Siriýa funty",
    symbol: "SYP",
    one: "siriýa funty",
    other: "siriýa funty"
}, {
    id: "SBD",
    displayName: "Solomon adalarynyň dollary",
    symbol: "SBD",
    one: "solomon adalarynyň dollary",
    other: "solomon adalarynyň dollary"
}, {
    id: "SOS",
    displayName: "Somali şilingi",
    symbol: "SOS",
    one: "somali şilingi",
    other: "somali şilingi"
}, {
    id: "SDG",
    displayName: "Sudan funty",
    symbol: "SDG",
    one: "sudan funty",
    other: "sudan funty"
}, {
    id: "SRD",
    displayName: "Surinam dollary",
    symbol: "SRD",
    one: "surinam dollary",
    other: "surinam dollary"
}, {
    id: "SZL",
    displayName: "Swazi lilangeni",
    symbol: "SZL",
    one: "swazi lilangeni",
    other: "swazi lilangeni"
}, {
    id: "TZS",
    displayName: "Tanzaniýa şilingi",
    symbol: "TZS",
    one: "tanzaniýa şilingi",
    other: "tanzaniýa şilingi"
}, {
    id: "THB",
    displayName: "Taýland baty",
    symbol: "THB",
    one: "taýland baty",
    other: "taýland baty"
}, {
    id: "TOP",
    displayName: "Tonga paangasy",
    symbol: "TOP",
    one: "tonga paangasy",
    other: "tonga paangasy"
}, {
    id: "TTD",
    displayName: "Trininad we Tobago dollary",
    symbol: "TTD",
    one: "trininad we tobago dollary",
    other: "trininad we tobago dollary"
}, {
    id: "TND",
    displayName: "Tunis dinary",
    symbol: "TND",
    one: "tunis dinary",
    other: "tunis dinary"
}, {
    id: "TJS",
    displayName: "Täjik somonisy",
    symbol: "TJS",
    one: "täjik somonisy",
    other: "täjik somonisy"
}, {
    id: "TWD",
    displayName: "Täze Taýwan dollary",
    symbol: "NT$",
    one: "täze taýwan dollary",
    other: "täze taýwan dollary"
}, {
    id: "ILS",
    displayName: "Täze Ysraýyl şekeli",
    symbol: "₪",
    one: "täze ysraýyl şekeli",
    other: "täze ysraýl şekeli"
}, {
    id: "NZD",
    displayName: "Täze Zelandiýa dollary",
    symbol: "NZ$",
    one: "täze zelandiýa dollary",
    other: "täze zelandiýa dollary"
}, {
    id: "PEN",
    displayName: "Täze peru soly",
    symbol: "PEN",
    one: "täze peru soly",
    other: "täze peru soly"
}, {
    id: "TRY",
    displayName: "Türk lirasy",
    symbol: "TRY",
    one: "türk lirasy",
    other: "türk lirasy"
}, {
    id: "TMT",
    displayName: "Türkmen manaty",
    symbol: "TMT",
    one: "türkmen manaty",
    other: "türkmen manaty"
}, {
    id: "UGX",
    displayName: "Uganda şilingi",
    symbol: "UGX",
    one: "uganda şilingi",
    other: "uganda şilingi"
}, {
    id: "UAH",
    displayName: "Ukrain griwnasy",
    symbol: "UAH",
    one: "ukrain griwnasy",
    other: "ukrain griwnasy"
}, {
    id: "UYU",
    displayName: "Urugwaý pesosy",
    symbol: "UYU",
    one: "urugwaý pesosy",
    other: "urugwaý pesosy"
}, {
    id: "VUV",
    displayName: "Wanuatu watusy",
    symbol: "VUV",
    one: "wanuatu watusy",
    other: "wanuatu watusy"
}, {
    id: "VEF",
    displayName: "Wenezuela boliwary",
    symbol: "VEF",
    one: "wenezuela boliwary",
    other: "wenezuela boliwary"
}, {
    id: "HUF",
    displayName: "Wenger forinty",
    symbol: "HUF",
    one: "wenger forinty",
    other: "wenger forinty"
}, {
    id: "VND",
    displayName: "Wýetnam dongy",
    symbol: "₫",
    one: "wýetnam dongy",
    other: "wýetnam dongy"
}, {
    id: "IQD",
    displayName: "Yrak dinary",
    symbol: "IQD",
    one: "yrak dinary",
    other: "yrak dinary"
}, {
    id: "ZMW",
    displayName: "Zambiýa kwaçasy",
    symbol: "ZMW",
    one: "zambiýa kwaçasy",
    other: "zambiýa kwaçasy"
}, {
    id: "CZK",
    displayName: "Çeh kronasy",
    symbol: "CZK",
    one: "çeh kronasy",
    other: "çeh kronasy"
}, {
    id: "CLP",
    displayName: "Çili pesosy",
    symbol: "CLP",
    one: "çili pesosy",
    other: "çili pesosy"
}, {
    id: "UZS",
    displayName: "Özbek somy",
    symbol: "UZS",
    one: "özbek somy",
    other: "özbek somy"
}, {
    id: "JMD",
    displayName: "Ýamaýka dollary",
    symbol: "JMD",
    one: "ýamaýka dollary",
    other: "ýamaýka dollary"
}, {
    id: "JPY",
    displayName: "Ýapon ýeni",
    symbol: "JP¥",
    one: "ýapon ýeni",
    other: "ýapon ýeni"
}, {
    id: "YER",
    displayName: "Ýemen rialy",
    symbol: "YER",
    one: "ýemen rialy",
    other: "ýemen rialy"
}, {
    id: "EUR",
    displayName: "Ýewro",
    symbol: "EUR",
    one: "ýewro",
    other: "ýewro"
}, {
    id: "LKR",
    displayName: "Şri-Lanka rupiýasy",
    symbol: "LKR",
    one: "şri-lanka rupiýasy",
    other: "şri-lanka rupiýasy"
}, {
    id: "SEK",
    displayName: "Şwed kronasy",
    symbol: "SEK",
    one: "şwed kronasy",
    other: "şwed kronasy"
}, {
    id: "CHF",
    displayName: "Şweýsar franky",
    symbol: "CHF",
    one: "şweýsar franky",
    other: "şweýsar franky"
} ];

module.exports = inter;