function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./sr_latn.js"), inter = defaults({
    renderers: {}
}, P);

var _78jx1 = [ "K1", "K2", "K3", "K4" ], _78jx2 = [ "1.", "2.", "3.", "4." ], _78jx3 = {
    all: {
        leap: "{0}bis"
    }
}, _78jx4 = {
    a: "h a – h a",
    h: "h–h a"
}, _78jx5 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _78jx6 = [ "n", "p", "u", "s", "č", "p", "s" ], _78jx7 = {
    displayName: "dan u nedelji"
}, _78jx8 = {
    displayName: "vremenska zona"
}, _78jx9 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _78jx10 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _78jx11 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _78jx12 = {
    H: "HH.mm–HH.mm",
    m: "HH.mm–HH.mm"
}, _78jx13 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _78jx14 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _78jx15 = {
    displayName: "pre podne/po podne"
}, _78jx16 = [ "ne", "po", "ut", "sr", "če", "pe", "su" ], _78jx17 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _78jx18 = {
    H: "HH.mm–HH.mm v",
    m: "HH.mm–HH.mm v"
}, _78jx19 = {
    M: "MMM–MMM y.",
    y: "MMM y – MMM y. G"
}, _78jx20 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _78jx21 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _78jx22 = {
    M: "y-MM – MM",
    y: "MMMM y – MMMM y. G"
}, _78jx23 = {
    d: "dd – dd. MMM",
    M: "dd. MMM – dd. MMM"
}, _78jx24 = [ "ned", "pon", "uto", "sre", "čet", "pet", "sub" ], _78jx25 = {
    "0": "u ned",
    "1": "sledeće ned",
    "-1": "prošle ned"
}, _78jx26 = {
    "0": "u sre",
    "1": "sledeće sre",
    "-1": "prošle sre"
}, _78jx27 = {
    "0": "u sub",
    "1": "sledeće sub",
    "-1": "prošle sub"
}, _78jx28 = {
    "0": "u pon",
    "1": "sledećeg pon",
    "-1": "prošlog pon"
}, _78jx29 = {
    "0": "u uto",
    "1": "sledećeg uto",
    "-1": "prošlog uto"
}, _78jx30 = {
    "0": "u čet",
    "1": "sledećeg čet",
    "-1": "prošlog čet"
}, _78jx31 = {
    "0": "u pet",
    "1": "sledećeg pet",
    "-1": "prošlog pet"
}, _78jx32 = {
    d: "E, MM-dd – E, MM-dd",
    M: "E, MM-dd – E, MM-dd"
}, _78jx33 = [ "j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d" ], _78jx34 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _78jx35 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _78jx36 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _78jx37 = {
    one: "za {0} g.",
    few: "za {0} g.",
    other: "za {0} g."
}, _78jx38 = {
    one: "za {0} m.",
    few: "za {0} m.",
    other: "za {0} m."
}, _78jx39 = {
    one: "za {0} n.",
    few: "za {0} n.",
    other: "za {0} n."
}, _78jx40 = {
    one: "za {0} d.",
    few: "za {0} d.",
    other: "za {0} d."
}, _78jx41 = {
    one: "za {0} č.",
    few: "za {0} č.",
    other: "za {0} č."
}, _78jx42 = {
    one: "za {0} s.",
    few: "za {0} s.",
    other: "za {0} s."
}, _78jx43 = {
    "0": "u sredu",
    "1": "sledeće srede",
    "-1": "prošle srede"
}, _78jx44 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _78jx45 = {
    a: "h.mm a – h.mm a",
    h: "h.mm–h.mm a",
    m: "h.mm–h.mm a"
}, _78jx46 = {
    d: "E, dd. – E, dd. MMM",
    M: "E, dd. MMM – E, dd. MMM"
}, _78jx47 = {
    "0": "u petak",
    "1": "sledećeg petka",
    "-1": "prošlog petka"
}, _78jx48 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _78jx49 = {
    one: "pre {0} g.",
    few: "pre {0} g.",
    other: "pre {0} g."
}, _78jx50 = {
    one: "za {0} kv.",
    few: "za {0} kv.",
    other: "za {0} kv."
}, _78jx51 = {
    one: "pre {0} m.",
    few: "pre {0} m.",
    other: "pre {0} m."
}, _78jx52 = {
    one: "pre {0} n.",
    few: "pre {0} n.",
    other: "pre {0} n."
}, _78jx53 = {
    one: "pre {0} d.",
    few: "pre {0} d.",
    other: "pre {0} d."
}, _78jx54 = {
    one: "pre {0} č.",
    few: "pre {0} č.",
    other: "pre {0} č."
}, _78jx55 = {
    one: "pre {0} s.",
    few: "pre {0} s.",
    other: "pre {0} s."
}, _78jx56 = {
    "0": "u subotu",
    "1": "sledeće subote",
    "-1": "prošle subote"
}, _78jx57 = {
    "0": "ove godine",
    "1": "sledeće godine",
    "-1": "prošle godine"
}, _78jx58 = {
    one: "za {0} dan",
    few: "za {0} dana",
    other: "za {0} dana"
}, _78jx59 = {
    one: "za {0} sat",
    few: "za {0} sata",
    other: "za {0} sati"
}, _78jx60 = {
    relative: _78jx25
}, _78jx61 = {
    "0": "u utorak",
    "1": "sledećeg utorka",
    "-1": "prošlog utorka"
}, _78jx62 = {
    relative: _78jx26
}, _78jx63 = {
    relative: _78jx27
}, _78jx64 = {
    one: "za {0} god.",
    few: "za {0} god.",
    other: "za {0} god."
}, _78jx65 = {
    one: "pre {0} kv.",
    few: "pre {0} kv.",
    other: "pre {0} kv."
}, _78jx66 = {
    one: "za {0} mes.",
    few: "za {0} mes.",
    other: "za {0} mes."
}, _78jx67 = {
    one: "za {0} ned.",
    few: "za {0} ned.",
    other: "za {0} ned."
}, _78jx68 = {
    one: "za {0} min.",
    few: "za {0} min.",
    other: "za {0} min."
}, _78jx69 = {
    one: "za {0} sek.",
    few: "za {0} sek.",
    other: "za {0} sek."
}, _78jx70 = {
    "0": "u nedelju",
    "1": "sledeće nedelje",
    "-1": "prošle nedelje"
}, _78jx71 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _78jx72 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _78jx73 = {
    relative: _78jx28
}, _78jx74 = {
    relative: _78jx29
}, _78jx75 = {
    relative: _78jx30
}, _78jx76 = {
    relative: _78jx31
}, _78jx77 = {
    a: "h.mm a – h.mm a v",
    h: "h.mm–h.mm a v",
    m: "h.mm–h.mm a v"
}, _78jx78 = {
    "0": "ovog meseca",
    "1": "sledećeg meseca",
    "-1": "prošlog meseca"
}, _78jx79 = {
    "0": "ove nedelje",
    "1": "sledeće nedelje",
    "-1": "prošle nedelje"
}, _78jx80 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _78jx81 = {
    one: "pre {0} god.",
    few: "pre {0} god.",
    other: "pre {0} god."
}, _78jx82 = {
    one: "pre {0} mes.",
    few: "pre {0} mes.",
    other: "pre {0} mes."
}, _78jx83 = {
    one: "pre {0} ned.",
    few: "pre {0} ned.",
    other: "pre {0} ned."
}, _78jx84 = {
    one: "pre {0} dana",
    few: "pre {0} dana",
    other: "pre {0} dana"
}, _78jx85 = {
    one: "pre {0} sata",
    few: "pre {0} sata",
    other: "pre {0} sati"
}, _78jx86 = {
    one: "pre {0} min.",
    few: "pre {0} min.",
    other: "pre {0} min."
}, _78jx87 = {
    one: "pre {0} sek.",
    few: "pre {0} sek.",
    other: "pre {0} sek."
}, _78jx88 = {
    one: "za {0} mesec",
    few: "za {0} meseca",
    other: "za {0} meseci"
}, _78jx89 = {
    one: "za {0} minut",
    few: "za {0} minuta",
    other: "za {0} minuta"
}, _78jx90 = {
    relative: _78jx43
}, _78jx91 = {
    "0": "u četvrtak",
    "1": "sledećeg četvrtka",
    "-1": "prošlog četvrtka"
}, _78jx92 = {
    one: "za {0} godinu",
    few: "za {0} godine",
    other: "za {0} godina"
}, _78jx93 = {
    "0": "danas",
    "1": "sutra",
    "2": "prekosutra",
    "-2": "prekjuče",
    "-1": "juče"
}, _78jx94 = {
    relative: _78jx47
}, _78jx95 = {
    "0": "ovog kvartala",
    "1": "sledećeg kvartala",
    "-1": "prošlog kvartala"
}, _78jx96 = {
    relative: _78jx56
}, _78jx97 = [ "prvi kvartal", "drugi kvartal", "treći kvartal", "četvrti kvartal" ], _78jx98 = {
    one: "pre {0} godine",
    few: "pre {0} godine",
    other: "pre {0} godina"
}, _78jx99 = {
    one: "pre {0} meseca",
    few: "pre {0} meseca",
    other: "pre {0} meseci"
}, _78jx100 = {
    one: "za {0} nedelju",
    few: "za {0} nedelje",
    other: "za {0} nedelja"
}, _78jx101 = {
    one: "pre {0} minuta",
    few: "pre {0} minuta",
    other: "pre {0} minuta"
}, _78jx102 = {
    one: "za {0} sekundu",
    few: "za {0} sekunde",
    other: "za {0} sekundi"
}, _78jx103 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _78jx104 = {
    relative: _78jx61
}, _78jx105 = {
    one: "za {0} kvartal",
    few: "za {0} kvartala",
    other: "za {0} kvartala"
}, _78jx106 = {
    relative: _78jx70
}, _78jx107 = {
    "0": "u ponedeljak",
    "1": "sledećeg ponedeljka",
    "-1": "prošlog ponedeljka"
}, _78jx108 = [ "nedelja", "ponedeljak", "utorak", "sreda", "četvrtak", "petak", "subota" ], _78jx109 = {
    one: "pre {0} nedelje",
    few: "pre {0} nedelje",
    other: "pre {0} nedelja"
}, _78jx110 = {
    one: "pre {0} sekunde",
    few: "pre {0} sekunde",
    other: "pre {0} sekundi"
}, _78jx111 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _78jx112 = {
    one: "pre {0} kvartala",
    few: "pre {0} kvartala",
    other: "pre {0} kvartala"
}, _78jx113 = {
    d: "dd.–dd. MMM y.",
    M: "dd. MMM – dd. MMM y.",
    y: "dd. MMM y. – dd. MMM y."
}, _78jx114 = [ "jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec" ], _78jx115 = {
    relative: _78jx91
}, _78jx116 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _78jx117 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _78jx118 = {
    relative: _78jx107
}, _78jx119 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _78jx120 = {
    d: "E, y-MM-dd – E, y-MM-dd",
    M: "E, y-MM-dd – E, y-MM-dd",
    y: "E, y-MM-dd – E, y-MM-dd"
}, _78jx121 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _78jx122 = {
    d: "E, dd. – E, dd. MMM y.",
    M: "E, dd. MMM – E, dd. MMM y.",
    y: "E, dd. MMM y. – E, dd. MMM y."
}, _78jx123 = [ "Muh.", "Saf.", "Reb. 1", "Reb. 2", "Džum. 1", "Džum. 2", "Redž.", "Ša.", "Ram.", "Še.", "Zul-k.", "Zul-h." ], _78jx124 = [ "Tišri", "Hešvan", "Kislev", "Tevet", "Ševat", "Adar I", "Adar", "Nisan", "Ijar", "Sivan", "Tamuz", "Av", "Elul" ], _78jx125 = [ "januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar" ], _78jx126 = [ "Faravadin", "Ordibehešt", "Kordad", "Tir", "Mordad", "Šahrivar", "Mehr", "Aban", "Azar", "Dej", "Bahman", "Esfand" ], _78jx127 = [ "Taut", "Baba", "Hator", "Kiahk", "Toba", "Amšir", "Baramhat", "Baramuda", "Bašans", "Paona", "Epep", "Mesra", "Nasi" ], _78jx128 = [ "Čaitra", "Vaisaka", "Jiaista", "Asada", "Sravana", "Badra", "Asvina", "Kartika", "Argajana", "Pauza", "Maga", "Falguna" ], _78jx129 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Jekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehase", "Pagumen" ], _78jx130 = {
    midnight: "u ponoć",
    am: "a",
    noon: "u podne",
    pm: "p",
    morning1: "ujutru",
    afternoon1: "po podne",
    evening1: "uveče",
    night1: "noću"
}, _78jx131 = {
    future: _78jx37,
    past: _78jx49
}, _78jx132 = {
    future: _78jx38,
    past: _78jx51
}, _78jx133 = {
    future: _78jx39,
    past: _78jx52
}, _78jx134 = {
    future: _78jx40,
    past: _78jx53
}, _78jx135 = {
    future: _78jx41,
    past: _78jx54
}, _78jx136 = {
    future: _78jx42,
    past: _78jx55
}, _78jx137 = [ "Muharem", "Safer", "Rebi 1", "Rebi 2", "Džumade 1", "Džumade 2", "Redžeb", "Šaʻban", "Ramazan", "Ševal", "Zul-kade", "Zul-hidže" ], _78jx138 = [ "Muraham", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rađab", "Šaʻban", "Ramadan", "Šaval", "Duʻl-Kiʻda", "Duʻl-hiđa" ], _78jx139 = {
    future: _78jx50,
    past: _78jx65
}, _78jx140 = {
    midnight: "ponoć",
    am: "pre podne",
    noon: "podne",
    pm: "po podne",
    morning1: "jutro",
    afternoon1: "po pod.",
    evening1: "veče",
    night1: "noć"
}, _78jx141 = {
    midnight: "ponoć",
    am: "pre podne",
    noon: "podne",
    pm: "po podne",
    morning1: "jutro",
    afternoon1: "popodne",
    evening1: "veče",
    night1: "noć"
}, _78jx142 = {
    future: _78jx58,
    past: _78jx84
}, _78jx143 = {
    future: _78jx59,
    past: _78jx85
}, _78jx144 = {
    future: _78jx64,
    past: _78jx81
}, _78jx145 = {
    future: _78jx66,
    past: _78jx82
}, _78jx146 = {
    future: _78jx67,
    past: _78jx83
}, _78jx147 = {
    future: _78jx68,
    past: _78jx86
}, _78jx148 = {
    future: _78jx69,
    past: _78jx87
}, _78jx149 = {
    abbreviated: _78jx1,
    narrow: _78jx2,
    wide: _78jx97
}, _78jx150 = {
    future: _78jx88,
    past: _78jx99
}, _78jx151 = {
    future: _78jx89,
    past: _78jx101
}, _78jx152 = {
    future: _78jx92,
    past: _78jx98
}, _78jx153 = {
    future: _78jx100,
    past: _78jx109
}, _78jx154 = {
    future: _78jx102,
    past: _78jx110
}, _78jx155 = {
    displayName: "g.",
    relativeTime: _78jx131
}, _78jx156 = {
    displayName: "m.",
    relativeTime: _78jx132
}, _78jx157 = {
    displayName: "n.",
    relativeTime: _78jx133
}, _78jx158 = {
    displayName: "d.",
    relativeTime: _78jx134
}, _78jx159 = {
    displayName: "č.",
    relativeTime: _78jx135
}, _78jx160 = {
    displayName: "s.",
    relativeTime: _78jx136
}, _78jx161 = {
    future: _78jx105,
    past: _78jx112
}, _78jx162 = {
    displayName: "sat",
    relativeTime: _78jx143
}, _78jx163 = {
    displayName: "god.",
    relativeTime: _78jx144
}, _78jx164 = {
    displayName: "mes.",
    relativeTime: _78jx145
}, _78jx165 = {
    displayName: "ned.",
    relativeTime: _78jx146
}, _78jx166 = {
    displayName: "min.",
    relativeTime: _78jx147
}, _78jx167 = {
    displayName: "sek.",
    relativeTime: _78jx148
}, _78jx168 = {
    displayName: "minut",
    relativeTime: _78jx151
}, _78jx169 = {
    format: _78jx111,
    numeric: _78jx3,
    standAlone: _78jx111
}, _78jx170 = {
    displayName: "sekund",
    relative: [ "sada" ],
    relativeTime: _78jx154
}, _78jx171 = {
    abbreviated: _78jx24,
    narrow: _78jx6,
    wide: _78jx108,
    "short": _78jx16
}, _78jx172 = {
    abbreviated: _78jx24,
    narrow: _78jx6,
    wide: _78jx108,
    "short": _78jx24
}, _78jx173 = {
    abbreviated: _78jx116,
    narrow: _78jx44,
    wide: _78jx116
}, _78jx174 = {
    displayName: "kv.",
    relative: _78jx95,
    relativeTime: _78jx139
}, _78jx175 = {
    displayName: "dan",
    relative: _78jx93,
    relativeTime: _78jx142
}, _78jx176 = {
    displayName: "godina",
    relative: _78jx57,
    relativeTime: _78jx152
}, _78jx177 = {
    displayName: "mesec",
    relative: _78jx78,
    relativeTime: _78jx150
}, _78jx178 = {
    abbreviated: _78jx114,
    narrow: _78jx33,
    wide: _78jx125
}, _78jx179 = {
    displayName: "nedelja",
    relative: _78jx79,
    relativeTime: _78jx153
}, _78jx180 = {
    abbreviated: _78jx117,
    narrow: _78jx117,
    wide: _78jx117
}, _78jx181 = {
    format: _78jx180
}, _78jx182 = {
    displayName: "kvartal",
    relative: _78jx95,
    relativeTime: _78jx161
}, _78jx183 = {
    abbreviated: _78jx124,
    narrow: _78jx72,
    wide: _78jx124
}, _78jx184 = {
    abbreviated: _78jx126,
    narrow: _78jx44,
    wide: _78jx126
}, _78jx185 = {
    format: _78jx149,
    standAlone: _78jx149
}, _78jx186 = {
    abbreviated: _78jx123,
    narrow: _78jx44,
    wide: _78jx137
}, _78jx187 = {
    abbreviated: _78jx127,
    narrow: _78jx72,
    wide: _78jx127
}, _78jx188 = {
    abbreviated: _78jx123,
    narrow: _78jx44,
    wide: _78jx138
}, _78jx189 = {
    abbreviated: _78jx128,
    narrow: _78jx44,
    wide: _78jx128
}, _78jx190 = {
    abbreviated: _78jx129,
    narrow: _78jx72,
    wide: _78jx129
}, _78jx191 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _78jx192 = {
    fullDate: "EEEE, dd. MMMM y. G",
    longDate: "dd. MMMM y. G",
    mediumDate: "dd.MM.y. G",
    shortDate: "d.M.y. GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "d.M.y. GGGGG HH:mm",
    mediumDateTime: "dd.MM.y. G HH:mm:ss",
    longDateTime: "dd. MMMM y. G HH:mm:ss z",
    fullDateTime: "EEEE, dd. MMMM y. G HH:mm:ss zzzz"
}, _78jx193 = {
    abbreviated: _78jx140,
    narrow: _78jx130,
    wide: _78jx141
}, _78jx194 = {
    abbreviated: _78jx141,
    narrow: _78jx141,
    wide: _78jx141
}, _78jx195 = {
    format: _78jx172,
    standAlone: _78jx171
}, _78jx196 = {
    format: _78jx173,
    standAlone: _78jx173
}, _78jx197 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _78jx198 = {
    format: _78jx178,
    standAlone: _78jx178
}, _78jx199 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _78jx200 = {
    format: _78jx188,
    standAlone: _78jx186
}, _78jx201 = {
    d: "d",
    E: "ccc",
    Ed: "E d.",
    Gy: "y. G",
    GyMMM: "MMM y. G",
    GyMMMd: "d. MMM y. G",
    GyMMMEd: "E, d. MMM y. G",
    h: "hh a",
    H: "HH",
    hm: "hh.mm a",
    Hm: "HH.mm",
    hms: "hh.mm.ss a",
    Hms: "HH.mm.ss",
    M: "L",
    Md: "d/M",
    MEd: "E, M-d",
    MMdd: "MM-dd",
    MMM: "LLL",
    MMMd: "d. MMM",
    MMMdd: "dd.MMM",
    MMMEd: "E d. MMM",
    MMMMd: "d. MMMM",
    MMMMEd: "E d. MMMM",
    ms: "mm.ss",
    y: "y. G",
    yyyy: "y. G",
    yyyyM: "M.y. G",
    yyyyMd: "d.M.y. G",
    yyyyMEd: "E, d.M.y. G",
    yyyyMM: "MM.y. G",
    yyyyMMdd: "dd.MM.y. G",
    yyyyMMM: "MMM y. G",
    yyyyMMMd: "d. MMM y. G",
    yyyyMMMEd: "E, d. MMM y. G",
    yyyyMMMM: "MMMM y. G",
    yyyyQQQ: "QQQ, y. G",
    yyyyQQQQ: "QQQQ y. G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _78jx202 = {
    format: _78jx193,
    standAlone: _78jx194
}, _78jx203 = {
    basic: _78jx191,
    cldr: _78jx197
}, _78jx204 = {
    d: {
        d: "d–d"
    },
    h: _78jx4,
    H: {
        H: "HH–HH"
    },
    hm: _78jx48,
    Hm: _78jx13,
    hmv: _78jx80,
    Hmv: _78jx20,
    hv: _78jx5,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _78jx17,
    MEd: _78jx34,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _78jx9,
    MMMEd: _78jx35,
    y: {
        y: "U–U"
    },
    yM: _78jx11,
    yMd: _78jx103,
    yMEd: _78jx121,
    yMMM: _78jx14,
    yMMMd: _78jx71,
    yMMMEd: _78jx119,
    yMMMM: _78jx21
}, _78jx205 = {
    basic: _78jx192,
    cldr: _78jx201
}, _78jx206 = {
    Md: _78jx17,
    MEd: _78jx32,
    yM: _78jx11,
    yMd: _78jx103,
    yMEd: _78jx120,
    d: {
        d: "d–d"
    },
    h: _78jx4,
    H: {
        H: "HH–HH"
    },
    hm: _78jx45,
    Hm: _78jx12,
    hmv: _78jx77,
    Hmv: _78jx18,
    hv: _78jx5,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _78jx23,
    MMMEd: _78jx46,
    y: {
        y: "y – y. G"
    },
    yMMM: _78jx19,
    yMMMd: _78jx113,
    yMMMEd: _78jx122,
    yMMMM: _78jx22
}, _78jx207 = {
    abbreviated: _78jx199,
    narrow: _78jx199,
    wide: _78jx199
}, _78jx208 = {
    format: _78jx207
}, _78jx209 = [ "Taika (645–650)", "Hakuči (650–671)", "Hakuho (672–686)", "Šučo (686–701)", "Taiho (701–704)", "Keiun (704–708)", "Vado (708–715)", "Reiki (715–717)", "Joro (717–724)", "Jinki (724–729)", "Tempio (729–749)", "Tempio-kampo (749-749)", "Tempio-šoho (749-757)", "Tempio-hođi (757-765)", "Tempo-đingo (765-767)", "Đingo-keiun (767-770)", "Hoki (770–780)", "Ten-o (781-782)", "Enrjaku (782–806)", "Daido (806–810)", "Konin (810–824)", "Tenčo (824–834)", "Šova (834–848)", "Kajo (848–851)", "Ninju (851–854)", "Saiko (854–857)", "Tenan (857–859)", "Jogan (859–877)", "Genkei (877–885)", "Ninja (885–889)", "Kampjo (889–898)", "Šotai (898–901)", "Enđi (901–923)", "Enčo (923–931)", "Šohei (931–938)", "Tengjo (938–947)", "Tenriaku (947–957)", "Tentoku (957–961)", "Ova (961–964)", "Koho (964–968)", "Ana (968–970)", "Tenroku (970–973)", "Ten-en (973-976)", "Jogen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kana (985–987)", "Ei-en (987-989)", "Eiso (989–990)", "Šorjaku (990–995)", "Čotoku (995–999)", "Čoho (999–1004)", "Kanko (1004–1012)", "Čova (1012–1017)", "Kanin (1017–1021)", "Đian (1021–1024)", "Manju (1024–1028)", "Čogen (1028–1037)", "Čorjaku (1037–1040)", "Čokju (1040–1044)", "Kantoku (1044–1046)", "Eišo (1046–1053)", "Tenđi (1053–1058)", "Kohei (1058–1065)", "Đirjaku (1065–1069)", "Enkju (1069–1074)", "Šoho (1074–1077)", "Šorjaku (1077–1081)", "Eišo (1081–1084)", "Otoku (1084–1087)", "Kanđi (1087–1094)", "Kaho (1094–1096)", "Eičo (1096–1097)", "Šotoku (1097–1099)", "Kova (1099–1104)", "Čođi (1104–1106)", "Kašo (1106–1108)", "Tenin (1108–1110)", "Ten-ei (1110-1113)", "Eikju (1113–1118)", "Đen-ei (1118-1120)", "Hoan (1120–1124)", "Tenđi (1124–1126)", "Daiđi (1126–1131)", "Tenšo (1131–1132)", "Čošao (1132–1135)", "Hoen (1135–1141)", "Eiđi (1141–1142)", "Kođi (1142–1144)", "Tenjo (1144–1145)", "Kjuan (1145–1151)", "Ninpei (1151–1154)", "Kjuju (1154–1156)", "Hogen (1156–1159)", "Heiđi (1159–1160)", "Eirjaku (1160–1161)", "Oho (1161–1163)", "Čokan (1163–1165)", "Eiman (1165–1166)", "Nin-an (1166-1169)", "Kao (1169–1171)", "Šoan (1171–1175)", "Angen (1175–1177)", "Đišo (1177–1181)", "Jova (1181–1182)", "Đuei (1182–1184)", "Genrjuku (1184–1185)", "Bunđi (1185–1190)", "Kenkju (1190–1199)", "Šođi (1199–1201)", "Kenin (1201–1204)", "Genkju (1204–1206)", "Ken-ei (1206-1207)", "Šogen (1207–1211)", "Kenrjaku (1211–1213)", "Kenpo (1213–1219)", "Šokju (1219–1222)", "Đu (1222–1224)", "Đenin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Đoei (1232–1233)", "Tempuku (1233–1234)", "Bunrjaku (1234–1235)", "Katei (1235–1238)", "Rjakunin (1238–1239)", "En-o (1239-1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hođi (1247–1249)", "Kenčo (1249–1256)", "Kogen (1256–1257)", "Šoka (1257–1259)", "Šogen (1259–1260)", "Bun-o (1260-1261)", "Kočo (1261–1264)", "Bun-ei (1264-1275)", "Kenđi (1275–1278)", "Koan (1278–1288)", "Šu (1288–1293)", "Einin (1293–1299)", "Šoan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuđi (1306–1308)", "Enkei (1308–1311)", "Očo (1311–1312)", "Šova (1312–1317)", "Bunpo (1317–1319)", "Đeno (1319–1321)", "Đenkjo (1321–1324)", "Šoču (1324–1326)", "Kareki (1326–1329)", "Gentoku (1329–1331)", "Genko (1331–1334)", "Kemu (1334–1336)", "Engen (1336–1340)", "Kokoku (1340–1346)", "Šohei (1346–1370)", "Kentoku (1370–1372)", "Buču (1372–1375)", "Tenju (1375–1379)", "Korjaku (1379–1381)", "Kova (1381–1384)", "Genču (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Ku (1389–1390)", "Meitoku (1390–1394)", "Oei (1394–1428)", "Šočo (1428–1429)", "Eikjo (1429–1441)", "Kakitsu (1441–1444)", "Bun-an (1444-1449)", "Hotoku (1449–1452)", "Kjotoku (1452–1455)", "Košo (1455–1457)", "Čoroku (1457–1460)", "Kanšo (1460–1466)", "Bunšo (1466–1467)", "Onin (1467–1469)", "Bunmei (1469–1487)", "Čokjo (1487–1489)", "Entoku (1489–1492)", "Meio (1492–1501)", "Bunki (1501–1504)", "Eišo (1504–1521)", "Taiei (1521–1528)", "Kjoroku (1528–1532)", "Tenmon (1532–1555)", "Kođi (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenšo (1573–1592)", "Bunroku (1592–1596)", "Keičo (1596–1615)", "Genva (1615–1624)", "Kan-ei (1624-1644)", "Šoho (1644–1648)", "Keian (1648–1652)", "Šu (1652–1655)", "Meirjaku (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpo (1673–1681)", "Tenva (1681–1684)", "Jokjo (1684–1688)", "Genroku (1688–1704)", "Hoei (1704–1711)", "Šotoku (1711–1716)", "Kjoho (1716–1736)", "Genbun (1736–1741)", "Kanpo (1741–1744)", "Enkjo (1744–1748)", "Kan-en (1748-1751)", "Horjaku (1751–1764)", "Meiva (1764–1772)", "An-ei (1772-1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kjova (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpo (1830–1844)", "Koka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man-en (1860-1861)", "Bunkju (1861–1864)", "Genđi (1864–1865)", "Keiko (1865–1868)", "Meiđi", "Taišo", "Šova", "Haisei" ], _78jx210 = {
    dayParts: _78jx181,
    days: _78jx208,
    months: _78jx208,
    years: _78jx208,
    zodiacs: _78jx181
}, _78jx211 = {
    era: {
        displayName: "era"
    },
    year: _78jx176,
    "year-short": _78jx163,
    "year-narrow": _78jx155,
    quarter: _78jx182,
    "quarter-short": _78jx174,
    "quarter-narrow": _78jx174,
    month: _78jx177,
    "month-short": _78jx164,
    "month-narrow": _78jx156,
    week: _78jx179,
    "week-short": _78jx165,
    "week-narrow": _78jx157,
    day: _78jx175,
    "day-short": _78jx158,
    "day-narrow": _78jx158,
    weekday: _78jx7,
    dayperiod: _78jx15,
    hour: _78jx162,
    "hour-short": _78jx159,
    "hour-narrow": _78jx159,
    minute: _78jx168,
    "minute-short": _78jx166,
    "minute-narrow": _78jx166,
    second: _78jx170,
    "second-short": _78jx167,
    "second-narrow": _78jx160,
    zone: _78jx8,
    sun: _78jx106,
    "sun-short": _78jx60,
    "sun-narrow": _78jx60,
    mon: _78jx118,
    "mon-short": _78jx73,
    "mon-narrow": _78jx73,
    tue: _78jx104,
    "tue-short": _78jx74,
    "tue-narrow": _78jx74,
    wed: _78jx90,
    "wed-short": _78jx62,
    "wed-narrow": _78jx62,
    thu: _78jx115,
    "thu-short": _78jx75,
    "thu-narrow": _78jx75,
    fri: _78jx94,
    "fri-short": _78jx76,
    "fri-narrow": _78jx76,
    sat: _78jx96,
    "sat-short": _78jx63,
    "sat-narrow": _78jx63
}, _78jx212 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _78jx211
}, _78jx213 = {
    dateFormats: _78jx205,
    datePartsOrder: "dmy",
    dateIntervalFormats: _78jx206,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _78jx195,
    dayPeriods: _78jx202,
    monthNames: _78jx200,
    eraNames: _78jx10,
    quarterNames: _78jx185,
    fields: _78jx211
}, _78jx214 = {
    dateFormats: _78jx203,
    datePartsOrder: "md",
    dateIntervalFormats: _78jx204,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _78jx195,
    dayPeriods: _78jx202,
    cyclicNames: _78jx210,
    monthNames: _78jx196,
    monthPatterns: _78jx169,
    quarterNames: _78jx185,
    fields: _78jx211
};

inter.id = "sr_latn_ba";

inter.calendars = {
    buddhist: {
        dateFormats: _78jx205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _78jx206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _78jx195,
        dayPeriods: _78jx202,
        monthNames: _78jx198,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _78jx185,
        fields: _78jx211
    },
    chinese: _78jx214,
    coptic: {
        dateFormats: _78jx205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _78jx206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _78jx195,
        dayPeriods: _78jx202,
        monthNames: {
            format: _78jx187,
            standAlone: _78jx187
        },
        eraNames: _78jx36,
        quarterNames: _78jx185,
        fields: _78jx211
    },
    dangi: _78jx214,
    ethioaa: _78jx212,
    ethiopic: {
        dateFormats: _78jx205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _78jx206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _78jx195,
        dayPeriods: _78jx202,
        monthNames: {
            format: _78jx190,
            standAlone: _78jx190
        },
        eraNames: _78jx36,
        quarterNames: _78jx185,
        fields: _78jx211
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, dd. MMMM y.",
                longDate: "dd. MMMM y.",
                mediumDate: "dd.MM.y.",
                shortDate: "d.M.yy.",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "d.M.yy. HH:mm",
                mediumDateTime: "dd.MM.y. HH:mm:ss",
                longDateTime: "dd. MMMM y. HH:mm:ss z",
                fullDateTime: "EEEE, dd. MMMM y. HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "E",
                Ed: "E d.",
                Ehm: "E, h.mm a",
                EHm: "E, HH.mm",
                Ehms: "E, h.mm.ss a",
                EHms: "E, HH.mm.ss",
                Gy: "y. G",
                GyMMM: "MMM y. G",
                GyMMMd: "d. MMM y. G",
                GyMMMEd: "E, d. MMM y. G",
                h: "h a",
                H: "HH",
                hm: "hh.mm a",
                Hm: "HH.mm",
                hms: "hh.mm.ss a",
                Hms: "HH.mm.ss",
                hmsv: "h.mm.ss a v",
                Hmsv: "HH.mm.ss v",
                hmv: "h.mm a v",
                Hmv: "HH.mm v",
                M: "L",
                Md: "d/M",
                MEd: "E, d.M.",
                MMdd: "MM-dd",
                MMM: "LLL",
                MMMd: "d. MMM",
                MMMdd: "dd.MMM",
                MMMEd: "E d. MMM",
                MMMMd: "d. MMMM",
                MMMMEd: "E, d. MMMM",
                ms: "mm.ss",
                y: "y.",
                yM: "M.y.",
                yMd: "d.M.y.",
                yMEd: "E, d.M.y.",
                yMM: "MM.y.",
                yMMdd: "dd.MM.y.",
                yMMM: "MMM y.",
                yMMMd: "d. MMM y.",
                yMMMEd: "E, d. MMM y.",
                yMMMM: "MMMM y.",
                yQQQ: "QQQ. y",
                yQQQQ: "QQQQ. y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            Md: _78jx17,
            MEd: _78jx32,
            yM: _78jx11,
            yMd: _78jx103,
            yMEd: _78jx120,
            d: {
                d: "d–d"
            },
            h: _78jx4,
            H: {
                H: "HH–HH"
            },
            hm: _78jx45,
            Hm: _78jx12,
            hmv: _78jx77,
            Hmv: _78jx18,
            hv: _78jx5,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: {
                d: "dd.–dd. MMM",
                M: "dd. MMM – dd. MMM"
            },
            MMMEd: _78jx46,
            y: {
                y: "y–y"
            },
            yMMM: {
                M: "MMM–MMM y.",
                y: "MMM y. – MMM y."
            },
            yMMMd: _78jx113,
            yMMMEd: _78jx122,
            yMMMM: {
                M: "MMMM – MMMM y.",
                y: "MMMM y – MMMM y."
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _78jx195,
        dayPeriods: _78jx202,
        monthNames: _78jx198,
        eraNames: {
            wide: [ "pre nove ere", "nove ere" ],
            abbreviated: [ "p. n. e.", "n. e." ]
        },
        quarterNames: _78jx185,
        fields: _78jx211
    },
    hebrew: {
        dateFormats: _78jx205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _78jx206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _78jx195,
        dayPeriods: _78jx202,
        monthNames: {
            format: _78jx183,
            standAlone: _78jx183
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _78jx185,
        fields: _78jx211
    },
    indian: {
        dateFormats: _78jx205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _78jx206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _78jx195,
        dayPeriods: _78jx202,
        monthNames: {
            format: _78jx189,
            standAlone: _78jx189
        },
        eraNames: {
            wide: [ "SAKA" ],
            abbreviated: [ "SAKA" ]
        },
        quarterNames: _78jx185,
        fields: _78jx211
    },
    islamic: _78jx213,
    "islamic-umalqura": _78jx213,
    "islamic-tbla": _78jx213,
    "islamic-civil": _78jx213,
    "islamic-rgsa": _78jx213,
    iso8601: _78jx212,
    japanese: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, MMMM d, y G",
                longDate: "MMMM d, y G",
                mediumDate: "MMM d, y G",
                shortDate: "M/d/yy G",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "M/d/yy G HH:mm",
                mediumDateTime: "MMM d, y G HH:mm:ss",
                longDateTime: "MMMM d, y G HH:mm:ss z",
                fullDateTime: "EEEE, MMMM d, y G HH:mm:ss zzzz"
            },
            cldr: _78jx201
        },
        datePartsOrder: "mdy",
        dateIntervalFormats: _78jx206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _78jx195,
        dayPeriods: _78jx202,
        monthNames: _78jx198,
        eraNames: {
            wide: _78jx209,
            abbreviated: _78jx209
        },
        quarterNames: _78jx185,
        fields: _78jx211
    },
    persian: {
        dateFormats: _78jx205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _78jx206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _78jx195,
        dayPeriods: _78jx202,
        monthNames: {
            format: _78jx184,
            standAlone: _78jx184
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _78jx185,
        fields: _78jx211
    },
    roc: {
        dateFormats: _78jx205,
        datePartsOrder: "dmy",
        dateIntervalFormats: _78jx206,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _78jx195,
        dayPeriods: _78jx202,
        monthNames: _78jx198,
        eraNames: {
            wide: [ "Pre RK", "RK" ],
            abbreviated: [ "Pre RK", "RK" ]
        },
        quarterNames: _78jx185,
        fields: _78jx211
    },
    islamicc: _78jx212
};

inter.pluralRule = function(n) {
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinalMasculine(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderSpelloutCardinalMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculine(Math.floor(n)) + " zarez " + this.renderSpelloutCardinalMasculine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 5e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " biliarda" + (n === 5e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 2e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " biliardy" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 1e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " biliarda" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 5e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " bilijun" + (n === 5e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 2e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " bilijuny" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 1e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " bilijun" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 5e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " miliarda" + (n === 5e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 2e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " miliardy" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 1e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " miliarda" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 5e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " milijun" + (n === 5e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " milijuny" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 1e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " milijun" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 5e3) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e3)) + " tisuću" + (n === 5e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 2e3) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e3)) + " tisuća" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 1e3) return "tisuću" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 900) return "devetsto" + (n === 900 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 800) return "osamsto" + (n === 800 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 700) return "sedamsto" + (n === 700 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 600) return "šesto" + (n === 600 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 500) return "petsto" + (n === 500 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 400) return "četristo" + (n === 400 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 300) return "tristo" + (n === 300 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 200) return "dvesto" + (n === 200 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 100) return "sto" + (n === 100 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 90) return "devedeset" + (n === 90 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 80) return "osamdeset" + (n === 80 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 70) return "sedamdeset" + (n === 70 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 60) return "šezdeset" + (n === 60 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 50) return "pedeset" + (n === 50 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 40) return "četrdeset" + (n === 40 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 30) return "trideset" + (n === 30 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 20) return "dvadeset" + (n === 20 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 19) return "devetnaest";
    if (n >= 18) return "osamnaest";
    if (n >= 17) return "sedamnaest";
    if (n >= 16) return "šestnaest";
    if (n >= 15) return "petnaest";
    if (n >= 14) return "četrnaest";
    if (n >= 13) return "trinaest";
    if (n >= 12) return "dvanaest";
    if (n >= 11) return "jedenaest";
    if (n >= 10) return "deset";
    if (n >= 9) return "devet";
    if (n >= 8) return "osam";
    if (n >= 7) return "sedam";
    if (n >= 6) return "šest";
    if (n >= 5) return "pet";
    if (n >= 4) return "četiri";
    if (n >= 3) return "tri";
    if (n >= 2) return "dva";
    if (n >= 1) return "jedan";
    if (n >= 0) return "nula";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderSpelloutCardinalFeminine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalFeminine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalFeminine(Math.floor(n)) + " zarez " + this.renderSpelloutCardinalFeminine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 5e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " biliarda" + (n === 5e15 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e15));
    if (n >= 2e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " biliardy" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e15));
    if (n >= 1e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " biliarda" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e15));
    if (n >= 5e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " bilijun" + (n === 5e12 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e12));
    if (n >= 2e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " bilijuny" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e12));
    if (n >= 1e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " bilijun" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e12));
    if (n >= 5e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " miliarda" + (n === 5e9 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e9));
    if (n >= 2e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " miliardy" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e9));
    if (n >= 1e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " miliarda" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e9));
    if (n >= 5e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " milijun" + (n === 5e6 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e6));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " milijuny" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e6));
    if (n >= 1e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " milijun" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e6));
    if (n >= 5e3) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e3)) + " tisuću" + (n === 5e3 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e3));
    if (n >= 2e3) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e3)) + " tisuće" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e3));
    if (n >= 1e3) return "tisuću" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e3));
    if (n >= 900) return "devetsto" + (n === 900 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 800) return "osamsto" + (n === 800 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 700) return "sedamsto" + (n === 700 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 600) return "šesto" + (n === 600 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 500) return "petsto" + (n === 500 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 400) return "četristo" + (n === 400 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 300) return "tristo" + (n === 300 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 200) return "dvesto" + (n === 200 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 100) return "sto" + (n === 100 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 90) return "devedeset" + (n === 90 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 80) return "osamdeset" + (n === 80 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 70) return "sedamdeset" + (n === 70 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 60) return "šezdeset" + (n === 60 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 50) return "pedeset" + (n === 50 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 40) return "četrdeset" + (n === 40 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 30) return "trideset" + (n === 30 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 20) return "dvadeset" + (n === 20 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 3) return this.renderSpelloutCardinalMasculine(n);
    if (n >= 2) return "dve";
    if (n >= 1) return "jedinica";
    if (n >= 0) return "nula";
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

module.exports = inter;