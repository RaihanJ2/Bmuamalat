function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _efsc1 = {
    one: "0K",
    other: "0K"
}, _efsc2 = {
    one: "0M",
    other: "0M"
}, _efsc3 = {
    one: "0B",
    other: "0B"
}, _efsc4 = {
    one: "0T",
    other: "0T"
}, _efsc5 = [ "Q1", "Q2", "Q3", "Q4" ], _efsc6 = {
    displayName: "AM/PM"
}, _efsc7 = {
    all: {
        leap: "{0}bis"
    }
}, _efsc8 = {
    one: "00K",
    other: "00K"
}, _efsc9 = {
    one: "00M",
    other: "00M"
}, _efsc10 = {
    one: "00B",
    other: "00B"
}, _efsc11 = {
    one: "00T",
    other: "00T"
}, _efsc12 = {
    one: "¤0K",
    other: "¤0K"
}, _efsc13 = {
    one: "¤0M",
    other: "¤0M"
}, _efsc14 = {
    one: "¤0B",
    other: "¤0B"
}, _efsc15 = {
    one: "¤0T",
    other: "¤0T"
}, _efsc16 = {
    one: "{0}°",
    other: "{0}°"
}, _efsc17 = {
    one: "{0}′",
    other: "{0}′"
}, _efsc18 = {
    one: "{0}″",
    other: "{0}″"
}, _efsc19 = {
    one: "{0}m",
    other: "{0}m"
}, _efsc20 = {
    one: "000K",
    other: "000K"
}, _efsc21 = {
    one: "000M",
    other: "000M"
}, _efsc22 = {
    one: "000B",
    other: "000B"
}, _efsc23 = {
    one: "000T",
    other: "000T"
}, _efsc24 = {
    one: "¤00K",
    other: "¤00K"
}, _efsc25 = {
    one: "¤00M",
    other: "¤00M"
}, _efsc26 = {
    one: "¤00B",
    other: "¤00B"
}, _efsc27 = {
    one: "¤00T",
    other: "¤00T"
}, _efsc28 = {
    displayName: "time zone"
}, _efsc29 = [ "Before R.O.C.", "Minguo" ], _efsc30 = {
    one: "{0} c",
    other: "{0} c"
}, _efsc31 = {
    one: "{0}°C",
    other: "{0}°C"
}, _efsc32 = {
    one: "¤000K",
    other: "¤000K"
}, _efsc33 = {
    one: "¤000M",
    other: "¤000M"
}, _efsc34 = {
    one: "¤000B",
    other: "¤000B"
}, _efsc35 = {
    one: "¤000T",
    other: "¤000T"
}, _efsc36 = {
    a: "h a – h a",
    h: "h – h a"
}, _efsc37 = {
    d: "M/d – M/d",
    M: "M/d – M/d"
}, _efsc38 = [ "S", "M", "T", "W", "T", "F", "S" ], _efsc39 = {
    M: "M/y – M/y",
    y: "M/y – M/y"
}, _efsc40 = {
    a: "h a – h a v",
    h: "h – h a v"
}, _efsc41 = {
    displayName: "day of the week"
}, _efsc42 = {
    one: "{0} day",
    other: "{0} days"
}, _efsc43 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _efsc44 = {
    d: "MMM d – d",
    M: "MMM d – MMM d"
}, _efsc45 = {
    d: "d – d MMM",
    M: "d MMM – d MMM"
}, _efsc46 = {
    one: "0 million",
    other: "0 million"
}, _efsc47 = {
    one: "0 billion",
    other: "0 billion"
}, _efsc48 = {
    M: "MMM – MMM U",
    y: "MMM U – MMM U"
}, _efsc49 = {
    M: "MMM – MMM y",
    y: "MMM y – MMM y"
}, _efsc50 = [ "Su", "Mo", "Tu", "We", "Th", "Fr", "Sa" ], _efsc51 = {
    one: "0 thousand",
    other: "0 thousand"
}, _efsc52 = {
    one: "00 million",
    other: "00 million"
}, _efsc53 = {
    one: "00 billion",
    other: "00 billion"
}, _efsc54 = {
    one: "0 trillion",
    other: "0 trillion"
}, _efsc55 = {
    H: "HH:mm – HH:mm",
    m: "HH:mm – HH:mm"
}, _efsc56 = {
    one: "in {0} yr.",
    other: "in {0} yr."
}, _efsc57 = {
    one: "in {0} mo.",
    other: "in {0} mo."
}, _efsc58 = {
    one: "in {0} wk.",
    other: "in {0} wk."
}, _efsc59 = {
    one: "in {0} hr.",
    other: "in {0} hr."
}, _efsc60 = {
    "0": "this M",
    "1": "next M",
    "-1": "last M"
}, _efsc61 = {
    "0": "this W",
    "1": "next W",
    "-1": "last W"
}, _efsc62 = {
    "0": "this F",
    "1": "next F",
    "-1": "last F"
}, _efsc63 = {
    one: "in {0} day",
    other: "in {0} days"
}, _efsc64 = {
    one: "00 thousand",
    other: "00 thousand"
}, _efsc65 = {
    one: "000 million",
    other: "000 million"
}, _efsc66 = {
    one: "000 billion",
    other: "000 billion"
}, _efsc67 = {
    one: "00 trillion",
    other: "00 trillion"
}, _efsc68 = {
    M: "MMM – MMM y G",
    y: "MMM y – MMM y G"
}, _efsc69 = {
    one: "{0} yr. ago",
    other: "{0} yr. ago"
}, _efsc70 = {
    one: "{0} mo. ago",
    other: "{0} mo. ago"
}, _efsc71 = {
    one: "{0} wk. ago",
    other: "{0} wk. ago"
}, _efsc72 = {
    one: "{0} hr. ago",
    other: "{0} hr. ago"
}, _efsc73 = {
    one: "in {0} min.",
    other: "in {0} min."
}, _efsc74 = {
    one: "in {0} sec.",
    other: "in {0} sec."
}, _efsc75 = {
    M: "MMMM – MMMM U",
    y: "MMMM U – MMMM U"
}, _efsc76 = {
    M: "MMMM – MMMM y",
    y: "MMMM y – MMMM y"
}, _efsc77 = {
    one: "in {0} year",
    other: "in {0} years"
}, _efsc78 = {
    one: "in {0} qtr.",
    other: "in {0} qtrs."
}, _efsc79 = {
    one: "in {0} week",
    other: "in {0} weeks"
}, _efsc80 = {
    one: "{0} day ago",
    other: "{0} days ago"
}, _efsc81 = {
    one: "in {0} hour",
    other: "in {0} hours"
}, _efsc82 = {
    "0": "this Su",
    "1": "next Su",
    "-1": "last Su"
}, _efsc83 = {
    "0": "this Tu",
    "1": "next Tu",
    "-1": "last Tu"
}, _efsc84 = {
    "0": "this Th",
    "1": "next Th",
    "-1": "last Th"
}, _efsc85 = {
    "0": "this Sa",
    "1": "next Sa",
    "-1": "last Sa"
}, _efsc86 = {
    one: "000 thousand",
    other: "000 thousand"
}, _efsc87 = {
    one: "000 trillion",
    other: "000 trillion"
}, _efsc88 = {
    H: "HH:mm – HH:mm v",
    m: "HH:mm – HH:mm v"
}, _efsc89 = {
    d: "E, M/d – E, M/d",
    M: "E, M/d – E, M/d"
}, _efsc90 = {
    M: "M/y – M/y GGGGG",
    y: "M/y – M/y GGGGG"
}, _efsc91 = {
    "0": "today",
    "1": "tomorrow",
    "-1": "yesterday"
}, _efsc92 = {
    one: "{0} min. ago",
    other: "{0} min. ago"
}, _efsc93 = {
    one: "{0} sec. ago",
    other: "{0} sec. ago"
}, _efsc94 = {
    one: "{0} year ago",
    other: "{0} years ago"
}, _efsc95 = {
    one: "{0} qtr. ago",
    other: "{0} qtrs. ago"
}, _efsc96 = {
    one: "in {0} month",
    other: "in {0} months"
}, _efsc97 = {
    one: "{0} week ago",
    other: "{0} weeks ago"
}, _efsc98 = {
    one: "{0} hour ago",
    other: "{0} hours ago"
}, _efsc99 = {
    M: "MMMM – MMMM y G",
    y: "MMMM y – MMMM y G"
}, _efsc100 = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ], _efsc101 = {
    "0": "this yr.",
    "1": "next yr.",
    "-1": "last yr."
}, _efsc102 = {
    "0": "this mo.",
    "1": "next mo.",
    "-1": "last mo."
}, _efsc103 = {
    "0": "this wk.",
    "1": "next wk.",
    "-1": "last wk."
}, _efsc104 = {
    one: "{0} month ago",
    other: "{0} months ago"
}, _efsc105 = {
    one: "in {0} minute",
    other: "in {0} minutes"
}, _efsc106 = {
    one: "in {0} second",
    other: "in {0} seconds"
}, _efsc107 = {
    "0": "this year",
    "1": "next year",
    "-1": "last year"
}, _efsc108 = {
    one: "in {0} quarter",
    other: "in {0} quarters"
}, _efsc109 = {
    "0": "this qtr.",
    "1": "next qtr.",
    "-1": "last qtr."
}, _efsc110 = {
    "0": "this week",
    "1": "next week",
    "-1": "last week"
}, _efsc111 = {
    one: "{0} minute ago",
    other: "{0} minutes ago"
}, _efsc112 = {
    one: "{0} second ago",
    other: "{0} seconds ago"
}, _efsc113 = {
    "0": "this Sun.",
    "1": "next Sun.",
    "-1": "last Sun."
}, _efsc114 = {
    "0": "this Mon.",
    "1": "next Mon.",
    "-1": "last Mon."
}, _efsc115 = {
    "0": "this Tue.",
    "1": "next Tue.",
    "-1": "last Tue."
}, _efsc116 = {
    "0": "this Wed.",
    "1": "next Wed.",
    "-1": "last Wed."
}, _efsc117 = {
    "0": "this Thu.",
    "1": "next Thu.",
    "-1": "last Thu."
}, _efsc118 = {
    "0": "this Fri.",
    "1": "next Fri.",
    "-1": "last Fri."
}, _efsc119 = {
    "0": "this Sat.",
    "1": "next Sat.",
    "-1": "last Sat."
}, _efsc120 = {
    one: "{0} quarter ago",
    other: "{0} quarters ago"
}, _efsc121 = {
    relative: _efsc60
}, _efsc122 = {
    relative: _efsc61
}, _efsc123 = {
    relative: _efsc62
}, _efsc124 = {
    d: "E, MMM d – E, MMM d",
    M: "E, MMM d – E, MMM d"
}, _efsc125 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _efsc126 = {
    "0": "this month",
    "1": "next month",
    "-1": "last month"
}, _efsc127 = {
    d: "E, d MMM – E, d MMM",
    M: "E, d MMM – E, d MMM"
}, _efsc128 = {
    id: "001",
    displayName: "World",
    hasTimeZones: false
}, _efsc129 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _efsc130 = {
    relative: _efsc82
}, _efsc131 = {
    relative: _efsc83
}, _efsc132 = {
    relative: _efsc84
}, _efsc133 = {
    relative: _efsc85
}, _efsc134 = {
    "0": "this Sunday",
    "1": "next Sunday",
    "-1": "last Sunday"
}, _efsc135 = {
    "0": "this Monday",
    "1": "next Monday",
    "-1": "last Monday"
}, _efsc136 = {
    "0": "this Friday",
    "1": "next Friday",
    "-1": "last Friday"
}, _efsc137 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _efsc138 = {
    id: "AQ",
    displayName: "Antarctica",
    hasTimeZones: true
}, _efsc139 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _efsc140 = {
    "0": "this Tuesday",
    "1": "next Tuesday",
    "-1": "last Tuesday"
}, _efsc141 = {
    d: "M/d/y – M/d/y",
    M: "M/d/y – M/d/y",
    y: "M/d/y – M/d/y"
}, _efsc142 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _efsc143 = {
    id: "BV",
    displayName: "Bouvet Island",
    hasTimeZones: false
}, _efsc144 = {
    a: "h:mm a – h:mm a",
    h: "h:mm – h:mm a",
    m: "h:mm – h:mm a"
}, _efsc145 = [ "1st quarter", "2nd quarter", "3rd quarter", "4th quarter" ], _efsc146 = {
    relative: _efsc113
}, _efsc147 = {
    relative: _efsc114
}, _efsc148 = {
    relative: _efsc115
}, _efsc149 = {
    relative: _efsc116
}, _efsc150 = {
    relative: _efsc117
}, _efsc151 = {
    relative: _efsc118
}, _efsc152 = {
    relative: _efsc119
}, _efsc153 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _efsc154 = {
    id: "IC",
    displayName: "Canary Islands",
    hasTimeZones: false
}, _efsc155 = {
    "0": "this Thursday",
    "1": "next Thursday",
    "-1": "last Thursday"
}, _efsc156 = {
    "0": "this Saturday",
    "1": "next Saturday",
    "-1": "last Saturday"
}, _efsc157 = {
    id: "EA",
    displayName: "Ceuta & Melilla",
    hasTimeZones: false
}, _efsc158 = {
    id: "CX",
    displayName: "Christmas Island",
    hasTimeZones: true
}, _efsc159 = {
    d: "d – d MMM y",
    M: "d MMM – d MMM y",
    y: "d MMM y – d MMM y"
}, _efsc160 = {
    id: "AC",
    displayName: "Ascension Island",
    hasTimeZones: false
}, _efsc161 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _efsc162 = {
    id: "CP",
    displayName: "Clipperton Island",
    hasTimeZones: false
}, _efsc163 = {
    "0": "this Wednesday",
    "1": "next Wednesday",
    "-1": "last Wednesday"
}, _efsc164 = {
    id: "TD",
    displayName: "Chad",
    regionId: "017",
    hasTimeZones: true
}, _efsc165 = {
    id: "CU",
    displayName: "Cuba",
    regionId: "029",
    hasTimeZones: true
}, _efsc166 = {
    id: "FJ",
    displayName: "Fiji",
    regionId: "054",
    hasTimeZones: true
}, _efsc167 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _efsc168 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _efsc169 = {
    id: "IQ",
    displayName: "Iraq",
    regionId: "145",
    hasTimeZones: true
}, _efsc170 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _efsc171 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _efsc172 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _efsc173 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _efsc174 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _efsc175 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _efsc176 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _efsc177 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _efsc178 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _efsc179 = {
    id: "CN",
    displayName: "China",
    regionId: "030",
    hasTimeZones: true
}, _efsc180 = {
    id: "EG",
    displayName: "Egypt",
    regionId: "015",
    hasTimeZones: true
}, _efsc181 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _efsc182 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _efsc183 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _efsc184 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _efsc185 = {
    id: "IT",
    displayName: "Italy",
    regionId: "039",
    hasTimeZones: true
}, _efsc186 = {
    id: "JP",
    displayName: "Japan",
    regionId: "030",
    hasTimeZones: true
}, _efsc187 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _efsc188 = {
    id: "LY",
    displayName: "Libya",
    regionId: "015",
    hasTimeZones: true
}, _efsc189 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _efsc190 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _efsc191 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _efsc192 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _efsc193 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _efsc194 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _efsc195 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _efsc196 = {
    id: "ES",
    displayName: "Spain",
    regionId: "039",
    hasTimeZones: true
}, _efsc197 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _efsc198 = {
    id: "SY",
    displayName: "Syria",
    regionId: "145",
    hasTimeZones: true
}, _efsc199 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _efsc200 = {
    id: "YE",
    displayName: "Yemen",
    regionId: "145",
    hasTimeZones: true
}, _efsc201 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm – h:mm a v",
    m: "h:mm – h:mm a v"
}, _efsc202 = {
    relative: _efsc134
}, _efsc203 = {
    relative: _efsc135
}, _efsc204 = {
    relative: _efsc136
}, _efsc205 = {
    d: "MMM d – d, U",
    M: "MMM d – MMM d, U",
    y: "MMM d, U – MMM d, U"
}, _efsc206 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _efsc207 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _efsc208 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _efsc209 = {
    id: "BR",
    displayName: "Brazil",
    regionId: "005",
    hasTimeZones: true
}, _efsc210 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _efsc211 = {
    id: "CA",
    displayName: "Canada",
    regionId: "021",
    hasTimeZones: true
}, _efsc212 = {
    id: "CY",
    displayName: "Cyprus",
    regionId: "145",
    hasTimeZones: true
}, _efsc213 = {
    id: "FR",
    displayName: "France",
    regionId: "155",
    hasTimeZones: true
}, _efsc214 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _efsc215 = {
    id: "GR",
    displayName: "Greece",
    regionId: "039",
    hasTimeZones: true
}, _efsc216 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _efsc217 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _efsc218 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _efsc219 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _efsc220 = {
    id: "JO",
    displayName: "Jordan",
    regionId: "145",
    hasTimeZones: true
}, _efsc221 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _efsc222 = {
    id: "LV",
    displayName: "Latvia",
    regionId: "154",
    hasTimeZones: true
}, _efsc223 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _efsc224 = {
    id: "MX",
    displayName: "Mexico",
    regionId: "013",
    hasTimeZones: true
}, _efsc225 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _efsc226 = {
    id: "NO",
    displayName: "Norway",
    regionId: "154",
    hasTimeZones: true
}, _efsc227 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _efsc228 = {
    id: "PL",
    displayName: "Poland",
    regionId: "151",
    hasTimeZones: true
}, _efsc229 = {
    id: "RU",
    displayName: "Russia",
    regionId: "151",
    hasTimeZones: true
}, _efsc230 = {
    id: "RW",
    displayName: "Rwanda",
    regionId: "014",
    hasTimeZones: true
}, _efsc231 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _efsc232 = {
    id: "SE",
    displayName: "Sweden",
    regionId: "154",
    hasTimeZones: true
}, _efsc233 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _efsc234 = {
    id: "TR",
    displayName: "Turkey",
    regionId: "145",
    hasTimeZones: true
}, _efsc235 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _efsc236 = {
    id: "UM",
    displayName: "U.S. Outlying Islands",
    hasTimeZones: true
}, _efsc237 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _efsc238 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _efsc239 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _efsc240 = {
    id: "DZ",
    displayName: "Algeria",
    regionId: "015",
    hasTimeZones: true
}, _efsc241 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _efsc242 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _efsc243 = {
    id: "AT",
    displayName: "Austria",
    regionId: "155",
    hasTimeZones: true
}, _efsc244 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _efsc245 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _efsc246 = {
    id: "BY",
    displayName: "Belarus",
    regionId: "151",
    hasTimeZones: true
}, _efsc247 = {
    id: "BE",
    displayName: "Belgium",
    regionId: "155",
    hasTimeZones: true
}, _efsc248 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _efsc249 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _efsc250 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _efsc251 = {
    id: "KM",
    displayName: "Comoros",
    regionId: "014",
    hasTimeZones: true
}, _efsc252 = {
    id: "HR",
    displayName: "Croatia",
    regionId: "039",
    hasTimeZones: true
}, _efsc253 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _efsc254 = {
    id: "DK",
    displayName: "Denmark",
    regionId: "154",
    hasTimeZones: true
}, _efsc255 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _efsc256 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _efsc257 = {
    id: "EE",
    displayName: "Estonia",
    regionId: "154",
    hasTimeZones: true
}, _efsc258 = {
    id: "FI",
    displayName: "Finland",
    regionId: "154",
    hasTimeZones: true
}, _efsc259 = {
    id: "GE",
    displayName: "Georgia",
    regionId: "145",
    hasTimeZones: true
}, _efsc260 = {
    id: "DE",
    displayName: "Germany",
    regionId: "155",
    hasTimeZones: true
}, _efsc261 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _efsc262 = {
    id: "HU",
    displayName: "Hungary",
    regionId: "151",
    hasTimeZones: true
}, _efsc263 = {
    id: "IS",
    displayName: "Iceland",
    regionId: "154",
    hasTimeZones: true
}, _efsc264 = {
    id: "IE",
    displayName: "Ireland",
    regionId: "154",
    hasTimeZones: true
}, _efsc265 = {
    id: "JM",
    displayName: "Jamaica",
    regionId: "029",
    hasTimeZones: true
}, _efsc266 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _efsc267 = {
    id: "LB",
    displayName: "Lebanon",
    regionId: "145",
    hasTimeZones: true
}, _efsc268 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _efsc269 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _efsc270 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _efsc271 = {
    id: "MD",
    displayName: "Moldova",
    regionId: "151",
    hasTimeZones: true
}, _efsc272 = {
    id: "MA",
    displayName: "Morocco",
    regionId: "015",
    hasTimeZones: true
}, _efsc273 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _efsc274 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _efsc275 = {
    id: "RO",
    displayName: "Romania",
    regionId: "151",
    hasTimeZones: true
}, _efsc276 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _efsc277 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _efsc278 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _efsc279 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _efsc280 = {
    id: "TN",
    displayName: "Tunisia",
    regionId: "015",
    hasTimeZones: true
}, _efsc281 = {
    id: "UA",
    displayName: "Ukraine",
    regionId: "151",
    hasTimeZones: true
}, _efsc282 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _efsc283 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _efsc284 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _efsc285 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _efsc286 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _efsc287 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _efsc288 = {
    id: "BG",
    displayName: "Bulgaria",
    regionId: "151",
    hasTimeZones: true
}, _efsc289 = {
    id: "KH",
    displayName: "Cambodia",
    regionId: "035",
    hasTimeZones: true
}, _efsc290 = {
    id: "CM",
    displayName: "Cameroon",
    regionId: "017",
    hasTimeZones: true
}, _efsc291 = {
    id: "CC",
    displayName: "Cocos (Keeling) Islands",
    hasTimeZones: true
}, _efsc292 = {
    id: "CO",
    displayName: "Colombia",
    regionId: "005",
    hasTimeZones: true
}, _efsc293 = {
    id: "DJ",
    displayName: "Djibouti",
    regionId: "014",
    hasTimeZones: true
}, _efsc294 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _efsc295 = {
    id: "ET",
    displayName: "Ethiopia",
    regionId: "014",
    hasTimeZones: true
}, _efsc296 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _efsc297 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _efsc298 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _efsc299 = {
    id: "MY",
    displayName: "Malaysia",
    regionId: "035",
    hasTimeZones: true
}, _efsc300 = {
    id: "MV",
    displayName: "Maldives",
    regionId: "034",
    hasTimeZones: true
}, _efsc301 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _efsc302 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _efsc303 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _efsc304 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _efsc305 = {
    id: "SK",
    displayName: "Slovakia",
    regionId: "151",
    hasTimeZones: true
}, _efsc306 = {
    id: "SI",
    displayName: "Slovenia",
    regionId: "039",
    hasTimeZones: true
}, _efsc307 = {
    id: "SR",
    displayName: "Suriname",
    regionId: "005",
    hasTimeZones: true
}, _efsc308 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _efsc309 = {
    id: "TH",
    displayName: "Thailand",
    regionId: "035",
    hasTimeZones: true
}, _efsc310 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _efsc311 = {
    relative: _efsc140
}, _efsc312 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _efsc313 = {
    id: "AU",
    displayName: "Australia",
    regionId: "053",
    hasTimeZones: true
}, _efsc314 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _efsc315 = {
    id: "GL",
    displayName: "Greenland",
    regionId: "021",
    hasTimeZones: true
}, _efsc316 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _efsc317 = {
    id: "ID",
    displayName: "Indonesia",
    regionId: "035",
    hasTimeZones: true
}, _efsc318 = {
    id: "LT",
    displayName: "Lithuania",
    regionId: "154",
    hasTimeZones: true
}, _efsc319 = {
    id: "MK",
    displayName: "Macedonia",
    regionId: "039",
    hasTimeZones: true
}, _efsc320 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _efsc321 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _efsc322 = {
    id: "SG",
    displayName: "Singapore",
    regionId: "035",
    hasTimeZones: true
}, _efsc323 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _efsc324 = {
    id: "LC",
    displayName: "St. Lucia",
    regionId: "029",
    hasTimeZones: true
}, _efsc325 = {
    id: "SZ",
    displayName: "Swaziland",
    regionId: "018",
    hasTimeZones: true
}, _efsc326 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _efsc327 = {
    id: "AZ",
    displayName: "Azerbaijan",
    regionId: "145",
    hasTimeZones: true
}, _efsc328 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _efsc329 = {
    id: "CV",
    displayName: "Cape Verde",
    regionId: "011",
    hasTimeZones: true
}, _efsc330 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _efsc331 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _efsc332 = {
    id: "HM",
    displayName: "Heard & McDonald Islands",
    hasTimeZones: false
}, _efsc333 = {
    id: "KZ",
    displayName: "Kazakhstan",
    regionId: "143",
    hasTimeZones: true
}, _efsc334 = {
    id: "KG",
    displayName: "Kyrgyzstan",
    regionId: "143",
    hasTimeZones: true
}, _efsc335 = {
    id: "LU",
    displayName: "Luxembourg",
    regionId: "155",
    hasTimeZones: true
}, _efsc336 = {
    id: "MG",
    displayName: "Madagascar",
    regionId: "014",
    hasTimeZones: true
}, _efsc337 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _efsc338 = {
    id: "MR",
    displayName: "Mauritania",
    regionId: "011",
    hasTimeZones: true
}, _efsc339 = {
    id: "FM",
    displayName: "Micronesia",
    regionId: "057",
    hasTimeZones: true
}, _efsc340 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _efsc341 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _efsc342 = {
    id: "MZ",
    displayName: "Mozambique",
    regionId: "014",
    hasTimeZones: true
}, _efsc343 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _efsc344 = {
    id: "SC",
    displayName: "Seychelles",
    regionId: "014",
    hasTimeZones: true
}, _efsc345 = {
    id: "SH",
    displayName: "St. Helena",
    regionId: "011",
    hasTimeZones: true
}, _efsc346 = {
    id: "MF",
    displayName: "St. Martin",
    regionId: "029",
    hasTimeZones: true
}, _efsc347 = {
    id: "TJ",
    displayName: "Tajikistan",
    regionId: "143",
    hasTimeZones: true
}, _efsc348 = {
    id: "UZ",
    displayName: "Uzbekistan",
    regionId: "143",
    hasTimeZones: true
}, _efsc349 = {
    id: "AF",
    displayName: "Afghanistan",
    regionId: "034",
    hasTimeZones: true
}, _efsc350 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _efsc351 = {
    id: "IM",
    displayName: "Isle of Man",
    regionId: "154",
    hasTimeZones: true
}, _efsc352 = {
    id: "NL",
    displayName: "Netherlands",
    regionId: "155",
    hasTimeZones: true
}, _efsc353 = {
    id: "NZ",
    displayName: "New Zealand",
    regionId: "053",
    hasTimeZones: true
}, _efsc354 = {
    id: "KP",
    displayName: "North Korea",
    regionId: "030",
    hasTimeZones: true
}, _efsc355 = {
    id: "PH",
    displayName: "Philippines",
    regionId: "035",
    hasTimeZones: true
}, _efsc356 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _efsc357 = {
    id: "KR",
    displayName: "South Korea",
    regionId: "030",
    hasTimeZones: true
}, _efsc358 = {
    id: "SS",
    displayName: "South Sudan",
    regionId: "014",
    hasTimeZones: true
}, _efsc359 = {
    id: "CH",
    displayName: "Switzerland",
    regionId: "155",
    hasTimeZones: true
}, _efsc360 = {
    id: "TL",
    displayName: "Timor-Leste",
    regionId: "035",
    hasTimeZones: true
}, _efsc361 = {
    d: "MMM d – d, y G",
    M: "MMM d – MMM d, y G",
    y: "MMM d, y – MMM d, y G"
}, _efsc362 = {
    relative: _efsc155
}, _efsc363 = {
    relative: _efsc156
}, _efsc364 = {
    id: "142",
    displayName: "Asia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _efsc365 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _efsc366 = {
    id: "CK",
    displayName: "Cook Islands",
    regionId: "061",
    hasTimeZones: true
}, _efsc367 = {
    id: "TF",
    displayName: "French Southern Territories",
    hasTimeZones: true
}, _efsc368 = {
    id: "SA",
    displayName: "Saudi Arabia",
    regionId: "145",
    hasTimeZones: true
}, _efsc369 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _efsc370 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _efsc371 = {
    id: "ZA",
    displayName: "South Africa",
    regionId: "018",
    hasTimeZones: true
}, _efsc372 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _efsc373 = {
    id: "VA",
    displayName: "Vatican City",
    regionId: "039",
    hasTimeZones: true
}, _efsc374 = {
    id: "CI",
    displayName: "Côte d’Ivoire",
    regionId: "011",
    hasTimeZones: true
}, _efsc375 = {
    id: "FO",
    displayName: "Faroe Islands",
    regionId: "154",
    hasTimeZones: true
}, _efsc376 = {
    id: "GF",
    displayName: "French Guiana",
    regionId: "005",
    hasTimeZones: true
}, _efsc377 = {
    id: "GW",
    displayName: "Guinea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _efsc378 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _efsc379 = {
    id: "NC",
    displayName: "New Caledonia",
    regionId: "054",
    hasTimeZones: true
}, _efsc380 = {
    id: "US",
    displayName: "United States",
    regionId: "021",
    hasTimeZones: true
}, _efsc381 = {
    id: "AX",
    displayName: "Åland Islands",
    regionId: "154",
    hasTimeZones: true
}, _efsc382 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _efsc383 = {
    id: "002",
    displayName: "Africa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _efsc384 = {
    id: "AS",
    displayName: "American Samoa",
    regionId: "061",
    hasTimeZones: true
}, _efsc385 = {
    id: "KY",
    displayName: "Cayman Islands",
    regionId: "029",
    hasTimeZones: true
}, _efsc386 = {
    id: "CZ",
    displayName: "Czech Republic",
    regionId: "151",
    hasTimeZones: true
}, _efsc387 = {
    id: "150",
    displayName: "Europe",
    hasTimeZones: false,
    parentRegionId: "001"
}, _efsc388 = {
    id: "NF",
    displayName: "Norfolk Island",
    regionId: "053",
    hasTimeZones: true
}, _efsc389 = {
    id: "BL",
    displayName: "St. Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _efsc390 = {
    id: "GB",
    displayName: "United Kingdom",
    regionId: "154",
    hasTimeZones: true
}, _efsc391 = {
    id: "EH",
    displayName: "Western Sahara",
    regionId: "015",
    hasTimeZones: true
}, _efsc392 = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ], _efsc393 = {
    relative: _efsc163
}, _efsc394 = {
    id: "IO",
    displayName: "British Indian Ocean Territory",
    hasTimeZones: true
}, _efsc395 = {
    id: "MO",
    displayName: "Macau SAR China",
    regionId: "030",
    hasTimeZones: true
}, _efsc396 = {
    id: "MM",
    displayName: "Myanmar (Burma)",
    regionId: "035",
    hasTimeZones: true
}, _efsc397 = {
    id: "009",
    displayName: "Oceania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _efsc398 = {
    id: "SB",
    displayName: "Solomon Islands",
    regionId: "054",
    hasTimeZones: true
}, _efsc399 = {
    id: "WF",
    displayName: "Wallis & Futuna",
    regionId: "061",
    hasTimeZones: true
}, _efsc400 = {
    d: "M/d/y – M/d/y GGGGG",
    M: "M/d/y – M/d/y GGGGG",
    y: "M/d/y – M/d/y GGGGG"
}, _efsc401 = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ], _efsc402 = {
    d: "E, M/d/y – E, M/d/y",
    M: "E, M/d/y – E, M/d/y",
    y: "E, M/d/y – E, M/d/y"
}, _efsc403 = {
    id: "019",
    displayName: "Americas",
    hasTimeZones: false,
    parentRegionId: "001"
}, _efsc404 = {
    id: "CD",
    displayName: "Congo - Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _efsc405 = {
    id: "FK",
    displayName: "Falkland Islands",
    regionId: "005",
    hasTimeZones: true
}, _efsc406 = {
    id: "PF",
    displayName: "French Polynesia",
    regionId: "061",
    hasTimeZones: true
}, _efsc407 = {
    id: "MH",
    displayName: "Marshall Islands",
    regionId: "057",
    hasTimeZones: true
}, _efsc408 = {
    id: "PG",
    displayName: "Papua New Guinea",
    regionId: "054",
    hasTimeZones: true
}, _efsc409 = {
    id: "PN",
    displayName: "Pitcairn Islands",
    regionId: "061",
    hasTimeZones: true
}, _efsc410 = {
    id: "AG",
    displayName: "Antigua & Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _efsc411 = {
    id: "029",
    displayName: "Caribbean",
    hasTimeZones: false,
    parentRegionId: "019"
}, _efsc412 = {
    id: "GQ",
    displayName: "Equatorial Guinea",
    regionId: "017",
    hasTimeZones: true
}, _efsc413 = {
    id: "054",
    displayName: "Melanesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _efsc414 = {
    id: "061",
    displayName: "Polynesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _efsc415 = {
    id: "KN",
    displayName: "St. Kitts & Nevis",
    regionId: "029",
    hasTimeZones: true
}, _efsc416 = {
    id: "TT",
    displayName: "Trinidad & Tobago",
    regionId: "029",
    hasTimeZones: true
}, _efsc417 = {
    id: "DO",
    displayName: "Dominican Republic",
    regionId: "029",
    hasTimeZones: true
}, _efsc418 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _efsc419 = [ "Mo1", "Mo2", "Mo3", "Mo4", "Mo5", "Mo6", "Mo7", "Mo8", "Mo9", "Mo10", "Mo11", "Mo12" ], _efsc420 = {
    id: "053",
    displayName: "Australasia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _efsc421 = {
    id: "CG",
    displayName: "Congo - Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _efsc422 = {
    id: "HK",
    displayName: "Hong Kong SAR China",
    regionId: "030",
    hasTimeZones: true
}, _efsc423 = {
    id: "ST",
    displayName: "São Tomé & Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _efsc424 = {
    id: "VI",
    displayName: "U.S. Virgin Islands",
    regionId: "029",
    hasTimeZones: true
}, _efsc425 = {
    id: "BA",
    displayName: "Bosnia & Herzegovina",
    regionId: "039",
    hasTimeZones: true
}, _efsc426 = {
    id: "143",
    displayName: "Central Asia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _efsc427 = {
    id: "030",
    displayName: "Eastern Asia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _efsc428 = {
    id: "SJ",
    displayName: "Svalbard & Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _efsc429 = {
    id: "AE",
    displayName: "United Arab Emirates",
    regionId: "145",
    hasTimeZones: true
}, _efsc430 = {
    id: "145",
    displayName: "Western Asia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _efsc431 = {
    id: "BQ",
    displayName: "Caribbean Netherlands",
    regionId: "029",
    hasTimeZones: true
}, _efsc432 = {
    id: "017",
    displayName: "Middle Africa",
    hasTimeZones: false,
    parentRegionId: "002"
}, _efsc433 = {
    id: "005",
    displayName: "South America",
    hasTimeZones: false,
    parentRegionId: "019"
}, _efsc434 = {
    id: "034",
    displayName: "Southern Asia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _efsc435 = {
    id: "PM",
    displayName: "St. Pierre & Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _efsc436 = {
    id: "VG",
    displayName: "British Virgin Islands",
    regionId: "029",
    hasTimeZones: true
}, _efsc437 = {
    id: "014",
    displayName: "Eastern Africa",
    hasTimeZones: false,
    parentRegionId: "002"
}, _efsc438 = {
    id: "151",
    displayName: "Eastern Europe",
    hasTimeZones: false,
    parentRegionId: "150"
}, _efsc439 = {
    id: "035",
    displayName: "Southeast Asia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _efsc440 = {
    id: "TC",
    displayName: "Turks & Caicos Islands",
    regionId: "029",
    hasTimeZones: true
}, _efsc441 = {
    id: "011",
    displayName: "Western Africa",
    hasTimeZones: false,
    parentRegionId: "002"
}, _efsc442 = {
    id: "155",
    displayName: "Western Europe",
    hasTimeZones: false,
    parentRegionId: "150"
}, _efsc443 = {
    id: "013",
    displayName: "Central America",
    hasTimeZones: false,
    parentRegionId: "019"
}, _efsc444 = {
    id: "015",
    displayName: "Northern Africa",
    hasTimeZones: false,
    parentRegionId: "002"
}, _efsc445 = {
    id: "154",
    displayName: "Northern Europe",
    hasTimeZones: false,
    parentRegionId: "150"
}, _efsc446 = {
    id: "PS",
    displayName: "Palestinian Territories",
    regionId: "145",
    hasTimeZones: true
}, _efsc447 = {
    id: "GS",
    displayName: "South Georgia & South Sandwich Islands",
    hasTimeZones: true
}, _efsc448 = {
    id: "018",
    displayName: "Southern Africa",
    hasTimeZones: false,
    parentRegionId: "002"
}, _efsc449 = {
    id: "039",
    displayName: "Southern Europe",
    hasTimeZones: false,
    parentRegionId: "150"
}, _efsc450 = {
    d: "E, d MMM – E, d MMM y",
    M: "E, d MMM – E, d MMM y",
    y: "E, d MMM y – E, d MMM y"
}, _efsc451 = {
    id: "CF",
    displayName: "Central African Republic",
    regionId: "017",
    hasTimeZones: true
}, _efsc452 = {
    id: "021",
    displayName: "Northern America",
    hasTimeZones: false,
    parentRegionId: "019"
}, _efsc453 = {
    id: "MP",
    displayName: "Northern Mariana Islands",
    regionId: "057",
    hasTimeZones: true
}, _efsc454 = {
    id: "VC",
    displayName: "St. Vincent & Grenadines",
    regionId: "029",
    hasTimeZones: true
}, _efsc455 = {
    id: "057",
    displayName: "Micronesian Region",
    hasTimeZones: false,
    parentRegionId: "009"
}, _efsc456 = {
    d: "E, MMM d – E, MMM d, U",
    M: "E, MMM d – E, MMM d, U",
    y: "E, MMM d, U – E, MMM d, U"
}, _efsc457 = {
    d: "E, M/d/y – E, M/d/y GGGGG",
    M: "E, M/d/y – E, M/d/y GGGGG",
    y: "E, M/d/y – E, M/d/y GGGGG"
}, _efsc458 = {
    d: "E, MMM d – E, MMM d, y G",
    M: "E, MMM d – E, MMM d, y G",
    y: "E, MMM d, y – E, MMM d, y G"
}, _efsc459 = {
    future: _efsc56,
    past: _efsc69
}, _efsc460 = {
    future: _efsc57,
    past: _efsc70
}, _efsc461 = {
    future: _efsc58,
    past: _efsc71
}, _efsc462 = {
    future: _efsc59,
    past: _efsc72
}, _efsc463 = {
    future: _efsc63,
    past: _efsc80
}, _efsc464 = {
    future: _efsc73,
    past: _efsc92
}, _efsc465 = {
    future: _efsc74,
    past: _efsc93
}, _efsc466 = [ undefined, "Rat", "Ox", "Tiger", "Rabbit", "Dragon", "Snake", "Horse", "Goat", "Monkey", "Rooster", "Dog" ], _efsc467 = {
    future: _efsc77,
    past: _efsc94
}, _efsc468 = {
    future: _efsc78,
    past: _efsc95
}, _efsc469 = {
    future: _efsc79,
    past: _efsc97
}, _efsc470 = {
    future: _efsc81,
    past: _efsc98
}, _efsc471 = {
    future: _efsc96,
    past: _efsc104
}, _efsc472 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _efsc473 = {
    future: _efsc105,
    past: _efsc111
}, _efsc474 = {
    future: _efsc106,
    past: _efsc112
}, _efsc475 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _efsc476 = {
    future: _efsc108,
    past: _efsc120
}, _efsc477 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _efsc478 = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ], _efsc479 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _efsc480 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _efsc481 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _efsc482 = {
    abbreviated: _efsc5,
    narrow: [ "1", "2", "3", "4" ],
    wide: _efsc145
}, _efsc483 = {
    displayName: "hr.",
    relativeTime: _efsc462
}, _efsc484 = {
    midnight: "midnight",
    am: "AM",
    noon: "noon",
    pm: "PM",
    morning1: "morning",
    afternoon1: "afternoon",
    evening1: "evening",
    night1: "night"
}, _efsc485 = {
    displayName: "day",
    relativeTime: _efsc463
}, _efsc486 = {
    displayName: "min.",
    relativeTime: _efsc464
}, _efsc487 = {
    displayName: "hour",
    relativeTime: _efsc470
}, _efsc488 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _efsc489 = {
    midnight: "mi",
    am: "a",
    noon: "n",
    pm: "p",
    morning1: "in the morning",
    afternoon1: "in the afternoon",
    evening1: "in the evening",
    night1: "at night"
}, _efsc490 = {
    displayName: "minute",
    relativeTime: _efsc473
}, _efsc491 = {
    displayName: "sec.",
    relative: [ "now" ],
    relativeTime: _efsc465
}, _efsc492 = {
    midnight: "midnight",
    am: "AM",
    noon: "noon",
    pm: "PM",
    morning1: "in the morning",
    afternoon1: "in the afternoon",
    evening1: "in the evening",
    night1: "at night"
}, _efsc493 = {
    displayName: "second",
    relative: [ "now" ],
    relativeTime: _efsc474
}, _efsc494 = {
    decimal: ".",
    group: ",",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _efsc495 = {
    displayName: "yr.",
    relative: _efsc101,
    relativeTime: _efsc459
}, _efsc496 = {
    displayName: "mo.",
    relative: _efsc102,
    relativeTime: _efsc460
}, _efsc497 = {
    displayName: "wk.",
    relative: _efsc103,
    relativeTime: _efsc461
}, _efsc498 = {
    displayName: "day",
    relative: _efsc91,
    relativeTime: _efsc463
}, _efsc499 = [ "First Month", "Second Month", "Third Month", "Fourth Month", "Fifth Month", "Sixth Month", "Seventh Month", "Eighth Month", "Ninth Month", "Tenth Month", "Eleventh Month", "Twelfth Month" ], _efsc500 = {
    symbols: _efsc494
}, _efsc501 = {
    displayName: "year",
    relative: _efsc107,
    relativeTime: _efsc467
}, _efsc502 = {
    displayName: "qtr.",
    relative: _efsc109,
    relativeTime: _efsc468
}, _efsc503 = {
    displayName: "week",
    relative: _efsc110,
    relativeTime: _efsc469
}, _efsc504 = {
    format: _efsc382,
    numeric: _efsc7,
    standAlone: _efsc382
}, _efsc505 = {
    displayName: "month",
    relative: _efsc126,
    relativeTime: _efsc471
}, _efsc506 = {
    displayName: "quarter",
    relative: _efsc139,
    relativeTime: _efsc476
}, _efsc507 = {
    symbols: _efsc494,
    digits: "renderSpelloutCardinal"
}, _efsc508 = {
    abbreviated: _efsc100,
    narrow: _efsc38,
    wide: _efsc392,
    "short": _efsc50
}, _efsc509 = {
    symbols: _efsc494,
    digits: "renderSpelloutCardinalFinancial"
}, _efsc510 = {
    abbreviated: _efsc418,
    narrow: _efsc418,
    wide: _efsc418
}, _efsc511 = {
    abbreviated: _efsc401,
    narrow: _efsc125,
    wide: _efsc478
}, _efsc512 = {
    format: _efsc510
}, _efsc513 = {
    format: _efsc482,
    standAlone: _efsc482
}, _efsc514 = {
    abbreviated: _efsc475,
    narrow: _efsc153,
    wide: _efsc475
}, _efsc515 = {
    abbreviated: _efsc477,
    narrow: _efsc137,
    wide: _efsc477
}, _efsc516 = {
    abbreviated: _efsc479,
    narrow: _efsc153,
    wide: _efsc479
}, _efsc517 = {
    abbreviated: _efsc466,
    narrow: _efsc466,
    wide: _efsc466
}, _efsc518 = {
    abbreviated: _efsc472,
    narrow: _efsc137,
    wide: _efsc488
}, _efsc519 = {
    abbreviated: _efsc480,
    narrow: _efsc153,
    wide: _efsc480
}, _efsc520 = {
    abbreviated: _efsc481,
    narrow: _efsc137,
    wide: _efsc481
}, _efsc521 = {
    format: _efsc517
}, _efsc522 = {
    abbreviated: _efsc419,
    narrow: _efsc137,
    wide: _efsc499
}, _efsc523 = {
    "1000": _efsc1,
    "10000": _efsc8,
    "100000": _efsc20,
    "1000000": _efsc2,
    "10000000": _efsc9,
    "100000000": _efsc21,
    "1000000000": _efsc3,
    "10000000000": _efsc10,
    "100000000000": _efsc22,
    "1000000000000": _efsc4,
    "10000000000000": _efsc11,
    "100000000000000": _efsc23
}, _efsc524 = {
    fullDate: "EEEE, MMMM d, r(U)",
    longDate: "MMMM d, r(U)",
    mediumDate: "MMM d, r",
    shortDate: "M/d/r",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "M/d/r, h:mm a",
    mediumDateTime: "MMM d, r, h:mm:ss a",
    longDateTime: "MMMM d, r(U) 'at' h:mm:ss a z",
    fullDateTime: "EEEE, MMMM d, r(U) 'at' h:mm:ss a zzzz"
}, _efsc525 = {
    fullDate: "EEEE, MMMM d, y G",
    longDate: "MMMM d, y G",
    mediumDate: "MMM d, y G",
    shortDate: "M/d/y GGGGG",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "M/d/y GGGGG, h:mm a",
    mediumDateTime: "MMM d, y G, h:mm:ss a",
    longDateTime: "MMMM d, y G 'at' h:mm:ss a z",
    fullDateTime: "EEEE, MMMM d, y G 'at' h:mm:ss a zzzz"
}, _efsc526 = {
    "1000": _efsc12,
    "10000": _efsc24,
    "100000": _efsc32,
    "1000000": _efsc13,
    "10000000": _efsc25,
    "100000000": _efsc33,
    "1000000000": _efsc14,
    "10000000000": _efsc26,
    "100000000000": _efsc34,
    "1000000000000": _efsc15,
    "10000000000000": _efsc27,
    "100000000000000": _efsc35
}, _efsc527 = {
    abbreviated: _efsc492,
    narrow: _efsc492,
    wide: _efsc484
}, _efsc528 = {
    format: _efsc508,
    standAlone: _efsc508
}, _efsc529 = {
    abbreviated: _efsc492,
    narrow: _efsc489,
    wide: _efsc492
}, _efsc530 = {
    "1000": _efsc51,
    "10000": _efsc64,
    "100000": _efsc86,
    "1000000": _efsc46,
    "10000000": _efsc52,
    "100000000": _efsc65,
    "1000000000": _efsc47,
    "10000000000": _efsc53,
    "100000000000": _efsc66,
    "1000000000000": _efsc54,
    "10000000000000": _efsc67,
    "100000000000000": _efsc87
}, _efsc531 = {
    d: "d",
    E: "ccc",
    Ed: "d E",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "MMM d, y G",
    GyMMMEd: "E, MMM d, y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "M/d",
    MEd: "E, M/d",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "E, MMM d",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M/y GGGGG",
    yyyyMd: "M/d/y GGGGG",
    yyyyMEd: "E, M/d/y GGGGG",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "MMM d, y G",
    yyyyMMMEd: "E, MMM d, y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G"
}, _efsc532 = {
    format: _efsc511,
    standAlone: _efsc511
}, _efsc533 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _efsc534 = {
    d: "d",
    E: "ccc",
    Ed: "d E",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss",
    Gy: "r(U)",
    GyMMM: "MMM r(U)",
    GyMMMd: "MMM d, r",
    GyMMMEd: "E, MMM d, r(U)",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "M/d",
    MEd: "E, M/d",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "E, MMM d",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "M/U",
    UMd: "M/d/U",
    UMMM: "MMM U",
    UMMMd: "MMM d, U",
    y: "r(U)",
    yMd: "M/d/r",
    yyyy: "r(U)",
    yyyyM: "M/r",
    yyyyMd: "M/d/r",
    yyyyMEd: "E, M/d/r",
    yyyyMMM: "MMM r(U)",
    yyyyMMMd: "MMM d, r",
    yyyyMMMEd: "E, MMM d, r(U)",
    yyyyMMMM: "MMMM r(U)",
    yyyyQQQ: "QQQ r(U)",
    yyyyQQQQ: "QQQQ r(U)"
}, _efsc535 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _efsc536 = {
    format: _efsc518,
    standAlone: _efsc518
}, _efsc537 = {
    format: _efsc522,
    standAlone: _efsc522
}, _efsc538 = {
    "long": _efsc530,
    "short": _efsc523,
    "default": "#,##0.###"
}, _efsc539 = {
    basic: _efsc525,
    cldr: _efsc531
}, _efsc540 = {
    format: _efsc529,
    standAlone: _efsc527
}, _efsc541 = {
    basic: _efsc524,
    cldr: _efsc534
}, _efsc542 = {
    d: {
        d: "d – d"
    },
    h: _efsc36,
    H: {
        H: "HH – HH"
    },
    hm: _efsc144,
    Hm: _efsc55,
    hmv: _efsc201,
    Hmv: _efsc88,
    hv: _efsc40,
    Hv: {
        H: "HH – HH v"
    },
    M: {
        M: "M – M"
    },
    Md: _efsc37,
    MEd: _efsc89,
    MMM: {
        M: "MMM – MMM"
    },
    MMMd: _efsc44,
    MMMEd: _efsc124,
    y: {
        y: "U – U"
    },
    yM: _efsc39,
    yMd: _efsc141,
    yMEd: _efsc402,
    yMMM: _efsc48,
    yMMMd: _efsc205,
    yMMMEd: _efsc456,
    yMMMM: _efsc75
}, _efsc543 = {
    d: {
        d: "d – d"
    },
    h: _efsc36,
    H: {
        H: "HH – HH"
    },
    hm: _efsc144,
    Hm: _efsc55,
    hmv: _efsc201,
    Hmv: _efsc88,
    hv: _efsc40,
    Hv: {
        H: "HH – HH v"
    },
    M: {
        M: "M – M"
    },
    Md: _efsc37,
    MEd: _efsc89,
    MMM: {
        M: "MMM – MMM"
    },
    MMMd: _efsc44,
    MMMEd: _efsc124,
    y: {
        y: "y – y G"
    },
    yM: _efsc90,
    yMd: _efsc400,
    yMEd: _efsc457,
    yMMM: _efsc68,
    yMMMd: _efsc361,
    yMMMEd: _efsc458,
    yMMMM: _efsc99
}, _efsc544 = {
    beforeCurrency: _efsc533,
    afterCurrency: _efsc533
}, _efsc545 = {
    "short": _efsc526,
    "default": "¤#,##0.00",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _efsc544
}, _efsc546 = {
    abbreviated: _efsc535,
    narrow: _efsc535,
    wide: _efsc535
}, _efsc547 = {
    format: _efsc546
}, _efsc548 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _efsc538,
    currency: _efsc545,
    percent: {
        "default": "#,##0%"
    }
}, _efsc549 = {
    era: {
        displayName: "era"
    },
    year: _efsc501,
    "year-short": _efsc495,
    quarter: _efsc506,
    "quarter-short": _efsc502,
    month: _efsc505,
    "month-short": _efsc496,
    week: _efsc503,
    "week-short": _efsc497,
    day: _efsc498,
    "day-short": _efsc485,
    weekday: _efsc41,
    dayperiod: _efsc6,
    hour: _efsc487,
    "hour-short": _efsc483,
    minute: _efsc490,
    "minute-short": _efsc486,
    second: _efsc493,
    "second-short": _efsc491,
    zone: _efsc28,
    sun: _efsc202,
    "sun-short": _efsc146,
    "sun-narrow": _efsc130,
    mon: _efsc203,
    "mon-short": _efsc147,
    "mon-narrow": _efsc121,
    tue: _efsc311,
    "tue-short": _efsc148,
    "tue-narrow": _efsc131,
    wed: _efsc393,
    "wed-short": _efsc149,
    "wed-narrow": _efsc122,
    thu: _efsc362,
    "thu-short": _efsc150,
    "thu-narrow": _efsc132,
    fri: _efsc204,
    "fri-short": _efsc151,
    "fri-narrow": _efsc123,
    sat: _efsc363,
    "sat-short": _efsc152,
    "sat-narrow": _efsc133
}, _efsc550 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _efsc549
}, _efsc551 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _efsc552 = {
    dayParts: _efsc512,
    days: _efsc547,
    months: _efsc547,
    years: _efsc547,
    zodiacs: _efsc521
}, _efsc553 = {
    dateFormats: _efsc539,
    datePartsOrder: "mdy",
    dateIntervalFormats: _efsc543,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _efsc528,
    dayPeriods: _efsc540,
    monthNames: _efsc536,
    eraNames: _efsc43,
    quarterNames: _efsc513,
    fields: _efsc549
}, _efsc554 = {
    dateFormats: _efsc541,
    datePartsOrder: "md",
    dateIntervalFormats: _efsc542,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _efsc528,
    dayPeriods: _efsc540,
    cyclicNames: _efsc552,
    monthNames: _efsc537,
    monthPatterns: _efsc504,
    quarterNames: _efsc513,
    fields: _efsc549
};

inter.id = "en";

inter.listPatterns = {
    "default": {
        "2": "{0} and {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0}, and {1}"
    },
    unit: P.listPatterns.default,
    unitNarrow: {
        "2": "{0} {1}",
        start: "{0} {1}",
        middle: "{0} {1}",
        end: "{0} {1}"
    },
    unitShort: P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} g-force",
                other: "{0} g-force"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} meter per second squared",
                other: "{0} meters per second squared"
            },
            angleRevolution: {
                one: "{0} revolution",
                other: "{0} revolutions"
            },
            angleRadian: {
                one: "{0} radian",
                other: "{0} radians"
            },
            angleDegree: {
                one: "{0} degree",
                other: "{0} degrees"
            },
            angleArcMinute: {
                one: "{0} arcminute",
                other: "{0} arcminutes"
            },
            angleArcSecond: {
                one: "{0} arcsecond",
                other: "{0} arcseconds"
            },
            areaSquareKilometer: {
                one: "{0} square kilometer",
                other: "{0} square kilometers"
            },
            areaHectare: {
                one: "{0} hectare",
                other: "{0} hectares"
            },
            areaSquareMeter: {
                one: "{0} square meter",
                other: "{0} square meters"
            },
            areaSquareCentimeter: {
                one: "{0} square centimeter",
                other: "{0} square centimeters"
            },
            areaSquareMile: {
                one: "{0} square mile",
                other: "{0} square miles"
            },
            areaAcre: {
                one: "{0} acre",
                other: "{0} acres"
            },
            areaSquareYard: {
                one: "{0} square yard",
                other: "{0} square yards"
            },
            areaSquareFoot: {
                one: "{0} square foot",
                other: "{0} square feet"
            },
            areaSquareInch: {
                one: "{0} square inch",
                other: "{0} square inches"
            },
            concentrKarat: {
                one: "{0} karat",
                other: "{0} karats"
            },
            concentrMilligramPerDeciliter: {
                one: "{0} milligram per deciliter",
                other: "{0} milligrams per deciliter"
            },
            concentrMillimolePerLiter: {
                one: "{0} millimole per liter",
                other: "{0} millimoles per liter"
            },
            concentrPartPerMillion: {
                one: "{0} part per million",
                other: "{0} parts per million"
            },
            consumptionLiterPerKilometer: {
                one: "{0} liter per kilometer",
                other: "{0} liters per kilometer"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} liter per 100 kilometers",
                other: "{0} liters per 100 kilometers"
            },
            consumptionMilePerGallon: {
                one: "{0} mile per gallon",
                other: "{0} miles per gallon"
            },
            consumptionMilePerGallonImperial: {
                one: "{0} mile per Imp. gallon",
                other: "{0} miles per Imp. gallon"
            },
            digitalTerabyte: {
                one: "{0} terabyte",
                other: "{0} terabytes"
            },
            digitalTerabit: {
                one: "{0} terabit",
                other: "{0} terabits"
            },
            digitalGigabyte: {
                one: "{0} gigabyte",
                other: "{0} gigabytes"
            },
            digitalGigabit: {
                one: "{0} gigabit",
                other: "{0} gigabits"
            },
            digitalMegabyte: {
                one: "{0} megabyte",
                other: "{0} megabytes"
            },
            digitalMegabit: {
                one: "{0} megabit",
                other: "{0} megabits"
            },
            digitalKilobyte: {
                one: "{0} kilobyte",
                other: "{0} kilobytes"
            },
            digitalKilobit: {
                one: "{0} kilobit",
                other: "{0} kilobits"
            },
            digitalByte: {
                one: "{0} byte",
                other: "{0} bytes"
            },
            digitalBit: {
                one: "{0} bit",
                other: "{0} bits"
            },
            durationCentury: {
                one: "{0} century",
                other: "{0} centuries"
            },
            durationYear: {
                one: "{0} year",
                other: "{0} years"
            },
            durationMonth: {
                one: "{0} month",
                other: "{0} months"
            },
            durationWeek: {
                one: "{0} week",
                other: "{0} weeks"
            },
            durationDay: _efsc42,
            durationHour: {
                one: "{0} hour",
                other: "{0} hours"
            },
            durationMinute: {
                one: "{0} minute",
                other: "{0} minutes"
            },
            durationSecond: {
                one: "{0} second",
                other: "{0} seconds"
            },
            durationMillisecond: {
                one: "{0} millisecond",
                other: "{0} milliseconds"
            },
            durationMicrosecond: {
                one: "{0} microsecond",
                other: "{0} microseconds"
            },
            durationNanosecond: {
                one: "{0} nanosecond",
                other: "{0} nanoseconds"
            },
            electricAmpere: {
                one: "{0} ampere",
                other: "{0} amperes"
            },
            electricMilliampere: {
                one: "{0} milliampere",
                other: "{0} milliamperes"
            },
            electricOhm: {
                one: "{0} ohm",
                other: "{0} ohms"
            },
            electricVolt: {
                one: "{0} volt",
                other: "{0} volts"
            },
            energyKilocalorie: {
                one: "{0} kilocalorie",
                other: "{0} kilocalories"
            },
            energyCalorie: {
                one: "{0} calorie",
                other: "{0} calories"
            },
            energyFoodcalorie: {
                one: "{0} Calorie",
                other: "{0} Calories"
            },
            energyKilojoule: {
                one: "{0} kilojoule",
                other: "{0} kilojoules"
            },
            energyJoule: {
                one: "{0} joule",
                other: "{0} joules"
            },
            energyKilowattHour: {
                one: "{0} kilowatt hour",
                other: "{0} kilowatt-hours"
            },
            frequencyGigahertz: {
                one: "{0} gigahertz",
                other: "{0} gigahertz"
            },
            frequencyMegahertz: {
                one: "{0} megahertz",
                other: "{0} megahertz"
            },
            frequencyKilohertz: {
                one: "{0} kilohertz",
                other: "{0} kilohertz"
            },
            frequencyHertz: {
                one: "{0} hertz",
                other: "{0} hertz"
            },
            lengthKilometer: {
                one: "{0} kilometer",
                other: "{0} kilometers"
            },
            lengthMeter: {
                one: "{0} meter",
                other: "{0} meters"
            },
            lengthDecimeter: {
                one: "{0} decimeter",
                other: "{0} decimeters"
            },
            lengthCentimeter: {
                one: "{0} centimeter",
                other: "{0} centimeters"
            },
            lengthMillimeter: {
                one: "{0} millimeter",
                other: "{0} millimeters"
            },
            lengthMicrometer: {
                one: "{0} micrometer",
                other: "{0} micrometers"
            },
            lengthNanometer: {
                one: "{0} nanometer",
                other: "{0} nanometers"
            },
            lengthPicometer: {
                one: "{0} picometer",
                other: "{0} picometers"
            },
            lengthMile: {
                one: "{0} mile",
                other: "{0} miles"
            },
            lengthYard: {
                one: "{0} yard",
                other: "{0} yards"
            },
            lengthFoot: {
                one: "{0} foot",
                other: "{0} feet"
            },
            lengthInch: {
                one: "{0} inch",
                other: "{0} inches"
            },
            lengthParsec: {
                one: "{0} parsec",
                other: "{0} parsecs"
            },
            lengthLightYear: {
                one: "{0} light year",
                other: "{0} light years"
            },
            lengthAstronomicalUnit: {
                one: "{0} astronomical unit",
                other: "{0} astronomical units"
            },
            lengthFurlong: {
                one: "{0} furlong",
                other: "{0} furlongs"
            },
            lengthFathom: {
                one: "{0} fathom",
                other: "{0} fathoms"
            },
            lengthNauticalMile: {
                one: "{0} nautical mile",
                other: "{0} nautical miles"
            },
            lengthMileScandinavian: {
                one: "{0} mile-scandinavian",
                other: "{0} miles-scandinavian"
            },
            lightLux: {
                one: "{0} lux",
                other: "{0} lux"
            },
            massMetricTon: {
                one: "{0} metric ton",
                other: "{0} metric tons"
            },
            massKilogram: {
                one: "{0} kilogram",
                other: "{0} kilograms"
            },
            massGram: {
                one: "{0} gram",
                other: "{0} grams"
            },
            massMilligram: {
                one: "{0} milligram",
                other: "{0} milligrams"
            },
            massMicrogram: {
                one: "{0} microgram",
                other: "{0} micrograms"
            },
            massTon: {
                one: "{0} ton",
                other: "{0} tons"
            },
            massStone: {
                one: "{0} stone",
                other: "{0} stones"
            },
            massPound: {
                one: "{0} pound",
                other: "{0} pounds"
            },
            massOunce: {
                one: "{0} ounce",
                other: "{0} ounces"
            },
            massOunceTroy: {
                one: "{0} troy ounce",
                other: "{0} troy ounces"
            },
            massCarat: {
                one: "{0} carat",
                other: "{0} carats"
            },
            powerGigawatt: {
                one: "{0} gigawatt",
                other: "{0} gigawatts"
            },
            powerMegawatt: {
                one: "{0} megawatt",
                other: "{0} megawatts"
            },
            powerKilowatt: {
                one: "{0} kilowatt",
                other: "{0} kilowatts"
            },
            powerWatt: {
                one: "{0} watt",
                other: "{0} watts"
            },
            powerMilliwatt: {
                one: "{0} milliwatt",
                other: "{0} milliwatts"
            },
            powerHorsepower: {
                one: "{0} horsepower",
                other: "{0} horsepower"
            },
            pressureHectopascal: {
                one: "{0} hectopascal",
                other: "{0} hectopascals"
            },
            pressureMillimeterOfMercury: {
                one: "{0} millimeter of mercury",
                other: "{0} millimeters of mercury"
            },
            pressurePoundPerSquareInch: {
                one: "{0} pound per square inch",
                other: "{0} pounds per square inch"
            },
            pressureInchHg: {
                one: "{0} inch of mercury",
                other: "{0} inches of mercury"
            },
            pressureMillibar: {
                one: "{0} millibar",
                other: "{0} millibars"
            },
            speedKilometerPerHour: {
                one: "{0} kilometer per hour",
                other: "{0} kilometers per hour"
            },
            speedMeterPerSecond: {
                one: "{0} meter per second",
                other: "{0} meters per second"
            },
            speedMilePerHour: {
                one: "{0} mile per hour",
                other: "{0} miles per hour"
            },
            speedKnot: {
                one: "{0} knot",
                other: "{0} knots"
            },
            temperatureCelsius: {
                one: "{0} degree Celsius",
                other: "{0} degrees Celsius"
            },
            temperatureFahrenheit: {
                one: "{0} degree Fahrenheit",
                other: "{0} degrees Fahrenheit"
            },
            temperatureKelvin: {
                one: "{0} kelvin",
                other: "{0} kelvins"
            },
            volumeCubicKilometer: {
                one: "{0} cubic kilometer",
                other: "{0} cubic kilometers"
            },
            volumeCubicMeter: {
                one: "{0} cubic meter",
                other: "{0} cubic meters"
            },
            volumeCubicCentimeter: {
                one: "{0} cubic centimeter",
                other: "{0} cubic centimeters"
            },
            volumeCubicMile: {
                one: "{0} cubic mile",
                other: "{0} cubic miles"
            },
            volumeCubicYard: {
                one: "{0} cubic yard",
                other: "{0} cubic yards"
            },
            volumeCubicFoot: {
                one: "{0} cubic foot",
                other: "{0} cubic feet"
            },
            volumeCubicInch: {
                one: "{0} cubic inch",
                other: "{0} cubic inches"
            },
            volumeMegaliter: {
                one: "{0} megaliter",
                other: "{0} megaliters"
            },
            volumeHectoliter: {
                one: "{0} hectoliter",
                other: "{0} hectoliters"
            },
            volumeLiter: {
                one: "{0} liter",
                other: "{0} liters"
            },
            volumeDeciliter: {
                one: "{0} deciliter",
                other: "{0} deciliters"
            },
            volumeCentiliter: {
                one: "{0} centiliter",
                other: "{0} centiliters"
            },
            volumeMilliliter: {
                one: "{0} milliliter",
                other: "{0} milliliters"
            },
            volumePintMetric: {
                one: "{0} metric pint",
                other: "{0} metric pints"
            },
            volumeCupMetric: {
                one: "{0} metric cup",
                other: "{0} metric cups"
            },
            volumeAcreFoot: {
                one: "{0} acre-foot",
                other: "{0} acre-feet"
            },
            volumeBushel: {
                one: "{0} bushel",
                other: "{0} bushels"
            },
            volumeGallon: {
                one: "{0} gallon",
                other: "{0} gallons"
            },
            volumeGallonImperial: {
                one: "{0} Imp. gallon",
                other: "{0} Imp. gallons"
            },
            volumeQuart: {
                one: "{0} quart",
                other: "{0} quarts"
            },
            volumePint: {
                one: "{0} pint",
                other: "{0} pints"
            },
            volumeCup: {
                one: "{0} cup",
                other: "{0} cups"
            },
            volumeFluidOunce: {
                one: "{0} fluid ounce",
                other: "{0} fluid ounces"
            },
            volumeTablespoon: {
                one: "{0} tablespoon",
                other: "{0} tablespoons"
            },
            volumeTeaspoon: {
                one: "{0} teaspoon",
                other: "{0} teaspoons"
            }
        },
        compoundUnit: {
            per: "{0} per {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                one: "{0} G",
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: {
                one: "{0} rev",
                other: "{0} rev"
            },
            angleRadian: {
                one: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: {
                one: "{0} deg",
                other: "{0} deg"
            },
            angleArcMinute: {
                one: "{0} arcmin",
                other: "{0} arcmins"
            },
            angleArcSecond: {
                one: "{0} arcsec",
                other: "{0} arcsecs"
            },
            areaSquareKilometer: {
                one: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                one: "{0} ha",
                other: "{0} ha"
            },
            areaSquareMeter: {
                one: "{0} m²",
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: {
                one: "{0} sq mi",
                other: "{0} sq mi"
            },
            areaAcre: {
                one: "{0} ac",
                other: "{0} ac"
            },
            areaSquareYard: {
                one: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: {
                one: "{0} sq ft",
                other: "{0} sq ft"
            },
            areaSquareInch: {
                one: "{0} in²",
                other: "{0} in²"
            },
            concentrKarat: {
                one: "{0} kt",
                other: "{0} kt"
            },
            concentrMilligramPerDeciliter: {
                one: "{0} mg/dL",
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                one: "{0} mmol/L",
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                one: "{0} ppm",
                other: "{0} ppm"
            },
            consumptionLiterPerKilometer: {
                one: "{0} L/km",
                other: "{0} L/km"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} L/100 km",
                other: "{0} L/100 km"
            },
            consumptionMilePerGallon: {
                one: "{0} mpg",
                other: "{0} mpg"
            },
            consumptionMilePerGallonImperial: {
                one: "{0} mpg Imp.",
                other: "{0} mpg Imp."
            },
            digitalTerabyte: {
                one: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: {
                one: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: {
                one: "{0} kB",
                other: "{0} kB"
            },
            digitalKilobit: {
                one: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: {
                one: "{0} byte",
                other: "{0} byte"
            },
            digitalBit: {
                one: "{0} bit",
                other: "{0} bit"
            },
            durationCentury: _efsc30,
            durationYear: {
                one: "{0} yr",
                other: "{0} yrs"
            },
            durationMonth: {
                one: "{0} mth",
                other: "{0} mths"
            },
            durationWeek: {
                one: "{0} wk",
                other: "{0} wks"
            },
            durationDay: _efsc42,
            durationHour: {
                one: "{0} hr",
                other: "{0} hr"
            },
            durationMinute: {
                one: "{0} min",
                other: "{0} min"
            },
            durationSecond: {
                one: "{0} sec",
                other: "{0} sec"
            },
            durationMillisecond: {
                one: "{0} ms",
                other: "{0} ms"
            },
            durationMicrosecond: {
                one: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: {
                one: "{0} kcal",
                other: "{0} kcal"
            },
            energyCalorie: {
                one: "{0} cal",
                other: "{0} cal"
            },
            energyFoodcalorie: {
                one: "{0} Cal",
                other: "{0} Cal"
            },
            energyKilojoule: {
                one: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: {
                one: "{0} km",
                other: "{0} km"
            },
            lengthMeter: {
                one: "{0} m",
                other: "{0} m"
            },
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: {
                one: "{0} cm",
                other: "{0} cm"
            },
            lengthMillimeter: {
                one: "{0} mm",
                other: "{0} mm"
            },
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: {
                one: "{0} pm",
                other: "{0} pm"
            },
            lengthMile: {
                one: "{0} mi",
                other: "{0} mi"
            },
            lengthYard: {
                one: "{0} yd",
                other: "{0} yd"
            },
            lengthFoot: {
                one: "{0} ft",
                other: "{0} ft"
            },
            lengthInch: {
                one: "{0} in",
                other: "{0} in"
            },
            lengthParsec: {
                one: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: {
                one: "{0} ly",
                other: "{0} ly"
            },
            lengthAstronomicalUnit: {
                one: "{0} au",
                other: "{0} au"
            },
            lengthFurlong: {
                one: "{0} fur",
                other: "{0} fur"
            },
            lengthFathom: {
                one: "{0} ftm",
                other: "{0} ftm"
            },
            lengthNauticalMile: {
                one: "{0} nmi",
                other: "{0} nmi"
            },
            lengthMileScandinavian: {
                one: "{0} smi",
                other: "{0} smi"
            },
            lightLux: {
                one: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: {
                one: "{0} t",
                other: "{0} t"
            },
            massKilogram: {
                one: "{0} kg",
                other: "{0} kg"
            },
            massGram: {
                one: "{0} g",
                other: "{0} g"
            },
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} µg",
                other: "{0} µg"
            },
            massTon: {
                one: "{0} tn",
                other: "{0} tn"
            },
            massStone: {
                one: "{0} st",
                other: "{0} st"
            },
            massPound: {
                one: "{0} lb",
                other: "{0} lb"
            },
            massOunce: {
                one: "{0} oz",
                other: "{0} oz"
            },
            massOunceTroy: {
                one: "{0} oz t",
                other: "{0} oz t"
            },
            massCarat: {
                one: "{0} CD",
                other: "{0} CD"
            },
            powerGigawatt: {
                one: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: {
                one: "{0} kW",
                other: "{0} kW"
            },
            powerWatt: {
                one: "{0} W",
                other: "{0} W"
            },
            powerMilliwatt: {
                one: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: {
                one: "{0} hp",
                other: "{0} hp"
            },
            pressureHectopascal: {
                one: "{0} hPa",
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                one: "{0} mm Hg",
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0} psi",
                other: "{0} psi"
            },
            pressureInchHg: {
                one: "{0} inHg",
                other: "{0} inHg"
            },
            pressureMillibar: {
                one: "{0} mbar",
                other: "{0} mbar"
            },
            speedKilometerPerHour: {
                one: "{0} kph",
                other: "{0} kph"
            },
            speedMeterPerSecond: {
                one: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: {
                one: "{0} mph",
                other: "{0} mph"
            },
            speedKnot: {
                one: "{0} kn",
                other: "{0} kn"
            },
            temperatureCelsius: _efsc31,
            temperatureFahrenheit: {
                one: "{0}°F",
                other: "{0}°F"
            },
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: {
                one: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMeter: {
                one: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: {
                one: "{0} mi³",
                other: "{0} mi³"
            },
            volumeCubicYard: {
                one: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: {
                one: "{0} in³",
                other: "{0} in³"
            },
            volumeMegaliter: {
                one: "{0} ML",
                other: "{0} ML"
            },
            volumeHectoliter: {
                one: "{0} hL",
                other: "{0} hL"
            },
            volumeLiter: {
                one: "{0} L",
                other: "{0} L"
            },
            volumeDeciliter: {
                one: "{0} dL",
                other: "{0} dL"
            },
            volumeCentiliter: {
                one: "{0} cL",
                other: "{0} cL"
            },
            volumeMilliliter: {
                one: "{0} mL",
                other: "{0} mL"
            },
            volumePintMetric: {
                one: "{0} mpt",
                other: "{0} mpt"
            },
            volumeCupMetric: {
                one: "{0} mc",
                other: "{0} mc"
            },
            volumeAcreFoot: {
                one: "{0} ac ft",
                other: "{0} ac ft"
            },
            volumeBushel: {
                one: "{0} bu",
                other: "{0} bu"
            },
            volumeGallon: {
                one: "{0} gal",
                other: "{0} gal"
            },
            volumeGallonImperial: {
                one: "{0} gal Imp.",
                other: "{0} gal Imp."
            },
            volumeQuart: {
                one: "{0} qt",
                other: "{0} qt"
            },
            volumePint: {
                one: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: _efsc30,
            volumeFluidOunce: {
                one: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} tbsp",
                other: "{0} tbsp"
            },
            volumeTeaspoon: {
                one: "{0} tsp",
                other: "{0} tsp"
            },
            temperatureGeneric: {
                other: "{0}°"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                one: "{0}G",
                other: "{0}Gs"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0}m/s²",
                other: "{0}m/s²"
            },
            angleRevolution: {
                one: "{0}rev",
                other: "{0}rev"
            },
            angleRadian: {
                one: "{0}rad",
                other: "{0}rad"
            },
            angleDegree: _efsc16,
            angleArcMinute: _efsc17,
            angleArcSecond: _efsc18,
            areaHectare: {
                one: "{0}ha",
                other: "{0}ha"
            },
            areaSquareCentimeter: {
                one: "{0}cm²",
                other: "{0}cm²"
            },
            areaSquareMile: {
                one: "{0}mi²",
                other: "{0}mi²"
            },
            areaAcre: {
                one: "{0}ac",
                other: "{0}ac"
            },
            areaSquareYard: {
                one: "{0}yd²",
                other: "{0}yd²"
            },
            areaSquareFoot: {
                one: "{0}ft²",
                other: "{0}ft²"
            },
            areaSquareInch: {
                one: "{0}in²",
                other: "{0}in²"
            },
            concentrKarat: {
                one: "{0}kt",
                other: "{0}kt"
            },
            concentrMilligramPerDeciliter: {
                one: "{0}mg/dL",
                other: "{0}mg/dL"
            },
            concentrMillimolePerLiter: {
                one: "{0}mmol/L",
                other: "{0}mmol/L"
            },
            concentrPartPerMillion: {
                one: "{0}ppm",
                other: "{0}ppm"
            },
            consumptionLiterPerKilometer: {
                one: "{0}L/km",
                other: "{0}L/km"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0}L/100km",
                other: "{0}L/100km"
            },
            consumptionMilePerGallon: {
                one: "{0}mpg",
                other: "{0}mpg"
            },
            consumptionMilePerGallonImperial: {
                one: "{0}mpgIm",
                other: "{0}mpgIm"
            },
            digitalTerabyte: {
                one: "{0}TB",
                other: "{0}TB"
            },
            digitalTerabit: {
                one: "{0}Tb",
                other: "{0}Tb"
            },
            digitalGigabyte: {
                one: "{0}GB",
                other: "{0}GB"
            },
            digitalGigabit: {
                one: "{0}Gb",
                other: "{0}Gb"
            },
            digitalMegabyte: {
                one: "{0}MB",
                other: "{0}MB"
            },
            digitalMegabit: {
                one: "{0}Mb",
                other: "{0}Mb"
            },
            digitalKilobyte: {
                one: "{0}kB",
                other: "{0}kB"
            },
            digitalKilobit: {
                one: "{0}kb",
                other: "{0}kb"
            },
            digitalByte: {
                one: "{0}byte",
                other: "{0}byte"
            },
            digitalBit: {
                one: "{0}bit",
                other: "{0}bit"
            },
            durationYear: {
                one: "{0}y",
                other: "{0}y"
            },
            durationMonth: _efsc19,
            durationWeek: {
                one: "{0}w",
                other: "{0}w"
            },
            durationDay: {
                one: "{0}d",
                other: "{0}d"
            },
            durationHour: {
                one: "{0}h",
                other: "{0}h"
            },
            durationMinute: _efsc19,
            durationSecond: {
                one: "{0}s",
                other: "{0}s"
            },
            durationMillisecond: {
                one: "{0}ms",
                other: "{0}ms"
            },
            durationMicrosecond: {
                one: "{0}μs",
                other: "{0}μs"
            },
            durationNanosecond: {
                one: "{0}ns",
                other: "{0}ns"
            },
            electricAmpere: {
                one: "{0}A",
                other: "{0}A"
            },
            electricMilliampere: {
                one: "{0}mA",
                other: "{0}mA"
            },
            electricOhm: {
                one: "{0}Ω",
                other: "{0}Ω"
            },
            electricVolt: {
                one: "{0}V",
                other: "{0}V"
            },
            energyKilocalorie: {
                one: "{0}kcal",
                other: "{0}kcal"
            },
            energyCalorie: {
                one: "{0}cal",
                other: "{0}cal"
            },
            energyFoodcalorie: {
                one: "{0}Cal",
                other: "{0}Cal"
            },
            energyKilojoule: {
                one: "{0}kJ",
                other: "{0}kJ"
            },
            energyJoule: {
                one: "{0}J",
                other: "{0}J"
            },
            energyKilowattHour: {
                one: "{0}kWh",
                other: "{0}kWh"
            },
            frequencyGigahertz: {
                one: "{0}GHz",
                other: "{0}GHz"
            },
            frequencyMegahertz: {
                one: "{0}MHz",
                other: "{0}MHz"
            },
            frequencyKilohertz: {
                one: "{0}kHz",
                other: "{0}kHz"
            },
            frequencyHertz: {
                one: "{0}Hz",
                other: "{0}Hz"
            },
            lengthKilometer: {
                one: "{0}km",
                other: "{0}km"
            },
            lengthMeter: _efsc19,
            lengthDecimeter: {
                one: "{0}dm",
                other: "{0}dm"
            },
            lengthCentimeter: {
                one: "{0}cm",
                other: "{0}cm"
            },
            lengthMillimeter: {
                one: "{0}mm",
                other: "{0}mm"
            },
            lengthMicrometer: {
                one: "{0}µm",
                other: "{0}µm"
            },
            lengthNanometer: {
                one: "{0}nm",
                other: "{0}nm"
            },
            lengthPicometer: {
                one: "{0}pm",
                other: "{0}pm"
            },
            lengthMile: {
                one: "{0}mi",
                other: "{0}mi"
            },
            lengthYard: {
                one: "{0}yd",
                other: "{0}yd"
            },
            lengthFoot: _efsc17,
            lengthInch: _efsc18,
            lengthParsec: {
                one: "{0}pc",
                other: "{0}pc"
            },
            lengthLightYear: {
                one: "{0}ly",
                other: "{0}ly"
            },
            lengthAstronomicalUnit: {
                one: "{0}au",
                other: "{0}au"
            },
            lengthFurlong: {
                one: "{0}fur",
                other: "{0}fur"
            },
            lengthFathom: {
                one: "{0}fm",
                other: "{0}fm"
            },
            lengthNauticalMile: {
                one: "{0}nmi",
                other: "{0}nmi"
            },
            lengthMileScandinavian: {
                one: "{0}smi",
                other: "{0}smi"
            },
            lightLux: {
                one: "{0}lx",
                other: "{0}lx"
            },
            massMetricTon: {
                one: "{0}t",
                other: "{0}t"
            },
            massKilogram: {
                one: "{0}kg",
                other: "{0}kg"
            },
            massGram: {
                one: "{0}g",
                other: "{0}g"
            },
            massMilligram: {
                one: "{0}mg",
                other: "{0}mg"
            },
            massMicrogram: {
                one: "{0}µg",
                other: "{0}µg"
            },
            massTon: {
                one: "{0}tn",
                other: "{0}tn"
            },
            massStone: {
                one: "{0}st",
                other: "{0}st"
            },
            massPound: {
                one: "{0}#",
                other: "{0}#"
            },
            massOunce: {
                one: "{0}oz",
                other: "{0}oz"
            },
            massOunceTroy: {
                one: "{0}oz t",
                other: "{0}oz t"
            },
            massCarat: {
                one: "{0}CD",
                other: "{0}CD"
            },
            powerGigawatt: {
                one: "{0}GW",
                other: "{0}GW"
            },
            powerMegawatt: {
                one: "{0}MW",
                other: "{0}MW"
            },
            powerKilowatt: {
                one: "{0}kW",
                other: "{0}kW"
            },
            powerWatt: {
                one: "{0}W",
                other: "{0}W"
            },
            powerMilliwatt: {
                one: "{0}mW",
                other: "{0}mW"
            },
            powerHorsepower: {
                one: "{0}hp",
                other: "{0}hp"
            },
            pressureHectopascal: {
                one: "{0}hPa",
                other: "{0}hPa"
            },
            pressureMillimeterOfMercury: {
                one: "{0}mm Hg",
                other: "{0}mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0}psi",
                other: "{0}psi"
            },
            pressureInchHg: {
                one: "{0}″ Hg",
                other: "{0}″ Hg"
            },
            pressureMillibar: {
                one: "{0}mb",
                other: "{0}mb"
            },
            speedKilometerPerHour: {
                one: "{0}kph",
                other: "{0}kph"
            },
            speedMeterPerSecond: {
                one: "{0}m/s",
                other: "{0}m/s"
            },
            speedMilePerHour: {
                one: "{0}mph",
                other: "{0}mph"
            },
            speedKnot: {
                one: "{0}kn",
                other: "{0}kn"
            },
            temperatureCelsius: _efsc31,
            temperatureFahrenheit: _efsc16,
            temperatureKelvin: {
                one: "{0}K",
                other: "{0}K"
            },
            volumeCubicKilometer: {
                one: "{0}km³",
                other: "{0}km³"
            },
            volumeCubicMeter: {
                one: "{0}m³",
                other: "{0}m³"
            },
            volumeCubicCentimeter: {
                one: "{0}cm³",
                other: "{0}cm³"
            },
            volumeCubicMile: {
                one: "{0}mi³",
                other: "{0}mi³"
            },
            volumeCubicYard: {
                one: "{0}yd³",
                other: "{0}yd³"
            },
            volumeCubicFoot: {
                one: "{0}ft³",
                other: "{0}ft³"
            },
            volumeCubicInch: {
                one: "{0}in³",
                other: "{0}in³"
            },
            volumeMegaliter: {
                one: "{0}ML",
                other: "{0}ML"
            },
            volumeHectoliter: {
                one: "{0}hL",
                other: "{0}hL"
            },
            volumeLiter: {
                one: "{0}L",
                other: "{0}L"
            },
            volumeDeciliter: {
                one: "{0}dL",
                other: "{0}dL"
            },
            volumeCentiliter: {
                one: "{0}cL",
                other: "{0}cL"
            },
            volumeMilliliter: {
                one: "{0}mL",
                other: "{0}mL"
            },
            volumePintMetric: {
                one: "{0}mpt",
                other: "{0}mpt"
            },
            volumeCupMetric: {
                one: "{0}mc",
                other: "{0}mc"
            },
            volumeAcreFoot: {
                one: "{0}ac ft",
                other: "{0}ac ft"
            },
            volumeBushel: {
                one: "{0}bu",
                other: "{0}bu"
            },
            volumeGallon: {
                one: "{0}gal",
                other: "{0}gal"
            },
            volumeGallonImperial: {
                one: "{0}galIm",
                other: "{0}galIm"
            },
            volumeQuart: {
                one: "{0}qt",
                other: "{0}qt"
            },
            volumePint: {
                one: "{0}pt",
                other: "{0}pt"
            },
            volumeCup: {
                one: "{0}c",
                other: "{0}c"
            },
            volumeFluidOunce: {
                one: "{0}fl oz",
                other: "{0}fl oz"
            },
            volumeTablespoon: {
                one: "{0}tbsp",
                other: "{0}tbsp"
            },
            volumeTeaspoon: {
                one: "{0}tsp",
                other: "{0}tsp"
            }
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "{0} Time",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} Daylight Time",
        standard: "{0} Standard Time"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z" ],
        auxiliary: [ "á", "à", "ă", "â", "å", "ä", "ã", "ā", "æ", "ç", "é", "è", "ĕ", "ê", "ë", "ē", "í", "ì", "ĭ", "î", "ï", "ī", "ñ", "ó", "ò", "ŏ", "ô", "ö", "ø", "ō", "œ", "ú", "ù", "ŭ", "û", "ü", "ū", "ÿ" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ],
        punctuation: [ "\\-", "‐", "–", "—", ",", ";", "\\:", "!", "?", ".", "…", "'", "‘", "’", '"', "“", "”", "(", ")", "\\[", "\\]", "§", "@", "*", "/", "\\&", "#", "†", "‡", "′", "″" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _efsc494,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _efsc548,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _efsc548,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _efsc494,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _efsc494,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _efsc494,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _efsc494,
        digits: "renderEthiopic"
    },
    finance: _efsc500,
    fullwide: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _efsc494,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _efsc494,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _efsc494,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _efsc494,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _efsc507,
    hansfin: _efsc509,
    hant: _efsc507,
    hantfin: _efsc509,
    hebr: {
        symbols: _efsc494,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _efsc494,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _efsc507,
    jpanfin: _efsc509,
    kali: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _efsc494,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _efsc494,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _efsc494,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _efsc494,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _efsc494,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _efsc494,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _efsc494,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _efsc494,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _efsc500,
    nkoo: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _efsc494,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _efsc494,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _efsc494,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _efsc494,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _efsc494,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _efsc494,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _efsc500,
    vaii: {
        symbols: _efsc494,
        formats: _efsc548,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _efsc494,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _efsc539,
        datePartsOrder: "mdy",
        dateIntervalFormats: _efsc543,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _efsc528,
        dayPeriods: _efsc540,
        monthNames: _efsc532,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _efsc513,
        fields: _efsc549
    },
    chinese: _efsc554,
    coptic: {
        dateFormats: _efsc539,
        datePartsOrder: "mdy",
        dateIntervalFormats: _efsc543,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _efsc528,
        dayPeriods: _efsc540,
        monthNames: {
            format: _efsc516,
            standAlone: _efsc516
        },
        eraNames: _efsc129,
        quarterNames: _efsc513,
        fields: _efsc549
    },
    dangi: _efsc554,
    ethioaa: _efsc550,
    ethiopic: {
        dateFormats: _efsc539,
        datePartsOrder: "mdy",
        dateIntervalFormats: _efsc543,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _efsc528,
        dayPeriods: _efsc540,
        monthNames: {
            format: _efsc519,
            standAlone: _efsc519
        },
        eraNames: _efsc129,
        quarterNames: _efsc513,
        fields: _efsc549
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, MMMM d, y",
                longDate: "MMMM d, y",
                mediumDate: "MMM d, y",
                shortDate: "M/d/yy",
                fullTime: "h:mm:ss a zzzz",
                longTime: "h:mm:ss a z",
                mediumTime: "h:mm:ss a",
                shortTime: "h:mm a",
                shortDateTime: "M/d/yy, h:mm a",
                mediumDateTime: "MMM d, y, h:mm:ss a",
                longDateTime: "MMMM d, y 'at' h:mm:ss a z",
                fullDateTime: "EEEE, MMMM d, y 'at' h:mm:ss a zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "d E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "MMM d, y G",
                GyMMMEd: "E, MMM d, y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "M/d",
                MEd: "E, M/d",
                MMM: "LLL",
                MMMd: "MMM d",
                MMMEd: "E, MMM d",
                MMMMd: "MMMM d",
                ms: "mm:ss",
                y: "y",
                yM: "M/y",
                yMd: "M/d/y",
                yMEd: "E, M/d/y",
                yMMM: "MMM y",
                yMMMd: "MMM d, y",
                yMMMEd: "E, MMM d, y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "mdy",
        dateIntervalFormats: {
            d: {
                d: "d – d"
            },
            h: _efsc36,
            H: {
                H: "HH – HH"
            },
            hm: _efsc144,
            Hm: _efsc55,
            hmv: _efsc201,
            Hmv: _efsc88,
            hv: _efsc40,
            Hv: {
                H: "HH – HH v"
            },
            M: {
                M: "M – M"
            },
            Md: _efsc37,
            MEd: _efsc89,
            MMM: {
                M: "MMM – MMM"
            },
            MMMd: _efsc44,
            MMMEd: _efsc124,
            y: {
                y: "y – y"
            },
            yM: _efsc39,
            yMd: _efsc141,
            yMEd: _efsc402,
            yMMM: _efsc49,
            yMMMd: {
                d: "MMM d – d, y",
                M: "MMM d – MMM d, y",
                y: "MMM d, y – MMM d, y"
            },
            yMMMEd: {
                d: "E, MMM d – E, MMM d, y",
                M: "E, MMM d – E, MMM d, y",
                y: "E, MMM d, y – E, MMM d, y"
            },
            yMMMM: _efsc76
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _efsc528,
        dayPeriods: _efsc540,
        monthNames: _efsc532,
        eraNames: {
            wide: [ "Before Christ", "Anno Domini" ],
            abbreviated: [ "BC", "AD" ]
        },
        quarterNames: _efsc513,
        fields: _efsc549
    },
    hebrew: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d MMMM y",
                longDate: "d MMMM y",
                mediumDate: "d MMM y",
                shortDate: "d MMM y",
                fullTime: "h:mm:ss a zzzz",
                longTime: "h:mm:ss a z",
                mediumTime: "h:mm:ss a",
                shortTime: "h:mm a",
                shortDateTime: "d MMM y, h:mm a",
                mediumDateTime: "d MMM y, h:mm:ss a",
                longDateTime: "d MMMM y 'at' h:mm:ss a z",
                fullDateTime: "EEEE, d MMMM y 'at' h:mm:ss a zzzz"
            },
            cldr: {
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E, d MMM y G",
                M: "L",
                Md: "d MMM",
                MEd: "E, d MMM",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E, d MMM",
                MMMMd: "d MMMM",
                y: "y",
                yM: "MMM y",
                yMd: "d MMM y",
                yMEd: "E, d MMM y",
                yMMM: "MMM y",
                yMMMd: "d MMM y",
                yMMMEd: "E, d MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y",
                d: "d",
                E: "ccc",
                Ed: "d E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                ms: "mm:ss",
                yyyy: "y G",
                yyyyM: "M/y GGGGG",
                yyyyMd: "M/d/y GGGGG",
                yyyyMEd: "E, M/d/y GGGGG",
                yyyyMMM: "MMM y G",
                yyyyMMMd: "MMM d, y G",
                yyyyMMMEd: "E, MMM d, y G",
                yyyyMMMM: "MMMM y G",
                yyyyQQQ: "QQQ y G",
                yyyyQQQQ: "QQQQ y G"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            M: {
                M: "MMM – MMM"
            },
            Md: _efsc45,
            MEd: _efsc127,
            MMM: {
                M: "MMM – MMM"
            },
            MMMd: _efsc45,
            MMMEd: _efsc127,
            y: {
                y: "y – y G"
            },
            yM: _efsc49,
            yMd: _efsc159,
            yMEd: _efsc450,
            yMMM: _efsc49,
            yMMMd: _efsc159,
            yMMMEd: _efsc450,
            yMMMM: _efsc76,
            d: {
                d: "d – d"
            },
            h: _efsc36,
            H: {
                H: "HH – HH"
            },
            hm: _efsc144,
            Hm: _efsc55,
            hmv: _efsc201,
            Hmv: _efsc88,
            hv: _efsc40,
            Hv: {
                H: "HH – HH v"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _efsc528,
        dayPeriods: _efsc540,
        monthNames: {
            format: _efsc514,
            standAlone: _efsc514
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _efsc513,
        fields: _efsc549
    },
    indian: {
        dateFormats: _efsc539,
        datePartsOrder: "mdy",
        dateIntervalFormats: _efsc543,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _efsc528,
        dayPeriods: _efsc540,
        monthNames: {
            format: _efsc520,
            standAlone: _efsc520
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _efsc513,
        fields: _efsc549
    },
    islamic: _efsc553,
    "islamic-umalqura": _efsc553,
    "islamic-tbla": _efsc553,
    "islamic-civil": _efsc553,
    "islamic-rgsa": _efsc553,
    iso8601: _efsc550,
    japanese: {
        dateFormats: _efsc539,
        datePartsOrder: "mdy",
        dateIntervalFormats: _efsc543,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _efsc528,
        dayPeriods: _efsc540,
        monthNames: _efsc532,
        eraNames: {
            wide: _efsc551,
            abbreviated: _efsc551
        },
        quarterNames: _efsc513,
        fields: _efsc549
    },
    persian: {
        dateFormats: _efsc539,
        datePartsOrder: "mdy",
        dateIntervalFormats: _efsc543,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _efsc528,
        dayPeriods: _efsc540,
        monthNames: {
            format: _efsc515,
            standAlone: _efsc515
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _efsc513,
        fields: _efsc549
    },
    roc: {
        dateFormats: _efsc539,
        datePartsOrder: "mdy",
        dateIntervalFormats: _efsc543,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _efsc528,
        dayPeriods: _efsc540,
        monthNames: _efsc532,
        eraNames: {
            wide: _efsc29,
            abbreviated: _efsc29
        },
        quarterNames: _efsc513,
        fields: _efsc549
    },
    islamicc: _efsc550
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length;
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 1 && v === 0) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + "ordinal" + "one" + "st" + "two" + "nd" + "few" + "rd" + "other" + "th";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "minus " + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinal(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinal(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinal(Math.floor(n)) + " point " + this.renderSpelloutCardinal(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return this.renderSpelloutCardinal(Math.floor(n / 1e15)) + " quadrillion" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinal(n % 1e15));
    if (n >= 1e12) return this.renderSpelloutCardinal(Math.floor(n / 1e12)) + " trillion" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinal(n % 1e12));
    if (n >= 1e9) return this.renderSpelloutCardinal(Math.floor(n / 1e9)) + " billion" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinal(n % 1e9));
    if (n >= 1e6) return this.renderSpelloutCardinal(Math.floor(n / 1e6)) + " million" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinal(n % 1e6));
    if (n >= 1e3) return this.renderSpelloutCardinal(Math.floor(n / 1e3)) + " thousand" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 100) return this.renderSpelloutCardinal(Math.floor(n / 100)) + " hundred" + (n === 100 ? "" : " " + this.renderSpelloutCardinal(n % 100));
    if (n >= 90) return "ninety" + (n === 90 ? "" : "-" + this.renderSpelloutCardinal(n % 10));
    if (n >= 80) return "eighty" + (n === 80 ? "" : "-" + this.renderSpelloutCardinal(n % 10));
    if (n >= 70) return "seventy" + (n === 70 ? "" : "-" + this.renderSpelloutCardinal(n % 10));
    if (n >= 60) return "sixty" + (n === 60 ? "" : "-" + this.renderSpelloutCardinal(n % 10));
    if (n >= 50) return "fifty" + (n === 50 ? "" : "-" + this.renderSpelloutCardinal(n % 10));
    if (n >= 40) return "forty" + (n === 40 ? "" : "-" + this.renderSpelloutCardinal(n % 10));
    if (n >= 30) return "thirty" + (n === 30 ? "" : "-" + this.renderSpelloutCardinal(n % 10));
    if (n >= 20) return "twenty" + (n === 20 ? "" : "-" + this.renderSpelloutCardinal(n % 10));
    if (n >= 19) return "nineteen";
    if (n >= 18) return "eighteen";
    if (n >= 17) return "seventeen";
    if (n >= 16) return "sixteen";
    if (n >= 15) return "fifteen";
    if (n >= 14) return "fourteen";
    if (n >= 13) return "thirteen";
    if (n >= 12) return "twelve";
    if (n >= 11) return "eleven";
    if (n >= 10) return "ten";
    if (n >= 9) return "nine";
    if (n >= 8) return "eight";
    if (n >= 7) return "seven";
    if (n >= 6) return "six";
    if (n >= 5) return "five";
    if (n >= 4) return "four";
    if (n >= 3) return "three";
    if (n >= 2) return "two";
    if (n >= 1) return "one";
    if (n >= 0) return "zero";
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones.slice(91, 98), {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 119), {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "St. Barthélemy",
    countryId: "BL"
}, P.timeZones.slice(120, 184), P.timeZones[185], {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones.slice(186, 300), {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Réunion",
    countryId: "RE"
}, P.timeZones.slice(301, 419));

inter.territories = [ _efsc349, _efsc383, _efsc239, _efsc240, _efsc384, _efsc403, _efsc241, _efsc206, _efsc285, _efsc138, _efsc410, _efsc312, _efsc242, _efsc176, _efsc160, _efsc364, _efsc420, _efsc313, _efsc243, _efsc327, _efsc244, _efsc245, _efsc328, _efsc286, _efsc246, _efsc247, _efsc207, _efsc177, _efsc248, _efsc208, _efsc249, _efsc425, _efsc287, _efsc143, _efsc209, _efsc394, _efsc436, _efsc210, _efsc288, _efsc365, _efsc250, _efsc289, _efsc290, _efsc211, _efsc154, _efsc329, _efsc411, _efsc431, _efsc385, _efsc451, _efsc443, _efsc426, _efsc157, _efsc164, _efsc178, _efsc179, _efsc158, _efsc162, _efsc291, _efsc292, _efsc251, _efsc421, _efsc404, _efsc366, _efsc330, _efsc252, _efsc165, _efsc253, _efsc212, _efsc386, _efsc374, _efsc254, _efsc142, _efsc293, _efsc294, _efsc417, _efsc437, _efsc427, _efsc438, _efsc255, _efsc180, _efsc350, _efsc412, _efsc256, _efsc257, _efsc295, _efsc387, _efsc405, _efsc375, _efsc166, _efsc258, _efsc213, _efsc376, _efsc406, _efsc367, _efsc181, _efsc214, _efsc259, _efsc260, _efsc182, _efsc314, _efsc215, _efsc315, _efsc261, _efsc331, _efsc167, _efsc316, _efsc296, _efsc216, _efsc377, _efsc217, _efsc183, _efsc332, _efsc297, _efsc422, _efsc262, _efsc263, _efsc184, _efsc317, _efsc168, _efsc169, _efsc264, _efsc351, _efsc218, _efsc185, _efsc265, _efsc186, _efsc219, _efsc220, _efsc333, _efsc187, _efsc298, _efsc266, _efsc221, _efsc334, _efsc170, _efsc222, _efsc267, _efsc268, _efsc269, _efsc188, _efsc378, _efsc318, _efsc335, _efsc395, _efsc319, _efsc336, _efsc223, _efsc299, _efsc300, _efsc171, _efsc189, _efsc407, _efsc337, _efsc338, _efsc320, _efsc270, _efsc413, _efsc224, _efsc339, _efsc455, _efsc432, _efsc271, _efsc225, _efsc301, _efsc340, _efsc341, _efsc272, _efsc342, _efsc396, _efsc273, _efsc190, _efsc191, _efsc352, _efsc379, _efsc353, _efsc321, _efsc192, _efsc274, _efsc172, _efsc388, _efsc354, _efsc444, _efsc452, _efsc445, _efsc453, _efsc226, _efsc397, _efsc173, {
    id: "QO",
    displayName: "Outlying Oceania",
    regionId: "009",
    hasTimeZones: false
}, _efsc302, _efsc193, _efsc446, _efsc227, _efsc408, _efsc303, _efsc174, _efsc355, _efsc409, _efsc228, _efsc414, _efsc304, _efsc356, _efsc194, _efsc275, _efsc229, _efsc230, _efsc276, _efsc195, _efsc343, _efsc368, _efsc277, _efsc231, _efsc344, _efsc369, _efsc322, _efsc370, _efsc305, _efsc306, _efsc398, _efsc278, _efsc371, _efsc433, _efsc447, _efsc357, _efsc358, _efsc439, _efsc448, _efsc434, _efsc449, _efsc196, _efsc323, _efsc389, _efsc345, _efsc415, _efsc324, _efsc346, _efsc435, _efsc454, _efsc197, _efsc307, _efsc428, _efsc325, _efsc232, _efsc359, _efsc198, _efsc423, _efsc233, _efsc347, _efsc308, _efsc309, _efsc360, _efsc175, _efsc279, _efsc199, _efsc416, _efsc161, _efsc280, _efsc234, _efsc372, _efsc440, _efsc235, _efsc236, _efsc424, _efsc237, _efsc281, _efsc429, _efsc390, _efsc380, _efsc282, _efsc348, _efsc283, _efsc373, _efsc326, _efsc284, _efsc399, _efsc441, _efsc430, _efsc442, _efsc391, _efsc128, _efsc200, _efsc238, _efsc310, _efsc381 ];

inter.regions = [ _efsc383, _efsc403, _efsc364, _efsc420, _efsc411, _efsc443, _efsc426, _efsc437, _efsc427, _efsc438, _efsc387, _efsc413, _efsc455, _efsc432, _efsc444, _efsc452, _efsc445, _efsc397, _efsc414, _efsc433, _efsc439, _efsc448, _efsc434, _efsc449, _efsc441, _efsc430, _efsc442, _efsc128 ];

inter.countries = [ _efsc349, _efsc239, _efsc240, _efsc384, _efsc241, _efsc206, _efsc285, _efsc138, _efsc410, _efsc312, _efsc242, _efsc176, _efsc160, _efsc313, _efsc243, _efsc327, _efsc244, _efsc245, _efsc328, _efsc286, _efsc246, _efsc247, _efsc207, _efsc177, _efsc248, _efsc208, _efsc249, _efsc425, _efsc287, _efsc143, _efsc209, _efsc394, _efsc436, _efsc210, _efsc288, _efsc365, _efsc250, _efsc289, _efsc290, _efsc211, _efsc154, _efsc329, _efsc431, _efsc385, _efsc451, _efsc157, _efsc164, _efsc178, _efsc179, _efsc158, _efsc162, _efsc291, _efsc292, _efsc251, _efsc421, _efsc404, _efsc366, _efsc330, _efsc252, _efsc165, _efsc253, _efsc212, _efsc386, _efsc374, _efsc254, _efsc142, _efsc293, _efsc294, _efsc417, _efsc255, _efsc180, _efsc350, _efsc412, _efsc256, _efsc257, _efsc295, _efsc405, _efsc375, _efsc166, _efsc258, _efsc213, _efsc376, _efsc406, _efsc367, _efsc181, _efsc214, _efsc259, _efsc260, _efsc182, _efsc314, _efsc215, _efsc315, _efsc261, _efsc331, _efsc167, _efsc316, _efsc296, _efsc216, _efsc377, _efsc217, _efsc183, _efsc332, _efsc297, _efsc422, _efsc262, _efsc263, _efsc184, _efsc317, _efsc168, _efsc169, _efsc264, _efsc351, _efsc218, _efsc185, _efsc265, _efsc186, _efsc219, _efsc220, _efsc333, _efsc187, _efsc298, _efsc266, _efsc221, _efsc334, _efsc170, _efsc222, _efsc267, _efsc268, _efsc269, _efsc188, _efsc378, _efsc318, _efsc335, _efsc395, _efsc319, _efsc336, _efsc223, _efsc299, _efsc300, _efsc171, _efsc189, _efsc407, _efsc337, _efsc338, _efsc320, _efsc270, _efsc224, _efsc339, _efsc271, _efsc225, _efsc301, _efsc340, _efsc341, _efsc272, _efsc342, _efsc396, _efsc273, _efsc190, _efsc191, _efsc352, _efsc379, _efsc353, _efsc321, _efsc192, _efsc274, _efsc172, _efsc388, _efsc354, _efsc453, _efsc226, _efsc173, _efsc302, _efsc193, _efsc446, _efsc227, _efsc408, _efsc303, _efsc174, _efsc355, _efsc409, _efsc228, _efsc304, _efsc356, _efsc194, _efsc275, _efsc229, _efsc230, _efsc276, _efsc195, _efsc343, _efsc368, _efsc277, _efsc231, _efsc344, _efsc369, _efsc322, _efsc370, _efsc305, _efsc306, _efsc398, _efsc278, _efsc371, _efsc447, _efsc357, _efsc358, _efsc196, _efsc323, _efsc389, _efsc345, _efsc415, _efsc324, _efsc346, _efsc435, _efsc454, _efsc197, _efsc307, _efsc428, _efsc325, _efsc232, _efsc359, _efsc198, _efsc423, _efsc233, _efsc347, _efsc308, _efsc309, _efsc360, _efsc175, _efsc279, _efsc199, _efsc416, _efsc161, _efsc280, _efsc234, _efsc372, _efsc440, _efsc235, _efsc236, _efsc424, _efsc237, _efsc281, _efsc429, _efsc390, _efsc380, _efsc282, _efsc348, _efsc283, _efsc373, _efsc326, _efsc284, _efsc399, _efsc391, _efsc200, _efsc238, _efsc310, _efsc381 ];

inter.languages = [ {
    id: "ab",
    displayName: "Abkhazian"
}, {
    id: "ace",
    displayName: "Achinese"
}, {
    id: "ach",
    displayName: "Acoli"
}, {
    id: "ada",
    displayName: "Adangme"
}, {
    id: "ady",
    displayName: "Adyghe"
}, {
    id: "aa",
    displayName: "Afar"
}, {
    id: "afh",
    displayName: "Afrihili"
}, {
    id: "af",
    displayName: "Afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "Aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ain",
    displayName: "Ainu"
}, {
    id: "ak",
    displayName: "Akan",
    nativeDisplayName: "Akan"
}, {
    id: "akk",
    displayName: "Akkadian"
}, {
    id: "bss",
    displayName: "Akoose"
}, {
    id: "akz",
    displayName: "Alabama"
}, {
    id: "ale",
    displayName: "Aleut"
}, {
    id: "arq",
    displayName: "Algerian Arabic"
}, {
    id: "en_us",
    displayName: "American English",
    nativeDisplayName: "American English"
}, {
    id: "ase",
    displayName: "American Sign Language"
}, {
    id: "smn",
    displayName: "Inari Sami",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "egy",
    displayName: "Ancient Egyptian"
}, {
    id: "grc",
    displayName: "Ancient Greek"
}, {
    id: "anp",
    displayName: "Angika"
}, {
    id: "njo",
    displayName: "Ao Naga"
}, {
    id: "an",
    displayName: "Aragonese"
}, {
    id: "arc",
    displayName: "Aramaic"
}, {
    id: "aro",
    displayName: "Araona"
}, {
    id: "arp",
    displayName: "Arapaho"
}, {
    id: "arw",
    displayName: "Arawak"
}, {
    id: "rup",
    displayName: "Aromanian"
}, {
    id: "frp",
    displayName: "Arpitan"
}, {
    id: "ast",
    displayName: "Asturian",
    nativeDisplayName: "asturianu"
}, {
    id: "cch",
    displayName: "Atsam"
}, {
    id: "en_au",
    displayName: "Australian English",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "Avaric"
}, {
    id: "ae",
    displayName: "Avestan"
}, {
    id: "awa",
    displayName: "Awadhi"
}, {
    id: "ay",
    displayName: "Aymara"
}, {
    id: "az",
    displayName: "Azerbaijani",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "bfq",
    displayName: "Badaga"
}, {
    id: "bfd",
    displayName: "Bafut"
}, {
    id: "ms",
    displayName: "Malay",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bqi",
    displayName: "Bakhtiari"
}, {
    id: "ban",
    displayName: "Balinese"
}, {
    id: "bal",
    displayName: "Baluchi"
}, {
    id: "bm",
    displayName: "Bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bax",
    displayName: "Bamun"
}, {
    id: "bjn",
    displayName: "Banjar"
}, {
    id: "ba",
    displayName: "Bashkir"
}, {
    id: "bbc",
    displayName: "Batak Toba"
}, {
    id: "bar",
    displayName: "Bavarian"
}, {
    id: "bej",
    displayName: "Beja"
}, {
    id: "bew",
    displayName: "Betawi"
}, {
    id: "bho",
    displayName: "Bhojpuri"
}, {
    id: "bik",
    displayName: "Bikol"
}, {
    id: "bin",
    displayName: "Bini"
}, {
    id: "bpy",
    displayName: "Bishnupriya"
}, {
    id: "bi",
    displayName: "Bislama"
}, {
    id: "byn",
    displayName: "Blin"
}, {
    id: "zbl",
    displayName: "Blissymbols"
}, {
    id: "bs",
    displayName: "Bosnian",
    nativeDisplayName: "bosanski"
}, {
    id: "brh",
    displayName: "Brahui"
}, {
    id: "bra",
    displayName: "Braj"
}, {
    id: "br",
    displayName: "Breton",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "British English",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "Buginese"
}, {
    id: "bum",
    displayName: "Bulu"
}, {
    id: "bua",
    displayName: "Buriat"
}, {
    id: "cad",
    displayName: "Caddo"
}, {
    id: "frc",
    displayName: "Cajun French"
}, {
    id: "en_ca",
    displayName: "Canadian English",
    nativeDisplayName: "Canadian English"
}, {
    id: "cps",
    displayName: "Capiznon"
}, {
    id: "car",
    displayName: "Carib"
}, {
    id: "ca",
    displayName: "Catalan",
    nativeDisplayName: "català"
}, {
    id: "cay",
    displayName: "Cayuga"
}, {
    id: "ceb",
    displayName: "Cebuano"
}, {
    id: "dtp",
    displayName: "Central Dusun"
}, {
    id: "esu",
    displayName: "Central Yupik"
}, {
    id: "shu",
    displayName: "Chadian Arabic"
}, {
    id: "chg",
    displayName: "Chagatai"
}, {
    id: "ch",
    displayName: "Chamorro"
}, {
    id: "chy",
    displayName: "Cheyenne"
}, {
    id: "chb",
    displayName: "Chibcha"
}, {
    id: "kde",
    displayName: "Makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "qug",
    displayName: "Chimborazo Highland Quichua"
}, {
    id: "chn",
    displayName: "Chinook Jargon"
}, {
    id: "chp",
    displayName: "Chipewyan"
}, {
    id: "sn",
    displayName: "Shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cho",
    displayName: "Choctaw"
}, {
    id: "chk",
    displayName: "Chuukese"
}, {
    id: "cv",
    displayName: "Chuvash"
}, {
    id: "nwc",
    displayName: "Classical Newari"
}, {
    id: "syc",
    displayName: "Classical Syriac"
}, {
    id: "swb",
    displayName: "Comorian"
}, {
    id: "cop",
    displayName: "Coptic"
}, {
    id: "co",
    displayName: "Corsican"
}, {
    id: "cr",
    displayName: "Cree"
}, {
    id: "mus",
    displayName: "Creek"
}, {
    id: "crh",
    displayName: "Crimean Turkish"
}, {
    id: "cy",
    displayName: "Welsh",
    nativeDisplayName: "Cymraeg"
}, {
    id: "dak",
    displayName: "Dakota"
}, {
    id: "da",
    displayName: "Danish",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "Dargwa"
}, {
    id: "se",
    displayName: "Northern Sami",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "dzg",
    displayName: "Dazaga"
}, {
    id: "del",
    displayName: "Delaware"
}, {
    id: "de",
    displayName: "German",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "Luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "Dinka"
}, {
    id: "dv",
    displayName: "Divehi"
}, {
    id: "doi",
    displayName: "Dogri"
}, {
    id: "dgr",
    displayName: "Dogrib"
}, {
    id: "dsb",
    displayName: "Lower Sorbian",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "Duala",
    nativeDisplayName: "duálá"
}, {
    id: "dyu",
    displayName: "Dyula"
}, {
    id: "frs",
    displayName: "Eastern Frisian"
}, {
    id: "et",
    displayName: "Estonian",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "Efik"
}, {
    id: "arz",
    displayName: "Egyptian Arabic"
}, {
    id: "eka",
    displayName: "Ekajuk"
}, {
    id: "guz",
    displayName: "Gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "elx",
    displayName: "Elamite"
}, {
    id: "egl",
    displayName: "Emilian"
}, {
    id: "en",
    displayName: "English",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "Erzya"
}, {
    id: "es",
    displayName: "Spanish",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "European Spanish",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "Mexican Spanish",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "Latin American Spanish",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "Esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "Basque",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "Ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ext",
    displayName: "Extremaduran"
}, {
    id: "ee",
    displayName: "Ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "Fang"
}, {
    id: "fat",
    displayName: "Fanti"
}, {
    id: "hif",
    displayName: "Fiji Hindi"
}, {
    id: "fj",
    displayName: "Fijian"
}, {
    id: "fil",
    displayName: "Filipino",
    nativeDisplayName: "Filipino"
}, {
    id: "fon",
    displayName: "Fon"
}, {
    id: "gur",
    displayName: "Frafra"
}, {
    id: "fr",
    displayName: "French",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "Canadian French",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "Swiss French",
    nativeDisplayName: "français suisse"
}, {
    id: "fur",
    displayName: "Friulian",
    nativeDisplayName: "furlan"
}, {
    id: "fo",
    displayName: "Faroese",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "Ga"
}, {
    id: "ga",
    displayName: "Irish",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "Manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "Gagauz"
}, {
    id: "gl",
    displayName: "Galician",
    nativeDisplayName: "galego"
}, {
    id: "gan",
    displayName: "Gan Chinese"
}, {
    id: "gay",
    displayName: "Gayo"
}, {
    id: "gba",
    displayName: "Gbaya"
}, {
    id: "gez",
    displayName: "Geez"
}, {
    id: "aln",
    displayName: "Gheg Albanian"
}, {
    id: "bbj",
    displayName: "Ghomala"
}, {
    id: "ki",
    displayName: "Kikuyu",
    nativeDisplayName: "Gikuyu"
}, {
    id: "glk",
    displayName: "Gilaki"
}, {
    id: "gil",
    displayName: "Gilbertese"
}, {
    id: "gom",
    displayName: "Goan Konkani"
}, {
    id: "gon",
    displayName: "Gondi"
}, {
    id: "gor",
    displayName: "Gorontalo"
}, {
    id: "got",
    displayName: "Gothic"
}, {
    id: "grb",
    displayName: "Grebo"
}, {
    id: "gn",
    displayName: "Guarani"
}, {
    id: "gwi",
    displayName: "Gwichʼin"
}, {
    id: "gd",
    displayName: "Scottish Gaelic",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "hai",
    displayName: "Haida"
}, {
    id: "ht",
    displayName: "Haitian Creole"
}, {
    id: "hak",
    displayName: "Hakka Chinese"
}, {
    id: "ha",
    displayName: "Hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "hz",
    displayName: "Herero"
}, {
    id: "bez",
    displayName: "Bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hil",
    displayName: "Hiligaynon"
}, {
    id: "ho",
    displayName: "Hiri Motu"
}, {
    id: "hit",
    displayName: "Hittite"
}, {
    id: "hmn",
    displayName: "Hmong"
}, {
    id: "hsb",
    displayName: "Upper Sorbian",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "Croatian",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "Hupa"
}, {
    id: "iba",
    displayName: "Iban"
}, {
    id: "ibb",
    displayName: "Ibibio"
}, {
    id: "bem",
    displayName: "Bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "io",
    displayName: "Ido"
}, {
    id: "ig",
    displayName: "Igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "Rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "Iloko"
}, {
    id: "id",
    displayName: "Indonesian",
    nativeDisplayName: "Indonesia"
}, {
    id: "izh",
    displayName: "Ingrian"
}, {
    id: "inh",
    displayName: "Ingush"
}, {
    id: "ia",
    displayName: "Interlingua"
}, {
    id: "ie",
    displayName: "Interlingue"
}, {
    id: "iu",
    displayName: "Inuktitut"
}, {
    id: "ik",
    displayName: "Inupiaq"
}, {
    id: "sbp",
    displayName: "Sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "North Ndebele",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "Zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "Italian",
    nativeDisplayName: "italiano"
}, {
    id: "jam",
    displayName: "Jamaican Creole English"
}, {
    id: "jv",
    displayName: "Javanese"
}, {
    id: "kaj",
    displayName: "Jju"
}, {
    id: "dyo",
    displayName: "Jola-Fonyi",
    nativeDisplayName: "joola"
}, {
    id: "jrb",
    displayName: "Judeo-Arabic"
}, {
    id: "jpr",
    displayName: "Judeo-Persian"
}, {
    id: "jut",
    displayName: "Jutish"
}, {
    id: "kbd",
    displayName: "Kabardian"
}, {
    id: "kea",
    displayName: "Kabuverdianu",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kac",
    displayName: "Kachin"
}, {
    id: "kgp",
    displayName: "Kaingang"
}, {
    id: "kkj",
    displayName: "Kako",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "Kalaallisut",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "Kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "xal",
    displayName: "Kalmyk"
}, {
    id: "kbl",
    displayName: "Kanembu"
}, {
    id: "kr",
    displayName: "Kanuri"
}, {
    id: "kaa",
    displayName: "Kara-Kalpak"
}, {
    id: "krc",
    displayName: "Karachay-Balkar"
}, {
    id: "krl",
    displayName: "Karelian"
}, {
    id: "csb",
    displayName: "Kashubian"
}, {
    id: "kaw",
    displayName: "Kawi"
}, {
    id: "ken",
    displayName: "Kenyang"
}, {
    id: "kw",
    displayName: "Cornish",
    nativeDisplayName: "kernewek"
}, {
    id: "kha",
    displayName: "Khasi"
}, {
    id: "naq",
    displayName: "Nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "kho",
    displayName: "Khotanese"
}, {
    id: "khw",
    displayName: "Khowar"
}, {
    id: "rof",
    displayName: "Rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "Kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "Machame",
    nativeDisplayName: "Kimachame"
}, {
    id: "kmb",
    displayName: "Kimbundu"
}, {
    id: "krj",
    displayName: "Kinaray-a"
}, {
    id: "rw",
    displayName: "Kinyarwanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "Asu",
    nativeDisplayName: "Kipare"
}, {
    id: "kiu",
    displayName: "Kirmanjki"
}, {
    id: "rwk",
    displayName: "Rwa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "Samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "Shambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "Swahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "Congo Swahili",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "Taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "Teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "tlh",
    displayName: "Klingon"
}, {
    id: "bkm",
    displayName: "Kom"
}, {
    id: "kv",
    displayName: "Komi"
}, {
    id: "koi",
    displayName: "Komi-Permyak"
}, {
    id: "kg",
    displayName: "Kongo"
}, {
    id: "kfo",
    displayName: "Koro"
}, {
    id: "kos",
    displayName: "Kosraean"
}, {
    id: "avk",
    displayName: "Kotava"
}, {
    id: "khq",
    displayName: "Koyra Chiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "Koyraboro Senni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "kpe",
    displayName: "Kpelle"
}, {
    id: "mfe",
    displayName: "Morisyen",
    nativeDisplayName: "kreol morisien"
}, {
    id: "kri",
    displayName: "Krio"
}, {
    id: "kj",
    displayName: "Kuanyama"
}, {
    id: "kum",
    displayName: "Kumyk"
}, {
    id: "ku",
    displayName: "Kurdish"
}, {
    id: "kru",
    displayName: "Kurukh"
}, {
    id: "kut",
    displayName: "Kutenai"
}, {
    id: "nmg",
    displayName: "Kwasio",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "Vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ksh",
    displayName: "Colognian",
    nativeDisplayName: "Kölsch"
}, {
    id: "ebu",
    displayName: "Embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "Meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "Langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "quc",
    displayName: "Kʼicheʼ"
}, {
    id: "lad",
    displayName: "Ladino"
}, {
    id: "lah",
    displayName: "Lahnda"
}, {
    id: "lkt",
    displayName: "Lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lam",
    displayName: "Lamba"
}, {
    id: "ltg",
    displayName: "Latgalian"
}, {
    id: "la",
    displayName: "Latin"
}, {
    id: "lv",
    displayName: "Latvian",
    nativeDisplayName: "latviešu"
}, {
    id: "lzz",
    displayName: "Laz"
}, {
    id: "to",
    displayName: "Tongan",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lez",
    displayName: "Lezghian"
}, {
    id: "lt",
    displayName: "Lithuanian",
    nativeDisplayName: "lietuvių"
}, {
    id: "lij",
    displayName: "Ligurian"
}, {
    id: "li",
    displayName: "Limburgish"
}, {
    id: "lfn",
    displayName: "Lingua Franca Nova"
}, {
    id: "ln",
    displayName: "Lingala",
    nativeDisplayName: "lingála"
}, {
    id: "lzh",
    displayName: "Literary Chinese"
}, {
    id: "liv",
    displayName: "Livonian"
}, {
    id: "jbo",
    displayName: "Lojban"
}, {
    id: "lmo",
    displayName: "Lombard"
}, {
    id: "nds",
    displayName: "Low German"
}, {
    id: "nds_nl",
    displayName: "Low Saxon"
}, {
    id: "sli",
    displayName: "Lower Silesian"
}, {
    id: "loz",
    displayName: "Lozi"
}, {
    id: "lua",
    displayName: "Luba-Lulua"
}, {
    id: "lg",
    displayName: "Ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "Luiseno"
}, {
    id: "smj",
    displayName: "Lule Sami"
}, {
    id: "luy",
    displayName: "Luyia",
    nativeDisplayName: "Luluhia"
}, {
    id: "lun",
    displayName: "Lunda"
}, {
    id: "lb",
    displayName: "Luxembourgish",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "Masai",
    nativeDisplayName: "Maa"
}, {
    id: "mde",
    displayName: "Maba"
}, {
    id: "mad",
    displayName: "Madurese"
}, {
    id: "maf",
    displayName: "Mafa"
}, {
    id: "mag",
    displayName: "Magahi"
}, {
    id: "hu",
    displayName: "Hungarian",
    nativeDisplayName: "magyar"
}, {
    id: "vmf",
    displayName: "Main-Franconian"
}, {
    id: "mai",
    displayName: "Maithili"
}, {
    id: "mak",
    displayName: "Makasar"
}, {
    id: "mgh",
    displayName: "Makhuwa-Meetto",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "Malagasy",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "Maltese",
    nativeDisplayName: "Malti"
}, {
    id: "mnc",
    displayName: "Manchu"
}, {
    id: "mdr",
    displayName: "Mandar"
}, {
    id: "man",
    displayName: "Mandingo"
}, {
    id: "mni",
    displayName: "Manipuri"
}, {
    id: "mi",
    displayName: "Maori"
}, {
    id: "arn",
    displayName: "Mapuche"
}, {
    id: "chm",
    displayName: "Mari"
}, {
    id: "mh",
    displayName: "Marshallese"
}, {
    id: "mwr",
    displayName: "Marwari"
}, {
    id: "byv",
    displayName: "Medumba"
}, {
    id: "men",
    displayName: "Mende"
}, {
    id: "mwv",
    displayName: "Mentawai"
}, {
    id: "mgo",
    displayName: "Metaʼ",
    nativeDisplayName: "metaʼ"
}, {
    id: "mic",
    displayName: "Micmac"
}, {
    id: "dum",
    displayName: "Middle Dutch"
}, {
    id: "enm",
    displayName: "Middle English"
}, {
    id: "frm",
    displayName: "Middle French"
}, {
    id: "gmh",
    displayName: "Middle High German"
}, {
    id: "mga",
    displayName: "Middle Irish"
}, {
    id: "nan",
    displayName: "Min Nan Chinese"
}, {
    id: "min",
    displayName: "Minangkabau"
}, {
    id: "xmf",
    displayName: "Mingrelian"
}, {
    id: "mwl",
    displayName: "Mirandese"
}, {
    id: "lus",
    displayName: "Mizo"
}, {
    id: "moh",
    displayName: "Mohawk"
}, {
    id: "mdf",
    displayName: "Moksha"
}, {
    id: "ro_md",
    displayName: "Moldavian",
    nativeDisplayName: "moldovenească"
}, {
    id: "lol",
    displayName: "Mongo"
}, {
    id: "ary",
    displayName: "Moroccan Arabic"
}, {
    id: "mos",
    displayName: "Mossi"
}, {
    id: "mul",
    displayName: "Multiple Languages"
}, {
    id: "mua",
    displayName: "Mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "ttt",
    displayName: "Muslim Tat"
}, {
    id: "mye",
    displayName: "Myene"
}, {
    id: "na",
    displayName: "Nauru"
}, {
    id: "nv",
    displayName: "Navajo"
}, {
    id: "jgo",
    displayName: "Ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "ng",
    displayName: "Ndonga"
}, {
    id: "nap",
    displayName: "Neapolitan"
}, {
    id: "nl",
    displayName: "Dutch",
    nativeDisplayName: "Nederlands"
}, {
    id: "new",
    displayName: "Newari"
}, {
    id: "sba",
    displayName: "Ngambay"
}, {
    id: "yrl",
    displayName: "Nheengatu"
}, {
    id: "nia",
    displayName: "Nias"
}, {
    id: "niu",
    displayName: "Niuean"
}, {
    id: "zxx",
    displayName: "No linguistic content"
}, {
    id: "nog",
    displayName: "Nogai"
}, {
    id: "nb",
    displayName: "Norwegian Bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "frr",
    displayName: "Northern Frisian"
}, {
    id: "nso",
    displayName: "Northern Sotho"
}, {
    id: "no",
    displayName: "Norwegian"
}, {
    id: "nov",
    displayName: "Novial"
}, {
    id: "yav",
    displayName: "Yangben",
    nativeDisplayName: "nuasue"
}, {
    id: "nym",
    displayName: "Nyamwezi"
}, {
    id: "ny",
    displayName: "Nyanja"
}, {
    id: "tog",
    displayName: "Nyasa Tonga"
}, {
    id: "nn",
    displayName: "Norwegian Nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "nyo",
    displayName: "Nyoro"
}, {
    id: "nzi",
    displayName: "Nzima"
}, {
    id: "nqo",
    displayName: "N’Ko"
}, {
    id: "oc",
    displayName: "Occitan"
}, {
    id: "oj",
    displayName: "Ojibwa"
}, {
    id: "ang",
    displayName: "Old English"
}, {
    id: "fro",
    displayName: "Old French"
}, {
    id: "goh",
    displayName: "Old High German"
}, {
    id: "sga",
    displayName: "Old Irish"
}, {
    id: "non",
    displayName: "Old Norse"
}, {
    id: "peo",
    displayName: "Old Persian"
}, {
    id: "pro",
    displayName: "Old Provençal"
}, {
    id: "xog",
    displayName: "Soga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "Oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "Osage"
}, {
    id: "ota",
    displayName: "Ottoman Turkish"
}, {
    id: "uz",
    displayName: "Uzbek",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pal",
    displayName: "Pahlavi"
}, {
    id: "pfl",
    displayName: "Palatine German"
}, {
    id: "pau",
    displayName: "Palauan"
}, {
    id: "pi",
    displayName: "Pali"
}, {
    id: "pam",
    displayName: "Pampanga"
}, {
    id: "pag",
    displayName: "Pangasinan"
}, {
    id: "pap",
    displayName: "Papiamento"
}, {
    id: "pdc",
    displayName: "Pennsylvania German"
}, {
    id: "phn",
    displayName: "Phoenician"
}, {
    id: "pcd",
    displayName: "Picard"
}, {
    id: "pms",
    displayName: "Piedmontese"
}, {
    id: "pdt",
    displayName: "Plautdietsch"
}, {
    id: "pon",
    displayName: "Pohnpeian"
}, {
    id: "pl",
    displayName: "Polish",
    nativeDisplayName: "polski"
}, {
    id: "pnt",
    displayName: "Pontic"
}, {
    id: "pt",
    displayName: "Portuguese",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "Brazilian Portuguese",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "European Portuguese",
    nativeDisplayName: "português europeu"
}, {
    id: "prg",
    displayName: "Prussian",
    nativeDisplayName: "prūsiskan"
}, {
    id: "ff",
    displayName: "Fulah",
    nativeDisplayName: "Pulaar"
}, {
    id: "raj",
    displayName: "Rajasthani"
}, {
    id: "rap",
    displayName: "Rapanui"
}, {
    id: "rar",
    displayName: "Rarotongan"
}, {
    id: "rif",
    displayName: "Riffian"
}, {
    id: "ksf",
    displayName: "Bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "rgn",
    displayName: "Romagnol"
}, {
    id: "rom",
    displayName: "Romany"
}, {
    id: "ro",
    displayName: "Romanian",
    nativeDisplayName: "română"
}, {
    id: "root",
    displayName: "Root"
}, {
    id: "rtm",
    displayName: "Rotuman"
}, {
    id: "rug",
    displayName: "Roviana"
}, {
    id: "cgg",
    displayName: "Chiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "Romansh",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "Quechua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "Nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "rue",
    displayName: "Rusyn"
}, {
    id: "ssy",
    displayName: "Saho"
}, {
    id: "sam",
    displayName: "Samaritan Aramaic"
}, {
    id: "sm",
    displayName: "Samoan"
}, {
    id: "sgs",
    displayName: "Samogitian"
}, {
    id: "sad",
    displayName: "Sandawe"
}, {
    id: "sa",
    displayName: "Sanskrit"
}, {
    id: "sat",
    displayName: "Santali"
}, {
    id: "sc",
    displayName: "Sardinian"
}, {
    id: "sas",
    displayName: "Sasak"
}, {
    id: "sdc",
    displayName: "Sassarese Sardinian"
}, {
    id: "stq",
    displayName: "Saterland Frisian"
}, {
    id: "saz",
    displayName: "Saurashtra"
}, {
    id: "de_ch",
    displayName: "Swiss High German",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "Swiss German",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "sco",
    displayName: "Scots"
}, {
    id: "sly",
    displayName: "Selayar"
}, {
    id: "sel",
    displayName: "Selkup"
}, {
    id: "seh",
    displayName: "Sena",
    nativeDisplayName: "sena"
}, {
    id: "see",
    displayName: "Seneca"
}, {
    id: "sh",
    displayName: "Serbo-Croatian"
}, {
    id: "srr",
    displayName: "Serer"
}, {
    id: "sei",
    displayName: "Seri"
}, {
    id: "shn",
    displayName: "Shan"
}, {
    id: "sq",
    displayName: "Albanian",
    nativeDisplayName: "shqip"
}, {
    id: "nnh",
    displayName: "Ngiemboon",
    nativeDisplayName: "Shwóŋò ngiembɔɔn"
}, {
    id: "scn",
    displayName: "Sicilian"
}, {
    id: "sid",
    displayName: "Sidamo"
}, {
    id: "bla",
    displayName: "Siksika"
}, {
    id: "szl",
    displayName: "Silesian"
}, {
    id: "sd",
    displayName: "Sindhi"
}, {
    id: "sms",
    displayName: "Skolt Sami"
}, {
    id: "den",
    displayName: "Slave"
}, {
    id: "sk",
    displayName: "Slovak",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "Slovenian",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "Sogdien"
}, {
    id: "snk",
    displayName: "Soninke"
}, {
    id: "so",
    displayName: "Somali",
    nativeDisplayName: "Soomaali"
}, {
    id: "nr",
    displayName: "South Ndebele"
}, {
    id: "alt",
    displayName: "Southern Altai"
}, {
    id: "sdh",
    displayName: "Southern Kurdish"
}, {
    id: "sma",
    displayName: "Southern Sami"
}, {
    id: "st",
    displayName: "Southern Sotho"
}, {
    id: "srn",
    displayName: "Sranan Tongo"
}, {
    id: "suk",
    displayName: "Sukuma"
}, {
    id: "sux",
    displayName: "Sumerian"
}, {
    id: "su",
    displayName: "Sundanese"
}, {
    id: "fi",
    displayName: "Finnish",
    nativeDisplayName: "suomi"
}, {
    id: "sus",
    displayName: "Susu"
}, {
    id: "sv",
    displayName: "Swedish",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "Swati"
}, {
    id: "syr",
    displayName: "Syriac"
}, {
    id: "sg",
    displayName: "Sango",
    nativeDisplayName: "Sängö"
}, {
    id: "tl",
    displayName: "Tagalog"
}, {
    id: "ty",
    displayName: "Tahitian"
}, {
    id: "tg",
    displayName: "Tajik"
}, {
    id: "tly",
    displayName: "Talysh"
}, {
    id: "tmh",
    displayName: "Tamashek"
}, {
    id: "tzm",
    displayName: "Central Atlas Tamazight",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "Kabyle",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "trv",
    displayName: "Taroko"
}, {
    id: "twq",
    displayName: "Tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "Tatar"
}, {
    id: "ter",
    displayName: "Tereno"
}, {
    id: "tet",
    displayName: "Tetum"
}, {
    id: "nus",
    displayName: "Nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "tig",
    displayName: "Tigre"
}, {
    id: "tem",
    displayName: "Timne"
}, {
    id: "tiv",
    displayName: "Tiv"
}, {
    id: "vi",
    displayName: "Vietnamese",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tli",
    displayName: "Tlingit"
}, {
    id: "tpi",
    displayName: "Tok Pisin"
}, {
    id: "tkl",
    displayName: "Tokelau"
}, {
    id: "fit",
    displayName: "Tornedalen Finnish"
}, {
    id: "tkr",
    displayName: "Tsakhur"
}, {
    id: "tsd",
    displayName: "Tsakonian"
}, {
    id: "lu",
    displayName: "Luba-Katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tsi",
    displayName: "Tsimshian"
}, {
    id: "ts",
    displayName: "Tsonga"
}, {
    id: "tn",
    displayName: "Tswana"
}, {
    id: "tcy",
    displayName: "Tulu"
}, {
    id: "tum",
    displayName: "Tumbuka"
}, {
    id: "aeb",
    displayName: "Tunisian Arabic"
}, {
    id: "tru",
    displayName: "Turoyo"
}, {
    id: "tvl",
    displayName: "Tuvalu"
}, {
    id: "tyv",
    displayName: "Tuvinian"
}, {
    id: "tw",
    displayName: "Twi"
}, {
    id: "kcg",
    displayName: "Tyap"
}, {
    id: "tk",
    displayName: "Turkmen",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "Turkish",
    nativeDisplayName: "Türkçe"
}, {
    id: "udm",
    displayName: "Udmurt"
}, {
    id: "uga",
    displayName: "Ugaritic"
}, {
    id: "umb",
    displayName: "Umbundu"
}, {
    id: "und",
    displayName: "Unknown Language"
}, {
    id: "ve",
    displayName: "Venda"
}, {
    id: "vec",
    displayName: "Venetian"
}, {
    id: "vep",
    displayName: "Veps"
}, {
    id: "nl_be",
    displayName: "Flemish",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "Volapük",
    nativeDisplayName: "Volapük"
}, {
    id: "vot",
    displayName: "Votic"
}, {
    id: "vro",
    displayName: "Võro"
}, {
    id: "wa",
    displayName: "Walloon"
}, {
    id: "wae",
    displayName: "Walser",
    nativeDisplayName: "Walser"
}, {
    id: "war",
    displayName: "Waray"
}, {
    id: "wbp",
    displayName: "Warlpiri"
}, {
    id: "was",
    displayName: "Washo"
}, {
    id: "guc",
    displayName: "Wayuu"
}, {
    id: "vls",
    displayName: "West Flemish"
}, {
    id: "fy",
    displayName: "Western Frisian",
    nativeDisplayName: "West-Frysk"
}, {
    id: "bgn",
    displayName: "Western Balochi"
}, {
    id: "mrj",
    displayName: "Western Mari"
}, {
    id: "wal",
    displayName: "Wolaytta"
}, {
    id: "wo",
    displayName: "Wolof"
}, {
    id: "wuu",
    displayName: "Wu Chinese"
}, {
    id: "xh",
    displayName: "Xhosa"
}, {
    id: "hsn",
    displayName: "Xiang Chinese"
}, {
    id: "yao",
    displayName: "Yao"
}, {
    id: "yap",
    displayName: "Yapese"
}, {
    id: "ybb",
    displayName: "Yemba"
}, {
    id: "zap",
    displayName: "Zapotec"
}, {
    id: "dje",
    displayName: "Zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "Zaza"
}, {
    id: "zea",
    displayName: "Zeelandic"
}, {
    id: "zen",
    displayName: "Zenaga"
}, {
    id: "za",
    displayName: "Zhuang"
}, {
    id: "gbz",
    displayName: "Zoroastrian Dari"
}, {
    id: "zun",
    displayName: "Zuni"
}, {
    id: "yo",
    displayName: "Yoruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "Icelandic",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "Austrian German",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "Czech",
    nativeDisplayName: "čeština"
}, {
    id: "bas",
    displayName: "Basaa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "Hawaiian",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "Greek",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "Belarusian",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "Bulgarian",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "Ossetic",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "Kyrgyz",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "Macedonian",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "Mongolian",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "Chechen",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "Russian",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "Sakha",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "Serbian",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "Ukrainian",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "Church Slavic",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "Kazakh",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "Armenian",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "Yiddish",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "Hebrew",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "Uyghur",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "Urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "Arabic",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "Modern Standard Arabic",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa_af",
    displayName: "Dari",
    nativeDisplayName: "دری"
}, {
    id: "fa",
    displayName: "Persian",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "Northern Luri",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "Mazanderani",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "Pashto",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "Central Kurdish",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "Kashmiri",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "Konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "Nepali",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "Bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "Marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "Hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "Assamese",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "Bengali",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "Punjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "Gujarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "Oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "Tamil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "Telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "Kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "Malayalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "Sinhala",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "Thai",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "Lao",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "Tibetan",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "Dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "Burmese",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "Georgian",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "Tigrinya",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "Amharic",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "Khmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "Standard Moroccan Tamazight",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "Tachelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "Chinese",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "Japanese",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "Simplified Chinese",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "Cantonese",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "Traditional Chinese",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "Sichuan Yi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "Vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "Cherokee",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "Korean",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Afak",
    displayName: "Afaka"
}, {
    id: "Ahom",
    displayName: "Ahom"
}, {
    id: "Hluw",
    displayName: "Anatolian Hieroglyphs"
}, {
    id: "Arab",
    displayName: "Arabic"
}, {
    id: "Armn",
    displayName: "Armenian"
}, {
    id: "Avst",
    displayName: "Avestan"
}, {
    id: "Bali",
    displayName: "Balinese"
}, {
    id: "Bamu",
    displayName: "Bamum"
}, {
    id: "Bass",
    displayName: "Bassa Vah"
}, {
    id: "Batk",
    displayName: "Batak"
}, {
    id: "Beng",
    displayName: "Bengali"
}, {
    id: "Blis",
    displayName: "Blissymbols"
}, {
    id: "Phlv",
    displayName: "Book Pahlavi"
}, {
    id: "Bopo",
    displayName: "Bopomofo"
}, {
    id: "Brah",
    displayName: "Brahmi"
}, {
    id: "Brai",
    displayName: "Braille"
}, {
    id: "Bugi",
    displayName: "Buginese"
}, {
    id: "Buhd",
    displayName: "Buhid"
}, {
    id: "Cari",
    displayName: "Carian"
}, {
    id: "Aghb",
    displayName: "Caucasian Albanian"
}, {
    id: "Cakm",
    displayName: "Chakma"
}, {
    id: "Cham",
    displayName: "Cham"
}, {
    id: "Cher",
    displayName: "Cherokee"
}, {
    id: "Cirt",
    displayName: "Cirth"
}, {
    id: "Zyyy",
    displayName: "Common"
}, {
    id: "Copt",
    displayName: "Coptic"
}, {
    id: "Cprt",
    displayName: "Cypriot"
}, {
    id: "Cyrl",
    displayName: "Cyrillic"
}, {
    id: "Dsrt",
    displayName: "Deseret"
}, {
    id: "Deva",
    displayName: "Devanagari"
}, {
    id: "Dupl",
    displayName: "Duployan shorthand"
}, {
    id: "Syrn",
    displayName: "Eastern Syriac"
}, {
    id: "Egyd",
    displayName: "Egyptian demotic"
}, {
    id: "Egyh",
    displayName: "Egyptian hieratic"
}, {
    id: "Egyp",
    displayName: "Egyptian hieroglyphs"
}, {
    id: "Elba",
    displayName: "Elbasan"
}, {
    id: "Zsye",
    displayName: "Emoji"
}, {
    id: "Syre",
    displayName: "Estrangelo Syriac"
}, {
    id: "Ethi",
    displayName: "Ethiopic"
}, {
    id: "Latf",
    displayName: "Fraktur Latin"
}, {
    id: "Lisu",
    displayName: "Fraser"
}, {
    id: "Latg",
    displayName: "Gaelic Latin"
}, {
    id: "Geor",
    displayName: "Georgian"
}, {
    id: "Geok",
    displayName: "Georgian Khutsuri"
}, {
    id: "Glag",
    displayName: "Glagolitic"
}, {
    id: "Goth",
    displayName: "Gothic"
}, {
    id: "Gran",
    displayName: "Grantha"
}, {
    id: "Grek",
    displayName: "Greek"
}, {
    id: "Gujr",
    displayName: "Gujarati"
}, {
    id: "Guru",
    displayName: "Gurmukhi"
}, {
    id: "Hani",
    displayName: "Han"
}, {
    id: "Hang",
    displayName: "Hangul"
}, {
    id: "Hano",
    displayName: "Hanunoo"
}, {
    id: "Hatr",
    displayName: "Hatran"
}, {
    id: "Hebr",
    displayName: "Hebrew"
}, {
    id: "Hira",
    displayName: "Hiragana"
}, {
    id: "Armi",
    displayName: "Imperial Aramaic"
}, {
    id: "Inds",
    displayName: "Indus"
}, {
    id: "Zinh",
    displayName: "Inherited"
}, {
    id: "Phli",
    displayName: "Inscriptional Pahlavi"
}, {
    id: "Prti",
    displayName: "Inscriptional Parthian"
}, {
    id: "Jpan",
    displayName: "Japanese"
}, {
    id: "Hrkt",
    displayName: "Japanese syllabaries"
}, {
    id: "Java",
    displayName: "Javanese"
}, {
    id: "Jurc",
    displayName: "Jurchen"
}, {
    id: "Kthi",
    displayName: "Kaithi"
}, {
    id: "Knda",
    displayName: "Kannada"
}, {
    id: "Kana",
    displayName: "Katakana"
}, {
    id: "Kali",
    displayName: "Kayah Li"
}, {
    id: "Khar",
    displayName: "Kharoshthi"
}, {
    id: "Khmr",
    displayName: "Khmer"
}, {
    id: "Khoj",
    displayName: "Khojki"
}, {
    id: "Sind",
    displayName: "Khudawadi"
}, {
    id: "Kore",
    displayName: "Korean"
}, {
    id: "Kpel",
    displayName: "Kpelle"
}, {
    id: "Lana",
    displayName: "Lanna"
}, {
    id: "Laoo",
    displayName: "Lao"
}, {
    id: "Latn",
    displayName: "Latin"
}, {
    id: "Lepc",
    displayName: "Lepcha"
}, {
    id: "Limb",
    displayName: "Limbu"
}, {
    id: "Lina",
    displayName: "Linear A"
}, {
    id: "Linb",
    displayName: "Linear B"
}, {
    id: "Loma",
    displayName: "Loma"
}, {
    id: "Lyci",
    displayName: "Lycian"
}, {
    id: "Lydi",
    displayName: "Lydian"
}, {
    id: "Mahj",
    displayName: "Mahajani"
}, {
    id: "Mlym",
    displayName: "Malayalam"
}, {
    id: "Mand",
    displayName: "Mandaean"
}, {
    id: "Mani",
    displayName: "Manichaean"
}, {
    id: "Zmth",
    displayName: "Mathematical Notation"
}, {
    id: "Maya",
    displayName: "Mayan hieroglyphs"
}, {
    id: "Mtei",
    displayName: "Meitei Mayek"
}, {
    id: "Mend",
    displayName: "Mende"
}, {
    id: "Mero",
    displayName: "Meroitic"
}, {
    id: "Merc",
    displayName: "Meroitic Cursive"
}, {
    id: "Modi",
    displayName: "Modi"
}, {
    id: "Mong",
    displayName: "Mongolian"
}, {
    id: "Moon",
    displayName: "Moon"
}, {
    id: "Mroo",
    displayName: "Mro"
}, {
    id: "Mult",
    displayName: "Multani"
}, {
    id: "Mymr",
    displayName: "Myanmar"
}, {
    id: "Nbat",
    displayName: "Nabataean"
}, {
    id: "Nkgb",
    displayName: "Naxi Geba"
}, {
    id: "Talu",
    displayName: "New Tai Lue"
}, {
    id: "Nshu",
    displayName: "Nüshu"
}, {
    id: "Nkoo",
    displayName: "N’Ko"
}, {
    id: "Ogam",
    displayName: "Ogham"
}, {
    id: "Olck",
    displayName: "Ol Chiki"
}, {
    id: "Cyrs",
    displayName: "Old Church Slavonic Cyrillic"
}, {
    id: "Hung",
    displayName: "Old Hungarian"
}, {
    id: "Ital",
    displayName: "Old Italic"
}, {
    id: "Narb",
    displayName: "Old North Arabian"
}, {
    id: "Perm",
    displayName: "Old Permic"
}, {
    id: "Xpeo",
    displayName: "Old Persian"
}, {
    id: "Sarb",
    displayName: "Old South Arabian"
}, {
    id: "Orya",
    displayName: "Oriya"
}, {
    id: "Orkh",
    displayName: "Orkhon"
}, {
    id: "Osma",
    displayName: "Osmanya"
}, {
    id: "Hmng",
    displayName: "Pahawh Hmong"
}, {
    id: "Palm",
    displayName: "Palmyrene"
}, {
    id: "Pauc",
    displayName: "Pau Cin Hau"
}, {
    id: "Phag",
    displayName: "Phags-pa"
}, {
    id: "Phnx",
    displayName: "Phoenician"
}, {
    id: "Plrd",
    displayName: "Pollard Phonetic"
}, {
    id: "Phlp",
    displayName: "Psalter Pahlavi"
}, {
    id: "Rjng",
    displayName: "Rejang"
}, {
    id: "Roro",
    displayName: "Rongorongo"
}, {
    id: "Runr",
    displayName: "Runic"
}, {
    id: "Samr",
    displayName: "Samaritan"
}, {
    id: "Sara",
    displayName: "Sarati"
}, {
    id: "Saur",
    displayName: "Saurashtra"
}, {
    id: "Shrd",
    displayName: "Sharada"
}, {
    id: "Shaw",
    displayName: "Shavian"
}, {
    id: "Sidd",
    displayName: "Siddham"
}, {
    id: "Sgnw",
    displayName: "SignWriting"
}, {
    id: "Hans",
    displayName: "Simplified"
}, {
    id: "Sinh",
    displayName: "Sinhala"
}, {
    id: "Sora",
    displayName: "Sora Sompeng"
}, {
    id: "Xsux",
    displayName: "Sumero-Akkadian Cuneiform"
}, {
    id: "Sund",
    displayName: "Sundanese"
}, {
    id: "Sylo",
    displayName: "Syloti Nagri"
}, {
    id: "Zsym",
    displayName: "Symbols"
}, {
    id: "Syrc",
    displayName: "Syriac"
}, {
    id: "Tglg",
    displayName: "Tagalog"
}, {
    id: "Tagb",
    displayName: "Tagbanwa"
}, {
    id: "Tale",
    displayName: "Tai Le"
}, {
    id: "Tavt",
    displayName: "Tai Viet"
}, {
    id: "Takr",
    displayName: "Takri"
}, {
    id: "Taml",
    displayName: "Tamil"
}, {
    id: "Tang",
    displayName: "Tangut"
}, {
    id: "Telu",
    displayName: "Telugu"
}, {
    id: "Teng",
    displayName: "Tengwar"
}, {
    id: "Thaa",
    displayName: "Thaana"
}, {
    id: "Thai",
    displayName: "Thai"
}, {
    id: "Tibt",
    displayName: "Tibetan"
}, {
    id: "Tfng",
    displayName: "Tifinagh"
}, {
    id: "Tirh",
    displayName: "Tirhuta"
}, {
    id: "Hant",
    displayName: "Traditional"
}, {
    id: "Ugar",
    displayName: "Ugaritic"
}, {
    id: "Cans",
    displayName: "Unified Canadian Aboriginal Syllabics"
}, {
    id: "Zzzz",
    displayName: "Unknown Script"
}, {
    id: "Zxxx",
    displayName: "Unwritten"
}, {
    id: "Vaii",
    displayName: "Vai"
}, {
    id: "Wara",
    displayName: "Varang Kshiti"
}, {
    id: "Visp",
    displayName: "Visible Speech"
}, {
    id: "Syrj",
    displayName: "Western Syriac"
}, {
    id: "Wole",
    displayName: "Woleai"
}, {
    id: "Yiii",
    displayName: "Yi"
} ];

inter.currencies = [ {
    id: "XUA",
    displayName: "ADB Unit of Account",
    one: "ADB unit of account",
    other: "ADB units of account"
}, {
    id: "AFN",
    displayName: "Afghan Afghani",
    one: "Afghan Afghani",
    other: "Afghan Afghanis"
}, {
    id: "AFA",
    displayName: "Afghan Afghani (1927–2002)",
    one: "Afghan afghani (1927–2002)",
    other: "Afghan afghanis (1927–2002)"
}, {
    id: "ALL",
    displayName: "Albanian Lek",
    one: "Albanian lek",
    other: "Albanian lekë"
}, {
    id: "ALK",
    displayName: "Albanian Lek (1946–1965)",
    one: "Albanian lek (1946–1965)",
    other: "Albanian lekë (1946–1965)"
}, {
    id: "DZD",
    displayName: "Algerian Dinar",
    one: "Algerian dinar",
    other: "Algerian dinars"
}, {
    id: "ADP",
    displayName: "Andorran Peseta",
    one: "Andorran peseta",
    other: "Andorran pesetas"
}, {
    id: "AOA",
    displayName: "Angolan Kwanza",
    symbol: "Kz",
    one: "Angolan kwanza",
    other: "Angolan kwanzas"
}, {
    id: "AOK",
    displayName: "Angolan Kwanza (1977–1991)",
    one: "Angolan kwanza (1977–1991)",
    other: "Angolan kwanzas (1977–1991)"
}, {
    id: "AON",
    displayName: "Angolan New Kwanza (1990–2000)",
    one: "Angolan new kwanza (1990–2000)",
    other: "Angolan new kwanzas (1990–2000)"
}, {
    id: "AOR",
    displayName: "Angolan Readjusted Kwanza (1995–1999)",
    one: "Angolan readjusted kwanza (1995–1999)",
    other: "Angolan readjusted kwanzas (1995–1999)"
}, {
    id: "ARA",
    displayName: "Argentine Austral",
    one: "Argentine austral",
    other: "Argentine australs"
}, {
    id: "ARS",
    displayName: "Argentine Peso",
    symbol: "$",
    one: "Argentine peso",
    other: "Argentine pesos"
}, {
    id: "ARM",
    displayName: "Argentine Peso (1881–1970)",
    one: "Argentine peso (1881–1970)",
    other: "Argentine pesos (1881–1970)"
}, {
    id: "ARP",
    displayName: "Argentine Peso (1983–1985)",
    one: "Argentine peso (1983–1985)",
    other: "Argentine pesos (1983–1985)"
}, {
    id: "ARL",
    displayName: "Argentine Peso Ley (1970–1983)",
    one: "Argentine peso ley (1970–1983)",
    other: "Argentine pesos ley (1970–1983)"
}, {
    id: "AMD",
    displayName: "Armenian Dram",
    one: "Armenian dram",
    other: "Armenian drams"
}, {
    id: "AWG",
    displayName: "Aruban Florin",
    one: "Aruban florin",
    other: "Aruban florin"
}, {
    id: "AUD",
    displayName: "Australian Dollar",
    symbol: "A$",
    one: "Australian dollar",
    other: "Australian dollars"
}, {
    id: "ATS",
    displayName: "Austrian Schilling",
    one: "Austrian schilling",
    other: "Austrian schillings"
}, {
    id: "AZN",
    displayName: "Azerbaijani Manat",
    one: "Azerbaijani manat",
    other: "Azerbaijani manats"
}, {
    id: "AZM",
    displayName: "Azerbaijani Manat (1993–2006)",
    one: "Azerbaijani manat (1993–2006)",
    other: "Azerbaijani manats (1993–2006)"
}, {
    id: "BSD",
    displayName: "Bahamian Dollar",
    symbol: "$",
    one: "Bahamian dollar",
    other: "Bahamian dollars"
}, {
    id: "BHD",
    displayName: "Bahraini Dinar",
    one: "Bahraini dinar",
    other: "Bahraini dinars"
}, {
    id: "BDT",
    displayName: "Bangladeshi Taka",
    symbol: "৳",
    one: "Bangladeshi taka",
    other: "Bangladeshi takas"
}, {
    id: "BBD",
    displayName: "Barbadian Dollar",
    symbol: "$",
    one: "Barbadian dollar",
    other: "Barbadian dollars"
}, {
    id: "BYB",
    displayName: "Belarusian New Ruble (1994–1999)",
    one: "Belarusian new ruble (1994–1999)",
    other: "Belarusian new rubles (1994–1999)"
}, {
    id: "BYR",
    displayName: "Belarusian Ruble",
    symbol: "р.",
    one: "Belarusian ruble",
    other: "Belarusian rubles"
}, {
    id: "BEF",
    displayName: "Belgian Franc",
    one: "Belgian franc",
    other: "Belgian francs"
}, {
    id: "BEC",
    displayName: "Belgian Franc (convertible)",
    one: "Belgian franc (convertible)",
    other: "Belgian francs (convertible)"
}, {
    id: "BEL",
    displayName: "Belgian Franc (financial)",
    one: "Belgian franc (financial)",
    other: "Belgian francs (financial)"
}, {
    id: "BZD",
    displayName: "Belize Dollar",
    symbol: "$",
    one: "Belize dollar",
    other: "Belize dollars"
}, {
    id: "BMD",
    displayName: "Bermudan Dollar",
    symbol: "$",
    one: "Bermudan dollar",
    other: "Bermudan dollars"
}, {
    id: "BTN",
    displayName: "Bhutanese Ngultrum",
    one: "Bhutanese ngultrum",
    other: "Bhutanese ngultrums"
}, {
    id: "BOB",
    displayName: "Bolivian Boliviano",
    symbol: "Bs",
    one: "Bolivian boliviano",
    other: "Bolivian bolivianos"
}, {
    id: "BOL",
    displayName: "Bolivian Boliviano (1863–1963)",
    one: "Bolivian boliviano (1863–1963)",
    other: "Bolivian bolivianos (1863–1963)"
}, {
    id: "BOV",
    displayName: "Bolivian Mvdol",
    one: "Bolivian mvdol",
    other: "Bolivian mvdols"
}, {
    id: "BOP",
    displayName: "Bolivian Peso",
    one: "Bolivian peso",
    other: "Bolivian pesos"
}, {
    id: "BAM",
    displayName: "Bosnia-Herzegovina Convertible Mark",
    symbol: "KM",
    one: "Bosnia-Herzegovina convertible mark",
    other: "Bosnia-Herzegovina convertible marks"
}, {
    id: "BAD",
    displayName: "Bosnia-Herzegovina Dinar (1992–1994)",
    one: "Bosnia-Herzegovina dinar (1992–1994)",
    other: "Bosnia-Herzegovina dinars (1992–1994)"
}, {
    id: "BAN",
    displayName: "Bosnia-Herzegovina New Dinar (1994–1997)",
    one: "Bosnia-Herzegovina new dinar (1994–1997)",
    other: "Bosnia-Herzegovina new dinars (1994–1997)"
}, {
    id: "BWP",
    displayName: "Botswanan Pula",
    symbol: "P",
    one: "Botswanan pula",
    other: "Botswanan pulas"
}, {
    id: "BRC",
    displayName: "Brazilian Cruzado (1986–1989)",
    one: "Brazilian cruzado (1986–1989)",
    other: "Brazilian cruzados (1986–1989)"
}, {
    id: "BRZ",
    displayName: "Brazilian Cruzeiro (1942–1967)",
    one: "Brazilian cruzeiro (1942–1967)",
    other: "Brazilian cruzeiros (1942–1967)"
}, {
    id: "BRE",
    displayName: "Brazilian Cruzeiro (1990–1993)",
    one: "Brazilian cruzeiro (1990–1993)",
    other: "Brazilian cruzeiros (1990–1993)"
}, {
    id: "BRR",
    displayName: "Brazilian Cruzeiro (1993–1994)",
    one: "Brazilian cruzeiro (1993–1994)",
    other: "Brazilian cruzeiros (1993–1994)"
}, {
    id: "BRN",
    displayName: "Brazilian New Cruzado (1989–1990)",
    one: "Brazilian new cruzado (1989–1990)",
    other: "Brazilian new cruzados (1989–1990)"
}, {
    id: "BRB",
    displayName: "Brazilian New Cruzeiro (1967–1986)",
    one: "Brazilian new cruzeiro (1967–1986)",
    other: "Brazilian new cruzeiros (1967–1986)"
}, {
    id: "BRL",
    displayName: "Brazilian Real",
    symbol: "R$",
    one: "Brazilian real",
    other: "Brazilian reals"
}, {
    id: "GBP",
    displayName: "British Pound",
    symbol: "£",
    one: "British pound",
    other: "British pounds"
}, {
    id: "BND",
    displayName: "Brunei Dollar",
    symbol: "$",
    one: "Brunei dollar",
    other: "Brunei dollars"
}, {
    id: "BGL",
    displayName: "Bulgarian Hard Lev",
    one: "Bulgarian hard lev",
    other: "Bulgarian hard leva"
}, {
    id: "BGN",
    displayName: "Bulgarian Lev",
    one: "Bulgarian lev",
    other: "Bulgarian leva"
}, {
    id: "BGO",
    displayName: "Bulgarian Lev (1879–1952)",
    one: "Bulgarian lev (1879–1952)",
    other: "Bulgarian leva (1879–1952)"
}, {
    id: "BGM",
    displayName: "Bulgarian Socialist Lev",
    one: "Bulgarian socialist lev",
    other: "Bulgarian socialist leva"
}, {
    id: "BUK",
    displayName: "Burmese Kyat",
    one: "Burmese kyat",
    other: "Burmese kyats"
}, {
    id: "BIF",
    displayName: "Burundian Franc",
    one: "Burundian franc",
    other: "Burundian francs"
}, {
    id: "XPF",
    displayName: "CFP Franc",
    symbol: "CFPF",
    one: "CFP franc",
    other: "CFP francs"
}, {
    id: "KHR",
    displayName: "Cambodian Riel",
    symbol: "៛",
    one: "Cambodian riel",
    other: "Cambodian riels"
}, {
    id: "CAD",
    displayName: "Canadian Dollar",
    symbol: "CA$",
    one: "Canadian dollar",
    other: "Canadian dollars"
}, {
    id: "CVE",
    displayName: "Cape Verdean Escudo",
    one: "Cape Verdean escudo",
    other: "Cape Verdean escudos"
}, {
    id: "KYD",
    displayName: "Cayman Islands Dollar",
    symbol: "$",
    one: "Cayman Islands dollar",
    other: "Cayman Islands dollars"
}, {
    id: "XAF",
    displayName: "Central African CFA Franc",
    symbol: "FCFA",
    one: "Central African CFA franc",
    other: "Central African CFA francs"
}, {
    id: "CLE",
    displayName: "Chilean Escudo",
    one: "Chilean escudo",
    other: "Chilean escudos"
}, {
    id: "CLP",
    displayName: "Chilean Peso",
    symbol: "$",
    one: "Chilean peso",
    other: "Chilean pesos"
}, {
    id: "CLF",
    displayName: "Chilean Unit of Account (UF)",
    one: "Chilean unit of account (UF)",
    other: "Chilean units of account (UF)"
}, {
    id: "CNX",
    displayName: "Chinese People’s Bank Dollar",
    one: "Chinese People’s Bank dollar",
    other: "Chinese People’s Bank dollars"
}, {
    id: "CNY",
    displayName: "Chinese Yuan",
    symbol: "CN¥",
    one: "Chinese yuan",
    other: "Chinese yuan"
}, {
    id: "COP",
    displayName: "Colombian Peso",
    symbol: "$",
    one: "Colombian peso",
    other: "Colombian pesos"
}, {
    id: "COU",
    displayName: "Colombian Real Value Unit",
    one: "Colombian real value unit",
    other: "Colombian real value units"
}, {
    id: "KMF",
    displayName: "Comorian Franc",
    symbol: "CF",
    one: "Comorian franc",
    other: "Comorian francs"
}, {
    id: "CDF",
    displayName: "Congolese Franc",
    one: "Congolese franc",
    other: "Congolese francs"
}, {
    id: "CRC",
    displayName: "Costa Rican Colón",
    symbol: "₡",
    one: "Costa Rican colón",
    other: "Costa Rican colóns"
}, {
    id: "HRD",
    displayName: "Croatian Dinar",
    one: "Croatian dinar",
    other: "Croatian dinars"
}, {
    id: "HRK",
    displayName: "Croatian Kuna",
    symbol: "kn",
    one: "Croatian kuna",
    other: "Croatian kunas"
}, {
    id: "CUC",
    displayName: "Cuban Convertible Peso",
    symbol: "$",
    one: "Cuban convertible peso",
    other: "Cuban convertible pesos"
}, {
    id: "CUP",
    displayName: "Cuban Peso",
    symbol: "$",
    one: "Cuban peso",
    other: "Cuban pesos"
}, {
    id: "CYP",
    displayName: "Cypriot Pound",
    one: "Cypriot pound",
    other: "Cypriot pounds"
}, {
    id: "CZK",
    displayName: "Czech Republic Koruna",
    symbol: "Kč",
    one: "Czech Republic koruna",
    other: "Czech Republic korunas"
}, {
    id: "CSK",
    displayName: "Czechoslovak Hard Koruna",
    one: "Czechoslovak hard koruna",
    other: "Czechoslovak hard korunas"
}, {
    id: "DKK",
    displayName: "Danish Krone",
    symbol: "kr",
    one: "Danish krone",
    other: "Danish kroner"
}, {
    id: "DJF",
    displayName: "Djiboutian Franc",
    one: "Djiboutian franc",
    other: "Djiboutian francs"
}, {
    id: "DOP",
    displayName: "Dominican Peso",
    symbol: "$",
    one: "Dominican peso",
    other: "Dominican pesos"
}, {
    id: "NLG",
    displayName: "Dutch Guilder",
    one: "Dutch guilder",
    other: "Dutch guilders"
}, {
    id: "XCD",
    displayName: "East Caribbean Dollar",
    symbol: "EC$",
    one: "East Caribbean dollar",
    other: "East Caribbean dollars"
}, {
    id: "DDM",
    displayName: "East German Mark",
    one: "East German mark",
    other: "East German marks"
}, {
    id: "ECS",
    displayName: "Ecuadorian Sucre",
    one: "Ecuadorian sucre",
    other: "Ecuadorian sucres"
}, {
    id: "ECV",
    displayName: "Ecuadorian Unit of Constant Value",
    one: "Ecuadorian unit of constant value",
    other: "Ecuadorian units of constant value"
}, {
    id: "EGP",
    displayName: "Egyptian Pound",
    symbol: "E£",
    one: "Egyptian pound",
    other: "Egyptian pounds"
}, {
    id: "GQE",
    displayName: "Equatorial Guinean Ekwele",
    one: "Equatorial Guinean ekwele",
    other: "Equatorial Guinean ekwele"
}, {
    id: "ERN",
    displayName: "Eritrean Nakfa",
    one: "Eritrean nakfa",
    other: "Eritrean nakfas"
}, {
    id: "EEK",
    displayName: "Estonian Kroon",
    one: "Estonian kroon",
    other: "Estonian kroons"
}, {
    id: "ETB",
    displayName: "Ethiopian Birr",
    one: "Ethiopian birr",
    other: "Ethiopian birrs"
}, {
    id: "EUR",
    displayName: "Euro",
    symbol: "€",
    one: "euro",
    other: "euros"
}, {
    id: "XBA",
    displayName: "European Composite Unit",
    one: "European composite unit",
    other: "European composite units"
}, {
    id: "XEU",
    displayName: "European Currency Unit",
    one: "European currency unit",
    other: "European currency units"
}, {
    id: "XBB",
    displayName: "European Monetary Unit",
    one: "European monetary unit",
    other: "European monetary units"
}, {
    id: "XBC",
    displayName: "European Unit of Account (XBC)",
    one: "European unit of account (XBC)",
    other: "European units of account (XBC)"
}, {
    id: "XBD",
    displayName: "European Unit of Account (XBD)",
    one: "European unit of account (XBD)",
    other: "European units of account (XBD)"
}, {
    id: "FKP",
    displayName: "Falkland Islands Pound",
    symbol: "£",
    one: "Falkland Islands pound",
    other: "Falkland Islands pounds"
}, {
    id: "FJD",
    displayName: "Fijian Dollar",
    symbol: "$",
    one: "Fijian dollar",
    other: "Fijian dollars"
}, {
    id: "FIM",
    displayName: "Finnish Markka",
    one: "Finnish markka",
    other: "Finnish markkas"
}, {
    id: "FRF",
    displayName: "French Franc",
    one: "French franc",
    other: "French francs"
}, {
    id: "XFO",
    displayName: "French Gold Franc",
    one: "French gold franc",
    other: "French gold francs"
}, {
    id: "XFU",
    displayName: "French UIC-Franc",
    one: "French UIC-franc",
    other: "French UIC-francs"
}, {
    id: "GMD",
    displayName: "Gambian Dalasi",
    one: "Gambian dalasi",
    other: "Gambian dalasis"
}, {
    id: "GEK",
    displayName: "Georgian Kupon Larit",
    one: "Georgian kupon larit",
    other: "Georgian kupon larits"
}, {
    id: "GEL",
    displayName: "Georgian Lari",
    symbol: "₾",
    one: "Georgian lari",
    other: "Georgian laris"
}, {
    id: "DEM",
    displayName: "German Mark",
    one: "German mark",
    other: "German marks"
}, {
    id: "GHS",
    displayName: "Ghanaian Cedi",
    one: "Ghanaian cedi",
    other: "Ghanaian cedis"
}, {
    id: "GHC",
    displayName: "Ghanaian Cedi (1979–2007)",
    one: "Ghanaian cedi (1979–2007)",
    other: "Ghanaian cedis (1979–2007)"
}, {
    id: "GIP",
    displayName: "Gibraltar Pound",
    symbol: "£",
    one: "Gibraltar pound",
    other: "Gibraltar pounds"
}, {
    id: "XAU",
    displayName: "Gold",
    one: "troy ounce of gold",
    other: "troy ounces of gold"
}, {
    id: "GRD",
    displayName: "Greek Drachma",
    one: "Greek drachma",
    other: "Greek drachmas"
}, {
    id: "GTQ",
    displayName: "Guatemalan Quetzal",
    symbol: "Q",
    one: "Guatemalan quetzal",
    other: "Guatemalan quetzals"
}, {
    id: "GWP",
    displayName: "Guinea-Bissau Peso",
    one: "Guinea-Bissau peso",
    other: "Guinea-Bissau pesos"
}, {
    id: "GNF",
    displayName: "Guinean Franc",
    symbol: "FG",
    one: "Guinean franc",
    other: "Guinean francs"
}, {
    id: "GNS",
    displayName: "Guinean Syli",
    one: "Guinean syli",
    other: "Guinean sylis"
}, {
    id: "GYD",
    displayName: "Guyanaese Dollar",
    symbol: "$",
    one: "Guyanaese dollar",
    other: "Guyanaese dollars"
}, {
    id: "HTG",
    displayName: "Haitian Gourde",
    one: "Haitian gourde",
    other: "Haitian gourdes"
}, {
    id: "HNL",
    displayName: "Honduran Lempira",
    symbol: "L",
    one: "Honduran lempira",
    other: "Honduran lempiras"
}, {
    id: "HKD",
    displayName: "Hong Kong Dollar",
    symbol: "HK$",
    one: "Hong Kong dollar",
    other: "Hong Kong dollars"
}, {
    id: "HUF",
    displayName: "Hungarian Forint",
    symbol: "Ft",
    one: "Hungarian forint",
    other: "Hungarian forints"
}, {
    id: "ISK",
    displayName: "Icelandic Króna",
    symbol: "kr",
    one: "Icelandic króna",
    other: "Icelandic krónur"
}, {
    id: "ISJ",
    displayName: "Icelandic Króna (1918–1981)",
    one: "Icelandic króna (1918–1981)",
    other: "Icelandic krónur (1918–1981)"
}, {
    id: "INR",
    displayName: "Indian Rupee",
    symbol: "₹",
    one: "Indian rupee",
    other: "Indian rupees"
}, {
    id: "IDR",
    displayName: "Indonesian Rupiah",
    symbol: "Rp",
    one: "Indonesian rupiah",
    other: "Indonesian rupiahs"
}, {
    id: "IRR",
    displayName: "Iranian Rial",
    one: "Iranian rial",
    other: "Iranian rials"
}, {
    id: "IQD",
    displayName: "Iraqi Dinar",
    one: "Iraqi dinar",
    other: "Iraqi dinars"
}, {
    id: "IEP",
    displayName: "Irish Pound",
    one: "Irish pound",
    other: "Irish pounds"
}, {
    id: "ILS",
    displayName: "Israeli New Sheqel",
    symbol: "₪",
    one: "Israeli new sheqel",
    other: "Israeli new sheqels"
}, {
    id: "ILP",
    displayName: "Israeli Pound",
    one: "Israeli pound",
    other: "Israeli pounds"
}, {
    id: "ILR",
    displayName: "Israeli Sheqel (1980–1985)",
    one: "Israeli sheqel (1980–1985)",
    other: "Israeli sheqels (1980–1985)"
}, {
    id: "ITL",
    displayName: "Italian Lira",
    one: "Italian lira",
    other: "Italian liras"
}, {
    id: "JMD",
    displayName: "Jamaican Dollar",
    symbol: "$",
    one: "Jamaican dollar",
    other: "Jamaican dollars"
}, {
    id: "JPY",
    displayName: "Japanese Yen",
    symbol: "¥",
    one: "Japanese yen",
    other: "Japanese yen"
}, {
    id: "JOD",
    displayName: "Jordanian Dinar",
    one: "Jordanian dinar",
    other: "Jordanian dinars"
}, {
    id: "KZT",
    displayName: "Kazakhstani Tenge",
    symbol: "₸",
    one: "Kazakhstani tenge",
    other: "Kazakhstani tenges"
}, {
    id: "KES",
    displayName: "Kenyan Shilling",
    one: "Kenyan shilling",
    other: "Kenyan shillings"
}, {
    id: "KWD",
    displayName: "Kuwaiti Dinar",
    one: "Kuwaiti dinar",
    other: "Kuwaiti dinars"
}, {
    id: "KGS",
    displayName: "Kyrgystani Som",
    one: "Kyrgystani som",
    other: "Kyrgystani soms"
}, {
    id: "LAK",
    displayName: "Laotian Kip",
    symbol: "₭",
    one: "Laotian kip",
    other: "Laotian kips"
}, {
    id: "LVL",
    displayName: "Latvian Lats",
    symbol: "Ls",
    one: "Latvian lats",
    other: "Latvian lati"
}, {
    id: "LVR",
    displayName: "Latvian Ruble",
    one: "Latvian ruble",
    other: "Latvian rubles"
}, {
    id: "LBP",
    displayName: "Lebanese Pound",
    symbol: "L£",
    one: "Lebanese pound",
    other: "Lebanese pounds"
}, {
    id: "LSL",
    displayName: "Lesotho Loti",
    one: "Lesotho loti",
    other: "Lesotho lotis"
}, {
    id: "LRD",
    displayName: "Liberian Dollar",
    symbol: "$",
    one: "Liberian dollar",
    other: "Liberian dollars"
}, {
    id: "LYD",
    displayName: "Libyan Dinar",
    one: "Libyan dinar",
    other: "Libyan dinars"
}, {
    id: "LTL",
    displayName: "Lithuanian Litas",
    symbol: "Lt",
    one: "Lithuanian litas",
    other: "Lithuanian litai"
}, {
    id: "LTT",
    displayName: "Lithuanian Talonas",
    one: "Lithuanian talonas",
    other: "Lithuanian talonases"
}, {
    id: "LUL",
    displayName: "Luxembourg Financial Franc",
    one: "Luxembourg financial franc",
    other: "Luxembourg financial francs"
}, {
    id: "LUC",
    displayName: "Luxembourgian Convertible Franc",
    one: "Luxembourgian convertible franc",
    other: "Luxembourgian convertible francs"
}, {
    id: "LUF",
    displayName: "Luxembourgian Franc",
    one: "Luxembourgian franc",
    other: "Luxembourgian francs"
}, {
    id: "MOP",
    displayName: "Macanese Pataca",
    one: "Macanese pataca",
    other: "Macanese patacas"
}, {
    id: "MKD",
    displayName: "Macedonian Denar",
    one: "Macedonian denar",
    other: "Macedonian denari"
}, {
    id: "MKN",
    displayName: "Macedonian Denar (1992–1993)",
    one: "Macedonian denar (1992–1993)",
    other: "Macedonian denari (1992–1993)"
}, {
    id: "MGA",
    displayName: "Malagasy Ariary",
    symbol: "Ar",
    one: "Malagasy ariary",
    other: "Malagasy ariaries"
}, {
    id: "MGF",
    displayName: "Malagasy Franc",
    one: "Malagasy franc",
    other: "Malagasy francs"
}, {
    id: "MWK",
    displayName: "Malawian Kwacha",
    one: "Malawian kwacha",
    other: "Malawian kwachas"
}, {
    id: "MYR",
    displayName: "Malaysian Ringgit",
    symbol: "RM",
    one: "Malaysian ringgit",
    other: "Malaysian ringgits"
}, {
    id: "MVR",
    displayName: "Maldivian Rufiyaa",
    one: "Maldivian rufiyaa",
    other: "Maldivian rufiyaas"
}, {
    id: "MVP",
    displayName: "Maldivian Rupee (1947–1981)",
    one: "Maldivian rupee (1947–1981)",
    other: "Maldivian rupees (1947–1981)"
}, {
    id: "MLF",
    displayName: "Malian Franc",
    one: "Malian franc",
    other: "Malian francs"
}, {
    id: "MTL",
    displayName: "Maltese Lira",
    one: "Maltese lira",
    other: "Maltese lira"
}, {
    id: "MTP",
    displayName: "Maltese Pound",
    one: "Maltese pound",
    other: "Maltese pounds"
}, {
    id: "MRO",
    displayName: "Mauritanian Ouguiya",
    one: "Mauritanian ouguiya",
    other: "Mauritanian ouguiyas"
}, {
    id: "MUR",
    displayName: "Mauritian Rupee",
    symbol: "Rs",
    one: "Mauritian rupee",
    other: "Mauritian rupees"
}, {
    id: "MXV",
    displayName: "Mexican Investment Unit",
    one: "Mexican investment unit",
    other: "Mexican investment units"
}, {
    id: "MXN",
    displayName: "Mexican Peso",
    symbol: "MX$",
    one: "Mexican peso",
    other: "Mexican pesos"
}, {
    id: "MXP",
    displayName: "Mexican Silver Peso (1861–1992)",
    one: "Mexican silver peso (1861–1992)",
    other: "Mexican silver pesos (1861–1992)"
}, {
    id: "MDC",
    displayName: "Moldovan Cupon",
    one: "Moldovan cupon",
    other: "Moldovan cupon"
}, {
    id: "MDL",
    displayName: "Moldovan Leu",
    one: "Moldovan leu",
    other: "Moldovan lei"
}, {
    id: "MCF",
    displayName: "Monegasque Franc",
    one: "Monegasque franc",
    other: "Monegasque francs"
}, {
    id: "MNT",
    displayName: "Mongolian Tugrik",
    symbol: "₮",
    one: "Mongolian tugrik",
    other: "Mongolian tugriks"
}, {
    id: "MAD",
    displayName: "Moroccan Dirham",
    one: "Moroccan dirham",
    other: "Moroccan dirhams"
}, {
    id: "MAF",
    displayName: "Moroccan Franc",
    one: "Moroccan franc",
    other: "Moroccan francs"
}, {
    id: "MZE",
    displayName: "Mozambican Escudo",
    one: "Mozambican escudo",
    other: "Mozambican escudos"
}, {
    id: "MZN",
    displayName: "Mozambican Metical",
    one: "Mozambican metical",
    other: "Mozambican meticals"
}, {
    id: "MZM",
    displayName: "Mozambican Metical (1980–2006)",
    one: "Mozambican metical (1980–2006)",
    other: "Mozambican meticals (1980–2006)"
}, {
    id: "MMK",
    displayName: "Myanmar Kyat",
    symbol: "K",
    one: "Myanmar kyat",
    other: "Myanmar kyats"
}, {
    id: "NAD",
    displayName: "Namibian Dollar",
    symbol: "$",
    one: "Namibian dollar",
    other: "Namibian dollars"
}, {
    id: "NPR",
    displayName: "Nepalese Rupee",
    symbol: "Rs",
    one: "Nepalese rupee",
    other: "Nepalese rupees"
}, {
    id: "ANG",
    displayName: "Netherlands Antillean Guilder",
    one: "Netherlands Antillean guilder",
    other: "Netherlands Antillean guilders"
}, {
    id: "TWD",
    displayName: "New Taiwan Dollar",
    symbol: "NT$",
    one: "New Taiwan dollar",
    other: "New Taiwan dollars"
}, {
    id: "NZD",
    displayName: "New Zealand Dollar",
    symbol: "NZ$",
    one: "New Zealand dollar",
    other: "New Zealand dollars"
}, {
    id: "NIO",
    displayName: "Nicaraguan Córdoba",
    symbol: "C$",
    one: "Nicaraguan córdoba",
    other: "Nicaraguan córdobas"
}, {
    id: "NIC",
    displayName: "Nicaraguan Córdoba (1988–1991)",
    one: "Nicaraguan córdoba (1988–1991)",
    other: "Nicaraguan córdobas (1988–1991)"
}, {
    id: "NGN",
    displayName: "Nigerian Naira",
    symbol: "₦",
    one: "Nigerian naira",
    other: "Nigerian nairas"
}, {
    id: "KPW",
    displayName: "North Korean Won",
    symbol: "₩",
    one: "North Korean won",
    other: "North Korean won"
}, {
    id: "NOK",
    displayName: "Norwegian Krone",
    symbol: "kr",
    one: "Norwegian krone",
    other: "Norwegian kroner"
}, {
    id: "OMR",
    displayName: "Omani Rial",
    one: "Omani rial",
    other: "Omani rials"
}, {
    id: "PKR",
    displayName: "Pakistani Rupee",
    symbol: "Rs",
    one: "Pakistani rupee",
    other: "Pakistani rupees"
}, {
    id: "XPD",
    displayName: "Palladium",
    one: "troy ounce of palladium",
    other: "troy ounces of palladium"
}, {
    id: "PAB",
    displayName: "Panamanian Balboa",
    one: "Panamanian balboa",
    other: "Panamanian balboas"
}, {
    id: "PGK",
    displayName: "Papua New Guinean Kina",
    one: "Papua New Guinean kina",
    other: "Papua New Guinean kina"
}, {
    id: "PYG",
    displayName: "Paraguayan Guarani",
    symbol: "₲",
    one: "Paraguayan guarani",
    other: "Paraguayan guaranis"
}, {
    id: "PEI",
    displayName: "Peruvian Inti",
    one: "Peruvian inti",
    other: "Peruvian intis"
}, {
    id: "PEN",
    displayName: "Peruvian Nuevo Sol",
    one: "Peruvian nuevo sol",
    other: "Peruvian nuevos soles"
}, {
    id: "PES",
    displayName: "Peruvian Sol (1863–1965)",
    one: "Peruvian sol (1863–1965)",
    other: "Peruvian soles (1863–1965)"
}, {
    id: "PHP",
    displayName: "Philippine Peso",
    symbol: "₱",
    one: "Philippine peso",
    other: "Philippine pesos"
}, {
    id: "XPT",
    displayName: "Platinum",
    one: "troy ounce of platinum",
    other: "troy ounces of platinum"
}, {
    id: "PLN",
    displayName: "Polish Zloty",
    symbol: "zł",
    one: "Polish zloty",
    other: "Polish zlotys"
}, {
    id: "PLZ",
    displayName: "Polish Zloty (1950–1995)",
    one: "Polish zloty (PLZ)",
    other: "Polish zlotys (PLZ)"
}, {
    id: "PTE",
    displayName: "Portuguese Escudo",
    one: "Portuguese escudo",
    other: "Portuguese escudos"
}, {
    id: "GWE",
    displayName: "Portuguese Guinea Escudo",
    one: "Portuguese Guinea escudo",
    other: "Portuguese Guinea escudos"
}, {
    id: "QAR",
    displayName: "Qatari Rial",
    one: "Qatari rial",
    other: "Qatari rials"
}, {
    id: "XRE",
    displayName: "RINET Funds",
    one: "RINET Funds unit",
    other: "RINET Funds units"
}, {
    id: "RHD",
    displayName: "Rhodesian Dollar",
    one: "Rhodesian dollar",
    other: "Rhodesian dollars"
}, {
    id: "RON",
    displayName: "Romanian Leu",
    one: "Romanian leu",
    other: "Romanian lei"
}, {
    id: "ROL",
    displayName: "Romanian Leu (1952–2006)",
    one: "Romanian leu (1952–2006)",
    other: "Romanian Lei (1952–2006)"
}, {
    id: "RUB",
    displayName: "Russian Ruble",
    symbol: "₽",
    one: "Russian ruble",
    other: "Russian rubles"
}, {
    id: "RUR",
    displayName: "Russian Ruble (1991–1998)",
    symbol: "р.",
    one: "Russian ruble (1991–1998)",
    other: "Russian rubles (1991–1998)"
}, {
    id: "RWF",
    displayName: "Rwandan Franc",
    symbol: "RF",
    one: "Rwandan franc",
    other: "Rwandan francs"
}, {
    id: "SVC",
    displayName: "Salvadoran Colón",
    one: "Salvadoran colón",
    other: "Salvadoran colones"
}, {
    id: "WST",
    displayName: "Samoan Tala",
    one: "Samoan tala",
    other: "Samoan tala"
}, {
    id: "SAR",
    displayName: "Saudi Riyal",
    one: "Saudi riyal",
    other: "Saudi riyals"
}, {
    id: "RSD",
    displayName: "Serbian Dinar",
    one: "Serbian dinar",
    other: "Serbian dinars"
}, {
    id: "CSD",
    displayName: "Serbian Dinar (2002–2006)",
    one: "Serbian dinar (2002–2006)",
    other: "Serbian dinars (2002–2006)"
}, {
    id: "SCR",
    displayName: "Seychellois Rupee",
    one: "Seychellois rupee",
    other: "Seychellois rupees"
}, {
    id: "SLL",
    displayName: "Sierra Leonean Leone",
    one: "Sierra Leonean leone",
    other: "Sierra Leonean leones"
}, {
    id: "XAG",
    displayName: "Silver",
    one: "troy ounce of silver",
    other: "troy ounces of silver"
}, {
    id: "SGD",
    displayName: "Singapore Dollar",
    symbol: "$",
    one: "Singapore dollar",
    other: "Singapore dollars"
}, {
    id: "SKK",
    displayName: "Slovak Koruna",
    one: "Slovak koruna",
    other: "Slovak korunas"
}, {
    id: "SIT",
    displayName: "Slovenian Tolar",
    one: "Slovenian tolar",
    other: "Slovenian tolars"
}, {
    id: "SBD",
    displayName: "Solomon Islands Dollar",
    symbol: "$",
    one: "Solomon Islands dollar",
    other: "Solomon Islands dollars"
}, {
    id: "SOS",
    displayName: "Somali Shilling",
    one: "Somali shilling",
    other: "Somali shillings"
}, {
    id: "ZAR",
    displayName: "South African Rand",
    symbol: "R",
    one: "South African rand",
    other: "South African rand"
}, {
    id: "ZAL",
    displayName: "South African Rand (financial)",
    one: "South African rand (financial)",
    other: "South African rands (financial)"
}, {
    id: "KRH",
    displayName: "South Korean Hwan (1953–1962)",
    one: "South Korean hwan (1953–1962)",
    other: "South Korean hwan (1953–1962)"
}, {
    id: "KRW",
    displayName: "South Korean Won",
    symbol: "₩",
    one: "South Korean won",
    other: "South Korean won"
}, {
    id: "KRO",
    displayName: "South Korean Won (1945–1953)",
    one: "South Korean won (1945–1953)",
    other: "South Korean won (1945–1953)"
}, {
    id: "SSP",
    displayName: "South Sudanese Pound",
    symbol: "£",
    one: "South Sudanese pound",
    other: "South Sudanese pounds"
}, {
    id: "SUR",
    displayName: "Soviet Rouble",
    one: "Soviet rouble",
    other: "Soviet roubles"
}, {
    id: "ESP",
    displayName: "Spanish Peseta",
    symbol: "₧",
    one: "Spanish peseta",
    other: "Spanish pesetas"
}, {
    id: "ESA",
    displayName: "Spanish Peseta (A account)",
    one: "Spanish peseta (A account)",
    other: "Spanish pesetas (A account)"
}, {
    id: "ESB",
    displayName: "Spanish Peseta (convertible account)",
    one: "Spanish peseta (convertible account)",
    other: "Spanish pesetas (convertible account)"
}, {
    id: "XDR",
    displayName: "Special Drawing Rights",
    one: "special drawing rights",
    other: "special drawing rights"
}, {
    id: "LKR",
    displayName: "Sri Lankan Rupee",
    symbol: "Rs",
    one: "Sri Lankan rupee",
    other: "Sri Lankan rupees"
}, {
    id: "SHP",
    displayName: "St. Helena Pound",
    symbol: "£",
    one: "St. Helena pound",
    other: "St. Helena pounds"
}, {
    id: "XSU",
    displayName: "Sucre",
    one: "Sucre",
    other: "Sucres"
}, {
    id: "SDD",
    displayName: "Sudanese Dinar (1992–2007)",
    one: "Sudanese dinar (1992–2007)",
    other: "Sudanese dinars (1992–2007)"
}, {
    id: "SDG",
    displayName: "Sudanese Pound",
    one: "Sudanese pound",
    other: "Sudanese pounds"
}, {
    id: "SDP",
    displayName: "Sudanese Pound (1957–1998)",
    one: "Sudanese pound (1957–1998)",
    other: "Sudanese pounds (1957–1998)"
}, {
    id: "SRD",
    displayName: "Surinamese Dollar",
    symbol: "$",
    one: "Surinamese dollar",
    other: "Surinamese dollars"
}, {
    id: "SRG",
    displayName: "Surinamese Guilder",
    one: "Surinamese guilder",
    other: "Surinamese guilders"
}, {
    id: "SZL",
    displayName: "Swazi Lilangeni",
    one: "Swazi lilangeni",
    other: "Swazi emalangeni"
}, {
    id: "SEK",
    displayName: "Swedish Krona",
    symbol: "kr",
    one: "Swedish krona",
    other: "Swedish kronor"
}, {
    id: "CHF",
    displayName: "Swiss Franc",
    one: "Swiss franc",
    other: "Swiss francs"
}, {
    id: "SYP",
    displayName: "Syrian Pound",
    symbol: "£",
    one: "Syrian pound",
    other: "Syrian pounds"
}, {
    id: "STD",
    displayName: "São Tomé & Príncipe Dobra",
    symbol: "Db",
    one: "São Tomé & Príncipe dobra",
    other: "São Tomé & Príncipe dobras"
}, {
    id: "TJR",
    displayName: "Tajikistani Ruble",
    one: "Tajikistani ruble",
    other: "Tajikistani rubles"
}, {
    id: "TJS",
    displayName: "Tajikistani Somoni",
    one: "Tajikistani somoni",
    other: "Tajikistani somonis"
}, {
    id: "TZS",
    displayName: "Tanzanian Shilling",
    one: "Tanzanian shilling",
    other: "Tanzanian shillings"
}, {
    id: "XTS",
    displayName: "Testing Currency Code",
    one: "Testing Currency unit",
    other: "Testing Currency units"
}, {
    id: "THB",
    displayName: "Thai Baht",
    symbol: "฿",
    one: "Thai baht",
    other: "Thai baht"
}, {
    id: "TPE",
    displayName: "Timorese Escudo",
    one: "Timorese escudo",
    other: "Timorese escudos"
}, {
    id: "TOP",
    displayName: "Tongan Paʻanga",
    symbol: "T$",
    one: "Tongan paʻanga",
    other: "Tongan paʻanga"
}, {
    id: "TTD",
    displayName: "Trinidad & Tobago Dollar",
    symbol: "$",
    one: "Trinidad & Tobago dollar",
    other: "Trinidad & Tobago dollars"
}, {
    id: "TND",
    displayName: "Tunisian Dinar",
    one: "Tunisian dinar",
    other: "Tunisian dinars"
}, {
    id: "TRY",
    displayName: "Turkish Lira",
    symbol: "₺",
    one: "Turkish lira",
    other: "Turkish Lira"
}, {
    id: "TRL",
    displayName: "Turkish Lira (1922–2005)",
    one: "Turkish lira (1922–2005)",
    other: "Turkish Lira (1922–2005)"
}, {
    id: "TMT",
    displayName: "Turkmenistani Manat",
    one: "Turkmenistani manat",
    other: "Turkmenistani manat"
}, {
    id: "TMM",
    displayName: "Turkmenistani Manat (1993–2009)",
    one: "Turkmenistani manat (1993–2009)",
    other: "Turkmenistani manat (1993–2009)"
}, {
    id: "USD",
    displayName: "US Dollar",
    symbol: "$",
    one: "US dollar",
    other: "US dollars"
}, {
    id: "USN",
    displayName: "US Dollar (Next day)",
    one: "US dollar (next day)",
    other: "US dollars (next day)"
}, {
    id: "USS",
    displayName: "US Dollar (Same day)",
    one: "US dollar (same day)",
    other: "US dollars (same day)"
}, {
    id: "UGX",
    displayName: "Ugandan Shilling",
    one: "Ugandan shilling",
    other: "Ugandan shillings"
}, {
    id: "UGS",
    displayName: "Ugandan Shilling (1966–1987)",
    one: "Ugandan shilling (1966–1987)",
    other: "Ugandan shillings (1966–1987)"
}, {
    id: "UAH",
    displayName: "Ukrainian Hryvnia",
    symbol: "₴",
    one: "Ukrainian hryvnia",
    other: "Ukrainian hryvnias"
}, {
    id: "UAK",
    displayName: "Ukrainian Karbovanets",
    one: "Ukrainian karbovanets",
    other: "Ukrainian karbovantsiv"
}, {
    id: "AED",
    displayName: "United Arab Emirates Dirham",
    one: "UAE dirham",
    other: "UAE dirhams"
}, {
    id: "XXX",
    displayName: "Unknown Currency",
    one: "(unknown unit of currency)",
    other: "(unknown currency)"
}, {
    id: "UYU",
    displayName: "Uruguayan Peso",
    symbol: "$",
    one: "Uruguayan peso",
    other: "Uruguayan pesos"
}, {
    id: "UYP",
    displayName: "Uruguayan Peso (1975–1993)",
    one: "Uruguayan peso (1975–1993)",
    other: "Uruguayan pesos (1975–1993)"
}, {
    id: "UYI",
    displayName: "Uruguayan Peso (Indexed Units)",
    one: "Uruguayan peso (indexed units)",
    other: "Uruguayan pesos (indexed units)"
}, {
    id: "UZS",
    displayName: "Uzbekistani Som",
    one: "Uzbekistani som",
    other: "Uzbekistani som"
}, {
    id: "VUV",
    displayName: "Vanuatu Vatu",
    one: "Vanuatu vatu",
    other: "Vanuatu vatus"
}, {
    id: "VEF",
    displayName: "Venezuelan Bolívar",
    symbol: "Bs",
    one: "Venezuelan bolívar",
    other: "Venezuelan bolívars"
}, {
    id: "VEB",
    displayName: "Venezuelan Bolívar (1871–2008)",
    one: "Venezuelan bolívar (1871–2008)",
    other: "Venezuelan bolívars (1871–2008)"
}, {
    id: "VND",
    displayName: "Vietnamese Dong",
    symbol: "₫",
    one: "Vietnamese dong",
    other: "Vietnamese dong"
}, {
    id: "VNN",
    displayName: "Vietnamese Dong (1978–1985)",
    one: "Vietnamese dong (1978–1985)",
    other: "Vietnamese dong (1978–1985)"
}, {
    id: "CHE",
    displayName: "WIR Euro",
    one: "WIR euro",
    other: "WIR euros"
}, {
    id: "CHW",
    displayName: "WIR Franc",
    one: "WIR franc",
    other: "WIR francs"
}, {
    id: "XOF",
    displayName: "West African CFA Franc",
    symbol: "CFA",
    one: "West African CFA franc",
    other: "West African CFA francs"
}, {
    id: "YDD",
    displayName: "Yemeni Dinar",
    one: "Yemeni dinar",
    other: "Yemeni dinars"
}, {
    id: "YER",
    displayName: "Yemeni Rial",
    one: "Yemeni rial",
    other: "Yemeni rials"
}, {
    id: "YUN",
    displayName: "Yugoslavian Convertible Dinar (1990–1992)",
    one: "Yugoslavian convertible dinar (1990–1992)",
    other: "Yugoslavian convertible dinars (1990–1992)"
}, {
    id: "YUD",
    displayName: "Yugoslavian Hard Dinar (1966–1990)",
    one: "Yugoslavian hard dinar (1966–1990)",
    other: "Yugoslavian hard dinars (1966–1990)"
}, {
    id: "YUM",
    displayName: "Yugoslavian New Dinar (1994–2002)",
    one: "Yugoslavian new dinar (1994–2002)",
    other: "Yugoslavian new dinars (1994–2002)"
}, {
    id: "YUR",
    displayName: "Yugoslavian Reformed Dinar (1992–1993)",
    one: "Yugoslavian reformed dinar (1992–1993)",
    other: "Yugoslavian reformed dinars (1992–1993)"
}, {
    id: "ZRN",
    displayName: "Zairean New Zaire (1993–1998)",
    one: "Zairean new zaire (1993–1998)",
    other: "Zairean new zaires (1993–1998)"
}, {
    id: "ZRZ",
    displayName: "Zairean Zaire (1971–1993)",
    one: "Zairean zaire (1971–1993)",
    other: "Zairean zaires (1971–1993)"
}, {
    id: "ZMW",
    displayName: "Zambian Kwacha",
    symbol: "ZK",
    one: "Zambian kwacha",
    other: "Zambian kwachas"
}, {
    id: "ZMK",
    displayName: "Zambian Kwacha (1968–2012)",
    one: "Zambian kwacha (1968–2012)",
    other: "Zambian kwachas (1968–2012)"
}, {
    id: "ZWD",
    displayName: "Zimbabwean Dollar (1980–2008)",
    one: "Zimbabwean dollar (1980–2008)",
    other: "Zimbabwean dollars (1980–2008)"
}, {
    id: "ZWR",
    displayName: "Zimbabwean Dollar (2008)",
    one: "Zimbabwean dollar (2008)",
    other: "Zimbabwean dollars (2008)"
}, {
    id: "ZWL",
    displayName: "Zimbabwean Dollar (2009)",
    one: "Zimbabwean dollar (2009)",
    other: "Zimbabwean dollars (2009)"
} ];

module.exports = inter;