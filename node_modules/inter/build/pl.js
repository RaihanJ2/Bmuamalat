function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _xgn1 = [ "K1", "K2", "K3", "K4" ], _xgn2 = {
    all: {
        leap: "{0}bis"
    }
}, _xgn3 = {
    a: "h a – h a",
    h: "h–h a"
}, _xgn4 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _xgn5 = [ "N", "P", "W", "Ś", "C", "P", "S" ], _xgn6 = {
    displayName: "dzień tygodnia"
}, _xgn7 = {
    displayName: "strefa czasowa"
}, _xgn8 = {
    d: "d–d MMM",
    M: "d MMM – d MMM"
}, _xgn9 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _xgn10 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _xgn11 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _xgn12 = {
    d: "dd.MM–dd.MM",
    M: "dd.MM–dd.MM"
}, _xgn13 = [ "1 kw.", "2 kw.", "3 kw.", "4 kw." ], _xgn14 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _xgn15 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _xgn16 = {
    M: "MM.y – MM.y",
    y: "MM.y – MM.y"
}, _xgn17 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _xgn18 = {
    M: "MM.y – MM.y G",
    y: "MM.y – MM.y G"
}, _xgn19 = {
    M: "LLL–LLL y G",
    y: "LLL y – LLL y G"
}, _xgn20 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _xgn21 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _xgn22 = {
    M: "LLLL–LLLL y G",
    y: "LLLL y – LLLL y G"
}, _xgn23 = [ "nie", "pon", "wto", "śro", "czw", "pią", "sob" ], _xgn24 = {
    displayName: "rano / po południu / wieczorem"
}, _xgn25 = {
    one: "{0}°",
    few: "{0}°",
    many: "{0}°",
    other: "{0}°"
}, _xgn26 = {
    one: "{0}″",
    few: "{0}″",
    many: "{0}″",
    other: "{0}″"
}, _xgn27 = {
    d: "E, dd.MM – E, dd.MM",
    M: "E, dd.MM – E, dd.MM"
}, _xgn28 = {
    d: "E, d MMM – E, d MMM",
    M: "E, d MMM – E, d MMM"
}, _xgn29 = [ "niedz.", "pon.", "wt.", "śr.", "czw.", "pt.", "sob." ], _xgn30 = [ "s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g" ], _xgn31 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _xgn32 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _xgn33 = {
    id: "001",
    displayName: "świat",
    hasTimeZones: false
}, _xgn34 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _xgn35 = {
    one: "{0} G",
    few: "{0} G",
    many: "{0} G",
    other: "{0} G"
}, _xgn36 = {
    one: "{0} s",
    few: "{0} s",
    many: "{0} s",
    other: "{0} s"
}, _xgn37 = {
    one: "{0} m",
    few: "{0} m",
    many: "{0} m",
    other: "{0} m"
}, _xgn38 = {
    one: "{0} g",
    few: "{0} g",
    many: "{0} g",
    other: "{0} g"
}, _xgn39 = {
    one: "{0} W",
    few: "{0} W",
    many: "{0} W",
    other: "{0} W"
}, _xgn40 = {
    one: "{0}°F",
    few: "{0}°F",
    many: "{0}°F",
    other: "{0}°F"
}, _xgn41 = {
    one: "{0} l",
    few: "{0} l",
    many: "{0} l",
    other: "{0} l"
}, _xgn42 = {
    one: "0 mln",
    few: "0 mln",
    many: "0 mln",
    other: "0 mln"
}, _xgn43 = {
    one: "0 mld",
    few: "0 mld",
    many: "0 mld",
    other: "0 mld"
}, _xgn44 = {
    one: "0 bln",
    few: "0 bln",
    many: "0 bln",
    other: "0 bln"
}, _xgn45 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _xgn46 = {
    id: "AQ",
    displayName: "Antarktyka",
    hasTimeZones: true
}, _xgn47 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _xgn48 = [ "I kwartał", "II kwartał", "III kwartał", "IV kwartał" ], _xgn49 = {
    id: "CP",
    displayName: "Clipperton",
    hasTimeZones: false
}, _xgn50 = {
    d: "dd–dd.MM.y",
    M: "dd.MM–dd.MM.y",
    y: "dd.MM.y–dd.MM.y"
}, _xgn51 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _xgn52 = {
    one: "{0} ha",
    few: "{0} ha",
    many: "{0} ha",
    other: "{0} ha"
}, _xgn53 = {
    one: "{0} m²",
    few: "{0} m²",
    many: "{0} m²",
    other: "{0} m²"
}, _xgn54 = {
    one: "{0} ac",
    few: "{0} ac",
    many: "{0} ac",
    other: "{0} ac"
}, _xgn55 = {
    one: "{0} kt",
    few: "{0} kt",
    many: "{0} kt",
    other: "{0} kt"
}, _xgn56 = {
    one: "{0} w.",
    few: "{0} w.",
    many: "{0} w.",
    other: "{0} w."
}, _xgn57 = {
    one: "{0} ms",
    few: "{0} ms",
    many: "{0} ms",
    other: "{0} ms"
}, _xgn58 = {
    one: "{0} km",
    few: "{0} km",
    many: "{0} km",
    other: "{0} km"
}, _xgn59 = {
    one: "{0} cm",
    few: "{0} cm",
    many: "{0} cm",
    other: "{0} cm"
}, _xgn60 = {
    one: "{0} mm",
    few: "{0} mm",
    many: "{0} mm",
    other: "{0} mm"
}, _xgn61 = {
    one: "{0} pm",
    few: "{0} pm",
    many: "{0} pm",
    other: "{0} pm"
}, _xgn62 = {
    one: "{0} yd",
    few: "{0} yd",
    many: "{0} yd",
    other: "{0} yd"
}, _xgn63 = {
    one: "{0} ft",
    few: "{0} ft",
    many: "{0} ft",
    other: "{0} ft"
}, _xgn64 = {
    one: "{0} ly",
    few: "{0} ly",
    many: "{0} ly",
    other: "{0} ly"
}, _xgn65 = {
    one: "{0} kg",
    few: "{0} kg",
    many: "{0} kg",
    other: "{0} kg"
}, _xgn66 = {
    one: "{0} lb",
    few: "{0} lb",
    many: "{0} lb",
    other: "{0} lb"
}, _xgn67 = {
    one: "{0} oz",
    few: "{0} oz",
    many: "{0} oz",
    other: "{0} oz"
}, _xgn68 = {
    one: "{0} kW",
    few: "{0} kW",
    many: "{0} kW",
    other: "{0} kW"
}, _xgn69 = {
    one: "{0} KM",
    few: "{0} KM",
    many: "{0} KM",
    other: "{0} KM"
}, _xgn70 = {
    one: "00 mln",
    few: "00 mln",
    many: "00 mln",
    other: "00 mln"
}, _xgn71 = {
    one: "00 mld",
    few: "00 mld",
    many: "00 mld",
    other: "00 mld"
}, _xgn72 = {
    one: "00 bln",
    few: "00 bln",
    many: "00 bln",
    other: "00 bln"
}, _xgn73 = {
    id: "BV",
    displayName: "Wyspa Bouveta",
    hasTimeZones: false
}, _xgn74 = {
    id: "CC",
    displayName: "Wyspy Kokosowe",
    hasTimeZones: true
}, _xgn75 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _xgn76 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _xgn77 = {
    id: "EA",
    displayName: "Ceuta i Melilla",
    hasTimeZones: false
}, _xgn78 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _xgn79 = {
    "0": "w tym roku",
    "1": "w przyszłym roku",
    "-1": "w zeszłym roku"
}, _xgn80 = {
    "0": "w tę środę",
    "1": "w przyszłą środę",
    "-1": "w zeszłą środę"
}, _xgn81 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _xgn82 = {
    one: "{0} min",
    few: "{0} min",
    many: "{0} min",
    other: "{0} min"
}, _xgn83 = {
    one: "{0} km²",
    few: "{0} km²",
    many: "{0} km²",
    other: "{0} km²"
}, _xgn84 = {
    one: "{0} mi²",
    few: "{0} mi²",
    many: "{0} mi²",
    other: "{0} mi²"
}, _xgn85 = {
    one: "{0} ft²",
    few: "{0} ft²",
    many: "{0} ft²",
    other: "{0} ft²"
}, _xgn86 = {
    one: "{0} kal",
    few: "{0} kal",
    many: "{0} kal",
    other: "{0} kal"
}, _xgn87 = {
    one: "{0} hPa",
    few: "{0} hPa",
    many: "{0} hPa",
    other: "{0} hPa"
}, _xgn88 = {
    one: "{0} m/s",
    few: "{0} m/s",
    many: "{0} m/s",
    other: "{0} m/s"
}, _xgn89 = {
    one: "{0} km³",
    few: "{0} km³",
    many: "{0} km³",
    other: "{0} km³"
}, _xgn90 = {
    one: "{0} mi³",
    few: "{0} mi³",
    many: "{0} mi³",
    other: "{0} mi³"
}, _xgn91 = {
    one: "000 mln",
    few: "000 mln",
    many: "000 mln",
    other: "000 mln"
}, _xgn92 = {
    one: "000 mld",
    few: "000 mld",
    many: "000 mld",
    other: "000 mld"
}, _xgn93 = {
    one: "000 bln",
    few: "000 bln",
    many: "000 bln",
    other: "000 bln"
}, _xgn94 = {
    one: "0 mln ¤",
    few: "0 mln ¤",
    many: "0 mln ¤",
    other: "0 mln ¤"
}, _xgn95 = {
    one: "0 mld ¤",
    few: "0 mld ¤",
    many: "0 mld ¤",
    other: "0 mld ¤"
}, _xgn96 = {
    one: "0 bln ¤",
    few: "0 bln ¤",
    many: "0 bln ¤",
    other: "0 bln ¤"
}, _xgn97 = {
    id: "IC",
    displayName: "Wyspy Kanaryjskie",
    hasTimeZones: false
}, _xgn98 = {
    id: "CY",
    displayName: "Cypr",
    regionId: "145",
    hasTimeZones: true
}, _xgn99 = {
    id: "TD",
    displayName: "Czad",
    regionId: "017",
    hasTimeZones: true
}, _xgn100 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _xgn101 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _xgn102 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _xgn103 = {
    id: "CU",
    displayName: "Kuba",
    regionId: "029",
    hasTimeZones: true
}, _xgn104 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _xgn105 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _xgn106 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _xgn107 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _xgn108 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _xgn109 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _xgn110 = {
    one: "{0} rok",
    few: "{0} lata",
    many: "{0} lat",
    other: "{0} roku"
}, _xgn111 = {
    "0": "w tę sobotę",
    "1": "w przyszłą sobotę",
    "-1": "w zeszłą sobotę"
}, _xgn112 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _xgn113 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _xgn114 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _xgn115 = {
    id: "CN",
    displayName: "Chiny",
    regionId: "030",
    hasTimeZones: true
}, _xgn116 = {
    id: "DK",
    displayName: "Dania",
    regionId: "154",
    hasTimeZones: true
}, _xgn117 = {
    id: "EG",
    displayName: "Egipt",
    regionId: "015",
    hasTimeZones: true
}, _xgn118 = {
    id: "FJ",
    displayName: "Fidżi",
    regionId: "054",
    hasTimeZones: true
}, _xgn119 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _xgn120 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _xgn121 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _xgn122 = {
    id: "IN",
    displayName: "Indie",
    regionId: "034",
    hasTimeZones: true
}, _xgn123 = {
    id: "YE",
    displayName: "Jemen",
    regionId: "145",
    hasTimeZones: true
}, _xgn124 = {
    id: "QA",
    displayName: "Katar",
    regionId: "145",
    hasTimeZones: true
}, _xgn125 = {
    id: "KE",
    displayName: "Kenia",
    regionId: "014",
    hasTimeZones: true
}, _xgn126 = {
    id: "CG",
    displayName: "Kongo",
    regionId: "017",
    hasTimeZones: true
}, _xgn127 = {
    id: "LB",
    displayName: "Liban",
    regionId: "145",
    hasTimeZones: true
}, _xgn128 = {
    id: "LY",
    displayName: "Libia",
    regionId: "015",
    hasTimeZones: true
}, _xgn129 = {
    id: "LT",
    displayName: "Litwa",
    regionId: "154",
    hasTimeZones: true
}, _xgn130 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _xgn131 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _xgn132 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _xgn133 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _xgn134 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _xgn135 = {
    id: "RU",
    displayName: "Rosja",
    regionId: "151",
    hasTimeZones: true
}, _xgn136 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _xgn137 = {
    id: "SZ",
    displayName: "Suazi",
    regionId: "018",
    hasTimeZones: true
}, _xgn138 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _xgn139 = {
    id: "SY",
    displayName: "Syria",
    regionId: "145",
    hasTimeZones: true
}, _xgn140 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _xgn141 = {
    id: "HU",
    displayName: "Węgry",
    regionId: "151",
    hasTimeZones: true
}, _xgn142 = {
    id: "LV",
    displayName: "Łotwa",
    regionId: "154",
    hasTimeZones: true
}, _xgn143 = {
    one: "{0} dzień",
    few: "{0} dni",
    many: "{0} dni",
    other: "{0} dnia"
}, _xgn144 = {
    one: "{0} mila",
    few: "{0} mile",
    many: "{0} mil",
    other: "{0} mili"
}, _xgn145 = {
    d: "d–d MMM y G",
    M: "d MMM – d MMM y G",
    y: "d MMM y – d MMM y G"
}, _xgn146 = {
    "0": "w ten wtorek",
    "1": "w przyszły wtorek",
    "-1": "w zeszły wtorek"
}, _xgn147 = {
    "0": "w ten piątek",
    "1": "w przyszły piątek",
    "-1": "w zeszły piątek"
}, _xgn148 = {
    id: "AD",
    displayName: "Andora",
    regionId: "039",
    hasTimeZones: true
}, _xgn149 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _xgn150 = {
    id: "BS",
    displayName: "Bahamy",
    regionId: "029",
    hasTimeZones: true
}, _xgn151 = {
    id: "BE",
    displayName: "Belgia",
    regionId: "155",
    hasTimeZones: true
}, _xgn152 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _xgn153 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _xgn154 = {
    id: "CZ",
    displayName: "Czechy",
    regionId: "151",
    hasTimeZones: true
}, _xgn155 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _xgn156 = {
    id: "GR",
    displayName: "Grecja",
    regionId: "039",
    hasTimeZones: true
}, _xgn157 = {
    id: "GE",
    displayName: "Gruzja",
    regionId: "145",
    hasTimeZones: true
}, _xgn158 = {
    id: "GY",
    displayName: "Gujana",
    regionId: "005",
    hasTimeZones: true
}, _xgn159 = {
    id: "GN",
    displayName: "Gwinea",
    regionId: "011",
    hasTimeZones: true
}, _xgn160 = {
    id: "IL",
    displayName: "Izrael",
    regionId: "145",
    hasTimeZones: true
}, _xgn161 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _xgn162 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _xgn163 = {
    id: "KM",
    displayName: "Komory",
    regionId: "014",
    hasTimeZones: true
}, _xgn164 = {
    id: "KW",
    displayName: "Kuwejt",
    regionId: "145",
    hasTimeZones: true
}, _xgn165 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _xgn166 = {
    id: "MA",
    displayName: "Maroko",
    regionId: "015",
    hasTimeZones: true
}, _xgn167 = {
    id: "MX",
    displayName: "Meksyk",
    regionId: "013",
    hasTimeZones: true
}, _xgn168 = {
    id: "MC",
    displayName: "Monako",
    regionId: "155",
    hasTimeZones: true
}, _xgn169 = {
    id: "DE",
    displayName: "Niemcy",
    regionId: "155",
    hasTimeZones: true
}, _xgn170 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _xgn171 = {
    id: "PL",
    displayName: "Polska",
    regionId: "151",
    hasTimeZones: true
}, _xgn172 = {
    id: "RW",
    displayName: "Rwanda",
    regionId: "014",
    hasTimeZones: true
}, _xgn173 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _xgn174 = {
    id: "TW",
    displayName: "Tajwan",
    regionId: "030",
    hasTimeZones: true
}, _xgn175 = {
    id: "TR",
    displayName: "Turcja",
    regionId: "145",
    hasTimeZones: true
}, _xgn176 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _xgn177 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _xgn178 = {
    id: "IT",
    displayName: "Włochy",
    regionId: "039",
    hasTimeZones: true
}, _xgn179 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _xgn180 = {
    one: "{0} inHg",
    few: "{0} inHg",
    many: "{0} inHg",
    other: "{0} inHg"
}, _xgn181 = {
    one: "{0} mbar",
    few: "{0} mbar",
    many: "{0} mbar",
    other: "{0} mbar"
}, _xgn182 = {
    one: "{0} km/h",
    few: "{0} km/h",
    many: "{0} km/h",
    other: "{0} km/h"
}, _xgn183 = {
    one: "{0} mi/h",
    few: "{0} mi/h",
    many: "{0} mi/h",
    other: "{0} mi/h"
}, _xgn184 = {
    one: "0 tys'.'",
    few: "0 tys'.'",
    many: "0 tys'.'",
    other: "0 tys'.'"
}, _xgn185 = {
    one: "00 mln ¤",
    few: "00 mln ¤",
    many: "00 mln ¤",
    other: "00 mln ¤"
}, _xgn186 = {
    one: "00 mld ¤",
    few: "00 mld ¤",
    many: "00 mld ¤",
    other: "00 mld ¤"
}, _xgn187 = {
    one: "00 bln ¤",
    few: "00 bln ¤",
    many: "00 bln ¤",
    other: "00 bln ¤"
}, _xgn188 = {
    one: "+{0} kw.",
    few: "+{0} kw.",
    many: "+{0} kw.",
    other: "+{0} kw."
}, _xgn189 = {
    one: "–{0} kw.",
    few: "–{0} kw.",
    many: "–{0} kw.",
    other: "–{0} kw."
}, _xgn190 = {
    one: "za {0} s",
    few: "za {0} s",
    many: "za {0} s",
    other: "za {0} s"
}, _xgn191 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _xgn192 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _xgn193 = {
    id: "AT",
    displayName: "Austria",
    regionId: "155",
    hasTimeZones: true
}, _xgn194 = {
    id: "BH",
    displayName: "Bahrajn",
    regionId: "145",
    hasTimeZones: true
}, _xgn195 = {
    id: "BM",
    displayName: "Bermudy",
    regionId: "021",
    hasTimeZones: true
}, _xgn196 = {
    id: "BO",
    displayName: "Boliwia",
    regionId: "005",
    hasTimeZones: true
}, _xgn197 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _xgn198 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _xgn199 = {
    id: "DJ",
    displayName: "Dżibuti",
    regionId: "014",
    hasTimeZones: true
}, _xgn200 = {
    id: "EC",
    displayName: "Ekwador",
    regionId: "005",
    hasTimeZones: true
}, _xgn201 = {
    id: "ER",
    displayName: "Erytrea",
    regionId: "014",
    hasTimeZones: true
}, _xgn202 = {
    id: "EE",
    displayName: "Estonia",
    regionId: "154",
    hasTimeZones: true
}, _xgn203 = {
    id: "ET",
    displayName: "Etiopia",
    regionId: "014",
    hasTimeZones: true
}, _xgn204 = {
    id: "FR",
    displayName: "Francja",
    regionId: "155",
    hasTimeZones: true
}, _xgn205 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _xgn206 = {
    id: "JM",
    displayName: "Jamajka",
    regionId: "029",
    hasTimeZones: true
}, _xgn207 = {
    id: "JP",
    displayName: "Japonia",
    regionId: "030",
    hasTimeZones: true
}, _xgn208 = {
    id: "KY",
    displayName: "Kajmany",
    regionId: "029",
    hasTimeZones: true
}, _xgn209 = {
    id: "CM",
    displayName: "Kamerun",
    regionId: "017",
    hasTimeZones: true
}, _xgn210 = {
    id: "XK",
    displayName: "Kosowo",
    regionId: "039",
    hasTimeZones: false
}, _xgn211 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _xgn212 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _xgn213 = {
    id: "YT",
    displayName: "Majotta",
    regionId: "014",
    hasTimeZones: true
}, _xgn214 = {
    id: "MY",
    displayName: "Malezja",
    regionId: "035",
    hasTimeZones: true
}, _xgn215 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _xgn216 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _xgn217 = {
    id: "NF",
    displayName: "Norfolk",
    regionId: "053",
    hasTimeZones: true
}, _xgn218 = {
    id: "RE",
    displayName: "Reunion",
    regionId: "014",
    hasTimeZones: true
}, _xgn219 = {
    id: "RO",
    displayName: "Rumunia",
    regionId: "151",
    hasTimeZones: true
}, _xgn220 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _xgn221 = {
    id: "SC",
    displayName: "Seszele",
    regionId: "014",
    hasTimeZones: true
}, _xgn222 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _xgn223 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _xgn224 = {
    id: "SE",
    displayName: "Szwecja",
    regionId: "154",
    hasTimeZones: true
}, _xgn225 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _xgn226 = {
    id: "TN",
    displayName: "Tunezja",
    regionId: "015",
    hasTimeZones: true
}, _xgn227 = {
    id: "UA",
    displayName: "Ukraina",
    regionId: "151",
    hasTimeZones: true
}, _xgn228 = {
    id: "UY",
    displayName: "Urugwaj",
    regionId: "005",
    hasTimeZones: true
}, _xgn229 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _xgn230 = {
    id: "VA",
    displayName: "Watykan",
    regionId: "039",
    hasTimeZones: true
}, _xgn231 = {
    id: "VN",
    displayName: "Wietnam",
    regionId: "035",
    hasTimeZones: true
}, _xgn232 = {
    one: "{0} tydz.",
    few: "{0} tyg.",
    many: "{0} tyg.",
    other: "{0} tyg."
}, _xgn233 = {
    id: "DZ",
    displayName: "Algieria",
    regionId: "015",
    hasTimeZones: true
}, _xgn234 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _xgn235 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _xgn236 = {
    id: "BY",
    displayName: "Białoruś",
    regionId: "151",
    hasTimeZones: true
}, _xgn237 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _xgn238 = {
    id: "BR",
    displayName: "Brazylia",
    regionId: "005",
    hasTimeZones: true
}, _xgn239 = {
    id: "BG",
    displayName: "Bułgaria",
    regionId: "151",
    hasTimeZones: true
}, _xgn240 = {
    id: "DM",
    displayName: "Dominika",
    regionId: "029",
    hasTimeZones: true
}, _xgn241 = {
    id: "PH",
    displayName: "Filipiny",
    regionId: "035",
    hasTimeZones: true
}, _xgn242 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _xgn243 = {
    id: "NL",
    displayName: "Holandia",
    regionId: "155",
    hasTimeZones: true
}, _xgn244 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _xgn245 = {
    id: "IE",
    displayName: "Irlandia",
    regionId: "154",
    hasTimeZones: true
}, _xgn246 = {
    id: "IS",
    displayName: "Islandia",
    regionId: "154",
    hasTimeZones: true
}, _xgn247 = {
    id: "JO",
    displayName: "Jordania",
    regionId: "145",
    hasTimeZones: true
}, _xgn248 = {
    id: "KH",
    displayName: "Kambodża",
    regionId: "035",
    hasTimeZones: true
}, _xgn249 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _xgn250 = {
    id: "CO",
    displayName: "Kolumbia",
    regionId: "005",
    hasTimeZones: true
}, _xgn251 = {
    id: "MV",
    displayName: "Malediwy",
    regionId: "034",
    hasTimeZones: true
}, _xgn252 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _xgn253 = {
    id: "MZ",
    displayName: "Mozambik",
    regionId: "014",
    hasTimeZones: true
}, _xgn254 = {
    id: "MD",
    displayName: "Mołdawia",
    regionId: "151",
    hasTimeZones: true
}, _xgn255 = {
    id: "NO",
    displayName: "Norwegia",
    regionId: "154",
    hasTimeZones: true
}, _xgn256 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _xgn257 = {
    id: "PY",
    displayName: "Paragwaj",
    regionId: "005",
    hasTimeZones: true
}, _xgn258 = {
    id: "PN",
    displayName: "Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _xgn259 = {
    id: "SV",
    displayName: "Salwador",
    regionId: "013",
    hasTimeZones: true
}, _xgn260 = {
    id: "SG",
    displayName: "Singapur",
    regionId: "035",
    hasTimeZones: true
}, _xgn261 = {
    id: "SK",
    displayName: "Słowacja",
    regionId: "151",
    hasTimeZones: true
}, _xgn262 = {
    id: "SI",
    displayName: "Słowenia",
    regionId: "039",
    hasTimeZones: true
}, _xgn263 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _xgn264 = {
    id: "CX",
    displayName: "Wyspa Bożego Narodzenia",
    hasTimeZones: true
}, _xgn265 = {
    id: "AC",
    displayName: "Wyspa Wniebowstąpienia",
    hasTimeZones: false
}, _xgn266 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _xgn267 = {
    "2": "{0} i {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0} i {1}"
}, _xgn268 = {
    id: "AR",
    displayName: "Argentyna",
    regionId: "005",
    hasTimeZones: true
}, _xgn269 = {
    id: "AU",
    displayName: "Australia",
    regionId: "053",
    hasTimeZones: true
}, _xgn270 = {
    id: "HR",
    displayName: "Chorwacja",
    regionId: "039",
    hasTimeZones: true
}, _xgn271 = {
    id: "FK",
    displayName: "Falklandy",
    regionId: "005",
    hasTimeZones: true
}, _xgn272 = {
    id: "FI",
    displayName: "Finlandia",
    regionId: "154",
    hasTimeZones: true
}, _xgn273 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _xgn274 = {
    id: "GP",
    displayName: "Gwadelupa",
    regionId: "029",
    hasTimeZones: true
}, _xgn275 = {
    id: "GT",
    displayName: "Gwatemala",
    regionId: "013",
    hasTimeZones: true
}, _xgn276 = {
    id: "ES",
    displayName: "Hiszpania",
    regionId: "039",
    hasTimeZones: true
}, _xgn277 = {
    id: "ID",
    displayName: "Indonezja",
    regionId: "035",
    hasTimeZones: true
}, _xgn278 = {
    id: "KG",
    displayName: "Kirgistan",
    regionId: "143",
    hasTimeZones: true
}, _xgn279 = {
    id: "CR",
    displayName: "Kostaryka",
    regionId: "013",
    hasTimeZones: true
}, _xgn280 = {
    id: "MK",
    displayName: "Macedonia",
    regionId: "039",
    hasTimeZones: true
}, _xgn281 = {
    id: "MQ",
    displayName: "Martynika",
    regionId: "029",
    hasTimeZones: true
}, _xgn282 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _xgn283 = {
    id: "NI",
    displayName: "Nikaragua",
    regionId: "013",
    hasTimeZones: true
}, _xgn284 = {
    id: "PR",
    displayName: "Portoryko",
    regionId: "029",
    hasTimeZones: true
}, _xgn285 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _xgn286 = {
    id: "TH",
    displayName: "Tajlandia",
    regionId: "035",
    hasTimeZones: true
}, _xgn287 = {
    id: "VE",
    displayName: "Wenezuela",
    regionId: "005",
    hasTimeZones: true
}, _xgn288 = {
    id: "IM",
    displayName: "Wyspa Man",
    regionId: "154",
    hasTimeZones: true
}, _xgn289 = {
    id: "HM",
    displayName: "Wyspy Heard i McDonalda",
    hasTimeZones: false
}, _xgn290 = {
    one: "0 tysiąc",
    few: "0 tysiące",
    many: "0 tysięcy",
    other: "0 tysiąca"
}, _xgn291 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _xgn292 = {
    id: "AF",
    displayName: "Afganistan",
    regionId: "034",
    hasTimeZones: true
}, _xgn293 = {
    id: "BD",
    displayName: "Bangladesz",
    regionId: "034",
    hasTimeZones: true
}, _xgn294 = {
    id: "ME",
    displayName: "Czarnogóra",
    regionId: "039",
    hasTimeZones: true
}, _xgn295 = {
    id: "DO",
    displayName: "Dominikana",
    regionId: "029",
    hasTimeZones: true
}, _xgn296 = {
    id: "GL",
    displayName: "Grenlandia",
    regionId: "021",
    hasTimeZones: true
}, _xgn297 = {
    id: "KZ",
    displayName: "Kazachstan",
    regionId: "143",
    hasTimeZones: true
}, _xgn298 = {
    id: "LU",
    displayName: "Luksemburg",
    regionId: "155",
    hasTimeZones: true
}, _xgn299 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _xgn300 = {
    id: "MR",
    displayName: "Mauretania",
    regionId: "011",
    hasTimeZones: true
}, _xgn301 = {
    id: "FM",
    displayName: "Mikronezja",
    regionId: "057",
    hasTimeZones: true
}, _xgn302 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _xgn303 = {
    id: "PT",
    displayName: "Portugalia",
    regionId: "039",
    hasTimeZones: true
}, _xgn304 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _xgn305 = {
    id: "CH",
    displayName: "Szwajcaria",
    regionId: "155",
    hasTimeZones: true
}, _xgn306 = {
    id: "UZ",
    displayName: "Uzbekistan",
    regionId: "143",
    hasTimeZones: true
}, _xgn307 = {
    one: "{0} godz.",
    few: "{0} godz.",
    many: "{0} godz.",
    other: "{0} godz."
}, _xgn308 = {
    one: "0 milion",
    few: "0 miliony",
    many: "0 milionów",
    other: "0 miliona"
}, _xgn309 = {
    one: "0 bilion",
    few: "0 biliony",
    many: "0 bilionów",
    other: "0 biliona"
}, _xgn310 = {
    one: "00 tys'.'",
    few: "00 tys'.'",
    many: "00 tys'.'",
    other: "00 tys'.'"
}, _xgn311 = {
    one: "000 mln ¤",
    few: "000 mln ¤",
    many: "000 mln ¤",
    other: "000 mln ¤"
}, _xgn312 = {
    one: "000 mld ¤",
    few: "000 mld ¤",
    many: "000 mld ¤",
    other: "000 mld ¤"
}, _xgn313 = {
    one: "000 bln ¤",
    few: "000 bln ¤",
    many: "000 bln ¤",
    other: "000 bln ¤"
}, _xgn314 = {
    d: "dd–dd.MM.y GGGGG",
    M: "dd.MM–dd.MM.y GGGGG",
    y: "dd.MM.y–dd.MM.y G"
}, _xgn315 = {
    one: "za {0} g.",
    few: "za {0} g.",
    many: "za {0} g.",
    other: "za {0} g."
}, _xgn316 = {
    id: "AZ",
    displayName: "Azerbejdżan",
    regionId: "145",
    hasTimeZones: true
}, _xgn317 = {
    id: "LC",
    displayName: "Saint Lucia",
    regionId: "029",
    hasTimeZones: true
}, _xgn318 = {
    id: "TJ",
    displayName: "Tadżykistan",
    regionId: "143",
    hasTimeZones: true
}, _xgn319 = {
    id: "CK",
    displayName: "Wyspy Cooka",
    regionId: "061",
    hasTimeZones: true
}, _xgn320 = {
    id: "FO",
    displayName: "Wyspy Owcze",
    regionId: "154",
    hasTimeZones: true
}, _xgn321 = {
    "0": "w ten czwartek",
    "1": "w przyszły czwartek",
    "-1": "w zeszły czwartek"
}, _xgn322 = {
    id: "142",
    displayName: "Azja",
    hasTimeZones: false,
    parentRegionId: "001"
}, _xgn323 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _xgn324 = {
    id: "MF",
    displayName: "Saint-Martin",
    regionId: "029",
    hasTimeZones: true
}, _xgn325 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _xgn326 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _xgn327 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _xgn328 = {
    relative: _xgn80
}, _xgn329 = {
    id: "CI",
    displayName: "Côte d’Ivoire",
    regionId: "011",
    hasTimeZones: true
}, _xgn330 = {
    id: "GW",
    displayName: "Gwinea Bissau",
    regionId: "011",
    hasTimeZones: true
}, _xgn331 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _xgn332 = {
    id: "NZ",
    displayName: "Nowa Zelandia",
    regionId: "053",
    hasTimeZones: true
}, _xgn333 = {
    one: "{0} minuta",
    few: "{0} minuty",
    many: "{0} minut",
    other: "{0} minuty"
}, _xgn334 = {
    one: "00 tysiąc",
    few: "00 tysiące",
    many: "00 tysięcy",
    other: "00 tysiąca"
}, _xgn335 = {
    "0": "w tym kwartale",
    "1": "w przyszłym kwartale",
    "-1": "w zeszłym kwartale"
}, _xgn336 = {
    "0": "w tym miesiącu",
    "1": "w przyszłym miesiącu",
    "-1": "w zeszłym miesiącu"
}, _xgn337 = {
    "0": "w tym tygodniu",
    "1": "w przyszłym tygodniu",
    "-1": "w zeszłym tygodniu"
}, _xgn338 = {
    "0": "dzisiaj",
    "1": "jutro",
    "2": "pojutrze",
    "-2": "przedwczoraj",
    "-1": "wczoraj"
}, _xgn339 = {
    "0": "w tę niedzielę",
    "1": "w przyszłą niedzielę",
    "-1": "w zeszłą niedzielę"
}, _xgn340 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _xgn341 = {
    id: "002",
    displayName: "Afryka",
    hasTimeZones: false,
    parentRegionId: "001"
}, _xgn342 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _xgn343 = {
    id: "KP",
    displayName: "Korea Północna",
    regionId: "030",
    hasTimeZones: true
}, _xgn344 = {
    id: "MM",
    displayName: "Mjanma (Birma)",
    regionId: "035",
    hasTimeZones: true
}, _xgn345 = {
    id: "NC",
    displayName: "Nowa Kaledonia",
    regionId: "054",
    hasTimeZones: true
}, _xgn346 = {
    id: "TL",
    displayName: "Timor Wschodni",
    regionId: "035",
    hasTimeZones: true
}, _xgn347 = {
    id: "TC",
    displayName: "Turks i Caicos",
    regionId: "029",
    hasTimeZones: true
}, _xgn348 = {
    id: "SB",
    displayName: "Wyspy Salomona",
    regionId: "054",
    hasTimeZones: true
}, _xgn349 = {
    one: "{0} karat",
    few: "{0} karaty",
    many: "{0} karatów",
    other: "{0} karata"
}, _xgn350 = {
    one: "00 milion",
    few: "00 miliony",
    many: "00 milionów",
    other: "00 miliona"
}, _xgn351 = {
    one: "0 miliard",
    few: "0 miliardy",
    many: "0 miliardów",
    other: "0 miliarda"
}, _xgn352 = {
    one: "00 bilion",
    few: "00 biliony",
    many: "00 bilionów",
    other: "00 biliona"
}, _xgn353 = {
    one: "000 tys'.'",
    few: "000 tys'.'",
    many: "000 tys'.'",
    other: "000 tys'.'"
}, _xgn354 = {
    one: "0 tys'.' ¤",
    few: "0 tys'.' ¤",
    many: "0 tys'.' ¤",
    other: "0 tys'.' ¤"
}, _xgn355 = {
    one: "za {0} kw.",
    few: "za {0} kw.",
    many: "za {0} kw.",
    other: "za {0} kw."
}, _xgn356 = {
    one: "+{0} mies.",
    few: "+{0} mies.",
    many: "+{0} mies.",
    other: "+{0} mies."
}, _xgn357 = {
    one: "–{0} mies.",
    few: "–{0} mies.",
    many: "–{0} mies.",
    other: "–{0} mies."
}, _xgn358 = {
    one: "za {0} min",
    few: "za {0} min",
    many: "za {0} min",
    other: "za {0} min"
}, _xgn359 = {
    one: "{0} s temu",
    few: "{0} s temu",
    many: "{0} s temu",
    other: "{0} s temu"
}, _xgn360 = {
    id: "019",
    displayName: "Ameryka",
    hasTimeZones: false,
    parentRegionId: "001"
}, _xgn361 = {
    id: "029",
    displayName: "Karaiby",
    hasTimeZones: false,
    parentRegionId: "019"
}, _xgn362 = {
    id: "009",
    displayName: "Oceania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _xgn363 = {
    id: "WF",
    displayName: "Wallis i Futuna",
    regionId: "061",
    hasTimeZones: true
}, _xgn364 = {
    id: "GB",
    displayName: "Wielka Brytania",
    regionId: "154",
    hasTimeZones: true
}, _xgn365 = {
    id: "AX",
    displayName: "Wyspy Alandzkie",
    regionId: "154",
    hasTimeZones: true
}, _xgn366 = {
    id: "MH",
    displayName: "Wyspy Marshalla",
    regionId: "057",
    hasTimeZones: true
}, _xgn367 = [ "sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "paź", "lis", "gru" ], _xgn368 = {
    relative: _xgn111
}, _xgn369 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _xgn370 = {
    id: "SA",
    displayName: "Arabia Saudyjska",
    regionId: "145",
    hasTimeZones: true
}, _xgn371 = {
    id: "GF",
    displayName: "Gujana Francuska",
    regionId: "005",
    hasTimeZones: true
}, _xgn372 = {
    id: "GQ",
    displayName: "Gwinea Równikowa",
    regionId: "017",
    hasTimeZones: true
}, _xgn373 = {
    id: "KR",
    displayName: "Korea Południowa",
    regionId: "030",
    hasTimeZones: true
}, _xgn374 = {
    id: "MP",
    displayName: "Mariany Północne",
    regionId: "057",
    hasTimeZones: true
}, _xgn375 = {
    id: "EH",
    displayName: "Sahara Zachodnia",
    regionId: "015",
    hasTimeZones: true
}, _xgn376 = {
    id: "BL",
    displayName: "Saint-Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _xgn377 = {
    id: "SS",
    displayName: "Sudan Południowy",
    regionId: "014",
    hasTimeZones: true
}, _xgn378 = [ "niedziela", "poniedziałek", "wtorek", "środa", "czwartek", "piątek", "sobota" ], _xgn379 = {
    one: "za {0} rok",
    few: "za {0} lata",
    many: "za {0} lat",
    other: "za {0} roku"
}, _xgn380 = {
    relative: _xgn146
}, _xgn381 = {
    relative: _xgn147
}, _xgn382 = {
    id: "AG",
    displayName: "Antigua i Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _xgn383 = {
    id: "BN",
    displayName: "Brunei Darussalam",
    regionId: "035",
    hasTimeZones: true
}, _xgn384 = {
    id: "054",
    displayName: "Melanezja",
    hasTimeZones: false,
    parentRegionId: "009"
}, _xgn385 = {
    id: "PG",
    displayName: "Papua-Nowa Gwinea",
    regionId: "054",
    hasTimeZones: true
}, _xgn386 = {
    id: "061",
    displayName: "Polinezja",
    hasTimeZones: false,
    parentRegionId: "009"
}, _xgn387 = {
    id: "MO",
    displayName: "SRA Makau (Chiny)",
    regionId: "030",
    hasTimeZones: true
}, _xgn388 = {
    id: "US",
    displayName: "Stany Zjednoczone",
    regionId: "021",
    hasTimeZones: true
}, _xgn389 = {
    id: "TT",
    displayName: "Trynidad i Tobago",
    regionId: "029",
    hasTimeZones: true
}, _xgn390 = {
    one: "{0} stopień",
    few: "{0} stopnie",
    many: "{0} stopni",
    other: "{0} stopnia"
}, _xgn391 = {
    one: "{0} sekunda",
    few: "{0} sekundy",
    many: "{0} sekund",
    other: "{0} sekundy"
}, _xgn392 = {
    one: "000 tysiąc",
    few: "000 tysiące",
    many: "000 tysięcy",
    other: "000 tysiąca"
}, _xgn393 = {
    one: "za {0} dzień",
    few: "za {0} dni",
    many: "za {0} dni",
    other: "za {0} dnia"
}, _xgn394 = {
    id: "AS",
    displayName: "Samoa Amerykańskie",
    regionId: "061",
    hasTimeZones: true
}, _xgn395 = {
    one: "{0} kaloria",
    few: "{0} kalorie",
    many: "{0} kalorii",
    other: "{0} kalorii"
}, _xgn396 = {
    one: "000 milion",
    few: "000 miliony",
    many: "000 milionów",
    other: "000 miliona"
}, _xgn397 = {
    one: "00 miliard",
    few: "00 miliardy",
    many: "00 miliardów",
    other: "00 miliarda"
}, _xgn398 = {
    one: "000 bilion",
    few: "000 biliony",
    many: "000 bilionów",
    other: "000 biliona"
}, _xgn399 = {
    one: "00 tys'.' ¤",
    few: "00 tys'.' ¤",
    many: "00 tys'.' ¤",
    other: "00 tys'.' ¤"
}, _xgn400 = {
    one: "{0} g. temu",
    few: "{0} g. temu",
    many: "{0} g. temu",
    other: "{0} g. temu"
}, _xgn401 = {
    one: "za {0} sek.",
    few: "za {0} sek.",
    many: "za {0} sek.",
    other: "za {0} sek."
}, _xgn402 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _xgn403 = {
    id: "053",
    displayName: "Australazja",
    hasTimeZones: false,
    parentRegionId: "009"
}, _xgn404 = {
    id: "PF",
    displayName: "Polinezja Francuska",
    regionId: "061",
    hasTimeZones: true
}, _xgn405 = {
    id: "KN",
    displayName: "Saint Kitts i Nevis",
    regionId: "029",
    hasTimeZones: true
}, _xgn406 = {
    one: "za {0} tydz.",
    few: "za {0} tyg.",
    many: "za {0} tyg.",
    other: "za {0} tyg."
}, _xgn407 = {
    id: "BA",
    displayName: "Bośnia i Hercegowina",
    regionId: "039",
    hasTimeZones: true
}, _xgn408 = {
    id: "HK",
    displayName: "SRA Hongkong (Chiny)",
    regionId: "030",
    hasTimeZones: true
}, _xgn409 = {
    id: "SJ",
    displayName: "Svalbard i Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _xgn410 = {
    id: "SH",
    displayName: "Wyspa Świętej Heleny",
    regionId: "011",
    hasTimeZones: true
}, _xgn411 = {
    id: "143",
    displayName: "Azja Środkowa",
    hasTimeZones: false,
    parentRegionId: "142"
}, _xgn412 = {
    id: "BQ",
    displayName: "Niderlandy Karaibskie",
    regionId: "029",
    hasTimeZones: true
}, _xgn413 = {
    id: "030",
    displayName: "Azja Wschodnia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _xgn414 = {
    id: "145",
    displayName: "Azja Zachodnia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _xgn415 = {
    id: "PS",
    displayName: "Terytoria Palestyńskie",
    regionId: "145",
    hasTimeZones: true
}, _xgn416 = {
    one: "{0} łyżeczka",
    few: "{0} łyżeczki",
    many: "{0} łyżeczek",
    other: "{0} łyżeczki"
}, _xgn417 = {
    one: "000 miliard",
    few: "000 miliardy",
    many: "000 miliardów",
    other: "000 miliarda"
}, _xgn418 = {
    one: "000 tys'.' ¤",
    few: "000 tys'.' ¤",
    many: "000 tys'.' ¤",
    other: "000 tys'.' ¤"
}, _xgn419 = {
    one: "{0} kw. temu",
    few: "{0} kw. temu",
    many: "{0} kw. temu",
    other: "{0} kw. temu"
}, _xgn420 = {
    one: "za {0} mies.",
    few: "za {0} mies.",
    many: "za {0} mies.",
    other: "za {0} mies."
}, _xgn421 = {
    one: "za {0} godz.",
    few: "za {0} godz.",
    many: "za {0} godz.",
    other: "za {0} godz."
}, _xgn422 = {
    one: "{0} min temu",
    few: "{0} min temu",
    many: "{0} min temu",
    other: "{0} min temu"
}, _xgn423 = {
    relative: _xgn321
}, _xgn424 = {
    id: "015",
    displayName: "Afryka Północna",
    hasTimeZones: false,
    parentRegionId: "002"
}, _xgn425 = {
    id: "017",
    displayName: "Afryka Środkowa",
    hasTimeZones: false,
    parentRegionId: "002"
}, _xgn426 = {
    id: "034",
    displayName: "Azja Południowa",
    hasTimeZones: false,
    parentRegionId: "142"
}, _xgn427 = {
    id: "154",
    displayName: "Europa Północna",
    hasTimeZones: false,
    parentRegionId: "150"
}, _xgn428 = {
    id: "PM",
    displayName: "Saint-Pierre i Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _xgn429 = {
    "0": "w ten poniedziałek",
    "1": "w przyszły poniedziałek",
    "-1": "w zeszły poniedziałek"
}, _xgn430 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _xgn431 = {
    id: "014",
    displayName: "Afryka Wschodnia",
    hasTimeZones: false,
    parentRegionId: "002"
}, _xgn432 = {
    id: "011",
    displayName: "Afryka Zachodnia",
    hasTimeZones: false,
    parentRegionId: "002"
}, _xgn433 = {
    id: "013",
    displayName: "Ameryka Środkowa",
    hasTimeZones: false,
    parentRegionId: "019"
}, _xgn434 = {
    id: "151",
    displayName: "Europa Wschodnia",
    hasTimeZones: false,
    parentRegionId: "150"
}, _xgn435 = {
    id: "155",
    displayName: "Europa Zachodnia",
    hasTimeZones: false,
    parentRegionId: "150"
}, _xgn436 = {
    one: "{0} rok temu",
    few: "{0} lata temu",
    many: "{0} lat temu",
    other: "{0} roku temu"
}, _xgn437 = {
    relative: _xgn339
}, _xgn438 = {
    id: "018",
    displayName: "Afryka Południowa",
    hasTimeZones: false,
    parentRegionId: "002"
}, _xgn439 = {
    id: "IO",
    displayName: "Brytyjskie Terytorium Oceanu Indyjskiego",
    hasTimeZones: true
}, _xgn440 = {
    id: "039",
    displayName: "Europa Południowa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _xgn441 = {
    id: "GS",
    displayName: "Georgia Południowa i Sandwich Południowy",
    hasTimeZones: true
}, _xgn442 = {
    id: "057",
    displayName: "Region Mikronezji",
    hasTimeZones: false,
    parentRegionId: "009"
}, _xgn443 = {
    id: "VC",
    displayName: "Saint Vincent i Grenadyny",
    regionId: "029",
    hasTimeZones: true
}, _xgn444 = {
    d: "E, d – E, d MMM y G",
    M: "E, d MMM – E, d MMM y G",
    y: "E, d MMM y – E, d MMM y G"
}, _xgn445 = {
    one: "{0} dzień temu",
    few: "{0} dni temu",
    many: "{0} dni temu",
    other: "{0} dnia temu"
}, _xgn446 = {
    one: "za {0} minutę",
    few: "za {0} minuty",
    many: "za {0} minut",
    other: "za {0} minuty"
}, _xgn447 = {
    id: "005",
    displayName: "Ameryka Południowa",
    hasTimeZones: false,
    parentRegionId: "019"
}, _xgn448 = {
    id: "VG",
    displayName: "Brytyjskie Wyspy Dziewicze",
    regionId: "029",
    hasTimeZones: true
}, _xgn449 = {
    one: "{0} sek. temu",
    few: "{0} sek. temu",
    many: "{0} sek. temu",
    other: "{0} sek. temu"
}, _xgn450 = {
    one: "{0} tydz. temu",
    few: "{0} tyg. temu",
    many: "{0} tyg. temu",
    other: "{0} tyg. temu"
}, _xgn451 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _xgn452 = {
    d: "E, dd.MM.y – E, dd.MM.y",
    M: "E, dd.MM.y – E, dd.MM.y",
    y: "E, dd.MM.y – E, dd.MM.y"
}, _xgn453 = {
    id: "UM",
    displayName: "Dalekie Wyspy Mniejsze Stanów Zjednoczonych",
    hasTimeZones: true
}, _xgn454 = {
    id: "ZA",
    displayName: "Republika Południowej Afryki",
    regionId: "018",
    hasTimeZones: true
}, _xgn455 = {
    id: "CF",
    displayName: "Republika Środkowoafrykańska",
    regionId: "017",
    hasTimeZones: true
}, _xgn456 = {
    id: "AE",
    displayName: "Zjednoczone Emiraty Arabskie",
    regionId: "145",
    hasTimeZones: true
}, _xgn457 = {
    id: "CD",
    displayName: "Demokratyczna Republika Konga",
    regionId: "017",
    hasTimeZones: true
}, _xgn458 = {
    id: "CV",
    displayName: "Republika Zielonego Przylądka",
    regionId: "011",
    hasTimeZones: true
}, _xgn459 = {
    one: "za {0} godzinę",
    few: "za {0} godziny",
    many: "za {0} godzin",
    other: "za {0} godziny"
}, _xgn460 = {
    one: "za {0} sekundę",
    few: "za {0} sekundy",
    many: "za {0} sekund",
    other: "za {0} sekundy"
}, _xgn461 = {
    one: "{0} mies. temu",
    few: "{0} mies. temu",
    many: "{0} mies. temu",
    other: "{0} mies. temu"
}, _xgn462 = {
    one: "{0} godz. temu",
    few: "{0} godz. temu",
    many: "{0} godz. temu",
    other: "{0} godz. temu"
}, _xgn463 = {
    id: "TF",
    displayName: "Francuskie Terytoria Południowe i Antarktyczne",
    hasTimeZones: true
}, _xgn464 = {
    one: "za {0} tydzień",
    few: "za {0} tygodnie",
    many: "za {0} tygodni",
    other: "za {0} tygodnia"
}, _xgn465 = {
    id: "035",
    displayName: "Azja Południowo-Wschodnia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _xgn466 = {
    id: "ST",
    displayName: "Wyspy Świętego Tomasza i Książęca",
    regionId: "017",
    hasTimeZones: true
}, _xgn467 = {
    one: "za {0} miesiąc",
    few: "za {0} miesiące",
    many: "za {0} miesięcy",
    other: "za {0} miesiąca"
}, _xgn468 = {
    one: "{0} minutę temu",
    few: "{0} minuty temu",
    many: "{0} minut temu",
    other: "{0} minuty temu"
}, _xgn469 = {
    one: "za {0} kwartał",
    few: "za {0} kwartały",
    many: "za {0} kwartałów",
    other: "za {0} kwartału"
}, _xgn470 = {
    relative: _xgn429
}, _xgn471 = {
    id: "VI",
    displayName: "Wyspy Dziewicze Stanów Zjednoczonych",
    regionId: "029",
    hasTimeZones: true
}, _xgn472 = {
    d: "E, dd.MM.y – E, dd.MM.y G",
    M: "E, dd.MM.y – E, dd.MM.y G",
    y: "E, dd.MM.y – E, dd.MM.y GGGGG"
}, _xgn473 = {
    one: "{0} godzinę temu",
    few: "{0} godziny temu",
    many: "{0} godzin temu",
    other: "{0} godziny temu"
}, _xgn474 = {
    one: "{0} sekundę temu",
    few: "{0} sekundy temu",
    many: "{0} sekund temu",
    other: "{0} sekundy temu"
}, _xgn475 = {
    id: "021",
    displayName: "Ameryka Północna (USA, Kanada)",
    hasTimeZones: false,
    parentRegionId: "019"
}, _xgn476 = {
    one: "{0} tydzień temu",
    few: "{0} tygodnie temu",
    many: "{0} tygodni temu",
    other: "{0} tygodnia temu"
}, _xgn477 = {
    one: "{0} miesiąc temu",
    few: "{0} miesiące temu",
    many: "{0} miesięcy temu",
    other: "{0} miesiąca temu"
}, _xgn478 = {
    one: "{0} kwartał temu",
    few: "{0} kwartały temu",
    many: "{0} kwartałów temu",
    other: "{0} kwartału temu"
}, _xgn479 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Dżu. I", "Dżu. II", "Ra.", "Sza.", "Ram.", "Szaw.", "Zu al-k.", "Zu al-h." ], _xgn480 = [ "Tiszri", "Cheszwan", "Kislew", "Tewet", "Szwat", "Adar I", "Adar", "Nisan", "Ijar", "Siwan", "Tamuz", "Aw", "Elul" ], _xgn481 = [ "Farwardin", "Ordibeheszt", "Chordād", "Tir", "Mordād", "Szahriwar", "Mehr", "Ābān", "Āsar", "Déi", "Bahman", "Esfand" ], _xgn482 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _xgn483 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _xgn484 = {
    abbreviated: _xgn1,
    narrow: [ "1", "2", "3", "4" ],
    wide: _xgn48
}, _xgn485 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _xgn486 = [ "styczeń", "luty", "marzec", "kwiecień", "maj", "czerwiec", "lipiec", "sierpień", "wrzesień", "październik", "listopad", "grudzień" ], _xgn487 = [ "stycznia", "lutego", "marca", "kwietnia", "maja", "czerwca", "lipca", "sierpnia", "września", "października", "listopada", "grudnia" ], _xgn488 = {
    abbreviated: _xgn13,
    narrow: [ "1", "2", "3", "4" ],
    wide: _xgn48
}, _xgn489 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Dżumada I", "Dżumada II", "Radżab", "Szaban", "Ramadan", "Szawwal", "Zu al-kada", "Zu al-hidżdża" ], _xgn490 = {
    future: _xgn188,
    past: _xgn189
}, _xgn491 = {
    midnight: "o półn.",
    am: "a",
    noon: "n",
    pm: "p",
    morning1: "rano",
    morning2: "przed południem",
    afternoon1: "po południu",
    evening1: "wieczorem",
    night1: "w nocy"
}, _xgn492 = {
    midnight: "północ",
    am: "AM",
    noon: "południe",
    pm: "PM",
    morning1: "rano",
    morning2: "przedpołudnie",
    afternoon1: "popołudnie",
    evening1: "wieczór",
    night1: "noc"
}, _xgn493 = {
    future: _xgn190,
    past: _xgn359
}, _xgn494 = {
    am: "a",
    pm: "p",
    midnight: "o północy",
    noon: "w południe",
    morning1: "rano",
    morning2: "przed południem",
    afternoon1: "po południu",
    evening1: "wieczorem",
    night1: "w nocy"
}, _xgn495 = {
    future: _xgn356,
    past: _xgn357
}, _xgn496 = {
    future: _xgn315,
    past: _xgn400
}, _xgn497 = {
    midnight: "o północy",
    am: "AM",
    noon: "w południe",
    pm: "PM",
    morning1: "rano",
    morning2: "przed południem",
    afternoon1: "po południu",
    evening1: "wieczorem",
    night1: "w nocy"
}, _xgn498 = {
    am: "AM",
    pm: "PM",
    midnight: "o północy",
    noon: "w południe",
    morning1: "rano",
    morning2: "przed południem",
    afternoon1: "po południu",
    evening1: "wieczorem",
    night1: "w nocy"
}, _xgn499 = {
    future: _xgn355,
    past: _xgn419
}, _xgn500 = {
    future: _xgn358,
    past: _xgn422
}, _xgn501 = {
    future: _xgn379,
    past: _xgn436
}, _xgn502 = {
    decimal: ",",
    group: " ",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _xgn503 = {
    future: _xgn393,
    past: _xgn445
}, _xgn504 = {
    future: _xgn401,
    past: _xgn449
}, _xgn505 = {
    future: _xgn406,
    past: _xgn450
}, _xgn506 = {
    symbols: _xgn502
}, _xgn507 = {
    displayName: "s",
    relativeTime: _xgn493
}, _xgn508 = {
    future: _xgn420,
    past: _xgn461
}, _xgn509 = {
    future: _xgn421,
    past: _xgn462
}, _xgn510 = {
    abbreviated: _xgn45,
    narrow: _xgn45,
    wide: _xgn45
}, _xgn511 = {
    future: _xgn446,
    past: _xgn468
}, _xgn512 = {
    displayName: "mc",
    relativeTime: _xgn495
}, _xgn513 = {
    displayName: "g.",
    relativeTime: _xgn496
}, _xgn514 = {
    format: _xgn340,
    numeric: _xgn2,
    standAlone: _xgn340
}, _xgn515 = {
    future: _xgn459,
    past: _xgn473
}, _xgn516 = {
    future: _xgn460,
    past: _xgn474
}, _xgn517 = {
    displayName: "min",
    relativeTime: _xgn500
}, _xgn518 = {
    displayName: "r.",
    relativeTime: _xgn501
}, _xgn519 = {
    future: _xgn464,
    past: _xgn476
}, _xgn520 = {
    future: _xgn467,
    past: _xgn477
}, _xgn521 = {
    abbreviated: _xgn45,
    narrow: _xgn45,
    wide: _xgn369
}, _xgn522 = {
    future: _xgn469,
    past: _xgn478
}, _xgn523 = {
    displayName: "dzień",
    relativeTime: _xgn503
}, _xgn524 = {
    displayName: "sek.",
    relativeTime: _xgn504
}, _xgn525 = {
    displayName: "tydz.",
    relativeTime: _xgn505
}, _xgn526 = {
    symbols: _xgn502,
    digits: "renderSpelloutCardinal"
}, _xgn527 = {
    displayName: "mies.",
    relativeTime: _xgn508
}, _xgn528 = {
    displayName: "godz.",
    relativeTime: _xgn509
}, _xgn529 = {
    symbols: _xgn502,
    digits: "renderSpelloutCardinalFinancial"
}, _xgn530 = {
    displayName: "minuta",
    relativeTime: _xgn511
}, _xgn531 = {
    abbreviated: _xgn29,
    narrow: _xgn5,
    wide: _xgn378,
    "short": _xgn23
}, _xgn532 = {
    displayName: "godzina",
    relativeTime: _xgn515
}, _xgn533 = {
    displayName: "sekunda",
    relative: [ "teraz" ],
    relativeTime: _xgn516
}, _xgn534 = {
    abbreviated: _xgn402,
    narrow: _xgn402,
    wide: _xgn402
}, _xgn535 = {
    displayName: "kw.",
    relative: _xgn335,
    relativeTime: _xgn490
}, _xgn536 = {
    format: _xgn534
}, _xgn537 = {
    format: _xgn484,
    standAlone: _xgn488
}, _xgn538 = {
    abbreviated: _xgn367,
    narrow: _xgn30,
    wide: _xgn486
}, _xgn539 = {
    displayName: "rok",
    relative: _xgn79,
    relativeTime: _xgn501
}, _xgn540 = {
    abbreviated: _xgn367,
    narrow: _xgn30,
    wide: _xgn487
}, _xgn541 = {
    displayName: "kw.",
    relative: _xgn335,
    relativeTime: _xgn499
}, _xgn542 = {
    displayName: "dzień",
    relative: _xgn338,
    relativeTime: _xgn503
}, _xgn543 = {
    abbreviated: _xgn480,
    narrow: _xgn76,
    wide: _xgn480
}, _xgn544 = {
    abbreviated: _xgn481,
    narrow: _xgn45,
    wide: _xgn481
}, _xgn545 = {
    abbreviated: _xgn482,
    narrow: _xgn76,
    wide: _xgn482
}, _xgn546 = {
    abbreviated: _xgn479,
    narrow: _xgn45,
    wide: _xgn489
}, _xgn547 = {
    fullDate: "EEEE, d MMMM U",
    longDate: "d MMMM U",
    mediumDate: "d MMM U",
    shortDate: "dd.MM.y",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd.MM.y HH:mm",
    mediumDateTime: "d MMM U HH:mm:ss",
    longDateTime: "d MMMM U HH:mm:ss z",
    fullDateTime: "EEEE, d MMMM U HH:mm:ss zzzz"
}, _xgn548 = {
    abbreviated: _xgn483,
    narrow: _xgn76,
    wide: _xgn483
}, _xgn549 = {
    abbreviated: _xgn485,
    narrow: _xgn45,
    wide: _xgn485
}, _xgn550 = {
    displayName: "tydzień",
    relative: _xgn337,
    relativeTime: _xgn519
}, _xgn551 = {
    displayName: "miesiąc",
    relative: _xgn336,
    relativeTime: _xgn520
}, _xgn552 = {
    displayName: "kwartał",
    relative: _xgn335,
    relativeTime: _xgn522
}, _xgn553 = {
    fullDate: "EEEE, d MMMM y G",
    longDate: "d MMMM y G",
    mediumDate: "d MMM y G",
    shortDate: "dd.MM.y G",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd.MM.y G, HH:mm",
    mediumDateTime: "d MMM y G, HH:mm:ss",
    longDateTime: "d MMMM y G, HH:mm:ss z",
    fullDateTime: "EEEE, d MMMM y G, HH:mm:ss zzzz"
}, _xgn554 = {
    format: _xgn521,
    standAlone: _xgn510
}, _xgn555 = {
    format: _xgn531,
    standAlone: _xgn531
}, _xgn556 = {
    abbreviated: _xgn498,
    narrow: _xgn494,
    wide: _xgn492
}, _xgn557 = {
    abbreviated: _xgn497,
    narrow: _xgn491,
    wide: _xgn497
}, _xgn558 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _xgn559 = {
    d: "d",
    E: "ccc",
    Ed: "E, d",
    Gy: "y G",
    GyMMM: "LLL y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E, d MMM y G",
    h: "hh a",
    H: "HH",
    hm: "hh:mm a",
    Hm: "HH:mm",
    hms: "hh:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "d.MM",
    MEd: "E, d.MM",
    MMdd: "d.MM",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E, d MMM",
    MMMMd: "d MMMM",
    ms: "mm:ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "MM.y G",
    yyyyMd: "d.MM.y G",
    yyyyMEd: "E, d.MM.y G",
    yyyyMM: "MM.y G",
    yyyyMMM: "LLL y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E, d MMM y G",
    yyyyMMMM: "LLLL y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _xgn560 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _xgn561 = {
    format: _xgn540,
    standAlone: _xgn538
}, _xgn562 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _xgn563 = {
    format: _xgn546,
    standAlone: _xgn546
}, _xgn564 = {
    "1000": _xgn184,
    "10000": _xgn310,
    "100000": _xgn353,
    "1000000": _xgn42,
    "10000000": _xgn70,
    "100000000": _xgn91,
    "1000000000": _xgn43,
    "10000000000": _xgn71,
    "100000000000": _xgn92,
    "1000000000000": _xgn44,
    "10000000000000": _xgn72,
    "100000000000000": _xgn93
}, _xgn565 = {
    basic: _xgn547,
    cldr: _xgn558
}, _xgn566 = {
    "1000": _xgn354,
    "10000": _xgn399,
    "100000": _xgn418,
    "1000000": _xgn94,
    "10000000": _xgn185,
    "100000000": _xgn311,
    "1000000000": _xgn95,
    "10000000000": _xgn186,
    "100000000000": _xgn312,
    "1000000000000": _xgn96,
    "10000000000000": _xgn187,
    "100000000000000": _xgn313
}, _xgn567 = {
    basic: _xgn553,
    cldr: _xgn559
}, _xgn568 = {
    "1000": _xgn290,
    "10000": _xgn334,
    "100000": _xgn392,
    "1000000": _xgn308,
    "10000000": _xgn350,
    "100000000": _xgn396,
    "1000000000": _xgn351,
    "10000000000": _xgn397,
    "100000000000": _xgn417,
    "1000000000000": _xgn309,
    "10000000000000": _xgn352,
    "100000000000000": _xgn398
}, _xgn569 = {
    d: {
        d: "d–d"
    },
    h: _xgn3,
    H: {
        H: "HH–HH"
    },
    hm: _xgn47,
    Hm: _xgn11,
    hmv: _xgn78,
    Hmv: _xgn17,
    hv: _xgn4,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _xgn20,
    MEd: _xgn31,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _xgn9,
    MMMEd: _xgn32,
    y: {
        y: "U–U"
    },
    yM: _xgn14,
    yMd: _xgn291,
    yMEd: _xgn451,
    yMMM: _xgn15,
    yMMMd: _xgn75,
    yMMMEd: _xgn430,
    yMMMM: _xgn21
}, _xgn570 = {
    d: {
        d: "d–d"
    },
    h: _xgn3,
    H: {
        H: "HH–HH"
    },
    hm: _xgn47,
    Hm: _xgn11,
    hmv: _xgn78,
    Hmv: _xgn17,
    hv: _xgn4,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _xgn12,
    MEd: _xgn27,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _xgn8,
    MMMEd: _xgn28,
    y: {
        y: "y–y G"
    },
    yM: _xgn18,
    yMd: _xgn314,
    yMEd: _xgn472,
    yMMM: _xgn19,
    yMMMd: _xgn145,
    yMMMEd: _xgn444,
    yMMMM: _xgn22
}, _xgn571 = {
    format: _xgn557,
    standAlone: _xgn556
}, _xgn572 = {
    beforeCurrency: _xgn560,
    afterCurrency: _xgn560
}, _xgn573 = {
    "long": _xgn568,
    "short": _xgn564,
    "default": "#,##0.###"
}, _xgn574 = {
    abbreviated: _xgn562,
    narrow: _xgn562,
    wide: _xgn562
}, _xgn575 = {
    format: _xgn574
}, _xgn576 = {
    "short": _xgn566,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    few: "{0} {1}",
    many: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _xgn572
}, _xgn577 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _xgn573,
    currency: _xgn576,
    percent: {
        "default": "#,##0%"
    }
}, _xgn578 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _xgn579 = {
    dayParts: _xgn536,
    days: _xgn575,
    months: _xgn575,
    years: _xgn575,
    zodiacs: _xgn536
}, _xgn580 = {
    era: {
        displayName: "era"
    },
    year: _xgn539,
    "year-short": _xgn518,
    "year-narrow": _xgn518,
    quarter: _xgn552,
    "quarter-short": _xgn541,
    "quarter-narrow": _xgn535,
    month: _xgn551,
    "month-short": _xgn527,
    "month-narrow": _xgn512,
    week: _xgn550,
    "week-short": _xgn525,
    "week-narrow": _xgn525,
    day: _xgn542,
    "day-short": _xgn523,
    "day-narrow": _xgn523,
    weekday: _xgn6,
    dayperiod: _xgn24,
    hour: _xgn532,
    "hour-short": _xgn528,
    "hour-narrow": _xgn513,
    minute: _xgn530,
    "minute-short": _xgn517,
    "minute-narrow": _xgn517,
    second: _xgn533,
    "second-short": _xgn524,
    "second-narrow": _xgn507,
    zone: _xgn7,
    sun: _xgn437,
    "sun-short": _xgn437,
    "sun-narrow": _xgn437,
    mon: _xgn470,
    "mon-short": _xgn470,
    "mon-narrow": _xgn470,
    tue: _xgn380,
    "tue-short": _xgn380,
    "tue-narrow": _xgn380,
    wed: _xgn328,
    "wed-short": _xgn328,
    "wed-narrow": _xgn328,
    thu: _xgn423,
    "thu-short": _xgn423,
    "thu-narrow": _xgn423,
    fri: _xgn381,
    "fri-short": _xgn381,
    "fri-narrow": _xgn381,
    sat: _xgn368,
    "sat-short": _xgn368,
    "sat-narrow": _xgn368
}, _xgn581 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _xgn580
}, _xgn582 = {
    dateFormats: _xgn567,
    datePartsOrder: "dmy",
    dateIntervalFormats: _xgn570,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _xgn555,
    dayPeriods: _xgn571,
    monthNames: _xgn563,
    eraNames: _xgn10,
    quarterNames: _xgn537,
    fields: _xgn580
}, _xgn583 = {
    dateFormats: _xgn565,
    datePartsOrder: "dmy",
    dateIntervalFormats: _xgn569,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _xgn555,
    dayPeriods: _xgn571,
    cyclicNames: _xgn579,
    monthNames: _xgn554,
    monthPatterns: _xgn514,
    quarterNames: _xgn537,
    fields: _xgn580
};

inter.id = "pl";

inter.delimiters = {
    quotationStart: "„",
    quotationEnd: "”",
    alternateQuotationStart: "«",
    alternateQuotationEnd: "»"
};

inter.listPatterns = {
    "default": _xgn267,
    unit: _xgn267,
    unitNarrow: _xgn267,
    unitShort: _xgn267
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: _xgn35,
            accelerationMeterPerSecondSquared: {
                one: "{0} metr na sekundę do kwadratu",
                few: "{0} metry na sekundę do kwadratu",
                many: "{0} metrów na sekundę do kwadratu",
                other: "{0} metra na sekundę do kwadratu"
            },
            angleRevolution: {
                one: "{0} obrót",
                few: "{0} obroty",
                many: "{0} obrotów",
                other: "{0} obrotu"
            },
            angleRadian: {
                one: "{0} radian",
                few: "{0} radiany",
                many: "{0} radianów",
                other: "{0} radiana"
            },
            angleDegree: _xgn390,
            angleArcMinute: _xgn333,
            angleArcSecond: _xgn391,
            areaSquareKilometer: {
                one: "{0} kilometr kwadratowy",
                few: "{0} kilometry kwadratowe",
                many: "{0} kilometrów kwadratowych",
                other: "{0} kilometra kwadratowego"
            },
            areaHectare: {
                one: "{0} hektar",
                few: "{0} hektary",
                many: "{0} hektarów",
                other: "{0} hektara"
            },
            areaSquareMeter: {
                one: "{0} metr kwadratowy",
                few: "{0} metry kwadratowe",
                many: "{0} metrów kwadratowych",
                other: "{0} metra kwadratowego"
            },
            areaSquareCentimeter: {
                one: "{0} centymetr kwadratowy",
                few: "{0} centymetry kwadratowe",
                many: "{0} centymetrów kwadratowych",
                other: "{0} centymetra kwadratowego"
            },
            areaSquareMile: {
                one: "{0} mila kwadratowa",
                few: "{0} mile kwadratowe",
                many: "{0} mil kwadratowych",
                other: "{0} mili kwadratowej"
            },
            areaAcre: {
                one: "{0} akr",
                few: "{0} akry",
                many: "{0} akrów",
                other: "{0} akra"
            },
            areaSquareYard: {
                one: "{0} jard kwadratowy",
                few: "{0} jardy kwadratowe",
                many: "{0} jardów kwadratowych",
                other: "{0} jarda kwadratowego"
            },
            areaSquareFoot: {
                one: "{0} stopa kwadratowa",
                few: "{0} stopy kwadratowe",
                many: "{0} stóp kwadratowych",
                other: "{0} stopy kwadratowej"
            },
            areaSquareInch: {
                one: "{0} cal kwadratowy",
                few: "{0} cale kwadratowe",
                many: "{0} cali kwadratowych",
                other: "{0} cala kwadratowego"
            },
            concentrKarat: _xgn349,
            consumptionLiterPerKilometer: {
                one: "{0} litr na kilometr",
                few: "{0} litry na kilometr",
                many: "{0} litrów na kilometr",
                other: "{0} litra na kilometr"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} litr na 100 kilometrów",
                few: "{0} litry na 100 kilometrów",
                many: "{0} litrów na 100 kilometrów",
                other: "{0} litra na 100 kilometrów"
            },
            consumptionMilePerGallon: {
                one: "{0} mila na galon",
                few: "{0} mile na galon",
                many: "{0} mili na galon",
                other: "{0} mili na galon"
            },
            digitalTerabyte: {
                one: "{0} terabajt",
                few: "{0} terabajty",
                many: "{0} terabajtów",
                other: "{0} terabajta"
            },
            digitalTerabit: {
                one: "{0} terabit",
                few: "{0} terabity",
                many: "{0} terabitów",
                other: "{0} terabitu"
            },
            digitalGigabyte: {
                one: "{0} gigabajt",
                few: "{0} gigabajty",
                many: "{0} gigabajtów",
                other: "{0} gigabajta"
            },
            digitalGigabit: {
                one: "{0} gigabit",
                few: "{0} gigabity",
                many: "{0} gigabitów",
                other: "{0} gigabitu"
            },
            digitalMegabyte: {
                one: "{0} megabajt",
                few: "{0} megabajty",
                many: "{0} megabajtów",
                other: "{0} megabajta"
            },
            digitalMegabit: {
                one: "{0} megabit",
                few: "{0} megabity",
                many: "{0} megabitów",
                other: "{0} megabitu"
            },
            digitalKilobyte: {
                one: "{0} kilobajt",
                few: "{0} kilobajty",
                many: "{0} kilobajtów",
                other: "{0} kilobajta"
            },
            digitalKilobit: {
                one: "{0} kilobit",
                few: "{0} kilobity",
                many: "{0} kilobitów",
                other: "{0} kilobitu"
            },
            digitalByte: {
                one: "{0} bajt",
                few: "{0} bajty",
                many: "{0} bajtów",
                other: "{0} bajta"
            },
            digitalBit: {
                one: "{0} bit",
                few: "{0} bity",
                many: "{0} bitów",
                other: "{0} bitu"
            },
            durationCentury: {
                one: "{0} wiek",
                few: "{0} wieki",
                many: "{0} wieków",
                other: "{0} wieku"
            },
            durationYear: _xgn110,
            durationMonth: {
                one: "{0} miesiąc",
                few: "{0} miesiące",
                many: "{0} miesięcy",
                other: "{0} miesiąca"
            },
            durationWeek: {
                one: "{0} tydzień",
                few: "{0} tygodnie",
                many: "{0} tygodni",
                other: "{0} tygodnia"
            },
            durationDay: _xgn143,
            durationHour: {
                one: "{0} godzina",
                few: "{0} godziny",
                many: "{0} godzin",
                other: "{0} godzin"
            },
            durationMinute: _xgn333,
            durationSecond: _xgn391,
            durationMillisecond: {
                one: "{0} milisekunda",
                few: "{0} milisekundy",
                many: "{0} milisekund",
                other: "{0} milisekundy"
            },
            durationMicrosecond: {
                one: "{0} mikrosekunda",
                few: "{0} mikrosekundy",
                many: "{0} mikrosekund",
                other: "{0} mikrosekundy"
            },
            durationNanosecond: {
                one: "{0} nanosekunda",
                few: "{0} nanosekundy",
                many: "{0} nanosekund",
                other: "{0} nanosekundy"
            },
            electricAmpere: {
                one: "{0} amper",
                few: "{0} ampery",
                many: "{0} amperów",
                other: "{0} ampera"
            },
            electricMilliampere: {
                one: "{0} miliamper",
                few: "{0} miliampery",
                many: "{0} miliamperów",
                other: "{0} miliampera"
            },
            electricOhm: {
                one: "{0} om",
                few: "{0} omy",
                many: "{0} omów",
                other: "{0} oma"
            },
            electricVolt: {
                one: "{0} wolt",
                few: "{0} wolty",
                many: "{0} woltów",
                other: "{0} wolta"
            },
            energyKilocalorie: {
                one: "{0} kilokaloria",
                few: "{0} kilokalorie",
                many: "{0} kilokalorii",
                other: "{0} kilokalorii"
            },
            energyCalorie: _xgn395,
            energyFoodcalorie: _xgn395,
            energyKilojoule: {
                one: "{0} kilodżul",
                few: "{0} kilodżule",
                many: "{0} kilodżuli",
                other: "{0} kilodżula"
            },
            energyJoule: {
                one: "{0} dżul",
                few: "{0} dżule",
                many: "{0} dżuli",
                other: "{0} dżula"
            },
            energyKilowattHour: {
                one: "{0} kilowatogodzina",
                few: "{0} kilowatogodziny",
                many: "{0} kilowatogodzin",
                other: "{0} kilowatogodziny"
            },
            frequencyGigahertz: {
                one: "{0} gigaherc",
                few: "{0} gigaherce",
                many: "{0} gigaherców",
                other: "{0} gigaherca"
            },
            frequencyMegahertz: {
                one: "{0} megaherc",
                few: "{0} megaherce",
                many: "{0} megaherców",
                other: "{0} megaherca"
            },
            frequencyKilohertz: {
                one: "{0} kiloherc",
                few: "{0} kiloherce",
                many: "{0} kiloherców",
                other: "{0} kiloherca"
            },
            frequencyHertz: {
                one: "{0} herc",
                few: "{0} herce",
                many: "{0} herców",
                other: "{0} herca"
            },
            lengthKilometer: {
                one: "{0} kilometr",
                few: "{0} kilometry",
                many: "{0} kilometrów",
                other: "{0} kilometra"
            },
            lengthMeter: {
                one: "{0} metr",
                few: "{0} metry",
                many: "{0} metrów",
                other: "{0} metra"
            },
            lengthDecimeter: {
                one: "{0} decymetr",
                few: "{0} decymetry",
                many: "{0} decymetrów",
                other: "{0} decymetra"
            },
            lengthCentimeter: {
                one: "{0} centymetr",
                few: "{0} centymetry",
                many: "{0} centymetrów",
                other: "{0} centymetra"
            },
            lengthMillimeter: {
                one: "{0} milimetr",
                few: "{0} milimetry",
                many: "{0} milimetrów",
                other: "{0} milimetra"
            },
            lengthMicrometer: {
                one: "{0} mikrometr",
                few: "{0} mikrometry",
                many: "{0} mikrometrów",
                other: "{0} mikrometra"
            },
            lengthNanometer: {
                one: "{0} nanometr",
                few: "{0} nanometry",
                many: "{0} nanometrów",
                other: "{0} nanometra"
            },
            lengthPicometer: {
                one: "{0} pikometr",
                few: "{0} pikometry",
                many: "{0} pikometrów",
                other: "{0} pikometra"
            },
            lengthMile: _xgn144,
            lengthYard: {
                one: "{0} jard",
                few: "{0} jardy",
                many: "{0} jardów",
                other: "{0} jarda"
            },
            lengthFoot: {
                one: "{0} stopa",
                few: "{0} stopy",
                many: "{0} stóp",
                other: "{0} stopy"
            },
            lengthInch: {
                one: "{0} cal",
                few: "{0} cale",
                many: "{0} cali",
                other: "{0} cala"
            },
            lengthParsec: {
                one: "{0} parsek",
                few: "{0} parseki",
                many: "{0} parseków",
                other: "{0} parseka"
            },
            lengthLightYear: {
                one: "{0} rok świetlny",
                few: "{0} lata świetlne",
                many: "{0} lat świetlnych",
                other: "{0} roku świetlnego"
            },
            lengthAstronomicalUnit: {
                one: "{0} jednostka astronomiczna",
                few: "{0} jednostki astronomiczne",
                many: "{0} jednostek astronomicznych",
                other: "{0} jednostki astronomicznej"
            },
            lengthNauticalMile: {
                one: "{0} mila morska",
                few: "{0} mile morskie",
                many: "{0} mil morskich",
                other: "{0} mili morskiej"
            },
            lengthMileScandinavian: {
                one: "{0} mila skandynawska",
                few: "{0} mile skandynawskie",
                many: "{0} mil skandynawskich",
                other: "{0} mili skandynawskiej"
            },
            lightLux: {
                one: "{0} luks",
                few: "{0} luksy",
                many: "{0} luksów",
                other: "{0} luksu"
            },
            massMetricTon: {
                one: "{0} tona",
                few: "{0} tony",
                many: "{0} ton",
                other: "{0} tony"
            },
            massKilogram: {
                one: "{0} kilogram",
                few: "{0} kilogramy",
                many: "{0} kilogramów",
                other: "{0} kilograma"
            },
            massGram: {
                one: "{0} gram",
                few: "{0} gramy",
                many: "{0} gramów",
                other: "{0} grama"
            },
            massMilligram: {
                one: "{0} miligram",
                few: "{0} miligramy",
                many: "{0} miligramów",
                other: "{0} miligrama"
            },
            massMicrogram: {
                one: "{0} mikrogram",
                few: "{0} mikrogramy",
                many: "{0} mikrogramów",
                other: "{0} mikrograma"
            },
            massTon: {
                one: "{0} krótka tona",
                few: "{0} krótkie tony",
                many: "{0} krótkich ton",
                other: "{0} krótkiej tony"
            },
            massPound: {
                one: "{0} funt",
                few: "{0} funty",
                many: "{0} funtów",
                other: "{0} funta"
            },
            massOunce: {
                one: "{0} uncja",
                few: "{0} uncje",
                many: "{0} uncji",
                other: "{0} uncji"
            },
            massOunceTroy: {
                one: "{0} uncja trojańska",
                few: "{0} uncje trojańskie",
                many: "{0} uncji trojańskich",
                other: "{0} uncji trojańskiej"
            },
            massCarat: _xgn349,
            powerGigawatt: {
                one: "{0} gigawat",
                few: "{0} gigawaty",
                many: "{0} gigawatów",
                other: "{0} gigawata"
            },
            powerMegawatt: {
                one: "{0} megawat",
                few: "{0} megawaty",
                many: "{0} megawatów",
                other: "{0} megawata"
            },
            powerKilowatt: {
                one: "{0} kilowat",
                few: "{0} kilowaty",
                many: "{0} kilowatów",
                other: "{0} kilowata"
            },
            powerWatt: {
                one: "{0} wat",
                few: "{0} waty",
                many: "{0} watów",
                other: "{0} wata"
            },
            powerMilliwatt: {
                one: "{0} miliwat",
                few: "{0} miliwaty",
                many: "{0} miliwatów",
                other: "{0} miliwata"
            },
            powerHorsepower: {
                one: "{0} koń mechaniczny",
                few: "{0} konie mechaniczne",
                many: "{0} koni mechanicznych",
                other: "{0} konia mechanicznego"
            },
            pressureHectopascal: {
                one: "{0} hektopaskal",
                few: "{0} hektopaskale",
                many: "{0} hektopaskali",
                other: "{0} hektopaskala"
            },
            pressureMillimeterOfMercury: {
                one: "{0} milimetr słupa rtęci",
                few: "{0} milimetry słupa rtęci",
                many: "{0} milimetrów słupa rtęci",
                other: "{0} milimetra słupa rtęci"
            },
            pressurePoundPerSquareInch: {
                one: "{0} funt na cal kwadratowy",
                few: "{0} funty na cal kwadratowy",
                many: "{0} funtów na cal kwadratowy",
                other: "{0} funta na cal kwadratowy"
            },
            pressureInchHg: {
                one: "{0} cal słupa rtęci",
                few: "{0} cale słupa rtęci",
                many: "{0} cali słupa rtęci",
                other: "{0} cala słupa rtęci"
            },
            pressureMillibar: {
                one: "{0} millibar",
                few: "{0} millibary",
                many: "{0} millibarów",
                other: "{0} millibara"
            },
            speedKilometerPerHour: {
                one: "{0} kilometr na godzinę",
                few: "{0} kilometry na godzinę",
                many: "{0} kilometrów na godzinę",
                other: "{0} kilometra na godzinę"
            },
            speedMeterPerSecond: {
                one: "{0} metr na sekundę",
                few: "{0} metry na sekundę",
                many: "{0} metrów na sekundę",
                other: "{0} metra na sekundę"
            },
            speedMilePerHour: {
                one: "{0} mila na godzinę",
                few: "{0} mile na godzinę",
                many: "{0} mil na godzinę",
                other: "{0} mili na godzinę"
            },
            speedKnot: {
                one: "{0} węzeł",
                few: "{0} węzły",
                many: "{0} węzłów",
                other: "{0} węzła"
            },
            temperatureGeneric: _xgn390,
            temperatureCelsius: {
                one: "{0} stopień Celsjusza",
                few: "{0} stopnie Celsjusza",
                many: "{0} stopni Celsjusza",
                other: "{0} stopnia Celsjusza"
            },
            temperatureFahrenheit: {
                one: "{0} stopień Fahrenheita",
                few: "{0} stopnie Fahrenheita",
                many: "{0} stopni Fahrenheita",
                other: "{0} stopnia Fahrenheita"
            },
            temperatureKelvin: {
                one: "{0} kelwin",
                few: "{0} kelwiny",
                many: "{0} kelwinów",
                other: "{0} kelwina"
            },
            volumeCubicKilometer: {
                one: "{0} kilometr sześcienny",
                few: "{0} kilometry sześcienne",
                many: "{0} kilometrów sześciennych",
                other: "{0} kilometra sześciennego"
            },
            volumeCubicMeter: {
                one: "{0} metr sześcienny",
                few: "{0} metry sześcienne",
                many: "{0} metrów sześciennych",
                other: "{0} metra sześciennego"
            },
            volumeCubicCentimeter: {
                one: "{0} centymetr sześcienny",
                few: "{0} centymetry sześcienne",
                many: "{0} centymetrów sześciennych",
                other: "{0} centymetra sześciennego"
            },
            volumeCubicMile: {
                one: "{0} mila sześcienna",
                few: "{0} mile sześcienne",
                many: "{0} mil sześciennych",
                other: "{0} mili sześciennej"
            },
            volumeCubicYard: {
                one: "{0} jard sześcienny",
                few: "{0} jardy sześcienne",
                many: "{0} jardów sześciennych",
                other: "{0} jarda sześciennego"
            },
            volumeCubicFoot: {
                one: "{0} stopa sześcienna",
                few: "{0} stopy sześcienne",
                many: "{0} stóp sześciennych",
                other: "{0} stopy sześciennej"
            },
            volumeCubicInch: {
                one: "{0} cal sześcienny",
                few: "{0} cale sześcienne",
                many: "{0} cali sześciennych",
                other: "{0} cala sześciennego"
            },
            volumeMegaliter: {
                one: "{0} megalitr",
                few: "{0} megalitry",
                many: "{0} megalitrów",
                other: "{0} megalitra"
            },
            volumeHectoliter: {
                one: "{0} hektolitr",
                few: "{0} hektolitry",
                many: "{0} hektolitrów",
                other: "{0} hektolitra"
            },
            volumeLiter: {
                one: "{0} litr",
                few: "{0} litry",
                many: "{0} litrów",
                other: "{0} litra"
            },
            volumeDeciliter: {
                one: "{0} decylitr",
                few: "{0} decylitry",
                many: "{0} decylitrów",
                other: "{0} decylitra"
            },
            volumeCentiliter: {
                one: "{0} centylitr",
                few: "{0} centylitry",
                many: "{0} centylitrów",
                other: "{0} centylitra"
            },
            volumeMilliliter: {
                one: "{0} mililitr",
                few: "{0} mililitry",
                many: "{0} mililitrów",
                other: "{0} mililitra"
            },
            volumePintMetric: {
                one: "{0} półkwarta metryczna",
                few: "{0} półkwarty metryczne",
                many: "{0} półkwart metrycznych",
                other: "{0} półkwarty metrycznej"
            },
            volumeCupMetric: {
                one: "{0} ćwierćkwarta metryczna",
                few: "{0} ćwierćkwarty metryczne",
                many: "{0} ćwierćkwart metrycznych",
                other: "{0} ćwierćkwarty metrycznej"
            },
            volumeAcreFoot: {
                one: "{0} akro-stopa",
                few: "{0} akro-stopy",
                many: "{0} akro-stóp",
                other: "{0} akro-stopy"
            },
            volumeGallon: {
                one: "{0} galon",
                few: "{0} galony",
                many: "{0} galonów",
                other: "{0} galona"
            },
            volumeQuart: {
                one: "{0} kwarta",
                few: "{0} kwarty",
                many: "{0} kwart",
                other: "{0} kwarty"
            },
            volumePint: {
                one: "{0} półkwarta",
                few: "{0} półkwarty",
                many: "{0} półkwart",
                other: "{0} półkwarty"
            },
            volumeCup: {
                one: "{0} ćwierćkwarta",
                few: "{0} ćwierćkwarty",
                many: "{0} ćwierćkwart",
                other: "{0} ćwierćkwarty"
            },
            volumeFluidOunce: {
                one: "{0} uncja płynu",
                few: "{0} uncje płynu",
                many: "{0} uncji płynu",
                other: "{0} uncji płynu"
            },
            volumeTablespoon: {
                one: "{0} łyżka stołowa",
                few: "{0} łyżki stołowe",
                many: "{0} łyżek stołowych",
                other: "{0} łyżki stołowej"
            },
            volumeTeaspoon: _xgn416
        },
        compoundUnit: {
            per: "{0} na {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: _xgn35,
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                few: "{0} m/s²",
                many: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: {
                one: "{0} obr.",
                few: "{0} obr.",
                many: "{0} obr.",
                other: "{0} obr."
            },
            angleRadian: {
                one: "{0} rad",
                few: "{0} rad",
                many: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: _xgn25,
            angleArcMinute: _xgn82,
            angleArcSecond: _xgn36,
            areaSquareKilometer: _xgn83,
            areaHectare: _xgn52,
            areaSquareMeter: _xgn53,
            areaSquareCentimeter: {
                one: "{0} cm²",
                few: "{0} cm²",
                many: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: _xgn84,
            areaAcre: _xgn54,
            areaSquareYard: {
                one: "{0} yd²",
                few: "{0} yd²",
                many: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: _xgn85,
            areaSquareInch: {
                one: "{0} in²",
                few: "{0} in²",
                many: "{0} in²",
                other: "{0} in²"
            },
            concentrKarat: _xgn55,
            consumptionLiterPerKilometer: {
                one: "{0} l/km",
                few: "{0} l/km",
                many: "{0} l/km",
                other: "{0} l/km"
            },
            "consumptionLiterPer-100kilometers": {
                one: "l/100 km",
                few: "{0} l/100 km",
                many: "{0} l/100 km",
                other: "{0} l/100 km"
            },
            consumptionMilePerGallon: {
                one: "{0} mpg",
                few: "{0} mpg",
                many: "{0} mpg",
                other: "{0} mpg"
            },
            digitalTerabyte: {
                one: "{0} TB",
                few: "{0} TB",
                many: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                few: "{0} Tb",
                many: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} GB",
                few: "{0} GB",
                many: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gb",
                few: "{0} Gb",
                many: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: {
                one: "{0} MB",
                few: "{0} MB",
                many: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mb",
                few: "{0} Mb",
                many: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: {
                one: "{0} kB",
                few: "{0} kB",
                many: "{0} kB",
                other: "{0} kB"
            },
            digitalKilobit: {
                one: "{0} kb",
                few: "{0} kb",
                many: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: {
                one: "{0} B",
                few: "{0} B",
                many: "{0} B",
                other: "{0} B"
            },
            digitalBit: {
                one: "{0} b",
                few: "{0} b",
                many: "{0} b",
                other: "{0} b"
            },
            durationCentury: _xgn56,
            durationYear: _xgn110,
            durationMonth: {
                one: "{0} mies.",
                few: "{0} mies.",
                many: "{0} mies.",
                other: "{0} mies."
            },
            durationWeek: _xgn232,
            durationDay: _xgn143,
            durationHour: _xgn307,
            durationMinute: _xgn82,
            durationSecond: {
                one: "{0} sek.",
                few: "{0} sek.",
                many: "{0} sek.",
                other: "{0} sek."
            },
            durationMillisecond: _xgn57,
            durationMicrosecond: {
                one: "{0} μs",
                few: "{0} μs",
                many: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                few: "{0} ns",
                many: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                few: "{0} A",
                many: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                few: "{0} mA",
                many: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                few: "{0} Ω",
                many: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                few: "{0} V",
                many: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: {
                one: "{0} kcal",
                few: "{0} kcal",
                many: "{0} kcal",
                other: "{0} kcal"
            },
            energyCalorie: _xgn86,
            energyFoodcalorie: _xgn86,
            energyKilojoule: {
                one: "{0} kJ",
                few: "{0} kJ",
                many: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                few: "{0} J",
                many: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                few: "{0} kWh",
                many: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                few: "{0} GHz",
                many: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                few: "{0} MHz",
                many: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                few: "{0} kHz",
                many: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                few: "{0} Hz",
                many: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: _xgn58,
            lengthMeter: _xgn37,
            lengthDecimeter: {
                one: "{0} dm",
                few: "{0} dm",
                many: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: _xgn59,
            lengthMillimeter: _xgn60,
            lengthMicrometer: {
                one: "{0} µm",
                few: "{0} µm",
                many: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                few: "{0} nm",
                many: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: _xgn61,
            lengthMile: _xgn144,
            lengthYard: _xgn62,
            lengthFoot: _xgn63,
            lengthInch: _xgn26,
            lengthParsec: {
                one: "{0} pc",
                few: "{0} pc",
                many: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: _xgn64,
            lengthAstronomicalUnit: {
                one: "{0} j.a.",
                few: "{0} j.a.",
                many: "{0} j.a.",
                other: "{0} j.a."
            },
            lengthNauticalMile: {
                one: "{0} Mm",
                few: "{0} Mm",
                many: "{0} Mm",
                other: "{0} Mm"
            },
            lengthMileScandinavian: {
                one: "{0} smi",
                few: "{0} smi",
                many: "{0} smi",
                other: "{0} smi"
            },
            lightLux: {
                one: "{0} lx",
                few: "{0} lx",
                many: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: {
                one: "{0} t",
                few: "{0} t",
                many: "{0} t",
                other: "{0} t"
            },
            massKilogram: _xgn65,
            massGram: _xgn38,
            massMilligram: {
                one: "{0} mg",
                few: "{0} mg",
                many: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} µg",
                few: "{0} µg",
                many: "{0} µg",
                other: "{0} µg"
            },
            massTon: {
                one: "{0} tn",
                few: "{0} tn",
                many: "{0} tn",
                other: "{0} tn"
            },
            massPound: _xgn66,
            massOunce: _xgn67,
            massOunceTroy: {
                one: "{0} oz t",
                few: "{0} oz t",
                many: "{0} oz t",
                other: "{0} oz t"
            },
            massCarat: _xgn55,
            powerGigawatt: {
                one: "{0} GW",
                few: "{0} GW",
                many: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                few: "{0} MW",
                many: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: _xgn68,
            powerWatt: _xgn39,
            powerMilliwatt: {
                one: "{0} mW",
                few: "{0} mW",
                many: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: _xgn69,
            pressureHectopascal: _xgn87,
            pressureMillimeterOfMercury: {
                one: "{0} mm Hg",
                few: "{0} mm Hg",
                many: "{0} mm Hg",
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0} psi",
                few: "{0} psi",
                many: "{0} psi",
                other: "{0} psi"
            },
            pressureInchHg: _xgn180,
            pressureMillibar: _xgn181,
            speedKilometerPerHour: _xgn182,
            speedMeterPerSecond: _xgn88,
            speedMilePerHour: _xgn183,
            speedKnot: _xgn56,
            temperatureGeneric: _xgn25,
            temperatureCelsius: {
                one: "{0}°C",
                few: "{0}°C",
                many: "{0}°C",
                other: "{0}°C"
            },
            temperatureFahrenheit: _xgn40,
            temperatureKelvin: {
                one: "{0} K",
                few: "{0} K",
                many: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: _xgn89,
            volumeCubicMeter: {
                one: "{0} m³",
                few: "{0} m³",
                many: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                few: "{0} cm³",
                many: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: _xgn90,
            volumeCubicYard: {
                one: "{0} yd³",
                few: "{0} yd³",
                many: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                few: "{0} ft³",
                many: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: {
                one: "{0} in³",
                few: "{0} in³",
                many: "{0} in³",
                other: "{0} in³"
            },
            volumeMegaliter: {
                one: "{0} Ml",
                few: "{0} Ml",
                many: "{0} Ml",
                other: "{0} Ml"
            },
            volumeHectoliter: {
                one: "{0} hl",
                few: "{0} hl",
                many: "{0} hl",
                other: "{0} hl"
            },
            volumeLiter: _xgn41,
            volumeDeciliter: {
                one: "{0} dl",
                few: "{0} dl",
                many: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} cl",
                few: "{0} cl",
                many: "{0} cl",
                other: "{0} cl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                few: "{0} ml",
                many: "{0} ml",
                other: "{0} ml"
            },
            volumePintMetric: {
                one: "{0} mpt",
                few: "{0} mpt",
                many: "{0} mpt",
                other: "{0} mpt"
            },
            volumeCupMetric: {
                one: "{0} mc",
                few: "{0} mc",
                many: "{0} mc",
                other: "{0} mc"
            },
            volumeAcreFoot: {
                one: "{0} ac ft",
                few: "{0} ac ft",
                many: "{0} ac ft",
                other: "{0} ac ft"
            },
            volumeGallon: {
                one: "{0} gal",
                few: "{0} gal",
                many: "{0} gal",
                other: "{0} gal"
            },
            volumeQuart: {
                one: "{0} qt",
                few: "{0} qt",
                many: "{0} qt",
                other: "{0} qt"
            },
            volumePint: {
                one: "{0} pt",
                few: "{0} pt",
                many: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: {
                one: "{0} c",
                few: "{0} c",
                many: "{0} c",
                other: "{0} c"
            },
            volumeFluidOunce: {
                one: "{0} fl oz",
                few: "{0} fl oz",
                many: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} ł. stoł.",
                few: "{0} ł. stoł.",
                many: "{0} ł. stoł.",
                other: "{0} ł. stoł."
            },
            volumeTeaspoon: _xgn416,
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            massStone: {
                other: "{0} st"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: _xgn35,
            angleDegree: _xgn25,
            angleArcMinute: {
                one: "{0}′",
                few: "{0}′",
                many: "{0}′",
                other: "{0}′"
            },
            angleArcSecond: _xgn26,
            areaSquareKilometer: _xgn83,
            areaHectare: _xgn52,
            areaSquareMeter: _xgn53,
            areaSquareMile: _xgn84,
            areaAcre: _xgn54,
            areaSquareFoot: _xgn85,
            "consumptionLiterPer-100kilometers": {
                one: "{0} l/100 km",
                few: "{0} l/100 km",
                many: "{0} l/100 km",
                other: "{0} l/100 km"
            },
            durationYear: {
                one: "{0} r.",
                few: "{0} l.",
                many: "{0} l.",
                other: "{0} r."
            },
            durationMonth: {
                one: "{0} m-c",
                few: "{0} m-ce",
                many: "{0} m-cy",
                other: "{0} m-ca"
            },
            durationWeek: _xgn232,
            durationDay: {
                one: "{0} d.",
                few: "{0} dn.",
                many: "{0} dn.",
                other: "{0} dn."
            },
            durationHour: _xgn307,
            durationMinute: _xgn82,
            durationSecond: _xgn36,
            durationMillisecond: _xgn57,
            lengthKilometer: _xgn58,
            lengthMeter: _xgn37,
            lengthCentimeter: _xgn59,
            lengthMillimeter: _xgn60,
            lengthPicometer: _xgn61,
            lengthMile: {
                one: "{0} mi",
                few: "{0} mi",
                many: "{0} mi",
                other: "{0} mi"
            },
            lengthYard: _xgn62,
            lengthFoot: _xgn63,
            lengthInch: _xgn26,
            lengthLightYear: _xgn64,
            massKilogram: _xgn65,
            massGram: _xgn38,
            massPound: _xgn66,
            massOunce: _xgn67,
            powerKilowatt: _xgn68,
            powerWatt: _xgn39,
            powerHorsepower: _xgn69,
            pressureHectopascal: _xgn87,
            pressureInchHg: _xgn180,
            pressureMillibar: _xgn181,
            speedKilometerPerHour: _xgn182,
            speedMeterPerSecond: _xgn88,
            speedMilePerHour: _xgn183,
            temperatureCelsius: _xgn25,
            temperatureFahrenheit: _xgn40,
            volumeCubicKilometer: _xgn89,
            volumeCubicMile: _xgn90,
            volumeLiter: _xgn41
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "Czas: {0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} (czas letni)",
        standard: "{0} (czas standardowy)"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "ą", "b", "c", "ć", "d", "e", "ę", "f", "g", "h", "i", "j", "k", "l", "ł", "m", "n", "ń", "o", "ó", "p", "r", "s", "ś", "t", "u", "w", "y", "z", "ź", "ż" ],
        auxiliary: [ "à", "â", "å", "ä", "æ", "ç", "é", "è", "ê", "ë", "î", "ï", "ô", "ö", "œ", "q", "ß", "ù", "û", "ü", "v", "x", "ÿ" ],
        index: [ "A", "Ą", "B", "C", "Ć", "D", "E", "Ę", "F", "G", "H", "I", "J", "K", "L", "Ł", "M", "N", "Ń", "O", "Ó", "P", "Q", "R", "S", "Ś", "T", "U", "V", "W", "X", "Y", "Z", "Ź", "Ż" ],
        punctuation: [ "\\-", "‐", "–", "—", ",", ";", "\\:", "!", "?", ".", "…", "'", '"', "”", "„", "«", "»", "(", ")", "\\[", "\\]", "\\{", "\\}", "§", "@", "*", "/", "\\&", "#", "%", "†", "‡", "′", "″", "°", "~" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0}…",
        "word-initial": "…{0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _xgn502,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _xgn577,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _xgn577,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _xgn502,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _xgn502,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _xgn502,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _xgn502,
        digits: "renderEthiopic"
    },
    finance: _xgn506,
    fullwide: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _xgn502,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _xgn502,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _xgn502,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _xgn502,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _xgn526,
    hansfin: _xgn529,
    hant: _xgn526,
    hantfin: _xgn529,
    hebr: {
        symbols: _xgn502,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _xgn502,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _xgn526,
    jpanfin: _xgn529,
    kali: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _xgn502,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _xgn502,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _xgn502,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _xgn502,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _xgn502,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _xgn502,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _xgn502,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _xgn502,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _xgn506,
    nkoo: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _xgn502,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _xgn502,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _xgn502,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _xgn502,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _xgn502,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _xgn502,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _xgn506,
    vaii: {
        symbols: _xgn502,
        formats: _xgn577,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _xgn502,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _xgn567,
        datePartsOrder: "dmy",
        dateIntervalFormats: _xgn570,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _xgn555,
        dayPeriods: _xgn571,
        monthNames: _xgn561,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _xgn537,
        fields: _xgn580
    },
    chinese: _xgn583,
    coptic: {
        dateFormats: _xgn567,
        datePartsOrder: "dmy",
        dateIntervalFormats: _xgn570,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _xgn555,
        dayPeriods: _xgn571,
        monthNames: {
            format: _xgn545,
            standAlone: _xgn545
        },
        eraNames: _xgn34,
        quarterNames: _xgn537,
        fields: _xgn580
    },
    dangi: _xgn583,
    ethioaa: _xgn581,
    ethiopic: {
        dateFormats: _xgn567,
        datePartsOrder: "dmy",
        dateIntervalFormats: _xgn570,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _xgn555,
        dayPeriods: _xgn571,
        monthNames: {
            format: _xgn548,
            standAlone: _xgn548
        },
        eraNames: _xgn34,
        quarterNames: _xgn537,
        fields: _xgn580
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d MMMM y",
                longDate: "d MMMM y",
                mediumDate: "dd.MM.y",
                shortDate: "dd.MM.y",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "dd.MM.y, HH:mm",
                mediumDateTime: "dd.MM.y, HH:mm:ss",
                longDateTime: "d MMMM y HH:mm:ss z",
                fullDateTime: "EEEE, d MMMM y HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E, d",
                Ehm: "E, h:mm a",
                EHm: "E, HH:mm",
                Ehms: "E, h:mm:ss a",
                EHms: "E, HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d.MM.y G",
                GyMMMEd: "E, d MMM y G",
                GyMMMM: "LLLL y G",
                GyMMMMd: "d MMMM y G",
                GyMMMMEd: "E, d MMMM y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "d.MM",
                MEd: "E, d.MM",
                MMM: "LLL",
                MMMd: "d.MM",
                MMMEd: "E, d.MM",
                MMMMd: "d MMMM",
                MMMMEd: "E, d MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "MM.y",
                yMd: "d.MM.y",
                yMEd: "E, d.MM.y",
                yMMM: "MM.y",
                yMMMd: "d.MM.y",
                yMMMEd: "E, d.MM.y",
                yMMMM: "LLLL y",
                yMMMMd: "d MMMM y",
                yMMMMEd: "E, d MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _xgn3,
            H: {
                H: "HH–HH"
            },
            hm: _xgn47,
            Hm: _xgn11,
            hmv: _xgn78,
            Hmv: _xgn17,
            hv: _xgn4,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "MM–MM"
            },
            Md: _xgn12,
            MEd: _xgn27,
            MMM: {
                M: "LLL–LLL"
            },
            MMMd: _xgn12,
            MMMEd: _xgn27,
            MMMMd: {
                d: "d–d MMMM",
                M: "d MMMM – d MMMM"
            },
            MMMMEd: {
                d: "E, d MMMM – E, d MMMM",
                M: "E, d MMMM – E, d MMMM"
            },
            y: {
                y: "y–y"
            },
            yM: _xgn16,
            yMd: _xgn50,
            yMEd: _xgn452,
            yMMM: _xgn16,
            yMMMd: _xgn50,
            yMMMEd: _xgn452,
            yMMMM: {
                M: "LLLL–LLLL y",
                y: "LLLL y – LLLL y"
            },
            yMMMMd: {
                d: "d–d MMMM y",
                M: "d MMMM – d MMMM y",
                y: "d MMMM y – d MMMM y"
            },
            yMMMMEd: {
                d: "E, d – E, d MMMM y",
                M: "E, d MMMM – E, d MMMM y",
                y: "E, d MMMM y – E, d MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _xgn555,
        dayPeriods: _xgn571,
        monthNames: _xgn561,
        eraNames: {
            wide: [ "p.n.e.", "n.e." ],
            abbreviated: [ "p.n.e.", "n.e." ]
        },
        quarterNames: _xgn537,
        fields: _xgn580
    },
    hebrew: {
        dateFormats: _xgn567,
        datePartsOrder: "dmy",
        dateIntervalFormats: _xgn570,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _xgn555,
        dayPeriods: _xgn571,
        monthNames: {
            format: _xgn543,
            standAlone: _xgn543
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _xgn537,
        fields: _xgn580
    },
    indian: {
        dateFormats: _xgn567,
        datePartsOrder: "dmy",
        dateIntervalFormats: _xgn570,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _xgn555,
        dayPeriods: _xgn571,
        monthNames: {
            format: _xgn549,
            standAlone: _xgn549
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _xgn537,
        fields: _xgn580
    },
    islamic: _xgn582,
    "islamic-umalqura": _xgn582,
    "islamic-tbla": _xgn582,
    "islamic-civil": _xgn582,
    "islamic-rgsa": _xgn582,
    iso8601: _xgn581,
    japanese: {
        dateFormats: _xgn567,
        datePartsOrder: "dmy",
        dateIntervalFormats: _xgn570,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _xgn555,
        dayPeriods: _xgn571,
        monthNames: _xgn561,
        eraNames: {
            wide: _xgn578,
            abbreviated: _xgn578
        },
        quarterNames: _xgn537,
        fields: _xgn580
    },
    persian: {
        dateFormats: _xgn567,
        datePartsOrder: "dmy",
        dateIntervalFormats: _xgn570,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _xgn555,
        dayPeriods: _xgn571,
        monthNames: {
            format: _xgn544,
            standAlone: _xgn544
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _xgn537,
        fields: _xgn580
    },
    roc: {
        dateFormats: _xgn567,
        datePartsOrder: "dmy",
        dateIntervalFormats: _xgn570,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _xgn555,
        dayPeriods: _xgn571,
        monthNames: _xgn561,
        eraNames: {
            wide: [ "Przed ROC", "ROC" ],
            abbreviated: [ "Przed ROC", "ROC" ]
        },
        quarterNames: _xgn537,
        fields: _xgn580
    },
    islamicc: _xgn581
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length;
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 1 && v === 0) return "one";
    if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 && !(i % 100 >= 12 && i % 100 <= 14)) return "few";
    if (v === 0 && !(i === 1) && (i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 || v === 0 && (i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 || v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14))) return "many";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinalMasculine(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderSpelloutCardinalMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculine(Math.floor(n)) + " przecinek " + this.renderSpelloutFraction(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " " + "cardinal" + "few" + "biliardy" + "other" + "biliardów" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 1e15) return "biliard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " " + "cardinal" + "few" + "biliony" + "other" + "bilionów" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 1e12) return "bilion" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " " + "cardinal" + "few" + "miliardy" + "other" + "miliardów" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 1e9) return "miliard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " " + "cardinal" + "few" + "miliony" + "other" + "milionów" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 1e6) return "milion" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e3)) + " " + "cardinal" + "few" + "tysiące" + "other" + "tysięcy" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 1e3) return "tysiąc" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 500) return this.renderSpelloutCardinalFeminine(Math.floor(n / 100)) + "set" + (n === 500 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 300) return this.renderSpelloutCardinalFeminine(Math.floor(n / 100)) + "sta" + (n === 300 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 200) return "dwieście" + (n === 200 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 100) return "sto" + (n === 100 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 20) return this.renderSpelloutCardinalTens(Math.floor(n / 10)) + (n === 20 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 19) return "dziewiętnaście";
    if (n >= 18) return "osiemnaście";
    if (n >= 17) return "siedemnaście";
    if (n >= 16) return "szesnaście";
    if (n >= 15) return "piętnaście";
    if (n >= 14) return "czternaście";
    if (n >= 13) return "trzynaście";
    if (n >= 12) return "dwanaście";
    if (n >= 11) return "jedenaście";
    if (n >= 10) return "dziesięć";
    if (n >= 9) return "dziewięć";
    if (n >= 8) return "osiem";
    if (n >= 7) return "siedem";
    if (n >= 6) return "sześć";
    if (n >= 5) return "pięć";
    if (n >= 4) return "cztery";
    if (n >= 3) return "trzy";
    if (n >= 2) return "dwa";
    if (n >= 1) return "jeden";
    if (n >= 0) return "zero";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderSpelloutFraction = function(n) {
    if (n >= 1e10) return this.renderNumber(Math.floor(n / 1e10), "0");
    if (n >= 1e9) return this.renderSpelloutFractionDigits(Math.floor(n / 1e9));
    if (n >= 1e8) return this.renderSpelloutFractionDigits(Math.floor(n / 1e8));
    if (n >= 1e7) return this.renderSpelloutFractionDigits(Math.floor(n / 1e7));
    if (n >= 1e6) return this.renderSpelloutFractionDigits(Math.floor(n / 1e6));
    if (n >= 1e5) return this.renderSpelloutFractionDigits(Math.floor(n / 1e5));
    if (n >= 1e4) return this.renderSpelloutFractionDigits(Math.floor(n / 1e4));
    if (n >= 1e3) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e3));
    if (n >= 100) return this.renderSpelloutCardinalMasculine(Math.floor(n / 100));
    if (n >= 10) return this.renderSpelloutCardinalMasculine(Math.floor(n / 10));
};

inter.renderSpelloutCardinalFeminine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalFeminine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalFeminine(Math.floor(n)) + " przecinek " + this.renderSpelloutFraction(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " " + "cardinal" + "few" + "biliardy" + "other" + "biliardów" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalFeminineOnes(n % 1e15));
    if (n >= 1e15) return "biliard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " " + "cardinal" + "few" + "biliony" + "other" + "bilionów" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalFeminineOnes(n % 1e12));
    if (n >= 1e12) return "bilion" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " " + "cardinal" + "few" + "miliardy" + "other" + "miliardów" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalFeminineOnes(n % 1e9));
    if (n >= 1e9) return "miliard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " " + "cardinal" + "few" + "miliony" + "other" + "milionów" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalFeminineOnes(n % 1e6));
    if (n >= 1e6) return "milion" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalFeminineOnes(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e3)) + " " + "cardinal" + "few" + "tysiące" + "other" + "tysięcy" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalFeminineOnes(n % 1e3));
    if (n >= 1e3) return "tysiąc" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalFeminineOnes(n % 1e3));
    if (n >= 500) return this.renderSpelloutCardinalFeminine(Math.floor(n / 100)) + "set" + (n === 500 ? "" : " " + this.renderSpelloutCardinalFeminineOnes(n % 100));
    if (n >= 300) return this.renderSpelloutCardinalFeminine(Math.floor(n / 100)) + "sta" + (n === 300 ? "" : " " + this.renderSpelloutCardinalFeminineOnes(n % 100));
    if (n >= 200) return "dwieście" + (n === 200 ? "" : " " + this.renderSpelloutCardinalFeminineOnes(n % 100));
    if (n >= 100) return "sto" + (n === 100 ? "" : " " + this.renderSpelloutCardinalFeminineOnes(n % 100));
    if (n >= 20) return this.renderSpelloutCardinalTens(Math.floor(n / 10)) + (n === 20 ? "" : " " + this.renderSpelloutCardinalFeminineOnes(n % 10));
    if (n >= 19) return "dziewiętnaście";
    if (n >= 18) return "osiemnaście";
    if (n >= 17) return "siedemnaście";
    if (n >= 16) return "szesnaście";
    if (n >= 15) return "piętnaście";
    if (n >= 14) return "czternaście";
    if (n >= 13) return "trzynaście";
    if (n >= 12) return "dwanaście";
    if (n >= 11) return "jedenaście";
    if (n >= 10) return "dziesięć";
    if (n >= 9) return "dziewięć";
    if (n >= 8) return "osiem";
    if (n >= 7) return "siedem";
    if (n >= 6) return "sześć";
    if (n >= 5) return "pięć";
    if (n >= 4) return "cztery";
    if (n >= 3) return "trzy";
    if (n >= 2) return "dwie";
    if (n >= 1) return "jedna";
    if (n >= 0) return "zero";
};

inter.renderSpelloutCardinalTens = function(n) {
    if (n >= 9) return "dziewięćdziesiąt";
    if (n >= 8) return "osiemdziesiąt";
    if (n >= 7) return "siedemdziesiąt";
    if (n >= 6) return "sześćdziesiąt";
    if (n >= 5) return "pięćdziesiąt";
    if (n >= 4) return "czterdzieści";
    if (n >= 3) return "trzydzieści";
    if (n >= 2) return "dwadzieścia";
    if (n >= 1) return "dziesięć";
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.renderSpelloutFractionDigits = function(n) {
    if (n >= 10) return this.renderSpelloutFractionDigits(Math.floor(n / 10)) + " " + this.renderSpelloutFractionDigits(n % 10);
    if (n >= 0) return this.renderSpelloutCardinalMasculine(n);
};

inter.renderSpelloutCardinalFeminineOnes = function(n) {
    if (n >= 2) return this.renderSpelloutCardinalFeminine(n);
    if (n >= 1) return "jeden";
};

inter.renderSpelloutCardinalMasculineGenitiveOnes = function(n) {
    if (n >= 2) return this.renderSpelloutCardinalMasculineGenitive(n);
    if (n >= 1) return "jeden";
};

inter.renderSpelloutCardinalMasculineGenitive = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalMasculineGenitive(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculineGenitive(Math.floor(n)) + " przecinek " + this.renderSpelloutCardinalMasculineGenitive(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalMasculineGenitive(Math.floor(n / 1e15)) + " biliardów" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 1e15));
    if (n >= 1e15) return "biliarda" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalMasculineGenitive(Math.floor(n / 1e12)) + " bilionów" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 1e12));
    if (n >= 1e12) return "biliona" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalMasculineGenitive(Math.floor(n / 1e9)) + " miliardów" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 1e9));
    if (n >= 1e9) return "miliarda" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculineGenitive(Math.floor(n / 1e6)) + " milionów" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 1e6));
    if (n >= 1e6) return "miliona" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalMasculineGenitive(Math.floor(n / 1e3)) + " tysięcy" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 1e3));
    if (n >= 1e3) return "tysiąca" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 1e3));
    if (n >= 500) return this.renderSpelloutCardinalFeminineGenitive(Math.floor(n / 100)) + "set" + (n === 500 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 100));
    if (n >= 300) return this.renderSpelloutCardinalFeminine(Math.floor(n / 100)) + "stu" + (n === 300 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 100));
    if (n >= 200) return "dwustu" + (n === 200 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 100));
    if (n >= 100) return "stu" + (n === 100 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 100));
    if (n >= 20) return this.renderSpelloutCardinalGenitiveTens(Math.floor(n / 10)) + (n === 20 ? "" : " " + this.renderSpelloutCardinalMasculineGenitiveOnes(n % 10));
    if (n >= 19) return "dziewiętnastu";
    if (n >= 18) return "osiemnastu";
    if (n >= 17) return "siedemnastu";
    if (n >= 16) return "szesnastu";
    if (n >= 15) return "piętnastu";
    if (n >= 14) return "czternastu";
    if (n >= 13) return "trzynastu";
    if (n >= 12) return "dwunastu";
    if (n >= 11) return "jedenastu";
    if (n >= 10) return "dziesięciu";
    if (n >= 9) return "dziewięciu";
    if (n >= 8) return "ośmiu";
    if (n >= 7) return "siedmiu";
    if (n >= 6) return "sześciu";
    if (n >= 5) return "pięciu";
    if (n >= 4) return "czterech";
    if (n >= 3) return "trzech";
    if (n >= 2) return "dwóch";
    if (n >= 1) return "jednego";
    if (n >= 0) return "zera";
};

inter.renderSpelloutCardinalFeminineGenitive = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalFeminineGenitive(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalFeminineGenitive(Math.floor(n)) + " przecinek " + this.renderSpelloutCardinalFeminineGenitive(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 2) return this.renderSpelloutCardinalMasculineGenitive(n);
    if (n >= 1) return "jednej";
    if (n >= 0) return "zera";
};

inter.renderSpelloutCardinalGenitiveTens = function(n) {
    if (n >= 9) return "dziewięćdziesięciu";
    if (n >= 8) return "osiemdziesięciu";
    if (n >= 7) return "siedemdziesięciu";
    if (n >= 6) return "sześćdziesięciu";
    if (n >= 5) return "pięćdziesięciu";
    if (n >= 4) return "czterdziestu";
    if (n >= 3) return "trzydziestu";
    if (n >= 2) return "dwudziestu";
    if (n >= 1) return "dziesięciu";
};

inter.timeZones = [].concat(P.timeZones.slice(0, 7), {
    id: "Pacific/Marquesas",
    regionId: "061",
    utcStandardOffsetSeconds: -34200,
    displayName: "Markizy",
    countryId: "PF"
}, P.timeZones.slice(8, 16), P.timeZones.slice(17, 19), {
    id: "Pacific/Pitcairn",
    regionId: "061",
    utcStandardOffsetSeconds: -28800,
    displayName: "Wyspy Pitcairn",
    countryId: "PN"
}, P.timeZones.slice(19, 36), {
    id: "America/North_Dakota/Beulah",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Beulah, Dakota Północna",
    countryId: "US"
}, {
    id: "America/North_Dakota/Center",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Center, Dakota Północna",
    countryId: "US"
}, P.timeZones.slice(38, 40), P.timeZones[43], {
    id: "America/Guatemala",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Gwatemala",
    countryId: "GT"
}, {
    id: "America/Indiana/Knox",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Knox",
    countryId: "US"
}, {
    id: "America/Costa_Rica",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Kostaryka",
    countryId: "CR"
}, P.timeZones.slice(46, 48), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Meksyk (miasto)",
    countryId: "MX"
}, P.timeZones.slice(48, 50), P.timeZones[51], {
    id: "America/North_Dakota/New_Salem",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "New Salem, Dakota Północna",
    countryId: "US"
}, P.timeZones.slice(53, 57), {
    id: "America/El_Salvador",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Salwador",
    countryId: "SV"
}, P.timeZones.slice(57, 61), {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Wyspa Wielkanocna",
    countryId: "CL"
}, P.timeZones.slice(61, 63), {
    id: "America/Cancun",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Cancún",
    countryId: "MX"
}, P.timeZones.slice(65, 69), {
    id: "America/Havana",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Hawana",
    countryId: "CU"
}, P.timeZones.slice(70, 72), {
    id: "America/Jamaica",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Jamajka",
    countryId: "JM"
}, {
    id: "America/Cayman",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Kajmany",
    countryId: "KY"
}, P.timeZones.slice(73, 75), {
    id: "America/Indiana/Marengo",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Marengo",
    countryId: "US"
}, {
    id: "America/Kentucky/Monticello",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Monticello",
    countryId: "US"
}, P.timeZones[77], {
    id: "America/New_York",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Nowy Jork",
    countryId: "US"
}, P.timeZones[79], {
    id: "America/Indiana/Petersburg",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Petersburg",
    countryId: "US"
}, P.timeZones.slice(81, 84), {
    id: "America/Indiana/Vevay",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Vevay",
    countryId: "US"
}, {
    id: "America/Indiana/Vincennes",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Vincennes",
    countryId: "US"
}, {
    id: "America/Indiana/Winamac",
    regionId: "021",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Winamac",
    countryId: "US"
}, P.timeZones.slice(87, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones[91], {
    id: "Atlantic/Bermuda",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Bermudy",
    countryId: "BM"
}, P.timeZones.slice(93, 97), {
    id: "America/Cuiaba",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Cuiabá",
    countryId: "BR"
}, {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, {
    id: "America/Dominica",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Dominika",
    countryId: "DM"
}, P.timeZones.slice(100, 103), {
    id: "America/Guyana",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Gujana",
    countryId: "GY"
}, {
    id: "America/Guadeloupe",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Gwadelupa",
    countryId: "GP"
}, P.timeZones.slice(105, 111), {
    id: "America/Martinique",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Martynika",
    countryId: "MQ"
}, P.timeZones.slice(112, 114), {
    id: "America/Port_of_Spain",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Port-of-Spain",
    countryId: "TT"
}, P.timeZones[115], {
    id: "America/Puerto_Rico",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Portoryko",
    countryId: "PR"
}, {
    id: "America/Thule",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Qaanaaq",
    countryId: "GL"
}, {
    id: "America/St_Kitts",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Kitts",
    countryId: "KN"
}, {
    id: "America/St_Lucia",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Lucia",
    countryId: "LC"
}, {
    id: "America/St_Thomas",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Thomas",
    countryId: "VI"
}, {
    id: "America/St_Vincent",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Vincent",
    countryId: "VC"
}, {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint-Barthélemy",
    countryId: "BL"
}, P.timeZones.slice(117, 119), P.timeZones.slice(125, 128), {
    id: "Antarctica/Palmer",
    utcStandardOffsetSeconds: -10800,
    displayName: "Archipelag Palmera",
    countryId: "AQ"
}, {
    id: "America/Belem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Belém",
    countryId: "BR"
}, P.timeZones.slice(130, 132), P.timeZones.slice(133, 136), {
    id: "America/Cayenne",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Kajenna",
    countryId: "GF"
}, P.timeZones[136], {
    id: "America/Maceio",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Maceió",
    countryId: "BR"
}, P.timeZones.slice(138, 141), P.timeZones.slice(142, 146), P.timeZones[147], {
    id: "America/Bahia",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Salvador",
    countryId: "BR"
}, P.timeZones.slice(148, 152), {
    id: "Antarctica/Rothera",
    utcStandardOffsetSeconds: -10800,
    displayName: "Stacja Naukowa Rothera",
    countryId: "AQ"
}, P.timeZones.slice(152, 155), {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Georgia Południowa",
    countryId: "GS"
}, P.timeZones.slice(155, 157), {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azory",
    countryId: "PT"
}, P.timeZones[160], {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Zielony Przylądek",
    countryId: "CV"
}, {
    id: "Africa/Abidjan",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Abidżan",
    countryId: "CI"
}, {
    id: "Africa/Accra",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Akra",
    countryId: "GH"
}, P.timeZones[163], {
    id: "Africa/Banjul",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Bandżul",
    countryId: "GM"
}, P.timeZones[165], P.timeZones.slice(168, 174), P.timeZones[175], {
    id: "Africa/Conakry",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Konakri",
    countryId: "GN"
}, {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lizbona",
    countryId: "PT"
}, {
    id: "Africa/Lome",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Lomé",
    countryId: "TG"
}, {
    id: "Europe/London",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Londyn",
    countryId: "GB"
}, {
    id: "Atlantic/Madeira",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Madera",
    countryId: "PT"
}, P.timeZones[180], {
    id: "Africa/Nouakchott",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Nawakszut",
    countryId: "MR"
}, {
    id: "Atlantic/Reykjavik",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Rejkiawik",
    countryId: "IS"
}, {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Africa/Ouagadougou",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Wagadugu",
    countryId: "BF"
}, {
    id: "Europe/Isle_of_Man",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Wyspa Man",
    countryId: "IM"
}, {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Wyspy Kanaryjskie",
    countryId: "ES"
}, {
    id: "Atlantic/St_Helena",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Święta Helena",
    countryId: "SH"
}, {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Algier",
    countryId: "DZ"
}, P.timeZones[188], {
    id: "Europe/Andorra",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Andora",
    countryId: "AD"
}, {
    id: "Africa/Bangui",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bangi",
    countryId: "CF"
}, {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrad",
    countryId: "RS"
}, P.timeZones[192], {
    id: "Europe/Bratislava",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bratysława",
    countryId: "SK"
}, P.timeZones[194], {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bruksela",
    countryId: "BE"
}, {
    id: "Europe/Budapest",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Budapeszt",
    countryId: "HU"
}, P.timeZones.slice(197, 200), {
    id: "Africa/Douala",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "Duala",
    countryId: "CM"
}, P.timeZones[203], {
    id: "Africa/Kinshasa",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "Kinszasa",
    countryId: "CD"
}, {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Kopenhaga",
    countryId: "DK"
}, P.timeZones.slice(205, 207), P.timeZones.slice(208, 210), {
    id: "Europe/Ljubljana",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Lublana",
    countryId: "SI"
}, {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luksemburg",
    countryId: "LU"
}, {
    id: "Europe/Madrid",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Madryt",
    countryId: "ES"
}, P.timeZones.slice(212, 214), {
    id: "Europe/Monaco",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Monako",
    countryId: "MC"
}, {
    id: "Africa/Ndjamena",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "Ndżamena",
    countryId: "TD"
}, {
    id: "Africa/Niamey",
    regionId: "011",
    utcStandardOffsetSeconds: 3600,
    displayName: "Niamej",
    countryId: "NE"
}, P.timeZones[217], {
    id: "Europe/Paris",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Paryż",
    countryId: "FR"
}, P.timeZones[219], {
    id: "Africa/Porto-Novo",
    regionId: "011",
    utcStandardOffsetSeconds: 3600,
    displayName: "Porto Novo",
    countryId: "BJ"
}, {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Praga",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Rzym",
    countryId: "IT"
}, P.timeZones[223], {
    id: "Europe/Sarajevo",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Sarajewo",
    countryId: "BA"
}, P.timeZones[225], {
    id: "Europe/Stockholm",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Sztokholm",
    countryId: "SE"
}, {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, P.timeZones[228], {
    id: "Africa/El_Aaiun",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Ujun",
    countryId: "EH"
}, P.timeZones[229], {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Warszawa",
    countryId: "PL"
}, {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Watykan",
    countryId: "VA"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Wiedeń",
    countryId: "AT"
}, {
    id: "Europe/Zagreb",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zagrzeb",
    countryId: "HR"
}, {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zurych",
    countryId: "CH"
}, {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Ateny",
    countryId: "GR"
}, {
    id: "Asia/Beirut",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bejrut",
    countryId: "LB"
}, P.timeZones[237], {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bukareszt",
    countryId: "RO"
}, {
    id: "Africa/Bujumbura",
    regionId: "014",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bużumbura",
    countryId: "BI"
}, {
    id: "Africa/Khartoum",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Chartum",
    countryId: "SD"
}, P.timeZones.slice(242, 248), {
    id: "Asia/Jerusalem",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Jerozolima",
    countryId: "IL"
}, P.timeZones.slice(249, 251), {
    id: "Africa/Cairo",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kair",
    countryId: "EG"
}, P.timeZones[251], P.timeZones[253], {
    id: "Europe/Chisinau",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kiszyniów",
    countryId: "MD"
}, P.timeZones.slice(254, 257), {
    id: "Europe/Mariehamn",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Maarianhamina",
    countryId: "AX"
}, P.timeZones[257], P.timeZones.slice(259, 261), {
    id: "Asia/Nicosia",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Nikozja",
    countryId: "CY"
}, {
    id: "Europe/Riga",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Ryga",
    countryId: "LV"
}, P.timeZones[263], {
    id: "Europe/Tallinn",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Tallin",
    countryId: "EE"
}, {
    id: "Africa/Tripoli",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Trypolis",
    countryId: "LY"
}, {
    id: "Europe/Vilnius",
    regionId: "154",
    utcStandardOffsetSeconds: 7200,
    displayName: "Wilno",
    countryId: "LT"
}, {
    id: "Africa/Windhoek",
    regionId: "018",
    utcStandardOffsetSeconds: 7200,
    displayName: "Windhuk",
    countryId: "NA"
}, {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Addis Abeba",
    countryId: "ET"
}, P.timeZones.slice(269, 271), {
    id: "Indian/Antananarivo",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Antananarywa",
    countryId: "MG"
}, P.timeZones[272], {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdad",
    countryId: "IQ"
}, {
    id: "Asia/Bahrain",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bahrajn",
    countryId: "BH"
}, {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damaszek",
    countryId: "SY"
}, {
    id: "Africa/Dar_es_Salaam",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Dar es-Salaam",
    countryId: "TZ"
}, {
    id: "Africa/Djibouti",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Dżibuti",
    countryId: "DJ"
}, P.timeZones[280], {
    id: "Asia/Qatar",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Katar",
    countryId: "QA"
}, P.timeZones[281], {
    id: "Indian/Comoro",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Komory",
    countryId: "KM"
}, {
    id: "Asia/Kuwait",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Kuwejt",
    countryId: "KW"
}, {
    id: "Indian/Mayotte",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Majotta",
    countryId: "YT"
}, {
    id: "Europe/Minsk",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Mińsk",
    countryId: "BY"
}, {
    id: "Africa/Mogadishu",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Mogadiszu",
    countryId: "SO"
}, {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moskwa",
    countryId: "RU"
}, P.timeZones[287], {
    id: "Asia/Riyadh",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Rijad",
    countryId: "SA"
}, {
    id: "Antarctica/Syowa",
    utcStandardOffsetSeconds: 10800,
    displayName: "Stacja Syowa",
    countryId: "AQ"
}, {
    id: "Europe/Istanbul",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Stambuł",
    countryId: "TR"
}, {
    id: "Europe/Simferopol",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Symferopol",
    countryId: "UA"
}, {
    id: "Europe/Volgograd",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Wołgograd",
    countryId: "RU"
}, {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Teheran",
    countryId: "IR"
}, P.timeZones.slice(294, 296), {
    id: "Asia/Dubai",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Dubaj",
    countryId: "AE"
}, {
    id: "Asia/Yerevan",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Erywań",
    countryId: "AM"
}, {
    id: "Indian/Mahe",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Mahé",
    countryId: "SC"
}, {
    id: "Asia/Muscat",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Maskat",
    countryId: "OM"
}, P.timeZones[298], {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Réunion",
    countryId: "RE"
}, P.timeZones.slice(301, 305), P.timeZones[306], {
    id: "Asia/Aqtau",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aktau",
    countryId: "KZ"
}, {
    id: "Asia/Aqtobe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aktiubińsk",
    countryId: "KZ"
}, {
    id: "Asia/Ashgabat",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aszchabad",
    countryId: "TM"
}, P.timeZones[310], {
    id: "Asia/Dushanbe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Duszanbe",
    countryId: "TJ"
}, {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Jekaterynburg",
    countryId: "RU"
}, {
    id: "Asia/Karachi",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Karaczi",
    countryId: "PK"
}, {
    id: "Asia/Qyzylorda",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Kyzył Orda",
    countryId: "KZ"
}, {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Malediwy",
    countryId: "MV"
}, {
    id: "Asia/Samarkand",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Samarkanda",
    countryId: "UZ"
}, {
    id: "Asia/Tashkent",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Taszkient",
    countryId: "UZ"
}, {
    id: "Asia/Oral",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Uralsk",
    countryId: "KZ"
}, {
    id: "Antarctica/Mawson",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Wybrzeże Mawsona",
    countryId: "AQ"
}, {
    id: "Indian/Kerguelen",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Wyspy Kerguelena",
    countryId: "TF"
}, P.timeZones[322], {
    id: "Asia/Colombo",
    regionId: "034",
    utcStandardOffsetSeconds: 19800,
    displayName: "Kolombo",
    countryId: "LK"
}, P.timeZones[323], {
    id: "Asia/Almaty",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Ałma Ata",
    countryId: "KZ"
}, {
    id: "Asia/Bishkek",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Biszkek",
    countryId: "KG"
}, {
    id: "Indian/Chagos",
    utcStandardOffsetSeconds: 21600,
    displayName: "Czagos",
    countryId: "IO"
}, {
    id: "Asia/Dhaka",
    regionId: "034",
    utcStandardOffsetSeconds: 21600,
    displayName: "Dakka",
    countryId: "BD"
}, P.timeZones.slice(328, 330), {
    id: "Antarctica/Vostok",
    utcStandardOffsetSeconds: 21600,
    displayName: "Stacja Wostok",
    countryId: "AQ"
}, P.timeZones[330], {
    id: "Asia/Urumqi",
    regionId: "030",
    utcStandardOffsetSeconds: 21600,
    displayName: "Urumczi",
    countryId: "CN"
}, {
    id: "Indian/Cocos",
    utcStandardOffsetSeconds: 23400,
    displayName: "Wyspy Kokosowe",
    countryId: "CC"
}, P.timeZones.slice(334, 337), {
    id: "Asia/Jakarta",
    regionId: "035",
    utcStandardOffsetSeconds: 25200,
    displayName: "Dżakarta",
    countryId: "ID"
}, P.timeZones[339], {
    id: "Asia/Hovd",
    regionId: "030",
    utcStandardOffsetSeconds: 25200,
    displayName: "Howd",
    countryId: "MN"
}, {
    id: "Asia/Krasnoyarsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Krasnojarsk",
    countryId: "RU"
}, {
    id: "Asia/Novokuznetsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Nowokuźnieck",
    countryId: "RU"
}, {
    id: "Asia/Novosibirsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Nowosybirsk",
    countryId: "RU"
}, P.timeZones.slice(345, 347), {
    id: "Antarctica/Davis",
    utcStandardOffsetSeconds: 25200,
    displayName: "Stacja Davis",
    countryId: "AQ"
}, P.timeZones[347], {
    id: "Asia/Vientiane",
    regionId: "035",
    utcStandardOffsetSeconds: 25200,
    displayName: "Wientian",
    countryId: "LA"
}, {
    id: "Indian/Christmas",
    utcStandardOffsetSeconds: 25200,
    displayName: "Wyspa Bożego Narodzenia",
    countryId: "CX"
}, P.timeZones[349], {
    id: "Asia/Choibalsan",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Czojbalsan",
    countryId: "MN"
}, {
    id: "Asia/Hong_Kong",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Hongkong",
    countryId: "HK"
}, {
    id: "Asia/Irkutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 28800,
    displayName: "Irkuck",
    countryId: "RU"
}, P.timeZones[353], {
    id: "Asia/Kuching",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Kuczing",
    countryId: "MY"
}, P.timeZones[356], {
    id: "Asia/Macau",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Makau",
    countryId: "MO"
}, P.timeZones.slice(357, 359), {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Singapur",
    countryId: "SG"
}, {
    id: "Asia/Shanghai",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Szanghaj",
    countryId: "CN"
}, {
    id: "Asia/Taipei",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Tajpej",
    countryId: "TW"
}, {
    id: "Asia/Ulaanbaatar",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Ułan Bator",
    countryId: "MN"
}, P.timeZones[363], {
    id: "Asia/Khandyga",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Chandyga",
    countryId: "RU"
}, P.timeZones.slice(364, 366), {
    id: "Asia/Yakutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jakuck",
    countryId: "RU"
}, P.timeZones[366], P.timeZones[368], {
    id: "Asia/Pyongyang",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Pjongjang",
    countryId: "KP"
}, {
    id: "Asia/Seoul",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Seul",
    countryId: "KR"
}, {
    id: "Asia/Tokyo",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tokio",
    countryId: "JP"
}, {
    id: "Australia/Adelaide",
    regionId: "053",
    utcStandardOffsetSeconds: 34200,
    displayName: "Adelajda",
    countryId: "AU"
}, P.timeZones.slice(374, 388), {
    id: "Asia/Vladivostok",
    regionId: "151",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Władywostok",
    countryId: "RU"
}, {
    id: "Australia/Lord_Howe",
    regionId: "053",
    utcStandardOffsetSeconds: 37800,
    displayName: "Wyspa Lord Howe",
    countryId: "AU"
}, P.timeZones[390], P.timeZones.slice(392, 397), {
    id: "Pacific/Noumea",
    regionId: "054",
    utcStandardOffsetSeconds: 39600,
    displayName: "Numea",
    countryId: "NC"
}, P.timeZones[398], {
    id: "Asia/Sakhalin",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Sachalin",
    countryId: "RU"
}, {
    id: "Asia/Srednekolymsk",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Sriedniekołymsk",
    countryId: "RU"
}, {
    id: "Antarctica/Casey",
    utcStandardOffsetSeconds: 39600,
    displayName: "Stacja Casey",
    countryId: "AQ"
}, P.timeZones.slice(401, 403), {
    id: "Pacific/Fiji",
    regionId: "054",
    utcStandardOffsetSeconds: 43200,
    displayName: "Fidżi",
    countryId: "FJ"
}, P.timeZones[404], {
    id: "Asia/Kamchatka",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Kamczatka",
    countryId: "RU"
}, P.timeZones.slice(406, 408), {
    id: "Antarctica/McMurdo",
    utcStandardOffsetSeconds: 43200,
    displayName: "Mc Murdo",
    countryId: "AQ"
}, P.timeZones.slice(409, 419));

inter.territories = [ _xgn292, _xgn341, _xgn438, _xgn424, _xgn431, _xgn432, _xgn425, _xgn191, _xgn233, _xgn360, _xgn447, _xgn475, _xgn433, _xgn148, _xgn149, _xgn234, _xgn46, _xgn382, _xgn370, _xgn268, _xgn192, _xgn112, _xgn403, _xgn269, _xgn193, _xgn316, _xgn322, _xgn426, _xgn465, _xgn413, _xgn414, _xgn411, _xgn150, _xgn194, _xgn293, _xgn235, _xgn151, _xgn152, _xgn113, _xgn195, _xgn153, _xgn236, _xgn196, _xgn237, _xgn407, _xgn238, _xgn383, _xgn439, _xgn448, _xgn323, _xgn197, _xgn239, _xgn77, _xgn114, _xgn115, _xgn270, _xgn49, _xgn198, _xgn98, _xgn99, _xgn294, _xgn154, _xgn329, _xgn453, _xgn116, _xgn457, _xgn51, _xgn240, _xgn295, _xgn199, _xgn117, _xgn200, _xgn201, _xgn202, _xgn203, _xgn342, _xgn440, _xgn427, _xgn434, _xgn435, _xgn271, _xgn118, _xgn241, _xgn272, _xgn204, _xgn463, _xgn119, _xgn155, _xgn441, _xgn120, _xgn273, _xgn156, _xgn205, _xgn296, _xgn157, _xgn100, _xgn242, _xgn158, _xgn371, _xgn274, _xgn275, _xgn159, _xgn330, _xgn372, _xgn121, _xgn276, _xgn243, _xgn244, _xgn122, _xgn277, _xgn101, _xgn102, _xgn245, _xgn246, _xgn160, _xgn206, _xgn207, _xgn123, _xgn161, _xgn247, _xgn208, _xgn248, _xgn209, _xgn162, _xgn361, _xgn124, _xgn297, _xgn125, _xgn278, _xgn249, _xgn250, _xgn163, _xgn126, _xgn373, _xgn343, _xgn210, _xgn279, _xgn103, _xgn164, _xgn104, _xgn211, _xgn127, _xgn212, _xgn128, _xgn331, _xgn129, _xgn298, _xgn280, _xgn299, _xgn213, _xgn165, _xgn251, _xgn214, _xgn105, _xgn130, _xgn374, _xgn166, _xgn281, _xgn300, _xgn282, _xgn167, _xgn384, _xgn301, _xgn344, _xgn168, _xgn252, _xgn302, _xgn253, _xgn254, _xgn215, _xgn131, _xgn132, _xgn412, _xgn169, _xgn133, _xgn216, _xgn283, _xgn106, _xgn217, _xgn255, _xgn345, _xgn332, _xgn362, {
    id: "QO",
    displayName: "Oceania inne",
    regionId: "009",
    hasTimeZones: false
}, _xgn107, _xgn256, _xgn134, _xgn170, _xgn385, _xgn257, _xgn108, _xgn258, _xgn386, _xgn404, _xgn171, _xgn284, _xgn303, _xgn442, _xgn454, _xgn458, _xgn455, _xgn218, _xgn135, _xgn219, _xgn172, _xgn408, _xgn387, _xgn375, _xgn405, _xgn317, _xgn443, _xgn376, _xgn324, _xgn428, _xgn259, _xgn136, _xgn394, _xgn304, _xgn220, _xgn173, _xgn221, _xgn325, _xgn260, _xgn326, _xgn222, _xgn285, _xgn388, _xgn137, _xgn138, _xgn377, _xgn223, _xgn409, _xgn139, _xgn305, _xgn224, _xgn261, _xgn262, _xgn318, _xgn286, _xgn174, _xgn263, _xgn415, _xgn346, _xgn109, _xgn225, _xgn140, _xgn81, _xgn389, _xgn226, _xgn175, _xgn327, _xgn347, _xgn176, _xgn177, _xgn227, _xgn228, _xgn306, _xgn229, _xgn363, _xgn230, _xgn287, _xgn364, _xgn231, _xgn73, _xgn264, _xgn288, _xgn265, _xgn410, _xgn365, _xgn319, _xgn471, _xgn289, _xgn97, _xgn74, _xgn366, _xgn320, _xgn348, _xgn466, _xgn141, _xgn178, _xgn179, _xgn266, _xgn456, _xgn142, _xgn33 ];

inter.regions = [ _xgn341, _xgn438, _xgn424, _xgn431, _xgn432, _xgn425, _xgn360, _xgn447, _xgn475, _xgn433, _xgn403, _xgn322, _xgn426, _xgn465, _xgn413, _xgn414, _xgn411, _xgn342, _xgn440, _xgn427, _xgn434, _xgn435, _xgn361, _xgn384, _xgn362, _xgn386, _xgn442, _xgn33 ];

inter.countries = [ _xgn292, _xgn191, _xgn233, _xgn148, _xgn149, _xgn234, _xgn46, _xgn382, _xgn370, _xgn268, _xgn192, _xgn112, _xgn269, _xgn193, _xgn316, _xgn150, _xgn194, _xgn293, _xgn235, _xgn151, _xgn152, _xgn113, _xgn195, _xgn153, _xgn236, _xgn196, _xgn237, _xgn407, _xgn238, _xgn383, _xgn439, _xgn448, _xgn323, _xgn197, _xgn239, _xgn77, _xgn114, _xgn115, _xgn270, _xgn49, _xgn198, _xgn98, _xgn99, _xgn294, _xgn154, _xgn329, _xgn453, _xgn116, _xgn457, _xgn51, _xgn240, _xgn295, _xgn199, _xgn117, _xgn200, _xgn201, _xgn202, _xgn203, _xgn271, _xgn118, _xgn241, _xgn272, _xgn204, _xgn463, _xgn119, _xgn155, _xgn441, _xgn120, _xgn273, _xgn156, _xgn205, _xgn296, _xgn157, _xgn100, _xgn242, _xgn158, _xgn371, _xgn274, _xgn275, _xgn159, _xgn330, _xgn372, _xgn121, _xgn276, _xgn243, _xgn244, _xgn122, _xgn277, _xgn101, _xgn102, _xgn245, _xgn246, _xgn160, _xgn206, _xgn207, _xgn123, _xgn161, _xgn247, _xgn208, _xgn248, _xgn209, _xgn162, _xgn124, _xgn297, _xgn125, _xgn278, _xgn249, _xgn250, _xgn163, _xgn126, _xgn373, _xgn343, _xgn210, _xgn279, _xgn103, _xgn164, _xgn104, _xgn211, _xgn127, _xgn212, _xgn128, _xgn331, _xgn129, _xgn298, _xgn280, _xgn299, _xgn213, _xgn165, _xgn251, _xgn214, _xgn105, _xgn130, _xgn374, _xgn166, _xgn281, _xgn300, _xgn282, _xgn167, _xgn301, _xgn344, _xgn168, _xgn252, _xgn302, _xgn253, _xgn254, _xgn215, _xgn131, _xgn132, _xgn412, _xgn169, _xgn133, _xgn216, _xgn283, _xgn106, _xgn217, _xgn255, _xgn345, _xgn332, _xgn107, _xgn256, _xgn134, _xgn170, _xgn385, _xgn257, _xgn108, _xgn258, _xgn404, _xgn171, _xgn284, _xgn303, _xgn454, _xgn458, _xgn455, _xgn218, _xgn135, _xgn219, _xgn172, _xgn408, _xgn387, _xgn375, _xgn405, _xgn317, _xgn443, _xgn376, _xgn324, _xgn428, _xgn259, _xgn136, _xgn394, _xgn304, _xgn220, _xgn173, _xgn221, _xgn325, _xgn260, _xgn326, _xgn222, _xgn285, _xgn388, _xgn137, _xgn138, _xgn377, _xgn223, _xgn409, _xgn139, _xgn305, _xgn224, _xgn261, _xgn262, _xgn318, _xgn286, _xgn174, _xgn263, _xgn415, _xgn346, _xgn109, _xgn225, _xgn140, _xgn81, _xgn389, _xgn226, _xgn175, _xgn327, _xgn347, _xgn176, _xgn177, _xgn227, _xgn228, _xgn306, _xgn229, _xgn363, _xgn230, _xgn287, _xgn364, _xgn231, _xgn73, _xgn264, _xgn288, _xgn265, _xgn410, _xgn365, _xgn319, _xgn471, _xgn289, _xgn97, _xgn74, _xgn366, _xgn320, _xgn348, _xgn466, _xgn141, _xgn178, _xgn179, _xgn266, _xgn456, _xgn142 ];

inter.languages = [ {
    id: "ab",
    displayName: "abchaski"
}, {
    id: "ace",
    displayName: "aceh"
}, {
    id: "ach",
    displayName: "aczoli"
}, {
    id: "ada",
    displayName: "adangme"
}, {
    id: "ady",
    displayName: "adygejski"
}, {
    id: "aa",
    displayName: "afar"
}, {
    id: "afh",
    displayName: "afrihili"
}, {
    id: "af",
    displayName: "afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ay",
    displayName: "ajmara"
}, {
    id: "ain",
    displayName: "ajnu"
}, {
    id: "akk",
    displayName: "akadyjski"
}, {
    id: "ak",
    displayName: "akan",
    nativeDisplayName: "Akan"
}, {
    id: "bss",
    displayName: "akose"
}, {
    id: "akz",
    displayName: "alabama"
}, {
    id: "aln",
    displayName: "albański gegijski"
}, {
    id: "ale",
    displayName: "aleucki"
}, {
    id: "arq",
    displayName: "algierski arabski"
}, {
    id: "en_us",
    displayName: "amerykański angielski",
    nativeDisplayName: "American English"
}, {
    id: "ase",
    displayName: "amerykański język migowy"
}, {
    id: "smn",
    displayName: "lapoński Inari",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "anp",
    displayName: "angika"
}, {
    id: "njo",
    displayName: "ao"
}, {
    id: "shu",
    displayName: "arabski (Czad)"
}, {
    id: "an",
    displayName: "aragoński"
}, {
    id: "arc",
    displayName: "aramejski"
}, {
    id: "aro",
    displayName: "araona"
}, {
    id: "arp",
    displayName: "arapaho"
}, {
    id: "arn",
    displayName: "araukański"
}, {
    id: "arw",
    displayName: "arawak"
}, {
    id: "rup",
    displayName: "arumuński"
}, {
    id: "ast",
    displayName: "asturyjski",
    nativeDisplayName: "asturianu"
}, {
    id: "cch",
    displayName: "atsam"
}, {
    id: "en_au",
    displayName: "australijski angielski",
    nativeDisplayName: "Australian English"
}, {
    id: "awa",
    displayName: "awadhi"
}, {
    id: "av",
    displayName: "awarski"
}, {
    id: "ae",
    displayName: "awestyjski"
}, {
    id: "az",
    displayName: "azerski",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "bqi",
    displayName: "bachtiarski"
}, {
    id: "bfq",
    displayName: "badaga"
}, {
    id: "bfd",
    displayName: "bafut"
}, {
    id: "ms",
    displayName: "malajski",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "ban",
    displayName: "balijski"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bax",
    displayName: "bamum"
}, {
    id: "bjn",
    displayName: "banjar"
}, {
    id: "ba",
    displayName: "baszkirski"
}, {
    id: "bbc",
    displayName: "batak toba"
}, {
    id: "bar",
    displayName: "bawarski"
}, {
    id: "bej",
    displayName: "bedża"
}, {
    id: "bal",
    displayName: "beludżi"
}, {
    id: "bgn",
    displayName: "beludżi północny"
}, {
    id: "bew",
    displayName: "betawi"
}, {
    id: "bho",
    displayName: "bhodźpuri"
}, {
    id: "bik",
    displayName: "bikol"
}, {
    id: "bin",
    displayName: "bini"
}, {
    id: "bi",
    displayName: "bislama"
}, {
    id: "bpy",
    displayName: "bisznuprija-manipuri"
}, {
    id: "byn",
    displayName: "blin"
}, {
    id: "zbl",
    displayName: "bliss"
}, {
    id: "bs",
    displayName: "bośniacki",
    nativeDisplayName: "bosanski"
}, {
    id: "bra",
    displayName: "bradź"
}, {
    id: "brh",
    displayName: "brahui"
}, {
    id: "zxx",
    displayName: "brak treści o charakterze językowym"
}, {
    id: "br",
    displayName: "bretoński",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "brytyjski angielski",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "bugiński"
}, {
    id: "bum",
    displayName: "bulu"
}, {
    id: "bua",
    displayName: "buriacki"
}, {
    id: "tkr",
    displayName: "cachurski"
}, {
    id: "frc",
    displayName: "cajun"
}, {
    id: "tsd",
    displayName: "cakoński"
}, {
    id: "en_ca",
    displayName: "kanadyjski angielski",
    nativeDisplayName: "Canadian English"
}, {
    id: "cps",
    displayName: "capiznon"
}, {
    id: "ca",
    displayName: "kataloński",
    nativeDisplayName: "català"
}, {
    id: "ceb",
    displayName: "cebuano"
}, {
    id: "ch",
    displayName: "chamorro"
}, {
    id: "kde",
    displayName: "makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "qug",
    displayName: "chimborazo górski keczua"
}, {
    id: "chp",
    displayName: "chipewyan"
}, {
    id: "sn",
    displayName: "szona",
    nativeDisplayName: "chiShona"
}, {
    id: "lzh",
    displayName: "chiński klasyczny"
}, {
    id: "cho",
    displayName: "choctaw"
}, {
    id: "kho",
    displayName: "chotański"
}, {
    id: "mus",
    displayName: "creek"
}, {
    id: "rom",
    displayName: "cygański"
}, {
    id: "cy",
    displayName: "walijski",
    nativeDisplayName: "Cymraeg"
}, {
    id: "chg",
    displayName: "czagatajski"
}, {
    id: "chb",
    displayName: "czibcza"
}, {
    id: "za",
    displayName: "czuang"
}, {
    id: "cv",
    displayName: "czuwaski"
}, {
    id: "dak",
    displayName: "dakota"
}, {
    id: "da",
    displayName: "duński",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "dargwijski"
}, {
    id: "se",
    displayName: "lapoński północny",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "dzg",
    displayName: "dazaga"
}, {
    id: "del",
    displayName: "delaware"
}, {
    id: "de",
    displayName: "niemiecki",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "dinka"
}, {
    id: "doi",
    displayName: "dogri"
}, {
    id: "dgr",
    displayName: "dogrib"
}, {
    id: "nds",
    displayName: "dolnoniemiecki"
}, {
    id: "dsb",
    displayName: "dolnołużycki",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "sli",
    displayName: "dolnośląski"
}, {
    id: "dtp",
    displayName: "dusun centralny"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "dyu",
    displayName: "dyula"
}, {
    id: "et",
    displayName: "estoński",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efik"
}, {
    id: "arz",
    displayName: "egipski arabski"
}, {
    id: "eka",
    displayName: "ekajuk"
}, {
    id: "guz",
    displayName: "gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "elx",
    displayName: "elamicki"
}, {
    id: "egl",
    displayName: "emilijski"
}, {
    id: "en",
    displayName: "angielski",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "erzya"
}, {
    id: "es",
    displayName: "hiszpański",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "europejski hiszpański",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "meksykański hiszpański",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "amerykański hiszpański",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "ext",
    displayName: "estremadurski"
}, {
    id: "eu",
    displayName: "baskijski",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ee",
    displayName: "ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "fang"
}, {
    id: "fat",
    displayName: "fanti"
}, {
    id: "phn",
    displayName: "fenicki"
}, {
    id: "fj",
    displayName: "fidżijski"
}, {
    id: "fil",
    displayName: "filipino",
    nativeDisplayName: "Filipino"
}, {
    id: "fon",
    displayName: "fon"
}, {
    id: "gur",
    displayName: "frafra"
}, {
    id: "frp",
    displayName: "franko-prowansalski"
}, {
    id: "fr",
    displayName: "francuski",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "kanadyjski francuski",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "szwajcarski francuski",
    nativeDisplayName: "français suisse"
}, {
    id: "stq",
    displayName: "fryzyjski saterlandzki"
}, {
    id: "frs",
    displayName: "fryzyjski wschodni"
}, {
    id: "fur",
    displayName: "friulijski",
    nativeDisplayName: "furlan"
}, {
    id: "fo",
    displayName: "farerski",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "ga"
}, {
    id: "ga",
    displayName: "irlandzki",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "gagauski"
}, {
    id: "gl",
    displayName: "galicyjski",
    nativeDisplayName: "galego"
}, {
    id: "gan",
    displayName: "gan"
}, {
    id: "gay",
    displayName: "gayo"
}, {
    id: "gba",
    displayName: "gbaya"
}, {
    id: "bbj",
    displayName: "ghomala"
}, {
    id: "ki",
    displayName: "kikuju",
    nativeDisplayName: "Gikuyu"
}, {
    id: "gil",
    displayName: "gilbertański"
}, {
    id: "glk",
    displayName: "giliański"
}, {
    id: "got",
    displayName: "gocki"
}, {
    id: "gon",
    displayName: "gondi"
}, {
    id: "gor",
    displayName: "gorontalo"
}, {
    id: "grb",
    displayName: "grebo"
}, {
    id: "gn",
    displayName: "guarani"
}, {
    id: "gwi",
    displayName: "gwichʼin"
}, {
    id: "gez",
    displayName: "gyyz"
}, {
    id: "gd",
    displayName: "szkocki gaelicki",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "hai",
    displayName: "haida"
}, {
    id: "ht",
    displayName: "haitański"
}, {
    id: "hak",
    displayName: "hakka"
}, {
    id: "ha",
    displayName: "hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "hz",
    displayName: "herero"
}, {
    id: "hit",
    displayName: "hetycki"
}, {
    id: "bez",
    displayName: "bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hil",
    displayName: "hiligajnon"
}, {
    id: "hif",
    displayName: "hindi fidżyjskie"
}, {
    id: "ho",
    displayName: "hiri motu"
}, {
    id: "hmn",
    displayName: "hmongijski"
}, {
    id: "hsb",
    displayName: "górnołużycki",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "chorwacki",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "hupa"
}, {
    id: "iba",
    displayName: "ibanag"
}, {
    id: "ibb",
    displayName: "ibibio"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "io",
    displayName: "ido"
}, {
    id: "ig",
    displayName: "igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "ilokano"
}, {
    id: "id",
    displayName: "indonezyjski",
    nativeDisplayName: "Indonesia"
}, {
    id: "izh",
    displayName: "ingryjski"
}, {
    id: "inh",
    displayName: "inguski"
}, {
    id: "ia",
    displayName: "interlingua"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "iu",
    displayName: "inuktitut"
}, {
    id: "ik",
    displayName: "inupiak"
}, {
    id: "sbp",
    displayName: "sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "ndebele północny",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "włoski",
    nativeDisplayName: "italiano"
}, {
    id: "jam",
    displayName: "jamajski"
}, {
    id: "yap",
    displayName: "japski"
}, {
    id: "jv",
    displayName: "jawajski"
}, {
    id: "kaj",
    displayName: "jju"
}, {
    id: "dyo",
    displayName: "diola",
    nativeDisplayName: "joola"
}, {
    id: "jrb",
    displayName: "judeoarabski"
}, {
    id: "jpr",
    displayName: "judeoperski"
}, {
    id: "jut",
    displayName: "jutlandzki"
}, {
    id: "chy",
    displayName: "język Czejenów"
}, {
    id: "root",
    displayName: "język rdzenny"
}, {
    id: "kbd",
    displayName: "kabardyjski"
}, {
    id: "kea",
    displayName: "kreolski Wysp Zielonego Przylądka",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kac",
    displayName: "kaczin"
}, {
    id: "cad",
    displayName: "kaddo"
}, {
    id: "kgp",
    displayName: "kaingang"
}, {
    id: "cay",
    displayName: "kajuga"
}, {
    id: "kkj",
    displayName: "kako",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "grenlandzki",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "kbl",
    displayName: "kanembu"
}, {
    id: "kr",
    displayName: "kanuri"
}, {
    id: "krc",
    displayName: "karaczajsko-bałkarski"
}, {
    id: "kaa",
    displayName: "karakałpacki"
}, {
    id: "krl",
    displayName: "karelski"
}, {
    id: "car",
    displayName: "karibi"
}, {
    id: "csb",
    displayName: "kaszubski"
}, {
    id: "kaw",
    displayName: "kawi"
}, {
    id: "xal",
    displayName: "kałmucki"
}, {
    id: "ken",
    displayName: "kenyang"
}, {
    id: "kw",
    displayName: "kornijski",
    nativeDisplayName: "kernewek"
}, {
    id: "kha",
    displayName: "khasi"
}, {
    id: "naq",
    displayName: "nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "xh",
    displayName: "khosa"
}, {
    id: "khw",
    displayName: "khowar"
}, {
    id: "quc",
    displayName: "kicze"
}, {
    id: "rof",
    displayName: "rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "machame",
    nativeDisplayName: "Kimachame"
}, {
    id: "kmb",
    displayName: "kimbundu"
}, {
    id: "krj",
    displayName: "kinaraya"
}, {
    id: "rw",
    displayName: "kinya-ruanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asu",
    nativeDisplayName: "Kipare"
}, {
    id: "kiu",
    displayName: "kirmandżki"
}, {
    id: "rwk",
    displayName: "rwa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "sambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "suahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "kongijski suahili",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "ateso",
    nativeDisplayName: "Kiteso"
}, {
    id: "tlh",
    displayName: "klingoński"
}, {
    id: "bkm",
    displayName: "kom"
}, {
    id: "kv",
    displayName: "komi"
}, {
    id: "koi",
    displayName: "komi-permiacki"
}, {
    id: "swb",
    displayName: "komoryjski"
}, {
    id: "kg",
    displayName: "kongo"
}, {
    id: "gom",
    displayName: "konkani (Goa)"
}, {
    id: "cop",
    displayName: "koptyjski"
}, {
    id: "kfo",
    displayName: "koro"
}, {
    id: "co",
    displayName: "korsykański"
}, {
    id: "kos",
    displayName: "kosrae"
}, {
    id: "avk",
    displayName: "kotava"
}, {
    id: "khq",
    displayName: "koyra chini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "koyraboro senni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "kpe",
    displayName: "kpelle"
}, {
    id: "mfe",
    displayName: "kreolski Mauritiusa",
    nativeDisplayName: "kreol morisien"
}, {
    id: "cr",
    displayName: "kri"
}, {
    id: "kri",
    displayName: "krio"
}, {
    id: "crh",
    displayName: "krymski turecki"
}, {
    id: "kum",
    displayName: "kumycki"
}, {
    id: "ku",
    displayName: "kurdyjski"
}, {
    id: "kru",
    displayName: "kurukh"
}, {
    id: "kut",
    displayName: "kutenai"
}, {
    id: "kj",
    displayName: "kwanyama"
}, {
    id: "nmg",
    displayName: "ngumba",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ksh",
    displayName: "gwara kolońska",
    nativeDisplayName: "Kölsch"
}, {
    id: "ebu",
    displayName: "embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "lad",
    displayName: "ladyński"
}, {
    id: "lah",
    displayName: "lahnda"
}, {
    id: "lkt",
    displayName: "lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lam",
    displayName: "lamba"
}, {
    id: "smj",
    displayName: "lapoński Lule"
}, {
    id: "sma",
    displayName: "lapoński południowy"
}, {
    id: "sms",
    displayName: "lapoński Skolt"
}, {
    id: "lv",
    displayName: "łotewski",
    nativeDisplayName: "latviešu"
}, {
    id: "lzz",
    displayName: "lazyjski"
}, {
    id: "to",
    displayName: "tonga",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lez",
    displayName: "lezgijski"
}, {
    id: "lt",
    displayName: "litewski",
    nativeDisplayName: "lietuvių"
}, {
    id: "lij",
    displayName: "liguryjski"
}, {
    id: "li",
    displayName: "limburgijski"
}, {
    id: "lfn",
    displayName: "Lingua Franca Nova"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "liv",
    displayName: "liwski"
}, {
    id: "jbo",
    displayName: "lojban"
}, {
    id: "lmo",
    displayName: "lombardzki"
}, {
    id: "loz",
    displayName: "lozi"
}, {
    id: "lua",
    displayName: "luba-lulua"
}, {
    id: "lg",
    displayName: "ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "luiseno"
}, {
    id: "luy",
    displayName: "luhya",
    nativeDisplayName: "Luluhia"
}, {
    id: "lun",
    displayName: "lunda"
}, {
    id: "lus",
    displayName: "lushai"
}, {
    id: "lb",
    displayName: "luksemburski",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "masajski",
    nativeDisplayName: "Maa"
}, {
    id: "mde",
    displayName: "maba"
}, {
    id: "mad",
    displayName: "madurajski"
}, {
    id: "maf",
    displayName: "mafa"
}, {
    id: "mag",
    displayName: "magahi"
}, {
    id: "hu",
    displayName: "węgierski",
    nativeDisplayName: "magyar"
}, {
    id: "mai",
    displayName: "maithili"
}, {
    id: "mak",
    displayName: "makasar"
}, {
    id: "mgh",
    displayName: "makua",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "malgaski",
    nativeDisplayName: "Malagasy"
}, {
    id: "dv",
    displayName: "malediwski"
}, {
    id: "mt",
    displayName: "maltański",
    nativeDisplayName: "Malti"
}, {
    id: "mnc",
    displayName: "manchu"
}, {
    id: "mdr",
    displayName: "mandar"
}, {
    id: "man",
    displayName: "mandingo"
}, {
    id: "mni",
    displayName: "manipuryjski"
}, {
    id: "mi",
    displayName: "maoryjski"
}, {
    id: "ary",
    displayName: "marokański arabski"
}, {
    id: "mh",
    displayName: "marshall"
}, {
    id: "mwr",
    displayName: "marwari"
}, {
    id: "chm",
    displayName: "maryjski"
}, {
    id: "byv",
    displayName: "medumba"
}, {
    id: "xmf",
    displayName: "megrelski"
}, {
    id: "men",
    displayName: "mende"
}, {
    id: "mwv",
    displayName: "mentawai"
}, {
    id: "mgo",
    displayName: "meta",
    nativeDisplayName: "metaʼ"
}, {
    id: "fit",
    displayName: "meänkieli"
}, {
    id: "vmf",
    displayName: "meński frankoński"
}, {
    id: "mic",
    displayName: "micmac"
}, {
    id: "min",
    displayName: "minangkabu"
}, {
    id: "nan",
    displayName: "minnański"
}, {
    id: "mwl",
    displayName: "mirandese"
}, {
    id: "moh",
    displayName: "mohawk"
}, {
    id: "mdf",
    displayName: "moksha"
}, {
    id: "ro_md",
    displayName: "mołdawski",
    nativeDisplayName: "moldovenească"
}, {
    id: "lol",
    displayName: "mongo"
}, {
    id: "mos",
    displayName: "mossi"
}, {
    id: "mua",
    displayName: "mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "mye",
    displayName: "myene"
}, {
    id: "na",
    displayName: "nauru"
}, {
    id: "nv",
    displayName: "nawaho"
}, {
    id: "jgo",
    displayName: "ngombe",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "nr",
    displayName: "ndebele południowy"
}, {
    id: "ng",
    displayName: "ndonga"
}, {
    id: "nap",
    displayName: "neapolitański"
}, {
    id: "nl",
    displayName: "niderlandzki",
    nativeDisplayName: "Nederlands"
}, {
    id: "new",
    displayName: "newarski"
}, {
    id: "nwc",
    displayName: "newarski klasyczny"
}, {
    id: "sba",
    displayName: "ngambay"
}, {
    id: "yrl",
    displayName: "nhengatu"
}, {
    id: "nym",
    displayName: "niamwezi"
}, {
    id: "nia",
    displayName: "nias"
}, {
    id: "und",
    displayName: "nieznany język"
}, {
    id: "niu",
    displayName: "niue"
}, {
    id: "ny",
    displayName: "njandża"
}, {
    id: "nog",
    displayName: "nogajski"
}, {
    id: "nb",
    displayName: "norweski (bokmål)",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "norweski"
}, {
    id: "nov",
    displayName: "novial"
}, {
    id: "yav",
    displayName: "yangben",
    nativeDisplayName: "nuasue"
}, {
    id: "nn",
    displayName: "norweski (nynorsk)",
    nativeDisplayName: "nynorsk"
}, {
    id: "nyo",
    displayName: "nyoro"
}, {
    id: "nzi",
    displayName: "nzema"
}, {
    id: "nqo",
    displayName: "n’ko"
}, {
    id: "oj",
    displayName: "odżibwa"
}, {
    id: "xog",
    displayName: "soga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "oromski",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "osage"
}, {
    id: "ota",
    displayName: "osmańsko-turecki"
}, {
    id: "uz",
    displayName: "uzbecki",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pal",
    displayName: "pahlavi"
}, {
    id: "pfl",
    displayName: "palatynacki"
}, {
    id: "pau",
    displayName: "palau"
}, {
    id: "pi",
    displayName: "palijski"
}, {
    id: "pam",
    displayName: "pampango"
}, {
    id: "pag",
    displayName: "pangasino"
}, {
    id: "pap",
    displayName: "papiamento"
}, {
    id: "pdc",
    displayName: "pensylwański"
}, {
    id: "pms",
    displayName: "piemoncki"
}, {
    id: "pcd",
    displayName: "pikardyjski"
}, {
    id: "pdt",
    displayName: "plautdietsch"
}, {
    id: "pl",
    displayName: "polski",
    nativeDisplayName: "polski"
}, {
    id: "pon",
    displayName: "ponpejski"
}, {
    id: "pnt",
    displayName: "pontyjski"
}, {
    id: "pt",
    displayName: "portugalski",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "brazylijski portugalski",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "europejski portugalski",
    nativeDisplayName: "português europeu"
}, {
    id: "alt",
    displayName: "południowoałtajski"
}, {
    id: "sdh",
    displayName: "południowokurdyjski"
}, {
    id: "oc",
    displayName: "prowansalski"
}, {
    id: "prg",
    displayName: "pruski",
    nativeDisplayName: "prūsiskan"
}, {
    id: "ff",
    displayName: "fulani",
    nativeDisplayName: "Pulaar"
}, {
    id: "frr",
    displayName: "północnofryzyjski"
}, {
    id: "raj",
    displayName: "radźasthani"
}, {
    id: "rap",
    displayName: "rapanui"
}, {
    id: "rar",
    displayName: "rarotonga"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "rgn",
    displayName: "romagnol"
}, {
    id: "ro",
    displayName: "rumuński",
    nativeDisplayName: "română"
}, {
    id: "rtm",
    displayName: "rotumański"
}, {
    id: "rug",
    displayName: "roviana"
}, {
    id: "cgg",
    displayName: "chiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "retoromański",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "keczua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "rue",
    displayName: "rusiński"
}, {
    id: "ssy",
    displayName: "saho"
}, {
    id: "sam",
    displayName: "samarytański aramejski"
}, {
    id: "sm",
    displayName: "samoański"
}, {
    id: "sad",
    displayName: "sandawe"
}, {
    id: "sa",
    displayName: "sanskryt"
}, {
    id: "sat",
    displayName: "santali"
}, {
    id: "sc",
    displayName: "sardyński"
}, {
    id: "sas",
    displayName: "sasak"
}, {
    id: "sdc",
    displayName: "sassarski"
}, {
    id: "saz",
    displayName: "saurasztryjski"
}, {
    id: "de_ch",
    displayName: "wysokoniemiecki (Szwajcaria)",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "szwajcarski niemiecki",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "sly",
    displayName: "selayar"
}, {
    id: "sel",
    displayName: "selkupski"
}, {
    id: "seh",
    displayName: "sena",
    nativeDisplayName: "sena"
}, {
    id: "see",
    displayName: "seneka"
}, {
    id: "sh",
    displayName: "serbsko-chorwacki"
}, {
    id: "srr",
    displayName: "serer"
}, {
    id: "sei",
    displayName: "seri"
}, {
    id: "tn",
    displayName: "setswana"
}, {
    id: "shn",
    displayName: "shan"
}, {
    id: "sq",
    displayName: "albański",
    nativeDisplayName: "shqip"
}, {
    id: "nnh",
    displayName: "ngiemboon",
    nativeDisplayName: "Shwóŋò ngiembɔɔn"
}, {
    id: "sid",
    displayName: "sidamo"
}, {
    id: "bla",
    displayName: "siksika"
}, {
    id: "sd",
    displayName: "sindhi"
}, {
    id: "ss",
    displayName: "siswati"
}, {
    id: "den",
    displayName: "slave"
}, {
    id: "sk",
    displayName: "słowacki",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "słoweński",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "sogdyjski"
}, {
    id: "snk",
    displayName: "soninke"
}, {
    id: "so",
    displayName: "somalijski",
    nativeDisplayName: "Soomaali"
}, {
    id: "st",
    displayName: "sotho południowy"
}, {
    id: "nso",
    displayName: "sotho północny"
}, {
    id: "srn",
    displayName: "sranan tongo"
}, {
    id: "goh",
    displayName: "staro-wysoko-niemiecki"
}, {
    id: "ang",
    displayName: "staroangielski"
}, {
    id: "fro",
    displayName: "starofrancuski"
}, {
    id: "grc",
    displayName: "starogrecki"
}, {
    id: "sga",
    displayName: "staroirlandzki"
}, {
    id: "non",
    displayName: "staronordyjski"
}, {
    id: "peo",
    displayName: "staroperski"
}, {
    id: "pro",
    displayName: "staroprowansalski"
}, {
    id: "egy",
    displayName: "starożytny egipski"
}, {
    id: "suk",
    displayName: "sukuma"
}, {
    id: "sux",
    displayName: "sumeryjski"
}, {
    id: "su",
    displayName: "sundajski"
}, {
    id: "fi",
    displayName: "fiński",
    nativeDisplayName: "suomi"
}, {
    id: "sus",
    displayName: "susu"
}, {
    id: "sv",
    displayName: "szwedzki",
    nativeDisplayName: "svenska"
}, {
    id: "scn",
    displayName: "sycylijski"
}, {
    id: "syc",
    displayName: "syriacki"
}, {
    id: "syr",
    displayName: "syryjski"
}, {
    id: "sco",
    displayName: "szkocki"
}, {
    id: "sg",
    displayName: "sango",
    nativeDisplayName: "Sängö"
}, {
    id: "ttt",
    displayName: "tacki"
}, {
    id: "tg",
    displayName: "tadżycki"
}, {
    id: "tl",
    displayName: "tagalski"
}, {
    id: "ty",
    displayName: "tahitański"
}, {
    id: "tmh",
    displayName: "tamaszek"
}, {
    id: "tzm",
    displayName: "centralnomarokański tamazight",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "kabylski",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "rif",
    displayName: "tarifit"
}, {
    id: "trv",
    displayName: "taroko"
}, {
    id: "twq",
    displayName: "tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "tatarski"
}, {
    id: "tly",
    displayName: "tałyski"
}, {
    id: "tem",
    displayName: "temne"
}, {
    id: "ter",
    displayName: "tereno"
}, {
    id: "tet",
    displayName: "tetum"
}, {
    id: "nus",
    displayName: "nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "tig",
    displayName: "tigre"
}, {
    id: "tiv",
    displayName: "tiw"
}, {
    id: "vi",
    displayName: "wietnamski",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tli",
    displayName: "tlingit"
}, {
    id: "tpi",
    displayName: "tok pisin"
}, {
    id: "tkl",
    displayName: "tokelau"
}, {
    id: "tog",
    displayName: "tonga (Niasa)"
}, {
    id: "chk",
    displayName: "truk"
}, {
    id: "lu",
    displayName: "luba-katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tsi",
    displayName: "tsimshian"
}, {
    id: "ts",
    displayName: "tsonga"
}, {
    id: "tcy",
    displayName: "tulu"
}, {
    id: "tum",
    displayName: "tumbuka"
}, {
    id: "aeb",
    displayName: "tunezyjski arabski"
}, {
    id: "tru",
    displayName: "turoyo"
}, {
    id: "tvl",
    displayName: "tuvalu"
}, {
    id: "tyv",
    displayName: "tuwiński"
}, {
    id: "tw",
    displayName: "twi"
}, {
    id: "kcg",
    displayName: "tyap"
}, {
    id: "tk",
    displayName: "turkmeński",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "turecki",
    nativeDisplayName: "Türkçe"
}, {
    id: "udm",
    displayName: "udmurcki"
}, {
    id: "uga",
    displayName: "ugarycki"
}, {
    id: "umb",
    displayName: "umbundu"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "nl_be",
    displayName: "flamandzki",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "volapuk",
    nativeDisplayName: "Volapük"
}, {
    id: "vro",
    displayName: "võro"
}, {
    id: "wal",
    displayName: "walamo"
}, {
    id: "wa",
    displayName: "waloński"
}, {
    id: "wae",
    displayName: "walser",
    nativeDisplayName: "Walser"
}, {
    id: "war",
    displayName: "waraj"
}, {
    id: "wbp",
    displayName: "Warlpiri"
}, {
    id: "was",
    displayName: "washo"
}, {
    id: "guc",
    displayName: "wayúu"
}, {
    id: "vec",
    displayName: "wenecki"
}, {
    id: "vep",
    displayName: "wepski"
}, {
    id: "fy",
    displayName: "zachodniofryzyjski",
    nativeDisplayName: "West-Frysk"
}, {
    id: "mul",
    displayName: "wiele języków"
}, {
    id: "wo",
    displayName: "wolof"
}, {
    id: "vot",
    displayName: "wotiacki"
}, {
    id: "wuu",
    displayName: "wu"
}, {
    id: "hsn",
    displayName: "xiang"
}, {
    id: "yao",
    displayName: "yao"
}, {
    id: "ybb",
    displayName: "yemba"
}, {
    id: "esu",
    displayName: "yupik środkowosyberyjski"
}, {
    id: "vls",
    displayName: "zachodnioflamandzki"
}, {
    id: "mrj",
    displayName: "zachodniomaryjski"
}, {
    id: "zap",
    displayName: "zapotecki"
}, {
    id: "gbz",
    displayName: "zaratusztriański dari"
}, {
    id: "dje",
    displayName: "dżerma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "zazaki"
}, {
    id: "zea",
    displayName: "zelandzki"
}, {
    id: "zen",
    displayName: "zenaga"
}, {
    id: "zun",
    displayName: "zuni"
}, {
    id: "yo",
    displayName: "joruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islandzki",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "austriacki niemiecki",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "czeski",
    nativeDisplayName: "čeština"
}, {
    id: "la",
    displayName: "łaciński"
}, {
    id: "ltg",
    displayName: "łatgalski"
}, {
    id: "szl",
    displayName: "śląski"
}, {
    id: "gmh",
    displayName: "średnio-wysoko-niemiecki"
}, {
    id: "enm",
    displayName: "średnioangielski"
}, {
    id: "frm",
    displayName: "średniofrancuski"
}, {
    id: "mga",
    displayName: "średnioirlandzki"
}, {
    id: "dum",
    displayName: "średniowieczny niderlandzki"
}, {
    id: "chn",
    displayName: "żargon Chinook"
}, {
    id: "sgs",
    displayName: "żmudzki"
}, {
    id: "bas",
    displayName: "basa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "hawajski",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "grecki",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "białoruski",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bułgarski",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "osetyjski",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "kirgiski",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "macedoński",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongolski",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "czeczeński",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "rosyjski",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "jakucki",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "serbski",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ukraiński",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "staro-cerkiewno-słowiański",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "kazachski",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "ormiański",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "jidysz",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "hebrajski",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "ujgurski",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "arabski",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "współczesny arabski",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "perski",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "luryjski północny",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "mazanderański",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "paszto",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "sorani",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "kaszmirski",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepalski",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "asamski",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengalski",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "pendżabski",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gudźaracki",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "orija",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamilski",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malajalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "syngaleski",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "tajski",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "laotański",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tybetański",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "birmański",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "gruziński",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrinia",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amharski",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "khmerski",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "standardowy marokański tamazight",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "tashelhiyt",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "chiński",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japoński",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "chiński (uproszczony)",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "kantoński",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "chiński (tradycyjny)",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "syczuański",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "wai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "czirokeski",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "koreański",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Brai",
    displayName: "Braille’a"
}, {
    id: "Dupl",
    displayName: "Duploye’a"
}, {
    id: "Moon",
    displayName: "Moon’a"
}, {
    id: "Wara",
    displayName: "Varang Kshiti"
}, {
    id: "Visp",
    displayName: "Visible Speech"
}, {
    id: "Afak",
    displayName: "afaka"
}, {
    id: "Lisu",
    displayName: "alfabet Frasera"
}, {
    id: "Arab",
    displayName: "arabskie"
}, {
    id: "Armi",
    displayName: "armi"
}, {
    id: "Avst",
    displayName: "awestyjskie"
}, {
    id: "Bali",
    displayName: "balijskie"
}, {
    id: "Bamu",
    displayName: "bamun"
}, {
    id: "Bass",
    displayName: "bassa"
}, {
    id: "Batk",
    displayName: "batak"
}, {
    id: "Beng",
    displayName: "bengalskie"
}, {
    id: "Mymr",
    displayName: "birmańskie"
}, {
    id: "Bopo",
    displayName: "bopomofo"
}, {
    id: "Brah",
    displayName: "brahmi"
}, {
    id: "Bugi",
    displayName: "bugińskie"
}, {
    id: "Buhd",
    displayName: "buhid"
}, {
    id: "Cakm",
    displayName: "chakma"
}, {
    id: "Khar",
    displayName: "charosti"
}, {
    id: "Cirt",
    displayName: "cirth"
}, {
    id: "Cprt",
    displayName: "cypryjskie"
}, {
    id: "Cyrl",
    displayName: "cyrylica"
}, {
    id: "Cyrs",
    displayName: "cyrylica staro-cerkiewno-słowiańska"
}, {
    id: "Cham",
    displayName: "czamskie"
}, {
    id: "Cher",
    displayName: "czirokeski"
}, {
    id: "Dsrt",
    displayName: "deseret"
}, {
    id: "Deva",
    displayName: "devanagari"
}, {
    id: "Zinh",
    displayName: "dziedziczone"
}, {
    id: "Egyd",
    displayName: "egipskie demotyczne"
}, {
    id: "Egyh",
    displayName: "egipskie hieratyczne"
}, {
    id: "Ethi",
    displayName: "etiopskie"
}, {
    id: "Phnx",
    displayName: "fenicki"
}, {
    id: "Plrd",
    displayName: "fonetyczny Pollard’a"
}, {
    id: "Nkgb",
    displayName: "geba"
}, {
    id: "Goth",
    displayName: "gotyckie"
}, {
    id: "Gran",
    displayName: "grantha"
}, {
    id: "Grek",
    displayName: "greckie"
}, {
    id: "Geor",
    displayName: "gruzińskie"
}, {
    id: "Geok",
    displayName: "gruzińskie chucuri"
}, {
    id: "Gujr",
    displayName: "gudźarackie"
}, {
    id: "Guru",
    displayName: "gurmukhi"
}, {
    id: "Glag",
    displayName: "głagolica"
}, {
    id: "Hani",
    displayName: "han"
}, {
    id: "Hang",
    displayName: "hangyl"
}, {
    id: "Hano",
    displayName: "hanunoo"
}, {
    id: "Hebr",
    displayName: "hebrajskie"
}, {
    id: "Maya",
    displayName: "hieroglify Majów"
}, {
    id: "Hluw",
    displayName: "hieroglify anatolijskie"
}, {
    id: "Egyp",
    displayName: "hieroglify egipskie"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Inds",
    displayName: "indus"
}, {
    id: "Phli",
    displayName: "inskrypcyjne pahlawi"
}, {
    id: "Jpan",
    displayName: "japońskie"
}, {
    id: "Java",
    displayName: "jawajskie"
}, {
    id: "Jurc",
    displayName: "jurchen"
}, {
    id: "Zxxx",
    displayName: "język bez systemu pisma"
}, {
    id: "Kthi",
    displayName: "kaithi"
}, {
    id: "Knda",
    displayName: "kannada"
}, {
    id: "Cari",
    displayName: "karyjskie"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Hrkt",
    displayName: "katakana lub hiragana"
}, {
    id: "Kali",
    displayName: "kayah li"
}, {
    id: "Khmr",
    displayName: "khmerskie"
}, {
    id: "Khoj",
    displayName: "khojki"
}, {
    id: "Sind",
    displayName: "khudawadi"
}, {
    id: "Xsux",
    displayName: "klinowe sumero-akadyjskie"
}, {
    id: "Copt",
    displayName: "koptyjskie"
}, {
    id: "Kore",
    displayName: "koreańskie"
}, {
    id: "Kpel",
    displayName: "kpelle"
}, {
    id: "Lana",
    displayName: "lanna"
}, {
    id: "Laoo",
    displayName: "laotańskie"
}, {
    id: "Lepc",
    displayName: "lepcha"
}, {
    id: "Lydi",
    displayName: "lidyjskie"
}, {
    id: "Lyci",
    displayName: "likijskie"
}, {
    id: "Limb",
    displayName: "limbu"
}, {
    id: "Lina",
    displayName: "linearne A"
}, {
    id: "Linb",
    displayName: "linearne B"
}, {
    id: "Loma",
    displayName: "loma"
}, {
    id: "Mlym",
    displayName: "malajalam"
}, {
    id: "Mand",
    displayName: "mandejskie"
}, {
    id: "Mani",
    displayName: "manichejskie"
}, {
    id: "Mtei",
    displayName: "meitei mayek"
}, {
    id: "Mend",
    displayName: "mende"
}, {
    id: "Mero",
    displayName: "meroickie"
}, {
    id: "Merc",
    displayName: "meroickie (kursywa)"
}, {
    id: "Mong",
    displayName: "mongolskie"
}, {
    id: "Mroo",
    displayName: "mro"
}, {
    id: "Nbat",
    displayName: "nabatejskie"
}, {
    id: "Zzzz",
    displayName: "nieznane lub niepoprawne"
}, {
    id: "Zmth",
    displayName: "notacja matematyczna"
}, {
    id: "Talu",
    displayName: "nowy tai lue"
}, {
    id: "Nshu",
    displayName: "nüshu"
}, {
    id: "Nkoo",
    displayName: "n’ko"
}, {
    id: "Ogam",
    displayName: "ogham"
}, {
    id: "Olck",
    displayName: "ol chiki"
}, {
    id: "Orkh",
    displayName: "orchońskie"
}, {
    id: "Orya",
    displayName: "orija"
}, {
    id: "Armn",
    displayName: "ormiańskie"
}, {
    id: "Osma",
    displayName: "osmanya"
}, {
    id: "Hmng",
    displayName: "pahawh hmong"
}, {
    id: "Phlv",
    displayName: "pahlawi książkowy"
}, {
    id: "Phlp",
    displayName: "pahlawi psałterzowy"
}, {
    id: "Palm",
    displayName: "palmirskie"
}, {
    id: "Prti",
    displayName: "partyjski inskrypcyjny"
}, {
    id: "Phag",
    displayName: "phags-pa"
}, {
    id: "Sgnw",
    displayName: "pismo znakowe"
}, {
    id: "Rjng",
    displayName: "rejang"
}, {
    id: "Roro",
    displayName: "rongorongo"
}, {
    id: "Runr",
    displayName: "runiczne"
}, {
    id: "Samr",
    displayName: "samarytański"
}, {
    id: "Sara",
    displayName: "sarati"
}, {
    id: "Saur",
    displayName: "saurashtra"
}, {
    id: "Shaw",
    displayName: "shawa"
}, {
    id: "Sora",
    displayName: "sorang sompeng"
}, {
    id: "Sarb",
    displayName: "staroarabskie południowe"
}, {
    id: "Narb",
    displayName: "staroarabskie północne"
}, {
    id: "Perm",
    displayName: "staropermskie"
}, {
    id: "Xpeo",
    displayName: "staroperskie"
}, {
    id: "Hung",
    displayName: "starowęgierskie"
}, {
    id: "Ital",
    displayName: "starowłoskie"
}, {
    id: "Sund",
    displayName: "sundajskie"
}, {
    id: "Sylo",
    displayName: "syloti nagri"
}, {
    id: "Zsym",
    displayName: "symbole"
}, {
    id: "Blis",
    displayName: "symbole Blissa"
}, {
    id: "Sinh",
    displayName: "syngaleskie"
}, {
    id: "Syre",
    displayName: "syriacki estrangelo"
}, {
    id: "Syrc",
    displayName: "syryjski"
}, {
    id: "Syrn",
    displayName: "syryjski (odmiana wschodnia)"
}, {
    id: "Syrj",
    displayName: "syryjski (odmiana zachodnia)"
}, {
    id: "Tglg",
    displayName: "tagalog"
}, {
    id: "Tagb",
    displayName: "tagbanwa"
}, {
    id: "Tale",
    displayName: "tai le"
}, {
    id: "Tavt",
    displayName: "tai viet"
}, {
    id: "Thai",
    displayName: "tajskie"
}, {
    id: "Takr",
    displayName: "takri"
}, {
    id: "Taml",
    displayName: "tamilskie"
}, {
    id: "Tang",
    displayName: "tanguckie"
}, {
    id: "Telu",
    displayName: "telugu"
}, {
    id: "Teng",
    displayName: "tengwar"
}, {
    id: "Thaa",
    displayName: "thaana"
}, {
    id: "Tfng",
    displayName: "tifinagh (berberski)"
}, {
    id: "Tirh",
    displayName: "tirhuta"
}, {
    id: "Hant",
    displayName: "tradycyjne"
}, {
    id: "Tibt",
    displayName: "tybetańskie"
}, {
    id: "Ugar",
    displayName: "ugaryckie"
}, {
    id: "Hans",
    displayName: "uproszczone"
}, {
    id: "Vaii",
    displayName: "vai"
}, {
    id: "Wole",
    displayName: "woleai"
}, {
    id: "Zyyy",
    displayName: "wspólne"
}, {
    id: "Yiii",
    displayName: "yi"
}, {
    id: "Cans",
    displayName: "zunifikowane symbole kanadyjskich autochtonów"
}, {
    id: "Latf",
    displayName: "łaciński - fraktura"
}, {
    id: "Latg",
    displayName: "łaciński - odmiana gaelicka"
}, {
    id: "Latn",
    displayName: "łacińskie"
}, {
    id: "Shrd",
    displayName: "śarada"
} ];

inter.currencies = [ {
    id: "XEU",
    displayName: "ECU"
}, {
    id: "XFU",
    displayName: "UIC-frank francuski"
}, {
    id: "AFN",
    displayName: "afgani",
    symbol: "AFN",
    one: "afgani",
    few: "afgani",
    many: "afgani",
    other: "afgani"
}, {
    id: "AFA",
    displayName: "afgani (1927–2002)",
    one: "afgani (1927–2002)",
    few: "afgani (1927–2002)",
    many: "afgani (1927–2002)",
    other: "afgani (1927–2002)"
}, {
    id: "MGA",
    displayName: "ariary malgaski",
    symbol: "MGA",
    one: "ariary malgaski",
    few: "ariary malgaskie",
    many: "ariary malgaskich",
    other: "ariary malgaskiego"
}, {
    id: "ARA",
    displayName: "austral argentyński"
}, {
    id: "THB",
    displayName: "baht tajski",
    symbol: "THB",
    one: "baht tajski",
    few: "bahty tajskie",
    many: "bahtów tajskich",
    other: "bahta tajskiego"
}, {
    id: "PAB",
    displayName: "balboa panamski",
    symbol: "PAB",
    one: "balboa panamski",
    few: "balboa panamskie",
    many: "balboa panamskich",
    other: "balboa panamskiego"
}, {
    id: "ETB",
    displayName: "birr etiopski",
    symbol: "ETB",
    one: "birr etiopski",
    few: "birra etiopskie",
    many: "birra etiopskich",
    other: "birra etiopskiego"
}, {
    id: "BOB",
    displayName: "boliviano",
    symbol: "BOB",
    one: "boliviano",
    few: "boliviano",
    many: "boliviano",
    other: "boliviano"
}, {
    id: "VEF",
    displayName: "boliwar wenezuelski",
    symbol: "VEF",
    one: "boliwar wenezuelski",
    few: "boliwary wenezuelskie",
    many: "boliwarów wenezuelskich",
    other: "boliwara wenezuelskiego"
}, {
    id: "VEB",
    displayName: "boliwar wenezuelski (1871–2008)",
    one: "boliwar wenezuelski (1871–2008)",
    few: "boliwary wenezuelskie (1871–2008)",
    many: "boliwarów wenezuelskich (1871–2008)",
    other: "boliwary wenezuelskiego (1871–2008)"
}, {
    id: "GHS",
    displayName: "cedi ghański",
    symbol: "GHS",
    one: "cedi ghański",
    few: "cedi ghańskie",
    many: "cedi ghańskich",
    other: "cedi ghańskiego"
}, {
    id: "GHC",
    displayName: "cedi ghańskie (1979–2007)"
}, {
    id: "CRC",
    displayName: "colon kostarykański",
    symbol: "CRC",
    one: "colon kostarykański",
    few: "colony kostarykańskie",
    many: "colonów kostarykańskich",
    other: "colona kostarykańskiego"
}, {
    id: "SVC",
    displayName: "colon salwadorski"
}, {
    id: "NIO",
    displayName: "cordoba nikaraguańska",
    symbol: "NIO",
    one: "cordoba nikaraguańska",
    few: "cordoby nikaraguańskie",
    many: "cordob nikaraguańskich",
    other: "cordoby nikaraguańskiej"
}, {
    id: "NIC",
    displayName: "cordoba nikaraguańska (1988–1991)",
    one: "cordoba nikaraguańska (1988–1991)",
    few: "cordoby nikaraguańskie (1988–1991)",
    many: "cordob nikaraguańskich (1988–1991)",
    other: "cordoby nikaraguańskiej (1988–1991)"
}, {
    id: "BRC",
    displayName: "cruzado brazylijskie"
}, {
    id: "BRR",
    displayName: "cruzeiro brazylijskie"
}, {
    id: "BRE",
    displayName: "cruzeiro brazylijskie (1990–1993)"
}, {
    id: "BRB",
    displayName: "cruzeiro novo brazylijskie (1967–1986)"
}, {
    id: "GMD",
    displayName: "dalasi gambijskie",
    symbol: "GMD",
    one: "dalasi gambijskie",
    few: "dalasi gambijskie",
    many: "dalasi gambijskich",
    other: "dalasi gambijskiego"
}, {
    id: "MKD",
    displayName: "denar macedoński",
    symbol: "MKD",
    one: "denar macedoński",
    few: "denary macedońskie",
    many: "denarów macedońskich",
    other: "denara macedońskiego"
}, {
    id: "BAD",
    displayName: "dinar Bośni i Hercegowiny"
}, {
    id: "DZD",
    displayName: "dinar algierski",
    symbol: "DZD",
    one: "dinar algierski",
    few: "dinary algierskie",
    many: "dinarów algierskich",
    other: "dinara algierskiego"
}, {
    id: "BHD",
    displayName: "dinar bahrański",
    symbol: "BHD",
    one: "dinar bahrański",
    few: "dinary bahrańskie",
    many: "dinarów bahrańskich",
    other: "dinara bahrańskiego"
}, {
    id: "HRD",
    displayName: "dinar chorwacki"
}, {
    id: "IQD",
    displayName: "dinar iracki",
    symbol: "IQD",
    one: "dinar iracki",
    few: "dinary irackie",
    many: "dinarów irackich",
    other: "dinara irackiego"
}, {
    id: "YDD",
    displayName: "dinar jemeński"
}, {
    id: "JOD",
    displayName: "dinar jordański",
    symbol: "JOD",
    one: "dinar jordański",
    few: "dinary jordańskie",
    many: "dinarów jordańskich",
    other: "dinara jordańskiego"
}, {
    id: "YUN",
    displayName: "dinar jugosławiański wymienny"
}, {
    id: "KWD",
    displayName: "dinar kuwejcki",
    symbol: "KWD",
    one: "dinar kuwejcki",
    few: "dinary kuwejckie",
    many: "dinarów kuwejckich",
    other: "dinara kuwejckiego"
}, {
    id: "LYD",
    displayName: "dinar libijski",
    symbol: "LYD",
    one: "dinar libijski",
    few: "dinary libijskie",
    many: "dinarów libijskich",
    other: "dinara libijskiego"
}, {
    id: "RSD",
    displayName: "dinar serbski",
    symbol: "RSD",
    one: "dinar serbski",
    few: "dinary serbskie",
    many: "dinarów serbskich",
    other: "dinara serbskiego"
}, {
    id: "SDD",
    displayName: "dinar sudański"
}, {
    id: "TND",
    displayName: "dinar tunezyjski",
    symbol: "TND",
    one: "dinar tunezyjski",
    few: "dinary tunezyjskie",
    many: "dinarów tunezyjskich",
    other: "dinara tunezyjskiego"
}, {
    id: "AED",
    displayName: "dirham arabski",
    symbol: "AED",
    one: "dirham arabski",
    few: "dirhamy arabskie",
    many: "dirhamów arabskich",
    other: "dirhama arabskiego"
}, {
    id: "MAD",
    displayName: "dirham marokański",
    symbol: "MAD",
    one: "dirham marokański",
    few: "dirhamy marokańskie",
    many: "dirhamów marokańskich",
    other: "dirhama marokańskiego"
}, {
    id: "STD",
    displayName: "dobra Wysp Świętego Tomasza i Książęcej",
    symbol: "STD",
    one: "dobra Wysp Świętego Tomasza i Książęcej",
    few: "dobry Wysp Świętego Tomasza i Książęcej",
    many: "dobr Wysp Świętego Tomasza i Książęcej",
    other: "dobry Wysp Świętego Tomasza i Książęcej"
}, {
    id: "BBD",
    displayName: "dolar Barbadosu",
    symbol: "BBD",
    one: "dolar Barbadosu",
    few: "dolary Barbadosu",
    many: "dolarów Barbadosu",
    other: "dolara Barbadosu"
}, {
    id: "TTD",
    displayName: "dolar Trynidadu i Tobago",
    symbol: "TTD",
    one: "dolar Trynidadu i Tobago",
    few: "dolary Trynidadu i Tobago",
    many: "dolarów Trynidadu i Tobago",
    other: "dolara Trynidadu i Tobago"
}, {
    id: "SBD",
    displayName: "dolar Wysp Salomona",
    symbol: "SBD",
    one: "dolar Wysp Salomona",
    few: "dolary Wysp Salomona",
    many: "dolarów Wysp Salomona",
    other: "dolara Wysp Salomona"
}, {
    id: "ZWD",
    displayName: "dolar Zimbabwe (1980–2008)"
}, {
    id: "ZWR",
    displayName: "dolar Zimbabwe (2008)"
}, {
    id: "ZWL",
    displayName: "dolar Zimbabwe (2009)"
}, {
    id: "USD",
    displayName: "dolar amerykański",
    symbol: "USD",
    one: "dolar amerykański",
    few: "dolary amerykańskie",
    many: "dolarów amerykańskich",
    other: "dolara amerykańskiego"
}, {
    id: "AUD",
    displayName: "dolar australijski",
    symbol: "AUD",
    one: "dolar australijski",
    few: "dolary australijskie",
    many: "dolarów australijskich",
    other: "dolara australijskiego"
}, {
    id: "BSD",
    displayName: "dolar bahamski",
    symbol: "BSD",
    one: "dolar bahamski",
    few: "dolary bahamskie",
    many: "dolarów bahamskich",
    other: "dolara bahamskiego"
}, {
    id: "BZD",
    displayName: "dolar belizeński",
    symbol: "BZD",
    one: "dolar belizeński",
    few: "dolary belizeńskie",
    many: "dolarów belizeńskich",
    other: "dolara belizeńskiego"
}, {
    id: "BMD",
    displayName: "dolar bermudzki",
    symbol: "BMD",
    one: "dolar bermudzki",
    few: "dolary bermudzkie",
    many: "dolarów bermudzkich",
    other: "dolara bermudzkiego"
}, {
    id: "BND",
    displayName: "dolar brunejski",
    symbol: "BND",
    one: "dolar brunejski",
    few: "dolary brunejskie",
    many: "dolarów brunejskich",
    other: "dolara brunejskiego"
}, {
    id: "FJD",
    displayName: "dolar fidżi",
    symbol: "FJD",
    one: "dolar fidżyjski",
    few: "dolary fidżyjskie",
    many: "dolarów fidżyjskich",
    other: "dolara fidżyjskiego"
}, {
    id: "GYD",
    displayName: "dolar gujański",
    symbol: "GYD",
    one: "dolar gujański",
    few: "dolary gujańskie",
    many: "dolarów gujańskich",
    other: "dolara gujańskiego"
}, {
    id: "HKD",
    displayName: "dolar hongkoński",
    symbol: "HKD",
    one: "dolar hongkoński",
    few: "dolary hongkońskie",
    many: "dolarów hongkońskich",
    other: "dolara hongkońskiego"
}, {
    id: "JMD",
    displayName: "dolar jamajski",
    symbol: "JMD",
    one: "dolar jamajski",
    few: "dolary jamajskie",
    many: "dolarów jamajskich",
    other: "dolara jamajskiego"
}, {
    id: "KYD",
    displayName: "dolar kajmański",
    symbol: "KYD",
    one: "dolar kajmański",
    few: "dolary kajmańskie",
    many: "dolarów kajmańskich",
    other: "dolara kajmańskiego"
}, {
    id: "CAD",
    displayName: "dolar kanadyjski",
    symbol: "CAD",
    one: "dolar kanadyjski",
    few: "dolary kanadyjskie",
    many: "dolarów kanadyjskich",
    other: "dolara kanadyjskiego"
}, {
    id: "LRD",
    displayName: "dolar liberyjski",
    symbol: "LRD",
    one: "dolar liberyjski",
    few: "dolary liberyjskie",
    many: "dolarów liberyjskich",
    other: "dolara liberyjskiego"
}, {
    id: "NAD",
    displayName: "dolar namibijski",
    symbol: "NAD",
    one: "dolar namibijski",
    few: "dolary namibijskie",
    many: "dolarów namibijskich",
    other: "dolara namibijskiego"
}, {
    id: "NZD",
    displayName: "dolar nowozelandzki",
    symbol: "NZD",
    one: "dolar nowozelandzki",
    few: "dolary nowozelandzkie",
    many: "dolarów nowozelandzkich",
    other: "dolara nowozelandzkiego"
}, {
    id: "RHD",
    displayName: "dolar rodezyjski"
}, {
    id: "SGD",
    displayName: "dolar singapurski",
    symbol: "SGD",
    one: "dolar singapurski",
    few: "dolary singapurskie",
    many: "dolarów singapurskich",
    other: "dolara singapurskiego"
}, {
    id: "SRD",
    displayName: "dolar surinamski",
    symbol: "SRD",
    one: "dolar surinamski",
    few: "dolary surinamskie",
    many: "dolarów surinamskich",
    other: "dolara surinamskiego"
}, {
    id: "XCD",
    displayName: "dolar wschodniokaraibski",
    symbol: "EC$",
    one: "dolar wschodniokaraibski",
    few: "dolary wschodniokaraibskie",
    many: "dolarów wschodniokaraibskich",
    other: "dolara wschodniokaraibskiego"
}, {
    id: "VND",
    displayName: "dong wietnamski",
    symbol: "VND",
    one: "dong wietnamski",
    few: "dongi wietnamskie",
    many: "dongów wietnamskich",
    other: "donga wietnamskiego"
}, {
    id: "GRD",
    displayName: "drachma grecka"
}, {
    id: "AMD",
    displayName: "dram armeński",
    symbol: "AMD",
    one: "dram ormiański",
    few: "dramy armeńskie",
    many: "dramów armeńskich",
    other: "dramy ormiańskiej"
}, {
    id: "GQE",
    displayName: "ekwele gwinejskie Gwinei Równikowej"
}, {
    id: "GWE",
    displayName: "escudo Gwinea Portugalska"
}, {
    id: "MZE",
    displayName: "escudo mozambickie"
}, {
    id: "PTE",
    displayName: "escudo portugalskie"
}, {
    id: "TPE",
    displayName: "escudo timorskie"
}, {
    id: "CVE",
    displayName: "escudo zielonoprzylądkowe",
    symbol: "CVE",
    one: "escudo zielonoprzylądkowe",
    few: "escudo zielonoprzylądkowe",
    many: "escudo zielonoprzylądkowych",
    other: "escudo zielonoprzylądkowego"
}, {
    id: "EUR",
    displayName: "euro",
    symbol: "€",
    one: "euro",
    few: "euro",
    many: "euro",
    other: "euro"
}, {
    id: "XBB",
    displayName: "europejska jednostka monetarna"
}, {
    id: "XBC",
    displayName: "europejska jednostka rozrachunkowa (XBC)"
}, {
    id: "XBD",
    displayName: "europejska jednostka rozrachunkowa (XBD)"
}, {
    id: "AWG",
    displayName: "florin arubański",
    symbol: "AWG",
    one: "florin arubański",
    few: "floriny arubańskie",
    many: "florinów arubańskich",
    other: "florina arubańskiego"
}, {
    id: "HUF",
    displayName: "forint węgierski",
    symbol: "HUF",
    one: "forint węgierski",
    few: "forinty węgierskie",
    many: "forintów węgierskich",
    other: "forinta węgierskiego"
}, {
    id: "XOF",
    displayName: "frank CFA",
    symbol: "CFA",
    one: "frank CFA",
    few: "franki CFA",
    many: "franków CFA",
    other: "franka CFA"
}, {
    id: "XAF",
    displayName: "frank CFA BEAC",
    symbol: "FCFA",
    one: "frank CFA BEAC",
    few: "franki CFA BEAC",
    many: "franków CFA BEAC",
    other: "franka CFA BEAC"
}, {
    id: "XPF",
    displayName: "frank CFP",
    symbol: "CFPF",
    one: "frank CFP",
    few: "franki CFP",
    many: "franków CFP",
    other: "franka CFP"
}, {
    id: "BEF",
    displayName: "frank belgijski"
}, {
    id: "BEL",
    displayName: "frank belgijski (finansowy)"
}, {
    id: "BEC",
    displayName: "frank belgijski (zamienny)",
    one: "frank belgijski (wymienialny)",
    few: "franki belgijskie (wymienialne)",
    many: "franków belgijskich (wymienialnych)",
    other: "frank belgijski (zamienny)"
}, {
    id: "BIF",
    displayName: "frank burundyjski",
    symbol: "BIF",
    one: "frank burundyjski",
    few: "franki burundyjskie",
    many: "franków burundyjskich",
    other: "franka burundyjskiego"
}, {
    id: "DJF",
    displayName: "frank dżibutyjski",
    symbol: "DJF",
    one: "frank dżibutyjski",
    few: "franki dżibutyjskie",
    many: "franków dżibutyjskich",
    other: "franka dżibutyjskiego"
}, {
    id: "FRF",
    displayName: "frank francuski",
    one: "frank francuski",
    few: "franki francuskie",
    many: "franków francuskich",
    other: "frank francuski"
}, {
    id: "GNF",
    displayName: "frank gwinejski",
    symbol: "GNF",
    one: "frank gwinejski",
    few: "franki gwinejskie",
    many: "franków gwinejskich",
    other: "franka gwinejskiego"
}, {
    id: "KMF",
    displayName: "frank komoryjski",
    symbol: "KMF",
    one: "frank komoryjski",
    few: "franki komoryjskie",
    many: "franków komoryjskich",
    other: "franka komoryjskiego"
}, {
    id: "CDF",
    displayName: "frank kongijski",
    symbol: "CDF",
    one: "frank kongijski",
    few: "franki kongijskie",
    many: "franków kongijskich",
    other: "franka kongijskiego"
}, {
    id: "LUF",
    displayName: "frank luksemburski"
}, {
    id: "MGF",
    displayName: "frank malgaski"
}, {
    id: "MLF",
    displayName: "frank malijski"
}, {
    id: "MAF",
    displayName: "frank marokański",
    one: "frank marokański",
    few: "franki marokańskie",
    many: "franków marokańskich",
    other: "frank marokański"
}, {
    id: "RWF",
    displayName: "frank ruandyjski",
    symbol: "RWF",
    one: "frank ruandyjski",
    few: "franki ruandyjskie",
    many: "franków ruandyjskich",
    other: "franka ruandyjskiego"
}, {
    id: "CHF",
    displayName: "frank szwajcarski",
    symbol: "CHF",
    one: "frank szwajcarski",
    few: "franki szwajcarskie",
    many: "franków szwajcarskich",
    other: "franka szwajcarskiego"
}, {
    id: "XFO",
    displayName: "frank złoty francuski"
}, {
    id: "SHP",
    displayName: "funt Wyspy Świętej Heleny",
    symbol: "SHP",
    one: "funt Wyspy Świętej Heleny",
    few: "funty Wyspy Świętej Heleny",
    many: "funtów Wyspy Świętej Heleny",
    other: "funta Wyspy Świętej Heleny"
}, {
    id: "CYP",
    displayName: "funt cypryjski"
}, {
    id: "EGP",
    displayName: "funt egipski",
    symbol: "EGP",
    one: "funt egipski",
    few: "funty egipskie",
    many: "funtów egipskich",
    other: "funta egipskiego"
}, {
    id: "FKP",
    displayName: "funt falklandzki",
    symbol: "FKP",
    one: "funt falklandzki",
    few: "funty falklandzkie",
    many: "funtów falklandzkich",
    other: "funta falklandzkiego"
}, {
    id: "GIP",
    displayName: "funt gibraltarski",
    symbol: "GIP",
    one: "funt gibraltarski",
    few: "funty gibraltarskie",
    many: "funtów gibraltarskich",
    other: "funta gibraltarskiego"
}, {
    id: "IEP",
    displayName: "funt irlandzki"
}, {
    id: "ILP",
    displayName: "funt izraelski"
}, {
    id: "LBP",
    displayName: "funt libański",
    symbol: "LBP",
    one: "funt libański",
    few: "funty libańskie",
    many: "funtów libańskich",
    other: "funta libańskiego"
}, {
    id: "MTP",
    displayName: "funt maltański"
}, {
    id: "SSP",
    displayName: "funt południowosudański",
    symbol: "SSP",
    one: "funt południowosudański",
    few: "funty południowosudańskie",
    many: "funtów południowosudańskich",
    other: "funta południowosudańskiego"
}, {
    id: "SDG",
    displayName: "funt sudański",
    symbol: "SDG",
    one: "funt sudański",
    few: "funty sudańskie",
    many: "funtów sudańskich",
    other: "funta sudańskiego"
}, {
    id: "SDP",
    displayName: "funt sudański (1957–1998)",
    one: "funt sudański (1957–1998)",
    few: "funty sudańskie (1957–1998)",
    many: "funtów sudańskich (1957–1998)",
    other: "funta sudańskiego (1957–1998)"
}, {
    id: "SYP",
    displayName: "funt syryjski",
    symbol: "SYP",
    one: "funt syryjski",
    few: "funty syryjskie",
    many: "funtów syryjskich",
    other: "funta syryjskiego"
}, {
    id: "GBP",
    displayName: "funt szterling",
    symbol: "GBP",
    one: "funt szterling",
    few: "funty szterlingi",
    many: "funtów szterlingów",
    other: "funta szterlinga"
}, {
    id: "HTG",
    displayName: "gourde haitańskie",
    symbol: "HTG",
    one: "gourde haitańskie",
    few: "gourde haitańskie",
    many: "gourde haitańskich",
    other: "gourde haitańskiego"
}, {
    id: "PYG",
    displayName: "guarani paragwajskie",
    symbol: "PYG",
    one: "guarani paragwajskie",
    few: "guarani paragwajskie",
    many: "guarani paragwajskich",
    other: "guarani paragwajskiego"
}, {
    id: "ANG",
    displayName: "gulden antylski",
    symbol: "ANG",
    one: "gulden antylski",
    few: "guldeny antylskie",
    many: "guldenów antylskich",
    other: "guldena antylskiego"
}, {
    id: "NLG",
    displayName: "gulden holenderski"
}, {
    id: "SRG",
    displayName: "gulden surinamski"
}, {
    id: "UAH",
    displayName: "hrywna ukraińska",
    symbol: "UAH",
    one: "hrywna ukraińska",
    few: "hrywny ukraińskie",
    many: "hrywien ukraińskich",
    other: "hrywny ukraińskiej"
}, {
    id: "PEI",
    displayName: "inti peruwiański"
}, {
    id: "XBA",
    displayName: "jednostka emisji euroobligacji"
}, {
    id: "JPY",
    displayName: "jen japoński",
    symbol: "JPY",
    one: "jen japoński",
    few: "jeny japońskie",
    many: "jenów japońskich",
    other: "jena japońskiego"
}, {
    id: "CNY",
    displayName: "juan chiński",
    symbol: "CNY",
    one: "juan chiński",
    few: "juany chińskie",
    many: "juanów chińskich",
    other: "juana chińskiego"
}, {
    id: "UAK",
    displayName: "karbowaniec ukraiński",
    one: "karbowaniec ukraiński",
    few: "karbowańce ukraińskie",
    many: "karbowańców ukraińskich",
    other: "karbowaniec ukraiński"
}, {
    id: "MMK",
    displayName: "kiat birmański",
    symbol: "MMK",
    one: "kiat birmański",
    few: "kiaty birmańskie",
    many: "kiatów birmańskich",
    other: "kiata birmańskiego"
}, {
    id: "PGK",
    displayName: "kina Papua Nowa Gwinea",
    symbol: "PGK",
    one: "kina papuaska",
    few: "kina papuaskie",
    many: "kina papuaskich",
    other: "kina papuaskiej"
}, {
    id: "LAK",
    displayName: "kip laotański",
    symbol: "LAK",
    one: "kip laotański",
    few: "kipy laotańskie",
    many: "kipów laotańskich",
    other: "kipa laotańskiego"
}, {
    id: "CSK",
    displayName: "korona czechosłowacka",
    one: "korona czechosłowacka",
    few: "korony czechosłowackie",
    many: "koron czechosłowackich",
    other: "korona czechosłowacka"
}, {
    id: "CZK",
    displayName: "korona czeska",
    symbol: "CZK",
    one: "korona czeska",
    few: "korony czeskie",
    many: "koron czeskich",
    other: "korony czeskiej"
}, {
    id: "DKK",
    displayName: "korona duńska",
    symbol: "DKK",
    one: "korona duńska",
    few: "korony duńskie",
    many: "koron duńskich",
    other: "korony duńskiej"
}, {
    id: "EEK",
    displayName: "korona estońska",
    one: "korona estońska",
    few: "korony estońskie",
    many: "koron estońskich",
    other: "korona estońska"
}, {
    id: "ISK",
    displayName: "korona islandzka",
    symbol: "ISK",
    one: "korona islandzka",
    few: "korony islandzkie",
    many: "koron islandzkich",
    other: "korony islandzkiej"
}, {
    id: "NOK",
    displayName: "korona norweska",
    symbol: "NOK",
    one: "korona norweska",
    few: "korony norweskie",
    many: "koron norweskich",
    other: "korony norweskiej"
}, {
    id: "SEK",
    displayName: "korona szwedzka",
    symbol: "SEK",
    one: "korona szwedzka",
    few: "korony szwedzkie",
    many: "koron szwedzkich",
    other: "korony szwedzkiej"
}, {
    id: "SKK",
    displayName: "korona słowacka",
    one: "korona słowacka",
    few: "korony słowackie",
    many: "koron słowackich",
    other: "korona słowacka"
}, {
    id: "HRK",
    displayName: "kuna chorwacka",
    symbol: "HRK",
    one: "kuna chorwacka",
    few: "kuny chorwackie",
    many: "kun chorwackich",
    other: "kuny chorwackiej"
}, {
    id: "GEK",
    displayName: "kupon gruziński larit"
}, {
    id: "MWK",
    displayName: "kwacha malawska",
    symbol: "MWK",
    one: "kwacha malawska",
    few: "kwacha malawskie",
    many: "kwacha malawskich",
    other: "kwacha malawskiej"
}, {
    id: "ZMW",
    displayName: "kwacha zambijska",
    symbol: "ZMW",
    one: "kwacha zambijska",
    few: "kwacha zambijskie",
    many: "kwacha zambijskich",
    other: "kwacha zambijskiej"
}, {
    id: "ZMK",
    displayName: "kwacha zambijska (1968–2012)",
    one: "kwacha zambijska (1968–2012)",
    few: "kwacha zambijskie (1968–2012)",
    many: "kwacha zambijskich (1968–2012)",
    other: "kwacha zambijskiej (1968–2012)"
}, {
    id: "AOA",
    displayName: "kwanza angolańska",
    symbol: "AOA",
    one: "kwanza angolańska",
    few: "kwanzy angolańskie",
    many: "kwanz angolańskich",
    other: "kwanzy angolańskiej"
}, {
    id: "AOK",
    displayName: "kwanza angolańska (1977–1990)",
    one: "kwanza angolańska (1977–1990)",
    few: "kwanzy angolańskie (1977–1990)",
    many: "kwanz angolańskich (1977–1990)",
    other: "kwanza angolańska (1977–1990)"
}, {
    id: "AOR",
    displayName: "kwanza angolańska Reajustado (1995–1999)",
    one: "kwanza angolańska Reajustado (1995–1999)",
    few: "kwanzy angolańskie Reajustado (1995–1999)",
    many: "kwanz angolańskich Reajustado (1995–1999)",
    other: "kwanza angolańska Reajustado (1995–1999)"
}, {
    id: "BUK",
    displayName: "kyat birmański"
}, {
    id: "GEL",
    displayName: "lari gruzińskie",
    symbol: "GEL",
    one: "lari gruzińskie",
    few: "lari gruzińskie",
    many: "lari gruzińskich",
    other: "lari gruzińskiego"
}, {
    id: "MDL",
    displayName: "lej mołdawski",
    symbol: "MDL",
    one: "lej mołdawski",
    few: "leje mołdawskie",
    many: "lejów mołdawskich",
    other: "leja mołdawskiego"
}, {
    id: "RON",
    displayName: "lej rumuński",
    symbol: "RON",
    one: "lej rumuński",
    few: "leje rumuńskie",
    many: "lejów rumuńskich",
    other: "leja rumuńskiego"
}, {
    id: "ROL",
    displayName: "lej rumuński (1952–2006)",
    one: "lej rumuński (1952–2006)",
    few: "lei rumuńskie (1952–2006)",
    many: "lei rumuńskich (1952–2006)",
    other: "leja rumuńskiego (1952–2006)"
}, {
    id: "ALL",
    displayName: "lek albański",
    symbol: "ALL",
    one: "lek albański",
    few: "leki albańskie",
    many: "leków albańskich",
    other: "leka albańskiego"
}, {
    id: "HNL",
    displayName: "lempira honduraska",
    symbol: "HNL",
    one: "lempira honduraska",
    few: "lempiry honduraskie",
    many: "lempir honduraskich",
    other: "lempiry honduraskiej"
}, {
    id: "SLL",
    displayName: "leone sierraleoński",
    symbol: "SLL",
    one: "leone sierraleoński",
    few: "leone sierraleońskie",
    many: "leone sierraleońskich",
    other: "leone sierraleońskiego"
}, {
    id: "BGN",
    displayName: "lew bułgarski",
    symbol: "BGN",
    one: "lew bułgarski",
    few: "lewy bułgarskie",
    many: "lewów bułgarskich",
    other: "lewa bułgarskiego"
}, {
    id: "BGO",
    displayName: "lew bułgarski (1879–1952)",
    one: "lew bułgarski (1879–1952)",
    few: "lewy bułgarskie (1879–1952)",
    many: "lewów bułgarskich (1879–1952)",
    other: "lewa bułgarskiego (1879–1952)"
}, {
    id: "BGM",
    displayName: "lew bułgarski socjalistyczny",
    symbol: "BGM",
    one: "lew bułgarski socjalistyczny",
    few: "lewy bułgarskie socjalistyczne",
    many: "lewów bułgarskich socjalistycznych",
    other: "lewa bułgarskiego socjalistycznego"
}, {
    id: "BGL",
    displayName: "lew bułgarski wymienny",
    symbol: "BGL",
    one: "lew bułgarski wymienny",
    few: "lewy bułgarskie wymienne",
    many: "lewów bułgarskich wymiennych",
    other: "lewa bułgarskiego wymiennego"
}, {
    id: "SZL",
    displayName: "lilangeni Suazi",
    symbol: "SZL",
    one: "lilangeni Suazi",
    few: "emalangeni Suazi",
    many: "emalangeni Suazi",
    other: "emalangeni Suazi"
}, {
    id: "ITL",
    displayName: "lir włoski"
}, {
    id: "MTL",
    displayName: "lira maltańska"
}, {
    id: "TRY",
    displayName: "lira turecka",
    symbol: "TRY",
    one: "lira turecka",
    few: "liry tureckie",
    many: "lir tureckich",
    other: "liry tureckiej"
}, {
    id: "TRL",
    displayName: "lira turecka (1922–2005)",
    one: "lira turecka (1922–2005)",
    few: "liry tureckie (1922–2005)",
    many: "lir tureckich (1922–2005)",
    other: "liry tureckiej (1922–2005)"
}, {
    id: "LTL",
    displayName: "lit litewski",
    symbol: "LTL",
    one: "lit litewski",
    few: "lity litewskie",
    many: "litów litewskich",
    other: "lita litewskiego"
}, {
    id: "LSL",
    displayName: "loti Lesoto"
}, {
    id: "AZM",
    displayName: "manat azerbejdżański",
    one: "manat azerbejdżański",
    few: "manat azerbejdżański",
    many: "manat azerbejdżański",
    other: "manat azerbejdżański"
}, {
    id: "AZN",
    displayName: "manat azerski",
    symbol: "AZN",
    one: "manat azerski",
    few: "manaty azerskie",
    many: "manatów azerskich",
    other: "manata azerskiego"
}, {
    id: "TMT",
    displayName: "manat turkmeński",
    symbol: "TMT",
    one: "manat turkmeński",
    few: "manaty turkmeńskie",
    many: "manatów turkmeńskich",
    other: "manata turkmeńskiego"
}, {
    id: "TMM",
    displayName: "manat turkmeński (1993–2009)",
    one: "manat turkmeński (1993–2009)",
    few: "manaty turkmeńskie (1993–2009)",
    many: "manatów turkmeńskich (1993–2009)",
    other: "manata turkmeńskiego (1993–2009)"
}, {
    id: "FIM",
    displayName: "marka fińska"
}, {
    id: "DEM",
    displayName: "marka niemiecka",
    one: "marka niemiecka",
    few: "marki niemieckie",
    many: "marek niemieckich",
    other: "marka niemiecka"
}, {
    id: "BAM",
    displayName: "marka zamienna Bośni i Hercegowiny",
    symbol: "BAM",
    one: "marka zamienna Bośni i Hercegowiny",
    few: "marki zamienne Bośni i Hercegowiny",
    many: "marek zamiennych Bośni i Hercegowiny",
    other: "marki zamiennej Bośni i Hercegowiny"
}, {
    id: "MZM",
    displayName: "metical Mozambik"
}, {
    id: "MZN",
    displayName: "metical mozambicki",
    symbol: "MZN",
    one: "metical mozambijski",
    few: "meticale mozambijskie",
    many: "meticali mozambijskich",
    other: "meticala mozambijskiego"
}, {
    id: "BOV",
    displayName: "mvdol boliwijski"
}, {
    id: "NGN",
    displayName: "naira nigeryjska",
    symbol: "NGN",
    one: "naira nigeryjska",
    few: "nairy nigeryjskie",
    many: "nair nigeryjskich",
    other: "nairy nigeryjskiej"
}, {
    id: "ERN",
    displayName: "nakfa erytrejska",
    symbol: "ERN",
    one: "nakfa erytrejska",
    few: "nakfy erytrejskie",
    many: "nakf erytrejskich",
    other: "nakfy erytrejskiej"
}, {
    id: "BTN",
    displayName: "ngultrum bhutański",
    symbol: "BTN",
    one: "ngultrum bhutański",
    few: "ngultrum bhutańskie",
    many: "ngultrum bhutańskich",
    other: "ngultrum bhutańskiego"
}, {
    id: "XXX",
    displayName: "nieznana waluta",
    one: "nieznana waluta",
    few: "nieznanej waluty",
    many: "nieznanej waluty",
    other: "nieznanej waluty"
}, {
    id: "AON",
    displayName: "nowa kwanza angolańska (1990–2000)",
    one: "nowa kwanza angolańska (1990–2000)",
    few: "nowe kwanzy angolańskie (1990–2000)",
    many: "nowych kwanz angolańskich (1990–2000)",
    other: "nowa kwanza angolańska (1990–2000)"
}, {
    id: "BRN",
    displayName: "nowe cruzado brazylijskie"
}, {
    id: "YUM",
    displayName: "nowy dinar jugosławiański"
}, {
    id: "TWD",
    displayName: "nowy dolar tajwański",
    symbol: "TWD",
    one: "nowy dolar tajwański",
    few: "nowe dolary tajwańskie",
    many: "nowych dolarów tajwańskich",
    other: "nowego dolara tajwańskiego"
}, {
    id: "PEN",
    displayName: "nowy sol peruwiański",
    symbol: "PEN",
    one: "nowy sol peruwiański",
    few: "nowe sole peruwiańskie",
    many: "nowych soli peruwiańskich",
    other: "nowego sola peruwiańskiego"
}, {
    id: "ILS",
    displayName: "nowy szekel izraelski",
    symbol: "ILS",
    one: "nowy szekel izraelski",
    few: "nowe szekle izraelskie",
    many: "nowych szekli izraelskich",
    other: "nowego szekla izraelskiego"
}, {
    id: "ZRN",
    displayName: "nowy zair zairski"
}, {
    id: "MRO",
    displayName: "ouguiya mauretańska",
    symbol: "MRO",
    one: "ouguiya mauretańska",
    few: "ouguiya mauretańskie",
    many: "ouguiya mauretańskich",
    other: "ouguiya mauretańskiej"
}, {
    id: "XPD",
    displayName: "pallad"
}, {
    id: "MOP",
    displayName: "pataca Makau",
    symbol: "MOP",
    one: "pataca Makau",
    few: "pataca Makau",
    many: "pataca Makau",
    other: "pataca Makau"
}, {
    id: "TOP",
    displayName: "pa’anga tongijska",
    symbol: "TOP",
    one: "pa’anga tongijska",
    few: "pa’anga tongijskie",
    many: "pa’anga tongijskich",
    other: "pa’anga tongijskiej"
}, {
    id: "ADP",
    displayName: "peseta andorska",
    one: "peseta andorska",
    few: "pesety andorskie",
    many: "peset andorskich",
    other: "peseta andorska"
}, {
    id: "ESP",
    displayName: "peseta hiszpańska",
    symbol: "₧"
}, {
    id: "ESA",
    displayName: "peseta hiszpańska (Konto A)"
}, {
    id: "ESB",
    displayName: "peseta hiszpańska (konto wymienne)",
    one: "peseta hiszpańska (konto wymienialne)",
    few: "pesety hiszpańskie (konto wymienialne)",
    many: "peset hiszpańskich (konto wymienialne)",
    other: "peseta hiszpańska (konto wymienne)"
}, {
    id: "GWP",
    displayName: "peso Guinea-Bissau"
}, {
    id: "ARS",
    displayName: "peso argentyńskie",
    symbol: "ARS",
    one: "peso argentyńskie",
    few: "pesos argentyńskie",
    many: "pesos argentyńskich",
    other: "peso argentyńskiego"
}, {
    id: "ARP",
    displayName: "peso argentyńskie (1983–1985)"
}, {
    id: "BOP",
    displayName: "peso boliwijskie"
}, {
    id: "CLP",
    displayName: "peso chilijskie",
    symbol: "CLP",
    one: "peso chilijskie",
    few: "pesos chilijskie",
    many: "pesos chilijskich",
    other: "peso chilijskiego"
}, {
    id: "DOP",
    displayName: "peso dominikańskie",
    symbol: "DOP",
    one: "peso dominikańskie",
    few: "pesos dominikańskie",
    many: "pesos dominikańskich",
    other: "peso dominikańskiego"
}, {
    id: "PHP",
    displayName: "peso filipińskie",
    symbol: "PHP",
    one: "peso filipińskie",
    few: "pesos filipińskie",
    many: "pesos filipińskich",
    other: "peso filipińskiego"
}, {
    id: "COP",
    displayName: "peso kolumbijskie",
    symbol: "COP",
    one: "peso kolumbijskie",
    few: "pesos kolumbijskie",
    many: "pesos kolumbijskich",
    other: "peso kolumbijskiego"
}, {
    id: "CUP",
    displayName: "peso kubańskie",
    symbol: "CUP",
    one: "peso kubańskie",
    few: "pesos kubańskie",
    many: "pesos kubańskich",
    other: "peso kubańskiego"
}, {
    id: "CUC",
    displayName: "peso kubańskie wymienialne",
    symbol: "CUC",
    one: "peso kubańskie wymienialne",
    few: "pesos kubańskie wymienialne",
    many: "pesos kubańskich wymienialnych",
    other: "peso kubańskiego wymienialnego"
}, {
    id: "MXN",
    displayName: "peso meksykańskie",
    symbol: "MXN",
    one: "peso meksykańskie",
    few: "pesos meksykańskie",
    many: "pesos meksykańskich",
    other: "peso meksykańskiego"
}, {
    id: "MXP",
    displayName: "peso srebrne meksykańskie (1861–1992)"
}, {
    id: "UYU",
    displayName: "peso urugwajskie",
    symbol: "UYU",
    one: "peso urugwajskie",
    few: "pesos urugwajskie",
    many: "pesos urugwajskich",
    other: "peso urugwajskiego"
}, {
    id: "UYP",
    displayName: "peso urugwajskie (1975–1993)"
}, {
    id: "XPT",
    displayName: "platyna"
}, {
    id: "BWP",
    displayName: "pula botswańska",
    symbol: "BWP",
    one: "pula botswańska",
    few: "pule botswańskie",
    many: "pul botswańskich",
    other: "puli botswańskiej"
}, {
    id: "GTQ",
    displayName: "quetzal gwatemalski",
    symbol: "GTQ",
    one: "quetzal gwatemalski",
    few: "quetzale gwatemalskie",
    many: "quetzali gwatemalskich",
    other: "quetzala gwatemalskiego"
}, {
    id: "ZAR",
    displayName: "rand południowoafrykański",
    symbol: "ZAR",
    one: "rand południowoafrykański",
    few: "randy południowoafrykańskie",
    many: "randów południowoafrykańskich",
    other: "randa południowoafrykańskiego"
}, {
    id: "ZAL",
    displayName: "rand południowoafrykański (finansowy)"
}, {
    id: "BRL",
    displayName: "real brazylijski",
    symbol: "R$",
    one: "real brazylijski",
    few: "reale brazylijskie",
    many: "reali brazylijskich",
    other: "reala brazylijskiego"
}, {
    id: "IRR",
    displayName: "rial irański",
    symbol: "IRR",
    one: "rial irański",
    few: "riale irańskie",
    many: "riali irańskich",
    other: "riala irańskiego"
}, {
    id: "YER",
    displayName: "rial jemeński",
    symbol: "YER",
    one: "rial jemeński",
    few: "riale jemeńskie",
    many: "riali jemeńskich",
    other: "riala jemeńskiego"
}, {
    id: "QAR",
    displayName: "rial katarski",
    symbol: "QAR",
    one: "rial katarski",
    few: "riale katarskie",
    many: "riali katarskich",
    other: "riala katarskiego"
}, {
    id: "OMR",
    displayName: "rial omański",
    symbol: "OMR",
    one: "rial omański",
    few: "riale omańskie",
    many: "riali omańskich",
    other: "riala omańskiego"
}, {
    id: "SAR",
    displayName: "rial saudyjski",
    symbol: "SAR",
    one: "rial saudyjski",
    few: "riale saudyjskie",
    many: "riali saudyjskich",
    other: "riala saudyjskiego"
}, {
    id: "KHR",
    displayName: "riel kambodżański",
    symbol: "KHR",
    one: "riel kambodżański",
    few: "riele kambodżańskie",
    many: "rieli kambodżańskich",
    other: "riela kambodżańskiego"
}, {
    id: "MYR",
    displayName: "ringgit malezyjski",
    symbol: "MYR",
    one: "ringgit malezyjski",
    few: "ringgity malezyjskie",
    many: "ringgitów malezyjskich",
    other: "ringgita malezyjskiego"
}, {
    id: "BYR",
    displayName: "rubel białoruski",
    symbol: "BYR",
    one: "rubel białoruski",
    few: "ruble białoruskie",
    many: "rubli białoruskich",
    other: "rubla białoruskiego"
}, {
    id: "BYB",
    displayName: "rubel białoruski (1994–1999)"
}, {
    id: "SUR",
    displayName: "rubel radziecki",
    one: "rubel radziecki",
    few: "ruble radzieckie",
    many: "rubli radzieckich",
    other: "rubel radziecki"
}, {
    id: "RUB",
    displayName: "rubel rosyjski",
    symbol: "RUB",
    one: "rubel rosyjski",
    few: "ruble rosyjskie",
    many: "rubli rosyjskich",
    other: "rubla rosyjskiego"
}, {
    id: "RUR",
    displayName: "rubel rosyjski (1991–1998)",
    symbol: "р.",
    one: "rubel rosyjski (1991–1998)",
    few: "ruble rosyjskie (1991–1998)",
    many: "rubli rosyjskich (1991–1998)",
    other: "rubla rosyjskiego (1991–1998)"
}, {
    id: "TJR",
    displayName: "rubel tadżycki"
}, {
    id: "LVR",
    displayName: "rubel łotewski"
}, {
    id: "IDR",
    displayName: "rupia indonezyjska",
    symbol: "IDR",
    one: "rupia indonezyjska",
    few: "rupie indonezyjskie",
    many: "rupii indonezyjskich",
    other: "rupii indonezyjskiej"
}, {
    id: "INR",
    displayName: "rupia indyjska",
    symbol: "INR",
    one: "rupia indyjska",
    few: "rupie indyjskie",
    many: "rupii indyjskich",
    other: "rupii indyjskiej"
}, {
    id: "LKR",
    displayName: "rupia lankijska",
    symbol: "LKR",
    one: "rupia lankijska",
    few: "rupie lankijskie",
    many: "rupii lankijskich",
    other: "rupii lankijskiej"
}, {
    id: "MVR",
    displayName: "rupia malediwska",
    symbol: "MVR",
    one: "rupia malediwska",
    few: "rupie malediwskie",
    many: "rupii malediwskich",
    other: "rupii malediwskiej"
}, {
    id: "MUR",
    displayName: "rupia maurytyjska",
    symbol: "MUR",
    one: "rupia maurytyjska",
    few: "rupie maurytyjskie",
    many: "rupii maurytyjskich",
    other: "rupii maurytyjskiej"
}, {
    id: "NPR",
    displayName: "rupia nepalska",
    symbol: "NPR",
    one: "rupia nepalska",
    few: "rupie nepalskie",
    many: "rupii nepalskich",
    other: "rupii nepalskiej"
}, {
    id: "PKR",
    displayName: "rupia pakistańska",
    symbol: "PKR",
    one: "rupia pakistańska",
    few: "rupie pakistańskie",
    many: "rupii pakistańskich",
    other: "rupii pakistańskiej"
}, {
    id: "SCR",
    displayName: "rupia seszelska",
    symbol: "SCR",
    one: "rupia seszelska",
    few: "rupie seszelskie",
    many: "rupii seszelskich",
    other: "rupii seszelskiej"
}, {
    id: "PES",
    displayName: "sol peruwiański"
}, {
    id: "KGS",
    displayName: "som kirgiski",
    symbol: "KGS",
    one: "som kirgiski",
    few: "somy kirgiskie",
    many: "somów kirgiskich",
    other: "soma kirgiskiego"
}, {
    id: "UZS",
    displayName: "som uzbecki",
    symbol: "UZS",
    one: "som uzbecki",
    few: "somy uzbeckie",
    many: "somów uzbeckich",
    other: "soma uzbeckiego"
}, {
    id: "TJS",
    displayName: "somoni tadżyckie",
    symbol: "TJS",
    one: "somoni tadżyckie",
    few: "somoni tadżyckie",
    many: "somoni tadżyckich",
    other: "somoni tadżyckiego"
}, {
    id: "XDR",
    displayName: "specjalne prawa ciągnienia"
}, {
    id: "XAG",
    displayName: "srebro"
}, {
    id: "CSD",
    displayName: "stary dinar serbski"
}, {
    id: "ECS",
    displayName: "sucre ekwadorski"
}, {
    id: "GNS",
    displayName: "syli gwinejskie"
}, {
    id: "ATS",
    displayName: "szyling austriacki"
}, {
    id: "KES",
    displayName: "szyling kenijski",
    symbol: "KES",
    one: "szyling kenijski",
    few: "szylingi kenijskie",
    many: "szylingów kenijskich",
    other: "szylinga kenijskiego"
}, {
    id: "SOS",
    displayName: "szyling somalijski",
    symbol: "SOS",
    one: "szyling somalijski",
    few: "szylingi somalijskie",
    many: "szylingów somalijskich",
    other: "szylinga somalijskiego"
}, {
    id: "TZS",
    displayName: "szyling tanzański",
    symbol: "TZS",
    one: "szyling tanzański",
    few: "szylingi tanzańskie",
    many: "szylingów tanzańskich",
    other: "szylinga tanzańskiego"
}, {
    id: "UGX",
    displayName: "szyling ugandyjski",
    symbol: "UGX",
    one: "szyling ugandyjski",
    few: "szylingi ugandyjskie",
    many: "szylingów ugandyjskich",
    other: "szylinga ugandyjskiego"
}, {
    id: "UGS",
    displayName: "szyling ugandyjski (1966–1987)"
}, {
    id: "BDT",
    displayName: "taka bengalska",
    symbol: "BDT",
    one: "taka bengalska",
    few: "taka bengalskie",
    many: "taka bengalskich",
    other: "taka bengalskiej"
}, {
    id: "WST",
    displayName: "tala samoańska",
    symbol: "WST",
    one: "tala samoańskie",
    few: "tala samoańskie",
    many: "tala samoańskich",
    other: "tala samoańskiego"
}, {
    id: "LTT",
    displayName: "talon litewski"
}, {
    id: "KZT",
    displayName: "tenge kazachskie",
    symbol: "KZT",
    one: "tenge kazachskie",
    few: "tenge kazachskie",
    many: "tenge kazachskich",
    other: "tenge kazachskiego"
}, {
    id: "XTS",
    displayName: "testowy kod waluty"
}, {
    id: "SIT",
    displayName: "tolar słoweński",
    one: "tolar słoweński",
    few: "tolary słoweńskie",
    many: "tolarów słoweńskich",
    other: "tolar słoweński"
}, {
    id: "MNT",
    displayName: "tugrik mongolski",
    symbol: "MNT",
    one: "tugrik mongolski",
    few: "tugriki mongolskie",
    many: "tugrików mongolskich",
    other: "tugrika mongolskiego"
}, {
    id: "VUV",
    displayName: "vatu Vanuatu",
    symbol: "VUV",
    one: "vatu vanuatuańskie",
    few: "vatu vanuatuańskie",
    many: "vatu vanuatuańskich",
    other: "vatu vanuatuańskiego"
}, {
    id: "KRW",
    displayName: "won południowokoreański",
    symbol: "KRW",
    one: "won południowokoreański",
    few: "wony południowokoreańskie",
    many: "wonów południowokoreańskich",
    other: "wona południowokoreańskiego"
}, {
    id: "KPW",
    displayName: "won północnokoreański",
    symbol: "KPW",
    one: "won północnokoreański",
    few: "wony północnokoreańskie",
    many: "wonów północnokoreańskich",
    other: "wona północnokoreańskiego"
}, {
    id: "DDM",
    displayName: "wschodnia marka wschodnioniemiecka"
}, {
    id: "ZRZ",
    displayName: "zair zairski"
}, {
    id: "XAU",
    displayName: "złoto"
}, {
    id: "PLN",
    displayName: "złoty polski",
    symbol: "zł",
    one: "złoty polski",
    few: "złote polskie",
    many: "złotych polskich",
    other: "złotego polskiego"
}, {
    id: "PLZ",
    displayName: "złoty polski (1950–1995)",
    one: "złoty polski (1950–1995)",
    few: "złote polskie (1950–1995)",
    many: "złotych polskich (1950–1995)",
    other: "złotego polskiego (1950–1995)"
}, {
    id: "LVL",
    displayName: "łat łotewski",
    symbol: "LVL",
    one: "łat łotewski",
    few: "łaty łotewskie",
    many: "łatów łotewskich",
    other: "łata łotewskiego"
} ];

module.exports = inter;