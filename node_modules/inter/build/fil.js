function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _gxze1 = {
    one: "0K",
    other: "0K"
}, _gxze2 = {
    one: "0M",
    other: "0M"
}, _gxze3 = {
    one: "0B",
    other: "0B"
}, _gxze4 = {
    one: "0T",
    other: "0T"
}, _gxze5 = [ "Q1", "Q2", "Q3", "Q4" ], _gxze6 = {
    displayName: "AM/PM"
}, _gxze7 = {
    all: {
        leap: "{0}bis"
    }
}, _gxze8 = {
    one: "00K",
    other: "00K"
}, _gxze9 = {
    one: "00M",
    other: "00M"
}, _gxze10 = {
    one: "00B",
    other: "00B"
}, _gxze11 = {
    one: "00T",
    other: "00T"
}, _gxze12 = {
    one: "¤0K",
    other: "¤0K"
}, _gxze13 = {
    one: "¤0M",
    other: "¤0M"
}, _gxze14 = {
    one: "¤0B",
    other: "¤0B"
}, _gxze15 = {
    one: "¤0T",
    other: "¤0T"
}, _gxze16 = {
    one: "{0}°",
    other: "{0}°"
}, _gxze17 = {
    one: "{0}′",
    other: "{0}′"
}, _gxze18 = {
    one: "{0}″",
    other: "{0}″"
}, _gxze19 = {
    one: "{0}m",
    other: "{0}m"
}, _gxze20 = {
    one: "000K",
    other: "000K"
}, _gxze21 = {
    one: "000M",
    other: "000M"
}, _gxze22 = {
    one: "000B",
    other: "000B"
}, _gxze23 = {
    one: "000T",
    other: "000T"
}, _gxze24 = {
    one: "¤00K",
    other: "¤00K"
}, _gxze25 = {
    one: "¤00M",
    other: "¤00M"
}, _gxze26 = {
    one: "¤00B",
    other: "¤00B"
}, _gxze27 = {
    one: "¤00T",
    other: "¤00T"
}, _gxze28 = {
    a: "h a – h a",
    h: "h–h a"
}, _gxze29 = {
    displayName: "time zone"
}, _gxze30 = [ "Before R.O.C.", "R.O.C." ], _gxze31 = {
    one: "{0}°C",
    other: "{0}°C"
}, _gxze32 = {
    one: "{0}°F",
    other: "{0}°F"
}, _gxze33 = {
    one: "¤000K",
    other: "¤000K"
}, _gxze34 = {
    one: "¤000M",
    other: "¤000M"
}, _gxze35 = {
    one: "¤000B",
    other: "¤000B"
}, _gxze36 = {
    one: "¤000T",
    other: "¤000T"
}, _gxze37 = {
    one: "{0} m²",
    other: "{0} m²"
}, _gxze38 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _gxze39 = {
    d: "M/d – M/d",
    M: "M/d – M/d"
}, _gxze40 = {
    displayName: "araw ng linggo"
}, _gxze41 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _gxze42 = {
    one: "0 libo",
    other: "0 na libo"
}, _gxze43 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _gxze44 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _gxze45 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _gxze46 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _gxze47 = {
    one: "00 libo",
    other: "00 na libo"
}, _gxze48 = {
    one: "{0} siglo",
    other: "{0} siglo"
}, _gxze49 = {
    one: "{0} buwan",
    other: "{0} buwan"
}, _gxze50 = {
    one: "{0} araw",
    other: "{0} na araw"
}, _gxze51 = {
    one: "{0} oras",
    other: "{0} na oras"
}, _gxze52 = {
    one: "000 libo",
    other: "000 na libo"
}, _gxze53 = {
    one: "0 milyon",
    other: "0 na milyon"
}, _gxze54 = {
    one: "0 bilyon",
    other: "0 na bilyon"
}, _gxze55 = [ "Li", "Lu", "Ma", "Mi", "Hu", "Bi", "Sa" ], _gxze56 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _gxze57 = {
    M: "MMM–MMM y G",
    y: "MMM y – MMM y G"
}, _gxze58 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _gxze59 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _gxze60 = {
    one: "00 milyon",
    other: "00 na milyon"
}, _gxze61 = {
    one: "00 bilyon",
    other: "00 na bilyon"
}, _gxze62 = {
    one: "0 trilyon",
    other: "0 na trilyon"
}, _gxze63 = {
    one: "{0} linggo",
    other: "{0} na linggo"
}, _gxze64 = {
    one: "000 milyon",
    other: "000 na milyon"
}, _gxze65 = {
    one: "000 bilyon",
    other: "000 na bilyon"
}, _gxze66 = {
    one: "00 trilyon",
    other: "00 na trilyon"
}, _gxze67 = {
    d: "E, M/d – E, M/d",
    M: "E, M/d – E, M/d"
}, _gxze68 = {
    M: "M/y – M/y GGGGG",
    y: "M/y – M/y GGGGG"
}, _gxze69 = {
    M: "MMMM–MMMM y G",
    y: "MMMM y – MMMM y G"
}, _gxze70 = {
    one: "000 trilyon",
    other: "000 na trilyon"
}, _gxze71 = [ "Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab" ], _gxze72 = {
    one: "sa {0} taon",
    other: "sa {0} (na) taon"
}, _gxze73 = {
    one: "sa {0} araw",
    other: "sa {0} (na) araw"
}, _gxze74 = {
    one: "sa {0} oras",
    other: "sa {0} (na) oras"
}, _gxze75 = {
    one: "sa {0} min.",
    other: "sa {0} (na) min."
}, _gxze76 = {
    one: "sa {0} seg.",
    other: "sa {0} (na) seg."
}, _gxze77 = {
    one: "sa {0} buwan",
    other: "sa {0} (na) buwan"
}, _gxze78 = {
    one: "sa {0} linggo",
    other: "sa {0} (na) linggo"
}, _gxze79 = {
    one: "sa {0} minuto",
    other: "sa {0} (na) minuto"
}, _gxze80 = {
    d: "E, MMM d – E, MMM d",
    M: "E, MMM d – E, MMM d"
}, _gxze81 = {
    one: "sa {0} (na) araw",
    other: "sa {0} (na) araw"
}, _gxze82 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _gxze83 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _gxze84 = {
    id: "001",
    displayName: "Mundo",
    hasTimeZones: false
}, _gxze85 = {
    one: "sa {0} quarter",
    other: "sa {0} (na) quarter"
}, _gxze86 = {
    one: "sa {0} segundo",
    other: "sa {0} (na) segundo"
}, _gxze87 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _gxze88 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _gxze89 = {
    id: "AQ",
    displayName: "Antarctica",
    hasTimeZones: true
}, _gxze90 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _gxze91 = {
    one: "sa {0} (na) quarter",
    other: "sa {0} (na) quarter"
}, _gxze92 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _gxze93 = {
    id: "BV",
    displayName: "Bouvet Island",
    hasTimeZones: false
}, _gxze94 = {
    id: "IC",
    displayName: "Canary Island",
    hasTimeZones: false
}, _gxze95 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _gxze96 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _gxze97 = {
    one: "{0} oras nakalipas",
    other: "{0} (na) oras nakalipas"
}, _gxze98 = {
    one: "{0} seg. nakalipas",
    other: "{0} (na) seg. nakalipas"
}, _gxze99 = {
    id: "CX",
    displayName: "Christmas Island",
    hasTimeZones: true
}, _gxze100 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _gxze101 = {
    id: "AC",
    displayName: "Acsencion island",
    hasTimeZones: false
}, _gxze102 = {
    id: "TA",
    displayName: "Tristan de Cunha",
    hasTimeZones: false
}, _gxze103 = {
    "0": "ngayong taon",
    "1": "susunod na taon",
    "-1": "nakaraang taon"
}, _gxze104 = {
    "0": "ngayong Lin.",
    "1": "susunod na Lin.",
    "-1": "nakaraang Lin."
}, _gxze105 = {
    "0": "ngayong Lun.",
    "1": "susunod na Lun.",
    "-1": "nakaraang Lun."
}, _gxze106 = {
    "0": "ngayong Mar.",
    "1": "susunod na Mar.",
    "-1": "nakaraang Mar."
}, _gxze107 = {
    "0": "ngayong Miy.",
    "1": "susunod na Miy.",
    "-1": "nakaraang Miy."
}, _gxze108 = {
    "0": "ngayong Huw.",
    "1": "susunod na Huw.",
    "-1": "nakaraang Huw."
}, _gxze109 = {
    "0": "ngayong Biy.",
    "1": "susunod na Biy.",
    "-1": "nakaraang Biy."
}, _gxze110 = {
    "0": "ngayong Sab.",
    "1": "susunod na Sab.",
    "-1": "nakaraang Sab."
}, _gxze111 = {
    id: "EA",
    displayName: "Ceuta and Melilla",
    hasTimeZones: false
}, _gxze112 = {
    id: "CP",
    displayName: "Clipperton Island",
    hasTimeZones: false
}, _gxze113 = {
    id: "TD",
    displayName: "Chad",
    regionId: "017",
    hasTimeZones: true
}, _gxze114 = {
    id: "CU",
    displayName: "Cuba",
    regionId: "029",
    hasTimeZones: true
}, _gxze115 = {
    id: "FJ",
    displayName: "Fiji",
    regionId: "054",
    hasTimeZones: true
}, _gxze116 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _gxze117 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _gxze118 = {
    id: "IQ",
    displayName: "Iraq",
    regionId: "145",
    hasTimeZones: true
}, _gxze119 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _gxze120 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _gxze121 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _gxze122 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _gxze123 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _gxze124 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _gxze125 = {
    one: "{0} seg. ang nakalipas",
    other: "{0} (na) seg. nakalipas"
}, _gxze126 = {
    "0": "sa Linggo",
    "1": "susunod na Linggo",
    "-1": "lumipas na Linggo"
}, _gxze127 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _gxze128 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _gxze129 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _gxze130 = {
    id: "CN",
    displayName: "China",
    regionId: "030",
    hasTimeZones: true
}, _gxze131 = {
    id: "EG",
    displayName: "Egypt",
    regionId: "015",
    hasTimeZones: true
}, _gxze132 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _gxze133 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _gxze134 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _gxze135 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _gxze136 = {
    id: "IT",
    displayName: "Italy",
    regionId: "039",
    hasTimeZones: true
}, _gxze137 = {
    id: "JP",
    displayName: "Japan",
    regionId: "030",
    hasTimeZones: true
}, _gxze138 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _gxze139 = {
    id: "LY",
    displayName: "Libya",
    regionId: "015",
    hasTimeZones: true
}, _gxze140 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _gxze141 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _gxze142 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _gxze143 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _gxze144 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _gxze145 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _gxze146 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _gxze147 = {
    id: "ES",
    displayName: "Spain",
    regionId: "039",
    hasTimeZones: true
}, _gxze148 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _gxze149 = {
    id: "SY",
    displayName: "Syria",
    regionId: "145",
    hasTimeZones: true
}, _gxze150 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _gxze151 = {
    id: "YE",
    displayName: "Yemen",
    regionId: "145",
    hasTimeZones: true
}, _gxze152 = [ "E", "P", "M", "A", "M", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis" ], _gxze153 = {
    "0": "ngayong buwan",
    "1": "susunod na buwan",
    "-1": "nakaraang buwan"
}, _gxze154 = {
    "0": "ngayong Lunes",
    "1": "susunod na Lunes",
    "-1": "nakaraang Lunes"
}, _gxze155 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _gxze156 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _gxze157 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _gxze158 = {
    id: "BR",
    displayName: "Brazil",
    regionId: "005",
    hasTimeZones: true
}, _gxze159 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _gxze160 = {
    id: "CA",
    displayName: "Canada",
    regionId: "021",
    hasTimeZones: true
}, _gxze161 = {
    id: "CY",
    displayName: "Cyprus",
    regionId: "145",
    hasTimeZones: true
}, _gxze162 = {
    id: "FR",
    displayName: "France",
    regionId: "155",
    hasTimeZones: true
}, _gxze163 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _gxze164 = {
    id: "GR",
    displayName: "Greece",
    regionId: "039",
    hasTimeZones: true
}, _gxze165 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _gxze166 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _gxze167 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _gxze168 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _gxze169 = {
    id: "JO",
    displayName: "Jordan",
    regionId: "145",
    hasTimeZones: true
}, _gxze170 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _gxze171 = {
    id: "LV",
    displayName: "Latvia",
    regionId: "154",
    hasTimeZones: true
}, _gxze172 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _gxze173 = {
    id: "MX",
    displayName: "Mexico",
    regionId: "013",
    hasTimeZones: true
}, _gxze174 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _gxze175 = {
    id: "NO",
    displayName: "Norway",
    regionId: "154",
    hasTimeZones: true
}, _gxze176 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _gxze177 = {
    id: "PL",
    displayName: "Poland",
    regionId: "151",
    hasTimeZones: true
}, _gxze178 = {
    id: "RU",
    displayName: "Russia",
    regionId: "151",
    hasTimeZones: true
}, _gxze179 = {
    id: "RW",
    displayName: "Rwanda",
    regionId: "014",
    hasTimeZones: true
}, _gxze180 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _gxze181 = {
    id: "SE",
    displayName: "Sweden",
    regionId: "154",
    hasTimeZones: true
}, _gxze182 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _gxze183 = {
    id: "TR",
    displayName: "Turkey",
    regionId: "145",
    hasTimeZones: true
}, _gxze184 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _gxze185 = {
    id: "UM",
    displayName: "U.S. Outlying Islands",
    hasTimeZones: true
}, _gxze186 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _gxze187 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _gxze188 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _gxze189 = {
    id: "DZ",
    displayName: "Algeria",
    regionId: "015",
    hasTimeZones: true
}, _gxze190 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _gxze191 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _gxze192 = {
    id: "AT",
    displayName: "Austria",
    regionId: "155",
    hasTimeZones: true
}, _gxze193 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _gxze194 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _gxze195 = {
    id: "BY",
    displayName: "Belarus",
    regionId: "151",
    hasTimeZones: true
}, _gxze196 = {
    id: "BE",
    displayName: "Belgium",
    regionId: "155",
    hasTimeZones: true
}, _gxze197 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _gxze198 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _gxze199 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _gxze200 = {
    id: "KM",
    displayName: "Comoros",
    regionId: "014",
    hasTimeZones: true
}, _gxze201 = {
    id: "HR",
    displayName: "Croatia",
    regionId: "039",
    hasTimeZones: true
}, _gxze202 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _gxze203 = {
    id: "DK",
    displayName: "Denmark",
    regionId: "154",
    hasTimeZones: true
}, _gxze204 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _gxze205 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _gxze206 = {
    id: "EE",
    displayName: "Estonia",
    regionId: "154",
    hasTimeZones: true
}, _gxze207 = {
    id: "FI",
    displayName: "Finland",
    regionId: "154",
    hasTimeZones: true
}, _gxze208 = {
    id: "GE",
    displayName: "Georgia",
    regionId: "145",
    hasTimeZones: true
}, _gxze209 = {
    id: "DE",
    displayName: "Germany",
    regionId: "155",
    hasTimeZones: true
}, _gxze210 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _gxze211 = {
    id: "HU",
    displayName: "Hungary",
    regionId: "151",
    hasTimeZones: true
}, _gxze212 = {
    id: "IS",
    displayName: "Iceland",
    regionId: "154",
    hasTimeZones: true
}, _gxze213 = {
    id: "IE",
    displayName: "Ireland",
    regionId: "154",
    hasTimeZones: true
}, _gxze214 = {
    id: "JM",
    displayName: "Jamaica",
    regionId: "029",
    hasTimeZones: true
}, _gxze215 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _gxze216 = {
    id: "LB",
    displayName: "Lebanon",
    regionId: "145",
    hasTimeZones: true
}, _gxze217 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _gxze218 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _gxze219 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _gxze220 = {
    id: "MD",
    displayName: "Moldova",
    regionId: "151",
    hasTimeZones: true
}, _gxze221 = {
    id: "MA",
    displayName: "Morocco",
    regionId: "015",
    hasTimeZones: true
}, _gxze222 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _gxze223 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _gxze224 = {
    id: "RO",
    displayName: "Romania",
    regionId: "151",
    hasTimeZones: true
}, _gxze225 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _gxze226 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _gxze227 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _gxze228 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _gxze229 = {
    id: "TN",
    displayName: "Tunisia",
    regionId: "015",
    hasTimeZones: true
}, _gxze230 = {
    id: "UA",
    displayName: "Ukraine",
    regionId: "151",
    hasTimeZones: true
}, _gxze231 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _gxze232 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _gxze233 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _gxze234 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _gxze235 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _gxze236 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _gxze237 = {
    id: "BG",
    displayName: "Bulgaria",
    regionId: "151",
    hasTimeZones: true
}, _gxze238 = {
    id: "KH",
    displayName: "Cambodia",
    regionId: "035",
    hasTimeZones: true
}, _gxze239 = {
    id: "CM",
    displayName: "Cameroon",
    regionId: "017",
    hasTimeZones: true
}, _gxze240 = {
    id: "CC",
    displayName: "Cocos (Keeling) Islands",
    hasTimeZones: true
}, _gxze241 = {
    id: "CO",
    displayName: "Colombia",
    regionId: "005",
    hasTimeZones: true
}, _gxze242 = {
    id: "DJ",
    displayName: "Djibouti",
    regionId: "014",
    hasTimeZones: true
}, _gxze243 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _gxze244 = {
    id: "ET",
    displayName: "Ethiopia",
    regionId: "014",
    hasTimeZones: true
}, _gxze245 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _gxze246 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _gxze247 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _gxze248 = {
    id: "MY",
    displayName: "Malaysia",
    regionId: "035",
    hasTimeZones: true
}, _gxze249 = {
    id: "MV",
    displayName: "Maldives",
    regionId: "034",
    hasTimeZones: true
}, _gxze250 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _gxze251 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _gxze252 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _gxze253 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _gxze254 = {
    id: "SK",
    displayName: "Slovakia",
    regionId: "151",
    hasTimeZones: true
}, _gxze255 = {
    id: "SI",
    displayName: "Slovenia",
    regionId: "039",
    hasTimeZones: true
}, _gxze256 = {
    id: "SR",
    displayName: "Suriname",
    regionId: "005",
    hasTimeZones: true
}, _gxze257 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _gxze258 = {
    id: "TH",
    displayName: "Thailand",
    regionId: "035",
    hasTimeZones: true
}, _gxze259 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _gxze260 = {
    one: "{0} taon ang nakalipas",
    other: "{0} (na) taon ang nakalipas"
}, _gxze261 = {
    "0": "ngayong linggo",
    "1": "susunod na linggo",
    "-1": "nakaraang linggo"
}, _gxze262 = {
    one: "{0} araw ang nakalipas",
    other: "{0} (na) araw ang nakalipas"
}, _gxze263 = {
    one: "{0} oras ang nakalipas",
    other: "{0} (na) oras ang nakalipas"
}, _gxze264 = {
    one: "{0} min. ang nakalipas",
    other: "{0} (na) min. ang nakalipas"
}, _gxze265 = {
    "0": "ngayong Martes",
    "1": "susunod na Martes",
    "-1": "nakaraang Martes"
}, _gxze266 = {
    "0": "ngayong Sabado",
    "1": "susunod na Sabado",
    "-1": "nakaraang Sabado"
}, _gxze267 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _gxze268 = {
    id: "AU",
    displayName: "Australia",
    regionId: "053",
    hasTimeZones: true
}, _gxze269 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _gxze270 = {
    id: "GL",
    displayName: "Greenland",
    regionId: "021",
    hasTimeZones: true
}, _gxze271 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _gxze272 = {
    id: "ID",
    displayName: "Indonesia",
    regionId: "035",
    hasTimeZones: true
}, _gxze273 = {
    id: "LT",
    displayName: "Lithuania",
    regionId: "154",
    hasTimeZones: true
}, _gxze274 = {
    id: "MK",
    displayName: "Macedonia",
    regionId: "039",
    hasTimeZones: true
}, _gxze275 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _gxze276 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _gxze277 = {
    id: "PH",
    displayName: "Pilipinas",
    regionId: "035",
    hasTimeZones: true
}, _gxze278 = {
    id: "SG",
    displayName: "Singapore",
    regionId: "035",
    hasTimeZones: true
}, _gxze279 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _gxze280 = {
    id: "SZ",
    displayName: "Swaziland",
    regionId: "018",
    hasTimeZones: true
}, _gxze281 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _gxze282 = {
    d: "MMM d–d, y G",
    M: "MMM d – MMM d, y G",
    y: "MMM d, y – MMM d, y G"
}, _gxze283 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _gxze284 = {
    id: "AZ",
    displayName: "Azerbaijan",
    regionId: "145",
    hasTimeZones: true
}, _gxze285 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _gxze286 = {
    id: "CV",
    displayName: "Cape Verde",
    regionId: "011",
    hasTimeZones: true
}, _gxze287 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _gxze288 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _gxze289 = {
    id: "KZ",
    displayName: "Kazakhstan",
    regionId: "143",
    hasTimeZones: true
}, _gxze290 = {
    id: "KG",
    displayName: "Kyrgyzstan",
    regionId: "143",
    hasTimeZones: true
}, _gxze291 = {
    id: "LU",
    displayName: "Luxembourg",
    regionId: "155",
    hasTimeZones: true
}, _gxze292 = {
    id: "MG",
    displayName: "Madagascar",
    regionId: "014",
    hasTimeZones: true
}, _gxze293 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _gxze294 = {
    id: "MR",
    displayName: "Mauritania",
    regionId: "011",
    hasTimeZones: true
}, _gxze295 = {
    id: "FM",
    displayName: "Micronesia",
    regionId: "057",
    hasTimeZones: true
}, _gxze296 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _gxze297 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _gxze298 = {
    id: "MZ",
    displayName: "Mozambique",
    regionId: "014",
    hasTimeZones: true
}, _gxze299 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _gxze300 = {
    id: "SC",
    displayName: "Seychelles",
    regionId: "014",
    hasTimeZones: true
}, _gxze301 = {
    id: "TJ",
    displayName: "Tajikistan",
    regionId: "143",
    hasTimeZones: true
}, _gxze302 = {
    id: "UZ",
    displayName: "Uzbekistan",
    regionId: "143",
    hasTimeZones: true
}, _gxze303 = [ "ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter" ], _gxze304 = {
    one: "{0} buwan ang nakalipas",
    other: "{0} (na) buwan ang nakalipas"
}, _gxze305 = {
    id: "AF",
    displayName: "Afghanistan",
    regionId: "034",
    hasTimeZones: true
}, _gxze306 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _gxze307 = {
    id: "IM",
    displayName: "Isle of Man",
    regionId: "154",
    hasTimeZones: true
}, _gxze308 = {
    id: "NL",
    displayName: "Netherlands",
    regionId: "155",
    hasTimeZones: true
}, _gxze309 = {
    id: "NZ",
    displayName: "New Zealand",
    regionId: "053",
    hasTimeZones: true
}, _gxze310 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _gxze311 = {
    id: "LC",
    displayName: "Saint Lucia",
    regionId: "029",
    hasTimeZones: true
}, _gxze312 = {
    id: "CH",
    displayName: "Switzerland",
    regionId: "155",
    hasTimeZones: true
}, _gxze313 = {
    id: "KR",
    displayName: "Timog Korea",
    regionId: "030",
    hasTimeZones: true
}, _gxze314 = {
    id: "SS",
    displayName: "Timog Sudan",
    regionId: "014",
    hasTimeZones: true
}, _gxze315 = {
    id: "TL",
    displayName: "Timor-Leste",
    regionId: "035",
    hasTimeZones: true
}, _gxze316 = {
    "0": "ngayong quarter",
    "1": "susunod na quarter",
    "-1": "nakaraang quarter"
}, _gxze317 = {
    "0": "ngayong Huwebes",
    "1": "susunod na Huwebes",
    "-1": "nakaraang Huwebes"
}, _gxze318 = {
    id: "142",
    displayName: "Asya",
    hasTimeZones: false,
    parentRegionId: "001"
}, _gxze319 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _gxze320 = {
    id: "CK",
    displayName: "Cook Islands",
    regionId: "061",
    hasTimeZones: true
}, _gxze321 = {
    id: "TF",
    displayName: "French Southern Territories",
    hasTimeZones: true
}, _gxze322 = {
    id: "SH",
    displayName: "Saint Helena",
    regionId: "011",
    hasTimeZones: true
}, _gxze323 = {
    id: "MF",
    displayName: "Saint Martin",
    regionId: "029",
    hasTimeZones: true
}, _gxze324 = {
    id: "SA",
    displayName: "Saudi Arabia",
    regionId: "145",
    hasTimeZones: true
}, _gxze325 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _gxze326 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _gxze327 = {
    id: "ZA",
    displayName: "South Africa",
    regionId: "018",
    hasTimeZones: true
}, _gxze328 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _gxze329 = {
    id: "VA",
    displayName: "Vatican City",
    regionId: "039",
    hasTimeZones: true
}, _gxze330 = [ "Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado" ], _gxze331 = {
    "0": "sa linggong ito",
    "1": "susunod na linggo",
    "-1": "nakalipas na linggo"
}, _gxze332 = {
    one: "{0} linggo ang nakalipas",
    other: "{0} (na) linggo ang nakalipas"
}, _gxze333 = {
    one: "{0} minuto ang nakalipas",
    other: "{0} (na) minuto ang nakalipas"
}, _gxze334 = {
    id: "CI",
    displayName: "Côte d’Ivoire",
    regionId: "011",
    hasTimeZones: true
}, _gxze335 = {
    id: "FO",
    displayName: "Faroe Islands",
    regionId: "154",
    hasTimeZones: true
}, _gxze336 = {
    id: "GF",
    displayName: "French Guiana",
    regionId: "005",
    hasTimeZones: true
}, _gxze337 = {
    id: "GW",
    displayName: "Guinea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _gxze338 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _gxze339 = {
    id: "NC",
    displayName: "New Caledonia",
    regionId: "054",
    hasTimeZones: true
}, _gxze340 = {
    id: "AX",
    displayName: "Åland Islands",
    regionId: "154",
    hasTimeZones: true
}, _gxze341 = {
    one: "{0} (na) araw ang nakalipas",
    other: "{0} (na) araw ang nakalipas"
}, _gxze342 = {
    relative: _gxze104
}, _gxze343 = {
    relative: _gxze105
}, _gxze344 = {
    relative: _gxze106
}, _gxze345 = {
    relative: _gxze107
}, _gxze346 = {
    relative: _gxze108
}, _gxze347 = {
    relative: _gxze109
}, _gxze348 = {
    relative: _gxze110
}, _gxze349 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _gxze350 = {
    id: "002",
    displayName: "Africa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _gxze351 = {
    id: "AS",
    displayName: "American Samoa",
    regionId: "061",
    hasTimeZones: true
}, _gxze352 = {
    id: "KY",
    displayName: "Cayman Islands",
    regionId: "029",
    hasTimeZones: true
}, _gxze353 = {
    id: "CZ",
    displayName: "Czech Republic",
    regionId: "151",
    hasTimeZones: true
}, _gxze354 = {
    id: "US",
    displayName: "Estados Unidos",
    regionId: "021",
    hasTimeZones: true
}, _gxze355 = {
    id: "150",
    displayName: "Europe",
    hasTimeZones: false,
    parentRegionId: "001"
}, _gxze356 = {
    id: "KP",
    displayName: "Hilagang Korea",
    regionId: "030",
    hasTimeZones: true
}, _gxze357 = {
    id: "NF",
    displayName: "Norfolk Island",
    regionId: "053",
    hasTimeZones: true
}, _gxze358 = {
    id: "GB",
    displayName: "United Kingdom",
    regionId: "154",
    hasTimeZones: true
}, _gxze359 = {
    one: "{0} quarter ang nakalipas",
    other: "{0} (na) quarter ang nakalipas"
}, _gxze360 = {
    one: "{0} segundo ang nakalipas",
    other: "{0} (na) segundo ang nakalipas"
}, _gxze361 = {
    "0": "ngayong Biyernes",
    "1": "susunod na Biyernes",
    "-1": "nakaraang Biyernes"
}, _gxze362 = {
    id: "IO",
    displayName: "British Indian Ocean Territory",
    hasTimeZones: true
}, _gxze363 = {
    id: "MO",
    displayName: "Macau SAR China",
    regionId: "030",
    hasTimeZones: true
}, _gxze364 = {
    id: "MM",
    displayName: "Myanmar (Burma)",
    regionId: "035",
    hasTimeZones: true
}, _gxze365 = {
    id: "009",
    displayName: "Oceania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _gxze366 = {
    id: "SB",
    displayName: "Solomon Islands",
    regionId: "054",
    hasTimeZones: true
}, _gxze367 = {
    d: "M/d/y – M/d/y GGGGG",
    M: "M/d/y – M/d/y GGGGG",
    y: "M/d/y – M/d/y GGGGG"
}, _gxze368 = [ "Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis" ], _gxze369 = {
    relative: _gxze126
}, _gxze370 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _gxze371 = {
    id: "019",
    displayName: "Americas",
    hasTimeZones: false,
    parentRegionId: "001"
}, _gxze372 = {
    id: "CD",
    displayName: "Congo - Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _gxze373 = {
    id: "FK",
    displayName: "Falkland Islands",
    regionId: "005",
    hasTimeZones: true
}, _gxze374 = {
    id: "PF",
    displayName: "French Polynesia",
    regionId: "061",
    hasTimeZones: true
}, _gxze375 = {
    id: "EH",
    displayName: "Kanlurang Sahara",
    regionId: "015",
    hasTimeZones: true
}, _gxze376 = {
    id: "MH",
    displayName: "Marshall Islands",
    regionId: "057",
    hasTimeZones: true
}, _gxze377 = {
    id: "PG",
    displayName: "Papua New Guinea",
    regionId: "054",
    hasTimeZones: true
}, _gxze378 = {
    id: "PN",
    displayName: "Pitcairn Islands",
    regionId: "061",
    hasTimeZones: true
}, _gxze379 = {
    id: "BL",
    displayName: "Saint Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _gxze380 = {
    relative: _gxze154
}, _gxze381 = {
    id: "GQ",
    displayName: "Equatorial Guinea",
    regionId: "017",
    hasTimeZones: true
}, _gxze382 = {
    id: "054",
    displayName: "Melanesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _gxze383 = {
    id: "061",
    displayName: "Polynesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _gxze384 = {
    id: "WF",
    displayName: "Wallis and Futuna",
    regionId: "061",
    hasTimeZones: true
}, _gxze385 = {
    id: "029",
    displayName: "Carribbean",
    hasTimeZones: false,
    parentRegionId: "019"
}, _gxze386 = {
    id: "DO",
    displayName: "Dominican Republic",
    regionId: "029",
    hasTimeZones: true
}, _gxze387 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _gxze388 = {
    id: "AG",
    displayName: "Antigua and Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _gxze389 = {
    id: "053",
    displayName: "Australasia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _gxze390 = {
    id: "CG",
    displayName: "Congo - Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _gxze391 = {
    id: "HM",
    displayName: "Heard Island and McDonald Islands",
    hasTimeZones: false
}, _gxze392 = {
    id: "HK",
    displayName: "Hong Kong SAR China",
    regionId: "030",
    hasTimeZones: true
}, _gxze393 = {
    id: "TT",
    displayName: "Trinidad and Tobago",
    regionId: "029",
    hasTimeZones: true
}, _gxze394 = {
    id: "VI",
    displayName: "U.S. Virgin Islands",
    regionId: "029",
    hasTimeZones: true
}, _gxze395 = {
    relative: _gxze265
}, _gxze396 = {
    relative: _gxze266
}, _gxze397 = {
    id: "143",
    displayName: "Gitnang Asya",
    hasTimeZones: false,
    parentRegionId: "142"
}, _gxze398 = {
    id: "AE",
    displayName: "United Arab Emirates",
    regionId: "145",
    hasTimeZones: true
}, _gxze399 = {
    "0": "ngayong Miyerkules",
    "1": "susunod na Miyerkules",
    "-1": "nakaraang Miyerkules"
}, _gxze400 = {
    id: "BQ",
    displayName: "Caribbean Netherlands",
    regionId: "029",
    hasTimeZones: true
}, _gxze401 = {
    id: "KN",
    displayName: "Saint Kitts and Nevis",
    regionId: "029",
    hasTimeZones: true
}, _gxze402 = {
    id: "ST",
    displayName: "São Tomé and Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _gxze403 = {
    id: "005",
    displayName: "Timog Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _gxze404 = {
    id: "BA",
    displayName: "Bosnia and Herzegovina",
    regionId: "039",
    hasTimeZones: true
}, _gxze405 = {
    id: "VG",
    displayName: "British Virgin Islands",
    regionId: "029",
    hasTimeZones: true
}, _gxze406 = {
    id: "017",
    displayName: "Gitnang Africa",
    hasTimeZones: false,
    parentRegionId: "002"
}, _gxze407 = {
    id: "145",
    displayName: "Kanlurang Asya",
    hasTimeZones: false,
    parentRegionId: "142"
}, _gxze408 = {
    id: "030",
    displayName: "Silangang Asya",
    hasTimeZones: false,
    parentRegionId: "142"
}, _gxze409 = {
    id: "SJ",
    displayName: "Svalbard and Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _gxze410 = {
    relative: _gxze317
}, _gxze411 = {
    id: "013",
    displayName: "Gitnang Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _gxze412 = {
    id: "015",
    displayName: "Hilagang Africa",
    hasTimeZones: false,
    parentRegionId: "002"
}, _gxze413 = {
    id: "154",
    displayName: "Hilagang Europe",
    hasTimeZones: false,
    parentRegionId: "150"
}, _gxze414 = {
    id: "034",
    displayName: "Katimugang Asya",
    hasTimeZones: false,
    parentRegionId: "142"
}, _gxze415 = {
    id: "PS",
    displayName: "Palestinian Territories",
    regionId: "145",
    hasTimeZones: true
}, _gxze416 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _gxze417 = {
    id: "CF",
    displayName: "Central African Republic",
    regionId: "017",
    hasTimeZones: true
}, _gxze418 = {
    id: "011",
    displayName: "Kanlurang Africa",
    hasTimeZones: false,
    parentRegionId: "002"
}, _gxze419 = {
    id: "155",
    displayName: "Kanlurang Europe",
    hasTimeZones: false,
    parentRegionId: "150"
}, _gxze420 = {
    id: "021",
    displayName: "Northern America",
    hasTimeZones: false,
    parentRegionId: "019"
}, _gxze421 = {
    id: "MP",
    displayName: "Northern Mariana Islands",
    regionId: "057",
    hasTimeZones: true
}, _gxze422 = {
    id: "014",
    displayName: "Silangang Africa",
    hasTimeZones: false,
    parentRegionId: "002"
}, _gxze423 = {
    id: "151",
    displayName: "Silangang Europe",
    hasTimeZones: false,
    parentRegionId: "150"
}, _gxze424 = {
    id: "TC",
    displayName: "Turks and Caicos Islands",
    regionId: "029",
    hasTimeZones: true
}, _gxze425 = {
    id: "018",
    displayName: "Katimugang Africa",
    hasTimeZones: false,
    parentRegionId: "002"
}, _gxze426 = {
    id: "039",
    displayName: "Katimugang Europe",
    hasTimeZones: false,
    parentRegionId: "150"
}, _gxze427 = {
    id: "PM",
    displayName: "Saint Pierre and Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _gxze428 = {
    relative: _gxze361
}, _gxze429 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _gxze430 = {
    id: "035",
    displayName: "Timog-Silangang Asya",
    hasTimeZones: false,
    parentRegionId: "142"
}, _gxze431 = {
    id: "057",
    displayName: "Rehiyon ng Micronesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _gxze432 = {
    id: "GS",
    displayName: "South Georgia and the South Sandwich Islands",
    hasTimeZones: true
}, _gxze433 = {
    "0": "ngayong araw",
    "1": "bukas",
    "2": "Samakalawa",
    "-2": "Araw bago ang kahapon",
    "-1": "kahapon"
}, _gxze434 = {
    relative: _gxze399
}, _gxze435 = {
    id: "VC",
    displayName: "Saint Vincent and the Grenadines",
    regionId: "029",
    hasTimeZones: true
}, _gxze436 = {
    d: "E, M/d/y – E, M/d/y GGGGG",
    M: "E, M/d/y – E, M/d/y GGGGG",
    y: "E, M/d/y – E, M/d/y GGGGG"
}, _gxze437 = {
    d: "E, MMM d – E, MMM d, y G",
    M: "E, MMM d – E, MMM d, y G",
    y: "E, MMM d, y – E, MMM d, y G"
}, _gxze438 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _gxze439 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _gxze440 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _gxze441 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _gxze442 = [ "Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre" ], _gxze443 = {
    future: _gxze74,
    past: _gxze97
}, _gxze444 = {
    future: _gxze76,
    past: _gxze98
}, _gxze445 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _gxze446 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _gxze447 = {
    future: _gxze76,
    past: _gxze125
}, _gxze448 = {
    future: _gxze72,
    past: _gxze260
}, _gxze449 = {
    future: _gxze73,
    past: _gxze262
}, _gxze450 = {
    future: _gxze74,
    past: _gxze263
}, _gxze451 = {
    future: _gxze75,
    past: _gxze264
}, _gxze452 = {
    future: _gxze77,
    past: _gxze304
}, _gxze453 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _gxze454 = {
    future: _gxze78,
    past: _gxze332
}, _gxze455 = {
    future: _gxze79,
    past: _gxze333
}, _gxze456 = {
    abbreviated: _gxze5,
    narrow: [ "1", "2", "3", "4" ],
    wide: _gxze303
}, _gxze457 = {
    future: _gxze81,
    past: _gxze341
}, _gxze458 = {
    future: _gxze85,
    past: _gxze359
}, _gxze459 = {
    future: _gxze86,
    past: _gxze360
}, _gxze460 = {
    future: _gxze91,
    past: _gxze359
}, _gxze461 = {
    displayName: "oras",
    relativeTime: _gxze443
}, _gxze462 = {
    displayName: "seg.",
    relativeTime: _gxze444
}, _gxze463 = {
    displayName: "seg.",
    relativeTime: _gxze447
}, _gxze464 = {
    midnight: "hatinggabi",
    am: "am",
    noon: "tanghaling-tapat",
    pm: "pm",
    morning1: "umaga",
    morning2: "madaling-araw",
    afternoon1: "tanghali",
    evening1: "hapon",
    night1: "gabi"
}, _gxze465 = {
    midnight: "hatinggabi",
    am: "AM",
    noon: "tanghaling-tapat",
    pm: "PM",
    morning1: "umaga",
    morning2: "madaling-araw",
    afternoon1: "tanghali",
    evening1: "hapon",
    night1: "gabi"
}, _gxze466 = {
    displayName: "oras",
    relativeTime: _gxze450
}, _gxze467 = {
    displayName: "min.",
    relativeTime: _gxze451
}, _gxze468 = {
    midnight: "hatinggabi",
    am: "AM",
    noon: "tanghaling-tapat",
    pm: "PM",
    morning1: "nang umaga",
    morning2: "madaling-araw",
    afternoon1: "tanghali",
    evening1: "ng hapon",
    night1: "ng gabi"
}, _gxze469 = {
    displayName: "minuto",
    relativeTime: _gxze455
}, _gxze470 = {
    decimal: ".",
    group: ",",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _gxze471 = {
    midnight: "hatinggabi",
    am: "AM",
    noon: "tanghaling-tapat",
    pm: "PM",
    morning1: "nang umaga",
    morning2: "madaling-araw",
    afternoon1: "ng tanghali",
    evening1: "ng hapon",
    night1: "ng gabi"
}, _gxze472 = {
    symbols: _gxze470
}, _gxze473 = {
    format: _gxze349,
    numeric: _gxze7,
    standAlone: _gxze349
}, _gxze474 = {
    displayName: "segundo",
    relative: [ "ngayon" ],
    relativeTime: _gxze459
}, _gxze475 = {
    symbols: _gxze470,
    digits: "renderSpelloutCardinal"
}, _gxze476 = {
    symbols: _gxze470,
    digits: "renderSpelloutCardinalFinancial"
}, _gxze477 = {
    abbreviated: _gxze370,
    narrow: _gxze88,
    wide: _gxze370
}, _gxze478 = {
    abbreviated: _gxze71,
    narrow: _gxze71,
    wide: _gxze330,
    "short": _gxze55
}, _gxze479 = {
    displayName: "taon",
    relative: _gxze103,
    relativeTime: _gxze448
}, _gxze480 = {
    displayName: "buwan",
    relative: _gxze153,
    relativeTime: _gxze452
}, _gxze481 = {
    displayName: "linggo",
    relative: _gxze261,
    relativeTime: _gxze454
}, _gxze482 = {
    displayName: "linggo",
    relative: _gxze331,
    relativeTime: _gxze454
}, _gxze483 = {
    displayName: "qtr.",
    relative: _gxze316,
    relativeTime: _gxze458
}, _gxze484 = {
    displayName: "Quarter",
    relative: _gxze316,
    relativeTime: _gxze458
}, _gxze485 = {
    displayName: "qtr.",
    relative: _gxze316,
    relativeTime: _gxze460
}, _gxze486 = {
    displayName: "araw",
    relative: _gxze433,
    relativeTime: _gxze449
}, _gxze487 = {
    abbreviated: _gxze387,
    narrow: _gxze387,
    wide: _gxze387
}, _gxze488 = {
    format: _gxze487
}, _gxze489 = {
    displayName: "araw",
    relative: _gxze433,
    relativeTime: _gxze457
}, _gxze490 = {
    abbreviated: _gxze368,
    narrow: _gxze152,
    wide: _gxze442
}, _gxze491 = {
    abbreviated: _gxze368,
    narrow: _gxze368,
    wide: _gxze442
}, _gxze492 = {
    format: _gxze456,
    standAlone: _gxze456
}, _gxze493 = {
    abbreviated: _gxze439,
    narrow: _gxze96,
    wide: _gxze439
}, _gxze494 = {
    abbreviated: _gxze440,
    narrow: _gxze88,
    wide: _gxze440
}, _gxze495 = {
    abbreviated: _gxze441,
    narrow: _gxze96,
    wide: _gxze441
}, _gxze496 = {
    abbreviated: _gxze438,
    narrow: _gxze88,
    wide: _gxze453
}, _gxze497 = {
    abbreviated: _gxze445,
    narrow: _gxze96,
    wide: _gxze445
}, _gxze498 = {
    abbreviated: _gxze446,
    narrow: _gxze88,
    wide: _gxze446
}, _gxze499 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "r-MM-dd h:mm a",
    mediumDateTime: "r MMM d h:mm:ss a",
    longDateTime: "r(U) MMMM d h:mm:ss a z",
    fullDateTime: "r(U) MMMM d, EEEE h:mm:ss a zzzz"
}, _gxze500 = {
    "1000": _gxze1,
    "10000": _gxze8,
    "100000": _gxze20,
    "1000000": _gxze2,
    "10000000": _gxze9,
    "100000000": _gxze21,
    "1000000000": _gxze3,
    "10000000000": _gxze10,
    "100000000000": _gxze22,
    "1000000000000": _gxze4,
    "10000000000000": _gxze11,
    "100000000000000": _gxze23
}, _gxze501 = {
    "1000": _gxze12,
    "10000": _gxze24,
    "100000": _gxze33,
    "1000000": _gxze13,
    "10000000": _gxze25,
    "100000000": _gxze34,
    "1000000000": _gxze14,
    "10000000000": _gxze26,
    "100000000000": _gxze35,
    "1000000000000": _gxze15,
    "10000000000000": _gxze27,
    "100000000000000": _gxze36
}, _gxze502 = {
    fullDate: "EEEE, MMMM d, y G",
    longDate: "MMMM d, y G",
    mediumDate: "MMM d, y G",
    shortDate: "M/d/y GGGGG",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "M/d/y GGGGG, h:mm a",
    mediumDateTime: "MMM d, y G, h:mm:ss a",
    longDateTime: "MMMM d, y G 'nang' h:mm:ss a z",
    fullDateTime: "EEEE, MMMM d, y G 'nang' h:mm:ss a zzzz"
}, _gxze503 = {
    format: _gxze477,
    standAlone: _gxze477
}, _gxze504 = {
    format: _gxze478,
    standAlone: _gxze478
}, _gxze505 = {
    abbreviated: _gxze465,
    narrow: _gxze465,
    wide: _gxze465
}, _gxze506 = {
    "1000": _gxze42,
    "10000": _gxze47,
    "100000": _gxze52,
    "1000000": _gxze53,
    "10000000": _gxze60,
    "100000000": _gxze64,
    "1000000000": _gxze54,
    "10000000000": _gxze61,
    "100000000000": _gxze65,
    "1000000000000": _gxze62,
    "10000000000000": _gxze66,
    "100000000000000": _gxze70
}, _gxze507 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _gxze508 = {
    abbreviated: _gxze468,
    narrow: _gxze464,
    wide: _gxze471
}, _gxze509 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _gxze510 = {
    d: "d",
    E: "ccc",
    Ed: "d E",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "MMM d, y G",
    GyMMMEd: "E, MMM d, y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "M/d",
    MEd: "E, M/d",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "E, MMM d",
    MMMMd: "MMMM d",
    MMMMEd: "E, MMMM d",
    ms: "mm:ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M/y GGGGG",
    yyyyMd: "M/d/y GGGGG",
    yyyyMEd: "E, M/d/y GGGGG",
    yyyyMM: "MM-y G",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "MMM d, y G",
    yyyyMMMEd: "E, MMM d, y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _gxze511 = {
    format: _gxze491,
    standAlone: _gxze490
}, _gxze512 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _gxze513 = {
    format: _gxze496,
    standAlone: _gxze496
}, _gxze514 = {
    basic: _gxze499,
    cldr: _gxze507
}, _gxze515 = {
    "long": _gxze506,
    "short": _gxze500,
    "default": "#,##0.###"
}, _gxze516 = {
    basic: _gxze502,
    cldr: _gxze510
}, _gxze517 = {
    d: {
        d: "d–d"
    },
    h: _gxze28,
    H: {
        H: "HH–HH"
    },
    hm: _gxze90,
    Hm: _gxze44,
    hmv: _gxze100,
    Hmv: _gxze56,
    hv: _gxze38,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _gxze58,
    MEd: _gxze82,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _gxze41,
    MMMEd: _gxze83,
    y: {
        y: "U–U"
    },
    yM: _gxze45,
    yMd: _gxze283,
    yMEd: _gxze429,
    yMMM: _gxze46,
    yMMMd: _gxze95,
    yMMMEd: _gxze416,
    yMMMM: _gxze59
}, _gxze518 = {
    d: {
        d: "d–d"
    },
    h: _gxze28,
    H: {
        H: "HH–HH"
    },
    hm: _gxze90,
    Hm: _gxze44,
    hmv: _gxze100,
    Hmv: _gxze56,
    hv: _gxze38,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _gxze39,
    MEd: _gxze67,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _gxze41,
    MMMEd: _gxze80,
    y: {
        y: "y–y G"
    },
    yM: _gxze68,
    yMd: _gxze367,
    yMEd: _gxze436,
    yMMM: _gxze57,
    yMMMd: _gxze282,
    yMMMEd: _gxze437,
    yMMMM: _gxze69
}, _gxze519 = {
    format: _gxze508,
    standAlone: _gxze505
}, _gxze520 = {
    beforeCurrency: _gxze509,
    afterCurrency: _gxze509
}, _gxze521 = {
    "short": _gxze501,
    "default": "¤#,##0.00",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _gxze520
}, _gxze522 = {
    abbreviated: _gxze512,
    narrow: _gxze512,
    wide: _gxze512
}, _gxze523 = {
    format: _gxze522
}, _gxze524 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _gxze515,
    currency: _gxze521,
    percent: {
        "default": "#,##0%"
    }
}, _gxze525 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _gxze526 = {
    dayParts: _gxze488,
    days: _gxze523,
    months: _gxze523,
    years: _gxze523,
    zodiacs: _gxze488
}, _gxze527 = {
    era: {
        displayName: "Era"
    },
    year: _gxze479,
    "year-short": _gxze479,
    "year-narrow": _gxze479,
    quarter: _gxze484,
    "quarter-short": _gxze485,
    "quarter-narrow": _gxze483,
    month: _gxze480,
    "month-short": _gxze480,
    "month-narrow": _gxze480,
    week: _gxze482,
    "week-short": _gxze481,
    "week-narrow": _gxze481,
    day: _gxze486,
    "day-short": _gxze489,
    "day-narrow": _gxze486,
    weekday: _gxze40,
    dayperiod: _gxze6,
    hour: _gxze466,
    "hour-short": _gxze466,
    "hour-narrow": _gxze461,
    minute: _gxze469,
    "minute-short": _gxze467,
    "minute-narrow": _gxze467,
    second: _gxze474,
    "second-short": _gxze463,
    "second-narrow": _gxze462,
    zone: _gxze29,
    sun: _gxze369,
    "sun-short": _gxze342,
    "sun-narrow": _gxze342,
    mon: _gxze380,
    "mon-short": _gxze343,
    "mon-narrow": _gxze343,
    tue: _gxze395,
    "tue-short": _gxze344,
    "tue-narrow": _gxze344,
    wed: _gxze434,
    "wed-short": _gxze345,
    "wed-narrow": _gxze345,
    thu: _gxze410,
    "thu-short": _gxze346,
    "thu-narrow": _gxze346,
    fri: _gxze428,
    "fri-short": _gxze347,
    "fri-narrow": _gxze347,
    sat: _gxze396,
    "sat-short": _gxze348,
    "sat-narrow": _gxze348
}, _gxze528 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _gxze527
}, _gxze529 = {
    dateFormats: _gxze516,
    datePartsOrder: "mdy",
    dateIntervalFormats: _gxze518,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _gxze504,
    dayPeriods: _gxze519,
    monthNames: _gxze513,
    eraNames: _gxze43,
    quarterNames: _gxze492,
    fields: _gxze527
}, _gxze530 = {
    dateFormats: _gxze514,
    datePartsOrder: "md",
    dateIntervalFormats: _gxze517,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _gxze504,
    dayPeriods: _gxze519,
    cyclicNames: _gxze526,
    monthNames: _gxze503,
    monthPatterns: _gxze473,
    quarterNames: _gxze492,
    fields: _gxze527
};

inter.id = "fil";

inter.listPatterns = {
    "default": {
        "2": "{0} at {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0}, at {1}"
    },
    unit: P.listPatterns.default,
    unitNarrow: {
        "2": "{0} {1}",
        start: "{0} {1}",
        middle: "{0} {1}",
        end: "{0} {1}"
    },
    unitShort: P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} g-force",
                other: "{0} g-force"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} metro kada segundo kwadrado",
                other: "{0} na metro kada segundo kwadrado"
            },
            angleRevolution: {
                one: "{0} pag-ikot",
                other: "{0} na pag-ikot"
            },
            angleRadian: {
                one: "{0} radian",
                other: "{0} na radian"
            },
            angleDegree: {
                one: "{0} degree",
                other: "{0} na degree"
            },
            angleArcMinute: {
                one: "{0} arcminute",
                other: "{0} na arcminute"
            },
            angleArcSecond: {
                one: "{0} arcsecond",
                other: "{0} na arcsecond"
            },
            areaSquareKilometer: {
                one: "{0} kilometro kwadrado",
                other: "{0} na kilometro kwadrado"
            },
            areaHectare: {
                one: "{0} hektarya",
                other: "{0} na hektarya"
            },
            areaSquareMeter: {
                one: "{0} metro kwadrado",
                other: "{0} na metro kwadrado"
            },
            areaSquareCentimeter: {
                one: "{0} sentimetro kwadrado",
                other: "{0} na sentimetro kwadrado"
            },
            areaSquareMile: {
                one: "{0} milya kwadrado",
                other: "{0} na milya kwadrado"
            },
            areaAcre: {
                one: "{0} acre",
                other: "{0} acres"
            },
            areaSquareYard: {
                one: "{0} yardang parisukat",
                other: "{0} na yardang parisukat"
            },
            areaSquareFoot: {
                one: "{0} talampakan parisukat",
                other: "{0} na talampakan parisukat"
            },
            areaSquareInch: {
                one: "{0} pulgada kwadrado",
                other: "{0} na pulgada kwadrado"
            },
            concentrKarat: {
                one: "{0} karat",
                other: "{0} na karat"
            },
            consumptionLiterPerKilometer: {
                one: "{0} litro kada kilometro",
                other: "{0} litro kada kilometro"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} litro kada 100 kilometro",
                other: "{0} na litro kada 100 kilometer"
            },
            consumptionMilePerGallon: {
                one: "{0} milya kada galon",
                other: "{0} na milya kada galon"
            },
            digitalTerabyte: {
                one: "{0} terabyte",
                other: "{0} na terabyte"
            },
            digitalTerabit: {
                one: "{0} terabit",
                other: "{0} na terabit"
            },
            digitalGigabyte: {
                one: "{0} gigabyte",
                other: "{0} na gigabyte"
            },
            digitalGigabit: {
                one: "{0} gigabit",
                other: "{0} na gigabit"
            },
            digitalMegabyte: {
                one: "{0} megabyte",
                other: "{0} na megabyte"
            },
            digitalMegabit: {
                one: "{0} megabit",
                other: "{0} na megabit"
            },
            digitalKilobyte: {
                one: "{0} kilobyte",
                other: "{0} na kilobyte"
            },
            digitalKilobit: {
                one: "{0} kilobit",
                other: "{0} na kilobit"
            },
            digitalByte: {
                one: "{0} byte",
                other: "{0} na byte"
            },
            digitalBit: {
                one: "{0} bit",
                other: "{0} na bit"
            },
            durationCentury: _gxze48,
            durationYear: {
                one: "{0} taon",
                other: "{0} na taon"
            },
            durationMonth: _gxze49,
            durationWeek: _gxze63,
            durationDay: _gxze50,
            durationHour: _gxze51,
            durationMinute: {
                one: "{0} minuto",
                other: "{0} na minuto"
            },
            durationSecond: {
                one: "{0} segundo",
                other: "{0} na segundo"
            },
            durationMillisecond: {
                one: "{0} milisegundo",
                other: "{0} milisegundo"
            },
            durationMicrosecond: {
                one: "{0} mikrosegundo",
                other: "{0} mikrosegundo"
            },
            durationNanosecond: {
                one: "{0} nanosegundo",
                other: "{0} nanosegundo"
            },
            electricAmpere: {
                one: "{0} ampere",
                other: "{0} na ampere"
            },
            electricMilliampere: {
                one: "{0} milliampere",
                other: "{0} na milliampere"
            },
            electricOhm: {
                one: "{0} ohm",
                other: "{0} na ohm"
            },
            electricVolt: {
                one: "{0} volt",
                other: "{0} na volt"
            },
            energyKilocalorie: {
                one: "{0} kilocalorie",
                other: "{0} na kilocalorie"
            },
            energyCalorie: {
                one: "{0} calorie",
                other: "{0} na calories"
            },
            energyFoodcalorie: {
                one: "{0} Calorie",
                other: "{0} na Calories"
            },
            energyKilojoule: {
                one: "{0} kilojoule",
                other: "{0} na kilojoule"
            },
            energyJoule: {
                one: "{0} joule",
                other: "{0} na joules"
            },
            energyKilowattHour: {
                one: "{0} kilowatt hour",
                other: "{0} na kilowatt-hour"
            },
            frequencyGigahertz: {
                one: "{0} gigahertz",
                other: "{0} na gigahertz"
            },
            frequencyMegahertz: {
                one: "{0} na megahertz",
                other: "{0} megahertz"
            },
            frequencyKilohertz: {
                one: "{0} kilohertz",
                other: "{0} na kilohertz"
            },
            frequencyHertz: {
                one: "{0} hertz",
                other: "{0} na hertz"
            },
            lengthKilometer: {
                one: "{0} kilometro",
                other: "{0} na kilometro"
            },
            lengthMeter: {
                one: "{0} metro",
                other: "{0} na metro"
            },
            lengthDecimeter: {
                one: "{0} decimetro",
                other: "{0} na decimetro"
            },
            lengthCentimeter: {
                one: "{0} sentimetro",
                other: "{0} sentimetro"
            },
            lengthMillimeter: {
                one: "{0} milimetro",
                other: "{0} na milimetro"
            },
            lengthMicrometer: {
                one: "{0} micrometro",
                other: "{0} micrometro"
            },
            lengthNanometer: {
                one: "{0} nanometro",
                other: "{0} nanometro"
            },
            lengthPicometer: {
                one: "{0} picometer",
                other: "{0} picometer"
            },
            lengthMile: {
                one: "{0} milya",
                other: "{0} na milya"
            },
            lengthYard: {
                one: "{0} yarda",
                other: "{0} na yarda"
            },
            lengthFoot: {
                one: "{0} talampakan",
                other: "{0} na talampakan"
            },
            lengthInch: {
                one: "{0} pulgada",
                other: "{0} na pulgada"
            },
            lengthParsec: {
                one: "{0} parsec",
                other: "{0} parsecs"
            },
            lengthLightYear: {
                one: "{0} light year",
                other: "{0} na light year"
            },
            lengthAstronomicalUnit: {
                one: "{0} astronomical unit",
                other: "{0} na astronomical units"
            },
            lengthNauticalMile: {
                one: "{0} nautical mile",
                other: "{0} nautical miles"
            },
            lengthMileScandinavian: {
                one: "{0} milya-scandinavian",
                other: "{0} na milya-scandinavian"
            },
            lightLux: {
                one: "{0} lux",
                other: "{0} na lux"
            },
            massMetricTon: {
                one: "{0} toneladang metriko",
                other: "{0} na toneladang metriko"
            },
            massKilogram: {
                one: "{0} kilo",
                other: "{0} kilo"
            },
            massGram: {
                one: "{0} gramo",
                other: "{0} na gramo"
            },
            massMilligram: {
                one: "{0} milligram",
                other: "{0} milligrams"
            },
            massMicrogram: {
                one: "{0} microgram",
                other: "{0} micrograms"
            },
            massTon: {
                one: "{0} tonelada",
                other: "{0} tonelada"
            },
            massPound: {
                one: "{0} libra",
                other: "{0} na libra"
            },
            massOunce: {
                one: "{0} onsa",
                other: "{0} na onsa"
            },
            massOunceTroy: {
                one: "{0} troy na onsa",
                other: "{0} na troy na onsa"
            },
            massCarat: {
                one: "{0} karat",
                other: "{0} karat"
            },
            powerGigawatt: {
                one: "{0} gigawatt",
                other: "{0} na gigawatt"
            },
            powerMegawatt: {
                one: "{0} megawatt",
                other: "{0} na megawatt"
            },
            powerKilowatt: {
                one: "{0} kilowatt",
                other: "{0} kilowatts"
            },
            powerWatt: {
                one: "{0} watt",
                other: "{0} na watt"
            },
            powerMilliwatt: {
                one: "{0} milliwatt",
                other: "{0} na milliwatt"
            },
            powerHorsepower: {
                one: "{0} horsepower",
                other: "{0} horsepower"
            },
            pressureHectopascal: {
                one: "{0} hectopascal",
                other: "{0} na hectopascal"
            },
            pressureMillimeterOfMercury: {
                one: "{0} millimetro ng mercury",
                other: "{0} na milimetro ng asoge"
            },
            pressurePoundPerSquareInch: {
                one: "{0} libra kada pulgadang parisukat",
                other: "{0} na libra kada pulgadang parisukat"
            },
            pressureInchHg: {
                one: "{0} pulgada ng asoge",
                other: "{0} na pulgada ng asoge"
            },
            pressureMillibar: {
                one: "{0} millibar",
                other: "{0} na millibar"
            },
            speedKilometerPerHour: {
                one: "{0} kilometro kada oras",
                other: "{0} na kilometro kada oras"
            },
            speedMeterPerSecond: {
                one: "{0} metro kada segundo",
                other: "{0} metro kada segundo"
            },
            speedMilePerHour: {
                one: "{0} milya kada oras",
                other: "{0} milya kada oras"
            },
            speedKnot: {
                one: "{0} knot",
                other: "{0} na knot"
            },
            temperatureGeneric: _gxze16,
            temperatureCelsius: {
                one: "{0} degree Celsius",
                other: "{0} degrees Celsius"
            },
            temperatureFahrenheit: {
                one: "{0} degree Fahrenheit",
                other: "{0} degrees Fahrenheit"
            },
            temperatureKelvin: {
                one: "{0} degree kelvin",
                other: "{0} degrees kelvin"
            },
            volumeCubicKilometer: {
                one: "{0} kubiko kilometro",
                other: "{0} kubiko kilometro"
            },
            volumeCubicMeter: {
                one: "{0} kubiko metro",
                other: "{0} na metro kubiko"
            },
            volumeCubicCentimeter: {
                one: "{0} kubiko sentimetro",
                other: "{0} na sentimetro kubiko"
            },
            volumeCubicMile: {
                one: "{0} kubiko milya",
                other: "{0} kubiko milya"
            },
            volumeCubicYard: {
                one: "{0} kubiko yarda",
                other: "{0} kubiko yarda"
            },
            volumeCubicFoot: {
                one: "{0} kubiko talampakan",
                other: "{0} kubiko talampakan"
            },
            volumeCubicInch: {
                one: "{0} kubiko pulgada",
                other: "{0} kubiko pulgada"
            },
            volumeMegaliter: {
                one: "{0} megalitro",
                other: "{0} megalitro"
            },
            volumeHectoliter: {
                one: "{0} hektolitro",
                other: "{0} hektolitro"
            },
            volumeLiter: {
                one: "{0} litro",
                other: "{0} na litro"
            },
            volumeDeciliter: {
                one: "{0} decilitro",
                other: "{0} na decilitro"
            },
            volumeCentiliter: {
                one: "{0} sentilitro",
                other: "{0} sentilitro"
            },
            volumeMilliliter: {
                one: "{0} mililitro",
                other: "{0} mililitro"
            },
            volumePintMetric: {
                one: "{0} metric pint",
                other: "{0} na metric pint"
            },
            volumeCupMetric: {
                one: "{0} metric cup",
                other: "{0} na metric cup"
            },
            volumeAcreFoot: {
                one: "{0} acre-foot",
                other: "{0} acre-feet"
            },
            volumeGallon: {
                one: "{0} galon",
                other: "{0} na galon"
            },
            volumeQuart: {
                one: "{0} quart",
                other: "{0} na quarts"
            },
            volumePint: {
                one: "{0} pint",
                other: "{0} pints"
            },
            volumeCup: {
                one: "{0} tasa",
                other: "{0} na tasa"
            },
            volumeFluidOunce: {
                one: "{0} fluid ounce",
                other: "{0} na fluid ounce"
            },
            volumeTablespoon: {
                one: "{0} kutsara",
                other: "{0} na kutsara"
            },
            volumeTeaspoon: {
                one: "{0} kutsarita",
                other: "{0} na kutsarita"
            }
        },
        compoundUnit: {
            per: "{0} kada {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                one: "{0} G",
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: {
                one: "{0} rev",
                other: "{0} na rev"
            },
            angleRadian: {
                one: "{0} rad",
                other: "{0} na rad"
            },
            angleDegree: {
                one: "{0} deg",
                other: "{0} na deg"
            },
            angleArcMinute: {
                one: "{0} arcmin",
                other: "{0} na arcmin"
            },
            angleArcSecond: {
                one: "{0} arcsec",
                other: "{0} na arcsec"
            },
            areaSquareKilometer: {
                one: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                one: "{0} ha",
                other: "{0} ha"
            },
            areaSquareMeter: _gxze37,
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: {
                one: "{0} sq mi",
                other: "{0} sq mi"
            },
            areaAcre: {
                one: "{0} ac",
                other: "{0} ac"
            },
            areaSquareYard: {
                one: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: {
                one: "{0} sq ft",
                other: "{0} sq ft"
            },
            areaSquareInch: {
                one: "{0} in²",
                other: "{0} in²"
            },
            concentrKarat: {
                one: "{0} kt",
                other: "{0} kt"
            },
            consumptionLiterPerKilometer: {
                one: "{0} L/km",
                other: "{0} L/km"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} na L/100km",
                other: "{0} na L/100km"
            },
            consumptionMilePerGallon: {
                one: "{0} mpg",
                other: "{0} na mpg"
            },
            digitalTerabyte: {
                one: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: {
                one: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: {
                one: "{0} kB",
                other: "{0} kB"
            },
            digitalKilobit: {
                one: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: {
                one: "{0} byte",
                other: "{0} byte"
            },
            digitalBit: {
                one: "{0} bit",
                other: "{0} bit"
            },
            durationCentury: _gxze48,
            durationYear: {
                one: "{0} taon",
                other: "{0} taon"
            },
            durationMonth: _gxze49,
            durationWeek: _gxze63,
            durationDay: {
                one: "{0} araw",
                other: "{0} araw"
            },
            durationHour: _gxze51,
            durationMinute: {
                one: "{0} min.",
                other: "{0} min."
            },
            durationSecond: {
                one: "{0} seg.",
                other: "{0} seg."
            },
            durationMillisecond: {
                one: "{0} ms",
                other: "{0} ms"
            },
            durationMicrosecond: {
                one: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: {
                one: "{0} kcal",
                other: "{0} kcal"
            },
            energyCalorie: {
                one: "{0} cal",
                other: "{0} cal"
            },
            energyFoodcalorie: {
                one: "{0} Cal",
                other: "{0} Cal"
            },
            energyKilojoule: {
                one: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: {
                one: "{0} km",
                other: "{0} km"
            },
            lengthMeter: {
                one: "{0} m",
                other: "{0} m"
            },
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: {
                one: "{0} cm",
                other: "{0} cm"
            },
            lengthMillimeter: {
                one: "{0} mm",
                other: "{0} mm"
            },
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: {
                one: "{0} pm",
                other: "{0} na pm"
            },
            lengthMile: {
                one: "{0} mi",
                other: "{0} mi"
            },
            lengthYard: {
                one: "{0} yd",
                other: "{0} na yd"
            },
            lengthFoot: {
                one: "{0} ft",
                other: "{0} ft"
            },
            lengthInch: {
                one: "{0} in",
                other: "{0} in"
            },
            lengthParsec: {
                one: "{0} pc",
                other: "{0} na pc"
            },
            lengthLightYear: {
                one: "{0} ly",
                other: "{0} na ly"
            },
            lengthAstronomicalUnit: {
                one: "{0} au",
                other: "{0} au"
            },
            lengthNauticalMile: {
                one: "{0} nmi",
                other: "{0} na nmi"
            },
            lengthMileScandinavian: {
                one: "{0} smi",
                other: "{0} smi"
            },
            lightLux: {
                one: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: {
                one: "{0} t",
                other: "{0} t"
            },
            massKilogram: {
                one: "{0} kg",
                other: "{0} kg"
            },
            massGram: {
                one: "{0} g",
                other: "{0} g"
            },
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} µg",
                other: "{0} µg"
            },
            massTon: {
                one: "{0} tn",
                other: "{0} tn"
            },
            massPound: {
                one: "{0} lb",
                other: "{0} lbs"
            },
            massOunce: {
                one: "{0} oz",
                other: "{0} oz"
            },
            massOunceTroy: {
                one: "{0} oz t",
                other: "{0} oz t"
            },
            massCarat: {
                one: "{0} KD",
                other: "{0} KD"
            },
            powerGigawatt: {
                one: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: {
                one: "{0} kW",
                other: "{0} kW"
            },
            powerWatt: {
                one: "{0} W",
                other: "{0} W"
            },
            powerMilliwatt: {
                one: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: {
                one: "{0} hp",
                other: "{0} hp"
            },
            pressureHectopascal: {
                one: "{0} hPa",
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                one: "{0} mm Hg",
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0} psi",
                other: "{0} psi"
            },
            pressureInchHg: {
                one: "{0} inHg",
                other: "{0} inHg"
            },
            pressureMillibar: {
                one: "{0} mb",
                other: "{0} mb"
            },
            speedKilometerPerHour: {
                one: "{0} kph",
                other: "{0} kph"
            },
            speedMeterPerSecond: {
                one: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: {
                one: "{0} mph",
                other: "{0} mph"
            },
            speedKnot: {
                one: "{0} kn",
                other: "{0} kn"
            },
            temperatureGeneric: _gxze16,
            temperatureCelsius: _gxze31,
            temperatureFahrenheit: _gxze32,
            temperatureKelvin: {
                one: "{0}°K",
                other: "{0}°K"
            },
            volumeCubicKilometer: {
                one: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMeter: {
                one: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: {
                one: "{0} mi³",
                other: "{0} mi³"
            },
            volumeCubicYard: {
                one: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: {
                one: "{0} in³",
                other: "{0} in³"
            },
            volumeMegaliter: {
                one: "{0} ML",
                other: "{0} ML"
            },
            volumeHectoliter: {
                one: "{0} hL",
                other: "{0} hL"
            },
            volumeLiter: {
                one: "{0} L",
                other: "{0} L"
            },
            volumeDeciliter: {
                one: "{0} dL",
                other: "{0} dL"
            },
            volumeCentiliter: {
                one: "{0} cL",
                other: "{0} cL"
            },
            volumeMilliliter: {
                one: "{0} mL",
                other: "{0} mL"
            },
            volumePintMetric: {
                one: "{0} na mpt",
                other: "{0} na mpt"
            },
            volumeCupMetric: {
                one: "{0} mc",
                other: "{0} na mc"
            },
            volumeAcreFoot: {
                one: "{0} ac ft",
                other: "{0} ac ft"
            },
            volumeGallon: {
                one: "{0} gal",
                other: "{0} na gal"
            },
            volumeQuart: {
                one: "{0} qt",
                other: "{0} qt"
            },
            volumePint: {
                one: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: {
                one: "{0} c",
                other: "{0} c"
            },
            volumeFluidOunce: {
                one: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} tbsp",
                other: "{0} tbsp"
            },
            volumeTeaspoon: {
                one: "{0} tsp",
                other: "{0} tsp"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            massStone: {
                other: "{0} st"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                one: "{0}G",
                other: "{0}G"
            },
            angleDegree: _gxze16,
            angleArcMinute: _gxze17,
            angleArcSecond: _gxze18,
            areaSquareKilometer: {
                one: "{0}km²",
                other: "{0}km²"
            },
            areaHectare: {
                one: "{0}ha",
                other: "{0}ha"
            },
            areaSquareMeter: _gxze37,
            areaSquareMile: {
                one: "{0}mi²",
                other: "{0}mi²"
            },
            areaAcre: {
                one: "{0}ac",
                other: "{0}ac"
            },
            areaSquareFoot: {
                one: "{0}ft²",
                other: "{0}ft²"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0}L/100km",
                other: "{0}L/100km"
            },
            durationYear: {
                one: "{0}taon",
                other: "{0}taon"
            },
            durationMonth: {
                one: "{0}buwan",
                other: "{0} buwan"
            },
            durationWeek: {
                one: "{0}linggo",
                other: "{0}linggo"
            },
            durationDay: _gxze50,
            durationHour: {
                one: "{0} oras",
                other: "{0} oras"
            },
            durationMinute: _gxze19,
            durationSecond: {
                one: "{0}s",
                other: "{0}s"
            },
            durationMillisecond: {
                one: "{0}ms",
                other: "{0}ms"
            },
            lengthKilometer: {
                one: "{0}km",
                other: "{0}km"
            },
            lengthMeter: _gxze19,
            lengthCentimeter: {
                one: "{0}cm",
                other: "{0}cm"
            },
            lengthMillimeter: {
                one: "{0}mm",
                other: "{0}mm"
            },
            lengthPicometer: {
                one: "{0}pm",
                other: "{0}pm"
            },
            lengthMile: {
                one: "{0}mi",
                other: "{0}mi"
            },
            lengthYard: {
                one: "{0}yd",
                other: "{0}yd"
            },
            lengthFoot: _gxze17,
            lengthInch: _gxze18,
            lengthLightYear: {
                one: "{0}ly",
                other: "{0}ly"
            },
            massKilogram: {
                one: "{0}kg",
                other: "{0}kg"
            },
            massGram: {
                one: "{0}g",
                other: "{0}g"
            },
            massPound: {
                one: "{0}#",
                other: "{0}#"
            },
            massOunce: {
                one: "{0}oz",
                other: "{0}oz"
            },
            powerKilowatt: {
                one: "{0}kW",
                other: "{0}kW"
            },
            powerWatt: {
                one: "{0}W",
                other: "{0}W"
            },
            powerHorsepower: {
                one: "{0}hp",
                other: "{0}hp"
            },
            pressureHectopascal: {
                one: "{0}hPa",
                other: "{0}hPa"
            },
            pressureInchHg: {
                one: '{0}" Hg',
                other: '{0}" Hg'
            },
            pressureMillibar: {
                one: "{0}mb",
                other: "{0}mb"
            },
            speedKilometerPerHour: {
                one: "{0}kph",
                other: "{0}kph"
            },
            speedMeterPerSecond: {
                one: "{0}m/s",
                other: "{0}m/s"
            },
            speedMilePerHour: {
                one: "{0}mph",
                other: "{0}mph"
            },
            temperatureCelsius: _gxze31,
            temperatureFahrenheit: _gxze32,
            volumeCubicKilometer: {
                one: "{0}km³",
                other: "{0}km³"
            },
            volumeCubicMile: {
                one: "{0}mi³",
                other: "{0}mi³"
            },
            volumeLiter: {
                one: "{0}L",
                other: "{0}L"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "{0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "Daylight Time ng {0}",
        standard: "{0} (+0)"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "ñ", "{ng}", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z" ],
        auxiliary: [ "á", "à", "â", "é", "è", "ê", "í", "ì", "î", "ó", "ò", "ô", "ú", "ù", "û" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ],
        punctuation: [ "\\-", "‐", "–", "—", ",", ";", "\\:", "!", "?", ".", "…", "'", "‘", "’", '"', "“", "”", "(", ")", "\\[", "\\]", "§", "*", "/", "\\&", "#", "′", "″" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _gxze470,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _gxze524,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _gxze524,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _gxze470,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _gxze470,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _gxze470,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _gxze470,
        digits: "renderEthiopic"
    },
    finance: _gxze472,
    fullwide: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _gxze470,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _gxze470,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _gxze470,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _gxze470,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _gxze475,
    hansfin: _gxze476,
    hant: _gxze475,
    hantfin: _gxze476,
    hebr: {
        symbols: _gxze470,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _gxze470,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _gxze475,
    jpanfin: _gxze476,
    kali: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _gxze470,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _gxze470,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _gxze470,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _gxze470,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _gxze470,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _gxze470,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _gxze470,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _gxze470,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _gxze472,
    nkoo: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _gxze470,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _gxze470,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _gxze470,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _gxze470,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _gxze470,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _gxze470,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _gxze472,
    vaii: {
        symbols: _gxze470,
        formats: _gxze524,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _gxze470,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _gxze516,
        datePartsOrder: "mdy",
        dateIntervalFormats: _gxze518,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _gxze504,
        dayPeriods: _gxze519,
        monthNames: _gxze511,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _gxze492,
        fields: _gxze527
    },
    chinese: _gxze530,
    coptic: {
        dateFormats: _gxze516,
        datePartsOrder: "mdy",
        dateIntervalFormats: _gxze518,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _gxze504,
        dayPeriods: _gxze519,
        monthNames: {
            format: _gxze495,
            standAlone: _gxze495
        },
        eraNames: _gxze87,
        quarterNames: _gxze492,
        fields: _gxze527
    },
    dangi: _gxze530,
    ethioaa: _gxze528,
    ethiopic: {
        dateFormats: _gxze516,
        datePartsOrder: "mdy",
        dateIntervalFormats: _gxze518,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _gxze504,
        dayPeriods: _gxze519,
        monthNames: {
            format: _gxze497,
            standAlone: _gxze497
        },
        eraNames: _gxze87,
        quarterNames: _gxze492,
        fields: _gxze527
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, MMMM d, y",
                longDate: "MMMM d, y",
                mediumDate: "MMM d, y",
                shortDate: "M/d/yy",
                fullTime: "h:mm:ss a zzzz",
                longTime: "h:mm:ss a z",
                mediumTime: "h:mm:ss a",
                shortTime: "h:mm a",
                shortDateTime: "M/d/yy, h:mm a",
                mediumDateTime: "MMM d, y, h:mm:ss a",
                longDateTime: "MMMM d, y 'nang' h:mm:ss a z",
                fullDateTime: "EEEE, MMMM d, y 'nang' h:mm:ss a zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "d E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "MMM y G",
                GyMMMd: "MMM d, y G",
                GyMMMEd: "E, MMM d, y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "M/d",
                MEd: "E, M/d",
                MMM: "LLL",
                MMMd: "MMM d",
                MMMEd: "E, MMM d",
                MMMMd: "MMMM d",
                MMMMEd: "E, MMMM d",
                ms: "mm:ss",
                y: "y",
                yM: "M/y",
                yMd: "M/d/y",
                yMEd: "E, M/d/y",
                yMM: "MM/y",
                yMMM: "MMM y",
                yMMMd: "MMM d, y",
                yMMMEd: "E, MMM d, y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "mdy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _gxze28,
            H: {
                H: "HH–HH"
            },
            hm: _gxze90,
            Hm: _gxze44,
            hmv: _gxze100,
            Hmv: _gxze56,
            hv: _gxze38,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            Md: _gxze39,
            MEd: _gxze67,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _gxze41,
            MMMEd: _gxze80,
            y: {
                y: "y–y"
            },
            yM: {
                M: "M/y – M/y",
                y: "M/y – M/y"
            },
            yMd: {
                d: "M/d/y – M/d/y",
                M: "M/d/y – M/d/y",
                y: "M/d/y – M/d/y"
            },
            yMEd: {
                d: "E, M/d/y – E, M/d/y",
                M: "E, M/d/y – E, M/d/y",
                y: "E, M/d/y – E, M/d/y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "MMM d–d, y",
                M: "MMM d – MMM d, y",
                y: "MMM d, y – MMM d, y"
            },
            yMMMEd: {
                d: "E, MMM d – E, MMM d, y",
                M: "E, MMM d – E, MMM d, y",
                y: "E, MMM d, y – E, MMM d, y"
            },
            yMMMM: {
                M: "MMMM–MMMM y",
                y: "MMMM y – MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _gxze504,
        dayPeriods: _gxze519,
        monthNames: _gxze511,
        eraNames: {
            wide: [ "BC", "AD" ],
            abbreviated: [ "BC", "AD" ]
        },
        quarterNames: _gxze492,
        fields: _gxze527
    },
    hebrew: {
        dateFormats: _gxze516,
        datePartsOrder: "mdy",
        dateIntervalFormats: _gxze518,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _gxze504,
        dayPeriods: _gxze519,
        monthNames: {
            format: _gxze493,
            standAlone: _gxze493
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _gxze492,
        fields: _gxze527
    },
    indian: {
        dateFormats: _gxze516,
        datePartsOrder: "mdy",
        dateIntervalFormats: _gxze518,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _gxze504,
        dayPeriods: _gxze519,
        monthNames: {
            format: _gxze498,
            standAlone: _gxze498
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _gxze492,
        fields: _gxze527
    },
    islamic: _gxze529,
    "islamic-umalqura": _gxze529,
    "islamic-tbla": _gxze529,
    "islamic-civil": _gxze529,
    "islamic-rgsa": _gxze529,
    iso8601: _gxze528,
    japanese: {
        dateFormats: _gxze516,
        datePartsOrder: "mdy",
        dateIntervalFormats: _gxze518,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _gxze504,
        dayPeriods: _gxze519,
        monthNames: _gxze511,
        eraNames: {
            wide: _gxze525,
            abbreviated: _gxze525
        },
        quarterNames: _gxze492,
        fields: _gxze527
    },
    persian: {
        dateFormats: _gxze516,
        datePartsOrder: "mdy",
        dateIntervalFormats: _gxze518,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _gxze504,
        dayPeriods: _gxze519,
        monthNames: {
            format: _gxze494,
            standAlone: _gxze494
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _gxze492,
        fields: _gxze527
    },
    roc: {
        dateFormats: _gxze516,
        datePartsOrder: "mdy",
        dateIntervalFormats: _gxze518,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _gxze504,
        dayPeriods: _gxze519,
        monthNames: _gxze511,
        eraNames: {
            wide: _gxze30,
            abbreviated: _gxze30
        },
        quarterNames: _gxze492,
        fields: _gxze527
    },
    islamicc: _gxze528
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length, f = parseInt(n.toString().replace(/^[^.]*\.?/, ""), 10) || 0;
    if (typeof n === "string") n = parseInt(n, 10);
    if (v === 0 && (i === 1 || i === 2 || i === 3 || v === 0 && (!(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) || !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9)))) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return "ika" + this.renderNumber(n, "#,##0");
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinal(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinal(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinal(Math.floor(n)) + " tuldok " + this.renderSpelloutCardinal(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return this.renderNumberTimes(Math.floor(n / 1e15)) + " katrilyón" + (n === 1e15 ? "" : " at " + this.renderSpelloutCardinal(n % 1e15));
    if (n >= 1e12) return this.renderNumberTimes(Math.floor(n / 1e12)) + " trilyón" + (n === 1e12 ? "" : " at " + this.renderSpelloutCardinal(n % 1e12));
    if (n >= 1e9) return this.renderNumberTimes(Math.floor(n / 1e9)) + " bilyón" + (n === 1e9 ? "" : " at " + this.renderSpelloutCardinal(n % 1e9));
    if (n >= 1e6) return this.renderNumberTimes(Math.floor(n / 1e6)) + " milyón" + (n === 1e6 ? "" : " at " + this.renderSpelloutCardinal(n % 1e6));
    if (n >= 1e3) return this.renderNumberTimes(Math.floor(n / 1e3)) + " libó" + (n === 1e3 ? "" : "’t " + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 100) return this.renderNumberTimes(Math.floor(n / 100)) + " daán" + (n === 100 ? "" : " at " + this.renderSpelloutCardinal(n % 100));
    if (n >= 20) return this.renderNumberTimes(Math.floor(n / 10)) + " pû" + (n === 20 ? "" : "’t " + this.renderSpelloutCardinal(n % 10));
    if (n >= 11) return "labíng-" + this.renderSpelloutCardinal(n % 10);
    if (n >= 10) return "sampû";
    if (n >= 9) return "siyám";
    if (n >= 8) return "waló";
    if (n >= 7) return "pitó";
    if (n >= 6) return "anim";
    if (n >= 5) return "limá";
    if (n >= 4) return "ápat";
    if (n >= 3) return "tatló";
    if (n >= 2) return "dalawá";
    if (n >= 1) return "isá";
    if (n >= 0) return "walâ";
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderNumberTimes = function(n) {
    if (n >= 1e3) return this.renderNumberTimes(Math.floor(n / 1e3)) + " libó" + (n === 1e3 ? "" : "’t " + this.renderNumberTimes(n % 1e3));
    if (n >= 100) return this.renderNumberTimes(Math.floor(n / 100)) + " daán" + (n === 100 ? "" : " at " + this.renderNumberTimes(n % 100));
    if (n >= 20) return this.renderNumberTimes(Math.floor(n / 10)) + " pû" + (n === 20 ? "" : "’t " + this.renderNumberTimes(n % 10));
    if (n >= 11) return "labíng-" + this.renderNumberTimes(n % 10);
    if (n >= 10) return "sampûng";
    if (n >= 9) return "siyám na";
    if (n >= 8) return "walóng";
    if (n >= 7) return "pitóng";
    if (n >= 6) return "anim na";
    if (n >= 5) return "limáng";
    if (n >= 4) return "ápat na";
    if (n >= 3) return "tatlóng";
    if (n >= 2) return "dalawáng";
    if (n >= 1) return "isáng";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 46), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Lungsod ng Mexico",
    countryId: "MX"
}, {
    id: "America/Rankin_Inlet",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Makipot na Look ng Rankin",
    countryId: "CA"
}, P.timeZones.slice(46, 50), P.timeZones.slice(51, 54), P.timeZones.slice(55, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones.slice(91, 114), P.timeZones.slice(115, 117), {
    id: "America/Port_of_Spain",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Puwerto ng Espanya",
    countryId: "TT"
}, {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Barthélemy",
    countryId: "BL"
}, P.timeZones.slice(117, 119), P.timeZones.slice(120, 157), {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Timog Georgia",
    countryId: "GS"
}, P.timeZones.slice(158, 300), {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Réunion",
    countryId: "RE"
}, P.timeZones.slice(301, 357), {
    id: "Asia/Manila",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Maynila",
    countryId: "PH"
}, P.timeZones.slice(358, 419));

inter.territories = [ _gxze101, _gxze305, _gxze350, _gxze188, _gxze189, _gxze351, _gxze371, _gxze190, _gxze155, _gxze234, _gxze89, _gxze388, _gxze267, _gxze191, _gxze127, _gxze318, _gxze389, _gxze268, _gxze192, _gxze284, _gxze193, _gxze194, _gxze285, _gxze235, _gxze195, _gxze196, _gxze156, _gxze128, _gxze197, _gxze157, _gxze198, _gxze404, _gxze236, _gxze93, _gxze158, _gxze362, _gxze405, _gxze159, _gxze237, _gxze319, _gxze199, _gxze238, _gxze239, _gxze160, _gxze94, _gxze286, _gxze400, _gxze385, _gxze352, _gxze417, _gxze111, _gxze113, _gxze129, _gxze130, _gxze99, _gxze112, _gxze240, _gxze241, _gxze200, _gxze390, _gxze372, _gxze320, _gxze287, _gxze201, _gxze114, _gxze202, _gxze161, _gxze353, _gxze334, _gxze203, _gxze92, _gxze242, _gxze243, _gxze386, _gxze204, _gxze131, _gxze306, _gxze381, _gxze205, _gxze354, _gxze206, _gxze244, _gxze355, _gxze373, _gxze335, _gxze115, _gxze207, _gxze162, _gxze336, _gxze374, _gxze321, _gxze132, _gxze163, _gxze208, _gxze209, _gxze133, _gxze269, _gxze406, _gxze411, _gxze397, _gxze164, _gxze270, _gxze210, _gxze288, _gxze116, _gxze271, _gxze245, _gxze165, _gxze337, _gxze166, _gxze134, _gxze391, _gxze412, _gxze413, _gxze356, _gxze246, _gxze392, _gxze211, _gxze212, _gxze135, _gxze272, _gxze117, _gxze118, _gxze213, _gxze307, _gxze167, _gxze136, _gxze214, _gxze137, _gxze168, _gxze169, _gxze418, _gxze407, _gxze419, _gxze375, _gxze425, _gxze414, _gxze426, _gxze289, _gxze138, _gxze247, _gxze215, _gxze170, _gxze290, _gxze119, _gxze171, _gxze216, _gxze217, _gxze218, _gxze139, _gxze338, _gxze273, _gxze291, _gxze363, _gxze274, _gxze292, _gxze172, _gxze248, _gxze249, _gxze120, _gxze140, _gxze376, _gxze293, _gxze294, _gxze275, _gxze219, _gxze382, _gxze173, _gxze295, _gxze220, _gxze174, _gxze250, _gxze296, _gxze297, _gxze221, _gxze298, _gxze84, _gxze364, _gxze222, _gxze141, _gxze142, _gxze308, _gxze339, _gxze309, _gxze276, _gxze143, _gxze223, _gxze121, _gxze357, _gxze420, _gxze421, _gxze175, _gxze365, _gxze122, {
    id: "QO",
    displayName: "Outlying Oceania",
    regionId: "009",
    hasTimeZones: false
}, _gxze251, _gxze144, _gxze415, _gxze176, _gxze377, _gxze252, _gxze123, _gxze277, _gxze378, _gxze177, _gxze383, _gxze253, _gxze310, _gxze145, _gxze431, _gxze224, _gxze178, _gxze179, _gxze225, _gxze379, _gxze322, _gxze401, _gxze311, _gxze323, _gxze427, _gxze435, _gxze146, _gxze299, _gxze324, _gxze226, _gxze180, _gxze300, _gxze325, _gxze422, _gxze408, _gxze423, _gxze278, _gxze326, _gxze254, _gxze255, _gxze366, _gxze227, _gxze327, _gxze432, _gxze147, _gxze279, _gxze148, _gxze256, _gxze409, _gxze280, _gxze181, _gxze312, _gxze149, _gxze402, _gxze182, _gxze301, _gxze257, _gxze258, _gxze403, _gxze313, _gxze314, _gxze430, _gxze315, _gxze124, _gxze228, _gxze150, _gxze393, _gxze102, _gxze229, _gxze183, _gxze328, _gxze424, _gxze184, _gxze185, _gxze394, _gxze186, _gxze230, _gxze398, _gxze358, _gxze231, _gxze302, _gxze232, _gxze329, _gxze281, _gxze233, _gxze384, _gxze151, _gxze187, _gxze259, _gxze340 ];

inter.regions = [ _gxze350, _gxze371, _gxze318, _gxze389, _gxze385, _gxze355, _gxze406, _gxze411, _gxze397, _gxze412, _gxze413, _gxze418, _gxze407, _gxze419, _gxze425, _gxze414, _gxze426, _gxze382, _gxze84, _gxze420, _gxze365, _gxze383, _gxze431, _gxze422, _gxze408, _gxze423, _gxze403, _gxze430 ];

inter.countries = [ _gxze101, _gxze305, _gxze188, _gxze189, _gxze351, _gxze190, _gxze155, _gxze234, _gxze89, _gxze388, _gxze267, _gxze191, _gxze127, _gxze268, _gxze192, _gxze284, _gxze193, _gxze194, _gxze285, _gxze235, _gxze195, _gxze196, _gxze156, _gxze128, _gxze197, _gxze157, _gxze198, _gxze404, _gxze236, _gxze93, _gxze158, _gxze362, _gxze405, _gxze159, _gxze237, _gxze319, _gxze199, _gxze238, _gxze239, _gxze160, _gxze94, _gxze286, _gxze400, _gxze352, _gxze417, _gxze111, _gxze113, _gxze129, _gxze130, _gxze99, _gxze112, _gxze240, _gxze241, _gxze200, _gxze390, _gxze372, _gxze320, _gxze287, _gxze201, _gxze114, _gxze202, _gxze161, _gxze353, _gxze334, _gxze203, _gxze92, _gxze242, _gxze243, _gxze386, _gxze204, _gxze131, _gxze306, _gxze381, _gxze205, _gxze354, _gxze206, _gxze244, _gxze373, _gxze335, _gxze115, _gxze207, _gxze162, _gxze336, _gxze374, _gxze321, _gxze132, _gxze163, _gxze208, _gxze209, _gxze133, _gxze269, _gxze164, _gxze270, _gxze210, _gxze288, _gxze116, _gxze271, _gxze245, _gxze165, _gxze337, _gxze166, _gxze134, _gxze391, _gxze356, _gxze246, _gxze392, _gxze211, _gxze212, _gxze135, _gxze272, _gxze117, _gxze118, _gxze213, _gxze307, _gxze167, _gxze136, _gxze214, _gxze137, _gxze168, _gxze169, _gxze375, _gxze289, _gxze138, _gxze247, _gxze215, _gxze170, _gxze290, _gxze119, _gxze171, _gxze216, _gxze217, _gxze218, _gxze139, _gxze338, _gxze273, _gxze291, _gxze363, _gxze274, _gxze292, _gxze172, _gxze248, _gxze249, _gxze120, _gxze140, _gxze376, _gxze293, _gxze294, _gxze275, _gxze219, _gxze173, _gxze295, _gxze220, _gxze174, _gxze250, _gxze296, _gxze297, _gxze221, _gxze298, _gxze364, _gxze222, _gxze141, _gxze142, _gxze308, _gxze339, _gxze309, _gxze276, _gxze143, _gxze223, _gxze121, _gxze357, _gxze421, _gxze175, _gxze122, _gxze251, _gxze144, _gxze415, _gxze176, _gxze377, _gxze252, _gxze123, _gxze277, _gxze378, _gxze177, _gxze253, _gxze310, _gxze145, _gxze224, _gxze178, _gxze179, _gxze225, _gxze379, _gxze322, _gxze401, _gxze311, _gxze323, _gxze427, _gxze435, _gxze146, _gxze299, _gxze324, _gxze226, _gxze180, _gxze300, _gxze325, _gxze278, _gxze326, _gxze254, _gxze255, _gxze366, _gxze227, _gxze327, _gxze432, _gxze147, _gxze279, _gxze148, _gxze256, _gxze409, _gxze280, _gxze181, _gxze312, _gxze149, _gxze402, _gxze182, _gxze301, _gxze257, _gxze258, _gxze313, _gxze314, _gxze315, _gxze124, _gxze228, _gxze150, _gxze393, _gxze102, _gxze229, _gxze183, _gxze328, _gxze424, _gxze184, _gxze185, _gxze394, _gxze186, _gxze230, _gxze398, _gxze358, _gxze231, _gxze302, _gxze232, _gxze329, _gxze281, _gxze233, _gxze384, _gxze151, _gxze187, _gxze259, _gxze340 ];

inter.languages = [ {
    id: "ab",
    displayName: "Abkhazian"
}, {
    id: "ach",
    displayName: "Acoli"
}, {
    id: "af",
    displayName: "Afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "Aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ak",
    displayName: "Akan",
    nativeDisplayName: "Akan"
}, {
    id: "en_us",
    displayName: "Ingles (US)",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "Inari Sami",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "en_au",
    displayName: "Ingles ng Australya",
    nativeDisplayName: "Australian English"
}, {
    id: "ay",
    displayName: "Aymara"
}, {
    id: "az",
    displayName: "Azerbaijani",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "Malay",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bm",
    displayName: "Bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "ba",
    displayName: "Bashkir"
}, {
    id: "bs",
    displayName: "Bosnian",
    nativeDisplayName: "bosanski"
}, {
    id: "br",
    displayName: "Breton",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "Ingles ng British",
    nativeDisplayName: "British English"
}, {
    id: "en_ca",
    displayName: "Ingles sa Canada",
    nativeDisplayName: "Canadian English"
}, {
    id: "ca",
    displayName: "Catalan",
    nativeDisplayName: "català"
}, {
    id: "kde",
    displayName: "Makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "sn",
    displayName: "Shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cv",
    displayName: "Chuvash"
}, {
    id: "swb",
    displayName: "Comorian"
}, {
    id: "co",
    displayName: "Corsican"
}, {
    id: "cy",
    displayName: "Welsh",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "Danish",
    nativeDisplayName: "dansk"
}, {
    id: "se",
    displayName: "Hilagang Sami",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "de",
    displayName: "German",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "Luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "dv",
    displayName: "Divehi"
}, {
    id: "dsb",
    displayName: "Lower Sorbian",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "Duala",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "Estonian",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "Efik"
}, {
    id: "guz",
    displayName: "Gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "en",
    displayName: "Ingles",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "Espanyol",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "European Spanish",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "Espanyol ng Mehiko",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "Latin American na Espanyol",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "Esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "Basque",
    nativeDisplayName: "euskara"
}, {
    id: "ee",
    displayName: "Ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fj",
    displayName: "Fijian"
}, {
    id: "fil",
    displayName: "Filipino",
    nativeDisplayName: "Filipino"
}, {
    id: "fr",
    displayName: "French",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "Canadian French",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "Swiss French",
    nativeDisplayName: "français suisse"
}, {
    id: "fo",
    displayName: "Faroese",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "Ga"
}, {
    id: "ga",
    displayName: "Irish",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "Manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "Gagauz"
}, {
    id: "gl",
    displayName: "Galician",
    nativeDisplayName: "galego"
}, {
    id: "ki",
    displayName: "Kikuyu",
    nativeDisplayName: "Gikuyu"
}, {
    id: "gn",
    displayName: "Guarani"
}, {
    id: "gd",
    displayName: "Scots Gaelic",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "ht",
    displayName: "Haitian"
}, {
    id: "ha",
    displayName: "Hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "bez",
    displayName: "Bena",
    nativeDisplayName: "Hibena"
}, {
    id: "und",
    displayName: "Hindi Kilalang Wika"
}, {
    id: "hsb",
    displayName: "Upper Sorbian",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "Croatian",
    nativeDisplayName: "hrvatski"
}, {
    id: "bem",
    displayName: "Bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "ig",
    displayName: "Igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "Rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "id",
    displayName: "Indonesian",
    nativeDisplayName: "Indonesia"
}, {
    id: "ia",
    displayName: "Interlingua"
}, {
    id: "ie",
    displayName: "Interlingue"
}, {
    id: "iu",
    displayName: "Inuktitut"
}, {
    id: "sbp",
    displayName: "Sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "Hilagang Ndebele",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "Zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "Italian",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "Javanese"
}, {
    id: "dyo",
    displayName: "Jola-Fonyi",
    nativeDisplayName: "joola"
}, {
    id: "kea",
    displayName: "Kabuverdianu",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kl",
    displayName: "Kalaallisut",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "Kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "bgn",
    displayName: "Kanlurang Balochi"
}, {
    id: "sdh",
    displayName: "Katimugang Kurdish"
}, {
    id: "sma",
    displayName: "Katimugang Sami"
}, {
    id: "kw",
    displayName: "Cornish",
    nativeDisplayName: "kernewek"
}, {
    id: "naq",
    displayName: "Nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "rof",
    displayName: "Rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "Kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "Machame",
    nativeDisplayName: "Kimachame"
}, {
    id: "rw",
    displayName: "Kinyarwanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "Asu",
    nativeDisplayName: "Kipare"
}, {
    id: "rwk",
    displayName: "Rwa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "Samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "Shambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "Swahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "Swahili (Congo)",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "Taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "Teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "tlh",
    displayName: "Klingon"
}, {
    id: "koi",
    displayName: "Komi-Permyak"
}, {
    id: "kg",
    displayName: "Kongo"
}, {
    id: "khq",
    displayName: "Koyra Chiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "Koyraboro Senni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "mfe",
    displayName: "Morisyen",
    nativeDisplayName: "kreol morisien"
}, {
    id: "ku",
    displayName: "Kurdish"
}, {
    id: "nmg",
    displayName: "Kwasio",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "Vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ebu",
    displayName: "Embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "Meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "Langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "quc",
    displayName: "Kʼicheʼ"
}, {
    id: "lkt",
    displayName: "Lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "la",
    displayName: "Latin"
}, {
    id: "lv",
    displayName: "Latvian",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "Tongan",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lt",
    displayName: "Lithuanian",
    nativeDisplayName: "lietuvių"
}, {
    id: "ln",
    displayName: "Lingala",
    nativeDisplayName: "lingála"
}, {
    id: "nds",
    displayName: "Low German"
}, {
    id: "nds_nl",
    displayName: "Low Saxon"
}, {
    id: "loz",
    displayName: "Lozi"
}, {
    id: "lua",
    displayName: "Luba-Lulua"
}, {
    id: "lg",
    displayName: "Ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "smj",
    displayName: "Lule Sami"
}, {
    id: "luy",
    displayName: "Luyia",
    nativeDisplayName: "Luluhia"
}, {
    id: "lb",
    displayName: "Luxembourgish",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "Masai",
    nativeDisplayName: "Maa"
}, {
    id: "hu",
    displayName: "Hungarian",
    nativeDisplayName: "magyar"
}, {
    id: "mgh",
    displayName: "Makhuwa-Meetto",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "Malagasy",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "Maltese",
    nativeDisplayName: "Malti"
}, {
    id: "mi",
    displayName: "Maori"
}, {
    id: "arn",
    displayName: "Mapuche"
}, {
    id: "mgo",
    displayName: "Meta’",
    nativeDisplayName: "metaʼ"
}, {
    id: "moh",
    displayName: "Mohawk"
}, {
    id: "ro_md",
    displayName: "Moldavian",
    nativeDisplayName: "moldovenească"
}, {
    id: "mua",
    displayName: "Mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "jgo",
    displayName: "Ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "nl",
    displayName: "Dutch",
    nativeDisplayName: "Nederlands"
}, {
    id: "nb",
    displayName: "Norwegian Bokmal",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "nso",
    displayName: "Northern Sotho"
}, {
    id: "no",
    displayName: "Norwegian"
}, {
    id: "ny",
    displayName: "Nyanja"
}, {
    id: "nn",
    displayName: "Norwegian Nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "nqo",
    displayName: "N’Ko"
}, {
    id: "oc",
    displayName: "Occitan"
}, {
    id: "xog",
    displayName: "Soga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "Oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "uz",
    displayName: "Uzbek",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pl",
    displayName: "Polish",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "Portuges",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "Portuges ng Brasil",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "European Portuguese",
    nativeDisplayName: "português europeu"
}, {
    id: "ksf",
    displayName: "Bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "ro",
    displayName: "Romanian",
    nativeDisplayName: "română"
}, {
    id: "cgg",
    displayName: "Chiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "Romansh",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "Quechua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "Nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "sm",
    displayName: "Samoan"
}, {
    id: "sa",
    displayName: "Sanskrit"
}, {
    id: "de_ch",
    displayName: "Swiss High German",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "Swiss German",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "seh",
    displayName: "Sena",
    nativeDisplayName: "sena"
}, {
    id: "sh",
    displayName: "Serbo-Croatian"
}, {
    id: "sq",
    displayName: "Albanian",
    nativeDisplayName: "shqip"
}, {
    id: "sd",
    displayName: "Sindhi"
}, {
    id: "sms",
    displayName: "Skolt Sami"
}, {
    id: "sk",
    displayName: "Slovak",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "Slovenian",
    nativeDisplayName: "slovenščina"
}, {
    id: "so",
    displayName: "Somali",
    nativeDisplayName: "Soomaali"
}, {
    id: "st",
    displayName: "Southern Sotho"
}, {
    id: "su",
    displayName: "Sundanese"
}, {
    id: "fi",
    displayName: "Finnish",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "Swedish",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "Swati"
}, {
    id: "sg",
    displayName: "Sango",
    nativeDisplayName: "Sängö"
}, {
    id: "tl",
    displayName: "Tagalog"
}, {
    id: "ty",
    displayName: "Tahitian"
}, {
    id: "tg",
    displayName: "Tajik"
}, {
    id: "tzm",
    displayName: "Tamazight ng Gitnang Atlas",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "Kabyle",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "twq",
    displayName: "Tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "Tatar"
}, {
    id: "tet",
    displayName: "Tetum"
}, {
    id: "nus",
    displayName: "Nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "vi",
    displayName: "Vietnamese",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tpi",
    displayName: "Tok Pisin"
}, {
    id: "lu",
    displayName: "Luba-Katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "ts",
    displayName: "Tsonga"
}, {
    id: "tn",
    displayName: "Tswana"
}, {
    id: "tum",
    displayName: "Tumbuka"
}, {
    id: "tw",
    displayName: "Twi"
}, {
    id: "tk",
    displayName: "Turkmen",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "Turkish",
    nativeDisplayName: "Türkçe"
}, {
    id: "ve",
    displayName: "Venda"
}, {
    id: "nl_be",
    displayName: "Flemish",
    nativeDisplayName: "Vlaams"
}, {
    id: "zxx",
    displayName: "Walang nilalaman na ukol sa wika"
}, {
    id: "wbp",
    displayName: "Warlpiri"
}, {
    id: "fy",
    displayName: "Kanlurang Frisian",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "Wolof"
}, {
    id: "xh",
    displayName: "Xhosa"
}, {
    id: "dje",
    displayName: "Zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "yo",
    displayName: "Yoruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "Icelandic",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "Austrian German",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "Czech",
    nativeDisplayName: "čeština"
}, {
    id: "haw",
    displayName: "Hawaiian",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "Greek",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "Belarusian",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "Bulgarian",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "Ossetic",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "Kirghiz",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "Macedonian",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "Mongolian",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "Chechen",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "Russian",
    nativeDisplayName: "русский"
}, {
    id: "sr",
    displayName: "Serbian",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "Ukranian",
    nativeDisplayName: "українська"
}, {
    id: "kk",
    displayName: "Kazakh",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "Armenian",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "Yiddish",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "Hebrew",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "Uyghur",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "Urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "Arabe",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "Modernong Karaniwang Arabe",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "Persian",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "Hilagang Luri",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "Mazanderani",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "Pashto",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "Central Kurdish",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "Kashmiri",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "Konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "Nepali",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "Bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "Marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "Hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "Assamese",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "Bengali",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "Punjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "Gujarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "Oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "Tamil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "Telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "Kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "Malayalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "Sinhala",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "Thai",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "Lao",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "Tibetan",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "Dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "Burmese",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "Georgian",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "Tigrinya",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "Amharic",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "Khmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "Standard Moroccan Tamazight",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "Tachelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "Chinese",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "Japanese",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "Simplified Chinese",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "Cantonese",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "Chinese (Traditional)",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "Sichuan Yi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "Vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "Cherokee",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "Korean",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Arab",
    displayName: "Arabic"
}, {
    id: "Armn",
    displayName: "Armenian"
}, {
    id: "Beng",
    displayName: "Bengali"
}, {
    id: "Bopo",
    displayName: "Bopomofo"
}, {
    id: "Brai",
    displayName: "Braille"
}, {
    id: "Cyrl",
    displayName: "Cyrillic"
}, {
    id: "Deva",
    displayName: "Devanagari"
}, {
    id: "Ethi",
    displayName: "Ethiopic"
}, {
    id: "Geor",
    displayName: "Georgian"
}, {
    id: "Grek",
    displayName: "Greek"
}, {
    id: "Gujr",
    displayName: "Gujarati"
}, {
    id: "Guru",
    displayName: "Gurmukhi"
}, {
    id: "Hani",
    displayName: "Han"
}, {
    id: "Hang",
    displayName: "Hangul"
}, {
    id: "Hebr",
    displayName: "Hebrew"
}, {
    id: "Zzzz",
    displayName: "Hindi Kilalang Script"
}, {
    id: "Zxxx",
    displayName: "Hindi Nakasulat"
}, {
    id: "Hira",
    displayName: "Hiragana"
}, {
    id: "Jpan",
    displayName: "Japanese"
}, {
    id: "Knda",
    displayName: "Kannada"
}, {
    id: "Zyyy",
    displayName: "Karaniwan"
}, {
    id: "Kana",
    displayName: "Katakana"
}, {
    id: "Khmr",
    displayName: "Khmer"
}, {
    id: "Kore",
    displayName: "Korean"
}, {
    id: "Laoo",
    displayName: "Lao"
}, {
    id: "Latn",
    displayName: "Latin"
}, {
    id: "Mlym",
    displayName: "Malayalam"
}, {
    id: "Zsym",
    displayName: "Mga Simbolo"
}, {
    id: "Mong",
    displayName: "Mongolian"
}, {
    id: "Mymr",
    displayName: "Myanmar"
}, {
    id: "Orya",
    displayName: "Oriya"
}, {
    id: "Hans",
    displayName: "Pinasimple"
}, {
    id: "Sinh",
    displayName: "Sinhala"
}, {
    id: "Taml",
    displayName: "Tamil"
}, {
    id: "Telu",
    displayName: "Telugu"
}, {
    id: "Thaa",
    displayName: "Thaana"
}, {
    id: "Thai",
    displayName: "Thai"
}, {
    id: "Tibt",
    displayName: "Tibetan"
}, {
    id: "Hant",
    displayName: "Tradisyonal"
} ];

inter.currencies = [ {
    id: "AFN",
    displayName: "Afghan Afghani",
    symbol: "AFN",
    one: "Afghan Afghani",
    other: "Afghan Afghanis"
}, {
    id: "ALL",
    displayName: "Albanian Lek",
    symbol: "ALL",
    one: "Albanian lek",
    other: "Albanian leke"
}, {
    id: "DZD",
    displayName: "Algerian Dinar",
    symbol: "DZD",
    one: "Algerian dinar",
    other: "Algerian dinars"
}, {
    id: "AOA",
    displayName: "Angolan Kwanza",
    symbol: "AOA",
    one: "Angolan kwanza",
    other: "Angolan kwanzas"
}, {
    id: "ANG",
    displayName: "Antillean Guilder ng Netherlands",
    symbol: "ANG",
    one: "Antillean guilder ng Netherlands",
    other: "Antillean guilders ng Netherlands"
}, {
    id: "AMD",
    displayName: "Armenian Dram",
    symbol: "AMD",
    one: "Armenian dram",
    other: "Armenian drams"
}, {
    id: "AZN",
    displayName: "Azerbaijani Manat",
    symbol: "AZN",
    one: "Azerbaijani manat",
    other: "Azerbaijani manats"
}, {
    id: "BHD",
    displayName: "Bahraini Dinar",
    symbol: "BHD",
    one: "Bahraini dinar",
    other: "Bahraini dinars"
}, {
    id: "PAB",
    displayName: "Balboa ng Panama",
    symbol: "PAB",
    one: "balboa ng Panama",
    other: "Balboas ng Panama"
}, {
    id: "BDT",
    displayName: "Bangladeshi Taka",
    symbol: "BDT",
    one: "Bangladeshi taka",
    other: "Bangladeshi takas"
}, {
    id: "BYR",
    displayName: "Belarusian Ruble",
    symbol: "BYR",
    one: "Belarusian ruble",
    other: "Belarusian rubles"
}, {
    id: "BTN",
    displayName: "Bhutanese Ngultrum",
    symbol: "BTN",
    one: "Bhutanese ngultrum",
    other: "Bhutanese ngultrums"
}, {
    id: "BOB",
    displayName: "Boliviano ng Bolivia",
    symbol: "BOB",
    one: "boliviano ng Bolivia",
    other: "bolivianos ng Bolivia"
}, {
    id: "VEF",
    displayName: "Bolívar ng Venezuela",
    symbol: "VEF",
    one: "bolívar ng Venezuela",
    other: "bolívars ng Venezuela"
}, {
    id: "BAM",
    displayName: "Bosnia-Herzegovina Convertible Mark",
    symbol: "BAM",
    one: "Bosnia-Herzegovina convertible mark",
    other: "Bosnia-Herzegovina convertible marks"
}, {
    id: "BWP",
    displayName: "Botswanan Pula",
    symbol: "BWP",
    one: "Botswanan pula",
    other: "Botswanan pulas"
}, {
    id: "GBP",
    displayName: "British Pound",
    symbol: "£",
    one: "British pound",
    other: "British pounds"
}, {
    id: "BGN",
    displayName: "Bulgarian Lev",
    symbol: "BGN",
    one: "Bulgarian lev",
    other: "Bulgarian leva"
}, {
    id: "BIF",
    displayName: "Burundian Franc",
    symbol: "BIF",
    one: "Burundian franc",
    other: "Burundian francs"
}, {
    id: "XAF",
    displayName: "CFA Franc BEAC",
    symbol: "FCFA",
    one: "CFA franc BEAC",
    other: "CFA francs BEAC"
}, {
    id: "XOF",
    displayName: "CFA Franc ng Kanlurang Africa",
    symbol: "CFA",
    one: "CFA franc ng Kanlurang Africa",
    other: "CFA francs ng Kanlurang Africa"
}, {
    id: "XPF",
    displayName: "CFP Franc",
    symbol: "CFPF",
    one: "CFP franc",
    other: "CFP francs"
}, {
    id: "KHR",
    displayName: "Cambodian Riel",
    symbol: "KHR",
    one: "Cambodian riel",
    other: "Cambodian riels"
}, {
    id: "CVE",
    displayName: "Cape Verdean Escudo",
    symbol: "CVE",
    one: "Cape Verdean escudo",
    other: "Cape Verdean escudos"
}, {
    id: "CNY",
    displayName: "Chinese Yuan",
    symbol: "CN¥",
    one: "Chinese yuan",
    other: "Chinese yuan"
}, {
    id: "CRC",
    displayName: "Colón ng Costa Rica",
    symbol: "CRC",
    one: "colón ng Costa Rica",
    other: "colóns ng Costa Rica"
}, {
    id: "KMF",
    displayName: "Comorian Franc",
    symbol: "KMF",
    one: "Comorian franc",
    other: "Comorian francs"
}, {
    id: "CDF",
    displayName: "Congolese Franc",
    symbol: "CDF",
    one: "Congolese franc",
    other: "Congolese francs"
}, {
    id: "CUC",
    displayName: "Convertible na Piso ng Cuba",
    symbol: "CUC",
    one: "Convertible na piso ng Cuba",
    other: "Convertible na Piso ng Cuba"
}, {
    id: "HRK",
    displayName: "Croatian Kuna",
    symbol: "HRK",
    one: "Croatian kuna",
    other: "Croatian kunas"
}, {
    id: "CZK",
    displayName: "Czech Republic Koruna",
    symbol: "CZK",
    one: "Czech Republic koruna",
    other: "Czech Republic korunas"
}, {
    id: "NIO",
    displayName: "Córdoba ng Nicaragua",
    symbol: "NIO",
    one: "córdoba ng Nicaragua",
    other: "Nicaraguan córdobas"
}, {
    id: "DKK",
    displayName: "Danish Krone",
    symbol: "DKK",
    one: "Danish krone",
    other: "Danish kroner"
}, {
    id: "DEM",
    displayName: "Deutsche Marks"
}, {
    id: "DJF",
    displayName: "Djiboutian Franc",
    symbol: "DJF",
    one: "Djiboutian franc",
    other: "Djiboutian francs"
}, {
    id: "AUD",
    displayName: "Dolyar ng Australya",
    symbol: "A$",
    one: "dolyar ng Australya",
    other: "dolyares ng Australya"
}, {
    id: "BSD",
    displayName: "Dolyar ng Bahamas",
    symbol: "BSD",
    one: "dolyar ng Bahamas",
    other: "dolyares ng Bahamas"
}, {
    id: "BBD",
    displayName: "Dolyar ng Barbados",
    symbol: "BBD",
    one: "dolyar ng Barbados",
    other: "dolyares ng Barbados"
}, {
    id: "BZD",
    displayName: "Dolyar ng Belize",
    symbol: "BZD",
    one: "dolyar ng Belize",
    other: "dolyares ng Belize"
}, {
    id: "BMD",
    displayName: "Dolyar ng Bermuda",
    symbol: "BMD",
    one: "dolyar ng Bermuda",
    other: "dolyares ng Bermuda"
}, {
    id: "BND",
    displayName: "Dolyar ng Brunei",
    symbol: "BND",
    one: "dolyar ng Brunei",
    other: "dolyar ng Brunei"
}, {
    id: "CAD",
    displayName: "Dolyar ng Canada",
    symbol: "CA$",
    one: "dolyar ng Canada",
    other: "Dolyares ng Canada"
}, {
    id: "KYD",
    displayName: "Dolyar ng Cayman Islands",
    symbol: "KYD",
    one: "dolyar ng Cayman Islands",
    other: "dolyares ng Cayman Islands"
}, {
    id: "FJD",
    displayName: "Dolyar ng Fiji",
    symbol: "FJD",
    one: "dolyar ng Fiji",
    other: "dolyares ng Fiji"
}, {
    id: "GYD",
    displayName: "Dolyar ng Guyanese",
    symbol: "GYD",
    one: "dolyar ng Guyanese",
    other: "dolyares ng Guyanese"
}, {
    id: "HKD",
    displayName: "Dolyar ng Hong Kong",
    symbol: "HK$",
    one: "dolyar ng Hong Kong",
    other: "dolyares ng Hong Kong"
}, {
    id: "JMD",
    displayName: "Dolyar ng Jamaica",
    symbol: "JMD",
    one: "dolyar ng Jamaica",
    other: "dolyares ng Jamaica"
}, {
    id: "LRD",
    displayName: "Dolyar ng Liberia",
    symbol: "LRD",
    one: "dolyar ng Liberia",
    other: "dolyares ng Liberia"
}, {
    id: "NAD",
    displayName: "Dolyar ng Namibia",
    symbol: "NAD",
    one: "dolyar ng Namibia",
    other: "dolyares ng Namibia"
}, {
    id: "TWD",
    displayName: "Dolyar ng New Taiwan",
    symbol: "NT$",
    one: "dolyar ng New Taiwan",
    other: "dolyares ng New Taiwan"
}, {
    id: "NZD",
    displayName: "Dolyar ng New Zealand",
    symbol: "NZ$",
    one: "dolyares ng New Zealand",
    other: "dolyares ng New Zealand"
}, {
    id: "XCD",
    displayName: "Dolyar ng Silangang Caribbean",
    symbol: "EC$",
    one: "dolyar ng Silangang Caribbean",
    other: "dolyares ng Silangang Caribbean"
}, {
    id: "SGD",
    displayName: "Dolyar ng Singapore",
    symbol: "SGD",
    one: "dolyar ng Singapore",
    other: "dolyares ng Singapore"
}, {
    id: "SBD",
    displayName: "Dolyar ng Solomon Islands",
    symbol: "SBD",
    one: "dolyar ng Solomon Islands",
    other: "dolyar ng Solomon Islands"
}, {
    id: "SRD",
    displayName: "Dolyar ng Suriname",
    symbol: "SRD",
    one: "dolyar ng Suriname",
    other: "dolyares ng Suriname"
}, {
    id: "TTD",
    displayName: "Dolyar ng Trinidad and Tobago",
    symbol: "TTD",
    one: "dolyar ng Trinidad and Tobago",
    other: "dolyares ng Trinidad and Tobago"
}, {
    id: "USD",
    displayName: "Dolyar ng US",
    symbol: "$",
    one: "dolyar ng US",
    other: "dolyares ng US"
}, {
    id: "EGP",
    displayName: "Egyptian Pound",
    symbol: "EGP",
    one: "Egyptian pound",
    other: "Egyptian pounds"
}, {
    id: "ERN",
    displayName: "Eritrean Nakfa",
    symbol: "ERN",
    one: "Eritrean nakfa",
    other: "Eritrean nakfas"
}, {
    id: "EEK",
    displayName: "Estonian Kroon"
}, {
    id: "ETB",
    displayName: "Ethiopian Birr",
    symbol: "ETB",
    one: "Ethiopian birr",
    other: "Ethiopian birrs"
}, {
    id: "EUR",
    displayName: "Euro",
    symbol: "€",
    one: "euro",
    other: "euros"
}, {
    id: "AWG",
    displayName: "Florin ng Aruba",
    symbol: "AWG",
    one: "florin ng Aruba",
    other: "florin ng Aruba"
}, {
    id: "FRF",
    displayName: "French Franc"
}, {
    id: "GMD",
    displayName: "Gambian Dalasi",
    symbol: "GMD",
    one: "Gambian dalasi",
    other: "Gambian dalasis"
}, {
    id: "GEL",
    displayName: "Georgian Lari",
    symbol: "GEL",
    one: "Georgian lari",
    other: "Georgian laris"
}, {
    id: "GHS",
    displayName: "Ghanaian Cedi",
    symbol: "GHS",
    one: "Ghanaian cedi",
    other: "Ghanian cedis"
}, {
    id: "GIP",
    displayName: "Gibraltar Pound",
    symbol: "GIP",
    one: "Gibraltar pound",
    other: "Gibraltar pounds"
}, {
    id: "HTG",
    displayName: "Gourde ng Haiti",
    symbol: "HTG",
    one: "gourde ng Haiti",
    other: "gourdes ng Haiti"
}, {
    id: "GNF",
    displayName: "Guinean Franc",
    symbol: "GNF",
    one: "Guinean franc",
    other: "Guinean francs"
}, {
    id: "XXX",
    displayName: "Hindi Kilalang Pera",
    one: "(hindi kilalang uri ng pera)",
    other: "(hindi kilalang pera)"
}, {
    id: "HUF",
    displayName: "Hungarian Forint",
    symbol: "HUF",
    one: "Hungarian forint",
    other: "Hungarian forints"
}, {
    id: "ISK",
    displayName: "Icelandic Króna",
    symbol: "ISK",
    one: "Icelandic króna",
    other: "Icelandic krónur"
}, {
    id: "INR",
    displayName: "Indian Rupee",
    symbol: "₹",
    one: "Indian rupee",
    other: "Indian rupees"
}, {
    id: "IDR",
    displayName: "Indonesian Rupiah",
    symbol: "IDR",
    one: "Indonesian rupiah",
    other: "Indonesian rupiahs"
}, {
    id: "IRR",
    displayName: "Iranian Rial",
    symbol: "IRR",
    one: "Iranian rial",
    other: "Iranian rials"
}, {
    id: "IQD",
    displayName: "Iraqi Dinar",
    symbol: "IQD",
    one: "Iraqi dinar",
    other: "Iraqi dinars"
}, {
    id: "ILS",
    displayName: "Israeli New Sheqel",
    symbol: "₪",
    one: "Israeli new sheqel",
    other: "Israeli new sheqels"
}, {
    id: "JPY",
    displayName: "Japanese Yen",
    symbol: "¥",
    one: "Japanese yen",
    other: "Japanese yen"
}, {
    id: "JOD",
    displayName: "Jordanian Dinar",
    symbol: "JOD",
    one: "Jordanian dinar",
    other: "Jordanian dinars"
}, {
    id: "KZT",
    displayName: "Kazakhstani Tenge",
    symbol: "KZT",
    one: "Kazakhstani tenge",
    other: "Kazakhstani tenges"
}, {
    id: "KES",
    displayName: "Kenyan Shilling",
    symbol: "KES",
    one: "Kenyan shilling",
    other: "Kenyan shillings"
}, {
    id: "KWD",
    displayName: "Kuwaiti Dinar",
    symbol: "KWD",
    one: "Kuwaiti dinar",
    other: "Kuwaiti dinars"
}, {
    id: "KGS",
    displayName: "Kyrgystani Som",
    symbol: "KGS",
    one: "Kyrgystani som",
    other: "Kyrgystani soms"
}, {
    id: "LAK",
    displayName: "Laotian Kip",
    symbol: "LAK",
    one: "Laotian kip",
    other: "Laotian kips"
}, {
    id: "LVL",
    displayName: "Latvian Lats",
    symbol: "LVL",
    one: "Latvian lats",
    other: "Latvian lati"
}, {
    id: "HNL",
    displayName: "Lempira ng Honduras",
    symbol: "HNL",
    one: "lempira ng Honduras",
    other: "lempiras ng Honduras"
}, {
    id: "LSL",
    displayName: "Lesotho Loti"
}, {
    id: "LYD",
    displayName: "Libyan Dinar",
    symbol: "LYD",
    one: "Libyan dinar",
    other: "Libyan dinars"
}, {
    id: "LTL",
    displayName: "Lithuanian Litas",
    symbol: "LTL",
    one: "Lithuanian litas",
    other: "Lithuanian litai"
}, {
    id: "MOP",
    displayName: "Macanese Pataca",
    symbol: "MOP",
    one: "Macanese pataca",
    other: "Macanese patacas"
}, {
    id: "MKD",
    displayName: "Macedonian Denar",
    symbol: "MKD",
    one: "Macedonian denar",
    other: "Macedonian denari"
}, {
    id: "MGA",
    displayName: "Malagasy Ariary",
    symbol: "MGA",
    one: "Malagasy Ariary",
    other: "Malagasy Ariaries"
}, {
    id: "MWK",
    displayName: "Malawian Kwacha",
    symbol: "MWK",
    one: "Malawian Kwacha",
    other: "Malawian Kwachas"
}, {
    id: "MYR",
    displayName: "Malaysian Ringgit",
    symbol: "MYR",
    one: "Malaysian ringgit",
    other: "Malaysian ringgits"
}, {
    id: "MVR",
    displayName: "Maldivian Rufiyaa",
    symbol: "MVR",
    one: "Maldivian rufiyaa",
    other: "Maldivian rufiyaas"
}, {
    id: "MRO",
    displayName: "Mauritanian Ouguiya",
    symbol: "MRO",
    one: "Mauritanian ouguiya",
    other: "Mauritanian ouguiyas"
}, {
    id: "MUR",
    displayName: "Mauritian Rupee",
    symbol: "MUR",
    one: "Mauritian rupee",
    other: "Mauritian rupees"
}, {
    id: "MDL",
    displayName: "Moldovan Leu",
    symbol: "MDL",
    one: "Moldovan leu",
    other: "Moldovan lei"
}, {
    id: "MNT",
    displayName: "Mongolian Tugrik",
    symbol: "MNT",
    one: "Mongolian tugrik",
    other: "Mongolian tugriks"
}, {
    id: "MAD",
    displayName: "Moroccan Dirham",
    symbol: "MAD",
    one: "Moroccan dirham",
    other: "Moroccan dirhams"
}, {
    id: "MZN",
    displayName: "Mozambican Metical",
    symbol: "MZN",
    one: "Mozambican metical",
    other: "Mozambican meticals"
}, {
    id: "MMK",
    displayName: "Myanmar Kyat",
    symbol: "MMK",
    one: "Myanmar kyat",
    other: "Myanmar kyats"
}, {
    id: "NPR",
    displayName: "Nepalese Rupee",
    symbol: "NPR",
    one: "Nepalese rupee",
    other: "Nepalese rupees"
}, {
    id: "NGN",
    displayName: "Nigerian Naira",
    symbol: "NGN",
    one: "Nigerian naira",
    other: "Nigerian nairas"
}, {
    id: "NOK",
    displayName: "Norwegian Krone",
    symbol: "NOK",
    one: "Norwegian krone",
    other: "Norwegian kroner"
}, {
    id: "OMR",
    displayName: "Omani Rial",
    symbol: "OMR",
    one: "Omani rial",
    other: "Omani rials"
}, {
    id: "PKR",
    displayName: "Pakistani Rupee",
    symbol: "PKR",
    one: "Pakistani rupee",
    other: "Pakistani rupees"
}, {
    id: "PGK",
    displayName: "Papua New Guinean Kina",
    symbol: "PGK",
    one: "Papua New Guinean kina",
    other: "Papua New Guinean kina"
}, {
    id: "PYG",
    displayName: "Paraguayan Guarani",
    symbol: "PYG",
    one: "Paraguayan guarani",
    other: "Paraguayan guaranis"
}, {
    id: "PEN",
    displayName: "Peruvian Nuevo Sol",
    symbol: "PEN",
    one: "Peruvian nuevo sol",
    other: "Peruvian nuevos soles"
}, {
    id: "ARS",
    displayName: "Piso ng Argentina",
    symbol: "ARS",
    one: "piso ng Argentina",
    other: "piso ng Argentina"
}, {
    id: "CLP",
    displayName: "Piso ng Chile",
    symbol: "CLP",
    one: "piso ng Chile",
    other: "piso ng Chile"
}, {
    id: "COP",
    displayName: "Piso ng Colombia",
    symbol: "COP",
    one: "piso ng Colombia",
    other: "Piso ng Colombia"
}, {
    id: "CUP",
    displayName: "Piso ng Cuba",
    symbol: "CUP",
    one: "piso ng Cuba",
    other: "piso ng Cuba"
}, {
    id: "DOP",
    displayName: "Piso ng Dominican",
    symbol: "DOP",
    one: "Piso ng Dominican",
    other: "piso ng Dominican"
}, {
    id: "MXN",
    displayName: "Piso ng Mexico",
    symbol: "MX$",
    one: "piso ng Mexico",
    other: "piso ng Mexico"
}, {
    id: "PHP",
    displayName: "Piso ng Pilipinas",
    symbol: "₱",
    one: "piso ng Pilipinas",
    other: "piso ng Pilipinas"
}, {
    id: "UYU",
    displayName: "Piso ng Uruguay",
    symbol: "UYU",
    one: "piso ng Uruguay",
    other: "piso ng Uruguay"
}, {
    id: "PLN",
    displayName: "Polish Zloty",
    symbol: "PLN",
    one: "Polish zloty",
    other: "Polish zlotys"
}, {
    id: "FKP",
    displayName: "Pound ng Falkland Islands",
    symbol: "FKP",
    one: "pound ng Falkland Islands",
    other: "pounds ng Falkland Islands"
}, {
    id: "LBP",
    displayName: "Pound ng Lebanon",
    symbol: "LBP",
    one: "pound ng Lebanon",
    other: "pounds ng Lebanon"
}, {
    id: "SDG",
    displayName: "Pound ng Sudan",
    symbol: "SDG",
    one: "pound ng Sudan",
    other: "Sudanese pounds"
}, {
    id: "SSP",
    displayName: "Pound ng Timog Sudan",
    symbol: "SSP",
    one: "Pound ng Timog Sudan",
    other: "pounds ng Timog Sudan"
}, {
    id: "QAR",
    displayName: "Qatari Rial",
    symbol: "QAR",
    one: "Qatari rial",
    other: "Qatari rials"
}, {
    id: "GTQ",
    displayName: "Quetzal ng Guatemala",
    symbol: "GTQ",
    one: "quetzal ng Guatemala",
    other: "quetzals ng Guatemala"
}, {
    id: "ZAR",
    displayName: "Rand ng Timog Africa",
    symbol: "ZAR",
    one: "rand ng Timog Africa",
    other: "rand ng Timog Africa"
}, {
    id: "BRL",
    displayName: "Real ng Barzil",
    symbol: "R$",
    one: "real ng Brazil",
    other: "reals ng Brazil"
}, {
    id: "RON",
    displayName: "Romanian Leu",
    symbol: "RON",
    one: "Romanian leu",
    other: "Romanian lei"
}, {
    id: "RUB",
    displayName: "Russian Ruble",
    symbol: "RUB",
    one: "Russian ruble",
    other: "Russian rubles"
}, {
    id: "RWF",
    displayName: "Rwandan Franc",
    symbol: "RWF",
    one: "Rwandan franc",
    other: "Rwandan francs"
}, {
    id: "SHP",
    displayName: "Saint Helena Pound",
    symbol: "SHP",
    one: "Saint Helena pound",
    other: "Saint Helena pounds"
}, {
    id: "WST",
    displayName: "Samoan Tala",
    symbol: "WST",
    one: "Samoan tala",
    other: "Samoan tala"
}, {
    id: "SAR",
    displayName: "Saudi Riyal",
    symbol: "SAR",
    one: "Saudi riyal",
    other: "Saudi riyals"
}, {
    id: "RSD",
    displayName: "Serbian Dinar",
    symbol: "RSD",
    one: "Serbian dinar",
    other: "Serbian dinars"
}, {
    id: "SCR",
    displayName: "Seychellois Rupee",
    symbol: "SCR",
    one: "Seychellois rupee",
    other: "Seychellois rupees"
}, {
    id: "SLL",
    displayName: "Sierra Leonean Leone",
    symbol: "SLL",
    one: "Sierra Leonean leone",
    other: "Sierra Leonean leones"
}, {
    id: "SKK",
    displayName: "Slovak Koruna"
}, {
    id: "SIT",
    displayName: "Slovenian Tolar"
}, {
    id: "SOS",
    displayName: "Somali Shilling",
    symbol: "SOS",
    one: "Somali shilling",
    other: "Somali shillings"
}, {
    id: "LKR",
    displayName: "Sri Lankan Rupee",
    symbol: "LKR",
    one: "Sri Lankan rupee",
    other: "Sri Lankan rupees"
}, {
    id: "SZL",
    displayName: "Swazi Lilangeni",
    symbol: "SZL",
    one: "Swazi lilangeni",
    other: "Swazi emalangeni"
}, {
    id: "SEK",
    displayName: "Swedish Krona",
    symbol: "SEK",
    one: "Swedish krona",
    other: "Swedish kronor"
}, {
    id: "CHF",
    displayName: "Swiss Franc",
    symbol: "CHF",
    one: "Swiss franc",
    other: "Swiss francs"
}, {
    id: "SYP",
    displayName: "Syrian Pound",
    symbol: "SYP",
    one: "Syrian pound",
    other: "Syrian pounds"
}, {
    id: "STD",
    displayName: "São Tomé & Príncipe Dobra",
    symbol: "STD",
    one: "São Tomé & Príncipe dobra",
    other: "São Tomé & Príncipe dobras"
}, {
    id: "TJS",
    displayName: "Tajikistani Somoni",
    symbol: "TJS",
    one: "Tajikistani somoni",
    other: "Tajikistani somonis"
}, {
    id: "TZS",
    displayName: "Tanzanian Shilling",
    symbol: "TZS",
    one: "Tanzanian shilling",
    other: "Tanzanian shillings"
}, {
    id: "THB",
    displayName: "Thai Baht",
    symbol: "฿",
    one: "Thai baht",
    other: "Thai baht"
}, {
    id: "TOP",
    displayName: "Tongan Paʻanga",
    symbol: "TOP",
    one: "Tongan paʻanga",
    other: "Tongan paʻanga"
}, {
    id: "TND",
    displayName: "Tunisian Dinar",
    symbol: "TND",
    one: "Tunisian dinar",
    other: "Tunisian dinars"
}, {
    id: "TRY",
    displayName: "Turkish Lira",
    symbol: "TRY",
    one: "Turkish lira",
    other: "Turkish Lira"
}, {
    id: "TMT",
    displayName: "Turkmenistani Manat",
    symbol: "TMT",
    one: "Turkmenistani manat",
    other: "Turkmenistani manat"
}, {
    id: "UGX",
    displayName: "Ugandan Shilling",
    symbol: "UGX",
    one: "Ugandan shilling",
    other: "Ugandan shillings"
}, {
    id: "UAH",
    displayName: "Ukrainian Hryvnia",
    symbol: "UAH",
    one: "Ukrainian hryvnia",
    other: "Ukrainian hryvnias"
}, {
    id: "AED",
    displayName: "United Arab Emirates Dirham",
    symbol: "AED",
    one: "UAE dirham",
    other: "UAE dirhams"
}, {
    id: "UZS",
    displayName: "Uzbekistan Som",
    symbol: "UZS",
    one: "Uzbekistan som",
    other: "Uzbekistan som"
}, {
    id: "VUV",
    displayName: "Vanuatu Vatu",
    symbol: "VUV",
    one: "Vanuatu vatu",
    other: "Vanuatu vatus"
}, {
    id: "VEB",
    displayName: "Venezuelan Bolívar (1871–2008)"
}, {
    id: "VND",
    displayName: "Vietnamese Dong",
    symbol: "₫",
    one: "Vietnamese dong",
    other: "Vietnamese dong"
}, {
    id: "KPW",
    displayName: "Won ng Hilagang Korea",
    symbol: "KPW",
    one: "won ng Hilagang Korea",
    other: "won ng Hilagang Korea"
}, {
    id: "KRW",
    displayName: "Won ng Timog Korea",
    symbol: "₩",
    one: "won ng Timog Korea",
    other: "won ng Timog Korea"
}, {
    id: "YER",
    displayName: "Yemeni Rial",
    symbol: "YER",
    one: "Yemeni rial",
    other: "Yemeni rials"
}, {
    id: "ZMW",
    displayName: "Zambian Kwacha",
    symbol: "ZMW",
    one: "Zambian kwacha",
    other: "Zambian kwachas"
}, {
    id: "ZMK",
    displayName: "Zambian Kwacha (1968–2012)"
} ];

module.exports = inter;