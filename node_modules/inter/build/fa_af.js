function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./fa.js"), inter = defaults({
    renderers: {}
}, P);

var _9vvw1 = {
    all: {
        leap: "{0}bis"
    }
}, _9vvw2 = {
    displayName: "روز هفته"
}, _9vvw3 = {
    a: "h a – h a",
    h: "h–h a"
}, _9vvw4 = [ "Before R.O.C.", "R.O.C." ], _9vvw5 = {
    displayName: "قبل/بعدازظهر"
}, _9vvw6 = {
    displayName: "منطقهٔ زمانی"
}, _9vvw7 = {
    a: "h a تا h a",
    h: "h تا h a"
}, _9vvw8 = [ "ی", "د", "س", "چ", "پ", "ج", "ش" ], _9vvw9 = [ "س‌م۱", "س‌م۲", "س‌م۳", "س‌م۴" ], _9vvw10 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _9vvw11 = {
    d: "M/d تا M/d",
    M: "M/d تا M/d"
}, _9vvw12 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _9vvw13 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _9vvw14 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _9vvw15 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _9vvw16 = [ "۱ش", "۲ش", "۳ش", "۴ش", "۵ش", "ج", "ش" ], _9vvw17 = {
    H: "H:mm تا H:mm",
    m: "H:mm تا H:mm"
}, _9vvw18 = {
    d: "d تا d LLL",
    M: "d LLL تا d LLL"
}, _9vvw19 = {
    M: "y/M تا y/M G",
    y: "y/M تا y/M G"
}, _9vvw20 = {
    a: "h a تا h a (v)",
    h: "h تا h a (v)"
}, _9vvw21 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _9vvw22 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _9vvw23 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _9vvw24 = {
    d: "E M/d تا E M/d",
    M: "E M/d تا E M/d"
}, _9vvw25 = {
    one: "{0} سال بعد",
    other: "{0} سال بعد"
}, _9vvw26 = {
    one: "{0} سال پیش",
    other: "{0} سال پیش"
}, _9vvw27 = {
    one: "{0} ماه بعد",
    other: "{0} ماه بعد"
}, _9vvw28 = {
    one: "{0} ماه پیش",
    other: "{0} ماه پیش"
}, _9vvw29 = {
    one: "{0} روز بعد",
    other: "{0} روز بعد"
}, _9vvw30 = {
    one: "{0} روز پیش",
    other: "{0} روز پیش"
}, _9vvw31 = {
    M: "LLL تا MMM y G",
    y: "MMM y تا MMM y G"
}, _9vvw32 = {
    one: "{0} هفته بعد",
    other: "{0} هفته بعد"
}, _9vvw33 = {
    one: "{0} هفته پیش",
    other: "{0} هفته پیش"
}, _9vvw34 = {
    one: "{0} ساعت بعد",
    other: "{0} ساعت بعد"
}, _9vvw35 = {
    one: "{0} ساعت پیش",
    other: "{0} ساعت پیش"
}, _9vvw36 = {
    "0": "امسال",
    "1": "سال آینده",
    "-1": "سال گذشته"
}, _9vvw37 = {
    "0": "این ماه",
    "1": "ماه آینده",
    "-1": "ماه پیش"
}, _9vvw38 = {
    wide: [ "هجری قمری" ],
    abbreviated: [ "ه‍.ق." ]
}, _9vvw39 = {
    H: "H:mm تا H:mm (v)",
    m: "H:mm تا H:mm (v)"
}, _9vvw40 = {
    one: "{0} دقیقه بعد",
    other: "{0} دقیقه بعد"
}, _9vvw41 = {
    one: "{0} دقیقه پیش",
    other: "{0} دقیقه پیش"
}, _9vvw42 = {
    one: "{0} ثانیه بعد",
    other: "{0} ثانیه بعد"
}, _9vvw43 = {
    one: "{0} ثانیه پیش",
    other: "{0} ثانیه پیش"
}, _9vvw44 = {
    "0": "این ماه",
    "1": "ماه آینده",
    "-1": "ماه گذشته"
}, _9vvw45 = {
    M: "LLLL تا MMMM y G",
    y: "MMMM y تا MMMM y G"
}, _9vvw46 = {
    d: "E d LLL تا E d LLL",
    M: "E d LLL تا E d LLL"
}, _9vvw47 = [ "ژ", "ف", "م", "آ", "م", "ژ", "ژ", "ا", "س", "ا", "ن", "د" ], _9vvw48 = [ "ج", "ف", "م", "ا", "م", "ج", "ج", "ا", "س", "ا", "ن", "د" ], _9vvw49 = {
    one: "{0} سه‌ماههٔ بعد",
    other: "{0} سه‌ماههٔ بعد"
}, _9vvw50 = {
    one: "{0} سه‌ماههٔ پیش",
    other: "{0} سه‌ماههٔ پیش"
}, _9vvw51 = {
    "0": "این هفته",
    "1": "هفتهٔ آینده",
    "-1": "هفتهٔ گذشته"
}, _9vvw52 = {
    "0": "این جمعه",
    "1": "جمعهٔ آینده",
    "-1": "جمعهٔ گذشته"
}, _9vvw53 = {
    "0": "این شنبه",
    "1": "شنبهٔ آینده",
    "-1": "شنبهٔ گذشته"
}, _9vvw54 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _9vvw55 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _9vvw56 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _9vvw57 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _9vvw58 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _9vvw59 = [ "ت", "ح", "ک", "ط", "ش", "آ", "و", "ن", "ا", "س", "ت", "آ", "ا" ], _9vvw60 = {
    "0": "این یکشنبه",
    "1": "یکشنبهٔ آینده",
    "-1": "یکشنبهٔ گذشته"
}, _9vvw61 = {
    "0": "این دوشنبه",
    "1": "دوشنبهٔ آینده",
    "-1": "دوشنبهٔ گذشته"
}, _9vvw62 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _9vvw63 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _9vvw64 = {
    "0": "این سه‌شنبه",
    "1": "سه‌شنبهٔ آینده",
    "-1": "سه‌شنبهٔ گذشته"
}, _9vvw65 = {
    "0": "این پنجشنبه",
    "1": "پنجشنبهٔ آینده",
    "-1": "پنجشنبهٔ گذشته"
}, _9vvw66 = {
    "0": "امروز",
    "1": "فردا",
    "2": "پس‌فردا",
    "-2": "پریروز",
    "-1": "دیروز"
}, _9vvw67 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _9vvw68 = {
    a: "h:mm a تا h:mm a",
    h: "h:mm تا h:mm a",
    m: "h:mm تا h:mm a"
}, _9vvw69 = {
    relative: _9vvw52
}, _9vvw70 = {
    relative: _9vvw53
}, _9vvw71 = {
    id: "CL",
    displayName: "چلی",
    regionId: "005",
    hasTimeZones: true
}, _9vvw72 = {
    "0": "سه‌ماههٔ کنونی",
    "1": "سه‌ماههٔ آینده",
    "-1": "سه‌ماههٔ گذشته"
}, _9vvw73 = {
    "0": "این چهارشنبه",
    "1": "چهارشنبهٔ آینده",
    "-1": "چهارشنبهٔ گذشته"
}, _9vvw74 = {
    id: "CH",
    displayName: "سویس",
    regionId: "155",
    hasTimeZones: true
}, _9vvw75 = {
    id: "PE",
    displayName: "پیرو",
    regionId: "005",
    hasTimeZones: true
}, _9vvw76 = {
    id: "BN",
    displayName: "برونی",
    regionId: "035",
    hasTimeZones: true
}, _9vvw77 = {
    id: "BE",
    displayName: "بلجیم",
    regionId: "155",
    hasTimeZones: true
}, _9vvw78 = {
    id: "JP",
    displayName: "جاپان",
    regionId: "030",
    hasTimeZones: true
}, _9vvw79 = {
    id: "SE",
    displayName: "سویدن",
    regionId: "154",
    hasTimeZones: true
}, _9vvw80 = {
    id: "FI",
    displayName: "فنلند",
    regionId: "154",
    hasTimeZones: true
}, _9vvw81 = {
    id: "LY",
    displayName: "لیبیا",
    regionId: "015",
    hasTimeZones: true
}, _9vvw82 = {
    id: "MT",
    displayName: "مالتا",
    regionId: "039",
    hasTimeZones: true
}, _9vvw83 = {
    id: "NO",
    displayName: "ناروی",
    regionId: "154",
    hasTimeZones: true
}, _9vvw84 = {
    id: "NP",
    displayName: "نیپال",
    regionId: "034",
    hasTimeZones: true
}, _9vvw85 = {
    id: "NL",
    displayName: "هالند",
    regionId: "155",
    hasTimeZones: true
}, _9vvw86 = {
    id: "HT",
    displayName: "هایتی",
    regionId: "029",
    hasTimeZones: true
}, _9vvw87 = {
    id: "PL",
    displayName: "پولند",
    regionId: "151",
    hasTimeZones: true
}, _9vvw88 = {
    id: "KE",
    displayName: "کینیا",
    regionId: "014",
    hasTimeZones: true
}, _9vvw89 = {
    id: "CU",
    displayName: "کیوبا",
    regionId: "029",
    hasTimeZones: true
}, _9vvw90 = {
    id: "GY",
    displayName: "گیانا",
    regionId: "005",
    hasTimeZones: true
}, _9vvw91 = {
    id: "GN",
    displayName: "گینیا",
    regionId: "011",
    hasTimeZones: true
}, _9vvw92 = [ "سه‌ماههٔ اول", "سه‌ماههٔ دوم", "سه‌ماههٔ سوم", "سه‌ماههٔ چهارم" ], _9vvw93 = {
    id: "IE",
    displayName: "آیرلند",
    regionId: "154",
    hasTimeZones: true
}, _9vvw94 = {
    id: "IS",
    displayName: "آیسلند",
    regionId: "154",
    hasTimeZones: true
}, _9vvw95 = {
    id: "AD",
    displayName: "اندورا",
    regionId: "039",
    hasTimeZones: true
}, _9vvw96 = {
    id: "AO",
    displayName: "انگولا",
    regionId: "017",
    hasTimeZones: true
}, _9vvw97 = {
    id: "UA",
    displayName: "اکراین",
    regionId: "151",
    hasTimeZones: true
}, _9vvw98 = {
    id: "BR",
    displayName: "برازیل",
    regionId: "005",
    hasTimeZones: true
}, _9vvw99 = {
    id: "BS",
    displayName: "بهاماس",
    regionId: "029",
    hasTimeZones: true
}, _9vvw100 = {
    id: "DK",
    displayName: "دنمارک",
    regionId: "154",
    hasTimeZones: true
}, _9vvw101 = {
    id: "RW",
    displayName: "روآندا",
    regionId: "014",
    hasTimeZones: true
}, _9vvw102 = {
    id: "SI",
    displayName: "سلونیا",
    regionId: "039",
    hasTimeZones: true
}, _9vvw103 = {
    id: "LV",
    displayName: "لاتویا",
    regionId: "154",
    hasTimeZones: true
}, _9vvw104 = {
    id: "LS",
    displayName: "لیسوتو",
    regionId: "018",
    hasTimeZones: true
}, _9vvw105 = {
    id: "MX",
    displayName: "مکسیکو",
    regionId: "013",
    hasTimeZones: true
}, _9vvw106 = {
    id: "NG",
    displayName: "نیجریا",
    regionId: "011",
    hasTimeZones: true
}, _9vvw107 = {
    id: "PA",
    displayName: "پانامه",
    regionId: "013",
    hasTimeZones: true
}, _9vvw108 = {
    id: "PT",
    displayName: "پرتگال",
    regionId: "039",
    hasTimeZones: true
}, _9vvw109 = {
    id: "HR",
    displayName: "کروشیا",
    regionId: "039",
    hasTimeZones: true
}, _9vvw110 = {
    d: "y/M/d تا y/M/d G",
    M: "y/M/d تا y/M/d G",
    y: "y/M/d تا y/M/d G"
}, _9vvw111 = [ "یکشنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه" ], _9vvw112 = {
    id: "ER",
    displayName: "اریتریا",
    regionId: "014",
    hasTimeZones: true
}, _9vvw113 = {
    id: "EE",
    displayName: "استونیا",
    regionId: "154",
    hasTimeZones: true
}, _9vvw114 = {
    id: "AL",
    displayName: "البانیا",
    regionId: "039",
    hasTimeZones: true
}, _9vvw115 = {
    id: "ET",
    displayName: "ایتوپیا",
    regionId: "014",
    hasTimeZones: true
}, _9vvw116 = {
    id: "BG",
    displayName: "بلغاریا",
    regionId: "151",
    hasTimeZones: true
}, _9vvw117 = {
    id: "BO",
    displayName: "بولیویا",
    regionId: "005",
    hasTimeZones: true
}, _9vvw118 = {
    id: "RO",
    displayName: "رومانیا",
    regionId: "151",
    hasTimeZones: true
}, _9vvw119 = {
    id: "SK",
    displayName: "سلواکیا",
    regionId: "151",
    hasTimeZones: true
}, _9vvw120 = {
    id: "SO",
    displayName: "سومالیه",
    regionId: "014",
    hasTimeZones: true
}, _9vvw121 = {
    id: "SN",
    displayName: "سینیگال",
    regionId: "011",
    hasTimeZones: true
}, _9vvw122 = {
    id: "LT",
    displayName: "لتوانیا",
    regionId: "154",
    hasTimeZones: true
}, _9vvw123 = {
    id: "MY",
    displayName: "مالیزیا",
    regionId: "035",
    hasTimeZones: true
}, _9vvw124 = {
    id: "MN",
    displayName: "منگولیا",
    regionId: "030",
    hasTimeZones: true
}, _9vvw125 = {
    id: "MZ",
    displayName: "موزمبیق",
    regionId: "014",
    hasTimeZones: true
}, _9vvw126 = {
    id: "ES",
    displayName: "هسپانیه",
    regionId: "039",
    hasTimeZones: true
}, _9vvw127 = {
    id: "VE",
    displayName: "ونزویلا",
    regionId: "005",
    hasTimeZones: true
}, _9vvw128 = {
    id: "KH",
    displayName: "کمپوچیا",
    regionId: "035",
    hasTimeZones: true
}, _9vvw129 = {
    id: "CO",
    displayName: "کولمبیا",
    regionId: "005",
    hasTimeZones: true
}, _9vvw130 = {
    id: "GD",
    displayName: "گرینادا",
    regionId: "029",
    hasTimeZones: true
}, _9vvw131 = {
    id: "AU",
    displayName: "آسترالیا",
    regionId: "053",
    hasTimeZones: true
}, _9vvw132 = {
    id: "AR",
    displayName: "ارجنتاین",
    regionId: "005",
    hasTimeZones: true
}, _9vvw133 = {
    id: "TJ",
    displayName: "تاجکستان",
    regionId: "143",
    hasTimeZones: true
}, _9vvw134 = {
    id: "ZW",
    displayName: "زیمبابوی",
    regionId: "014",
    hasTimeZones: true
}, _9vvw135 = {
    id: "LK",
    displayName: "سریلانکا",
    regionId: "034",
    hasTimeZones: true
}, _9vvw136 = {
    id: "SL",
    displayName: "سیرالیون",
    regionId: "011",
    hasTimeZones: true
}, _9vvw137 = {
    id: "SG",
    displayName: "سینگاپور",
    regionId: "035",
    hasTimeZones: true
}, _9vvw138 = {
    id: "KG",
    displayName: "قرغزستان",
    regionId: "143",
    hasTimeZones: true
}, _9vvw139 = {
    id: "MG",
    displayName: "مادغاسکر",
    regionId: "014",
    hasTimeZones: true
}, _9vvw140 = {
    id: "HN",
    displayName: "هاندوراس",
    regionId: "013",
    hasTimeZones: true
}, _9vvw141 = {
    id: "PY",
    displayName: "پاراگوای",
    regionId: "005",
    hasTimeZones: true
}, _9vvw142 = {
    id: "CR",
    displayName: "کاستریکا",
    regionId: "013",
    hasTimeZones: true
}, _9vvw143 = {
    id: "UY",
    displayName: "یوروگوای",
    regionId: "005",
    hasTimeZones: true
}, _9vvw144 = {
    relative: _9vvw60
}, _9vvw145 = {
    relative: _9vvw61
}, _9vvw146 = {
    id: "SV",
    displayName: "السلوادور",
    regionId: "013",
    hasTimeZones: true
}, _9vvw147 = {
    id: "ID",
    displayName: "اندونیزیا",
    regionId: "035",
    hasTimeZones: true
}, _9vvw148 = {
    id: "BD",
    displayName: "بنگله‌دیش",
    regionId: "034",
    hasTimeZones: true
}, _9vvw149 = {
    id: "MR",
    displayName: "موریتانیا",
    regionId: "011",
    hasTimeZones: true
}, _9vvw150 = {
    id: "FM",
    displayName: "میکرونزیا",
    regionId: "057",
    hasTimeZones: true
}, _9vvw151 = {
    id: "NI",
    displayName: "نیکاراگوا",
    regionId: "013",
    hasTimeZones: true
}, _9vvw152 = {
    id: "GT",
    displayName: "گواتیمالا",
    regionId: "013",
    hasTimeZones: true
}, _9vvw153 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _9vvw154 = {
    d: "d تا d MMM y G",
    M: "d LLL تا d MMM y G",
    y: "d MMM y تا d MMM y G"
}, _9vvw155 = {
    id: "BY",
    displayName: "روسیهٔ سفید",
    regionId: "151",
    hasTimeZones: true
}, _9vvw156 = {
    id: "NZ",
    displayName: "زیلاند جدید",
    regionId: "053",
    hasTimeZones: true
}, _9vvw157 = {
    relative: _9vvw64
}, _9vvw158 = {
    relative: _9vvw65
}, _9vvw159 = {
    id: "KR",
    displayName: "کوریای جنوبی",
    regionId: "030",
    hasTimeZones: true
}, _9vvw160 = {
    id: "KP",
    displayName: "کوریای شمالی",
    regionId: "030",
    hasTimeZones: true
}, _9vvw161 = {
    id: "GW",
    displayName: "گینیا بیسائو",
    regionId: "011",
    hasTimeZones: true
}, _9vvw162 = {
    id: "GQ",
    displayName: "گینیا استوایی",
    regionId: "017",
    hasTimeZones: true
}, _9vvw163 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _9vvw164 = {
    a: "h:mm a تا h:mm a (v)",
    h: "h:mm تا h:mm a (v)",
    m: "h:mm تا h:mm a (v)"
}, _9vvw165 = {
    relative: _9vvw73
}, _9vvw166 = {
    id: "PG",
    displayName: "پاپوا نیو گینیا",
    regionId: "054",
    hasTimeZones: true
}, _9vvw167 = {
    id: "CG",
    displayName: "کانگو - برازویل",
    regionId: "017",
    hasTimeZones: true
}, _9vvw168 = {
    id: "CD",
    displayName: "کانگو - کینشاسا",
    regionId: "017",
    hasTimeZones: true
}, _9vvw169 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _9vvw170 = {
    id: "AG",
    displayName: "انتیگوا و باربودا",
    regionId: "029",
    hasTimeZones: true
}, _9vvw171 = {
    d: "E y/M/d تا E y/M/d G",
    M: "E y/M/d تا E y/M/d G",
    y: "E y/M/d تا E y/M/d G"
}, _9vvw172 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _9vvw173 = {
    id: "BA",
    displayName: "بوسنیا و هرزه‌گوینا",
    regionId: "039",
    hasTimeZones: true
}, _9vvw174 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _9vvw175 = [ undefined, "موش", "گاو", "ببر", "خرگوش", "اژدها", "مار", "اسب", "بز", "میمون", "خروس", "سگ" ], _9vvw176 = {
    d: "E d LLL تا E d MMM y G",
    M: "E d LLL تا E d MMM y G",
    y: "E d MMM y تا E d MMM y G"
}, _9vvw177 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _9vvw178 = [ "جنو", "فبروری", "مارچ", "اپریل", "می", "جون", "جول", "اگست", "سپتمبر", "اکتوبر", "نومبر", "دسم" ], _9vvw179 = {
    midnight: "ن",
    am: "ق",
    noon: "ظ",
    pm: "ب",
    morning1: "ص",
    afternoon1: "ب",
    evening1: "ع",
    night1: "ش"
}, _9vvw180 = [ "فروردین", "اردیبهشت", "خرداد", "تیر", "مرداد", "شهریور", "مهر", "آبان", "آذر", "دی", "بهمن", "اسفند" ], _9vvw181 = [ "جنوری", "فبروری", "مارچ", "اپریل", "می", "جون", "جولای", "اگست", "سپتمبر", "اکتوبر", "نومبر", "دسمبر" ], _9vvw182 = {
    future: _9vvw25,
    past: _9vvw26
}, _9vvw183 = {
    future: _9vvw27,
    past: _9vvw28
}, _9vvw184 = {
    future: _9vvw29,
    past: _9vvw30
}, _9vvw185 = [ "تشری", "حشوان", "کسلو", "طوت", "شباط", "آذار", "واذار", "نیسان", "ایار", "سیوان", "تموز", "آب", "ایلول" ], _9vvw186 = [ "ژانویه", "فوریه", "مارس", "آوریل", "مه", "ژوئن", "ژوئیه", "اوت", "سپتامبر", "اکتبر", "نوامبر", "دسامبر" ], _9vvw187 = {
    future: _9vvw32,
    past: _9vvw33
}, _9vvw188 = {
    future: _9vvw34,
    past: _9vvw35
}, _9vvw189 = {
    future: _9vvw40,
    past: _9vvw41
}, _9vvw190 = {
    future: _9vvw42,
    past: _9vvw43
}, _9vvw191 = {
    midnight: "نیمه‌شب",
    am: "ق.ظ.",
    noon: "ظهر",
    pm: "ب.ظ.",
    morning1: "صبح",
    afternoon1: "عصر",
    evening1: "عصر",
    night1: "شب"
}, _9vvw192 = {
    midnight: "نیمه‌شب",
    am: "ق.ظ.",
    noon: "ظ",
    pm: "ب.ظ.",
    morning1: "صبح",
    afternoon1: "عصر",
    evening1: "سر شب",
    night1: "شب"
}, _9vvw193 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _9vvw194 = {
    midnight: "نیمه‌شب",
    am: "ق.ظ.",
    noon: "ظهر",
    pm: "ب.ظ.",
    morning1: "صبح",
    afternoon1: "عصر",
    evening1: "سر شب",
    night1: "شب"
}, _9vvw195 = {
    future: _9vvw49,
    past: _9vvw50
}, _9vvw196 = [ "محرم", "صفر", "ربیع الاول", "ربیع الثانی", "جمادی الاول", "جمادی الثانی", "رجب", "شعبان", "رمضان", "شوال", "ذیقعده", "ذیحجه" ], _9vvw197 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _9vvw198 = [ "محرم", "صفر", "ربیع الاول", "ربیع الثانی", "جمادی الاول", "جمادی الثانی", "رجب", "شعبان", "رمضان", "شوال", "ذیقعدهٔ", "ذیحجهٔ" ], _9vvw199 = {
    midnight: "نیمه‌شب",
    am: "قبل‌ازظهر",
    noon: "ظهر",
    pm: "بعدازظهر",
    morning1: "صبح",
    afternoon1: "عصر",
    evening1: "عصر",
    night1: "شب"
}, _9vvw200 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _9vvw201 = {
    midnight: "نیمه‌شب",
    am: "قبل‌ازظهر",
    noon: "ظهر",
    pm: "بعدازظهر",
    morning1: "صبح",
    afternoon1: "عصر",
    evening1: "سر شب",
    night1: "شب"
}, _9vvw202 = {
    displayName: "ساعت",
    relativeTime: _9vvw188
}, _9vvw203 = {
    displayName: "دقیقه",
    relativeTime: _9vvw189
}, _9vvw204 = {
    abbreviated: _9vvw9,
    narrow: [ "۱", "۲", "۳", "۴" ],
    wide: _9vvw92
}, _9vvw205 = {
    displayName: "ثانیه",
    relative: [ "اکنون" ],
    relativeTime: _9vvw190
}, _9vvw206 = {
    displayName: "سال",
    relative: _9vvw36,
    relativeTime: _9vvw182
}, _9vvw207 = {
    displayName: "ماه",
    relative: _9vvw37,
    relativeTime: _9vvw183
}, _9vvw208 = {
    displayName: "ماه",
    relative: _9vvw44,
    relativeTime: _9vvw183
}, _9vvw209 = {
    displayName: "هفته",
    relative: _9vvw51,
    relativeTime: _9vvw187
}, _9vvw210 = {
    format: _9vvw163,
    numeric: _9vvw1,
    standAlone: _9vvw163
}, _9vvw211 = {
    displayName: "روز",
    relative: _9vvw66,
    relativeTime: _9vvw184
}, _9vvw212 = {
    displayName: "سه‌ماهه",
    relative: _9vvw72,
    relativeTime: _9vvw195
}, _9vvw213 = {
    abbreviated: _9vvw169,
    narrow: _9vvw57,
    wide: _9vvw169
}, _9vvw214 = {
    abbreviated: _9vvw111,
    narrow: _9vvw8,
    wide: _9vvw111,
    "short": _9vvw16
}, _9vvw215 = {
    abbreviated: _9vvw172,
    narrow: _9vvw172,
    wide: _9vvw172
}, _9vvw216 = {
    abbreviated: _9vvw178,
    narrow: _9vvw47,
    wide: _9vvw181
}, _9vvw217 = {
    format: _9vvw215
}, _9vvw218 = {
    abbreviated: _9vvw186,
    narrow: _9vvw48,
    wide: _9vvw186
}, _9vvw219 = {
    abbreviated: _9vvw185,
    narrow: _9vvw59,
    wide: _9vvw185
}, _9vvw220 = {
    abbreviated: _9vvw175,
    narrow: _9vvw175,
    wide: _9vvw175
}, _9vvw221 = {
    format: _9vvw220
}, _9vvw222 = {
    format: _9vvw204,
    standAlone: _9vvw204
}, _9vvw223 = {
    abbreviated: _9vvw193,
    narrow: _9vvw63,
    wide: _9vvw193
}, _9vvw224 = {
    abbreviated: _9vvw196,
    narrow: _9vvw57,
    wide: _9vvw196
}, _9vvw225 = {
    abbreviated: _9vvw198,
    narrow: _9vvw57,
    wide: _9vvw198
}, _9vvw226 = {
    abbreviated: _9vvw197,
    narrow: _9vvw63,
    wide: _9vvw197
}, _9vvw227 = {
    abbreviated: _9vvw200,
    narrow: _9vvw57,
    wide: _9vvw200
}, _9vvw228 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "H:mm:ss (zzzz)",
    longTime: "H:mm:ss (z)",
    mediumTime: "H:mm:ss",
    shortTime: "H:mm",
    shortDateTime: "r-MM-dd H:mm",
    mediumDateTime: "r MMM d H:mm:ss",
    longDateTime: "r(U) MMMM d H:mm:ss (z)",
    fullDateTime: "r(U) MMMM d, EEEE H:mm:ss (zzzz)"
}, _9vvw229 = {
    fullDate: "EEEE d MMMM y G",
    longDate: "d MMMM y G",
    mediumDate: "d MMM y G",
    shortDate: "y/M/d G",
    fullTime: "H:mm:ss (zzzz)",
    longTime: "H:mm:ss (z)",
    mediumTime: "H:mm:ss",
    shortTime: "H:mm",
    shortDateTime: "y/M/d G،‏ H:mm",
    mediumDateTime: "d MMM y G،‏ H:mm:ss",
    longDateTime: "d MMMM y G، ساعت H:mm:ss (z)",
    fullDateTime: "EEEE d MMMM y G، ساعت H:mm:ss (zzzz)"
}, _9vvw230 = {
    abbreviated: _9vvw191,
    narrow: _9vvw179,
    wide: _9vvw199
}, _9vvw231 = {
    abbreviated: _9vvw192,
    narrow: _9vvw194,
    wide: _9vvw201
}, _9vvw232 = {
    format: _9vvw213,
    standAlone: _9vvw213
}, _9vvw233 = {
    format: _9vvw214,
    standAlone: _9vvw214
}, _9vvw234 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _9vvw235 = {
    format: _9vvw216,
    standAlone: _9vvw218
}, _9vvw236 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _9vvw237 = {
    format: _9vvw225,
    standAlone: _9vvw224
}, _9vvw238 = {
    d: "d",
    E: "ccc",
    Ed: "E d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E d MMM y G",
    h: "h a",
    H: "H",
    hm: "h:mm a",
    Hm: "H:mm",
    hms: "h:mm:ss a",
    Hms: "H:mm:ss",
    HmZ: "HH:mm (Z)",
    M: "L",
    Md: "M/d",
    MEd: "E M/d",
    MMM: "LLL",
    MMMd: "d LLL",
    MMMEd: "E d LLL",
    MMMMd: "d LLLL",
    MMMMEd: "E d LLLL",
    ms: "mm:ss",
    y: "y G",
    yM: "y/M",
    yMEd: "E y/M/d",
    yMMM: "MMM y",
    yMMMEd: "E d MMM y",
    yMMMM: "MMMM y",
    yQQQ: "QQQ y",
    yQQQQ: "QQQQ y",
    yyyy: "y G",
    yyyyM: "y/M G",
    yyyyMd: "y/M/d G",
    yyyyMEd: "E y/M/d G",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E d MMM y G",
    yyyyMMMM: "G y MMMM",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    HHmmZ: "HH:mm (Z)",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _9vvw239 = {
    format: _9vvw230,
    standAlone: _9vvw231
}, _9vvw240 = {
    basic: _9vvw228,
    cldr: _9vvw234
}, _9vvw241 = {
    d: {
        d: "d–d"
    },
    h: _9vvw3,
    H: {
        H: "HH–HH"
    },
    hm: _9vvw58,
    Hm: _9vvw13,
    hmv: _9vvw67,
    Hmv: _9vvw21,
    hv: _9vvw10,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _9vvw22,
    MEd: _9vvw54,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _9vvw12,
    MMMEd: _9vvw55,
    y: {
        y: "U–U"
    },
    yM: _9vvw14,
    yMd: _9vvw153,
    yMEd: _9vvw177,
    yMMM: _9vvw15,
    yMMMd: _9vvw62,
    yMMMEd: _9vvw174,
    yMMMM: _9vvw23
}, _9vvw242 = {
    basic: _9vvw229,
    cldr: _9vvw238
}, _9vvw243 = {
    d: {
        d: "d تا d"
    },
    h: _9vvw7,
    H: {
        H: "H تا H"
    },
    hm: _9vvw68,
    Hm: _9vvw17,
    hmv: _9vvw164,
    Hmv: _9vvw39,
    hv: _9vvw20,
    Hv: {
        H: "H تا H (v)"
    },
    M: {
        M: "M تا M"
    },
    Md: _9vvw11,
    MEd: _9vvw24,
    MMM: {
        M: "MMM تا MMM"
    },
    MMMd: _9vvw18,
    MMMEd: _9vvw46,
    y: {
        y: "y تا y G"
    },
    yM: _9vvw19,
    yMd: _9vvw110,
    yMEd: _9vvw171,
    yMMM: _9vvw31,
    yMMMd: _9vvw154,
    yMMMEd: _9vvw176,
    yMMMM: _9vvw45
}, _9vvw244 = {
    abbreviated: _9vvw236,
    narrow: _9vvw236,
    wide: _9vvw236
}, _9vvw245 = {
    format: _9vvw244
}, _9vvw246 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _9vvw247 = {
    dayParts: _9vvw217,
    days: _9vvw245,
    months: _9vvw245,
    years: _9vvw245,
    zodiacs: _9vvw221
}, _9vvw248 = {
    era: {
        displayName: "دوره"
    },
    year: _9vvw206,
    "year-short": _9vvw206,
    "year-narrow": _9vvw206,
    quarter: _9vvw212,
    "quarter-short": _9vvw212,
    "quarter-narrow": _9vvw212,
    month: _9vvw208,
    "month-short": _9vvw207,
    "month-narrow": _9vvw207,
    week: _9vvw209,
    "week-short": _9vvw209,
    "week-narrow": _9vvw209,
    day: _9vvw211,
    "day-short": _9vvw211,
    "day-narrow": _9vvw211,
    weekday: _9vvw2,
    dayperiod: _9vvw5,
    hour: _9vvw202,
    "hour-short": _9vvw202,
    "hour-narrow": _9vvw202,
    minute: _9vvw203,
    "minute-short": _9vvw203,
    "minute-narrow": _9vvw203,
    second: _9vvw205,
    "second-short": _9vvw205,
    "second-narrow": _9vvw205,
    zone: _9vvw6,
    sun: _9vvw144,
    "sun-short": _9vvw144,
    "sun-narrow": _9vvw144,
    mon: _9vvw145,
    "mon-short": _9vvw145,
    "mon-narrow": _9vvw145,
    tue: _9vvw157,
    "tue-short": _9vvw157,
    "tue-narrow": _9vvw157,
    wed: _9vvw165,
    "wed-short": _9vvw165,
    "wed-narrow": _9vvw165,
    thu: _9vvw158,
    "thu-short": _9vvw158,
    "thu-narrow": _9vvw158,
    fri: _9vvw69,
    "fri-short": _9vvw69,
    "fri-narrow": _9vvw69,
    sat: _9vvw70,
    "sat-short": _9vvw70,
    "sat-narrow": _9vvw70
}, _9vvw249 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _9vvw248
}, _9vvw250 = {
    dateFormats: _9vvw242,
    datePartsOrder: "ymd",
    dateIntervalFormats: _9vvw243,
    dateIntervalFallbackFormat: "{0} تا {1}",
    dayNames: _9vvw233,
    dayPeriods: _9vvw239,
    monthNames: _9vvw237,
    eraNames: _9vvw38,
    quarterNames: _9vvw222,
    fields: _9vvw248
}, _9vvw251 = {
    dateFormats: _9vvw240,
    datePartsOrder: "md",
    dateIntervalFormats: _9vvw241,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _9vvw233,
    dayPeriods: _9vvw239,
    cyclicNames: _9vvw247,
    monthNames: _9vvw232,
    monthPatterns: _9vvw210,
    quarterNames: _9vvw222,
    fields: _9vvw248
};

inter.id = "fa_af";

inter.characters = {
    exemplar: {
        auxiliary: [ "\\u200E\\u200F", "\\u064E", "\\u0650", "\\u064F", "\\u0652", "\\u0656", "\\u0670", "\\u200C", "\\u200D", "إ", "ټ", "ځ", "څ", "ډ", "ړ", "ږ", "ښ", "ك", "ګ", "ڼ", "ى", "ي" ],
        "default": P.characters.exemplar.default,
        index: [ "آ", "ا", "ب", "پ", "ت", "ث", "ج", "چ", "ح", "خ", "د", "ذ", "ر", "ز", "ژ", "س", "ش", "ص", "ض", "ط", "ظ", "ع", "غ", "ف", "ق", "ک", "گ", "ل", "م", "ن", "و", "ه", "ی" ],
        punctuation: [ "\\-", "‐", "،", "٫", "٬", "؛", "\\:", "!", "؟", ".", "…", "‹", "›", "«", "»", "(", ")", "\\[", "\\]", "*", "/", "\\\\" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "؟"
};

inter.calendars = {
    buddhist: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9vvw243,
        dateIntervalFallbackFormat: "{0} تا {1}",
        dayNames: _9vvw233,
        dayPeriods: _9vvw239,
        monthNames: _9vvw235,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _9vvw222,
        fields: _9vvw248
    },
    chinese: _9vvw251,
    coptic: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9vvw243,
        dateIntervalFallbackFormat: "{0} تا {1}",
        dayNames: _9vvw233,
        dayPeriods: _9vvw239,
        monthNames: {
            format: _9vvw223,
            standAlone: _9vvw223
        },
        eraNames: _9vvw56,
        quarterNames: _9vvw222,
        fields: _9vvw248
    },
    dangi: _9vvw251,
    ethioaa: _9vvw249,
    ethiopic: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9vvw243,
        dateIntervalFallbackFormat: "{0} تا {1}",
        dayNames: _9vvw233,
        dayPeriods: _9vvw239,
        monthNames: {
            format: _9vvw226,
            standAlone: _9vvw226
        },
        eraNames: _9vvw56,
        quarterNames: _9vvw222,
        fields: _9vvw248
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE d MMMM y",
                longDate: "d MMMM y",
                mediumDate: "d MMM y",
                shortDate: "y/M/d",
                fullTime: "H:mm:ss (zzzz)",
                longTime: "H:mm:ss (z)",
                mediumTime: "H:mm:ss",
                shortTime: "H:mm",
                shortDateTime: "y/M/d،‏ H:mm",
                mediumDateTime: "d MMM y،‏ H:mm:ss",
                longDateTime: "d MMMM y، ساعت H:mm:ss (z)",
                fullDateTime: "EEEE d MMMM y، ساعت H:mm:ss (zzzz)"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E d",
                Ehm: "E h:mm a",
                EHm: "E H:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E H:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E d MMM y G",
                h: "h a",
                H: "H",
                HHmmZ: "HH:mm (Z)",
                hm: "h:mm a",
                Hm: "H:mm",
                hms: "h:mm:ss a",
                Hms: "H:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "M/d",
                MEd: "E M/d",
                MMM: "LLL",
                MMMd: "d LLL",
                MMMEd: "E d LLL",
                MMMMd: "d LLLL",
                MMMMEd: "E d LLLL",
                mmss: "mm:ss",
                ms: "mm:ss",
                y: "y",
                yM: "y/M",
                yMd: "y/M/d",
                yMEd: "E y/M/d",
                yMMM: "MMM y",
                yMMMd: "d MMM y",
                yMMMEd: "E d MMM y",
                yMMMM: "MMMM y",
                yMMMMEEEEd: "EEEE d MMMM y",
                yQQQ: "QQQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "ymd",
        dateIntervalFormats: {
            d: {
                d: "d تا d"
            },
            h: _9vvw7,
            H: {
                H: "H تا H"
            },
            hm: _9vvw68,
            Hm: _9vvw17,
            hmv: {
                a: "h:mm a تا h:mm a v",
                h: "h:mm تا h:mm a v",
                m: "h:mm تا h:mm a v"
            },
            Hmv: {
                H: "H:mm تا H:mm v",
                m: "H:mm تا H:mm v"
            },
            hv: {
                a: "h a تا h a v",
                h: "h تا h a v"
            },
            Hv: {
                H: "H تا H v"
            },
            M: {
                M: "M تا M"
            },
            Md: _9vvw11,
            MEd: _9vvw24,
            MMM: {
                M: "LLL تا LLL"
            },
            MMMd: _9vvw18,
            MMMEd: _9vvw46,
            y: {
                y: "y تا y"
            },
            yM: {
                M: "y/M تا y/M",
                y: "y/M تا y/M"
            },
            yMd: {
                d: "y/M/d تا y/M/d",
                M: "y/M/d تا y/M/d",
                y: "y/M/d تا y/M/d"
            },
            yMEd: {
                d: "E y/M/d تا E y/M/d",
                M: "E y/M/d تا E y/M/d",
                y: "E y/M/d تا E y/M/d"
            },
            yMMM: {
                M: "LLL تا MMM y",
                y: "MMM y تا MMM y"
            },
            yMMMd: {
                d: "d تا d MMM y",
                M: "d LLL تا d MMM y",
                y: "d MMM y تا d MMM y"
            },
            yMMMEd: {
                d: "E d LLL تا E d MMM y",
                M: "E d LLL تا E d MMM y",
                y: "E d MMM y تا E d MMM y"
            },
            yMMMM: {
                M: "LLLL تا MMMM y",
                y: "MMMM y تا MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} تا {1}",
        dayNames: _9vvw233,
        dayPeriods: _9vvw239,
        monthNames: _9vvw235,
        eraNames: {
            wide: [ "قبل از میلاد", "میلادی" ],
            abbreviated: [ "ق.م.", "م." ]
        },
        quarterNames: _9vvw222,
        fields: _9vvw248
    },
    hebrew: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9vvw243,
        dateIntervalFallbackFormat: "{0} تا {1}",
        dayNames: _9vvw233,
        dayPeriods: _9vvw239,
        monthNames: {
            format: _9vvw219,
            standAlone: _9vvw219
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _9vvw222,
        fields: _9vvw248
    },
    indian: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9vvw243,
        dateIntervalFallbackFormat: "{0} تا {1}",
        dayNames: _9vvw233,
        dayPeriods: _9vvw239,
        monthNames: {
            format: _9vvw227,
            standAlone: _9vvw227
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _9vvw222,
        fields: _9vvw248
    },
    islamic: _9vvw250,
    "islamic-umalqura": _9vvw250,
    "islamic-tbla": _9vvw250,
    "islamic-civil": _9vvw250,
    "islamic-rgsa": _9vvw250,
    iso8601: _9vvw249,
    japanese: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9vvw243,
        dateIntervalFallbackFormat: "{0} تا {1}",
        dayNames: _9vvw233,
        dayPeriods: _9vvw239,
        monthNames: _9vvw235,
        eraNames: {
            wide: _9vvw246,
            abbreviated: _9vvw246
        },
        quarterNames: _9vvw222,
        fields: _9vvw248
    },
    persian: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9vvw243,
        dateIntervalFallbackFormat: "{0} تا {1}",
        dayNames: _9vvw233,
        dayPeriods: _9vvw239,
        monthNames: {
            format: {
                abbreviated: _9vvw180,
                narrow: [ "ف", "ا", "خ", "ت", "م", "ش", "م", "آ", "آ", "د", "ب", "ا" ],
                wide: [ "حمل", "ثور", "جوزا", "سرطان", "اسد", "سنبلهٔ", "میزان", "عقرب", "قوس", "جدی", "دلو", "حوت" ]
            },
            standAlone: {
                abbreviated: _9vvw180,
                narrow: [ "ح", "ث", "ج", "س", "ا", "س", "م", "ع", "ق", "ج", "د", "ح" ],
                wide: _9vvw180
            }
        },
        eraNames: {
            wide: [ "هجری شمسی" ],
            abbreviated: [ "ه‍.ش." ]
        },
        quarterNames: _9vvw222,
        fields: _9vvw248
    },
    roc: {
        dateFormats: P.calendars.buddhist.dateFormats,
        datePartsOrder: "ymd",
        dateIntervalFormats: _9vvw243,
        dateIntervalFallbackFormat: "{0} تا {1}",
        dayNames: _9vvw233,
        dayPeriods: _9vvw239,
        monthNames: _9vvw235,
        eraNames: {
            wide: _9vvw4,
            abbreviated: _9vvw4
        },
        quarterNames: _9vvw222,
        fields: _9vvw248
    },
    islamicc: _9vvw249
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n));
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 0 || n === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinal(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "منفی " + this.renderSpelloutCardinal(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinal(Math.floor(n)) + " عشاریه " + this.renderSpelloutCardinal(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return this.renderSpelloutCardinal(Math.floor(n / 1e15)) + " بیلیارد" + (n === 1e15 ? "" : " و " + this.renderSpelloutCardinal(n % 1e15));
    if (n >= 1e12) return this.renderSpelloutCardinal(Math.floor(n / 1e12)) + " بیلیون" + (n === 1e12 ? "" : " و " + this.renderSpelloutCardinal(n % 1e12));
    if (n >= 1e9) return this.renderSpelloutCardinal(Math.floor(n / 1e9)) + " میلیارد" + (n === 1e9 ? "" : " و " + this.renderSpelloutCardinal(n % 1e9));
    if (n >= 1e6) return this.renderSpelloutCardinal(Math.floor(n / 1e6)) + " میلیون" + (n === 1e6 ? "" : " و " + this.renderSpelloutCardinal(n % 1e6));
    if (n >= 1e3) return this.renderSpelloutCardinal(Math.floor(n / 1e3)) + " هزار" + (n === 1e3 ? "" : " و " + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 900) return "نهصد" + (n === 900 ? "" : " و " + this.renderSpelloutCardinal(n % 100));
    if (n >= 800) return "هشتصد" + (n === 800 ? "" : " و " + this.renderSpelloutCardinal(n % 100));
    if (n >= 700) return "هفتصد" + (n === 700 ? "" : " و " + this.renderSpelloutCardinal(n % 100));
    if (n >= 600) return "ششصد" + (n === 600 ? "" : " و " + this.renderSpelloutCardinal(n % 100));
    if (n >= 500) return "پانصد" + (n === 500 ? "" : " و " + this.renderSpelloutCardinal(n % 100));
    if (n >= 400) return this.renderSpelloutCardinal(Math.floor(n / 100)) + "صد" + (n === 400 ? "" : " و " + this.renderSpelloutCardinal(n % 100));
    if (n >= 300) return this.renderSpelloutCardinal(Math.floor(n / 100)) + "‌صد" + (n === 300 ? "" : " و " + this.renderSpelloutCardinal(n % 100));
    if (n >= 200) return this.renderSpelloutCardinal(Math.floor(n / 100)) + "صد" + (n === 200 ? "" : " و " + this.renderSpelloutCardinal(n % 100));
    if (n >= 100) return "صد" + (n === 100 ? "" : " و " + this.renderSpelloutCardinal(n % 100));
    if (n >= 90) return "نود" + (n === 90 ? "" : " و " + this.renderSpelloutCardinal(n % 10));
    if (n >= 80) return "هشتاد" + (n === 80 ? "" : " و " + this.renderSpelloutCardinal(n % 10));
    if (n >= 70) return "هفتاد" + (n === 70 ? "" : " و " + this.renderSpelloutCardinal(n % 10));
    if (n >= 60) return "شصت" + (n === 60 ? "" : " و " + this.renderSpelloutCardinal(n % 10));
    if (n >= 50) return "پنجاه" + (n === 50 ? "" : " و " + this.renderSpelloutCardinal(n % 10));
    if (n >= 40) return "چهل" + (n === 40 ? "" : " و " + this.renderSpelloutCardinal(n % 10));
    if (n >= 30) return "سی" + (n === 30 ? "" : " و " + this.renderSpelloutCardinal(n % 10));
    if (n >= 20) return "بیست" + (n === 20 ? "" : " و " + this.renderSpelloutCardinal(n % 10));
    if (n >= 19) return "نزده";
    if (n >= 18) return "هجده";
    if (n >= 17) return "هفده";
    if (n >= 16) return "شانزده";
    if (n >= 15) return "پانزده";
    if (n >= 14) return "چهارده";
    if (n >= 13) return "سیزده";
    if (n >= 12) return "دوازده";
    if (n >= 11) return "یازده";
    if (n >= 10) return "ده";
    if (n >= 9) return "نه";
    if (n >= 8) return "هشت";
    if (n >= 7) return "هفت";
    if (n >= 6) return "شش";
    if (n >= 5) return "پنج";
    if (n >= 4) return "چهار";
    if (n >= 3) return "سه";
    if (n >= 2) return "دو";
    if (n >= 1) return "یک";
    if (n >= 0) return "صفر";
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.territories = [].concat(P.territories[0], _9vvw131, P.territories.slice(2, 4), P.territories[5], P.territories[9], _9vvw93, _9vvw94, P.territories[10], _9vvw132, P.territories.slice(12, 15), _9vvw112, P.territories.slice(17, 19), _9vvw113, P.territories[21], P.territories[24], P.territories.slice(26, 30), _9vvw114, P.territories[30], _9vvw146, P.territories.slice(32, 36), _9vvw170, _9vvw95, _9vvw147, _9vvw96, P.territories[38], _9vvw97, P.territories.slice(39, 42), _9vvw115, P.territories[42], P.territories[45], P.territories.slice(47, 49), _9vvw98, P.territories[50], _9vvw76, P.territories[52], _9vvw77, _9vvw116, P.territories[56], _9vvw148, P.territories[58], _9vvw99, P.territories.slice(59, 63), _9vvw173, _9vvw117, _9vvw133, P.territories.slice(66, 80), _9vvw78, P.territories.slice(80, 117), _9vvw100, P.territories.slice(118, 121), _9vvw101, P.territories[122], _9vvw155, _9vvw118, P.territories[124], _9vvw156, _9vvw134, P.territories.slice(126, 132), _9vvw135, _9vvw119, _9vvw102, P.territories.slice(133, 141), P.territories.slice(145, 150), _9vvw120, _9vvw79, _9vvw74, _9vvw136, P.territories[152], _9vvw137, _9vvw121, P.territories.slice(153, 159), P.territories.slice(160, 170), _9vvw80, P.territories.slice(171, 174), _9vvw138, P.territories.slice(175, 180), _9vvw103, P.territories[180], _9vvw122, P.territories.slice(184, 186), _9vvw81, P.territories[188], _9vvw104, _9vvw139, P.territories.slice(190, 192), _9vvw82, P.territories[193], P.territories[195], _9vvw123, P.territories.slice(196, 202), P.territories.slice(203, 205), _9vvw124, _9vvw149, P.territories[206], _9vvw125, P.territories.slice(208, 212), _9vvw105, P.territories[213], _9vvw150, P.territories.slice(215, 217), _9vvw83, P.territories[217], P.territories[220], _9vvw106, P.territories[222], _9vvw84, _9vvw151, _9vvw85, _9vvw140, _9vvw86, _9vvw126, P.territories[227], P.territories.slice(229, 233), _9vvw127, P.territories[234], _9vvw141, P.territories[236], _9vvw107, _9vvw166, P.territories[239], _9vvw108, P.territories.slice(242, 246), _9vvw87, _9vvw75, P.territories[246], _9vvw71, P.territories[247], P.territories[249], _9vvw142, P.territories[251], P.territories.slice(253, 255), _9vvw167, _9vvw168, _9vvw109, _9vvw128, P.territories[263], _9vvw159, _9vvw160, P.territories[264], _9vvw129, P.territories.slice(265, 268), _9vvw88, _9vvw89, P.territories.slice(268, 272), P.territories[273], _9vvw130, P.territories[274], _9vvw152, P.territories.slice(276, 278), P.territories[279], _9vvw90, _9vvw91, _9vvw162, _9vvw161, P.territories[283], _9vvw143, P.territories[284]);

inter.countries = [].concat(P.territories[0], _9vvw131, P.territories[5], P.territories[9], _9vvw93, _9vvw94, P.territories[10], _9vvw132, P.territories.slice(12, 14), _9vvw112, P.territories[17], _9vvw113, P.territories[21], P.territories[24], P.territories.slice(27, 29), _9vvw114, P.territories[30], _9vvw146, P.territories[32], _9vvw170, _9vvw95, _9vvw147, _9vvw96, P.territories[38], _9vvw97, P.territories.slice(39, 42), _9vvw115, P.territories[42], P.territories[45], P.territories[47], _9vvw98, P.territories[50], _9vvw76, P.territories[52], _9vvw77, _9vvw116, P.territories[56], _9vvw148, P.territories[58], _9vvw99, P.territories.slice(59, 63), _9vvw173, _9vvw117, _9vvw133, P.territories.slice(66, 80), _9vvw78, P.territories.slice(80, 109), P.territories[113], P.territories.slice(115, 117), _9vvw100, P.territories.slice(118, 121), _9vvw101, P.territories[122], _9vvw155, _9vvw118, P.territories[124], _9vvw156, _9vvw134, P.territories.slice(126, 132), _9vvw135, _9vvw119, _9vvw102, P.territories.slice(133, 141), P.territories.slice(145, 150), _9vvw120, _9vvw79, _9vvw74, _9vvw136, P.territories[152], _9vvw137, _9vvw121, P.territories.slice(160, 165), P.territories.slice(168, 170), _9vvw80, P.territories.slice(171, 174), _9vvw138, P.territories.slice(175, 180), _9vvw103, P.territories[180], _9vvw122, P.territories.slice(184, 186), _9vvw81, P.territories[188], _9vvw104, _9vvw139, P.territories.slice(190, 192), _9vvw82, P.territories[193], P.territories[195], _9vvw123, P.territories.slice(196, 200), P.territories[201], P.territories[203], _9vvw124, _9vvw149, P.territories[206], _9vvw125, P.territories.slice(208, 212), _9vvw105, P.territories[213], _9vvw150, P.territories[215], _9vvw83, P.territories[217], P.territories[220], _9vvw106, P.territories[222], _9vvw84, _9vvw151, _9vvw85, _9vvw140, _9vvw86, _9vvw126, P.territories[227], P.territories.slice(229, 233), _9vvw127, P.territories[234], _9vvw141, P.territories[236], _9vvw107, _9vvw166, P.territories[239], _9vvw108, P.territories[242], P.territories.slice(244, 246), _9vvw87, _9vvw75, P.territories[246], _9vvw71, P.territories[247], _9vvw142, P.territories[251], P.territories.slice(253, 255), _9vvw167, _9vvw168, _9vvw109, _9vvw128, P.territories[263], _9vvw159, _9vvw160, P.territories[264], _9vvw129, P.territories.slice(265, 268), _9vvw88, _9vvw89, P.territories.slice(268, 272), P.territories[273], _9vvw130, P.territories[274], _9vvw152, P.territories.slice(276, 278), P.territories[279], _9vvw90, _9vvw91, _9vvw162, _9vvw161, P.territories[283], _9vvw143, P.territories[284]);

inter.languages = [].concat(P.languages.slice(0, 27), {
    id: "es",
    displayName: "هسپانوی",
    nativeDisplayName: "español"
}, P.languages.slice(28, 41), {
    id: "ga",
    displayName: "آیرلندی",
    nativeDisplayName: "Gaeilge"
}, P.languages.slice(42, 49), {
    id: "hr",
    displayName: "کروشیایی",
    nativeDisplayName: "hrvatski"
}, P.languages.slice(50, 53), {
    id: "id",
    displayName: "اندونیزیایی",
    nativeDisplayName: "Indonesia"
}, P.languages.slice(54, 57), {
    id: "it",
    displayName: "ایتالوی",
    nativeDisplayName: "italiano"
}, P.languages.slice(58, 101), {
    id: "nl",
    displayName: "هالندی",
    nativeDisplayName: "Nederlands"
}, P.languages.slice(102, 107), {
    id: "pl",
    displayName: "پولندی",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "پرتگالی",
    nativeDisplayName: "português"
}, P.languages.slice(109, 126), {
    id: "fi",
    displayName: "فنلندی",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "سویدنی",
    nativeDisplayName: "svenska"
}, P.languages.slice(128, 142), {
    id: "is",
    displayName: "آیسلندی",
    nativeDisplayName: "íslenska"
}, P.languages.slice(143, 151), {
    id: "ky",
    displayName: "قرغزی",
    nativeDisplayName: "кыргызча"
}, P.languages[152], {
    id: "mn",
    displayName: "مغلی",
    nativeDisplayName: "монгол"
}, P.languages.slice(154, 236), {
    id: "tg",
    displayName: "تاجکی"
}, P.languages.slice(237, 380), {
    id: "no",
    displayName: "نارویژی"
}, P.languages.slice(380, 383), P.languages.slice(384, 475), {
    id: "ne",
    displayName: "نیپالی",
    nativeDisplayName: "नेपाली"
}, P.languages.slice(476, 501), {
    id: "ja",
    displayName: "جاپانی",
    nativeDisplayName: "日本語"
}, P.languages.slice(502, 508), {
    id: "ko",
    displayName: "کوریایی",
    nativeDisplayName: "한국어"
});

inter.scripts = [].concat(P.scripts.slice(0, 76), {
    id: "Mong",
    displayName: "مغلی"
}, P.scripts.slice(77, 120));

inter.currencies = [].concat(P.currencies.slice(0, 21), {
    id: "AUD",
    displayName: "دالر آسترالیا",
    symbol: "A$",
    one: "دلار استرالیا",
    other: "دلار استرالیا"
}, {
    id: "USD",
    displayName: "دالر امریکا",
    symbol: "$",
    one: "دلار امریکا",
    other: "دلار امریکا"
}, {
    id: "BND",
    displayName: "دالر برونی",
    symbol: "BND",
    one: "دلار برونئی",
    other: "دلار برونئی"
}, {
    id: "SGD",
    displayName: "دالر سینگاپور",
    symbol: "SGD",
    one: "دلار سنگاپور",
    other: "دلار سنگاپور"
}, {
    id: "CAD",
    displayName: "دالر کانادا",
    symbol: "$CA",
    one: "دلار کانادا",
    other: "دلار کانادا"
}, P.currencies.slice(21, 26), P.currencies.slice(28, 33), P.currencies.slice(34, 45), P.currencies.slice(46, 52), P.currencies.slice(53, 71), P.currencies.slice(72, 76), {
    id: "BYR",
    displayName: "روبل روسیهٔ سفید",
    symbol: "BYR",
    one: "روبل بیلوروسی",
    other: "روبل بیلوروسی"
}, P.currencies.slice(76, 94), {
    id: "TJS",
    displayName: "سامانی تاجکستان",
    symbol: "TJS",
    one: "سامانی تاجیکستان",
    other: "سامانی تاجیکستان"
}, P.currencies.slice(95, 114), {
    id: "CHF",
    displayName: "فرانک سویس",
    symbol: "CHF",
    one: "فرانک سوئیس",
    other: "فرانک سوئیس"
}, P.currencies.slice(115, 175), {
    id: "MXN",
    displayName: "پزوی مکسیکو",
    symbol: "$MX",
    one: "پزوی مکزیک",
    other: "پزوی مکزیک"
}, P.currencies.slice(176, 191), {
    id: "DKK",
    displayName: "کرون دنمارک",
    symbol: "DKK",
    one: "کرون دانمارک",
    other: "کرون دانمارک"
}, {
    id: "SEK",
    displayName: "کرون سویدن",
    symbol: "SEK",
    one: "کرون سوئد",
    other: "کرون سوئد"
}, {
    id: "NOK",
    displayName: "کرون ناروی",
    symbol: "NOK",
    one: "کرون نروژ",
    other: "کرون نروژ"
}, P.currencies.slice(194, 210), {
    id: "NLG",
    displayName: "گیلدر هالند",
    one: "گیلدر هلند",
    other: "گیلدر هلند"
}, {
    id: "JPY",
    displayName: "ین جاپان",
    symbol: "¥",
    one: "ین ژاپن",
    other: "ین ژاپن"
}, P.currencies.slice(212, 214));

module.exports = inter;