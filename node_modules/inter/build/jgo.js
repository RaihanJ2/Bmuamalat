function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _3sqn1 = [ "Q1", "Q2", "Q3", "Q4" ], _3sqn2 = {
    all: {
        leap: "{0}bis"
    }
}, _3sqn3 = {
    one: "¤ 0K",
    other: "¤ 0K"
}, _3sqn4 = {
    one: "¤ 0M",
    other: "¤ 0M"
}, _3sqn5 = {
    one: "¤ 0G",
    other: "¤ 0G"
}, _3sqn6 = {
    one: "¤ 0T",
    other: "¤ 0T"
}, _3sqn7 = {
    a: "h a – h a",
    h: "h–h a"
}, _3sqn8 = {
    displayName: "Dayperiod"
}, _3sqn9 = [ "Before R.O.C.", "R.O.C." ], _3sqn10 = {
    one: "¤ 00K",
    other: "¤ 00K"
}, _3sqn11 = {
    one: "¤ 00M",
    other: "¤ 00M"
}, _3sqn12 = {
    one: "¤ 00G",
    other: "¤ 00G"
}, _3sqn13 = {
    one: "¤ 00T",
    other: "¤ 00T"
}, _3sqn14 = {
    one: "¤ 000K",
    other: "¤ 000K"
}, _3sqn15 = {
    one: "¤ 000M",
    other: "¤ 000M"
}, _3sqn16 = {
    one: "¤ 000G",
    other: "¤ 000G"
}, _3sqn17 = {
    one: "¤ 000T",
    other: "¤ 000T"
}, _3sqn18 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _3sqn19 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _3sqn20 = {
    displayName: "Day of the Week"
}, _3sqn21 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _3sqn22 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _3sqn23 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _3sqn24 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _3sqn25 = {
    am: "mbaꞌmbaꞌ",
    pm: "ŋka mbɔ́t nji"
}, _3sqn26 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _3sqn27 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _3sqn28 = {
    M: "G y MMM–MMM",
    y: "G y MMM – y MMM"
}, _3sqn29 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _3sqn30 = {
    one: "Nǔu {0} saŋ",
    other: "Nǔu {0} saŋ"
}, _3sqn31 = [ "Sɔ́", "Mɔ́", "ÁM", "Wɛ́", "Tɔ́", "Fɛ", "Sá" ], _3sqn32 = {
    "0": "lɔꞋɔ",
    "1": "tomorrow",
    "-1": "yesterday"
}, _3sqn33 = {
    M: "G y MMMM–MMMM",
    y: "G y MMMM – y MMMM"
}, _3sqn34 = {
    one: "Nǔu ŋguꞋ {0}",
    other: "Nǔu ŋguꞋ {0}"
}, _3sqn35 = {
    one: "Nǔu lɛ́Ꞌ {0}",
    other: "Nǔu lɛ́Ꞌ {0}"
}, _3sqn36 = {
    one: "nǔu háwa {0}",
    other: "nǔu háwa {0}"
}, _3sqn37 = {
    one: "nǔu {0} minút",
    other: "nǔu {0} minút"
}, _3sqn38 = {
    M: "GGGGG y-MM – y-MM",
    y: "GGGGG y-MM – y-MM"
}, _3sqn39 = {
    "0": "this year",
    "1": "next year",
    "-1": "last year"
}, _3sqn40 = {
    "0": "this week",
    "1": "next week",
    "-1": "last week"
}, _3sqn41 = {
    future: {
        other: "+{0} Q"
    },
    past: {
        other: "-{0} Q"
    }
}, _3sqn42 = {
    future: {
        other: "+{0} s"
    },
    past: {
        other: "-{0} s"
    }
}, _3sqn43 = {
    id: "001",
    displayName: "Mbí",
    hasTimeZones: false
}, _3sqn44 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _3sqn45 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _3sqn46 = {
    "0": "this month",
    "1": "next month",
    "-1": "last month"
}, _3sqn47 = {
    one: "Nǔu ŋgap-mbi {0}",
    other: "Nǔu ŋgap-mbi {0}"
}, _3sqn48 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _3sqn49 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _3sqn50 = {
    "0": "this Sunday",
    "1": "next Sunday",
    "-1": "last Sunday"
}, _3sqn51 = {
    "0": "this Monday",
    "1": "next Monday",
    "-1": "last Monday"
}, _3sqn52 = {
    "0": "this Friday",
    "1": "next Friday",
    "-1": "last Friday"
}, _3sqn53 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _3sqn54 = {
    one: "Ɛ́gɛ́ mɔ́ ŋguꞋ {0}",
    other: "Ɛ́gɛ́ mɔ́ ŋguꞋ {0}"
}, _3sqn55 = {
    one: "ɛ́ gɛ mɔ́ {0} háwa",
    other: "ɛ́ gɛ mɔ́ {0} háwa"
}, _3sqn56 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _3sqn57 = {
    one: "Ɛ́ gɛ́ mɔ́ lɛ́Ꞌ {0}",
    other: "Ɛ́ gɛ́ mɔ́ lɛ́Ꞌ {0}"
}, _3sqn58 = {
    "0": "this Tuesday",
    "1": "next Tuesday",
    "-1": "last Tuesday"
}, _3sqn59 = {
    one: "ɛ́ gɛ́ mɔ́ pɛsaŋ {0}",
    other: "ɛ́ gɛ́ mɔ́ pɛsaŋ {0}"
}, _3sqn60 = {
    one: "ɛ́ gɛ́ mɔ́ minút {0}",
    other: "ɛ́ gɛ́ mɔ́ minút {0}"
}, _3sqn61 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _3sqn62 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _3sqn63 = {
    "0": "this Thursday",
    "1": "next Thursday",
    "-1": "last Thursday"
}, _3sqn64 = {
    "0": "this Saturday",
    "1": "next Saturday",
    "-1": "last Saturday"
}, _3sqn65 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _3sqn66 = {
    id: "TD",
    displayName: "Cât",
    regionId: "017",
    hasTimeZones: true
}, _3sqn67 = {
    one: "Ɛ́ gɛ́ mɔ {0} ŋgap-mbi",
    other: "Ɛ́ gɛ́ mɔ {0} ŋgap-mbi"
}, _3sqn68 = {
    "0": "this Wednesday",
    "1": "next Wednesday",
    "-1": "last Wednesday"
}, _3sqn69 = {
    id: "IQ",
    displayName: "Ilâk",
    regionId: "145",
    hasTimeZones: true
}, _3sqn70 = {
    id: "CU",
    displayName: "Kúba",
    regionId: "029",
    hasTimeZones: true
}, _3sqn71 = {
    id: "LY",
    displayName: "Libî",
    regionId: "015",
    hasTimeZones: true
}, _3sqn72 = {
    id: "RU",
    displayName: "Lusî",
    regionId: "151",
    hasTimeZones: true
}, _3sqn73 = {
    id: "ML",
    displayName: "Malî",
    regionId: "011",
    hasTimeZones: true
}, _3sqn74 = {
    id: "PE",
    displayName: "Pɛlû",
    regionId: "005",
    hasTimeZones: true
}, _3sqn75 = {
    id: "CN",
    displayName: "Shîn",
    regionId: "030",
    hasTimeZones: true
}, _3sqn76 = {
    id: "IN",
    displayName: "Ándɛ",
    regionId: "034",
    hasTimeZones: true
}, _3sqn77 = {
    id: "CL",
    displayName: "Cíllɛ",
    regionId: "005",
    hasTimeZones: true
}, _3sqn78 = {
    id: "IT",
    displayName: "Italî",
    regionId: "039",
    hasTimeZones: true
}, _3sqn79 = {
    id: "NE",
    displayName: "Nijɛ̂",
    regionId: "011",
    hasTimeZones: true
}, _3sqn80 = {
    id: "CH",
    displayName: "Sẅísɛ",
    regionId: "155",
    hasTimeZones: true
}, _3sqn81 = {
    id: "ZM",
    displayName: "Zambî",
    regionId: "014",
    hasTimeZones: true
}, _3sqn82 = {
    id: "GH",
    displayName: "Ŋgána",
    regionId: "011",
    hasTimeZones: true
}, _3sqn83 = {
    d: "G y MMM d–d",
    M: "G y MMM d – MMM d",
    y: "G y MMM d – y MMM d"
}, _3sqn84 = {
    relative: _3sqn50
}, _3sqn85 = {
    relative: _3sqn51
}, _3sqn86 = {
    relative: _3sqn52
}, _3sqn87 = {
    id: "DZ",
    displayName: "Aljɛlî",
    regionId: "015",
    hasTimeZones: true
}, _3sqn88 = {
    id: "JP",
    displayName: "Japɔ̂n",
    regionId: "030",
    hasTimeZones: true
}, _3sqn89 = {
    id: "CA",
    displayName: "Kanadâ",
    regionId: "021",
    hasTimeZones: true
}, _3sqn90 = {
    id: "KE",
    displayName: "Kɛ́nya",
    regionId: "014",
    hasTimeZones: true
}, _3sqn91 = {
    id: "LR",
    displayName: "Libɛrî",
    regionId: "011",
    hasTimeZones: true
}, _3sqn92 = {
    id: "MW",
    displayName: "Maláwi",
    regionId: "014",
    hasTimeZones: true
}, _3sqn93 = {
    id: "YT",
    displayName: "Mayɔ̂t",
    regionId: "014",
    hasTimeZones: true
}, _3sqn94 = {
    id: "MA",
    displayName: "Mɔlɔ̂k",
    regionId: "015",
    hasTimeZones: true
}, _3sqn95 = {
    id: "MX",
    displayName: "Mɛksîk",
    regionId: "013",
    hasTimeZones: true
}, _3sqn96 = {
    id: "DE",
    displayName: "Njáman",
    regionId: "155",
    hasTimeZones: true
}, _3sqn97 = {
    id: "SD",
    displayName: "Sundân",
    regionId: "015",
    hasTimeZones: true
}, _3sqn98 = {
    id: "SO",
    displayName: "Sɔmalî",
    regionId: "014",
    hasTimeZones: true
}, _3sqn99 = {
    id: "RS",
    displayName: "Sɛlɛbî",
    regionId: "039",
    hasTimeZones: true
}, _3sqn100 = {
    id: "TN",
    displayName: "Tunizî",
    regionId: "015",
    hasTimeZones: true
}, _3sqn101 = {
    id: "TG",
    displayName: "Tɔ́ŋgɔ",
    regionId: "011",
    hasTimeZones: true
}, _3sqn102 = {
    id: "GM",
    displayName: "Ŋgambî",
    regionId: "011",
    hasTimeZones: true
}, _3sqn103 = {
    id: "GN",
    displayName: "Ŋginɛ̂",
    regionId: "011",
    hasTimeZones: true
}, _3sqn104 = {
    id: "EG",
    displayName: "Ɛjíptɛ",
    regionId: "015",
    hasTimeZones: true
}, _3sqn105 = {
    id: "AR",
    displayName: "Ajɛntîn",
    regionId: "005",
    hasTimeZones: true
}, _3sqn106 = {
    id: "AO",
    displayName: "Aŋgɔ́la",
    regionId: "017",
    hasTimeZones: true
}, _3sqn107 = {
    id: "FR",
    displayName: "Fɛlánci",
    regionId: "155",
    hasTimeZones: true
}, _3sqn108 = {
    id: "CM",
    displayName: "Kamɛlûn",
    regionId: "017",
    hasTimeZones: true
}, _3sqn109 = {
    id: "RW",
    displayName: "Luwánda",
    regionId: "014",
    hasTimeZones: true
}, _3sqn110 = {
    id: "LS",
    displayName: "Lɛsɔ́tɔ",
    regionId: "018",
    hasTimeZones: true
}, _3sqn111 = {
    id: "BO",
    displayName: "Mbɔlivî",
    regionId: "005",
    hasTimeZones: true
}, _3sqn112 = {
    id: "BJ",
    displayName: "Mbɛnɛ̂ŋ",
    regionId: "011",
    hasTimeZones: true
}, _3sqn113 = {
    id: "NA",
    displayName: "Namimbî",
    regionId: "018",
    hasTimeZones: true
}, _3sqn114 = {
    id: "SN",
    displayName: "Sɛnɛgâl",
    regionId: "011",
    hasTimeZones: true
}, _3sqn115 = {
    id: "TZ",
    displayName: "Tanzanî",
    regionId: "014",
    hasTimeZones: true
}, _3sqn116 = {
    id: "UG",
    displayName: "Uŋgánda",
    regionId: "014",
    hasTimeZones: true
}, _3sqn117 = {
    id: "GA",
    displayName: "Ŋgabɔ̂ŋ",
    regionId: "017",
    hasTimeZones: true
}, _3sqn118 = {
    id: "GR",
    displayName: "Ŋgɛlɛ̂k",
    regionId: "039",
    hasTimeZones: true
}, _3sqn119 = {
    id: "ET",
    displayName: "Ɛtiyɔpî",
    regionId: "014",
    hasTimeZones: true
}, _3sqn120 = {
    id: "IL",
    displayName: "Islayɛ̂l",
    regionId: "145",
    hasTimeZones: true
}, _3sqn121 = {
    id: "CO",
    displayName: "Kɔllɔmbî",
    regionId: "005",
    hasTimeZones: true
}, _3sqn122 = {
    id: "BI",
    displayName: "Mbulundí",
    regionId: "014",
    hasTimeZones: true
}, _3sqn123 = {
    id: "BR",
    displayName: "Mbɛlazîl",
    regionId: "005",
    hasTimeZones: true
}, _3sqn124 = {
    id: "MR",
    displayName: "Mɔlitanî",
    regionId: "011",
    hasTimeZones: true
}, _3sqn125 = {
    id: "MZ",
    displayName: "Mɔzambîk",
    regionId: "014",
    hasTimeZones: true
}, _3sqn126 = {
    id: "DJ",
    displayName: "Njimbúti",
    regionId: "014",
    hasTimeZones: true
}, _3sqn127 = {
    id: "SZ",
    displayName: "Swazilân",
    regionId: "018",
    hasTimeZones: true
}, _3sqn128 = {
    id: "EC",
    displayName: "Ɛkwandɔ̂",
    regionId: "005",
    hasTimeZones: true
}, _3sqn129 = {
    id: "ES",
    displayName: "Ɛspániya",
    regionId: "039",
    hasTimeZones: true
}, _3sqn130 = {
    relative: _3sqn58
}, _3sqn131 = {
    id: "BW",
    displayName: "Mbɔtswána",
    regionId: "018",
    hasTimeZones: true
}, _3sqn132 = {
    id: "NG",
    displayName: "Ninjɛliyâ",
    regionId: "011",
    hasTimeZones: true
}, _3sqn133 = {
    id: "NO",
    displayName: "Nɔlɛvɛ́jɛ",
    regionId: "154",
    hasTimeZones: true
}, _3sqn134 = {
    id: "SC",
    displayName: "Pɛsɛ́shɛl",
    regionId: "014",
    hasTimeZones: true
}, _3sqn135 = {
    id: "ZW",
    displayName: "Zimbámbwɛ",
    regionId: "014",
    hasTimeZones: true
}, _3sqn136 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _3sqn137 = {
    id: "KM",
    displayName: "Kɔmɔ́lɔshi",
    regionId: "014",
    hasTimeZones: true
}, _3sqn138 = {
    id: "RE",
    displayName: "Lɛ́uniyɔ̂n",
    regionId: "014",
    hasTimeZones: true
}, _3sqn139 = {
    id: "VE",
    displayName: "Vɛnɛzwɛ́la",
    regionId: "005",
    hasTimeZones: true
}, _3sqn140 = {
    id: "ER",
    displayName: "Ɛlitɛlɛ́ya",
    regionId: "014",
    hasTimeZones: true
}, _3sqn141 = {
    id: "142",
    displayName: "Azî",
    hasTimeZones: false,
    parentRegionId: "001"
}, _3sqn142 = {
    id: "CI",
    displayName: "Kɔ́t Ndivwâ",
    regionId: "011",
    hasTimeZones: true
}, _3sqn143 = {
    relative: _3sqn63
}, _3sqn144 = {
    relative: _3sqn64
}, _3sqn145 = {
    id: "MG",
    displayName: "Mándaŋgasɛkâ",
    regionId: "014",
    hasTimeZones: true
}, _3sqn146 = {
    id: "150",
    displayName: "Ʉlôp",
    hasTimeZones: false,
    parentRegionId: "001"
}, _3sqn147 = {
    id: "SL",
    displayName: "Siyɛ́la Lɛɔ̂n",
    regionId: "011",
    hasTimeZones: true
}, _3sqn148 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _3sqn149 = {
    id: "002",
    displayName: "Afɛlîk",
    hasTimeZones: false,
    parentRegionId: "001"
}, _3sqn150 = {
    id: "019",
    displayName: "Amɛlîk",
    hasTimeZones: false,
    parentRegionId: "001"
}, _3sqn151 = {
    id: "BF",
    displayName: "Mbulukína Fásɔ",
    regionId: "011",
    hasTimeZones: true
}, _3sqn152 = {
    id: "GW",
    displayName: "Ŋginɛ̂ Mbisáwu",
    regionId: "011",
    hasTimeZones: true
}, _3sqn153 = {
    relative: _3sqn68
}, _3sqn154 = {
    id: "CD",
    displayName: "Kɔ́ŋgɔ-Kinshása",
    regionId: "017",
    hasTimeZones: true
}, _3sqn155 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _3sqn156 = {
    id: "CG",
    displayName: "Kɔ́ŋgɔ-Mbɛlazavîl",
    regionId: "017",
    hasTimeZones: true
}, _3sqn157 = [ "Sɔ́ndi", "Mɔ́ndi", "Ápta Mɔ́ndi", "Wɛ́nɛsɛdɛ", "Tɔ́sɛdɛ", "Fɛlâyɛdɛ", "Sásidɛ" ], _3sqn158 = {
    id: "GQ",
    displayName: "Ŋginɛ̂ Ɛkwatɔliyâl",
    regionId: "017",
    hasTimeZones: true
}, _3sqn159 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _3sqn160 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _3sqn161 = {
    id: "ST",
    displayName: "Sáwɔŋ Tɔmɛ́ nɛ́ Pɛlínsipɛ",
    regionId: "017",
    hasTimeZones: true
}, _3sqn162 = {
    d: "GGGGG y-MM-dd – y-MM-dd",
    M: "GGGGG y-MM-dd – y-MM-dd",
    y: "GGGGG y-MM-dd – y-MM-dd"
}, _3sqn163 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _3sqn164 = {
    d: "G y MMM d, E – MMM d, E",
    M: "G y MMM d, E – MMM d, E",
    y: "G y MMM d, E – y MMM d, E"
}, _3sqn165 = {
    abbreviated: _3sqn1,
    narrow: [ "1", "2", "3", "4" ],
    wide: _3sqn1
}, _3sqn166 = {
    displayName: "Second",
    relative: [ "now" ],
    relativeTime: _3sqn42
}, _3sqn167 = {
    d: "GGGGG y-MM-dd, E – y-MM-dd, E",
    M: "GGGGG y-MM-dd, E – y-MM-dd, E",
    y: "GGGGG y-MM-dd, E – y-MM-dd, E"
}, _3sqn168 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _3sqn169 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _3sqn170 = {
    future: _3sqn34,
    past: _3sqn54
}, _3sqn171 = {
    future: _3sqn36,
    past: _3sqn55
}, _3sqn172 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _3sqn173 = {
    future: _3sqn30,
    past: _3sqn59
}, _3sqn174 = {
    future: _3sqn35,
    past: _3sqn57
}, _3sqn175 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _3sqn176 = {
    future: _3sqn37,
    past: _3sqn60
}, _3sqn177 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _3sqn178 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _3sqn179 = {
    future: _3sqn47,
    past: _3sqn67
}, _3sqn180 = {
    abbreviated: _3sqn25,
    narrow: _3sqn25,
    wide: _3sqn25
}, _3sqn181 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _3sqn182 = {
    displayName: "Hour",
    relativeTime: _3sqn171
}, _3sqn183 = {
    displayName: "Quarter",
    relative: _3sqn56,
    relativeTime: _3sqn41
}, _3sqn184 = {
    displayName: "Minute",
    relativeTime: _3sqn176
}, _3sqn185 = {
    decimal: ",",
    group: ".",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    superscriptingExponent: "×",
    timeSeparator: ":"
}, _3sqn186 = {
    symbols: _3sqn185
}, _3sqn187 = {
    format: _3sqn148,
    numeric: _3sqn2,
    standAlone: _3sqn148
}, _3sqn188 = {
    displayName: "Day",
    relative: _3sqn32,
    relativeTime: _3sqn174
}, _3sqn189 = {
    format: _3sqn165,
    standAlone: _3sqn165
}, _3sqn190 = [ "Nduŋmbi Saŋ", "Pɛsaŋ Pɛ́pá", "Pɛsaŋ Pɛ́tát", "Pɛsaŋ Pɛ́nɛ́kwa", "Pɛsaŋ Pataa", "Pɛsaŋ Pɛ́nɛ́ntúkú", "Pɛsaŋ Saambá", "Pɛsaŋ Pɛ́nɛ́fɔm", "Pɛsaŋ Pɛ́nɛ́pfúꞋú", "Pɛsaŋ Nɛgɛ́m", "Pɛsaŋ Ntsɔ̌pmɔ́", "Pɛsaŋ Ntsɔ̌ppá" ], _3sqn191 = {
    displayName: "Year",
    relative: _3sqn39,
    relativeTime: _3sqn170
}, _3sqn192 = {
    displayName: "Month",
    relative: _3sqn46,
    relativeTime: _3sqn173
}, _3sqn193 = {
    symbols: _3sqn185,
    digits: "renderSpelloutCardinal"
}, _3sqn194 = {
    displayName: "Week",
    relative: _3sqn40,
    relativeTime: _3sqn179
}, _3sqn195 = {
    "1000": {
        other: "0K"
    },
    "10000": {
        other: "00K"
    },
    "100000": {
        other: "000K"
    },
    "1000000": {
        other: "0M"
    },
    "10000000": {
        other: "00M"
    },
    "100000000": {
        other: "000M"
    },
    "1000000000": {
        other: "0G"
    },
    "10000000000": {
        other: "00G"
    },
    "100000000000": {
        other: "000G"
    },
    "1000000000000": {
        other: "0T"
    },
    "10000000000000": {
        other: "00T"
    },
    "100000000000000": {
        other: "000T"
    }
}, _3sqn196 = {
    symbols: _3sqn185,
    digits: "renderSpelloutCardinalFinancial"
}, _3sqn197 = {
    abbreviated: _3sqn155,
    narrow: _3sqn49,
    wide: _3sqn155
}, _3sqn198 = {
    abbreviated: _3sqn159,
    narrow: _3sqn159,
    wide: _3sqn159
}, _3sqn199 = {
    format: _3sqn198
}, _3sqn200 = {
    format: _3sqn180,
    standAlone: _3sqn180
}, _3sqn201 = {
    abbreviated: _3sqn169,
    narrow: _3sqn62,
    wide: _3sqn169
}, _3sqn202 = {
    abbreviated: _3sqn172,
    narrow: _3sqn49,
    wide: _3sqn172
}, _3sqn203 = {
    abbreviated: _3sqn157,
    narrow: _3sqn31,
    wide: _3sqn157,
    "short": _3sqn157
}, _3sqn204 = {
    abbreviated: _3sqn175,
    narrow: _3sqn62,
    wide: _3sqn175
}, _3sqn205 = {
    abbreviated: _3sqn168,
    narrow: _3sqn49,
    wide: _3sqn181
}, _3sqn206 = {
    abbreviated: _3sqn177,
    narrow: _3sqn62,
    wide: _3sqn177
}, _3sqn207 = {
    abbreviated: _3sqn178,
    narrow: _3sqn49,
    wide: _3sqn178
}, _3sqn208 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _3sqn209 = {
    fullDate: "EEEE, G y MMMM dd",
    longDate: "G y MMMM d",
    mediumDate: "G y MMM d",
    shortDate: "GGGGG y-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "GGGGG y-MM-dd HH:mm",
    mediumDateTime: "G y MMM d HH:mm:ss",
    longDateTime: "G y MMMM d HH:mm:ss z",
    fullDateTime: "EEEE, G y MMMM dd HH:mm:ss zzzz"
}, _3sqn210 = {
    "1000": _3sqn3,
    "10000": _3sqn10,
    "100000": _3sqn14,
    "1000000": _3sqn4,
    "10000000": _3sqn11,
    "100000000": _3sqn15,
    "1000000000": _3sqn5,
    "10000000000": _3sqn12,
    "100000000000": _3sqn16,
    "1000000000000": _3sqn6,
    "10000000000000": _3sqn13,
    "100000000000000": _3sqn17
}, _3sqn211 = {
    format: _3sqn197,
    standAlone: _3sqn197
}, _3sqn212 = {
    abbreviated: _3sqn190,
    narrow: _3sqn49,
    wide: _3sqn190
}, _3sqn213 = {
    "long": _3sqn195,
    "short": _3sqn195,
    "default": "#,##0.###"
}, _3sqn214 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _3sqn215 = {
    Ed: "E d",
    Md: "d.M",
    MEd: "E, d.M",
    yyyyMd: "M.d.y G",
    d: "d",
    E: "ccc",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss",
    Gy: "G y",
    GyMMM: "G y MMM",
    GyMMMd: "G y MMM d",
    GyMMMEd: "G y MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    y: "G y",
    yyyy: "G y",
    yyyyM: "GGGGG y-MM",
    yyyyMEd: "GGGGG y-MM-dd, E",
    yyyyMMM: "G y MMM",
    yyyyMMMd: "G y MMM d",
    yyyyMMMEd: "G y MMM d, E",
    yyyyMMMM: "G y MMMM",
    yyyyQQQ: "G y QQQ",
    yyyyQQQQ: "G y QQQQ"
}, _3sqn216 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _3sqn217 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _3sqn218 = {
    format: _3sqn203,
    standAlone: _3sqn203
}, _3sqn219 = {
    format: _3sqn205,
    standAlone: _3sqn205
}, _3sqn220 = {
    basic: _3sqn208,
    cldr: _3sqn214
}, _3sqn221 = {
    basic: _3sqn209,
    cldr: _3sqn215
}, _3sqn222 = {
    d: {
        d: "d–d"
    },
    h: _3sqn7,
    H: {
        H: "HH–HH"
    },
    hm: _3sqn53,
    Hm: _3sqn22,
    hmv: _3sqn65,
    Hmv: _3sqn26,
    hv: _3sqn18,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _3sqn27,
    MEd: _3sqn44,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _3sqn19,
    MMMEd: _3sqn45,
    y: {
        y: "U–U"
    },
    yM: _3sqn23,
    yMd: _3sqn136,
    yMEd: _3sqn163,
    yMMM: _3sqn24,
    yMMMd: _3sqn61,
    yMMMEd: _3sqn160,
    yMMMM: _3sqn29
}, _3sqn223 = {
    format: _3sqn212,
    standAlone: _3sqn212
}, _3sqn224 = {
    d: {
        d: "d–d"
    },
    h: _3sqn7,
    H: {
        H: "HH–HH"
    },
    hm: _3sqn53,
    Hm: _3sqn22,
    hmv: _3sqn65,
    Hmv: _3sqn26,
    hv: _3sqn18,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _3sqn27,
    MEd: _3sqn44,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _3sqn19,
    MMMEd: _3sqn45,
    y: {
        y: "G y–y"
    },
    yM: _3sqn38,
    yMd: _3sqn162,
    yMEd: _3sqn167,
    yMMM: _3sqn28,
    yMMMd: _3sqn83,
    yMMMEd: _3sqn164,
    yMMMM: _3sqn33
}, _3sqn225 = {
    beforeCurrency: _3sqn216,
    afterCurrency: _3sqn216
}, _3sqn226 = {
    "short": _3sqn210,
    "default": "¤ #,##0.00",
    other: "{0} {1}",
    currencySpacing: _3sqn225
}, _3sqn227 = {
    abbreviated: _3sqn217,
    narrow: _3sqn217,
    wide: _3sqn217
}, _3sqn228 = {
    format: _3sqn227
}, _3sqn229 = {
    era: {
        displayName: "Era"
    },
    year: _3sqn191,
    quarter: _3sqn183,
    month: _3sqn192,
    week: _3sqn194,
    day: _3sqn188,
    weekday: _3sqn20,
    dayperiod: _3sqn8,
    hour: _3sqn182,
    minute: _3sqn184,
    second: _3sqn166,
    zone: {
        displayName: "Zone"
    },
    sun: _3sqn84,
    mon: _3sqn85,
    tue: _3sqn130,
    wed: _3sqn153,
    thu: _3sqn143,
    fri: _3sqn86,
    sat: _3sqn144
}, _3sqn230 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _3sqn229
}, _3sqn231 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _3sqn213,
    currency: _3sqn226,
    percent: {
        "default": "#,##0%"
    }
}, _3sqn232 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _3sqn233 = {
    dateFormats: _3sqn221,
    datePartsOrder: "ymd",
    dateIntervalFormats: _3sqn224,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _3sqn218,
    dayPeriods: _3sqn200,
    monthNames: _3sqn219,
    eraNames: _3sqn21,
    quarterNames: _3sqn189,
    fields: _3sqn229
}, _3sqn234 = {
    dayParts: _3sqn199,
    days: _3sqn228,
    months: _3sqn228,
    years: _3sqn228,
    zodiacs: _3sqn199
}, _3sqn235 = {
    dateFormats: _3sqn220,
    datePartsOrder: "md",
    dateIntervalFormats: _3sqn222,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _3sqn218,
    dayPeriods: _3sqn200,
    cyclicNames: _3sqn234,
    monthNames: _3sqn211,
    monthPatterns: _3sqn187,
    quarterNames: _3sqn189,
    fields: _3sqn229
};

inter.id = "jgo";

inter.delimiters = {
    quotationStart: "«",
    quotationEnd: "»",
    alternateQuotationStart: "‹",
    alternateQuotationEnd: "›"
};

inter.listPatterns = {
    "default": {
        "2": "{0} pɔp {1}",
        start: "{0}, ŋ́gɛ {1}",
        middle: "{0}, ŋ́gɛ {1}",
        end: "{0}, ḿbɛn ŋ́gɛ {1}"
    }
};

inter.unitPatterns = {
    "long": {
        unit: {
            durationYear: {
                one: "ŋguꞋ {0}",
                other: "ŋguꞋ {0}"
            },
            durationMonth: {
                one: "pɛsaŋ {0}",
                other: "pɛsaŋ {0}"
            },
            durationDay: {
                one: "{0} lɛ́Ꞌ",
                other: "{0} lɛ́Ꞌ"
            },
            durationHour: {
                one: "{0} háwa",
                other: "{0} háwa"
            },
            durationMinute: {
                one: "{0} minút",
                other: "{0} minút"
            }
        }
    },
    "short": P.unitPatterns.short
};

inter.characters = {
    exemplar: {
        "default": [ "a", "á", "â", "ǎ", "b", "c", "d", "ɛ", "{ɛ\\u0301}", "{ɛ\\u0300}", "{ɛ\\u0302}", "{ɛ\\u030C}", "{ɛ\\u0304}", "f", "g", "h", "i", "í", "î", "ǐ", "j", "k", "l", "m", "ḿ", "{m\\u0300}", "{m\\u0304}", "n", "ń", "ǹ", "{n\\u0304}", "ŋ", "{ŋ\\u0301}", "{ŋ\\u0300}", "{ŋ\\u0304}", "ɔ", "{ɔ\\u0301}", "{ɔ\\u0302}", "{ɔ\\u030C}", "p", "{pf}", "s", "{sh}", "t", "{ts}", "u", "ú", "û", "ǔ", "ʉ", "{ʉ\\u0301}", "{ʉ\\u0302}", "{ʉ\\u030C}", "{ʉ\\u0308}", "v", "w", "ẅ", "y", "z", "ꞌ" ],
        auxiliary: [ "e", "o", "q", "r", "x" ],
        index: [ "A", "B", "C", "D", "Ɛ", "F", "G", "H", "I", "J", "K", "L", "M", "N", "Ŋ", "Ɔ", "P", "{Pf}", "S", "{Sh}", "T", "{Ts}", "U", "Ʉ", "{Ʉ\\u0308}", "V", "W", "Ẅ", "Y", "Z", "Ꞌ" ],
        punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "‹", "›", "«", "»" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _3sqn185,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _3sqn231,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _3sqn231,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _3sqn185,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _3sqn185,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _3sqn185,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _3sqn185,
        digits: "renderEthiopic"
    },
    finance: _3sqn186,
    fullwide: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _3sqn185,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _3sqn185,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _3sqn185,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _3sqn185,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _3sqn193,
    hansfin: _3sqn196,
    hant: _3sqn193,
    hantfin: _3sqn196,
    hebr: {
        symbols: _3sqn185,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _3sqn185,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _3sqn193,
    jpanfin: _3sqn196,
    kali: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _3sqn185,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _3sqn185,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _3sqn185,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _3sqn185,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _3sqn185,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _3sqn185,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _3sqn185,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _3sqn185,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _3sqn186,
    nkoo: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _3sqn185,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _3sqn185,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _3sqn185,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _3sqn185,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _3sqn185,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _3sqn185,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _3sqn186,
    vaii: {
        symbols: _3sqn185,
        formats: _3sqn231,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _3sqn185,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _3sqn221,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3sqn224,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3sqn218,
        dayPeriods: _3sqn200,
        monthNames: _3sqn223,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _3sqn189,
        fields: _3sqn229
    },
    chinese: _3sqn235,
    coptic: {
        dateFormats: _3sqn221,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3sqn224,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3sqn218,
        dayPeriods: _3sqn200,
        monthNames: {
            format: _3sqn204,
            standAlone: _3sqn204
        },
        eraNames: _3sqn48,
        quarterNames: _3sqn189,
        fields: _3sqn229
    },
    dangi: _3sqn235,
    ethioaa: _3sqn230,
    ethiopic: {
        dateFormats: _3sqn221,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3sqn224,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3sqn218,
        dayPeriods: _3sqn200,
        monthNames: {
            format: _3sqn206,
            standAlone: _3sqn206
        },
        eraNames: _3sqn48,
        quarterNames: _3sqn189,
        fields: _3sqn229
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, y MMMM dd",
                longDate: "y MMMM d",
                mediumDate: "y MMM d",
                shortDate: "y-MM-dd",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "y-MM-dd HH:mm",
                mediumDateTime: "y MMM d HH:mm:ss",
                longDateTime: "y MMMM d HH:mm:ss z",
                fullDateTime: "EEEE, y MMMM dd HH:mm:ss zzzz"
            },
            cldr: {
                Ed: "E d",
                Md: "d.M",
                MEd: "E, d.M",
                yMd: "M.d.y",
                d: "d",
                E: "ccc",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                MMM: "LLL",
                MMMd: "MMM d",
                MMMEd: "MMM d, E",
                MMMMd: "MMMM d",
                ms: "mm:ss",
                y: "y",
                yM: "y-MM",
                yMEd: "y-MM-dd, E",
                yMMM: "y MMM",
                yMMMd: "y MMM d",
                yMMMEd: "y MMM d, E",
                yMMMM: "y MMMM",
                yQQQ: "y QQQ",
                yQQQQ: "y QQQQ"
            }
        },
        datePartsOrder: "ymd",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _3sqn7,
            H: {
                H: "HH–HH"
            },
            hm: _3sqn53,
            Hm: _3sqn22,
            hmv: _3sqn65,
            Hmv: _3sqn26,
            hv: _3sqn18,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "MM–MM"
            },
            Md: _3sqn27,
            MEd: _3sqn44,
            MMM: {
                M: "LLL–LLL"
            },
            MMMd: _3sqn19,
            MMMEd: _3sqn45,
            y: {
                y: "y–y"
            },
            yM: _3sqn23,
            yMd: _3sqn136,
            yMEd: _3sqn163,
            yMMM: {
                M: "y MMM–MMM",
                y: "y MMM – y MMM"
            },
            yMMMd: {
                d: "y MMM d–d",
                M: "y MMM d – MMM d",
                y: "y MMM d – y MMM d"
            },
            yMMMEd: {
                d: "y MMM d, E – MMM d, E",
                M: "y MMM d, E – MMM d, E",
                y: "y MMM d, E – y MMM d, E"
            },
            yMMMM: {
                M: "y MMMM–MMMM",
                y: "y MMMM – y MMMM"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3sqn218,
        dayPeriods: _3sqn200,
        monthNames: _3sqn223,
        eraNames: {
            wide: [ "tsɛttsɛt mɛŋguꞌ mi ɛ́ lɛɛnɛ Kɛlísɛtɔ gɔ ńɔ́", "tsɛttsɛt mɛŋguꞌ mi ɛ́ fúnɛ Kɛlísɛtɔ tɔ́ mɔ́" ],
            abbreviated: [ "BCE", "CE" ]
        },
        quarterNames: _3sqn189,
        fields: _3sqn229
    },
    hebrew: {
        dateFormats: _3sqn221,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3sqn224,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3sqn218,
        dayPeriods: _3sqn200,
        monthNames: {
            format: _3sqn201,
            standAlone: _3sqn201
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _3sqn189,
        fields: _3sqn229
    },
    indian: {
        dateFormats: _3sqn221,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3sqn224,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3sqn218,
        dayPeriods: _3sqn200,
        monthNames: {
            format: _3sqn207,
            standAlone: _3sqn207
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _3sqn189,
        fields: _3sqn229
    },
    islamic: _3sqn233,
    "islamic-umalqura": _3sqn233,
    "islamic-tbla": _3sqn233,
    "islamic-civil": _3sqn233,
    "islamic-rgsa": _3sqn233,
    iso8601: _3sqn230,
    japanese: {
        dateFormats: _3sqn221,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3sqn224,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3sqn218,
        dayPeriods: _3sqn200,
        monthNames: _3sqn223,
        eraNames: {
            wide: _3sqn232,
            abbreviated: _3sqn232
        },
        quarterNames: _3sqn189,
        fields: _3sqn229
    },
    persian: {
        dateFormats: _3sqn221,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3sqn224,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3sqn218,
        dayPeriods: _3sqn200,
        monthNames: {
            format: _3sqn202,
            standAlone: _3sqn202
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _3sqn189,
        fields: _3sqn229
    },
    roc: {
        dateFormats: _3sqn221,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3sqn224,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3sqn218,
        dayPeriods: _3sqn200,
        monthNames: _3sqn223,
        eraNames: {
            wide: _3sqn9,
            abbreviated: _3sqn9
        },
        quarterNames: _3sqn189,
        fields: _3sqn229
    },
    islamicc: _3sqn230
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.territories = [ _3sqn149, _3sqn105, _3sqn87, _3sqn150, _3sqn141, _3sqn106, _3sqn66, _3sqn77, _3sqn107, _3sqn69, _3sqn120, _3sqn78, _3sqn88, _3sqn108, _3sqn89, _3sqn70, _3sqn121, _3sqn137, _3sqn142, _3sqn154, _3sqn156, _3sqn90, _3sqn71, _3sqn91, _3sqn72, _3sqn109, _3sqn110, _3sqn138, _3sqn92, _3sqn73, _3sqn93, _3sqn151, _3sqn122, _3sqn43, _3sqn111, _3sqn131, _3sqn123, _3sqn112, _3sqn145, _3sqn124, _3sqn94, _3sqn125, _3sqn95, _3sqn113, _3sqn79, _3sqn132, _3sqn126, _3sqn96, _3sqn133, _3sqn74, _3sqn134, _3sqn75, _3sqn147, _3sqn97, _3sqn127, _3sqn161, _3sqn98, _3sqn99, _3sqn114, _3sqn80, _3sqn115, _3sqn100, _3sqn101, _3sqn116, _3sqn139, _3sqn81, _3sqn135, _3sqn76, _3sqn117, _3sqn102, _3sqn103, _3sqn152, _3sqn158, _3sqn82, _3sqn118, _3sqn104, _3sqn128, _3sqn140, _3sqn129, _3sqn119, _3sqn146 ];

inter.regions = [ _3sqn149, _3sqn150, _3sqn141, _3sqn43, _3sqn146 ];

inter.countries = [ _3sqn105, _3sqn87, _3sqn106, _3sqn66, _3sqn77, _3sqn107, _3sqn69, _3sqn120, _3sqn78, _3sqn88, _3sqn108, _3sqn89, _3sqn70, _3sqn121, _3sqn137, _3sqn142, _3sqn154, _3sqn156, _3sqn90, _3sqn71, _3sqn91, _3sqn72, _3sqn109, _3sqn110, _3sqn138, _3sqn92, _3sqn73, _3sqn93, _3sqn151, _3sqn122, _3sqn111, _3sqn131, _3sqn123, _3sqn112, _3sqn145, _3sqn124, _3sqn94, _3sqn125, _3sqn95, _3sqn113, _3sqn79, _3sqn132, _3sqn126, _3sqn96, _3sqn133, _3sqn74, _3sqn134, _3sqn75, _3sqn147, _3sqn97, _3sqn127, _3sqn161, _3sqn98, _3sqn99, _3sqn114, _3sqn80, _3sqn115, _3sqn100, _3sqn101, _3sqn116, _3sqn139, _3sqn81, _3sqn135, _3sqn76, _3sqn117, _3sqn102, _3sqn103, _3sqn152, _3sqn158, _3sqn82, _3sqn118, _3sqn104, _3sqn128, _3sqn140, _3sqn129, _3sqn119 ];

inter.languages = [ {
    id: "und",
    displayName: "cú-pʉɔ yi pɛ́ ká kɛ́ jí"
}, {
    id: "de",
    displayName: "Njáman",
    nativeDisplayName: "Deutsch"
}, {
    id: "en",
    displayName: "Aŋgɛlúshi",
    nativeDisplayName: "English"
}, {
    id: "fr",
    displayName: "Fɛlánci",
    nativeDisplayName: "français"
}, {
    id: "jgo",
    displayName: "Ndaꞌa",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "el",
    displayName: "Ŋgɛlɛ̂k",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "ar",
    displayName: "Alâbɛ",
    nativeDisplayName: "العربية"
}, {
    id: "zh",
    displayName: "Shinwâ",
    nativeDisplayName: "中文"
} ];

inter.scripts = [ {
    id: "Latn",
    displayName: "mík -ŋwaꞌnɛ yi ɛ́ líŋɛ́nɛ Latɛ̂ŋ"
}, {
    id: "Zxxx",
    displayName: "ntúu yi pɛ́ ká ŋwaꞌnε"
}, {
    id: "Zzzz",
    displayName: "ntɛ-ŋwaꞌnɛ yí pɛ́ ká kɛ́ jí"
} ];

inter.currencies = [ {
    id: "XAF",
    displayName: "Fɛlâŋ",
    symbol: "FCFA"
}, {
    id: "USD",
    displayName: "Ndɔ́la-Amɛlîk",
    symbol: "US$"
}, {
    id: "CAD",
    displayName: "Ndɔ́la-Kanandâ",
    symbol: "CA$"
}, {
    id: "XXX",
    displayName: "ntɛ-ŋkáp yi pɛ́ ká kɛ́ jínɛ"
}, {
    id: "EUR",
    displayName: "Ʉ́lɔ",
    symbol: "€"
} ];

module.exports = inter;