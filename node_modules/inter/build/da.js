function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _dus31 = {
    "default": "#,##0 %"
}, _dus32 = {
    displayName: "AM/PM"
}, _dus33 = {
    all: {
        leap: "{0}bis"
    }
}, _dus34 = {
    displayName: "ugedag"
}, _dus35 = {
    displayName: "tidszone"
}, _dus36 = {
    one: "{0}°",
    other: "{0}°"
}, _dus37 = {
    one: "{0}′",
    other: "{0}′"
}, _dus38 = {
    one: "{0}″",
    other: "{0}″"
}, _dus39 = {
    one: "0 td",
    other: "0 td"
}, _dus310 = {
    a: "h a – h a",
    h: "h–h a"
}, _dus311 = [ "Before R.O.C.", "Minguo" ], _dus312 = {
    one: "{0} t",
    other: "{0} t"
}, _dus313 = {
    one: "{0} m",
    other: "{0} m"
}, _dus314 = {
    one: "{0} g",
    other: "{0} g"
}, _dus315 = {
    one: "{0}°C",
    other: "{0}°C"
}, _dus316 = {
    one: "{0}°F",
    other: "{0}°F"
}, _dus317 = {
    one: "{0} l",
    other: "{0} l"
}, _dus318 = {
    one: "00 td",
    other: "00 td"
}, _dus319 = {
    one: "0 mio",
    other: "0 mio"
}, _dus320 = {
    one: "0 mia",
    other: "0 mia"
}, _dus321 = {
    one: "0 bio",
    other: "0 bio"
}, _dus322 = {
    one: "{0} år",
    other: "{0} år"
}, _dus323 = {
    one: "{0} ms",
    other: "{0} ms"
}, _dus324 = {
    one: "{0} km",
    other: "{0} km"
}, _dus325 = {
    one: "{0} cm",
    other: "{0} cm"
}, _dus326 = {
    one: "{0} mm",
    other: "{0} mm"
}, _dus327 = {
    one: "{0} pc",
    other: "{0} pc"
}, _dus328 = {
    one: "{0} ae",
    other: "{0} ae"
}, _dus329 = {
    one: "{0} kg",
    other: "{0} kg"
}, _dus330 = {
    one: "{0} tn",
    other: "{0} tn"
}, _dus331 = {
    one: "000 td",
    other: "000 td"
}, _dus332 = {
    one: "00 mio",
    other: "00 mio"
}, _dus333 = {
    one: "00 mia",
    other: "00 mia"
}, _dus334 = {
    one: "00 bio",
    other: "00 bio"
}, _dus335 = {
    one: "0 td ¤",
    other: "0 td ¤"
}, _dus336 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _dus337 = [ "S", "M", "T", "O", "T", "F", "L" ], _dus338 = {
    one: "{0} bit",
    other: "{0} bit"
}, _dus339 = {
    one: "{0} fod",
    other: "{0} fod"
}, _dus340 = {
    one: "{0} mi²",
    other: "{0} mi²"
}, _dus341 = {
    one: "{0} mil",
    other: "{0} mil"
}, _dus342 = {
    one: "{0} mph",
    other: "{0} mph"
}, _dus343 = {
    one: "{0} mi³",
    other: "{0} mi³"
}, _dus344 = {
    one: "{0} in³",
    other: "{0} in³"
}, _dus345 = {
    one: "000 mio",
    other: "000 mio"
}, _dus346 = {
    one: "000 mia",
    other: "000 mia"
}, _dus347 = {
    one: "000 bio",
    other: "000 bio"
}, _dus348 = {
    one: "00 td ¤",
    other: "00 td ¤"
}, _dus349 = {
    one: "0 mio ¤",
    other: "0 mio ¤"
}, _dus350 = {
    one: "0 mia ¤",
    other: "0 mia ¤"
}, _dus351 = {
    one: "0 bio ¤",
    other: "0 bio ¤"
}, _dus352 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _dus353 = {
    one: "{0} uge",
    other: "{0} uger"
}, _dus354 = {
    one: "{0} dag",
    other: "{0} dage"
}, _dus355 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _dus356 = {
    one: "{0} byte",
    other: "{0} byte"
}, _dus357 = {
    one: "{0} pund",
    other: "{0} pund"
}, _dus358 = {
    one: "{0} knob",
    other: "{0} knob"
}, _dus359 = {
    one: "{0} årh.",
    other: "{0} årh."
}, _dus360 = {
    one: "{0} yard",
    other: "{0} yard"
}, _dus361 = {
    one: "0 tusind",
    other: "0 tusind"
}, _dus362 = {
    one: "000 td ¤",
    other: "000 td ¤"
}, _dus363 = {
    one: "00 mio ¤",
    other: "00 mio ¤"
}, _dus364 = {
    one: "00 mia ¤",
    other: "00 mia ¤"
}, _dus365 = {
    one: "00 bio ¤",
    other: "00 bio ¤"
}, _dus366 = {
    H: "HH.mm–HH.mm",
    m: "HH.mm–HH.mm"
}, _dus367 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _dus368 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _dus369 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _dus370 = {
    one: "{0} karat",
    other: "{0} karat"
}, _dus371 = {
    one: "{0} lysår",
    other: "{0} lysår"
}, _dus372 = {
    one: "{0} sømil",
    other: "{0} sømil"
}, _dus373 = {
    one: "00 tusind",
    other: "00 tusind"
}, _dus374 = {
    one: "000 mio ¤",
    other: "000 mio ¤"
}, _dus375 = {
    one: "000 mia ¤",
    other: "000 mia ¤"
}, _dus376 = {
    one: "000 bio ¤",
    other: "000 bio ¤"
}, _dus377 = {
    d: "d.–d. MMM",
    M: "d. MMM – d. MMM"
}, _dus378 = {
    one: "om {0} år",
    other: "om {0} år"
}, _dus379 = {
    one: "{0} tomme",
    other: "{0} tommer"
}, _dus380 = [ "sø", "ma", "ti", "on", "to", "fr", "lø" ], _dus381 = {
    one: "000 tusind",
    other: "000 tusind"
}, _dus382 = {
    one: "0 million",
    other: "0 millioner"
}, _dus383 = {
    one: "0 billion",
    other: "0 billioner"
}, _dus384 = {
    H: "HH.mm–HH.mm v",
    m: "HH.mm–HH.mm v"
}, _dus385 = {
    d: "dd/MM – dd/MM",
    M: "dd/MM – dd/MM"
}, _dus386 = {
    M: "MM/y – MM/y G",
    y: "MM/y – MM/y G"
}, _dus387 = {
    M: "MMM–MMM y G",
    y: "MMM y – MMM y G"
}, _dus388 = {
    one: "om {0} md.",
    other: "om {0} md."
}, _dus389 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _dus390 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _dus391 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _dus392 = {
    one: "om {0} uge",
    other: "om {0} uger"
}, _dus393 = {
    one: "om {0} dag",
    other: "om {0} dage"
}, _dus394 = {
    one: "0 milliard",
    other: "0 milliarder"
}, _dus395 = {
    one: "om {0} kvt.",
    other: "om {0} kvt."
}, _dus396 = {
    one: "om {0} min.",
    other: "om {0} min."
}, _dus397 = {
    one: "om {0} sek.",
    other: "om {0} sek."
}, _dus398 = {
    one: "{0} kalorie",
    other: "{0} kalorier"
}, _dus399 = {
    "0": "i år",
    "1": "næste år",
    "-1": "sidste år"
}, _dus3100 = {
    one: "om {0} time",
    other: "om {0} timer"
}, _dus3101 = {
    one: "{0} l/100 km",
    other: "{0} l/100 km"
}, _dus3102 = {
    one: "00 millioner",
    other: "00 millioner"
}, _dus3103 = {
    one: "00 billioner",
    other: "00 billioner"
}, _dus3104 = {
    M: "MMMM–MMMM y G",
    y: "MMMM y – MMMM y G"
}, _dus3105 = [ "1. kvt.", "2. kvt.", "3. kvt.", "4. kvt." ], _dus3106 = {
    one: "000 millioner",
    other: "000 millioner"
}, _dus3107 = {
    one: "00 milliarder",
    other: "00 milliarder"
}, _dus3108 = {
    one: "000 billioner",
    other: "000 billioner"
}, _dus3109 = [ "søn", "man", "tir", "ons", "tor", "fre", "lør" ], _dus3110 = {
    one: "om {0} måned",
    other: "om {0} måneder"
}, _dus3111 = {
    one: "om {0} minut",
    other: "om {0} minutter"
}, _dus3112 = {
    one: "{0} kvadratfod",
    other: "{0} kvadratfod"
}, _dus3113 = {
    one: "000 milliarder",
    other: "000 milliarder"
}, _dus3114 = {
    d: "E dd/MM – E dd/MM",
    M: "E dd/MM – E dd/MM"
}, _dus3115 = {
    one: "om {0} sekund",
    other: "om {0} sekunder"
}, _dus3116 = {
    one: "{0} omdrejning",
    other: "{0} omdrejninger"
}, _dus3117 = {
    one: "om {0} kvartal",
    other: "om {0} kvartaler"
}, _dus3118 = {
    "0": "denne md.",
    "1": "næste md.",
    "-1": "sidste md."
}, _dus3119 = {
    "0": "denne uge",
    "1": "næste uge",
    "-1": "sidste uge"
}, _dus3120 = {
    "0": "denne sø.",
    "1": "næste sø.",
    "-1": "sidste sø."
}, _dus3121 = {
    "0": "denne ma.",
    "1": "næste ma.",
    "-1": "sidste ma."
}, _dus3122 = {
    "0": "denne ti.",
    "1": "næste ti.",
    "-1": "sidste ti."
}, _dus3123 = {
    "0": "denne on.",
    "1": "næste on.",
    "-1": "sidste on."
}, _dus3124 = {
    "0": "denne to.",
    "1": "næste to.",
    "-1": "sidste to."
}, _dus3125 = {
    "0": "denne fr.",
    "1": "næste fr.",
    "-1": "sidste fr."
}, _dus3126 = {
    "0": "denne lø.",
    "1": "næste lø.",
    "-1": "sidste lø."
}, _dus3127 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _dus3128 = {
    one: "for {0} år siden",
    other: "for {0} år siden"
}, _dus3129 = {
    "0": "denne søn.",
    "1": "næste sø.",
    "-1": "sidste søn."
}, _dus3130 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _dus3131 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _dus3132 = {
    id: "CX",
    displayName: "Juleøen",
    hasTimeZones: true
}, _dus3133 = [ "søn.", "man.", "tir.", "ons.", "tor.", "fre.", "lør." ], _dus3134 = {
    "0": "dette kvt.",
    "1": "næste kvt.",
    "-1": "sidste kvt."
}, _dus3135 = {
    "0": "denne man.",
    "1": "næste man.",
    "-1": "sidste man."
}, _dus3136 = {
    "0": "denne tir.",
    "1": "næste tir.",
    "-1": "sidste tir."
}, _dus3137 = {
    "0": "denne ons.",
    "1": "næste ons.",
    "-1": "sidste ons."
}, _dus3138 = {
    "0": "denne tor.",
    "1": "næste tor.",
    "-1": "sidste tor."
}, _dus3139 = {
    "0": "denne fre.",
    "1": "næste fre.",
    "-1": "sidste fre."
}, _dus3140 = {
    "0": "denne lør.",
    "1": "næste lør.",
    "-1": "sidste lør."
}, _dus3141 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _dus3142 = {
    id: "001",
    displayName: "Verden",
    hasTimeZones: false
}, _dus3143 = {
    one: "for {0} md. siden",
    other: "for {0} md. siden"
}, _dus3144 = {
    id: "AQ",
    displayName: "Antarktis",
    hasTimeZones: true
}, _dus3145 = {
    one: "for {0} uge siden",
    other: "for {0} uger siden"
}, _dus3146 = {
    one: "for {0} dag siden",
    other: "for {0} dage siden"
}, _dus3147 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _dus3148 = {
    id: "BV",
    displayName: "Bouvetøen",
    hasTimeZones: false
}, _dus3149 = {
    id: "CC",
    displayName: "Cocosøerne",
    hasTimeZones: true
}, _dus3150 = {
    a: "h.mm a – h.mm a",
    h: "h.mm–h.mm a",
    m: "h.mm–h.mm a"
}, _dus3151 = [ "1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal" ], _dus3152 = {
    one: "for {0} kvt. siden",
    other: "for {0} kvt. siden"
}, _dus3153 = {
    "0": "denne måned",
    "1": "næste måned",
    "-1": "sidste måned"
}, _dus3154 = {
    one: "for {0} min. siden",
    other: "for {0} min. siden"
}, _dus3155 = {
    one: "for {0} sek. siden",
    other: "for {0} sek. siden"
}, _dus3156 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _dus3157 = {
    one: "for {0} time siden",
    other: "for {0} timer siden"
}, _dus3158 = {
    id: "AC",
    displayName: "Ascensionøen",
    hasTimeZones: false
}, _dus3159 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _dus3160 = {
    "0": "denne søndag",
    "1": "næste søndag",
    "-1": "sidste søndag"
}, _dus3161 = {
    "0": "denne mandag",
    "1": "næste mandag",
    "-1": "sidste mandag"
}, _dus3162 = {
    "0": "denne onsdag",
    "1": "næste onsdag",
    "-1": "sidste onsdag"
}, _dus3163 = {
    "0": "denne fredag",
    "1": "næste fredag",
    "-1": "sidste fredag"
}, _dus3164 = {
    "0": "denne lørdag",
    "1": "næste lørdag",
    "-1": "sidste lørdag"
}, _dus3165 = {
    id: "CP",
    displayName: "Clippertonøen",
    hasTimeZones: false
}, _dus3166 = {
    id: "IC",
    displayName: "Kanariske øer",
    hasTimeZones: false
}, _dus3167 = {
    one: "for {0} måned siden",
    other: "for {0} måneder siden"
}, _dus3168 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _dus3169 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _dus3170 = {
    one: "for {0} minut siden",
    other: "for {0} minutter siden"
}, _dus3171 = {
    relative: _dus3120
}, _dus3172 = {
    relative: _dus3121
}, _dus3173 = {
    relative: _dus3122
}, _dus3174 = {
    relative: _dus3123
}, _dus3175 = {
    relative: _dus3124
}, _dus3176 = {
    relative: _dus3125
}, _dus3177 = {
    relative: _dus3126
}, _dus3178 = {
    a: "h.mm a – h.mm a v",
    h: "h.mm–h.mm a v",
    m: "h.mm–h.mm a v"
}, _dus3179 = {
    "0": "dette kvartal",
    "1": "næste kvartal",
    "-1": "sidste kvartal"
}, _dus3180 = {
    one: "for {0} sekund siden",
    other: "for {0} sekunder siden"
}, _dus3181 = {
    "0": "denne tirsdag",
    "1": "næste tirsdag",
    "-1": "sidste tirsdag"
}, _dus3182 = {
    "0": "denne torsdag",
    "1": "næste torsdag",
    "-1": "sidste torsdag"
}, _dus3183 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _dus3184 = {
    id: "EA",
    displayName: "Ceuta og Melilla",
    hasTimeZones: false
}, _dus3185 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _dus3186 = {
    relative: _dus3129
}, _dus3187 = {
    id: "US",
    displayName: "USA",
    regionId: "021",
    hasTimeZones: true
}, _dus3188 = {
    one: "for {0} kvartal siden",
    other: "for {0} kvartaler siden"
}, _dus3189 = {
    relative: _dus3135
}, _dus3190 = {
    relative: _dus3136
}, _dus3191 = {
    relative: _dus3137
}, _dus3192 = {
    relative: _dus3138
}, _dus3193 = {
    relative: _dus3139
}, _dus3194 = {
    relative: _dus3140
}, _dus3195 = {
    id: "CU",
    displayName: "Cuba",
    regionId: "029",
    hasTimeZones: true
}, _dus3196 = {
    id: "FJ",
    displayName: "Fiji",
    regionId: "054",
    hasTimeZones: true
}, _dus3197 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _dus3198 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _dus3199 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _dus3200 = {
    id: "CN",
    displayName: "Kina",
    regionId: "030",
    hasTimeZones: true
}, _dus3201 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _dus3202 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _dus3203 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _dus3204 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _dus3205 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _dus3206 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _dus3207 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _dus3208 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _dus3209 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _dus3210 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _dus3211 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _dus3212 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _dus3213 = {
    id: "JP",
    displayName: "Japan",
    regionId: "030",
    hasTimeZones: true
}, _dus3214 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _dus3215 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _dus3216 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _dus3217 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _dus3218 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _dus3219 = {
    id: "NO",
    displayName: "Norge",
    regionId: "154",
    hasTimeZones: true
}, _dus3220 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _dus3221 = {
    id: "PL",
    displayName: "Polen",
    regionId: "151",
    hasTimeZones: true
}, _dus3222 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _dus3223 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _dus3224 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _dus3225 = {
    id: "TD",
    displayName: "Tchad",
    regionId: "017",
    hasTimeZones: true
}, _dus3226 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _dus3227 = {
    id: "YE",
    displayName: "Yemen",
    regionId: "145",
    hasTimeZones: true
}, _dus3228 = {
    id: "AX",
    displayName: "Åland",
    regionId: "154",
    hasTimeZones: true
}, _dus3229 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _dus3230 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _dus3231 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _dus3232 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _dus3233 = {
    id: "CA",
    displayName: "Canada",
    regionId: "021",
    hasTimeZones: true
}, _dus3234 = {
    id: "CY",
    displayName: "Cypern",
    regionId: "145",
    hasTimeZones: true
}, _dus3235 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _dus3236 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _dus3237 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _dus3238 = {
    id: "IN",
    displayName: "Indien",
    regionId: "034",
    hasTimeZones: true
}, _dus3239 = {
    id: "IE",
    displayName: "Irland",
    regionId: "154",
    hasTimeZones: true
}, _dus3240 = {
    id: "IS",
    displayName: "Island",
    regionId: "154",
    hasTimeZones: true
}, _dus3241 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _dus3242 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _dus3243 = {
    id: "JO",
    displayName: "Jordan",
    regionId: "145",
    hasTimeZones: true
}, _dus3244 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _dus3245 = {
    id: "LY",
    displayName: "Libyen",
    regionId: "015",
    hasTimeZones: true
}, _dus3246 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _dus3247 = {
    id: "MX",
    displayName: "Mexico",
    regionId: "013",
    hasTimeZones: true
}, _dus3248 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _dus3249 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _dus3250 = {
    id: "RW",
    displayName: "Rwanda",
    regionId: "014",
    hasTimeZones: true
}, _dus3251 = {
    id: "SY",
    displayName: "Syrien",
    regionId: "145",
    hasTimeZones: true
}, _dus3252 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _dus3253 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _dus3254 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _dus3255 = {
    id: "HU",
    displayName: "Ungarn",
    regionId: "151",
    hasTimeZones: true
}, _dus3256 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _dus3257 = {
    id: "AT",
    displayName: "Østrig",
    regionId: "155",
    hasTimeZones: true
}, _dus3258 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _dus3259 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _dus3260 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _dus3261 = {
    id: "BE",
    displayName: "Belgien",
    regionId: "155",
    hasTimeZones: true
}, _dus3262 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _dus3263 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _dus3264 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _dus3265 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _dus3266 = {
    id: "DK",
    displayName: "Danmark",
    regionId: "154",
    hasTimeZones: true
}, _dus3267 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _dus3268 = {
    id: "EG",
    displayName: "Egypten",
    regionId: "015",
    hasTimeZones: true
}, _dus3269 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _dus3270 = {
    id: "EE",
    displayName: "Estland",
    regionId: "154",
    hasTimeZones: true
}, _dus3271 = {
    id: "FI",
    displayName: "Finland",
    regionId: "154",
    hasTimeZones: true
}, _dus3272 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _dus3273 = {
    id: "NL",
    displayName: "Holland",
    regionId: "155",
    hasTimeZones: true
}, _dus3274 = {
    id: "IT",
    displayName: "Italien",
    regionId: "039",
    hasTimeZones: true
}, _dus3275 = {
    id: "JM",
    displayName: "Jamaica",
    regionId: "029",
    hasTimeZones: true
}, _dus3276 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _dus3277 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _dus3278 = {
    id: "LV",
    displayName: "Letland",
    regionId: "154",
    hasTimeZones: true
}, _dus3279 = {
    id: "LB",
    displayName: "Libanon",
    regionId: "145",
    hasTimeZones: true
}, _dus3280 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _dus3281 = {
    id: "LT",
    displayName: "Litauen",
    regionId: "154",
    hasTimeZones: true
}, _dus3282 = {
    id: "MA",
    displayName: "Marokko",
    regionId: "015",
    hasTimeZones: true
}, _dus3283 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _dus3284 = {
    id: "MD",
    displayName: "Moldova",
    regionId: "151",
    hasTimeZones: true
}, _dus3285 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _dus3286 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _dus3287 = {
    id: "RU",
    displayName: "Rusland",
    regionId: "151",
    hasTimeZones: true
}, _dus3288 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _dus3289 = {
    id: "CH",
    displayName: "Schweiz",
    regionId: "155",
    hasTimeZones: true
}, _dus3290 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _dus3291 = {
    id: "RS",
    displayName: "Serbien",
    regionId: "039",
    hasTimeZones: true
}, _dus3292 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _dus3293 = {
    id: "ES",
    displayName: "Spanien",
    regionId: "039",
    hasTimeZones: true
}, _dus3294 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _dus3295 = {
    id: "SE",
    displayName: "Sverige",
    regionId: "154",
    hasTimeZones: true
}, _dus3296 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _dus3297 = {
    id: "TR",
    displayName: "Tyrkiet",
    regionId: "145",
    hasTimeZones: true
}, _dus3298 = {
    id: "UA",
    displayName: "Ukraine",
    regionId: "151",
    hasTimeZones: true
}, _dus3299 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _dus3300 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _dus3301 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _dus3302 = {
    id: "AL",
    displayName: "Albanien",
    regionId: "039",
    hasTimeZones: true
}, _dus3303 = {
    id: "DZ",
    displayName: "Algeriet",
    regionId: "015",
    hasTimeZones: true
}, _dus3304 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _dus3305 = {
    id: "AM",
    displayName: "Armenien",
    regionId: "145",
    hasTimeZones: true
}, _dus3306 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _dus3307 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _dus3308 = {
    id: "KH",
    displayName: "Cambodja",
    regionId: "035",
    hasTimeZones: true
}, _dus3309 = {
    id: "CM",
    displayName: "Cameroun",
    regionId: "017",
    hasTimeZones: true
}, _dus3310 = {
    id: "CO",
    displayName: "Colombia",
    regionId: "005",
    hasTimeZones: true
}, _dus3311 = {
    id: "DJ",
    displayName: "Djibouti",
    regionId: "014",
    hasTimeZones: true
}, _dus3312 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _dus3313 = {
    id: "ET",
    displayName: "Etiopien",
    regionId: "014",
    hasTimeZones: true
}, _dus3314 = {
    id: "FR",
    displayName: "Frankrig",
    regionId: "155",
    hasTimeZones: true
}, _dus3315 = {
    id: "FO",
    displayName: "Færøerne",
    regionId: "154",
    hasTimeZones: true
}, _dus3316 = {
    id: "GE",
    displayName: "Georgien",
    regionId: "145",
    hasTimeZones: true
}, _dus3317 = {
    id: "GL",
    displayName: "Grønland",
    regionId: "021",
    hasTimeZones: true
}, _dus3318 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _dus3319 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _dus3320 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _dus3321 = {
    id: "HR",
    displayName: "Kroatien",
    regionId: "039",
    hasTimeZones: true
}, _dus3322 = {
    id: "MY",
    displayName: "Malaysia",
    regionId: "035",
    hasTimeZones: true
}, _dus3323 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _dus3324 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _dus3325 = {
    id: "PN",
    displayName: "Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _dus3326 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _dus3327 = {
    id: "RO",
    displayName: "Rumænien",
    regionId: "151",
    hasTimeZones: true
}, _dus3328 = {
    id: "KR",
    displayName: "Sydkorea",
    regionId: "030",
    hasTimeZones: true
}, _dus3329 = {
    id: "SS",
    displayName: "Sydsudan",
    regionId: "014",
    hasTimeZones: true
}, _dus3330 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _dus3331 = {
    id: "TH",
    displayName: "Thailand",
    regionId: "035",
    hasTimeZones: true
}, _dus3332 = {
    id: "CZ",
    displayName: "Tjekkiet",
    regionId: "151",
    hasTimeZones: true
}, _dus3333 = {
    id: "TN",
    displayName: "Tunesien",
    regionId: "015",
    hasTimeZones: true
}, _dus3334 = {
    id: "DE",
    displayName: "Tyskland",
    regionId: "155",
    hasTimeZones: true
}, _dus3335 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _dus3336 = [ "søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag" ], _dus3337 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _dus3338 = {
    id: "BR",
    displayName: "Brasilien",
    regionId: "005",
    hasTimeZones: true
}, _dus3339 = {
    id: "BG",
    displayName: "Bulgarien",
    regionId: "151",
    hasTimeZones: true
}, _dus3340 = {
    id: "KM",
    displayName: "Comorerne",
    regionId: "014",
    hasTimeZones: true
}, _dus3341 = {
    id: "CK",
    displayName: "Cookøerne",
    regionId: "061",
    hasTimeZones: true
}, _dus3342 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _dus3343 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _dus3344 = {
    id: "CV",
    displayName: "Kap Verde",
    regionId: "011",
    hasTimeZones: true
}, _dus3345 = {
    id: "MO",
    displayName: "Macao SAR",
    regionId: "030",
    hasTimeZones: true
}, _dus3346 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _dus3347 = {
    id: "MN",
    displayName: "Mongoliet",
    regionId: "030",
    hasTimeZones: true
}, _dus3348 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _dus3349 = {
    id: "KP",
    displayName: "Nordkorea",
    regionId: "030",
    hasTimeZones: true
}, _dus3350 = {
    id: "SG",
    displayName: "Singapore",
    regionId: "035",
    hasTimeZones: true
}, _dus3351 = {
    id: "SK",
    displayName: "Slovakiet",
    regionId: "151",
    hasTimeZones: true
}, _dus3352 = {
    id: "SI",
    displayName: "Slovenien",
    regionId: "039",
    hasTimeZones: true
}, _dus3353 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _dus3354 = {
    id: "SZ",
    displayName: "Swaziland",
    regionId: "018",
    hasTimeZones: true
}, _dus3355 = {
    id: "ZA",
    displayName: "Sydafrika",
    regionId: "018",
    hasTimeZones: true
}, _dus3356 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _dus3357 = {
    relative: _dus3160
}, _dus3358 = {
    relative: _dus3161
}, _dus3359 = {
    relative: _dus3162
}, _dus3360 = {
    relative: _dus3163
}, _dus3361 = {
    relative: _dus3164
}, _dus3362 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _dus3363 = {
    id: "AU",
    displayName: "Australien",
    regionId: "053",
    hasTimeZones: true
}, _dus3364 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _dus3365 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _dus3366 = {
    id: "GR",
    displayName: "Grækenland",
    regionId: "039",
    hasTimeZones: true
}, _dus3367 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _dus3368 = {
    id: "ID",
    displayName: "Indonesien",
    regionId: "035",
    hasTimeZones: true
}, _dus3369 = {
    id: "KZ",
    displayName: "Kasakhstan",
    regionId: "143",
    hasTimeZones: true
}, _dus3370 = {
    id: "LU",
    displayName: "Luxembourg",
    regionId: "155",
    hasTimeZones: true
}, _dus3371 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _dus3372 = {
    id: "MK",
    displayName: "Makedonien",
    regionId: "039",
    hasTimeZones: true
}, _dus3373 = {
    id: "MV",
    displayName: "Maldiverne",
    regionId: "034",
    hasTimeZones: true
}, _dus3374 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _dus3375 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _dus3376 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _dus3377 = {
    id: "MZ",
    displayName: "Mozambique",
    regionId: "014",
    hasTimeZones: true
}, _dus3378 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _dus3379 = {
    id: "SH",
    displayName: "St. Helena",
    regionId: "011",
    hasTimeZones: true
}, _dus3380 = {
    id: "UZ",
    displayName: "Usbekistan",
    regionId: "143",
    hasTimeZones: true
}, _dus3381 = {
    id: "EH",
    displayName: "Vestsahara",
    regionId: "015",
    hasTimeZones: true
}, _dus3382 = {
    "2": "{0} og {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0} og {1}"
}, _dus3383 = {
    id: "AF",
    displayName: "Afghanistan",
    regionId: "034",
    hasTimeZones: true
}, _dus3384 = {
    id: "UM",
    displayName: "Amerikanske oversøiske øer",
    hasTimeZones: true
}, _dus3385 = {
    id: "KY",
    displayName: "Caymanøerne",
    regionId: "029",
    hasTimeZones: true
}, _dus3386 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _dus3387 = {
    id: "IM",
    displayName: "Isle of Man",
    regionId: "154",
    hasTimeZones: true
}, _dus3388 = {
    id: "KG",
    displayName: "Kirgisistan",
    regionId: "143",
    hasTimeZones: true
}, _dus3389 = {
    id: "MR",
    displayName: "Mauretanien",
    regionId: "011",
    hasTimeZones: true
}, _dus3390 = {
    id: "NZ",
    displayName: "New Zealand",
    regionId: "053",
    hasTimeZones: true
}, _dus3391 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _dus3392 = {
    id: "LC",
    displayName: "Saint Lucia",
    regionId: "029",
    hasTimeZones: true
}, _dus3393 = {
    id: "TL",
    displayName: "Timor-Leste",
    regionId: "035",
    hasTimeZones: true
}, _dus3394 = {
    d: "E 'den' d. – E 'den' d. MMM",
    M: "E 'den' d. MMM – E 'den' d. MMM"
}, _dus3395 = {
    d: "d.–d. MMM y G",
    M: "d. MMM – d. MMM y G",
    y: "d. MMM y – d. MMM y G"
}, _dus3396 = {
    id: "AZ",
    displayName: "Aserbajdsjan",
    regionId: "145",
    hasTimeZones: true
}, _dus3397 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _dus3398 = {
    id: "PH",
    displayName: "Filippinerne",
    regionId: "035",
    hasTimeZones: true
}, _dus3399 = {
    id: "HK",
    displayName: "Hongkong SAR",
    regionId: "030",
    hasTimeZones: true
}, _dus3400 = {
    id: "BY",
    displayName: "Hviderusland",
    regionId: "151",
    hasTimeZones: true
}, _dus3401 = {
    id: "MF",
    displayName: "Saint Martin",
    regionId: "029",
    hasTimeZones: true
}, _dus3402 = {
    id: "SB",
    displayName: "Salomonøerne",
    regionId: "054",
    hasTimeZones: true
}, _dus3403 = {
    id: "SC",
    displayName: "Seychellerne",
    regionId: "014",
    hasTimeZones: true
}, _dus3404 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _dus3405 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _dus3406 = {
    id: "TJ",
    displayName: "Tadsjikistan",
    regionId: "143",
    hasTimeZones: true
}, _dus3407 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _dus3408 = {
    relative: _dus3181
}, _dus3409 = {
    relative: _dus3182
}, _dus3410 = {
    id: "142",
    displayName: "Asien",
    hasTimeZones: false,
    parentRegionId: "001"
}, _dus3411 = {
    id: "GF",
    displayName: "Fransk Guyana",
    regionId: "005",
    hasTimeZones: true
}, _dus3412 = {
    id: "GW",
    displayName: "Guinea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _dus3413 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _dus3414 = {
    id: "MH",
    displayName: "Marshalløerne",
    regionId: "057",
    hasTimeZones: true
}, _dus3415 = {
    id: "NC",
    displayName: "Ny Kaledonien",
    regionId: "054",
    hasTimeZones: true
}, _dus3416 = {
    id: "SA",
    displayName: "Saudi-Arabien",
    regionId: "145",
    hasTimeZones: true
}, _dus3417 = {
    id: "VA",
    displayName: "Vatikanstaten",
    regionId: "039",
    hasTimeZones: true
}, _dus3418 = {
    "0": "i dag",
    "1": "i morgen",
    "2": "i overmorgen",
    "-2": "i forgårs",
    "-1": "i går"
}, _dus3419 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _dus3420 = {
    id: "002",
    displayName: "Afrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _dus3421 = {
    id: "CD",
    displayName: "Congo-Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _dus3422 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _dus3423 = {
    id: "FK",
    displayName: "Falklandsøerne",
    regionId: "005",
    hasTimeZones: true
}, _dus3424 = {
    id: "MP",
    displayName: "Nordmarianerne",
    regionId: "057",
    hasTimeZones: true
}, _dus3425 = {
    id: "NF",
    displayName: "Norfolk Island",
    regionId: "053",
    hasTimeZones: true
}, _dus3426 = {
    id: "GB",
    displayName: "Storbritannien",
    regionId: "154",
    hasTimeZones: true
}, _dus3427 = {
    id: "019",
    displayName: "Amerika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _dus3428 = {
    id: "CI",
    displayName: "Elfenbenskysten",
    regionId: "011",
    hasTimeZones: true
}, _dus3429 = {
    id: "MM",
    displayName: "Myanmar (Burma)",
    regionId: "035",
    hasTimeZones: true
}, _dus3430 = {
    id: "PG",
    displayName: "Papua Ny Guinea",
    regionId: "054",
    hasTimeZones: true
}, _dus3431 = {
    d: "dd/MM/y – dd/MM/y G",
    M: "dd/MM/y – dd/MM/y G",
    y: "dd/MM/y – dd/MM/y G"
}, _dus3432 = [ "jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec" ], _dus3433 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _dus3434 = {
    id: "AS",
    displayName: "Amerikansk Samoa",
    regionId: "061",
    hasTimeZones: true
}, _dus3435 = {
    id: "029",
    displayName: "Caribien",
    hasTimeZones: false,
    parentRegionId: "019"
}, _dus3436 = {
    id: "009",
    displayName: "Oceanien",
    hasTimeZones: false,
    parentRegionId: "001"
}, _dus3437 = {
    id: "BL",
    displayName: "Saint Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _dus3438 = {
    id: "034",
    displayName: "Sydasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _dus3439 = {
    id: "WF",
    displayName: "Wallis og Futuna",
    regionId: "061",
    hasTimeZones: true
}, _dus3440 = {
    id: "GQ",
    displayName: "Ækvatorialguinea",
    regionId: "017",
    hasTimeZones: true
}, _dus3441 = {
    id: "030",
    displayName: "Østasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _dus3442 = {
    id: "CG",
    displayName: "Congo-Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _dus3443 = {
    id: "PF",
    displayName: "Fransk Polynesien",
    regionId: "061",
    hasTimeZones: true
}, _dus3444 = {
    id: "039",
    displayName: "Sydeuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _dus3445 = {
    id: "145",
    displayName: "Vestasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _dus3446 = {
    id: "014",
    displayName: "Østafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _dus3447 = {
    id: "151",
    displayName: "Østeuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _dus3448 = {
    id: "AG",
    displayName: "Antigua og Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _dus3449 = {
    id: "HM",
    displayName: "Heard Island og McDonald Islands",
    hasTimeZones: false
}, _dus3450 = {
    id: "054",
    displayName: "Melanesien",
    hasTimeZones: false,
    parentRegionId: "009"
}, _dus3451 = {
    id: "015",
    displayName: "Nordafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _dus3452 = {
    id: "154",
    displayName: "Nordeuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _dus3453 = {
    id: "061",
    displayName: "Polynesien",
    hasTimeZones: false,
    parentRegionId: "009"
}, _dus3454 = {
    id: "005",
    displayName: "Sydamerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _dus3455 = {
    id: "TT",
    displayName: "Trinidad og Tobago",
    regionId: "029",
    hasTimeZones: true
}, _dus3456 = {
    id: "011",
    displayName: "Vestafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _dus3457 = {
    id: "155",
    displayName: "Vesteuropa",
    hasTimeZones: false,
    parentRegionId: "150"
}, _dus3458 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _dus3459 = {
    id: "BA",
    displayName: "Bosnien-Hercegovina",
    regionId: "039",
    hasTimeZones: true
}, _dus3460 = {
    id: "057",
    displayName: "Mikronesien",
    hasTimeZones: false,
    parentRegionId: "009"
}, _dus3461 = {
    id: "035",
    displayName: "Sydøstasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _dus3462 = {
    id: "053",
    displayName: "Australasien",
    hasTimeZones: false,
    parentRegionId: "009"
}, _dus3463 = {
    id: "143",
    displayName: "Centralasien",
    hasTimeZones: false,
    parentRegionId: "142"
}, _dus3464 = {
    id: "KN",
    displayName: "Saint Kitts og Nevis",
    regionId: "029",
    hasTimeZones: true
}, _dus3465 = {
    id: "ST",
    displayName: "São Tomé og Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _dus3466 = {
    id: "017",
    displayName: "Centralafrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _dus3467 = {
    id: "VG",
    displayName: "De Britiske Jomfruøer",
    regionId: "029",
    hasTimeZones: true
}, _dus3468 = {
    id: "013",
    displayName: "Mellemamerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _dus3469 = {
    id: "SJ",
    displayName: "Svalbard og Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _dus3470 = {
    id: "TC",
    displayName: "Turks- og Caicosøerne",
    regionId: "029",
    hasTimeZones: true
}, _dus3471 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _dus3472 = {
    id: "VI",
    displayName: "De Amerikanske Jomfruøer",
    regionId: "029",
    hasTimeZones: true
}, _dus3473 = {
    id: "BQ",
    displayName: "De Nederlandske Antiller",
    regionId: "029",
    hasTimeZones: true
}, _dus3474 = {
    id: "PM",
    displayName: "Saint Pierre og Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _dus3475 = {
    id: "GS",
    displayName: "South Georgia og South Sandwich Islands",
    hasTimeZones: true
}, _dus3476 = {
    id: "DO",
    displayName: "Den Dominikanske Republik",
    regionId: "029",
    hasTimeZones: true
}, _dus3477 = {
    id: "PS",
    displayName: "De palæstinensiske områder",
    regionId: "145",
    hasTimeZones: true
}, _dus3478 = {
    id: "018",
    displayName: "Det sydlige Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _dus3479 = [ "jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec." ], _dus3480 = {
    d: "E dd/MM/y – E dd/MM/y G",
    M: "E dd/MM/y – E dd/MM/y G",
    y: "E dd/MM/y – E dd/MM/y G"
}, _dus3481 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _dus3482 = {
    id: "021",
    displayName: "Det nordlige Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _dus3483 = {
    id: "FM",
    displayName: "Mikronesiens Forenede Stater",
    regionId: "057",
    hasTimeZones: true
}, _dus3484 = {
    id: "AE",
    displayName: "De Forenede Arabiske Emirater",
    regionId: "145",
    hasTimeZones: true
}, _dus3485 = {
    id: "IO",
    displayName: "Det britiske territorium i Det Indiske Ocean",
    hasTimeZones: true
}, _dus3486 = {
    id: "VC",
    displayName: "Saint Vincent og Grenadinerne",
    regionId: "029",
    hasTimeZones: true
}, _dus3487 = {
    id: "CF",
    displayName: "Den Centralafrikanske Republik",
    regionId: "017",
    hasTimeZones: true
}, _dus3488 = {
    id: "TF",
    displayName: "De franske besiddelser i Det Sydlige Indiske Ocean",
    hasTimeZones: true
}, _dus3489 = {
    future: _dus378,
    past: _dus3128
}, _dus3490 = {
    future: _dus388,
    past: _dus3143
}, _dus3491 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _dus3492 = {
    future: _dus392,
    past: _dus3145
}, _dus3493 = {
    future: _dus393,
    past: _dus3146
}, _dus3494 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _dus3495 = {
    future: _dus395,
    past: _dus3152
}, _dus3496 = {
    future: _dus396,
    past: _dus3154
}, _dus3497 = {
    future: _dus397,
    past: _dus3155
}, _dus3498 = [ "januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december" ], _dus3499 = {
    future: _dus3100,
    past: _dus3157
}, _dus3500 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _dus3501 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _dus3502 = {
    future: _dus3110,
    past: _dus3167
}, _dus3503 = {
    future: _dus3111,
    past: _dus3170
}, _dus3504 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _dus3505 = {
    d: "E 'den' d. – E 'den' d. MMM y G",
    M: "E 'den' d. MMM – E 'den' d. MMM y G",
    y: "E 'den' d. MMM y – E 'den' d. MMM y G"
}, _dus3506 = {
    future: _dus3115,
    past: _dus3180
}, _dus3507 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _dus3508 = {
    future: _dus3117,
    past: _dus3188
}, _dus3509 = {
    midnight: "midnat",
    am: "AM",
    pm: "PM",
    morning1: "morgen",
    morning2: "formiddag",
    afternoon1: "eftermiddag",
    evening1: "aften",
    night1: "nat"
}, _dus3510 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _dus3511 = {
    displayName: "s",
    relativeTime: _dus3497
}, _dus3512 = {
    abbreviated: _dus3105,
    narrow: [ "1", "2", "3", "4" ],
    wide: _dus3151
}, _dus3513 = {
    displayName: "t",
    relativeTime: _dus3499
}, _dus3514 = {
    displayName: "min",
    relativeTime: _dus3496
}, _dus3515 = {
    displayName: "t.",
    relativeTime: _dus3499
}, _dus3516 = {
    displayName: "min.",
    relativeTime: _dus3496
}, _dus3517 = {
    displayName: "sek.",
    relativeTime: _dus3497
}, _dus3518 = {
    displayName: "time",
    relativeTime: _dus3499
}, _dus3519 = {
    displayName: "minut",
    relativeTime: _dus3503
}, _dus3520 = {
    midnight: "midnat",
    am: "a",
    pm: "p",
    morning1: "om morgenen",
    morning2: "om formiddagen",
    afternoon1: "om eftermiddagen",
    evening1: "om aftenen",
    night1: "om natten"
}, _dus3521 = {
    midnight: "midnat",
    am: "AM",
    pm: "PM",
    morning1: "om morgenen",
    morning2: "om formiddagen",
    afternoon1: "om eftermiddagen",
    evening1: "om aftenen",
    night1: "om natten"
}, _dus3522 = {
    displayName: "sekund",
    relative: [ "nu" ],
    relativeTime: _dus3506
}, _dus3523 = {
    decimal: ",",
    group: ".",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: "."
}, _dus3524 = {
    displayName: "år",
    relative: _dus399,
    relativeTime: _dus3489
}, _dus3525 = {
    symbols: _dus3523
}, _dus3526 = {
    displayName: "md.",
    relative: _dus3118,
    relativeTime: _dus3490
}, _dus3527 = {
    format: _dus3419,
    numeric: _dus33,
    standAlone: _dus3419
}, _dus3528 = {
    displayName: "uge",
    relative: _dus3119,
    relativeTime: _dus3492
}, _dus3529 = {
    displayName: "kvt.",
    relative: _dus3134,
    relativeTime: _dus3495
}, _dus3530 = {
    abbreviated: _dus3109,
    narrow: _dus337,
    wide: _dus3336,
    "short": _dus380
}, _dus3531 = {
    displayName: "måned",
    relative: _dus3153,
    relativeTime: _dus3502
}, _dus3532 = {
    symbols: _dus3523,
    digits: "renderSpelloutCardinal"
}, _dus3533 = {
    abbreviated: _dus3133,
    narrow: _dus337,
    wide: _dus3336,
    "short": _dus380
}, _dus3534 = {
    displayName: "dag",
    relative: _dus3418,
    relativeTime: _dus3493
}, _dus3535 = {
    symbols: _dus3523,
    digits: "renderSpelloutCardinalFinancial"
}, _dus3536 = {
    abbreviated: _dus3433,
    narrow: _dus3147,
    wide: _dus3433
}, _dus3537 = {
    displayName: "kvartal",
    relative: _dus3179,
    relativeTime: _dus3508
}, _dus3538 = {
    abbreviated: _dus3458,
    narrow: _dus3458,
    wide: _dus3458
}, _dus3539 = {
    abbreviated: _dus3432,
    narrow: _dus3127,
    wide: _dus3498
}, _dus3540 = {
    format: _dus3538
}, _dus3541 = {
    abbreviated: _dus3479,
    narrow: _dus3127,
    wide: _dus3498
}, _dus3542 = {
    abbreviated: _dus3494,
    narrow: _dus3169,
    wide: _dus3494
}, _dus3543 = {
    abbreviated: _dus3500,
    narrow: _dus3147,
    wide: _dus3500
}, _dus3544 = {
    format: _dus3512,
    standAlone: _dus3512
}, _dus3545 = {
    abbreviated: _dus3501,
    narrow: _dus3169,
    wide: _dus3501
}, _dus3546 = {
    abbreviated: _dus3491,
    narrow: _dus3147,
    wide: _dus3510
}, _dus3547 = {
    abbreviated: _dus3504,
    narrow: _dus3169,
    wide: _dus3504
}, _dus3548 = {
    abbreviated: _dus3507,
    narrow: _dus3147,
    wide: _dus3507
}, _dus3549 = {
    fullDate: "EEEE d. MMMM y G",
    longDate: "d. MMMM y G",
    mediumDate: "d. MMM y G",
    shortDate: "d/M/y",
    fullTime: "HH.mm.ss zzzz",
    longTime: "HH.mm.ss z",
    mediumTime: "HH.mm.ss",
    shortTime: "HH.mm",
    shortDateTime: "d/M/y HH.mm",
    mediumDateTime: "d. MMM y G HH.mm.ss",
    longDateTime: "d. MMMM y G HH.mm.ss z",
    fullDateTime: "EEEE d. MMMM y G HH.mm.ss zzzz"
}, _dus3550 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH.mm.ss zzzz",
    longTime: "HH.mm.ss z",
    mediumTime: "HH.mm.ss",
    shortTime: "HH.mm",
    shortDateTime: "r-MM-dd HH.mm",
    mediumDateTime: "r MMM d HH.mm.ss",
    longDateTime: "r(U) MMMM d HH.mm.ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH.mm.ss zzzz"
}, _dus3551 = {
    "1000": _dus39,
    "10000": _dus318,
    "100000": _dus331,
    "1000000": _dus319,
    "10000000": _dus332,
    "100000000": _dus345,
    "1000000000": _dus320,
    "10000000000": _dus333,
    "100000000000": _dus346,
    "1000000000000": _dus321,
    "10000000000000": _dus334,
    "100000000000000": _dus347
}, _dus3552 = {
    abbreviated: _dus3509,
    narrow: _dus3509,
    wide: _dus3509
}, _dus3553 = {
    format: _dus3533,
    standAlone: _dus3530
}, _dus3554 = {
    "1000": _dus335,
    "10000": _dus348,
    "100000": _dus362,
    "1000000": _dus349,
    "10000000": _dus363,
    "100000000": _dus374,
    "1000000000": _dus350,
    "10000000000": _dus364,
    "100000000000": _dus375,
    "1000000000000": _dus351,
    "10000000000000": _dus365,
    "100000000000000": _dus376
}, _dus3555 = {
    format: _dus3536,
    standAlone: _dus3536
}, _dus3556 = {
    abbreviated: _dus3521,
    narrow: _dus3520,
    wide: _dus3521
}, _dus3557 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _dus3558 = {
    "1000": _dus361,
    "10000": _dus373,
    "100000": _dus381,
    "1000000": _dus382,
    "10000000": _dus3102,
    "100000000": _dus3106,
    "1000000000": _dus394,
    "10000000000": _dus3107,
    "100000000000": _dus3113,
    "1000000000000": _dus383,
    "10000000000000": _dus3103,
    "100000000000000": _dus3108
}, _dus3559 = {
    d: "d.",
    E: "ccc",
    Ed: "E 'd'. d.",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d. MMM y G",
    GyMMMEd: "E d. MMM y G",
    h: "h a",
    H: "HH",
    hm: "h.mm a",
    Hm: "HH.mm",
    hms: "h.mm.ss a",
    Hms: "HH.mm.ss",
    M: "M",
    Md: "d/M",
    MEd: "E d/M",
    MMM: "MMM",
    MMMd: "d. MMM",
    MMMEd: "E d. MMM",
    MMMMd: "d MMMM",
    MMMMEd: "E d. MMMM",
    ms: "mm.ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M/y G",
    yyyyMd: "d/M/y G",
    yyyyMEd: "E d/M/y G",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d. MMM y G",
    yyyyMMMEd: "E d. MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _dus3560 = {
    format: _dus3541,
    standAlone: _dus3539
}, _dus3561 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _dus3562 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _dus3563 = {
    format: _dus3546,
    standAlone: _dus3546
}, _dus3564 = {
    basic: _dus3550,
    cldr: _dus3557
}, _dus3565 = {
    basic: _dus3549,
    cldr: _dus3559
}, _dus3566 = {
    format: _dus3556,
    standAlone: _dus3552
}, _dus3567 = {
    d: {
        d: "d–d"
    },
    h: _dus310,
    H: {
        H: "HH–HH"
    },
    hm: _dus3156,
    Hm: _dus367,
    hmv: _dus3183,
    Hmv: _dus389,
    hv: _dus336,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _dus390,
    MEd: _dus3130,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _dus352,
    MMMEd: _dus3131,
    y: {
        y: "U–U"
    },
    yM: _dus368,
    yMd: _dus3362,
    yMEd: _dus3481,
    yMMM: _dus369,
    yMMMd: _dus3168,
    yMMMEd: _dus3471,
    yMMMM: _dus391
}, _dus3568 = {
    "long": _dus3558,
    "short": _dus3551,
    "default": "#,##0.###"
}, _dus3569 = {
    d: {
        d: "d.–d."
    },
    h: _dus310,
    H: {
        H: "HH–HH"
    },
    hm: _dus3150,
    Hm: _dus366,
    hmv: _dus3178,
    Hmv: _dus384,
    hv: _dus336,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _dus385,
    MEd: _dus3114,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _dus377,
    MMMEd: _dus3394,
    y: {
        y: "y–y G"
    },
    yM: _dus386,
    yMd: _dus3431,
    yMEd: _dus3480,
    yMMM: _dus387,
    yMMMd: _dus3395,
    yMMMEd: _dus3505,
    yMMMM: _dus3104
}, _dus3570 = {
    beforeCurrency: _dus3561,
    afterCurrency: _dus3561
}, _dus3571 = {
    "short": _dus3554,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _dus3570
}, _dus3572 = {
    abbreviated: _dus3562,
    narrow: _dus3562,
    wide: _dus3562
}, _dus3573 = {
    format: _dus3572
}, _dus3574 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _dus3568,
    currency: _dus3571,
    percent: _dus31
}, _dus3575 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _dus3576 = {
    dayParts: _dus3540,
    days: _dus3573,
    months: _dus3573,
    years: _dus3573,
    zodiacs: _dus3540
}, _dus3577 = {
    era: {
        displayName: "æra"
    },
    year: _dus3524,
    "year-short": _dus3524,
    "year-narrow": _dus3524,
    quarter: _dus3537,
    "quarter-short": _dus3529,
    "quarter-narrow": _dus3529,
    month: _dus3531,
    "month-short": _dus3526,
    "month-narrow": _dus3526,
    week: _dus3528,
    "week-short": _dus3528,
    "week-narrow": _dus3528,
    day: _dus3534,
    "day-short": _dus3534,
    "day-narrow": _dus3534,
    weekday: _dus34,
    dayperiod: _dus32,
    hour: _dus3518,
    "hour-short": _dus3515,
    "hour-narrow": _dus3513,
    minute: _dus3519,
    "minute-short": _dus3516,
    "minute-narrow": _dus3514,
    second: _dus3522,
    "second-short": _dus3517,
    "second-narrow": _dus3511,
    zone: _dus35,
    sun: _dus3357,
    "sun-short": _dus3186,
    "sun-narrow": _dus3171,
    mon: _dus3358,
    "mon-short": _dus3189,
    "mon-narrow": _dus3172,
    tue: _dus3408,
    "tue-short": _dus3190,
    "tue-narrow": _dus3173,
    wed: _dus3359,
    "wed-short": _dus3191,
    "wed-narrow": _dus3174,
    thu: _dus3409,
    "thu-short": _dus3192,
    "thu-narrow": _dus3175,
    fri: _dus3360,
    "fri-short": _dus3193,
    "fri-narrow": _dus3176,
    sat: _dus3361,
    "sat-short": _dus3194,
    "sat-narrow": _dus3177
}, _dus3578 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _dus3577
}, _dus3579 = {
    dateFormats: _dus3565,
    datePartsOrder: "dmy",
    dateIntervalFormats: _dus3569,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _dus3553,
    dayPeriods: _dus3566,
    monthNames: _dus3563,
    eraNames: _dus355,
    quarterNames: _dus3544,
    fields: _dus3577
}, _dus3580 = {
    dateFormats: _dus3564,
    datePartsOrder: "md",
    dateIntervalFormats: _dus3567,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _dus3553,
    dayPeriods: _dus3566,
    cyclicNames: _dus3576,
    monthNames: _dus3555,
    monthPatterns: _dus3527,
    quarterNames: _dus3544,
    fields: _dus3577
};

inter.id = "da";

inter.listPatterns = {
    "default": _dus3382,
    unit: _dus3382,
    unitNarrow: _dus3382,
    unitShort: _dus3382
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} G-kraft",
                other: "{0} G-kraft"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} meter pr. sekund²",
                other: "{0} meter pr. sekund²"
            },
            angleRevolution: _dus3116,
            angleRadian: {
                one: "{0} radian",
                other: "{0} radianer"
            },
            angleDegree: {
                one: "{0} grad",
                other: "{0} grader"
            },
            angleArcMinute: {
                one: "{0} bueminut",
                other: "{0} bueminutter"
            },
            angleArcSecond: {
                one: "{0} buesekund",
                other: "{0} buesekunder"
            },
            areaSquareKilometer: {
                one: "{0} kvadratkilometer",
                other: "{0} kvadratkilometer"
            },
            areaHectare: {
                one: "{0} hektar",
                other: "{0} hektar"
            },
            areaSquareMeter: {
                one: "{0} kvadratmeter",
                other: "{0} kvadratmeter"
            },
            areaSquareCentimeter: {
                one: "{0} kvadratcentimeter",
                other: "{0} kvadratcentimeter"
            },
            areaSquareMile: {
                one: "{0} kvadrat-engelsk mil",
                other: "{0} kvadrat-engelske mil"
            },
            areaAcre: {
                one: "{0} acre",
                other: "{0} acres"
            },
            areaSquareYard: {
                one: "{0} kvadrat engelske yard",
                other: "{0} kvadrat engelske yard"
            },
            areaSquareFoot: _dus3112,
            areaSquareInch: {
                one: "{0} kvadrattomme",
                other: "{0} kvadrattommer"
            },
            concentrKarat: _dus370,
            consumptionLiterPerKilometer: {
                one: "{0} liter pr. kilometer",
                other: "{0} liter pr. kilometer"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} liter pr. 100 kilometer",
                other: "{0} liter pr. 100 kilometer"
            },
            consumptionMilePerGallon: {
                one: "mil pr. gallon",
                other: "{0} mil pr. gallon"
            },
            digitalTerabyte: {
                one: "{0} terabyte",
                other: "{0} terabyte"
            },
            digitalTerabit: {
                one: "{0} terabit",
                other: "{0} terabit"
            },
            digitalGigabyte: {
                one: "{0} gigabyte",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} gigabit",
                other: "{0} gigabit"
            },
            digitalMegabyte: {
                one: "{0} megabyte",
                other: "{0} megabyte"
            },
            digitalMegabit: {
                one: "{0} megabit",
                other: "{0} megabit"
            },
            digitalKilobyte: {
                one: "{0} kilobyte",
                other: "{0} kilobyte"
            },
            digitalKilobit: {
                one: "{0} kilobit",
                other: "{0} kilobit"
            },
            digitalByte: _dus356,
            digitalBit: _dus338,
            durationCentury: {
                one: "{0} århundrede",
                other: "{0} århundreder"
            },
            durationYear: _dus322,
            durationMonth: {
                one: "{0} måned",
                other: "{0} måneder"
            },
            durationWeek: _dus353,
            durationDay: _dus354,
            durationHour: {
                one: "{0} time",
                other: "{0} timer"
            },
            durationMinute: {
                one: "{0} minut",
                other: "{0} minutter"
            },
            durationSecond: {
                one: "{0} sekund",
                other: "{0} sekunder"
            },
            durationMillisecond: {
                one: "{0} millisekund",
                other: "{0} millisekunder"
            },
            durationMicrosecond: {
                one: "{0} mikrosekund",
                other: "{0} mikrosekunder"
            },
            durationNanosecond: {
                one: "{0} nanosekund",
                other: "{0} nanosekunder"
            },
            electricAmpere: {
                one: "{0} ampere",
                other: "{0} ampere"
            },
            electricMilliampere: {
                one: "{0} milliampere",
                other: "{0} milliampere"
            },
            electricOhm: {
                one: "{0} ohm",
                other: "{0} ohm"
            },
            electricVolt: {
                one: "{0} volt",
                other: "{0} volt"
            },
            energyKilocalorie: {
                one: "{0} kilokalorie",
                other: "{0} kilokalorier"
            },
            energyCalorie: _dus398,
            energyFoodcalorie: _dus398,
            energyKilojoule: {
                one: "{0} kilojoule",
                other: "{0} kilojoule"
            },
            energyJoule: {
                one: "{0} joule",
                other: "{0} joule"
            },
            energyKilowattHour: {
                one: "kilowatt-time",
                other: "{0} kilowatt-timer"
            },
            frequencyGigahertz: {
                one: "{0} gigahertz",
                other: "{0} gigahertz"
            },
            frequencyMegahertz: {
                one: "{0} megahertz",
                other: "{0} megahertz"
            },
            frequencyKilohertz: {
                one: "{0} kilohertz",
                other: "{0} kilohertz"
            },
            frequencyHertz: {
                one: "{0} hertz",
                other: "{0} hertz"
            },
            lengthKilometer: {
                one: "{0} kilometer",
                other: "{0} kilometer"
            },
            lengthMeter: {
                one: "{0} meter",
                other: "{0} meter"
            },
            lengthDecimeter: {
                one: "{0} decimeter",
                other: "{0} decimeter"
            },
            lengthCentimeter: {
                one: "{0} centimeter",
                other: "{0} centimeter"
            },
            lengthMillimeter: {
                one: "{0} millimeter",
                other: "{0} millimeter"
            },
            lengthMicrometer: {
                one: "{0} mikrometer",
                other: "{0} mikrometer"
            },
            lengthNanometer: {
                one: "{0} nanometer",
                other: "{0} nanometer"
            },
            lengthPicometer: {
                one: "{0} pikometer",
                other: "{0} pikometer"
            },
            lengthMile: {
                one: "{0} engelsk mil",
                other: "{0} engelske mil"
            },
            lengthYard: {
                one: "{0} engelsk yard",
                other: "{0} engelske yard"
            },
            lengthFoot: _dus339,
            lengthInch: _dus379,
            lengthParsec: {
                one: "{0} parsec",
                other: "{0} parsec"
            },
            lengthLightYear: _dus371,
            lengthAstronomicalUnit: {
                one: "{0} astronomisk enhed",
                other: "{0} astronomiske enheder"
            },
            lengthNauticalMile: _dus372,
            lengthMileScandinavian: {
                one: "{0} svensk mil",
                other: "{0} svenske mil"
            },
            lightLux: {
                one: "{0} lux",
                other: "{0} lux"
            },
            massMetricTon: {
                one: "{0} ton",
                other: "{0} tons"
            },
            massKilogram: {
                one: "{0} kilogram",
                other: "{0} kilogram"
            },
            massGram: {
                one: "{0} gram",
                other: "{0} gram"
            },
            massMilligram: {
                one: "{0} milligram",
                other: "{0} milligram"
            },
            massMicrogram: {
                one: "{0} mikrogram",
                other: "{0} mikrogram"
            },
            massTon: {
                one: "{0} short ton",
                other: "{0} short ton"
            },
            massPound: _dus357,
            massOunce: {
                one: "{0} ounce",
                other: "{0} ounces"
            },
            massOunceTroy: {
                one: "{0} troy ounce",
                other: "{0} troy ounces"
            },
            massCarat: _dus370,
            powerGigawatt: {
                one: "{0} gigawatt",
                other: "{0} gigawatt"
            },
            powerMegawatt: {
                one: "{0} megawatt",
                other: "{0} megawatt"
            },
            powerKilowatt: {
                one: "{0} kilowatt",
                other: "{0} kilowatt"
            },
            powerWatt: {
                one: "{0} watt",
                other: "{0} watt"
            },
            powerMilliwatt: {
                one: "{0} milliwatt",
                other: "{0} milliwatt"
            },
            powerHorsepower: {
                one: "{0} hestekraft",
                other: "{0} hestekræfter"
            },
            pressureHectopascal: {
                one: "{0} hektopascal",
                other: "{0} hektopascal"
            },
            pressureMillimeterOfMercury: {
                one: "{0} millimeter kviksølv",
                other: "{0} millimeter kviksølv"
            },
            pressurePoundPerSquareInch: {
                one: "{0} pounds pr. kvadrattomme",
                other: "{0} pounds pr. kvadrattommer"
            },
            pressureInchHg: {
                one: "{0} tomme kviksølv",
                other: "{0} tommer kviksølv"
            },
            pressureMillibar: {
                one: "{0} millibar",
                other: "{0} millibar"
            },
            speedKilometerPerHour: {
                one: "kilometer i timen",
                other: "{0} kilometer i timen"
            },
            speedMeterPerSecond: {
                one: "{0} meter i sekundet",
                other: "{0} meter i sekundet"
            },
            speedMilePerHour: {
                one: "{0} engelsk mil i timen",
                other: "{0} engelske mil i timen"
            },
            speedKnot: _dus358,
            temperatureGeneric: _dus36,
            temperatureCelsius: {
                one: "{0} grad celsius",
                other: "{0} grader celsius"
            },
            temperatureFahrenheit: {
                one: "{0} grad fahrenheit",
                other: "{0} grader fahrenheit"
            },
            temperatureKelvin: {
                one: "{0} kelvin",
                other: "{0} kelvin"
            },
            volumeCubicKilometer: {
                one: "{0} kubikkilometer",
                other: "{0} kubikkilometer"
            },
            volumeCubicMeter: {
                one: "{0} kubikmeter",
                other: "{0} kubikmeter"
            },
            volumeCubicCentimeter: {
                one: "{0} kubikcentimeter",
                other: "{0} kubikcentimeter"
            },
            volumeCubicMile: {
                one: "{0} kubik-engelsk mil",
                other: "{0} kubik-engelske mil"
            },
            volumeCubicYard: {
                one: "{0} kubik-engelske yard",
                other: "{0} kubik-engelske yard"
            },
            volumeCubicFoot: {
                one: "{0} kubikfod",
                other: "{0} kubikfod"
            },
            volumeCubicInch: {
                one: "{0} kubiktomme",
                other: "{0} kubiktommer"
            },
            volumeMegaliter: {
                one: "{0} megaliter",
                other: "{0} megaliter"
            },
            volumeHectoliter: {
                one: "{0} hektoliter",
                other: "{0} hektoliter"
            },
            volumeLiter: {
                one: "{0} liter",
                other: "{0} liter"
            },
            volumeDeciliter: {
                one: "{0} deciliter",
                other: "{0} deciliter"
            },
            volumeCentiliter: {
                one: "{0} centiliter",
                other: "{0} centiliter"
            },
            volumeMilliliter: {
                one: "{0} milliliter",
                other: "{0} milliliter"
            },
            volumePintMetric: {
                one: "{0} metrisk pint",
                other: "{0} metriske pints"
            },
            volumeCupMetric: {
                one: "{0} metrisk kop",
                other: "{0} metriske kopper"
            },
            volumeAcreFoot: {
                one: "{0} acre-fod",
                other: "{0} acre-fod"
            },
            volumeGallon: {
                one: "{0} gallon",
                other: "{0} gallons"
            },
            volumeQuart: {
                one: "{0} engelsk quart",
                other: "{0} engelske quarts"
            },
            volumePint: {
                one: "{0} pint",
                other: "{0} pints"
            },
            volumeCup: {
                one: "cup",
                other: "{0} cups"
            },
            volumeFluidOunce: {
                one: "{0} engelsk fluid ounce",
                other: "{0} engelske fluid ounces"
            },
            volumeTablespoon: {
                one: "{0} spiseske",
                other: "{0} spiseskeer"
            },
            volumeTeaspoon: {
                one: "{0} teske",
                other: "{0} teskeer"
            }
        },
        compoundUnit: {
            per: "{0} pr. {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                one: "{0} G",
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: _dus3116,
            angleRadian: {
                one: "{0} radian",
                other: "{0} radian"
            },
            angleDegree: _dus36,
            angleArcMinute: _dus37,
            angleArcSecond: _dus38,
            areaSquareKilometer: {
                one: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                one: "{0} ha",
                other: "{0} ha"
            },
            areaSquareMeter: {
                one: "{0} m²",
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: _dus340,
            areaAcre: {
                one: "{0} ac",
                other: "{0} ac"
            },
            areaSquareYard: {
                one: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: _dus3112,
            areaSquareInch: {
                one: "{0} in²",
                other: "{0} in²"
            },
            concentrKarat: {
                one: "{0} kt",
                other: "{0} kt"
            },
            consumptionLiterPerKilometer: {
                one: "{0} l/km",
                other: "{0} l/km"
            },
            "consumptionLiterPer-100kilometers": _dus3101,
            consumptionMilePerGallon: {
                one: "{0} mpg",
                other: "{0} mpg"
            },
            digitalTerabyte: {
                one: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gbit",
                other: "{0} Gbit"
            },
            digitalMegabyte: {
                one: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: {
                one: "{0} kB",
                other: "{0} kB"
            },
            digitalKilobit: {
                one: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: _dus356,
            digitalBit: _dus338,
            durationCentury: _dus359,
            durationYear: _dus322,
            durationMonth: {
                one: "{0} md.",
                other: "{0} mdr."
            },
            durationWeek: _dus353,
            durationDay: _dus354,
            durationHour: _dus312,
            durationMinute: {
                one: "{0} min.",
                other: "{0} min."
            },
            durationSecond: {
                one: "{0} sek.",
                other: "{0} sek."
            },
            durationMillisecond: _dus323,
            durationMicrosecond: {
                one: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: {
                one: "{0} kcal",
                other: "{0} kcal"
            },
            energyCalorie: {
                one: "{0} cal",
                other: "{0} cal"
            },
            energyFoodcalorie: {
                one: "{0} Cal",
                other: "{0} Cal"
            },
            energyKilojoule: {
                one: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: _dus324,
            lengthMeter: _dus313,
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: _dus325,
            lengthMillimeter: _dus326,
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: {
                one: "{0} pm",
                other: "{0} pm"
            },
            lengthMile: _dus341,
            lengthYard: _dus360,
            lengthFoot: _dus339,
            lengthInch: _dus379,
            lengthParsec: _dus327,
            lengthLightYear: {
                one: "{0} ly",
                other: "{0} ly"
            },
            lengthAstronomicalUnit: _dus328,
            lengthNauticalMile: {
                one: "{0} sm",
                other: "{0} sm"
            },
            lengthMileScandinavian: {
                one: "{0} smi",
                other: "{0} smi"
            },
            lightLux: {
                one: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: _dus312,
            massKilogram: _dus329,
            massGram: _dus314,
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} µg",
                other: "{0} µg"
            },
            massTon: _dus330,
            massPound: {
                one: "{0} lb",
                other: "{0} lb"
            },
            massOunce: {
                one: "{0} oz",
                other: "{0} oz"
            },
            massOunceTroy: {
                one: "{0} oz t",
                other: "{0} oz t"
            },
            massCarat: {
                one: "{0} kt.",
                other: "{0} kt."
            },
            powerGigawatt: {
                one: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: {
                one: "{0} kW",
                other: "{0} kW"
            },
            powerWatt: {
                one: "{0} W",
                other: "{0} W"
            },
            powerMilliwatt: {
                one: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: {
                one: "{0} hk",
                other: "{0} hk"
            },
            pressureHectopascal: {
                one: "{0} hPa",
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                one: "{0} mmHg",
                other: "{0} mmHg"
            },
            pressurePoundPerSquareInch: {
                one: "{0} psi",
                other: "{0} psi"
            },
            pressureInchHg: {
                one: "{0} # Hg",
                other: "{0} # Hg"
            },
            pressureMillibar: {
                one: "{0} mbar",
                other: "{0} mbar"
            },
            speedKilometerPerHour: {
                one: "{0} km/t.",
                other: "{0} km/t."
            },
            speedMeterPerSecond: {
                one: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: _dus342,
            speedKnot: _dus358,
            temperatureGeneric: _dus36,
            temperatureCelsius: _dus315,
            temperatureFahrenheit: _dus316,
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: {
                one: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMeter: {
                one: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: _dus343,
            volumeCubicYard: {
                one: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: _dus344,
            volumeMegaliter: {
                one: "{0} ML",
                other: "{0} ML"
            },
            volumeHectoliter: {
                one: "{0} hl",
                other: "{0} hl"
            },
            volumeLiter: _dus317,
            volumeDeciliter: {
                one: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} cl",
                other: "{0} cl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                other: "{0} ml"
            },
            volumePintMetric: {
                one: "mpt",
                other: "{0} mpt"
            },
            volumeCupMetric: {
                one: "{0} mc",
                other: "{0} mc"
            },
            volumeAcreFoot: {
                one: "{0} ac ft",
                other: "{0} ac ft"
            },
            volumeGallon: {
                one: "{0} gal",
                other: "{0} gal"
            },
            volumeQuart: {
                one: "{0} qt",
                other: "{0} qt"
            },
            volumePint: {
                one: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: {
                one: "{0} c",
                other: "{0} c"
            },
            volumeFluidOunce: {
                one: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} spsk.",
                other: "{0} spsk."
            },
            volumeTeaspoon: {
                one: "{0} tsk.",
                other: "{0} tsk."
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            massStone: {
                other: "{0} st"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                one: "{0}G",
                other: "{0}G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0}m/s²",
                other: "{0}m/s²"
            },
            angleDegree: _dus36,
            angleArcMinute: _dus37,
            angleArcSecond: _dus38,
            areaSquareKilometer: {
                one: "{0}km²",
                other: "{0}km²"
            },
            areaHectare: {
                one: "{0}ha",
                other: "{0}ha"
            },
            areaSquareMeter: {
                one: "{0}m²",
                other: "{0}m²"
            },
            areaSquareMile: _dus340,
            areaAcre: {
                one: "{0}ac",
                other: "{0}ac"
            },
            areaSquareFoot: {
                one: "{0} ft²",
                other: "{0} ft²"
            },
            "consumptionLiterPer-100kilometers": _dus3101,
            durationCentury: _dus359,
            durationYear: _dus322,
            durationMonth: _dus313,
            durationWeek: {
                one: "{0} u",
                other: "{0} u"
            },
            durationDay: {
                one: "{0} d",
                other: "{0} d"
            },
            durationHour: _dus312,
            durationMinute: {
                one: "{0} m",
                other: "{0} min"
            },
            durationSecond: {
                one: "{0} s",
                other: "{0} s"
            },
            durationMillisecond: _dus323,
            durationMicrosecond: {
                one: "{0}μs",
                other: "{0}μs"
            },
            durationNanosecond: {
                one: "{0}ns",
                other: "{0}ns"
            },
            lengthKilometer: _dus324,
            lengthMeter: _dus313,
            lengthDecimeter: {
                one: "{0}dm",
                other: "{0}dm"
            },
            lengthCentimeter: _dus325,
            lengthMillimeter: _dus326,
            lengthMicrometer: {
                one: "{0}μm",
                other: "{0}μm"
            },
            lengthNanometer: {
                one: "{0}nm",
                other: "{0}nm"
            },
            lengthPicometer: {
                one: "{0}pm",
                other: "{0}pm"
            },
            lengthMile: _dus341,
            lengthYard: _dus360,
            lengthFoot: _dus339,
            lengthInch: {
                one: '{0}"',
                other: '{0}"'
            },
            lengthParsec: _dus327,
            lengthLightYear: _dus371,
            lengthAstronomicalUnit: _dus328,
            lengthNauticalMile: _dus372,
            lengthMileScandinavian: {
                one: "{0}sv.mil",
                other: "{0}sv.mil"
            },
            massMetricTon: {
                one: "{0}t",
                other: "{0}t"
            },
            massKilogram: _dus329,
            massGram: _dus314,
            massMilligram: {
                one: "{0}mg",
                other: "{0}mg"
            },
            massTon: _dus330,
            massPound: _dus357,
            massOunce: {
                one: "{0} unse",
                other: "{0} unser"
            },
            powerKilowatt: {
                one: "{0}kW",
                other: "{0}kW"
            },
            powerWatt: {
                one: "{0}W",
                other: "{0}W"
            },
            powerHorsepower: {
                one: "{0}hk",
                other: "{0}hk"
            },
            pressureHectopascal: {
                one: "{0}hPa",
                other: "{0}hPa"
            },
            pressureMillimeterOfMercury: {
                one: "{0}mm Hg",
                other: "{0}mm Hg"
            },
            pressureInchHg: {
                one: '{0}" Hg',
                other: '{0}" Hg'
            },
            pressureMillibar: {
                one: "{0}mbar",
                other: "{0}mbar"
            },
            speedKilometerPerHour: {
                one: "{0} km/t",
                other: "{0} km/t"
            },
            speedMeterPerSecond: {
                one: "{0}m/s",
                other: "{0}m/s"
            },
            speedMilePerHour: _dus342,
            temperatureGeneric: _dus36,
            temperatureCelsius: _dus315,
            temperatureFahrenheit: _dus316,
            temperatureKelvin: {
                one: "{0}K",
                other: "{0}K"
            },
            volumeCubicKilometer: {
                one: "{0}km³",
                other: "{0}km³"
            },
            volumeCubicMeter: {
                one: "{0}m³",
                other: "{0}m³"
            },
            volumeCubicCentimeter: {
                one: "{0}cm³",
                other: "{0}cm³"
            },
            volumeCubicMile: _dus343,
            volumeCubicFoot: {
                one: "{0} fod³",
                other: "{0} fod³"
            },
            volumeCubicInch: _dus344,
            volumeMegaliter: {
                one: "{0}ML",
                other: "{0}ML"
            },
            volumeHectoliter: {
                one: "{0}hL",
                other: "{0}hL"
            },
            volumeLiter: _dus317,
            volumeDeciliter: {
                one: "{0}dL",
                other: "{0}dL"
            },
            volumeMilliliter: {
                one: "{0}mL",
                other: "{0}mL"
            },
            volumeTablespoon: {
                one: "{0} spsk",
                other: "{0} spsk"
            },
            volumeTeaspoon: {
                one: "{0} tsk",
                other: "{0} tsk"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH.mm", "-HH.mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "{0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} (+1)",
        standard: "{0} (+0)"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "æ", "ø", "å" ],
        auxiliary: [ "á", "à", "â", "ç", "é", "è", "ê", "ë", "í", "î", "ï", "ñ", "ó", "ô", "ú", "ù", "û", "ÿ", "ü", "ä", "ǿ", "ö", "œ" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "Æ", "Ø", "Å" ],
        punctuation: [ "\\-", "‐", "–", ",", ";", "\\:", "!", "?", ".", "…", "'", "‘", "’", '"', "“", "”", "(", ")", "\\[", "\\]", "§", "@", "*", "/", "\\&", "#", "†", "′", "″" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _dus3523,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _dus3574,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _dus3574,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _dus3523,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _dus3523,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _dus3523,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _dus3523,
        digits: "renderEthiopic"
    },
    finance: _dus3525,
    fullwide: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _dus3523,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _dus3523,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _dus3523,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _dus3523,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _dus3532,
    hansfin: _dus3535,
    hant: _dus3532,
    hantfin: _dus3535,
    hebr: {
        symbols: _dus3523,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _dus3523,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _dus3532,
    jpanfin: _dus3535,
    kali: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _dus3523,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _dus3523,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _dus3523,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _dus3523,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _dus3523,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _dus3523,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _dus3523,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _dus3523,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _dus3525,
    nkoo: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _dus3523,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _dus3523,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _dus3523,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _dus3523,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _dus3523,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _dus3523,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _dus3525,
    vaii: {
        symbols: _dus3523,
        formats: _dus3574,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _dus3523,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _dus3565,
        datePartsOrder: "dmy",
        dateIntervalFormats: _dus3569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _dus3553,
        dayPeriods: _dus3566,
        monthNames: _dus3560,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _dus3544,
        fields: _dus3577
    },
    chinese: _dus3580,
    coptic: {
        dateFormats: _dus3565,
        datePartsOrder: "dmy",
        dateIntervalFormats: _dus3569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _dus3553,
        dayPeriods: _dus3566,
        monthNames: {
            format: _dus3545,
            standAlone: _dus3545
        },
        eraNames: _dus3141,
        quarterNames: _dus3544,
        fields: _dus3577
    },
    dangi: _dus3580,
    ethioaa: _dus3578,
    ethiopic: {
        dateFormats: _dus3565,
        datePartsOrder: "dmy",
        dateIntervalFormats: _dus3569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _dus3553,
        dayPeriods: _dus3566,
        monthNames: {
            format: _dus3547,
            standAlone: _dus3547
        },
        eraNames: _dus3141,
        quarterNames: _dus3544,
        fields: _dus3577
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE 'den' d. MMMM y",
                longDate: "d. MMMM y",
                mediumDate: "d. MMM y",
                shortDate: "dd/MM/y",
                fullTime: "HH.mm.ss zzzz",
                longTime: "HH.mm.ss z",
                mediumTime: "HH.mm.ss",
                shortTime: "HH.mm",
                shortDateTime: "dd/MM/y HH.mm",
                mediumDateTime: "d. MMM y HH.mm.ss",
                longDateTime: "d. MMMM y 'kl'. HH.mm.ss z",
                fullDateTime: "EEEE 'den' d. MMMM y 'kl'. HH.mm.ss zzzz"
            },
            cldr: {
                d: "d.",
                E: "ccc",
                Ed: "E 'den' d.",
                Ehm: "E h.mm a",
                EHm: "E HH.mm",
                Ehms: "E h.mm.ss a",
                EHms: "E HH.mm.ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d. MMM y G",
                GyMMMEd: "E d. MMM y G",
                h: "h a",
                H: "HH",
                hm: "h.mm a",
                Hm: "HH.mm",
                hms: "h.mm.ss a",
                Hms: "HH.mm.ss",
                hmsv: "h.mm.ss a v",
                Hmsv: "HH.mm.ss v",
                hmv: "h.mm a v",
                Hmv: "HH.mm v",
                M: "M",
                Md: "d/M",
                MEd: "E d/M",
                MMdd: "dd/MM",
                MMM: "MMM",
                MMMd: "d. MMM",
                MMMEd: "E d. MMM",
                MMMMd: "d. MMMM",
                MMMMEd: "E d. MMMM",
                ms: "mm.ss",
                y: "y",
                yM: "M/y",
                yMd: "d/M/y",
                yMEd: "E d/M/y",
                yMM: "MM/y",
                yMMM: "MMM y",
                yMMMd: "d. MMM y",
                yMMMEd: "E d. MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d.–d."
            },
            h: _dus310,
            H: {
                H: "HH–HH"
            },
            hm: _dus3150,
            Hm: _dus366,
            hmv: _dus3178,
            Hmv: _dus384,
            hv: _dus336,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            Md: _dus385,
            MEd: _dus3114,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _dus377,
            MMMEd: _dus3394,
            y: {
                y: "y–y"
            },
            yM: {
                M: "MM/y – MM/y",
                y: "MM/y – MM/y"
            },
            yMd: {
                d: "dd/MM/y – dd/MM/y",
                M: "dd/MM/y – dd/MM/y",
                y: "dd/MM/y – dd/MM/y"
            },
            yMEd: {
                d: "E dd/MM/y – E dd/MM/y",
                M: "E dd/MM/y – E dd/MM/y",
                y: "E dd/MM/y – E dd/MM/y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "d.–d. MMM y",
                M: "d. MMM – d. MMM y",
                y: "d. MMM y – d. MMM y"
            },
            yMMMEd: {
                d: "E 'den' d. – E 'den' d. MMM y",
                M: "E 'den' d. MMM – E 'den' d. MMM y",
                y: "E 'den' d. MMM y – E 'den' d. MMM y"
            },
            yMMMM: {
                M: "MMMM–MMMM y",
                y: "MMMM y – MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _dus3553,
        dayPeriods: _dus3566,
        monthNames: _dus3560,
        eraNames: {
            wide: [ "f.Kr.", "e.Kr." ],
            abbreviated: [ "f.Kr.", "e.Kr." ]
        },
        quarterNames: _dus3544,
        fields: _dus3577
    },
    hebrew: {
        dateFormats: _dus3565,
        datePartsOrder: "dmy",
        dateIntervalFormats: _dus3569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _dus3553,
        dayPeriods: _dus3566,
        monthNames: {
            format: _dus3542,
            standAlone: _dus3542
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _dus3544,
        fields: _dus3577
    },
    indian: {
        dateFormats: _dus3565,
        datePartsOrder: "dmy",
        dateIntervalFormats: _dus3569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _dus3553,
        dayPeriods: _dus3566,
        monthNames: {
            format: _dus3548,
            standAlone: _dus3548
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _dus3544,
        fields: _dus3577
    },
    islamic: _dus3579,
    "islamic-umalqura": _dus3579,
    "islamic-tbla": _dus3579,
    "islamic-civil": _dus3579,
    "islamic-rgsa": _dus3579,
    iso8601: _dus3578,
    japanese: {
        dateFormats: _dus3565,
        datePartsOrder: "dmy",
        dateIntervalFormats: _dus3569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _dus3553,
        dayPeriods: _dus3566,
        monthNames: _dus3560,
        eraNames: {
            wide: _dus3575,
            abbreviated: _dus3575
        },
        quarterNames: _dus3544,
        fields: _dus3577
    },
    persian: {
        dateFormats: _dus3565,
        datePartsOrder: "dmy",
        dateIntervalFormats: _dus3569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _dus3553,
        dayPeriods: _dus3566,
        monthNames: {
            format: _dus3543,
            standAlone: _dus3543
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _dus3544,
        fields: _dus3577
    },
    roc: {
        dateFormats: _dus3565,
        datePartsOrder: "dmy",
        dateIntervalFormats: _dus3569,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _dus3553,
        dayPeriods: _dus3566,
        monthNames: _dus3560,
        eraNames: {
            wide: _dus311,
            abbreviated: _dus311
        },
        quarterNames: _dus3544,
        fields: _dus3577
    },
    islamicc: _dus3578
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), t = parseInt(n.toString().replace(/^[^.]*\.?|0+$/g, ""), 10) || 0;
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1 || !(t === 0) && (i === 0 || i === 1)) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinalCommon(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderSpelloutCardinalCommon = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalCommon(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalCommon(Math.floor(n)) + " komma " + this.renderSpelloutCardinalCommon(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalCommon(Math.floor(n / 1e15)) + " billiarder" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalCommon(n % 1e15));
    if (n >= 1e15) return "billiard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalCommon(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalCommon(Math.floor(n / 1e12)) + " billioner" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalCommon(n % 1e12));
    if (n >= 1e12) return "billion" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalCommon(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalCommon(Math.floor(n / 1e9)) + " milliarder" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalCommon(n % 1e9));
    if (n >= 1e9) return "milliard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalCommon(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalCommon(Math.floor(n / 1e6)) + " millioner" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalCommon(n % 1e6));
    if (n >= 1e6) return "million" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalCommon(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e3)) + " tusinde" + (n === 2e3 ? "" : " " + this.renderAndSmall(n % 1e3));
    if (n >= 1e3) return "tusinde" + (n === 1e3 ? "" : " " + this.renderAndSmall(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinalNeuter(Math.floor(n / 100)) + "­hundrede" + (n === 200 ? "" : " og " + this.renderSpelloutCardinalCommon(n % 100));
    if (n >= 100) return "hundrede" + (n === 100 ? "" : " og " + this.renderSpelloutCardinalCommon(n % 100));
    if (n >= 90) return (n === 90 ? "" : this.renderSpelloutCardinalCommon(n % 10) + "­og­") + "halvfems";
    if (n >= 80) return (n === 80 ? "" : this.renderSpelloutCardinalCommon(n % 10) + "­og­") + "firs";
    if (n >= 70) return (n === 70 ? "" : this.renderSpelloutCardinalCommon(n % 10) + "­og­") + "halvfjerds";
    if (n >= 60) return (n === 60 ? "" : this.renderSpelloutCardinalCommon(n % 10) + "­og­") + "tres";
    if (n >= 50) return (n === 50 ? "" : this.renderSpelloutCardinalCommon(n % 10) + "­og­") + "halvtreds";
    if (n >= 40) return (n === 40 ? "" : this.renderSpelloutCardinalCommon(n % 10) + "­og­") + "fyrre";
    if (n >= 30) return (n === 30 ? "" : this.renderSpelloutCardinalCommon(n % 10) + "­og­") + "tredive";
    if (n >= 20) return (n === 20 ? "" : this.renderSpelloutCardinalCommon(n % 10) + "­og­") + "tyve";
    if (n >= 19) return "nitten";
    if (n >= 18) return "atten";
    if (n >= 17) return "sytten";
    if (n >= 16) return "seksten";
    if (n >= 15) return "femten";
    if (n >= 14) return "fjorten";
    if (n >= 13) return "tretten";
    if (n >= 12) return "tolv";
    if (n >= 11) return "elleve";
    if (n >= 10) return "ti";
    if (n >= 9) return "ni";
    if (n >= 8) return "otte";
    if (n >= 7) return "syv";
    if (n >= 6) return "seks";
    if (n >= 5) return "fem";
    if (n >= 4) return "fire";
    if (n >= 3) return "tre";
    if (n >= 2) return "to";
    if (n >= 1) return "en";
    if (n >= 0) return "nul";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderSpelloutCardinalNeuter = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalNeuter(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalNeuter(Math.floor(n)) + " komma " + this.renderSpelloutCardinalNeuter(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalCommon(Math.floor(n / 1e15)) + " billiarder" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e15));
    if (n >= 1e15) return "en billiard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalCommon(Math.floor(n / 1e12)) + " billioner" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e12));
    if (n >= 1e12) return "en billion" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalCommon(Math.floor(n / 1e9)) + " milliarder" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e9));
    if (n >= 1e9) return "en milliard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalCommon(Math.floor(n / 1e6)) + " millioner" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e6));
    if (n >= 1e6) return "en million" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e3)) + " tusind" + (n === 2e3 ? "" : " " + this.renderAndSmallN(n % 1e3));
    if (n >= 1e3) return "tusind" + (n === 1e3 ? "" : " " + this.renderAndSmallN(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinalNeuter(Math.floor(n / 100)) + "­hundrede" + (n === 200 ? "" : " og " + this.renderSpelloutCardinalNeuter(n % 100));
    if (n >= 100) return "hundrede" + (n === 100 ? "" : " og " + this.renderSpelloutCardinalNeuter(n % 100));
    if (n >= 2) return this.renderSpelloutCardinalCommon(n);
    if (n >= 1) return "et";
    if (n >= 0) return "nul";
};

inter.renderAndSmall = function(n) {
    if (n >= 100) return this.renderSpelloutCardinalCommon(n);
    if (n >= 0) return "og " + this.renderSpelloutCardinalCommon(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.renderAndSmallN = function(n) {
    if (n >= 100) return this.renderSpelloutCardinalNeuter(n);
    if (n >= 0) return "og " + this.renderSpelloutCardinalNeuter(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 41), P.timeZones.slice(42, 54), {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Påskeøen",
    countryId: "CL"
}, P.timeZones.slice(54, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones.slice(91, 98), {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 117), {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint-Barthélemy",
    countryId: "BL"
}, P.timeZones.slice(117, 119), P.timeZones.slice(120, 151), P.timeZones[152], {
    id: "America/Sao_Paulo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "São Paulo",
    countryId: "BR"
}, P.timeZones.slice(153, 158), {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azorerne",
    countryId: "PT"
}, P.timeZones[160], {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Kap Verde",
    countryId: "CV"
}, P.timeZones.slice(161, 166), P.timeZones.slice(167, 170), {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "De Kanariske Øer",
    countryId: "ES"
}, P.timeZones.slice(170, 176), {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lissabon",
    countryId: "PT"
}, P.timeZones.slice(177, 184), P.timeZones[185], {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Algier",
    countryId: "DZ"
}, P.timeZones.slice(188, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Beograd",
    countryId: "RS"
}, P.timeZones.slice(192, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bruxelles",
    countryId: "BE"
}, P.timeZones.slice(196, 200), P.timeZones.slice(201, 205), {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "København",
    countryId: "DK"
}, P.timeZones.slice(205, 221), {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Prag",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Rom",
    countryId: "IT"
}, P.timeZones.slice(223, 230), {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Vatikanet",
    countryId: "VA"
}, {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Warszawa",
    countryId: "PL"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Wien",
    countryId: "AT"
}, P.timeZones[233], {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zürich",
    countryId: "CH"
}, {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Athen",
    countryId: "GR"
}, P.timeZones.slice(236, 238), P.timeZones[239], {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bukarest",
    countryId: "RO"
}, P.timeZones.slice(240, 268), {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Addis Abeba",
    countryId: "ET"
}, P.timeZones.slice(269, 276), {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damaskus",
    countryId: "SY"
}, P.timeZones.slice(277, 286), {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moskva",
    countryId: "RU"
}, P.timeZones.slice(287, 293), {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Teheran",
    countryId: "IR"
}, P.timeZones.slice(294, 300), {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Réunion",
    countryId: "RE"
}, P.timeZones.slice(301, 312), {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Jekaterinburg",
    countryId: "RU"
}, P.timeZones.slice(312, 314), {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Maldiverne",
    countryId: "MV"
}, P.timeZones.slice(315, 319), {
    id: "Asia/Tashkent",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Tasjkent",
    countryId: "UZ"
}, P.timeZones.slice(321, 351), {
    id: "Asia/Hong_Kong",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Hongkong",
    countryId: "HK"
}, P.timeZones.slice(352, 355), {
    id: "Asia/Macau",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Macao",
    countryId: "MO"
}, P.timeZones.slice(356, 366), {
    id: "Asia/Yakutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jakutsk",
    countryId: "RU"
}, P.timeZones.slice(366, 372), P.timeZones.slice(373, 419));

inter.territories = [ _dus3383, _dus3420, _dus3302, _dus3303, _dus3427, _dus3434, _dus3384, _dus3258, _dus3229, _dus3304, _dus3144, _dus3448, _dus3337, _dus3305, _dus3207, _dus3158, _dus3396, _dus3410, _dus3462, _dus3363, _dus3259, _dus3260, _dus3364, _dus3306, _dus3261, _dus3230, _dus3208, _dus3262, _dus3231, _dus3263, _dus3459, _dus3307, _dus3148, _dus3338, _dus3232, _dus3339, _dus3397, _dus3264, _dus3308, _dus3309, _dus3233, _dus3435, _dus3385, _dus3466, _dus3463, _dus3184, _dus3209, _dus3165, _dus3149, _dus3310, _dus3340, _dus3442, _dus3421, _dus3341, _dus3365, _dus3195, _dus3265, _dus3234, _dus3266, _dus3472, _dus3467, _dus3484, _dus3473, _dus3488, _dus3477, _dus3487, _dus3476, _dus3485, _dus3482, _dus3478, _dus3159, _dus3311, _dus3312, _dus3267, _dus3268, _dus3386, _dus3428, _dus3269, _dus3270, _dus3313, _dus3422, _dus3423, _dus3196, _dus3398, _dus3271, _dus3314, _dus3411, _dus3443, _dus3315, _dus3210, _dus3235, _dus3316, _dus3211, _dus3342, _dus3272, _dus3366, _dus3317, _dus3367, _dus3197, _dus3343, _dus3318, _dus3236, _dus3412, _dus3237, _dus3212, _dus3449, _dus3273, _dus3319, _dus3399, _dus3400, _dus3238, _dus3368, _dus3198, _dus3199, _dus3239, _dus3240, _dus3387, _dus3241, _dus3274, _dus3275, _dus3213, _dus3242, _dus3243, _dus3132, _dus3166, _dus3344, _dus3369, _dus3214, _dus3200, _dus3388, _dus3320, _dus3276, _dus3321, _dus3244, _dus3201, _dus3277, _dus3278, _dus3279, _dus3280, _dus3245, _dus3413, _dus3281, _dus3370, _dus3345, _dus3371, _dus3372, _dus3246, _dus3322, _dus3373, _dus3202, _dus3215, _dus3282, _dus3414, _dus3374, _dus3389, _dus3346, _dus3283, _dus3450, _dus3468, _dus3247, _dus3460, _dus3483, _dus3284, _dus3248, _dus3347, _dus3375, _dus3376, _dus3377, _dus3429, _dus3285, _dus3216, _dus3217, _dus3390, _dus3348, _dus3218, _dus3286, _dus3203, _dus3451, _dus3452, _dus3349, _dus3424, _dus3425, _dus3219, _dus3415, _dus3436, _dus3204, _dus3323, _dus3220, _dus3249, _dus3430, _dus3324, _dus3205, _dus3325, _dus3221, _dus3453, _dus3326, _dus3391, _dus3222, _dus3327, _dus3287, _dus3250, _dus3288, _dus3437, _dus3464, _dus3392, _dus3401, _dus3474, _dus3486, _dus3402, _dus3223, _dus3378, _dus3416, _dus3289, _dus3290, _dus3291, _dus3403, _dus3404, _dus3350, _dus3405, _dus3351, _dus3352, _dus3292, _dus3475, _dus3293, _dus3353, _dus3379, _dus3426, _dus3224, _dus3294, _dus3469, _dus3295, _dus3354, _dus3355, _dus3454, _dus3438, _dus3444, _dus3328, _dus3329, _dus3461, _dus3251, _dus3465, _dus3406, _dus3252, _dus3330, _dus3225, _dus3331, _dus3393, _dus3332, _dus3206, _dus3296, _dus3226, _dus3455, _dus3185, _dus3333, _dus3407, _dus3470, _dus3253, _dus3297, _dus3334, _dus3187, _dus3254, _dus3298, _dus3255, _dus3299, _dus3380, _dus3300, _dus3417, _dus3356, _dus3142, _dus3456, _dus3445, _dus3457, _dus3381, _dus3301, _dus3439, {
    id: "QO",
    displayName: "Ydre Oceanien",
    regionId: "009",
    hasTimeZones: false
}, _dus3227, _dus3256, _dus3335, _dus3228, _dus3440, _dus3446, _dus3441, _dus3447, _dus3257 ];

inter.regions = [ _dus3420, _dus3427, _dus3410, _dus3462, _dus3435, _dus3466, _dus3463, _dus3482, _dus3478, _dus3422, _dus3450, _dus3468, _dus3460, _dus3451, _dus3452, _dus3436, _dus3453, _dus3454, _dus3438, _dus3444, _dus3461, _dus3142, _dus3456, _dus3445, _dus3457, _dus3446, _dus3441, _dus3447 ];

inter.countries = [ _dus3383, _dus3302, _dus3303, _dus3434, _dus3384, _dus3258, _dus3229, _dus3304, _dus3144, _dus3448, _dus3337, _dus3305, _dus3207, _dus3158, _dus3396, _dus3363, _dus3259, _dus3260, _dus3364, _dus3306, _dus3261, _dus3230, _dus3208, _dus3262, _dus3231, _dus3263, _dus3459, _dus3307, _dus3148, _dus3338, _dus3232, _dus3339, _dus3397, _dus3264, _dus3308, _dus3309, _dus3233, _dus3385, _dus3184, _dus3209, _dus3165, _dus3149, _dus3310, _dus3340, _dus3442, _dus3421, _dus3341, _dus3365, _dus3195, _dus3265, _dus3234, _dus3266, _dus3472, _dus3467, _dus3484, _dus3473, _dus3488, _dus3477, _dus3487, _dus3476, _dus3485, _dus3159, _dus3311, _dus3312, _dus3267, _dus3268, _dus3386, _dus3428, _dus3269, _dus3270, _dus3313, _dus3423, _dus3196, _dus3398, _dus3271, _dus3314, _dus3411, _dus3443, _dus3315, _dus3210, _dus3235, _dus3316, _dus3211, _dus3342, _dus3272, _dus3366, _dus3317, _dus3367, _dus3197, _dus3343, _dus3318, _dus3236, _dus3412, _dus3237, _dus3212, _dus3449, _dus3273, _dus3319, _dus3399, _dus3400, _dus3238, _dus3368, _dus3198, _dus3199, _dus3239, _dus3240, _dus3387, _dus3241, _dus3274, _dus3275, _dus3213, _dus3242, _dus3243, _dus3132, _dus3166, _dus3344, _dus3369, _dus3214, _dus3200, _dus3388, _dus3320, _dus3276, _dus3321, _dus3244, _dus3201, _dus3277, _dus3278, _dus3279, _dus3280, _dus3245, _dus3413, _dus3281, _dus3370, _dus3345, _dus3371, _dus3372, _dus3246, _dus3322, _dus3373, _dus3202, _dus3215, _dus3282, _dus3414, _dus3374, _dus3389, _dus3346, _dus3283, _dus3247, _dus3483, _dus3284, _dus3248, _dus3347, _dus3375, _dus3376, _dus3377, _dus3429, _dus3285, _dus3216, _dus3217, _dus3390, _dus3348, _dus3218, _dus3286, _dus3203, _dus3349, _dus3424, _dus3425, _dus3219, _dus3415, _dus3204, _dus3323, _dus3220, _dus3249, _dus3430, _dus3324, _dus3205, _dus3325, _dus3221, _dus3326, _dus3391, _dus3222, _dus3327, _dus3287, _dus3250, _dus3288, _dus3437, _dus3464, _dus3392, _dus3401, _dus3474, _dus3486, _dus3402, _dus3223, _dus3378, _dus3416, _dus3289, _dus3290, _dus3291, _dus3403, _dus3404, _dus3350, _dus3405, _dus3351, _dus3352, _dus3292, _dus3475, _dus3293, _dus3353, _dus3379, _dus3426, _dus3224, _dus3294, _dus3469, _dus3295, _dus3354, _dus3355, _dus3328, _dus3329, _dus3251, _dus3465, _dus3406, _dus3252, _dus3330, _dus3225, _dus3331, _dus3393, _dus3332, _dus3206, _dus3296, _dus3226, _dus3455, _dus3185, _dus3333, _dus3407, _dus3470, _dus3253, _dus3297, _dus3334, _dus3187, _dus3254, _dus3298, _dus3255, _dus3299, _dus3380, _dus3300, _dus3417, _dus3356, _dus3381, _dus3301, _dus3439, _dus3227, _dus3256, _dus3335, _dus3228, _dus3440, _dus3257 ];

inter.languages = [ {
    id: "ab",
    displayName: "abkhasisk"
}, {
    id: "ace",
    displayName: "achinesisk"
}, {
    id: "ach",
    displayName: "acoli"
}, {
    id: "ada",
    displayName: "adangme"
}, {
    id: "ady",
    displayName: "adyghe"
}, {
    id: "aa",
    displayName: "afar"
}, {
    id: "afh",
    displayName: "afrihili"
}, {
    id: "af",
    displayName: "afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ain",
    displayName: "ainu"
}, {
    id: "ak",
    displayName: "akan",
    nativeDisplayName: "Akan"
}, {
    id: "akk",
    displayName: "akkadisk"
}, {
    id: "ale",
    displayName: "aleutisk"
}, {
    id: "en_us",
    displayName: "amerikansk engelsk",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "enaresamisk",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "anp",
    displayName: "angika"
}, {
    id: "an",
    displayName: "aragonesisk"
}, {
    id: "arc",
    displayName: "aramæisk"
}, {
    id: "arp",
    displayName: "arapaho"
}, {
    id: "arw",
    displayName: "arawak"
}, {
    id: "rup",
    displayName: "arumænsk"
}, {
    id: "ast",
    displayName: "asturisk",
    nativeDisplayName: "asturianu"
}, {
    id: "den",
    displayName: "athapaskisk"
}, {
    id: "cch",
    displayName: "atsam"
}, {
    id: "en_au",
    displayName: "australsk engelsk",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "avarisk"
}, {
    id: "ae",
    displayName: "avestan"
}, {
    id: "awa",
    displayName: "awadhi"
}, {
    id: "ay",
    displayName: "aymara"
}, {
    id: "az",
    displayName: "aserbajdsjansk",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "bfd",
    displayName: "bafut"
}, {
    id: "ms",
    displayName: "malajisk",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bss",
    displayName: "bakossi"
}, {
    id: "ban",
    displayName: "balinesisk"
}, {
    id: "bal",
    displayName: "baluchi"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bax",
    displayName: "bamun"
}, {
    id: "ba",
    displayName: "bashkir"
}, {
    id: "bej",
    displayName: "beja"
}, {
    id: "bho",
    displayName: "bhojpuri"
}, {
    id: "bik",
    displayName: "bikol"
}, {
    id: "bin",
    displayName: "bini"
}, {
    id: "bi",
    displayName: "bislama"
}, {
    id: "byn",
    displayName: "blin"
}, {
    id: "zbl",
    displayName: "blissymboler"
}, {
    id: "bs",
    displayName: "bosnisk",
    nativeDisplayName: "bosanski"
}, {
    id: "bra",
    displayName: "braj"
}, {
    id: "br",
    displayName: "bretonsk",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "britisk engelsk",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "buginesisk"
}, {
    id: "bum",
    displayName: "bulu"
}, {
    id: "bua",
    displayName: "buriatisk"
}, {
    id: "cad",
    displayName: "caddo"
}, {
    id: "en_ca",
    displayName: "canadisk engelsk",
    nativeDisplayName: "Canadian English"
}, {
    id: "car",
    displayName: "caribisk"
}, {
    id: "ca",
    displayName: "catalansk",
    nativeDisplayName: "català"
}, {
    id: "cay",
    displayName: "cayuga"
}, {
    id: "ceb",
    displayName: "cebuano"
}, {
    id: "chg",
    displayName: "chagatai"
}, {
    id: "ch",
    displayName: "chamorro"
}, {
    id: "chy",
    displayName: "cheyenne"
}, {
    id: "chb",
    displayName: "chibcha"
}, {
    id: "kde",
    displayName: "makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "chn",
    displayName: "chinook"
}, {
    id: "chp",
    displayName: "chipewyan"
}, {
    id: "sn",
    displayName: "shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cho",
    displayName: "choctaw"
}, {
    id: "chk",
    displayName: "chuukese"
}, {
    id: "cv",
    displayName: "chuvash"
}, {
    id: "cr",
    displayName: "cree"
}, {
    id: "mus",
    displayName: "creek"
}, {
    id: "cy",
    displayName: "walisisk",
    nativeDisplayName: "Cymraeg"
}, {
    id: "dak",
    displayName: "dakota"
}, {
    id: "da",
    displayName: "dansk",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "dargwa"
}, {
    id: "se",
    displayName: "nordsamisk",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "dzg",
    displayName: "dazaga"
}, {
    id: "del",
    displayName: "delaware"
}, {
    id: "de",
    displayName: "tysk",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "dinka"
}, {
    id: "dv",
    displayName: "divehi"
}, {
    id: "doi",
    displayName: "dogri"
}, {
    id: "dgr",
    displayName: "dogrib"
}, {
    id: "dsb",
    displayName: "nedersorbisk",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "dyu",
    displayName: "dyula"
}, {
    id: "et",
    displayName: "estisk",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efik"
}, {
    id: "eka",
    displayName: "ekajuk"
}, {
    id: "guz",
    displayName: "gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "elx",
    displayName: "elamitisk"
}, {
    id: "en",
    displayName: "engelsk",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "erzya"
}, {
    id: "es",
    displayName: "spansk",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "europæisk spansk",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "mexicansk spansk",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "latinamerikansk spansk",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "baskisk",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ee",
    displayName: "ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "fang"
}, {
    id: "fat",
    displayName: "fanti"
}, {
    id: "fj",
    displayName: "fijiansk"
}, {
    id: "fil",
    displayName: "filippinsk",
    nativeDisplayName: "Filipino"
}, {
    id: "mul",
    displayName: "flere sprog"
}, {
    id: "fon",
    displayName: "fon"
}, {
    id: "fr",
    displayName: "fransk",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "canadisk fransk",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "schweizisk fransk",
    nativeDisplayName: "français suisse"
}, {
    id: "fur",
    displayName: "friulian",
    nativeDisplayName: "furlan"
}, {
    id: "phn",
    displayName: "fønikisk"
}, {
    id: "fo",
    displayName: "færøsk",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "ga"
}, {
    id: "ga",
    displayName: "irsk",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "gagauzisk"
}, {
    id: "gl",
    displayName: "galicisk",
    nativeDisplayName: "galego"
}, {
    id: "gay",
    displayName: "gayo"
}, {
    id: "gba",
    displayName: "gbaya"
}, {
    id: "gez",
    displayName: "geez"
}, {
    id: "bbj",
    displayName: "ghomala"
}, {
    id: "ki",
    displayName: "kikuyu",
    nativeDisplayName: "Gikuyu"
}, {
    id: "gil",
    displayName: "gilbertesisk"
}, {
    id: "gon",
    displayName: "gondi"
}, {
    id: "gor",
    displayName: "gorontalo"
}, {
    id: "got",
    displayName: "gotisk"
}, {
    id: "grb",
    displayName: "grebo"
}, {
    id: "gn",
    displayName: "guarani"
}, {
    id: "gwi",
    displayName: "gwichin"
}, {
    id: "gd",
    displayName: "skotsk gælisk",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "hai",
    displayName: "haida"
}, {
    id: "ht",
    displayName: "haitisk"
}, {
    id: "ha",
    displayName: "hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "hz",
    displayName: "herero"
}, {
    id: "bez",
    displayName: "bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hil",
    displayName: "hiligaynon"
}, {
    id: "ho",
    displayName: "hirimotu"
}, {
    id: "hit",
    displayName: "hittitisk"
}, {
    id: "hmn",
    displayName: "hmong"
}, {
    id: "hsb",
    displayName: "øvresorbisk",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "kroatisk",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "hupa"
}, {
    id: "iba",
    displayName: "iban"
}, {
    id: "ibb",
    displayName: "ibibio"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "io",
    displayName: "ido"
}, {
    id: "ig",
    displayName: "igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "iloko"
}, {
    id: "id",
    displayName: "indonesisk",
    nativeDisplayName: "Indonesia"
}, {
    id: "inh",
    displayName: "ingush"
}, {
    id: "ia",
    displayName: "interlingua"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "zxx",
    displayName: "intet sprogligt indhold"
}, {
    id: "iu",
    displayName: "inuktitut"
}, {
    id: "ik",
    displayName: "inupiaq"
}, {
    id: "sbp",
    displayName: "sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "nordndebele",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "italiensk",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "javanesisk"
}, {
    id: "kaj",
    displayName: "jju"
}, {
    id: "dyo",
    displayName: "jola-fonyi",
    nativeDisplayName: "joola"
}, {
    id: "jrb",
    displayName: "jødisk-arabisk"
}, {
    id: "jpr",
    displayName: "jødisk-persisk"
}, {
    id: "kbd",
    displayName: "kabardian"
}, {
    id: "kea",
    displayName: "kapverdisk",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kac",
    displayName: "kachin"
}, {
    id: "kkj",
    displayName: "kako",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "grønlandsk",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "xal",
    displayName: "kalmyk"
}, {
    id: "kbl",
    displayName: "kanembu"
}, {
    id: "kr",
    displayName: "kanuri"
}, {
    id: "kaa",
    displayName: "karakalpakisk"
}, {
    id: "krc",
    displayName: "karatjai-balkar"
}, {
    id: "krl",
    displayName: "karelsk"
}, {
    id: "csb",
    displayName: "kasjubisk"
}, {
    id: "kaw",
    displayName: "kawi"
}, {
    id: "kw",
    displayName: "cornisk",
    nativeDisplayName: "kernewek"
}, {
    id: "kha",
    displayName: "khasi"
}, {
    id: "naq",
    displayName: "nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "kho",
    displayName: "khotanesisk"
}, {
    id: "rof",
    displayName: "rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "machame",
    nativeDisplayName: "Kimachame"
}, {
    id: "kmb",
    displayName: "kimbundu"
}, {
    id: "rw",
    displayName: "kinyarwanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asu",
    nativeDisplayName: "Kipare"
}, {
    id: "rwk",
    displayName: "rwa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "shambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "swahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "congolesisk swahili",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "nwc",
    displayName: "klassisk newarisk"
}, {
    id: "syc",
    displayName: "klassisk syrisk"
}, {
    id: "tlh",
    displayName: "klingon"
}, {
    id: "bkm",
    displayName: "kom"
}, {
    id: "kv",
    displayName: "komi"
}, {
    id: "koi",
    displayName: "komi-permjakisk"
}, {
    id: "kg",
    displayName: "kongo"
}, {
    id: "cop",
    displayName: "koptisk"
}, {
    id: "kfo",
    displayName: "koro"
}, {
    id: "co",
    displayName: "korsikansk"
}, {
    id: "kos",
    displayName: "kosraean"
}, {
    id: "khq",
    displayName: "koyra-chiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "koyraboro senni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "kpe",
    displayName: "kpelle"
}, {
    id: "mfe",
    displayName: "morisyen",
    nativeDisplayName: "kreol morisien"
}, {
    id: "crh",
    displayName: "krim tyrkisk"
}, {
    id: "kj",
    displayName: "kuanyama"
}, {
    id: "ku",
    displayName: "kurdisk"
}, {
    id: "kru",
    displayName: "kurukh"
}, {
    id: "kut",
    displayName: "kutenaj"
}, {
    id: "nmg",
    displayName: "kwasio",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "kum",
    displayName: "kymyk"
}, {
    id: "ksh",
    displayName: "kölsch",
    nativeDisplayName: "Kölsch"
}, {
    id: "ebu",
    displayName: "kiembu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "lad",
    displayName: "ladino"
}, {
    id: "lah",
    displayName: "lahnda"
}, {
    id: "lkt",
    displayName: "lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lam",
    displayName: "lamba"
}, {
    id: "la",
    displayName: "latin"
}, {
    id: "lv",
    displayName: "lettisk",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "tongansk",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lez",
    displayName: "lezghian"
}, {
    id: "lt",
    displayName: "litauisk",
    nativeDisplayName: "lietuvių"
}, {
    id: "li",
    displayName: "limburgsk"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "jbo",
    displayName: "lojban"
}, {
    id: "loz",
    displayName: "lozi"
}, {
    id: "lua",
    displayName: "luba-Lulua"
}, {
    id: "lg",
    displayName: "ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "luiseno"
}, {
    id: "smj",
    displayName: "lulesamisk"
}, {
    id: "luy",
    displayName: "luyana",
    nativeDisplayName: "Luluhia"
}, {
    id: "lun",
    displayName: "lunda"
}, {
    id: "lus",
    displayName: "lushai"
}, {
    id: "lb",
    displayName: "luxembourgsk",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "masai",
    nativeDisplayName: "Maa"
}, {
    id: "mde",
    displayName: "maba"
}, {
    id: "mad",
    displayName: "madurese"
}, {
    id: "maf",
    displayName: "mafa"
}, {
    id: "mag",
    displayName: "magahi"
}, {
    id: "hu",
    displayName: "ungarsk",
    nativeDisplayName: "magyar"
}, {
    id: "mai",
    displayName: "maithili"
}, {
    id: "mak",
    displayName: "makasar"
}, {
    id: "mgh",
    displayName: "makhuwa-meetto",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "malagassisk",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "maltesisk",
    nativeDisplayName: "Malti"
}, {
    id: "mnc",
    displayName: "manchu"
}, {
    id: "mdr",
    displayName: "mandar"
}, {
    id: "man",
    displayName: "mandingo"
}, {
    id: "mni",
    displayName: "manipuri"
}, {
    id: "mi",
    displayName: "maori"
}, {
    id: "arn",
    displayName: "mapuche"
}, {
    id: "chm",
    displayName: "mari"
}, {
    id: "mh",
    displayName: "marshallese"
}, {
    id: "mwr",
    displayName: "marwari"
}, {
    id: "byv",
    displayName: "medumba"
}, {
    id: "men",
    displayName: "mende"
}, {
    id: "mgo",
    displayName: "meta",
    nativeDisplayName: "metaʼ"
}, {
    id: "mic",
    displayName: "micmac"
}, {
    id: "enm",
    displayName: "middelengelsk"
}, {
    id: "frm",
    displayName: "middelfransk"
}, {
    id: "dum",
    displayName: "middelhollandsk"
}, {
    id: "gmh",
    displayName: "middelhøjtysk"
}, {
    id: "mga",
    displayName: "middelirsk"
}, {
    id: "min",
    displayName: "minangkabau"
}, {
    id: "mwl",
    displayName: "mirandesisk"
}, {
    id: "moh",
    displayName: "mohawk"
}, {
    id: "mdf",
    displayName: "moksha"
}, {
    id: "ro_md",
    displayName: "moldovisk",
    nativeDisplayName: "moldovenească"
}, {
    id: "lol",
    displayName: "mongo"
}, {
    id: "mos",
    displayName: "mossi"
}, {
    id: "mua",
    displayName: "mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "mye",
    displayName: "myene"
}, {
    id: "nqo",
    displayName: "n-ko"
}, {
    id: "na",
    displayName: "nauru"
}, {
    id: "nv",
    displayName: "navajo"
}, {
    id: "jgo",
    displayName: "ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "ng",
    displayName: "ndonga"
}, {
    id: "nap",
    displayName: "neapolitansk"
}, {
    id: "nl",
    displayName: "hollandsk",
    nativeDisplayName: "Nederlands"
}, {
    id: "nds",
    displayName: "nedertysk"
}, {
    id: "new",
    displayName: "newari"
}, {
    id: "sba",
    displayName: "ngambay"
}, {
    id: "nia",
    displayName: "nias"
}, {
    id: "niu",
    displayName: "niuean"
}, {
    id: "nog",
    displayName: "nogai"
}, {
    id: "frr",
    displayName: "nordfrisisk"
}, {
    id: "nso",
    displayName: "nordsotho"
}, {
    id: "no",
    displayName: "norsk"
}, {
    id: "nb",
    displayName: "norsk bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "yav",
    displayName: "yangben",
    nativeDisplayName: "nuasue"
}, {
    id: "nym",
    displayName: "nyamwezi"
}, {
    id: "ny",
    displayName: "nyanja"
}, {
    id: "tog",
    displayName: "nyasa tongansk"
}, {
    id: "nn",
    displayName: "nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "nyo",
    displayName: "nyoro sprog"
}, {
    id: "nzi",
    displayName: "nzima"
}, {
    id: "oc",
    displayName: "occitansk"
}, {
    id: "oj",
    displayName: "ojibwa"
}, {
    id: "egy",
    displayName: "oldegyptisk"
}, {
    id: "ang",
    displayName: "oldengelsk"
}, {
    id: "fro",
    displayName: "oldfransk"
}, {
    id: "grc",
    displayName: "oldgræsk"
}, {
    id: "goh",
    displayName: "oldhøjtysk"
}, {
    id: "sga",
    displayName: "oldirsk"
}, {
    id: "non",
    displayName: "oldislandsk"
}, {
    id: "peo",
    displayName: "oldpersisk"
}, {
    id: "pro",
    displayName: "oldprovencalsk"
}, {
    id: "xog",
    displayName: "soga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "osage"
}, {
    id: "ota",
    displayName: "osmannisk-tyrkisk"
}, {
    id: "uz",
    displayName: "usbekisk",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pal",
    displayName: "pahlavi"
}, {
    id: "pau",
    displayName: "palauansk"
}, {
    id: "pi",
    displayName: "pali"
}, {
    id: "pam",
    displayName: "pampanga"
}, {
    id: "pag",
    displayName: "pangasinan"
}, {
    id: "pap",
    displayName: "papiamento"
}, {
    id: "pl",
    displayName: "polsk",
    nativeDisplayName: "polski"
}, {
    id: "pon",
    displayName: "ponape"
}, {
    id: "pt",
    displayName: "portugisisk",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "brasiliansk portugisisk",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "europæisk portugisisk",
    nativeDisplayName: "português europeu"
}, {
    id: "ff",
    displayName: "fulah",
    nativeDisplayName: "Pulaar"
}, {
    id: "quc",
    displayName: "quiché"
}, {
    id: "raj",
    displayName: "rajasthani"
}, {
    id: "rap",
    displayName: "rapanui"
}, {
    id: "rar",
    displayName: "rarotongan"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "rom",
    displayName: "romani"
}, {
    id: "ro",
    displayName: "rumænsk",
    nativeDisplayName: "română"
}, {
    id: "root",
    displayName: "rot"
}, {
    id: "cgg",
    displayName: "chiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "rætoromansk",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "quechua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "ssy",
    displayName: "saho"
}, {
    id: "sam",
    displayName: "samaritansk"
}, {
    id: "sm",
    displayName: "samoansk"
}, {
    id: "sad",
    displayName: "sandawe"
}, {
    id: "sa",
    displayName: "sanskrit"
}, {
    id: "sat",
    displayName: "santali"
}, {
    id: "sc",
    displayName: "sardinsk"
}, {
    id: "sas",
    displayName: "sasak"
}, {
    id: "de_ch",
    displayName: "schweizerhøjtysk",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "schweizertysk",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "sel",
    displayName: "selkupisk"
}, {
    id: "seh",
    displayName: "sena",
    nativeDisplayName: "sena"
}, {
    id: "see",
    displayName: "seneca"
}, {
    id: "sh",
    displayName: "serbokroatisk"
}, {
    id: "srr",
    displayName: "serer"
}, {
    id: "shn",
    displayName: "shan"
}, {
    id: "swb",
    displayName: "shimaore"
}, {
    id: "sq",
    displayName: "albansk",
    nativeDisplayName: "shqip"
}, {
    id: "nnh",
    displayName: "ngiemboon",
    nativeDisplayName: "Shwóŋò ngiembɔɔn"
}, {
    id: "scn",
    displayName: "siciliansk"
}, {
    id: "sid",
    displayName: "sidamo"
}, {
    id: "bla",
    displayName: "siksika"
}, {
    id: "sd",
    displayName: "sindhi"
}, {
    id: "sms",
    displayName: "skoltesamisk"
}, {
    id: "sco",
    displayName: "skotsk"
}, {
    id: "sk",
    displayName: "slovakisk",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "slovensk",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "sogdiansk"
}, {
    id: "snk",
    displayName: "soninke"
}, {
    id: "so",
    displayName: "somalisk",
    nativeDisplayName: "Soomaali"
}, {
    id: "srn",
    displayName: "sranan tongo"
}, {
    id: "suk",
    displayName: "sukuma"
}, {
    id: "sux",
    displayName: "sumerisk"
}, {
    id: "su",
    displayName: "sundanesisk"
}, {
    id: "fi",
    displayName: "finsk",
    nativeDisplayName: "suomi"
}, {
    id: "sus",
    displayName: "susu"
}, {
    id: "sv",
    displayName: "svensk",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "swati"
}, {
    id: "alt",
    displayName: "sydaltaisk"
}, {
    id: "az_arab",
    displayName: "sydaserbajdsjansk"
}, {
    id: "sdh",
    displayName: "sydkurdisk"
}, {
    id: "nr",
    displayName: "sydndebele"
}, {
    id: "sma",
    displayName: "sydsamisk"
}, {
    id: "st",
    displayName: "sydsotho"
}, {
    id: "syr",
    displayName: "syrisk"
}, {
    id: "sg",
    displayName: "sango",
    nativeDisplayName: "Sängö"
}, {
    id: "tl",
    displayName: "tagalog"
}, {
    id: "ty",
    displayName: "tahitiansk"
}, {
    id: "tg",
    displayName: "tajik"
}, {
    id: "tmh",
    displayName: "tamashek"
}, {
    id: "tzm",
    displayName: "centralmarokkansk tamazight",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "kabylisk",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "trv",
    displayName: "taroko"
}, {
    id: "twq",
    displayName: "tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "tatarisk"
}, {
    id: "shu",
    displayName: "tchadisk-arabisk"
}, {
    id: "tem",
    displayName: "temne"
}, {
    id: "ter",
    displayName: "tereno"
}, {
    id: "tet",
    displayName: "tetum"
}, {
    id: "nus",
    displayName: "nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "tig",
    displayName: "tigre"
}, {
    id: "tiv",
    displayName: "tivi"
}, {
    id: "vi",
    displayName: "vietnamesisk",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tli",
    displayName: "tlingit"
}, {
    id: "tpi",
    displayName: "tok pisin"
}, {
    id: "tkl",
    displayName: "tokelau"
}, {
    id: "lu",
    displayName: "luba-Katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tsi",
    displayName: "tsimshisk"
}, {
    id: "ts",
    displayName: "tsonga"
}, {
    id: "tn",
    displayName: "tswana"
}, {
    id: "tum",
    displayName: "tumbuka"
}, {
    id: "tvl",
    displayName: "tuvalu"
}, {
    id: "tyv",
    displayName: "tuvinian"
}, {
    id: "tw",
    displayName: "twi"
}, {
    id: "kcg",
    displayName: "tyap"
}, {
    id: "tk",
    displayName: "turkmensk",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "tyrkisk",
    nativeDisplayName: "Türkçe"
}, {
    id: "udm",
    displayName: "udmurt"
}, {
    id: "uga",
    displayName: "ugaristisk"
}, {
    id: "und",
    displayName: "ukendt sprog"
}, {
    id: "umb",
    displayName: "umbundu"
}, {
    id: "wa",
    displayName: "vallonsk"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "bgn",
    displayName: "vestbaluchi"
}, {
    id: "nl_be",
    displayName: "flamsk",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "volapyk",
    nativeDisplayName: "Volapük"
}, {
    id: "vot",
    displayName: "votisk"
}, {
    id: "wal",
    displayName: "walamo"
}, {
    id: "wbp",
    displayName: "walbiri"
}, {
    id: "wae",
    displayName: "walsertysk",
    nativeDisplayName: "Walser"
}, {
    id: "war",
    displayName: "waray"
}, {
    id: "was",
    displayName: "washo"
}, {
    id: "fy",
    displayName: "frisisk",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "wolof"
}, {
    id: "xh",
    displayName: "xhosa"
}, {
    id: "yao",
    displayName: "yao"
}, {
    id: "yap",
    displayName: "yapese"
}, {
    id: "ybb",
    displayName: "yemba"
}, {
    id: "zap",
    displayName: "zapotec"
}, {
    id: "dje",
    displayName: "zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "zaza"
}, {
    id: "zen",
    displayName: "zenaga"
}, {
    id: "za",
    displayName: "zhuang"
}, {
    id: "zun",
    displayName: "zuni"
}, {
    id: "yo",
    displayName: "yoruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islandsk",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "østrigsk tysk",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "frs",
    displayName: "østfrisisk"
}, {
    id: "cs",
    displayName: "tjekkisk",
    nativeDisplayName: "čeština"
}, {
    id: "bas",
    displayName: "basa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "hawaiiansk",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "græsk",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "hviderussisk",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bulgarsk",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "ossetisk",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "kirgisisk",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "makedonsk",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongolsk",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "tjetjensk",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "russisk",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "yakut",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "serbisk",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ukrainsk",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "kirkeslavisk",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "kasakhisk",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armensk",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "jiddisch",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "hebraisk",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uygurisk",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "arabisk",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "moderne standardarabisk",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "persisk",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "nordluri",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "mazenisk",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "pashto",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "sorani",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "kashmiri",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepalesisk",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marathisk",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "assamesisk",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengali",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "punjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gujarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamilsk",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malayalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "singalesisk",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "thai",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "lao",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibetansk",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "burmesisk",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "georgisk",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrinya",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amharisk",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "khmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "tamazight",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "tachelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "kinesisk",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japansk",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "forenklet kinesisk",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "kantonesisk",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "traditionelt kinesisk",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "sichuan yi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "cherokee",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "koreansk",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Dupl",
    displayName: "Duploya-stenografi"
}, {
    id: "Ital",
    displayName: "Olditalisk"
}, {
    id: "Afak",
    displayName: "afaka"
}, {
    id: "Hluw",
    displayName: "anatolske hieroglyffer"
}, {
    id: "Arab",
    displayName: "arabisk"
}, {
    id: "Armn",
    displayName: "armensk"
}, {
    id: "Armi",
    displayName: "armi"
}, {
    id: "Zinh",
    displayName: "arvet"
}, {
    id: "Avst",
    displayName: "avestansk"
}, {
    id: "Bali",
    displayName: "balinesisk"
}, {
    id: "Bamu",
    displayName: "bamum"
}, {
    id: "Bass",
    displayName: "bassa"
}, {
    id: "Batk",
    displayName: "batak"
}, {
    id: "Beng",
    displayName: "bengali"
}, {
    id: "Blis",
    displayName: "blissymboler"
}, {
    id: "Bopo",
    displayName: "bopomofo"
}, {
    id: "Brai",
    displayName: "brailleskrift"
}, {
    id: "Brah",
    displayName: "bramisk"
}, {
    id: "Bugi",
    displayName: "buginesisk"
}, {
    id: "Buhd",
    displayName: "buhid"
}, {
    id: "Mymr",
    displayName: "burmesisk"
}, {
    id: "Cakm",
    displayName: "cakm"
}, {
    id: "Cham",
    displayName: "cham"
}, {
    id: "Cher",
    displayName: "cherokee"
}, {
    id: "Cirt",
    displayName: "cirt"
}, {
    id: "Cprt",
    displayName: "cypriotisk"
}, {
    id: "Dsrt",
    displayName: "deseret"
}, {
    id: "Deva",
    displayName: "devanagari"
}, {
    id: "Egyd",
    displayName: "egyptisk demotisk"
}, {
    id: "Egyh",
    displayName: "egyptisk hieratisk"
}, {
    id: "Egyp",
    displayName: "egyptiske hieroglyffer"
}, {
    id: "Ethi",
    displayName: "etiopisk"
}, {
    id: "Hans",
    displayName: "forenklet"
}, {
    id: "Zyyy",
    displayName: "fælles"
}, {
    id: "Phnx",
    displayName: "fønikisk"
}, {
    id: "Narb",
    displayName: "gammelt nordarabisk"
}, {
    id: "Geor",
    displayName: "georgisk"
}, {
    id: "Geok",
    displayName: "georgisk kutsuri"
}, {
    id: "Glag",
    displayName: "glagolitisk"
}, {
    id: "Goth",
    displayName: "gotisk"
}, {
    id: "Gran",
    displayName: "grantha"
}, {
    id: "Grek",
    displayName: "græsk"
}, {
    id: "Gujr",
    displayName: "gujarati"
}, {
    id: "Guru",
    displayName: "gurmukhi"
}, {
    id: "Hani",
    displayName: "han"
}, {
    id: "Hang",
    displayName: "hangul"
}, {
    id: "Hano",
    displayName: "hanunoo"
}, {
    id: "Hebr",
    displayName: "hebraisk"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Inds",
    displayName: "indus"
}, {
    id: "Jpan",
    displayName: "japansk"
}, {
    id: "Java",
    displayName: "javanesisk"
}, {
    id: "Jurc",
    displayName: "jurchen"
}, {
    id: "Knda",
    displayName: "kannada"
}, {
    id: "Cari",
    displayName: "kariansk"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Hrkt",
    displayName: "katakana eller hiragana"
}, {
    id: "Kali",
    displayName: "kaya li"
}, {
    id: "Khar",
    displayName: "kharoshti"
}, {
    id: "Khmr",
    displayName: "khmer"
}, {
    id: "Khoj",
    displayName: "khojki"
}, {
    id: "Sind",
    displayName: "khudawadi"
}, {
    id: "Copt",
    displayName: "koptisk"
}, {
    id: "Kore",
    displayName: "koreansk"
}, {
    id: "Kpel",
    displayName: "kpelle"
}, {
    id: "Kthi",
    displayName: "kthi"
}, {
    id: "Cyrl",
    displayName: "kyrillisk"
}, {
    id: "Cyrs",
    displayName: "kyrillisk - oldkirkeslavisk variant"
}, {
    id: "Lana",
    displayName: "lanna"
}, {
    id: "Laoo",
    displayName: "lao"
}, {
    id: "Latn",
    displayName: "latinsk"
}, {
    id: "Latf",
    displayName: "latinsk - frakturvariant"
}, {
    id: "Latg",
    displayName: "latinsk - gælisk variant"
}, {
    id: "Lepc",
    displayName: "lepcha"
}, {
    id: "Limb",
    displayName: "limbu"
}, {
    id: "Lina",
    displayName: "lineær A"
}, {
    id: "Linb",
    displayName: "lineær B"
}, {
    id: "Lisu",
    displayName: "lisu"
}, {
    id: "Loma",
    displayName: "loma"
}, {
    id: "Lydi",
    displayName: "lydisk"
}, {
    id: "Lyci",
    displayName: "lykisk"
}, {
    id: "Mlym",
    displayName: "malayalam"
}, {
    id: "Mand",
    displayName: "mandaisk"
}, {
    id: "Mani",
    displayName: "manikæisk"
}, {
    id: "Maya",
    displayName: "mayahieroglyffer"
}, {
    id: "Mtei",
    displayName: "meitei-mayek"
}, {
    id: "Mend",
    displayName: "mende"
}, {
    id: "Mero",
    displayName: "meroitisk"
}, {
    id: "Merc",
    displayName: "metroitisk sammenhængende"
}, {
    id: "Mong",
    displayName: "mongolsk"
}, {
    id: "Moon",
    displayName: "moon"
}, {
    id: "Mroo",
    displayName: "mroo"
}, {
    id: "Nbat",
    displayName: "nabateisk"
}, {
    id: "Nkgb",
    displayName: "nakhi geba"
}, {
    id: "Nshu",
    displayName: "nüshu"
}, {
    id: "Nkoo",
    displayName: "n’ko"
}, {
    id: "Ogam",
    displayName: "ogham"
}, {
    id: "Olck",
    displayName: "ol-chiki"
}, {
    id: "Perm",
    displayName: "oldpermisk"
}, {
    id: "Xpeo",
    displayName: "oldpersisk"
}, {
    id: "Sarb",
    displayName: "oldsørarabisk"
}, {
    id: "Hung",
    displayName: "oldungarsk"
}, {
    id: "Cans",
    displayName: "oprindelige canadiske symboler"
}, {
    id: "Orya",
    displayName: "oriya"
}, {
    id: "Orkh",
    displayName: "orkhon"
}, {
    id: "Osma",
    displayName: "osmannisk"
}, {
    id: "Hmng",
    displayName: "pahawh hmong"
}, {
    id: "Phlv",
    displayName: "pahlavi"
}, {
    id: "Palm",
    displayName: "palmyrensk"
}, {
    id: "Phag",
    displayName: "phags-pa"
}, {
    id: "Phli",
    displayName: "phli"
}, {
    id: "Phlp",
    displayName: "phlp"
}, {
    id: "Plrd",
    displayName: "pollardtegn"
}, {
    id: "Prti",
    displayName: "prti"
}, {
    id: "Rjng",
    displayName: "rejang"
}, {
    id: "Roro",
    displayName: "rongo-rongo"
}, {
    id: "Runr",
    displayName: "runer"
}, {
    id: "Samr",
    displayName: "samaritansk"
}, {
    id: "Sara",
    displayName: "sarati"
}, {
    id: "Saur",
    displayName: "saurashtra"
}, {
    id: "Shrd",
    displayName: "sharada"
}, {
    id: "Shaw",
    displayName: "shavisk"
}, {
    id: "Sinh",
    displayName: "singalesisk"
}, {
    id: "Sora",
    displayName: "sora"
}, {
    id: "Xsux",
    displayName: "sumero-akkadisk cuneiform"
}, {
    id: "Sund",
    displayName: "sundanesisk"
}, {
    id: "Sylo",
    displayName: "syloti nagri"
}, {
    id: "Visp",
    displayName: "synlig tale"
}, {
    id: "Syrc",
    displayName: "syrisk"
}, {
    id: "Syre",
    displayName: "syrisk - estrangelovariant"
}, {
    id: "Tglg",
    displayName: "tagalog"
}, {
    id: "Tagb",
    displayName: "tagbanwa"
}, {
    id: "Tale",
    displayName: "tai le"
}, {
    id: "Talu",
    displayName: "tai lue"
}, {
    id: "Takr",
    displayName: "takri"
}, {
    id: "Taml",
    displayName: "tamilsk"
}, {
    id: "Tang",
    displayName: "tangut"
}, {
    id: "Tavt",
    displayName: "tavt"
}, {
    id: "Sgnw",
    displayName: "tegnskrift"
}, {
    id: "Telu",
    displayName: "telugu"
}, {
    id: "Teng",
    displayName: "tengwar"
}, {
    id: "Thaa",
    displayName: "thaana"
}, {
    id: "Thai",
    displayName: "thailandsk"
}, {
    id: "Tibt",
    displayName: "tibetansk"
}, {
    id: "Tfng",
    displayName: "tifinagh"
}, {
    id: "Tirh",
    displayName: "tirhuta"
}, {
    id: "Hant",
    displayName: "traditionelt"
}, {
    id: "Zxxx",
    displayName: "uden skriftsprog"
}, {
    id: "Ugar",
    displayName: "ugaritisk"
}, {
    id: "Zzzz",
    displayName: "ukendt skriftsprog"
}, {
    id: "Vaii",
    displayName: "vai"
}, {
    id: "Wara",
    displayName: "varang kshiti"
}, {
    id: "Syrj",
    displayName: "vestsyrisk"
}, {
    id: "Wole",
    displayName: "woleai"
}, {
    id: "Yiii",
    displayName: "yi"
}, {
    id: "Zmth",
    displayName: "zmth"
}, {
    id: "Zsym",
    displayName: "zsym"
}, {
    id: "Syrn",
    displayName: "østsyriakisk"
} ];

inter.currencies = [ {
    id: "AFN",
    displayName: "Afghansk afghani",
    symbol: "AFN",
    one: "Afghansk afghani",
    other: "Afghanske afghani"
}, {
    id: "AFA",
    displayName: "Afghansk afghani (1927–2002)",
    one: "Afghansk afghani (1927–2002)",
    other: "Afghanske afghani (1927–2002)"
}, {
    id: "ALL",
    displayName: "Albansk lek",
    symbol: "ALL",
    one: "Albansk lek",
    other: "Albanske lek"
}, {
    id: "DZD",
    displayName: "Algerisk dinar",
    symbol: "DZD",
    one: "Algerisk dinar",
    other: "Algeriske dinarer"
}, {
    id: "USD",
    displayName: "Amerikansk dollar",
    symbol: "$",
    one: "Amerikansk dollar",
    other: "Amerikanske dollar"
}, {
    id: "USN",
    displayName: "Amerikansk dollar (næste dag)",
    one: "Amerikansk dollar (næste dag)",
    other: "Amerikanske dollar (næste dag)"
}, {
    id: "USS",
    displayName: "Amerikansk dollar (samme dag)",
    one: "Amerikansk dollar (samme dag)",
    other: "Amerikanske dollar (samme dag)"
}, {
    id: "ADP",
    displayName: "Andorransk peseta",
    one: "Andorransk peseta",
    other: "Andorranske pesetas"
}, {
    id: "AOA",
    displayName: "Angolansk kwanza",
    symbol: "AOA",
    one: "Angolansk kwanza",
    other: "Angolanske kwanza"
}, {
    id: "AOK",
    displayName: "Angolansk kwanza (1977–1990)",
    one: "Angolansk kwanza (1977–1990)",
    other: "Angolanske kwanza (1977–1990)"
}, {
    id: "AOR",
    displayName: "Angolansk kwanza (1995–1999)",
    one: "Angolansk kwanza (1995–1999)",
    other: "Angolanske kwanza (1995–1999)"
}, {
    id: "AON",
    displayName: "Angolansk nye kwanza (1990–2000)",
    one: "Angolansk nye kwanza (1990–2000)",
    other: "Angolanske nye kwanza (1990–2000)"
}, {
    id: "ARA",
    displayName: "Argentinsk austral",
    one: "Argentinsk austral",
    other: "Argentinske austral"
}, {
    id: "ARS",
    displayName: "Argentinsk peso",
    symbol: "ARS",
    one: "Argentinsk pesos",
    other: "Argentinske pesos"
}, {
    id: "ARP",
    displayName: "Argentinsk peso (1983–1985)",
    one: "Argentinsk pesos (1983–1985)",
    other: "Argentinske pesos (1983–1985)"
}, {
    id: "AMD",
    displayName: "Armensk dram",
    symbol: "AMD",
    one: "Armensk dram",
    other: "Armenske dram"
}, {
    id: "AWG",
    displayName: "Arubansk florin",
    symbol: "AWG",
    one: "Arubansk florin",
    other: "Arubanske floriner"
}, {
    id: "AZN",
    displayName: "Aserbajdsjansk manat",
    symbol: "AZN",
    one: "Aserbajdsjansk manat",
    other: "Aserbajdsjanske manat"
}, {
    id: "AZM",
    displayName: "Aserbajdsjansk manat (1993–2006)",
    one: "Aserbajdsjansk manat (1993–2006)",
    other: "Aserbajdsjanske manat (1993–2006)"
}, {
    id: "AUD",
    displayName: "Australsk dollar",
    symbol: "AU$",
    one: "Australsk dollar",
    other: "Australske dollar"
}, {
    id: "BSD",
    displayName: "Bahamansk dollar",
    symbol: "BSD",
    one: "Bahamansk dollar",
    other: "Bahamanske dollar"
}, {
    id: "BHD",
    displayName: "Bahrainsk dinar",
    symbol: "BHD",
    one: "Bahrainsk dinar",
    other: "Bahrainske dinarer"
}, {
    id: "BDT",
    displayName: "Bangladeshisk taka",
    symbol: "BDT",
    one: "Bangladeshisk taka",
    other: "Bangladeshiske taka"
}, {
    id: "BBD",
    displayName: "Barbadisk dollar",
    symbol: "BBD",
    one: "Barbadisk dollar",
    other: "Barbadiske dollar"
}, {
    id: "BEF",
    displayName: "Belgisk franc",
    one: "Belgisk franc",
    other: "Belgiske franc"
}, {
    id: "BEL",
    displayName: "Belgisk franc (financial)",
    one: "Belgisk franc (financial)",
    other: "Belgiske franc (financial)"
}, {
    id: "BEC",
    displayName: "Belgisk franc (konvertibel)",
    one: "Belgisk franc (konvertibel)",
    other: "Belgiske franc (konvertible)"
}, {
    id: "BZD",
    displayName: "Belizisk dollar",
    symbol: "BZD",
    one: "Belizisk dollar",
    other: "Beliziske dollar"
}, {
    id: "BMD",
    displayName: "Bermudansk dollar",
    symbol: "BMD",
    one: "Bermudansk dollar",
    other: "Bermudanske dollar"
}, {
    id: "BTN",
    displayName: "Bhutansk ngultrum",
    symbol: "BTN",
    one: "Bhutansk ngultrum",
    other: "Bhutanske ngultrum"
}, {
    id: "BOB",
    displayName: "Boliviansk boliviano",
    symbol: "BOB",
    one: "Boliviansk boliviano",
    other: "Bolivianske boliviano"
}, {
    id: "BOV",
    displayName: "Boliviansk mvdol",
    one: "Boliviansk mvdol",
    other: "Bolivianske mvdol"
}, {
    id: "BOP",
    displayName: "Boliviansk peso",
    one: "Boliviansk peso",
    other: "Bolivianske pesos"
}, {
    id: "BAD",
    displayName: "Bosnien-Hercegovinsk dinar",
    one: "Bosnien-Hercegovinsk dinar",
    other: "Bosnien-Hercegovinske dinarer"
}, {
    id: "BAM",
    displayName: "Bosnien-Hercegovinsk konvertibel mark",
    symbol: "BAM",
    one: "Bosnien-Hercegovinsk konvertibel mark",
    other: "Bosnien-Hercegovinske konvertible mark"
}, {
    id: "BWP",
    displayName: "Botswansk pula",
    symbol: "BWP",
    one: "Botswansk pula",
    other: "Botswanske pula"
}, {
    id: "BRC",
    displayName: "Brasiliansk cruzado (1986–1989)",
    one: "Brasiliansk cruzado (1986–1989)",
    other: "Brasilianske cruzado (1986–1989)"
}, {
    id: "BRN",
    displayName: "Brasiliansk cruzado novo (1989–1990)",
    one: "Brasiliansk cruzado novo (1989–1990)",
    other: "Brasilianske cruzado novo (1989–1990)"
}, {
    id: "BRE",
    displayName: "Brasiliansk cruzeiro (1990–1993)",
    one: "Brasiliansk cruzeiro (1990–1993)",
    other: "Brasilianske cruzeiro (1990–1993)"
}, {
    id: "BRR",
    displayName: "Brasiliansk cruzeiro (1993–1994)",
    one: "Brasiliansk cruzeiro (1993–1994)",
    other: "Brasilianske cruzeiro (1993–1994)"
}, {
    id: "BRB",
    displayName: "Brasiliansk cruzeiro novo (1967–1986)",
    one: "Brasiliansk cruzeiro novo (1967–1986)",
    other: "Brasilianske cruzeiro novo (1967–1986)"
}, {
    id: "BRL",
    displayName: "Brasiliansk real",
    symbol: "R$",
    one: "Brasiliansk real",
    other: "Brasilianske real"
}, {
    id: "GBP",
    displayName: "Britisk pund",
    symbol: "£",
    one: "Britisk pund",
    other: "Britiske pund"
}, {
    id: "BND",
    displayName: "Bruneisk dollar",
    symbol: "BND",
    one: "Bruneisk dollar",
    other: "Bruneiske dollar"
}, {
    id: "BGL",
    displayName: "Bulgarsk hard lev",
    one: "Bulgarsk hard lev",
    other: "Bulgarske hard lev"
}, {
    id: "BGN",
    displayName: "Bulgarsk lev",
    symbol: "BGN",
    one: "Bulgarsk lev",
    other: "Bulgarske lev"
}, {
    id: "BUK",
    displayName: "Burmesisk kyat",
    one: "Burmesisk kyat",
    other: "Burmesiske kyat"
}, {
    id: "BIF",
    displayName: "Burundisk franc",
    symbol: "BIF",
    one: "Burundisk franc",
    other: "Burundiske franc"
}, {
    id: "XAF",
    displayName: "CFA-franc (BEAC)",
    symbol: "FCFA",
    one: "Beninsk CFA-franc",
    other: "CFA-franc (BEAC)"
}, {
    id: "XOF",
    displayName: "CFA-franc BCEAO",
    symbol: "CFA",
    one: "CFA-franc BCEAO",
    other: "CFA-franc BCEAO"
}, {
    id: "XPF",
    displayName: "CFP-franc",
    symbol: "CFPF",
    one: "CFP-franc",
    other: "CFP-franc"
}, {
    id: "KHR",
    displayName: "Cambodjansk riel",
    symbol: "KHR",
    one: "Cambodjansk riel",
    other: "Cambodjanske riel"
}, {
    id: "CAD",
    displayName: "Canadisk dollar",
    symbol: "CA$",
    one: "Canadisk dollar",
    other: "Canadiske dollar"
}, {
    id: "KYD",
    displayName: "Caymansk dollar",
    symbol: "KYD",
    one: "Caymansk dollar",
    other: "Caymansk dollar"
}, {
    id: "CLP",
    displayName: "Chilensk peso",
    symbol: "CLP",
    one: "Chilensk pesos",
    other: "Chilenske pesos"
}, {
    id: "COP",
    displayName: "Colombiansk peso",
    symbol: "COP",
    one: "Colombiansk pesos",
    other: "Colombianske pesos"
}, {
    id: "KMF",
    displayName: "Comorisk franc",
    symbol: "KMF",
    one: "Comorisk franc",
    other: "Comoriske franc"
}, {
    id: "CDF",
    displayName: "Congolesisk franc",
    symbol: "CDF",
    one: "Congolesisk franc",
    other: "Congolesiske franc"
}, {
    id: "CRC",
    displayName: "Costaricansk colón",
    symbol: "CRC",
    one: "Costaricansk colón",
    other: "Costaricanske colón"
}, {
    id: "CUC",
    displayName: "Cubansk konvertibel peso",
    symbol: "CUC",
    one: "Cubansk konvertible pesos",
    other: "Cubanske konvertible pesos"
}, {
    id: "CUP",
    displayName: "Cubansk peso",
    symbol: "CUP",
    one: "Cubansk pesos",
    other: "Cubanske pesos"
}, {
    id: "CYP",
    displayName: "Cypriotisk pund",
    one: "Cypriotisk pund",
    other: "Cypriotiske pund"
}, {
    id: "DKK",
    displayName: "Dansk krone",
    symbol: "kr.",
    one: "Dansk krone",
    other: "Danske kroner"
}, {
    id: "AED",
    displayName: "Dirham fra de Forenede Arabiske Emirater",
    symbol: "AED",
    one: "FAE-dirham",
    other: "FAE-dirham"
}, {
    id: "DJF",
    displayName: "Djiboutisk franc",
    symbol: "DJF",
    one: "Djiboutisk franc",
    other: "Djiboutiske franc"
}, {
    id: "STD",
    displayName: "Dobra fra Sao Tome og Principe",
    symbol: "STD",
    one: "Dobra fra Sao Tome og Principe",
    other: "Dobra fra Sao Tome og Principe"
}, {
    id: "TTD",
    displayName: "Dollar fra Trinidad og Tobago",
    symbol: "TTD",
    one: "Dollar fra Trinidad og Tobago",
    other: "Dollar fra Trinidad og Tobago"
}, {
    id: "DOP",
    displayName: "Dominikansk peso",
    symbol: "DOP",
    one: "Dominikansk peso",
    other: "Dominikanske pesos"
}, {
    id: "XEU",
    displayName: "ECU"
}, {
    id: "XBB",
    displayName: "EMU"
}, {
    id: "XBA",
    displayName: "EURCO"
}, {
    id: "ECS",
    displayName: "Ecuadoriansk sucre",
    one: "Ecuadoriansk sucre",
    other: "Ecuadorianske sucre"
}, {
    id: "EGP",
    displayName: "Egyptisk pund",
    symbol: "EGP",
    one: "Egyptisk pund",
    other: "Egyptiske pund"
}, {
    id: "ERN",
    displayName: "Eritreisk nakfa",
    symbol: "ERN",
    one: "Eritreisk nakfa",
    other: "Eritreiske nakfa"
}, {
    id: "TPE",
    displayName: "Escudo fra Timor",
    one: "Escudo fra Timor",
    other: "Escudo fra Timor"
}, {
    id: "EEK",
    displayName: "Estisk kroon",
    one: "Estisk kroon",
    other: "Estiske kroon"
}, {
    id: "ETB",
    displayName: "Etiopisk birr",
    symbol: "ETB",
    one: "Etiopisk birr",
    other: "Etiopiske birr"
}, {
    id: "EUR",
    displayName: "Euro",
    symbol: "€",
    one: "Euro",
    other: "Euro"
}, {
    id: "FJD",
    displayName: "Fijiansk dollar",
    symbol: "FJD",
    one: "Fijiansk dollar",
    other: "Fijianske dollar"
}, {
    id: "PHP",
    displayName: "Filippinsk peso",
    symbol: "PHP",
    one: "Filippinsk peso",
    other: "Filippinske pesos"
}, {
    id: "FIM",
    displayName: "Finsk mark",
    one: "Finsk mark",
    other: "Finske mark"
}, {
    id: "XFU",
    displayName: "Fransk UIC-franc",
    one: "Fransk UIC-franc",
    other: "Franske UIC-franc"
}, {
    id: "FRF",
    displayName: "Fransk franc",
    one: "Fransk franc",
    other: "Franske franc"
}, {
    id: "XFO",
    displayName: "Fransk guldfranc",
    one: "Fransk guldfranc",
    other: "Franske guldfranc"
}, {
    id: "GMD",
    displayName: "Gambisk dalasi",
    symbol: "GMD",
    one: "Gambisk dalasi",
    other: "Gambiske dalasi"
}, {
    id: "GEK",
    displayName: "Georgisk kupon larit",
    one: "Georgisk kupon larit",
    other: "Georgiske kupon larit"
}, {
    id: "GEL",
    displayName: "Georgisk lari",
    symbol: "GEL",
    one: "Georgisk lari",
    other: "Georgiske lari"
}, {
    id: "GHS",
    displayName: "Ghanesisk cedi",
    symbol: "GHS",
    one: "Ghanesisk cedi",
    other: "Ghanesiske cedi"
}, {
    id: "GHC",
    displayName: "Ghanesisk cedi (1979–2007)",
    one: "Ghanesisk cedi (1979–2007)",
    other: "Ghanesiske cedi (1979–2007)"
}, {
    id: "GIP",
    displayName: "Gibraltarisk pund",
    symbol: "GIP",
    one: "Gibraltarisk pund",
    other: "Gibraltariske pund"
}, {
    id: "GRD",
    displayName: "Græsk drakme",
    one: "Græsk drakmer",
    other: "Græske drakmer"
}, {
    id: "GTQ",
    displayName: "Guatemalansk quetzal",
    symbol: "GTQ",
    one: "Guatemalansk quetzal",
    other: "Guatemalanske quetzal"
}, {
    id: "GNF",
    displayName: "Guineansk franc",
    symbol: "GNF",
    one: "Guineansk franc",
    other: "Guineanske franc"
}, {
    id: "GWP",
    displayName: "Guineansk peso",
    one: "Guinea-Bissau-peso",
    other: "Guinea-Bissau-pesos"
}, {
    id: "GNS",
    displayName: "Guineansk syli",
    one: "Guineansk syli",
    other: "Guineanske syli"
}, {
    id: "XAU",
    displayName: "Guld"
}, {
    id: "GYD",
    displayName: "Guyansk dollar",
    symbol: "GYD",
    one: "Guyansk dollar",
    other: "Guyanske dollar"
}, {
    id: "HTG",
    displayName: "Haitisk gourde",
    symbol: "HTG",
    one: "Haitisk gourde",
    other: "Haitiske gourde"
}, {
    id: "NLG",
    displayName: "Hollandsk guilder",
    one: "Hollandsk gylden",
    other: "Hollandske gylden"
}, {
    id: "HNL",
    displayName: "Honduransk lempira",
    symbol: "HNL",
    one: "Honduransk lempira",
    other: "Honduranske lempira"
}, {
    id: "HKD",
    displayName: "Hongkong dollar",
    symbol: "HK$",
    one: "Hongkong dollar",
    other: "Hongkong dollar"
}, {
    id: "BYR",
    displayName: "Hviderussisk rubel",
    symbol: "BYR",
    one: "Hviderussisk rubel",
    other: "Hviderussiske rubler"
}, {
    id: "BYB",
    displayName: "Hviderussisk rubel (1994–1999)",
    one: "Hviderussisk rubel (1994–1999)",
    other: "Hviderussiske rubler (1994–1999)"
}, {
    id: "INR",
    displayName: "Indisk rupee",
    symbol: "₹",
    one: "Indisk rupee",
    other: "Indiske rupees"
}, {
    id: "IDR",
    displayName: "Indonesisk rupiah",
    symbol: "IDR",
    one: "Indonesisk rupiah",
    other: "Indonesiske rupiah"
}, {
    id: "IQD",
    displayName: "Irakisk dinar",
    symbol: "IQD",
    one: "Irakisk dinar",
    other: "Irakiske dinarer"
}, {
    id: "IRR",
    displayName: "Iransk rial",
    symbol: "IRR",
    one: "Iransk rial",
    other: "Iranske rial"
}, {
    id: "IEP",
    displayName: "Irsk pund",
    one: "Irsk pund",
    other: "Irske pund"
}, {
    id: "ISK",
    displayName: "Islansk krone",
    symbol: "ISK",
    one: "Islandsk krone",
    other: "Islandske kroner"
}, {
    id: "ILP",
    displayName: "Israelsk pund",
    one: "Israelsk pund",
    other: "Israelske pund"
}, {
    id: "ITL",
    displayName: "Italiensk lire",
    one: "Italiensk lire",
    other: "Italienske lire"
}, {
    id: "JMD",
    displayName: "Jamaicansk dollar",
    symbol: "JMD",
    one: "Jamaicansk dollar",
    other: "Jamaicanske dollar"
}, {
    id: "JPY",
    displayName: "Japansk yen",
    symbol: "JP¥",
    one: "Japansk yen",
    other: "Japanske yen"
}, {
    id: "JOD",
    displayName: "Jordansk dinar",
    symbol: "JOD",
    one: "Jordansk dinar",
    other: "Jordanske dinarer"
}, {
    id: "YUD",
    displayName: "Jugoslavisk hard dinar (1966–1990)",
    one: "Jugoslavisk hard dinar (1966–1990)",
    other: "Jugoslaviske hard dinar (1966–1990)"
}, {
    id: "YUN",
    displayName: "Jugoslavisk konvertibel dinar (1990–1992)",
    one: "Jugoslavisk konvertibel dinar (1990–1992)",
    other: "Jugoslaviske konvertibel dinar (1990–1992)"
}, {
    id: "YUM",
    displayName: "Jugoslavisk noviy dinar (1994–2002)",
    one: "Jugoslavisk noviy dinar (1994–2002)",
    other: "Jugoslaviske noviy dinar (1994–2002)"
}, {
    id: "CVE",
    displayName: "Kapverdisk escudo",
    symbol: "CVE",
    one: "Kapverdisk escudo",
    other: "Kapverdiske escudos"
}, {
    id: "KZT",
    displayName: "Kasakhisk tenge",
    symbol: "KZT",
    one: "Kasakhisk tenge",
    other: "Kasakhiske tenge"
}, {
    id: "KES",
    displayName: "Kenyansk shilling",
    symbol: "KES",
    one: "Kenyansk shilling",
    other: "Kenyanske shilling"
}, {
    id: "CNY",
    displayName: "Kinesisk yuan renminbi",
    symbol: "CN¥",
    one: "Kinesisk yuan",
    other: "Kinesiske yuan"
}, {
    id: "KGS",
    displayName: "Kirgisisk som",
    symbol: "KGS",
    one: "Kirgisisk sum",
    other: "Kirgisiske som"
}, {
    id: "HRD",
    displayName: "Kroatisk dinar",
    one: "Kroatisk dinar",
    other: "Kroatiske dinarer"
}, {
    id: "HRK",
    displayName: "Kroatisk kuna",
    symbol: "HRK",
    one: "Kroatisk kuna",
    other: "Kroatiske kuna"
}, {
    id: "KWD",
    displayName: "Kuwaitisk dinar",
    symbol: "KWD",
    one: "Kuwaitisk dinar",
    other: "Kuwaitiske dinarer"
}, {
    id: "LAK",
    displayName: "Laotisk kip",
    symbol: "LAK",
    one: "Laotisk kip",
    other: "Laotiske kip"
}, {
    id: "LSL",
    displayName: "Lesothisk loti",
    one: "Lesothisk loti",
    other: "Lesothiske loti"
}, {
    id: "LVL",
    displayName: "Lettisk lat",
    symbol: "LVL",
    one: "Lettisk lat",
    other: "Lettiske lats"
}, {
    id: "LVR",
    displayName: "Lettisk rubel",
    one: "Lettisk rubel",
    other: "Lettiske rubler"
}, {
    id: "LBP",
    displayName: "Libanesisk pund",
    symbol: "LBP",
    one: "Libanesisk pund",
    other: "Libanesiske pund"
}, {
    id: "LRD",
    displayName: "Liberisk dollar",
    symbol: "LRD",
    one: "Liberisk dollar",
    other: "Liberiske dollar"
}, {
    id: "LYD",
    displayName: "Libysk dinar",
    symbol: "LYD",
    one: "Libysk dinar",
    other: "Libyske dinarer"
}, {
    id: "LTL",
    displayName: "Litauisk litas",
    symbol: "LTL",
    one: "Litauisk litas",
    other: "Litauiske litai"
}, {
    id: "LTT",
    displayName: "Litauisk talonas",
    one: "Litauisk talonas",
    other: "Litauiske talonas"
}, {
    id: "LUL",
    displayName: "Luxembourgsk finansiel franc",
    one: "Luxembourgsk finansiel franc",
    other: "Luxembourgsk finansiel franc"
}, {
    id: "LUF",
    displayName: "Luxembourgsk franc",
    one: "Luxembourgsk franc",
    other: "Luxembourgske franc"
}, {
    id: "LUC",
    displayName: "Luxembourgsk konvertibel franc",
    one: "Luxembourgsk konvertibel franc",
    other: "Luxembourgsk konvertibel franc"
}, {
    id: "MOP",
    displayName: "Macaosk pataca",
    symbol: "MOP",
    one: "Macaosk pataca",
    other: "Macaoske pataca"
}, {
    id: "MGA",
    displayName: "Madagaskisk ariary",
    symbol: "MGA",
    one: "Madagaskisk ariary",
    other: "Madagaskiske ariary"
}, {
    id: "MGF",
    displayName: "Madagaskisk franc",
    one: "Madagaskisk franc",
    other: "Madagaskiske franc"
}, {
    id: "MKD",
    displayName: "Makedonsk denar",
    symbol: "MKD",
    one: "Makedonsk denar",
    other: "Makedonske denarer"
}, {
    id: "MWK",
    displayName: "Malawisk kwacha",
    symbol: "MWK",
    one: "Malawisk kwacha",
    other: "Malawiske kwacha"
}, {
    id: "MYR",
    displayName: "Malaysisk ringgit",
    symbol: "MYR",
    one: "Malaysisk ringgit",
    other: "Malaysiske ringgit"
}, {
    id: "MVR",
    displayName: "Maldivisk rufiyaa",
    symbol: "MVR",
    one: "Maldivisk rufiyaa",
    other: "Maldiviske rufiyaa"
}, {
    id: "MLF",
    displayName: "Malisk franc",
    one: "Malisk franc",
    other: "Maliske franc"
}, {
    id: "MTL",
    displayName: "Maltesisk lira",
    one: "Maltesisk lira",
    other: "Maltesiske lira"
}, {
    id: "MTP",
    displayName: "Maltesisk pund",
    one: "Maltesisk pund",
    other: "Maltesiske pund"
}, {
    id: "MAD",
    displayName: "Marokkansk dirham",
    symbol: "MAD",
    one: "Marokkansk dirham",
    other: "Marokkanske dirham"
}, {
    id: "MAF",
    displayName: "Marokkansk franc",
    one: "Marokkansk franc",
    other: "Marokkanske franc"
}, {
    id: "MRO",
    displayName: "Mauritansk ouguiya",
    symbol: "MRO",
    one: "Mauritansk ouguiya",
    other: "Mauritanske ouguiya"
}, {
    id: "MUR",
    displayName: "Mauritisk rupee",
    symbol: "MUR",
    one: "Mauritisk rupee",
    other: "Mauritiske rupees"
}, {
    id: "MXN",
    displayName: "Mexicansk peso",
    symbol: "MX$",
    one: "Mexicansk pesos",
    other: "Mexicanske pesos"
}, {
    id: "MXP",
    displayName: "Mexicansk silver peso (1861–1992)",
    one: "Mexicansk silver peso (1861–1992)",
    other: "Mexicanske silver peso (1861–1992)"
}, {
    id: "MDL",
    displayName: "Moldovisk leu",
    symbol: "MDL",
    one: "Moldovisk leu",
    other: "Moldoviske leu"
}, {
    id: "MNT",
    displayName: "Mongolsk tugrik",
    symbol: "MNT",
    one: "Mongolsk tugrik",
    other: "Mongolske tugrik"
}, {
    id: "MZE",
    displayName: "Mozambiquisk escudo",
    one: "Mozambiquisk escudo",
    other: "Mozambiquiske escudo"
}, {
    id: "MZN",
    displayName: "Mozambiquisk metical",
    symbol: "MZN",
    one: "Mozambiquisk metical",
    other: "Mozambiquiske metical"
}, {
    id: "MZM",
    displayName: "Mozambiquisk metical (1980–2006)",
    one: "Mozambiquisk metical (1980–2006)",
    other: "Mozambiquiske metical (1980–2006)"
}, {
    id: "MMK",
    displayName: "Myanmarsk kyat",
    symbol: "MMK",
    one: "Myanmarsk kyat",
    other: "Myanmarske kyat"
}, {
    id: "NAD",
    displayName: "Namibisk dollar",
    symbol: "NAD",
    one: "Namibisk dollar",
    other: "Namibiske dollar"
}, {
    id: "ANG",
    displayName: "Nederlandske Antiller-gylden",
    symbol: "ANG",
    one: "Nederlandsk Antiller-gylden",
    other: "Nederlandske Antiller-gylden"
}, {
    id: "NPR",
    displayName: "Nepalesisk rupee",
    symbol: "NPR",
    one: "Nepalesisk rupee",
    other: "Nepalesiske rupees"
}, {
    id: "NZD",
    displayName: "New Zealandsk dollar",
    symbol: "NZ$",
    one: "New Zealandsk dollar",
    other: "New Zealandske dollar"
}, {
    id: "NIO",
    displayName: "Nicaraguansk cordoba",
    symbol: "NIO",
    one: "Nicaraguansk cordoba",
    other: "Nicaraguanske cordoba"
}, {
    id: "NIC",
    displayName: "Nicaraguansk cordoba (1988–1991)",
    one: "Nicaraguansk cordoba (1988–1991)",
    other: "Nicaraguanske cordoba (1988–1991)"
}, {
    id: "NGN",
    displayName: "Nigeriansk naira",
    symbol: "NGN",
    one: "Nigeriansk naira",
    other: "Nigerianske naira"
}, {
    id: "KPW",
    displayName: "Nordkoreansk won",
    symbol: "KPW",
    one: "Nordkoreansk won",
    other: "Nordkoreanske won"
}, {
    id: "NOK",
    displayName: "Norsk krone",
    symbol: "NOK",
    one: "Norsk krone",
    other: "Norske kroner"
}, {
    id: "ILS",
    displayName: "Ny israelsk shekel",
    symbol: "₪",
    one: "Ny israelsk shekel",
    other: "Nye israelske shekel"
}, {
    id: "TWD",
    displayName: "Ny taiwansk dollar",
    symbol: "NT$",
    one: "Ny taiwansk dollar",
    other: "Nye taiwanske dollar"
}, {
    id: "ZRN",
    displayName: "Ny zairisk zaire (1993–1998)",
    one: "Ny zairisk zaire (1993–1998)",
    other: "Ny zairiske zaire (1993–1998)"
}, {
    id: "OMR",
    displayName: "Omansk rial",
    symbol: "OMR",
    one: "Omansk rial",
    other: "Omanske rial"
}, {
    id: "PKR",
    displayName: "Pakistansk rupee",
    symbol: "PKR",
    one: "Pakistansk rupee",
    other: "Pakistanske rupees"
}, {
    id: "XPD",
    displayName: "Palladium"
}, {
    id: "PAB",
    displayName: "Panamansk balboa",
    symbol: "PAB",
    one: "Panamansk balboa",
    other: "Panamanske balboa"
}, {
    id: "PGK",
    displayName: "Papuansk kina",
    symbol: "PGK",
    one: "Papuansk kina",
    other: "Papuanske kina"
}, {
    id: "PYG",
    displayName: "Paraguaysk guarani",
    symbol: "PYG",
    one: "Paraguayske guarani",
    other: "Paraguayske guarani"
}, {
    id: "PEI",
    displayName: "Peruviansk inti",
    one: "Peruviansk inti",
    other: "Peruvianske inti"
}, {
    id: "PEN",
    displayName: "Peruviansk nuevo sol",
    symbol: "PEN",
    one: "Peruviansk nuevo sol",
    other: "Peruvianske nuevos soles"
}, {
    id: "PES",
    displayName: "Peruviansk sol (1863–1965)",
    one: "Peruviansk sol (1863–1965)",
    other: "Peruvianske sol (1863–1965)"
}, {
    id: "XPT",
    displayName: "Platin"
}, {
    id: "PLN",
    displayName: "Polsk zloty",
    symbol: "PLN",
    one: "Polsk zloty",
    other: "Polske zloty"
}, {
    id: "PLZ",
    displayName: "Polsk zloty (1950–1995)",
    one: "Polsk zloty (1950–1995)",
    other: "Polske zloty (1950–1995)"
}, {
    id: "PTE",
    displayName: "Portugisisk escudo",
    one: "Portugisisk escudo",
    other: "Portugisiske escudo"
}, {
    id: "GWE",
    displayName: "Portugisisk guinea escudo",
    one: "Portugisiske guinea escudo",
    other: "Portugisiske guinea escudo"
}, {
    id: "FKP",
    displayName: "Pund fra Falklandsøerne",
    symbol: "FKP",
    one: "Pund fra Falklandsøerne",
    other: "Pund fra Falklandsøerne"
}, {
    id: "SHP",
    displayName: "Pund fra Saint Helena",
    symbol: "SHP",
    one: "Pund fra Saint Helena",
    other: "Pund fra Saint Helena"
}, {
    id: "QAR",
    displayName: "Qatarsk rial",
    symbol: "QAR",
    one: "Qatarsk rial",
    other: "Qatarske rial"
}, {
    id: "XRE",
    displayName: "RINET-fond"
}, {
    id: "RON",
    displayName: "Rumænsk leu",
    symbol: "RON",
    one: "Rumænsk leu",
    other: "Rumænske leu"
}, {
    id: "ROL",
    displayName: "Rumænsk leu (1952–2006)",
    one: "Rumænsk leu (1952–2006)",
    other: "Rumænske leu (1952–2006)"
}, {
    id: "RUB",
    displayName: "Russisk rubel",
    symbol: "RUB",
    one: "Russisk rubel",
    other: "Russiske rubler"
}, {
    id: "RUR",
    displayName: "Russisk rubel (1991–1998)",
    symbol: "р.",
    one: "Russisk rubel (1991–1998)",
    other: "Russiske rubler (1991–1998)"
}, {
    id: "RWF",
    displayName: "Rwandisk franc",
    symbol: "RWF",
    one: "Rwandisk franc",
    other: "Rwandiske franc"
}, {
    id: "XDR",
    displayName: "SDR"
}, {
    id: "SBD",
    displayName: "Salomonsk dollar",
    symbol: "SBD",
    one: "Salomonsk dollar",
    other: "Salomonske dollar"
}, {
    id: "SVC",
    displayName: "Salvadoransk colon",
    one: "Salvadoransk colon",
    other: "Salvadoranske colon"
}, {
    id: "WST",
    displayName: "Samoansk tala",
    symbol: "WST",
    one: "Samoansk tala",
    other: "Samoanske tala"
}, {
    id: "SAR",
    displayName: "Saudiarabisk riyal",
    symbol: "SAR",
    one: "Saudiarabisk riyal",
    other: "Saudiarabiske riyal"
}, {
    id: "CHF",
    displayName: "Schweizerfranc",
    symbol: "CHF",
    one: "Schweizerfranc",
    other: "Schweizerfranc"
}, {
    id: "RSD",
    displayName: "Serbisk dinar",
    symbol: "RSD",
    one: "Serbisk dinar",
    other: "Serbiske dinarer"
}, {
    id: "CSD",
    displayName: "Serbisk dinar (2002–2006)",
    one: "Serbisk dinar (2002–2006)",
    other: "Serbiske dinar (2002–2006)"
}, {
    id: "SCR",
    displayName: "Seychellisk rupee",
    symbol: "SCR",
    one: "Seychellisk rupee",
    other: "Seychelliske rupees"
}, {
    id: "SLL",
    displayName: "Sierraleonsk leone",
    symbol: "SLL",
    one: "Sierraleonsk leone",
    other: "Sierraleonske leone"
}, {
    id: "SGD",
    displayName: "Singaporeansk dollar",
    symbol: "SGD",
    one: "Singaporeansk dollar",
    other: "Singaporeanske dollar"
}, {
    id: "SKK",
    displayName: "Slovakisk koruna",
    one: "Slovakisk koruna",
    other: "Slovakiske koruna"
}, {
    id: "SIT",
    displayName: "Slovensk tolar",
    one: "Slovensk tolar",
    other: "Slovenske tolar"
}, {
    id: "SOS",
    displayName: "Somalisk shilling",
    symbol: "SOS",
    one: "Somalisk shilling",
    other: "Somaliske shilling"
}, {
    id: "SUR",
    displayName: "Sovjetisk rubel",
    one: "Sovjetisk rubel",
    other: "Sovjetiske rubler"
}, {
    id: "ESP",
    displayName: "Spansk peseta",
    symbol: "₧",
    one: "Spansk pesetas",
    other: "Spanske pesetas"
}, {
    id: "ESA",
    displayName: "Spansk peseta (A–konto)",
    one: "Spansk peseta (A–konto)",
    other: "Spanske peseta (A–konto)"
}, {
    id: "ESB",
    displayName: "Spansk peseta (konvertibel konto)",
    one: "Spansk peseta (konvertibel konto)",
    other: "Spanske peseta (konvertibel konto)"
}, {
    id: "LKR",
    displayName: "Srilankansk rupee",
    symbol: "LKR",
    one: "Srilankansk rupee",
    other: "Srilankanske rupees"
}, {
    id: "SDD",
    displayName: "Sudansk dinar (1992–2007)",
    one: "Sudansk dinar (1992–2007)",
    other: "Sudanske dinar (1992–2007)"
}, {
    id: "SDG",
    displayName: "Sudansk pund",
    symbol: "SDG",
    one: "Sudanske pund",
    other: "Sudanske pund"
}, {
    id: "SDP",
    displayName: "Sudansk pund (1957–1998)",
    one: "Sudanske pund (1957–1998)",
    other: "Sudanske pund (1957–1998)"
}, {
    id: "SRD",
    displayName: "Surinamsk dollar",
    symbol: "SRD",
    one: "Surinamsk dollar",
    other: "Surinamske dollar"
}, {
    id: "SRG",
    displayName: "Surinamsk guilder",
    one: "Surinamsk guilder",
    other: "Surinamske guilder"
}, {
    id: "SEK",
    displayName: "Svensk krone",
    symbol: "SEK",
    one: "Svensk krone",
    other: "Svenske kroner"
}, {
    id: "SZL",
    displayName: "Swazilandsk lilangeni",
    symbol: "SZL",
    one: "Swazilandsk lilangeni",
    other: "Swazilandske lilangeni"
}, {
    id: "ZAR",
    displayName: "Sydafrikansk rand",
    symbol: "ZAR",
    one: "Sydafrikansk rand",
    other: "Sydafrikanske rand"
}, {
    id: "ZAL",
    displayName: "Sydafrikansk rand (financial)",
    one: "Sydafrikansk rand (financial)",
    other: "Sydafrikanske rand (financial)"
}, {
    id: "KRW",
    displayName: "Sydkoreansk won",
    symbol: "₩",
    one: "Sydkoreansk won",
    other: "Sydkoreanske won"
}, {
    id: "SSP",
    displayName: "Sydsudanske pund",
    symbol: "SSP",
    one: "Sydsudansk pund",
    other: "Sydsudanske pund"
}, {
    id: "SYP",
    displayName: "Syrisk pund",
    symbol: "SYP",
    one: "Syrisk pund",
    other: "Syriske pund"
}, {
    id: "XAG",
    displayName: "Sølv"
}, {
    id: "TJR",
    displayName: "Tadsjikisk rubel",
    one: "Tadsjikisk rubel",
    other: "Tadsjikiske rubel"
}, {
    id: "TJS",
    displayName: "Tadsjikisk somoni",
    symbol: "TJS",
    one: "Tadsjikisk somoni",
    other: "Tadsjikiske somoni"
}, {
    id: "TZS",
    displayName: "Tanzanisk shilling",
    symbol: "TZS",
    one: "Tanzanisk shilling",
    other: "Tanzaniske shilling"
}, {
    id: "THB",
    displayName: "Thailandsk baht",
    symbol: "฿",
    one: "Thailandsk baht",
    other: "Thailandske baht"
}, {
    id: "CZK",
    displayName: "Tjekkisk koruna",
    symbol: "CZK",
    one: "Tjekkisk koruna",
    other: "Tjekkiske koruna"
}, {
    id: "CSK",
    displayName: "Tjekkoslovakisk hard koruna",
    one: "Tjekkoslovakisk hard koruna",
    other: "Tjekkoslovakiske hard koruna"
}, {
    id: "TOP",
    displayName: "Tongansk paʻanga",
    symbol: "TOP",
    one: "Tongansk paʻanga",
    other: "Tonganske paʻanga"
}, {
    id: "TND",
    displayName: "Tunesisk dinar",
    symbol: "TND",
    one: "Tunesisk dinar",
    other: "Tunesiske dinarer"
}, {
    id: "TMT",
    displayName: "Turkmensk manat",
    symbol: "TMT",
    one: "Turkmensk manat",
    other: "Turkmenske manat"
}, {
    id: "TMM",
    displayName: "Turkmensk manat (1993–2009)",
    one: "Turkmensk manat (1993–2009)",
    other: "Turkmenske manat (1993–2009)"
}, {
    id: "TRY",
    displayName: "Tyrkisk lira",
    symbol: "TRY",
    one: "Tyrkisk lira",
    other: "Tyrkiske lira"
}, {
    id: "TRL",
    displayName: "Tyrkisk lire (1922–2005)",
    one: "Tyrkisk lire (1922–2005)",
    other: "Tyrkiske lire (1922–2005)"
}, {
    id: "DEM",
    displayName: "Tysk mark",
    one: "Tysk mark",
    other: "Tyske mark"
}, {
    id: "UGX",
    displayName: "Ugandisk shilling",
    symbol: "UGX",
    one: "Ugandisk shilling",
    other: "Ugandiske shilling"
}, {
    id: "UGS",
    displayName: "Ugandisk shilling (1966–1987)",
    one: "Ugandisk shilling (1966–1987)",
    other: "Ugandiske shilling (1966–1987)"
}, {
    id: "XXX",
    displayName: "Ukendt valuta",
    one: "(ukendt valuta)",
    other: "(ukendt valuta)"
}, {
    id: "UAH",
    displayName: "Ukrainsk grynia",
    symbol: "UAH",
    one: "Ukrainsk grynia",
    other: "Ukrainske grynia"
}, {
    id: "UAK",
    displayName: "Ukrainsk karbovanetz",
    one: "Ukrainsk karbovanetz",
    other: "Ukrainske karbovanetz"
}, {
    id: "HUF",
    displayName: "Ungarsk forint",
    symbol: "HUF",
    one: "Ungarsk forint",
    other: "Ungarske forint"
}, {
    id: "UYU",
    displayName: "Uruguayansk peso",
    symbol: "UYU",
    one: "Uruguayansk peso",
    other: "Uruguayanske pesos"
}, {
    id: "UYP",
    displayName: "Uruguayansk peso (1975–1993)",
    one: "Uruguayansk peso (1975–1993)",
    other: "Uruguayanske peso (1975–1993)"
}, {
    id: "UZS",
    displayName: "Usbekisk sum",
    symbol: "UZS",
    one: "Usbekisk sum",
    other: "Usbekiske sum"
}, {
    id: "VUV",
    displayName: "Vanuaisk vatu",
    symbol: "VUV",
    one: "Vanuaisk vatu",
    other: "Vanuaiske vatu"
}, {
    id: "VEF",
    displayName: "Venezuelansk bolivar",
    symbol: "VEF",
    one: "Venezuelansk bolivar",
    other: "Venezuelanske bolivar"
}, {
    id: "VEB",
    displayName: "Venezuelansk bolivar (1871–2008)",
    one: "Venezuelansk bolivar (1871–2008)",
    other: "Venezuelanske bolivar (1871–2008)"
}, {
    id: "VND",
    displayName: "Vietnamesisk dong",
    symbol: "₫",
    one: "Vietnamesisk dong",
    other: "Vietnamesiske dong"
}, {
    id: "CHE",
    displayName: "WIR euro",
    one: "WIR euro",
    other: "WIR euro"
}, {
    id: "CHW",
    displayName: "WIR franc",
    one: "WIR franc",
    other: "WIR franc"
}, {
    id: "YDD",
    displayName: "Yemenitisk dinar",
    one: "Yemenitisk dinar",
    other: "Yemenitiske dinarer"
}, {
    id: "YER",
    displayName: "Yemenitisk rial",
    symbol: "YER",
    one: "Yemenitisk rial",
    other: "Yemenitiske rial"
}, {
    id: "ZRZ",
    displayName: "Zairisk zaire (1971–1993)",
    one: "Zairisk zaire (1971–1993)",
    other: "Zairiske zaire (1971–1993)"
}, {
    id: "ZMW",
    displayName: "Zambisk kwacha",
    symbol: "ZMW",
    one: "Zambisk kwacha",
    other: "Zambiske kwacha"
}, {
    id: "ZMK",
    displayName: "Zambisk kwacha (1968–2012)",
    one: "Zambisk kwacha (1968–2012)",
    other: "Zambiske kwacha (1968–2012)"
}, {
    id: "ZWD",
    displayName: "Zimbabwisk dollar (1980–2008)",
    one: "Zimbabwisk dollar (1980–2008)",
    other: "Zimbabwiske dollar (1980–2008)"
}, {
    id: "ZWR",
    displayName: "Zimbabwisk dollar (2008)",
    one: "Zimbabwisk dollar (2008)",
    other: "Zimbabwiske dollar (2008)"
}, {
    id: "ZWL",
    displayName: "Zimbabwisk dollar (2009)",
    one: "Zimbabwisk dollar (2009)",
    other: "Zimbabwiske dollar (2009)"
}, {
    id: "XTS",
    displayName: "testvalutakode",
    one: "testvaluta",
    other: "testvaluta"
}, {
    id: "GQE",
    displayName: "Ækvatorialguineask ekwele",
    one: "Ækvatorialguineask ekwele",
    other: "Ækvatorialguineaske ekwele"
}, {
    id: "XCD",
    displayName: "Østkaribisk dollar",
    symbol: "EC$",
    one: "Østkaribisk dollar",
    other: "Østkaribiske dollar"
}, {
    id: "ATS",
    displayName: "Østrigsk schilling",
    one: "Østrigsk schilling",
    other: "Østrigske schilling"
}, {
    id: "DDM",
    displayName: "Østtysk mark",
    one: "Østtysk mark",
    other: "Østtyske mark"
} ];

module.exports = inter;