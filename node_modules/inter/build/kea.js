function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _3mmj1 = {
    other: "{0} anu-lus"
}, _3mmj2 = [ "T1", "T2", "T3", "T4" ], _3mmj3 = {
    displayName: "am/pm"
}, _3mmj4 = {
    other: "di li {0} m"
}, _3mmj5 = {
    other: "a ten {0} m"
}, _3mmj6 = {
    other: "di li {0} s"
}, _3mmj7 = {
    other: "a ten {0} s"
}, _3mmj8 = {
    all: {
        leap: "{0}bis"
    }
}, _3mmj9 = {
    other: "0 mil milhãu"
}, _3mmj10 = {
    other: "00 mil milhãu"
}, _3mmj11 = {
    other: "di li {0} anu"
}, _3mmj12 = {
    other: "a ten {0} anu"
}, _3mmj13 = {
    other: "di li {0} mes"
}, _3mmj14 = {
    other: "a ten {0} mes"
}, _3mmj15 = {
    other: "di li {0} dia"
}, _3mmj16 = {
    other: "a ten {0} dia"
}, _3mmj17 = {
    other: "di li {0} ora"
}, _3mmj18 = {
    other: "a ten {0} ora"
}, _3mmj19 = {
    other: "di li {0} min"
}, _3mmj20 = {
    other: "a ten {0} min"
}, _3mmj21 = {
    other: "di li {0} sig"
}, _3mmj22 = {
    other: "a ten {0} sig"
}, _3mmj23 = {
    other: "000 mil milhãu"
}, _3mmj24 = {
    other: "di li {0} sim."
}, _3mmj25 = {
    other: "a ten {0} sim."
}, _3mmj26 = {
    a: "h a – h a",
    h: "h–h a"
}, _3mmj27 = {
    other: "di li {0} trim."
}, _3mmj28 = {
    other: "a ten {0} trim."
}, _3mmj29 = {
    displayName: "Ora lokal"
}, _3mmj30 = {
    other: "di li {0} simana"
}, _3mmj31 = {
    other: "a ten {0} simana"
}, _3mmj32 = {
    other: "di li {0} minutu"
}, _3mmj33 = {
    other: "a ten {0} minutu"
}, _3mmj34 = [ "Before R.O.C.", "R.O.C." ], _3mmj35 = {
    other: "di li {0} sigundu"
}, _3mmj36 = {
    other: "a ten {0} sigundu"
}, _3mmj37 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _3mmj38 = [ "D", "S", "T", "K", "K", "S", "S" ], _3mmj39 = [ "d", "s", "t", "k", "k", "s", "s" ], _3mmj40 = {
    other: "di li {0} trimestri"
}, _3mmj41 = {
    other: "a ten {0} trimestri"
}, _3mmj42 = {
    displayName: "Dia di simana"
}, _3mmj43 = {
    "0": "oji",
    "1": "manha",
    "-1": "onti"
}, _3mmj44 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _3mmj45 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _3mmj46 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _3mmj47 = {
    d: "d – d MMM",
    M: "d MMM – d MMM"
}, _3mmj48 = {
    M: "MM/y – MM/y",
    y: "MM/y – MM/y"
}, _3mmj49 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _3mmj50 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _3mmj51 = {
    M: "MMM – MMM y",
    y: "MMM y – MMM y"
}, _3mmj52 = [ "du", "si", "te", "ku", "ki", "se", "sa" ], _3mmj53 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _3mmj54 = {
    d: "dd/MM – dd/MM",
    M: "dd/MM – dd/MM"
}, _3mmj55 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _3mmj56 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _3mmj57 = [ "dum", "sig", "ter", "kua", "kin", "ses", "sab" ], _3mmj58 = {
    d: "E, dd/MM – E, dd/MM",
    M: "E, dd/MM – E, dd/MM"
}, _3mmj59 = {
    d: "E, d MMM – E, d MMM",
    M: "E, d MMM – E, d MMM"
}, _3mmj60 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _3mmj61 = {
    "0": "es anu li",
    "1": "prósimu anu",
    "-1": "anu pasadu"
}, _3mmj62 = {
    "0": "es mes li",
    "1": "prósimu mes",
    "-1": "mes pasadu"
}, _3mmj63 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _3mmj64 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _3mmj65 = {
    id: "001",
    displayName: "Mundu",
    hasTimeZones: false
}, _3mmj66 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _3mmj67 = {
    id: "AQ",
    displayName: "Antartika",
    hasTimeZones: true
}, _3mmj68 = {
    id: "IC",
    displayName: "Kanárias",
    hasTimeZones: false
}, _3mmj69 = {
    "0": "es dum. li",
    "1": "prósimu dum.",
    "-1": "dum. pasadu"
}, _3mmj70 = {
    "0": "es sig. li",
    "1": "prósimu sig.",
    "-1": "sig. pasadu"
}, _3mmj71 = {
    "0": "es ter. li",
    "1": "prósimu ter.",
    "-1": "ter. pasadu"
}, _3mmj72 = {
    "0": "es kua. li",
    "1": "prósimu kua.",
    "-1": "kua. pasadu"
}, _3mmj73 = {
    "0": "es kin. li",
    "1": "prósimu kin.",
    "-1": "kin. pasadu"
}, _3mmj74 = {
    "0": "es ses. li",
    "1": "prósimu ses.",
    "-1": "ses. pasadu"
}, _3mmj75 = {
    "0": "es sab. li",
    "1": "prósimu sab.",
    "-1": "sab. pasadu"
}, _3mmj76 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _3mmj77 = {
    id: "BV",
    displayName: "Ilha Buve",
    hasTimeZones: false
}, _3mmj78 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _3mmj79 = {
    id: "CC",
    displayName: "Ilhas Kokus",
    hasTimeZones: true
}, _3mmj80 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _3mmj81 = {
    id: "DG",
    displayName: "Diegu Garsia",
    hasTimeZones: false
}, _3mmj82 = {
    id: "CX",
    displayName: "Ilha di Natal",
    hasTimeZones: true
}, _3mmj83 = {
    future: _3mmj4,
    past: _3mmj5
}, _3mmj84 = {
    future: _3mmj6,
    past: _3mmj7
}, _3mmj85 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _3mmj86 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _3mmj87 = {
    id: "CP",
    displayName: "Ilha Kliperton",
    hasTimeZones: false
}, _3mmj88 = {
    id: "EA",
    displayName: "Seuta i Melila",
    hasTimeZones: false
}, _3mmj89 = {
    M: "MMMM – MMMM 'di' y G",
    y: "MMMM 'di' y – MMMM 'di' y G"
}, _3mmj90 = {
    "0": "es simana li",
    "1": "prósimu simana",
    "-1": "simana pasadu"
}, _3mmj91 = {
    "0": "es sabadu li",
    "1": "prósimu sabadu",
    "-1": "sabadu pasadu"
}, _3mmj92 = {
    id: "AC",
    displayName: "Ilha di Asensãu",
    hasTimeZones: false
}, _3mmj93 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _3mmj94 = {
    d: "d – d MMM y",
    M: "d MMM – d MMM y",
    y: "d MMM y – d MMM y"
}, _3mmj95 = {
    id: "TA",
    displayName: "Tristan da Kunha",
    hasTimeZones: false
}, _3mmj96 = [ "1º trimestri", "2º trimestri", "3º trimestri", "4º trimestri" ], _3mmj97 = {
    future: _3mmj11,
    past: _3mmj12
}, _3mmj98 = {
    future: _3mmj13,
    past: _3mmj14
}, _3mmj99 = {
    future: _3mmj15,
    past: _3mmj16
}, _3mmj100 = {
    future: _3mmj17,
    past: _3mmj18
}, _3mmj101 = {
    future: _3mmj19,
    past: _3mmj20
}, _3mmj102 = {
    future: _3mmj21,
    past: _3mmj22
}, _3mmj103 = {
    "0": "es dumingu li",
    "1": "prósimu dumingu",
    "-1": "dumingu pasadu"
}, _3mmj104 = {
    id: "HT",
    displayName: "Aití",
    regionId: "029",
    hasTimeZones: true
}, _3mmj105 = {
    id: "GH",
    displayName: "Gana",
    regionId: "011",
    hasTimeZones: true
}, _3mmj106 = {
    id: "GN",
    displayName: "Gine",
    regionId: "011",
    hasTimeZones: true
}, _3mmj107 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _3mmj108 = {
    id: "IR",
    displayName: "Iron",
    regionId: "034",
    hasTimeZones: true
}, _3mmj109 = {
    id: "CU",
    displayName: "Kuba",
    regionId: "029",
    hasTimeZones: true
}, _3mmj110 = {
    id: "LA",
    displayName: "Laus",
    regionId: "035",
    hasTimeZones: true
}, _3mmj111 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _3mmj112 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _3mmj113 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _3mmj114 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _3mmj115 = {
    id: "TG",
    displayName: "Togu",
    regionId: "011",
    hasTimeZones: true
}, _3mmj116 = {
    id: "CL",
    displayName: "Xili",
    regionId: "005",
    hasTimeZones: true
}, _3mmj117 = {
    id: "CN",
    displayName: "Xina",
    regionId: "030",
    hasTimeZones: true
}, _3mmj118 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _3mmj119 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _3mmj120 = {
    id: "BT",
    displayName: "Butãu",
    regionId: "034",
    hasTimeZones: true
}, _3mmj121 = {
    id: "EG",
    displayName: "Ejitu",
    regionId: "015",
    hasTimeZones: true
}, _3mmj122 = {
    id: "FJ",
    displayName: "Fidji",
    regionId: "054",
    hasTimeZones: true
}, _3mmj123 = {
    id: "GA",
    displayName: "Gabãu",
    regionId: "017",
    hasTimeZones: true
}, _3mmj124 = {
    id: "GY",
    displayName: "Giana",
    regionId: "005",
    hasTimeZones: true
}, _3mmj125 = {
    id: "YE",
    displayName: "Iemen",
    regionId: "145",
    hasTimeZones: true
}, _3mmj126 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _3mmj127 = {
    id: "IQ",
    displayName: "Iraki",
    regionId: "145",
    hasTimeZones: true
}, _3mmj128 = {
    id: "JP",
    displayName: "Japãu",
    regionId: "030",
    hasTimeZones: true
}, _3mmj129 = {
    id: "JE",
    displayName: "Jersi",
    regionId: "154",
    hasTimeZones: true
}, _3mmj130 = {
    id: "QA",
    displayName: "Katar",
    regionId: "145",
    hasTimeZones: true
}, _3mmj131 = {
    id: "KE",
    displayName: "Kenia",
    regionId: "014",
    hasTimeZones: true
}, _3mmj132 = {
    id: "LY",
    displayName: "Libia",
    regionId: "015",
    hasTimeZones: true
}, _3mmj133 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _3mmj134 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _3mmj135 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _3mmj136 = {
    id: "NE",
    displayName: "Nijer",
    regionId: "011",
    hasTimeZones: true
}, _3mmj137 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _3mmj138 = {
    id: "RU",
    displayName: "Rúsia",
    regionId: "151",
    hasTimeZones: true
}, _3mmj139 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _3mmj140 = {
    id: "SY",
    displayName: "Siria",
    regionId: "145",
    hasTimeZones: true
}, _3mmj141 = {
    id: "SD",
    displayName: "Sudãu",
    regionId: "015",
    hasTimeZones: true
}, _3mmj142 = {
    id: "CH",
    displayName: "Suisa",
    regionId: "155",
    hasTimeZones: true
}, _3mmj143 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _3mmj144 = {
    id: "TD",
    displayName: "Txadi",
    regionId: "017",
    hasTimeZones: true
}, _3mmj145 = {
    id: "CY",
    displayName: "Xipri",
    regionId: "145",
    hasTimeZones: true
}, _3mmj146 = {
    future: _3mmj24,
    past: _3mmj25
}, _3mmj147 = {
    relative: _3mmj69
}, _3mmj148 = {
    relative: _3mmj70
}, _3mmj149 = {
    relative: _3mmj71
}, _3mmj150 = {
    relative: _3mmj72
}, _3mmj151 = {
    relative: _3mmj73
}, _3mmj152 = {
    relative: _3mmj74
}, _3mmj153 = {
    relative: _3mmj75
}, _3mmj154 = {
    id: "AD",
    displayName: "Andora",
    regionId: "039",
    hasTimeZones: true
}, _3mmj155 = {
    id: "AI",
    displayName: "Angila",
    regionId: "029",
    hasTimeZones: true
}, _3mmj156 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _3mmj157 = {
    id: "BS",
    displayName: "Baamas",
    regionId: "029",
    hasTimeZones: true
}, _3mmj158 = {
    id: "BH",
    displayName: "Barain",
    regionId: "145",
    hasTimeZones: true
}, _3mmj159 = {
    id: "BZ",
    displayName: "Belizi",
    regionId: "013",
    hasTimeZones: true
}, _3mmj160 = {
    id: "BR",
    displayName: "Brazil",
    regionId: "005",
    hasTimeZones: true
}, _3mmj161 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _3mmj162 = {
    id: "FR",
    displayName: "Fransa",
    regionId: "155",
    hasTimeZones: true
}, _3mmj163 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _3mmj164 = {
    id: "GG",
    displayName: "Gernzi",
    regionId: "154",
    hasTimeZones: true
}, _3mmj165 = {
    id: "GR",
    displayName: "Gresia",
    regionId: "039",
    hasTimeZones: true
}, _3mmj166 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _3mmj167 = {
    id: "IT",
    displayName: "Italia",
    regionId: "039",
    hasTimeZones: true
}, _3mmj168 = {
    id: "CA",
    displayName: "Kanadá",
    regionId: "021",
    hasTimeZones: true
}, _3mmj169 = {
    id: "KW",
    displayName: "Kueiti",
    regionId: "145",
    hasTimeZones: true
}, _3mmj170 = {
    id: "LS",
    displayName: "Lezotu",
    regionId: "018",
    hasTimeZones: true
}, _3mmj171 = {
    id: "LB",
    displayName: "Libanu",
    regionId: "145",
    hasTimeZones: true
}, _3mmj172 = {
    id: "YT",
    displayName: "Maiote",
    regionId: "014",
    hasTimeZones: true
}, _3mmj173 = {
    id: "MW",
    displayName: "Malaui",
    regionId: "014",
    hasTimeZones: true
}, _3mmj174 = {
    id: "MC",
    displayName: "Monaku",
    regionId: "155",
    hasTimeZones: true
}, _3mmj175 = {
    id: "MX",
    displayName: "Méxiku",
    regionId: "013",
    hasTimeZones: true
}, _3mmj176 = {
    id: "NL",
    displayName: "Olanda",
    regionId: "155",
    hasTimeZones: true
}, _3mmj177 = {
    id: "PA",
    displayName: "Panamá",
    regionId: "013",
    hasTimeZones: true
}, _3mmj178 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _3mmj179 = {
    id: "RE",
    displayName: "Runion",
    regionId: "014",
    hasTimeZones: true
}, _3mmj180 = {
    id: "RS",
    displayName: "Servia",
    regionId: "039",
    hasTimeZones: true
}, _3mmj181 = {
    id: "ES",
    displayName: "Spanha",
    regionId: "039",
    hasTimeZones: true
}, _3mmj182 = {
    id: "EE",
    displayName: "Stonia",
    regionId: "154",
    hasTimeZones: true
}, _3mmj183 = {
    id: "SE",
    displayName: "Suesia",
    regionId: "154",
    hasTimeZones: true
}, _3mmj184 = {
    id: "TW",
    displayName: "Taiuan",
    regionId: "030",
    hasTimeZones: true
}, _3mmj185 = {
    id: "TF",
    displayName: "Terras Franses di Sul",
    hasTimeZones: true
}, _3mmj186 = {
    id: "TR",
    displayName: "Turkia",
    regionId: "145",
    hasTimeZones: true
}, _3mmj187 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _3mmj188 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _3mmj189 = {
    id: "HU",
    displayName: "Ungria",
    regionId: "151",
    hasTimeZones: true
}, _3mmj190 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _3mmj191 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _3mmj192 = {
    id: "DZ",
    displayName: "Arjelia",
    regionId: "015",
    hasTimeZones: true
}, _3mmj193 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _3mmj194 = {
    id: "AT",
    displayName: "Austria",
    regionId: "155",
    hasTimeZones: true
}, _3mmj195 = {
    id: "BY",
    displayName: "Belarus",
    regionId: "151",
    hasTimeZones: true
}, _3mmj196 = {
    id: "BO",
    displayName: "Bolívia",
    regionId: "005",
    hasTimeZones: true
}, _3mmj197 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _3mmj198 = {
    id: "BE",
    displayName: "Béljika",
    regionId: "155",
    hasTimeZones: true
}, _3mmj199 = {
    id: "DJ",
    displayName: "Djibuti",
    regionId: "014",
    hasTimeZones: true
}, _3mmj200 = {
    id: "EC",
    displayName: "Ekuador",
    regionId: "005",
    hasTimeZones: true
}, _3mmj201 = {
    id: "GD",
    displayName: "Granada",
    regionId: "029",
    hasTimeZones: true
}, _3mmj202 = {
    id: "IE",
    displayName: "Irlanda",
    regionId: "154",
    hasTimeZones: true
}, _3mmj203 = {
    id: "ET",
    displayName: "Itiopia",
    regionId: "014",
    hasTimeZones: true
}, _3mmj204 = {
    id: "JM",
    displayName: "Jamaika",
    regionId: "029",
    hasTimeZones: true
}, _3mmj205 = {
    id: "GE",
    displayName: "Jiorjia",
    regionId: "145",
    hasTimeZones: true
}, _3mmj206 = {
    id: "KM",
    displayName: "Kamoris",
    regionId: "014",
    hasTimeZones: true
}, _3mmj207 = {
    id: "XK",
    displayName: "Kozovu",
    regionId: "039",
    hasTimeZones: false
}, _3mmj208 = {
    id: "HR",
    displayName: "Kroasia",
    regionId: "039",
    hasTimeZones: true
}, _3mmj209 = {
    id: "CW",
    displayName: "Kurasau",
    regionId: "029",
    hasTimeZones: true
}, _3mmj210 = {
    id: "LV",
    displayName: "Letonia",
    regionId: "154",
    hasTimeZones: true
}, _3mmj211 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _3mmj212 = {
    id: "MY",
    displayName: "Malazia",
    regionId: "035",
    hasTimeZones: true
}, _3mmj213 = {
    id: "MA",
    displayName: "Marokus",
    regionId: "015",
    hasTimeZones: true
}, _3mmj214 = {
    id: "MM",
    displayName: "Mianmar",
    regionId: "035",
    hasTimeZones: true
}, _3mmj215 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _3mmj216 = {
    id: "NG",
    displayName: "Nijeria",
    regionId: "011",
    hasTimeZones: true
}, _3mmj217 = {
    id: "NO",
    displayName: "Noruega",
    regionId: "154",
    hasTimeZones: true
}, _3mmj218 = {
    id: "HN",
    displayName: "Onduras",
    regionId: "013",
    hasTimeZones: true
}, _3mmj219 = {
    id: "PL",
    displayName: "Pulonia",
    regionId: "151",
    hasTimeZones: true
}, _3mmj220 = {
    id: "RO",
    displayName: "Romenia",
    regionId: "151",
    hasTimeZones: true
}, _3mmj221 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _3mmj222 = {
    id: "SO",
    displayName: "Sumalia",
    regionId: "014",
    hasTimeZones: true
}, _3mmj223 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _3mmj224 = {
    id: "TN",
    displayName: "Tunizia",
    regionId: "015",
    hasTimeZones: true
}, _3mmj225 = {
    id: "UA",
    displayName: "Ukrania",
    regionId: "151",
    hasTimeZones: true
}, _3mmj226 = {
    id: "UY",
    displayName: "Uruguai",
    regionId: "005",
    hasTimeZones: true
}, _3mmj227 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _3mmj228 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _3mmj229 = {
    future: _3mmj27,
    past: _3mmj28
}, _3mmj230 = {
    id: "DE",
    displayName: "Alimanha",
    regionId: "155",
    hasTimeZones: true
}, _3mmj231 = {
    id: "BB",
    displayName: "Barbadus",
    regionId: "029",
    hasTimeZones: true
}, _3mmj232 = {
    id: "BM",
    displayName: "Bermudas",
    regionId: "021",
    hasTimeZones: true
}, _3mmj233 = {
    id: "BW",
    displayName: "Botsuana",
    regionId: "018",
    hasTimeZones: true
}, _3mmj234 = {
    id: "BG",
    displayName: "Bulgaria",
    regionId: "151",
    hasTimeZones: true
}, _3mmj235 = {
    id: "DM",
    displayName: "Dominika",
    regionId: "029",
    hasTimeZones: true
}, _3mmj236 = {
    id: "ER",
    displayName: "Iritreia",
    regionId: "014",
    hasTimeZones: true
}, _3mmj237 = {
    id: "IS",
    displayName: "Islandia",
    regionId: "154",
    hasTimeZones: true
}, _3mmj238 = {
    id: "JO",
    displayName: "Jordania",
    regionId: "145",
    hasTimeZones: true
}, _3mmj239 = {
    id: "CM",
    displayName: "Kamarõis",
    regionId: "017",
    hasTimeZones: true
}, _3mmj240 = {
    id: "KH",
    displayName: "Kambodja",
    regionId: "035",
    hasTimeZones: true
}, _3mmj241 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _3mmj242 = {
    id: "CO",
    displayName: "Kolômbia",
    regionId: "005",
    hasTimeZones: true
}, _3mmj243 = {
    id: "LT",
    displayName: "Lituania",
    regionId: "154",
    hasTimeZones: true
}, _3mmj244 = {
    id: "MV",
    displayName: "Maldivas",
    regionId: "034",
    hasTimeZones: true
}, _3mmj245 = {
    id: "MD",
    displayName: "Moldavia",
    regionId: "151",
    hasTimeZones: true
}, _3mmj246 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _3mmj247 = {
    id: "MS",
    displayName: "Monserat",
    regionId: "029",
    hasTimeZones: true
}, _3mmj248 = {
    id: "PK",
    displayName: "Pakistãu",
    regionId: "034",
    hasTimeZones: true
}, _3mmj249 = {
    id: "PY",
    displayName: "Paraguai",
    regionId: "005",
    hasTimeZones: true
}, _3mmj250 = {
    id: "PN",
    displayName: "Pirkairn",
    regionId: "061",
    hasTimeZones: true
}, _3mmj251 = {
    id: "PT",
    displayName: "Purtugal",
    regionId: "039",
    hasTimeZones: true
}, _3mmj252 = {
    id: "SC",
    displayName: "Seixelis",
    regionId: "014",
    hasTimeZones: true
}, _3mmj253 = {
    id: "SK",
    displayName: "Slovakia",
    regionId: "151",
    hasTimeZones: true
}, _3mmj254 = {
    id: "SI",
    displayName: "Slovenia",
    regionId: "039",
    hasTimeZones: true
}, _3mmj255 = {
    id: "SR",
    displayName: "Surinami",
    regionId: "005",
    hasTimeZones: true
}, _3mmj256 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _3mmj257 = {
    id: "VA",
    displayName: "Vatikanu",
    regionId: "039",
    hasTimeZones: true
}, _3mmj258 = {
    id: "ZW",
    displayName: "Zimbabui",
    regionId: "014",
    hasTimeZones: true
}, _3mmj259 = {
    "2": "{0} i {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0} i {1}"
}, _3mmj260 = {
    id: "AR",
    displayName: "Arjentina",
    regionId: "005",
    hasTimeZones: true
}, _3mmj261 = {
    id: "AU",
    displayName: "Australia",
    regionId: "053",
    hasTimeZones: true
}, _3mmj262 = {
    id: "DK",
    displayName: "Dinamarka",
    regionId: "154",
    hasTimeZones: true
}, _3mmj263 = {
    id: "PH",
    displayName: "Filipinas",
    regionId: "035",
    hasTimeZones: true
}, _3mmj264 = {
    id: "FI",
    displayName: "Finlandia",
    regionId: "154",
    hasTimeZones: true
}, _3mmj265 = {
    id: "GP",
    displayName: "Guadalupi",
    regionId: "029",
    hasTimeZones: true
}, _3mmj266 = {
    id: "GT",
    displayName: "Guatimala",
    regionId: "013",
    hasTimeZones: true
}, _3mmj267 = {
    id: "CK",
    displayName: "Ilhas Kuk",
    regionId: "061",
    hasTimeZones: true
}, _3mmj268 = {
    id: "ID",
    displayName: "Indonezia",
    regionId: "035",
    hasTimeZones: true
}, _3mmj269 = {
    id: "GI",
    displayName: "Jibraltar",
    regionId: "039",
    hasTimeZones: true
}, _3mmj270 = {
    id: "KG",
    displayName: "Kirgiston",
    regionId: "143",
    hasTimeZones: true
}, _3mmj271 = {
    id: "MQ",
    displayName: "Martinika",
    regionId: "029",
    hasTimeZones: true
}, _3mmj272 = {
    id: "MK",
    displayName: "Masidonia",
    regionId: "039",
    hasTimeZones: true
}, _3mmj273 = {
    id: "MZ",
    displayName: "Musambiki",
    regionId: "014",
    hasTimeZones: true
}, _3mmj274 = {
    id: "NI",
    displayName: "Nikarágua",
    regionId: "013",
    hasTimeZones: true
}, _3mmj275 = {
    id: "PS",
    displayName: "Palistina",
    regionId: "145",
    hasTimeZones: true
}, _3mmj276 = {
    id: "SL",
    displayName: "Sera Lioa",
    regionId: "011",
    hasTimeZones: true
}, _3mmj277 = {
    id: "SG",
    displayName: "Singapura",
    regionId: "035",
    hasTimeZones: true
}, _3mmj278 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _3mmj279 = {
    id: "TH",
    displayName: "Tailandia",
    regionId: "035",
    hasTimeZones: true
}, _3mmj280 = {
    id: "VE",
    displayName: "Vinizuela",
    regionId: "005",
    hasTimeZones: true
}, _3mmj281 = {
    d: "dd/MM/y – dd/MM/y",
    M: "dd/MM/y – dd/MM/y",
    y: "dd/MM/y – dd/MM/y"
}, _3mmj282 = {
    future: _3mmj30,
    past: _3mmj31
}, _3mmj283 = {
    future: _3mmj32,
    past: _3mmj33
}, _3mmj284 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _3mmj285 = {
    id: "AZ",
    displayName: "Azerbaijãu",
    regionId: "145",
    hasTimeZones: true
}, _3mmj286 = {
    id: "BD",
    displayName: "Bangladexi",
    regionId: "034",
    hasTimeZones: true
}, _3mmj287 = {
    id: "GW",
    displayName: "Gine-Bisau",
    regionId: "011",
    hasTimeZones: true
}, _3mmj288 = {
    id: "IO",
    displayName: "Ilhas Britanika di Indiku",
    hasTimeZones: true
}, _3mmj289 = {
    id: "CV",
    displayName: "Kabu Verdi",
    regionId: "011",
    hasTimeZones: true
}, _3mmj290 = {
    id: "KZ",
    displayName: "Kazakistãu",
    regionId: "143",
    hasTimeZones: true
}, _3mmj291 = {
    id: "CR",
    displayName: "Kosta Rika",
    regionId: "013",
    hasTimeZones: true
}, _3mmj292 = {
    id: "LI",
    displayName: "Lixenstain",
    regionId: "155",
    hasTimeZones: true
}, _3mmj293 = {
    id: "LU",
    displayName: "Luxemburgu",
    regionId: "155",
    hasTimeZones: true
}, _3mmj294 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _3mmj295 = {
    id: "MR",
    displayName: "Mauritania",
    regionId: "011",
    hasTimeZones: true
}, _3mmj296 = {
    id: "FM",
    displayName: "Mikronezia",
    regionId: "057",
    hasTimeZones: true
}, _3mmj297 = {
    id: "ME",
    displayName: "Montenegru",
    regionId: "039",
    hasTimeZones: true
}, _3mmj298 = {
    id: "PR",
    displayName: "Portu Riku",
    regionId: "029",
    hasTimeZones: true
}, _3mmj299 = {
    id: "SM",
    displayName: "San Marinu",
    regionId: "039",
    hasTimeZones: true
}, _3mmj300 = {
    id: "UZ",
    displayName: "Uzbekistãu",
    regionId: "143",
    hasTimeZones: true
}, _3mmj301 = {
    id: "AF",
    displayName: "Afeganistãu",
    regionId: "034",
    hasTimeZones: true
}, _3mmj302 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _3mmj303 = {
    id: "GL",
    displayName: "Gronelándia",
    regionId: "021",
    hasTimeZones: true
}, _3mmj304 = {
    id: "IM",
    displayName: "Ilha di Man",
    regionId: "154",
    hasTimeZones: true
}, _3mmj305 = {
    id: "FO",
    displayName: "Ilhas Faroe",
    regionId: "154",
    hasTimeZones: true
}, _3mmj306 = {
    id: "AX",
    displayName: "Ilhas Åland",
    regionId: "154",
    hasTimeZones: true
}, _3mmj307 = {
    id: "GB",
    displayName: "Reinu Unidu",
    regionId: "154",
    hasTimeZones: true
}, _3mmj308 = {
    id: "SH",
    displayName: "Santa Ilena",
    regionId: "011",
    hasTimeZones: true
}, _3mmj309 = {
    id: "LC",
    displayName: "Santa Lúsia",
    regionId: "029",
    hasTimeZones: true
}, _3mmj310 = {
    id: "SZ",
    displayName: "Suazilándia",
    regionId: "018",
    hasTimeZones: true
}, _3mmj311 = {
    id: "TJ",
    displayName: "Tadjikistãu",
    regionId: "143",
    hasTimeZones: true
}, _3mmj312 = {
    id: "TL",
    displayName: "Timor Lesti",
    regionId: "035",
    hasTimeZones: true
}, _3mmj313 = {
    future: _3mmj35,
    past: _3mmj36
}, _3mmj314 = {
    relative: _3mmj91
}, _3mmj315 = {
    id: "BF",
    displayName: "Burkina Fasu",
    regionId: "011",
    hasTimeZones: true
}, _3mmj316 = {
    id: "KY",
    displayName: "Ilhas Kaimãu",
    regionId: "029",
    hasTimeZones: true
}, _3mmj317 = {
    id: "MH",
    displayName: "Ilhas Marxal",
    regionId: "057",
    hasTimeZones: true
}, _3mmj318 = {
    id: "SS",
    displayName: "Sudãu di Sul",
    regionId: "014",
    hasTimeZones: true
}, _3mmj319 = {
    id: "142",
    displayName: "Ázia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _3mmj320 = {
    "0": "es tersa-fera li",
    "1": "prósimu tersa-fera",
    "-1": "tersa-fera pasadu"
}, _3mmj321 = {
    "0": "es kinta-fera li",
    "1": "prósimu kinta-fera",
    "-1": "kinta-fera pasadu"
}, _3mmj322 = {
    "0": "es sesta-fera li",
    "1": "prósimu sesta-fera",
    "-1": "sesta-fera pasadu"
}, _3mmj323 = {
    id: "ZA",
    displayName: "Afrika di Sul",
    regionId: "018",
    hasTimeZones: true
}, _3mmj324 = {
    id: "HM",
    displayName: "Ilha Heard i Ilhas McDonald",
    hasTimeZones: false
}, _3mmj325 = {
    id: "NF",
    displayName: "Ilhas Norfolk",
    regionId: "053",
    hasTimeZones: true
}, _3mmj326 = {
    id: "SB",
    displayName: "Ilhas Salumon",
    regionId: "054",
    hasTimeZones: true
}, _3mmj327 = {
    id: "KR",
    displayName: "Koreia di Sul",
    regionId: "030",
    hasTimeZones: true
}, _3mmj328 = {
    id: "NZ",
    displayName: "Nova Zilandia",
    regionId: "053",
    hasTimeZones: true
}, _3mmj329 = {
    id: "AS",
    displayName: "Samoa Merkanu",
    regionId: "061",
    hasTimeZones: true
}, _3mmj330 = {
    id: "TM",
    displayName: "Turkumenistãu",
    regionId: "143",
    hasTimeZones: true
}, _3mmj331 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _3mmj332 = {
    id: "SA",
    displayName: "Arabia Saudita",
    regionId: "145",
    hasTimeZones: true
}, _3mmj333 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _3mmj334 = {
    id: "GF",
    displayName: "Giana Franseza",
    regionId: "005",
    hasTimeZones: true
}, _3mmj335 = {
    id: "FK",
    displayName: "Ilhas Malvinas",
    regionId: "005",
    hasTimeZones: true
}, _3mmj336 = {
    id: "MU",
    displayName: "Ilhas Maurisia",
    regionId: "014",
    hasTimeZones: true
}, _3mmj337 = {
    id: "019",
    displayName: "Merkas",
    hasTimeZones: false,
    parentRegionId: "001"
}, _3mmj338 = {
    id: "NC",
    displayName: "Nova Kalidonia",
    regionId: "054",
    hasTimeZones: true
}, _3mmj339 = {
    id: "EH",
    displayName: "Sara Osidental",
    regionId: "015",
    hasTimeZones: true
}, _3mmj340 = {
    id: "BL",
    displayName: "Sãu Bartolomeu",
    regionId: "029",
    hasTimeZones: true
}, _3mmj341 = {
    id: "WF",
    displayName: "Ualis i Futuna",
    regionId: "061",
    hasTimeZones: true
}, _3mmj342 = {
    id: "002",
    displayName: "Áfrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _3mmj343 = {
    relative: _3mmj103
}, _3mmj344 = {
    id: "GQ",
    displayName: "Gine Ekuatorial",
    regionId: "017",
    hasTimeZones: true
}, _3mmj345 = {
    id: "CD",
    displayName: "Kongu - Kinxasa",
    regionId: "017",
    hasTimeZones: true
}, _3mmj346 = {
    id: "KP",
    displayName: "Koreia di Norti",
    regionId: "030",
    hasTimeZones: true
}, _3mmj347 = {
    id: "CI",
    displayName: "Kosta di Marfin",
    regionId: "011",
    hasTimeZones: true
}, _3mmj348 = {
    id: "009",
    displayName: "Oseania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _3mmj349 = {
    id: "PG",
    displayName: "Papua-Nova Gine",
    regionId: "054",
    hasTimeZones: true
}, _3mmj350 = {
    id: "CZ",
    displayName: "Republika Txeka",
    regionId: "151",
    hasTimeZones: true
}, _3mmj351 = [ "Jan", "Feb", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Otu", "Nuv", "Diz" ], _3mmj352 = {
    future: _3mmj40,
    past: _3mmj41
}, _3mmj353 = {
    "0": "es kuarta-fera li",
    "1": "prósimu kuarta-fera",
    "-1": "kuarta-fera pasadu"
}, _3mmj354 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _3mmj355 = {
    id: "029",
    displayName: "Karaibas",
    hasTimeZones: false,
    parentRegionId: "019"
}, _3mmj356 = {
    id: "AG",
    displayName: "Antigua i Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _3mmj357 = {
    id: "BA",
    displayName: "Bosnia-Erzegovina",
    regionId: "039",
    hasTimeZones: true
}, _3mmj358 = {
    id: "CG",
    displayName: "Kongu - Brazavili",
    regionId: "017",
    hasTimeZones: true
}, _3mmj359 = {
    id: "054",
    displayName: "Melanézia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _3mmj360 = {
    id: "061",
    displayName: "Polinézia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _3mmj361 = {
    id: "TT",
    displayName: "Trinidad i Tobagu",
    regionId: "029",
    hasTimeZones: true
}, _3mmj362 = {
    id: "BQ",
    displayName: "Karaibas Olandezas",
    regionId: "029",
    hasTimeZones: true
}, _3mmj363 = {
    id: "PF",
    displayName: "Polinezia Franseza",
    regionId: "061",
    hasTimeZones: true
}, _3mmj364 = {
    "0": "es sigunda-fera li",
    "1": "prósimu sigunda-fera",
    "-1": "sigunda-fera pasadu"
}, _3mmj365 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _3mmj366 = {
    id: "053",
    displayName: "Australázia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _3mmj367 = {
    id: "PM",
    displayName: "San Piere i Mikelon",
    regionId: "021",
    hasTimeZones: true
}, _3mmj368 = {
    id: "034",
    displayName: "Sul di Ázia",
    hasTimeZones: false,
    parentRegionId: "142"
}, _3mmj369 = {
    id: "ST",
    displayName: "Sãu Tume i Prinsipi",
    regionId: "017",
    hasTimeZones: true
}, _3mmj370 = {
    abbreviated: {
        am: "am",
        pm: "pm"
    },
    narrow: {
        am: "a",
        pm: "p"
    },
    wide: {
        am: "am",
        pm: "pm"
    }
}, _3mmj371 = {
    id: "AE",
    displayName: "Emiradus Arabi Unidu",
    regionId: "145",
    hasTimeZones: true
}, _3mmj372 = {
    id: "005",
    displayName: "Merka di Sul",
    hasTimeZones: false,
    parentRegionId: "019"
}, _3mmj373 = {
    id: "DO",
    displayName: "Repúblika Dominikana",
    regionId: "029",
    hasTimeZones: true
}, _3mmj374 = {
    id: "SJ",
    displayName: "Svalbard i Jan Maien",
    regionId: "154",
    hasTimeZones: true
}, _3mmj375 = {
    id: "143",
    displayName: "Ázia Sentral",
    hasTimeZones: false,
    parentRegionId: "142"
}, _3mmj376 = {
    id: "039",
    displayName: "Europa di Sul",
    hasTimeZones: false,
    parentRegionId: "150"
}, _3mmj377 = {
    id: "TC",
    displayName: "Ilhas Turkas i Kaikus",
    regionId: "029",
    hasTimeZones: true
}, _3mmj378 = {
    id: "013",
    displayName: "Merka Sentral",
    hasTimeZones: false,
    parentRegionId: "019"
}, _3mmj379 = {
    id: "018",
    displayName: "Sul di Áfrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _3mmj380 = {
    id: "KN",
    displayName: "Sãu Kristovãu i Nevis",
    regionId: "029",
    hasTimeZones: true
}, _3mmj381 = {
    id: "030",
    displayName: "Ázia Oriental",
    hasTimeZones: false,
    parentRegionId: "142"
}, _3mmj382 = {
    abbreviated: {
        am: "am",
        pm: "pm"
    },
    narrow: {
        am: "am",
        pm: "pm"
    },
    wide: {
        am: "am",
        pm: "pm"
    }
}, _3mmj383 = {
    id: "VI",
    displayName: "Ilhas Virjens Merkanas",
    regionId: "029",
    hasTimeZones: true
}, _3mmj384 = {
    id: "021",
    displayName: "Norti di Merka",
    hasTimeZones: false,
    parentRegionId: "019"
}, _3mmj385 = {
    id: "US",
    displayName: "Stadus Unidos di Merka",
    regionId: "021",
    hasTimeZones: true
}, _3mmj386 = {
    id: "MF",
    displayName: "Sãu Martinhu di Fransa",
    regionId: "029",
    hasTimeZones: true
}, _3mmj387 = {
    id: "SX",
    displayName: "Sãu Martinhu di Olanda",
    regionId: "029",
    hasTimeZones: true
}, _3mmj388 = {
    id: "017",
    displayName: "Áfrika Sentral",
    hasTimeZones: false,
    parentRegionId: "002"
}, _3mmj389 = {
    id: "145",
    displayName: "Ázia Osidental",
    hasTimeZones: false,
    parentRegionId: "142"
}, _3mmj390 = {
    id: "151",
    displayName: "Europa Oriental",
    hasTimeZones: false,
    parentRegionId: "150"
}, _3mmj391 = {
    id: "154",
    displayName: "Europa di Norti",
    hasTimeZones: false,
    parentRegionId: "150"
}, _3mmj392 = {
    id: "MP",
    displayName: "Ilhas Marianas di Norti",
    regionId: "057",
    hasTimeZones: true
}, _3mmj393 = {
    id: "015",
    displayName: "Norti di Áfrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _3mmj394 = {
    id: "014",
    displayName: "Áfrika Oriental",
    hasTimeZones: false,
    parentRegionId: "002"
}, _3mmj395 = {
    d: "E, d MMM – E, d MMM y",
    M: "E, d MMM – E, d MMM y",
    y: "E, d MMM y – E, d MMM y"
}, _3mmj396 = {
    relative: _3mmj320
}, _3mmj397 = {
    relative: _3mmj321
}, _3mmj398 = {
    relative: _3mmj322
}, _3mmj399 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _3mmj400 = {
    id: "155",
    displayName: "Europa Osidental",
    hasTimeZones: false,
    parentRegionId: "150"
}, _3mmj401 = {
    id: "VG",
    displayName: "Ilhas Virjens Britanikas",
    regionId: "029",
    hasTimeZones: true
}, _3mmj402 = {
    id: "035",
    displayName: "Sudesti Aziátiku",
    hasTimeZones: false,
    parentRegionId: "142"
}, _3mmj403 = {
    id: "VC",
    displayName: "Sãu Bisenti i Granadinas",
    regionId: "029",
    hasTimeZones: true
}, _3mmj404 = {
    id: "011",
    displayName: "Áfrika Osidental",
    hasTimeZones: false,
    parentRegionId: "002"
}, _3mmj405 = {
    id: "UM",
    displayName: "Ilhas Minoris Distantis de Stadus Unidus",
    hasTimeZones: true
}, _3mmj406 = {
    id: "CF",
    displayName: "Republika Sentru-Afrikanu",
    regionId: "017",
    hasTimeZones: true
}, _3mmj407 = {
    id: "GS",
    displayName: "Jeórjia di Sul i Ilhas di Sanduixi di Sul",
    hasTimeZones: true
}, _3mmj408 = {
    relative: _3mmj353
}, _3mmj409 = {
    d: "E, dd/MM/y – E, dd/MM/y",
    M: "E, dd/MM/y – E, dd/MM/y",
    y: "E, dd/MM/y – E, dd/MM/y"
}, _3mmj410 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _3mmj411 = {
    id: "057",
    displayName: "Rejiãu di Mikronézia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _3mmj412 = {
    relative: _3mmj364
}, _3mmj413 = [ "dumingu", "sigunda-fera", "tersa-fera", "kuarta-fera", "kinta-fera", "sesta-fera", "sabadu" ], _3mmj414 = {
    displayName: "m",
    relativeTime: _3mmj83
}, _3mmj415 = {
    displayName: "s",
    relativeTime: _3mmj84
}, _3mmj416 = {
    displayName: "o",
    relativeTime: _3mmj100
}, _3mmj417 = {
    displayName: "anu",
    relativeTime: _3mmj97
}, _3mmj418 = {
    displayName: "mes",
    relativeTime: _3mmj98
}, _3mmj419 = {
    displayName: "dia",
    relativeTime: _3mmj99
}, _3mmj420 = {
    displayName: "Ora",
    relativeTime: _3mmj100
}, _3mmj421 = {
    displayName: "ora",
    relativeTime: _3mmj100
}, _3mmj422 = {
    displayName: "min",
    relativeTime: _3mmj101
}, _3mmj423 = {
    displayName: "sig",
    relativeTime: _3mmj102
}, _3mmj424 = {
    id: "MO",
    displayName: "Rejiãu Administrativu Special di Makau",
    regionId: "030",
    hasTimeZones: true
}, _3mmj425 = {
    displayName: "sim.",
    relativeTime: _3mmj146
}, _3mmj426 = {
    id: "HK",
    displayName: "Rejiãu Administrativu Special di Hong Kong",
    regionId: "030",
    hasTimeZones: true
}, _3mmj427 = {
    displayName: "trim.",
    relativeTime: _3mmj229
}, _3mmj428 = {
    displayName: "Minutu",
    relativeTime: _3mmj283
}, _3mmj429 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _3mmj430 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _3mmj431 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _3mmj432 = [ "Janeru", "Febreru", "Marsu", "Abril", "Maiu", "Junhu", "Julhu", "Agostu", "Setenbru", "Otubru", "Nuvenbru", "Dizenbru" ], _3mmj433 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _3mmj434 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _3mmj435 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _3mmj436 = {
    displayName: "Sigundu",
    relative: [ "now" ],
    relativeTime: _3mmj313
}, _3mmj437 = {
    abbreviated: _3mmj2,
    narrow: [ "1", "2", "3", "4" ],
    wide: _3mmj96
}, _3mmj438 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _3mmj439 = {
    displayName: "Dia",
    relative: _3mmj43,
    relativeTime: _3mmj99
}, _3mmj440 = {
    displayName: "Anu",
    relative: _3mmj61,
    relativeTime: _3mmj97
}, _3mmj441 = {
    displayName: "Mes",
    relative: _3mmj62,
    relativeTime: _3mmj98
}, _3mmj442 = {
    displayName: "Simana",
    relative: _3mmj90,
    relativeTime: _3mmj282
}, _3mmj443 = {
    decimal: ",",
    group: " ",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _3mmj444 = {
    format: _3mmj370,
    standAlone: _3mmj382
}, _3mmj445 = {
    displayName: "Trimestri",
    relative: _3mmj80,
    relativeTime: _3mmj352
}, _3mmj446 = {
    symbols: _3mmj443
}, _3mmj447 = {
    format: _3mmj331,
    numeric: _3mmj8,
    standAlone: _3mmj331
}, _3mmj448 = {
    symbols: _3mmj443,
    digits: "renderSpelloutCardinal"
}, _3mmj449 = {
    symbols: _3mmj443,
    digits: "renderSpelloutCardinalFinancial"
}, _3mmj450 = {
    abbreviated: _3mmj354,
    narrow: _3mmj76,
    wide: _3mmj354
}, _3mmj451 = {
    abbreviated: _3mmj57,
    narrow: _3mmj38,
    wide: _3mmj413,
    "short": _3mmj52
}, _3mmj452 = {
    abbreviated: _3mmj57,
    narrow: _3mmj39,
    wide: _3mmj413,
    "short": _3mmj52
}, _3mmj453 = {
    "1000": {
        other: "0 mil"
    },
    "10000": {
        other: "00 mil"
    },
    "100000": {
        other: "000 mil"
    },
    "1000000": {
        other: "0 M"
    },
    "10000000": {
        other: "00 M"
    },
    "100000000": {
        other: "000 M"
    },
    "1000000000": {
        other: "0 MM"
    },
    "10000000000": {
        other: "00 MM"
    },
    "100000000000": {
        other: "000 MM"
    },
    "1000000000000": {
        other: "0 Bi"
    },
    "10000000000000": {
        other: "00 Bi"
    },
    "100000000000000": {
        other: "000 Bi"
    }
}, _3mmj454 = {
    abbreviated: _3mmj365,
    narrow: _3mmj365,
    wide: _3mmj365
}, _3mmj455 = {
    abbreviated: _3mmj351,
    narrow: _3mmj60,
    wide: _3mmj432
}, _3mmj456 = {
    format: _3mmj454
}, _3mmj457 = {
    "1000": {
        other: "0 mil ¤"
    },
    "10000": {
        other: "00 mil ¤"
    },
    "100000": {
        other: "000 mil ¤"
    },
    "1000000": {
        other: "0 M ¤"
    },
    "10000000": {
        other: "00 M ¤"
    },
    "100000000": {
        other: "000 M ¤"
    },
    "1000000000": {
        other: "0 MM ¤"
    },
    "10000000000": {
        other: "00 MM ¤"
    },
    "100000000000": {
        other: "000 MM ¤"
    },
    "1000000000000": {
        other: "0 Bi ¤"
    },
    "10000000000000": {
        other: "00 Bi ¤"
    },
    "100000000000000": {
        other: "000 Bi ¤"
    }
}, _3mmj458 = {
    format: _3mmj437,
    standAlone: _3mmj437
}, _3mmj459 = {
    abbreviated: _3mmj430,
    narrow: _3mmj86,
    wide: _3mmj430
}, _3mmj460 = {
    "1000": {
        other: "0 mil"
    },
    "10000": {
        other: "00 mil"
    },
    "100000": {
        other: "000 mil"
    },
    "1000000": {
        other: "0 milhãu"
    },
    "10000000": {
        other: "00 milhãu"
    },
    "100000000": {
        other: "000 milhãu"
    },
    "1000000000": _3mmj9,
    "10000000000": _3mmj10,
    "100000000000": _3mmj23,
    "1000000000000": {
        other: "0 bilhãu"
    },
    "10000000000000": {
        other: "00 bilhãu"
    },
    "100000000000000": {
        other: "000 bilhãu"
    }
}, _3mmj461 = {
    abbreviated: _3mmj431,
    narrow: _3mmj76,
    wide: _3mmj431
}, _3mmj462 = {
    abbreviated: _3mmj433,
    narrow: _3mmj86,
    wide: _3mmj433
}, _3mmj463 = {
    abbreviated: _3mmj429,
    narrow: _3mmj76,
    wide: _3mmj438
}, _3mmj464 = {
    abbreviated: _3mmj434,
    narrow: _3mmj86,
    wide: _3mmj434
}, _3mmj465 = {
    abbreviated: _3mmj435,
    narrow: _3mmj76,
    wide: _3mmj435
}, _3mmj466 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _3mmj467 = {
    fullDate: "EEEE, d 'di' MMMM 'di' y G",
    longDate: "d 'di' MMMM 'di' y G",
    mediumDate: "d MMM y G",
    shortDate: "d/M/y GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "d/M/y GGGGG, HH:mm",
    mediumDateTime: "d MMM y G, HH:mm:ss",
    longDateTime: "d 'di' MMMM 'di' y G, HH:mm:ss z",
    fullDateTime: "EEEE, d 'di' MMMM 'di' y G, HH:mm:ss zzzz"
}, _3mmj468 = {
    format: _3mmj450,
    standAlone: _3mmj450
}, _3mmj469 = {
    format: _3mmj451,
    standAlone: _3mmj452
}, _3mmj470 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _3mmj471 = {
    format: _3mmj455,
    standAlone: _3mmj455
}, _3mmj472 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _3mmj473 = {
    "long": _3mmj460,
    "short": _3mmj453,
    "default": "#,##0.###"
}, _3mmj474 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _3mmj475 = {
    format: _3mmj463,
    standAlone: _3mmj463
}, _3mmj476 = {
    d: "d",
    Ed: "E, d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E, d MMM y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "dd/MM",
    MEd: "E, dd/MM",
    MMdd: "dd/MM",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E, d MMM",
    MMMMd: "d 'di' MMMM",
    MMMMEd: "E, d 'di' MMMM",
    mmss: "mm:ss",
    ms: "mm:ss",
    y: "y",
    yM: "MM/y",
    yMd: "dd/MM/y",
    yMEd: "E, dd/MM/y",
    yMM: "MM/y",
    yMMM: "MMM y",
    yMMMd: "d MMM y",
    yMMMEd: "E, d MMM y",
    yMMMM: "MMMM 'di' y",
    yQQQ: "QQQ y",
    yQQQQ: "QQQQ 'di' y",
    yyyy: "y G",
    yyyyM: "MM/y GGGGG",
    yyyyMd: "dd/MM/y GGGGG",
    yyyyMEd: "E, dd/MM/y GGGGG",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E, d MMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ 'di' y G",
    E: "ccc",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss",
    yyyyMMMM: "G y MMMM"
}, _3mmj477 = {
    basic: _3mmj466,
    cldr: _3mmj470
}, _3mmj478 = {
    d: {
        d: "d–d"
    },
    h: _3mmj26,
    H: {
        H: "HH–HH"
    },
    hm: _3mmj78,
    Hm: _3mmj46,
    hmv: _3mmj93,
    Hmv: _3mmj53,
    hv: _3mmj37,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _3mmj55,
    MEd: _3mmj63,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _3mmj44,
    MMMEd: _3mmj64,
    y: {
        y: "U–U"
    },
    yM: _3mmj49,
    yMd: _3mmj284,
    yMEd: _3mmj410,
    yMMM: _3mmj50,
    yMMMd: _3mmj85,
    yMMMEd: _3mmj399,
    yMMMM: _3mmj56
}, _3mmj479 = {
    d: {
        d: "d – d"
    },
    h: _3mmj26,
    H: {
        H: "HH–HH"
    },
    hm: _3mmj78,
    Hm: _3mmj46,
    hmv: _3mmj93,
    Hmv: _3mmj53,
    hv: _3mmj37,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M – M"
    },
    Md: _3mmj54,
    MEd: _3mmj58,
    MMM: {
        M: "MMM – MMM"
    },
    MMMd: _3mmj47,
    MMMEd: _3mmj59,
    y: {
        y: "y – y"
    },
    yM: _3mmj48,
    yMd: _3mmj281,
    yMEd: _3mmj409,
    yMMM: _3mmj51,
    yMMMd: _3mmj94,
    yMMMEd: _3mmj395,
    yMMMM: _3mmj89
}, _3mmj480 = {
    basic: _3mmj467,
    cldr: _3mmj476
}, _3mmj481 = {
    beforeCurrency: _3mmj472,
    afterCurrency: _3mmj472
}, _3mmj482 = {
    "short": _3mmj457,
    "default": "#,##0.00 ¤",
    other: "{0} {1}",
    currencySpacing: _3mmj481
}, _3mmj483 = {
    abbreviated: _3mmj474,
    narrow: _3mmj474,
    wide: _3mmj474
}, _3mmj484 = {
    format: _3mmj483
}, _3mmj485 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _3mmj473,
    currency: _3mmj482,
    percent: {
        "default": "#,##0%"
    }
}, _3mmj486 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _3mmj487 = {
    era: {
        displayName: "Era"
    },
    year: _3mmj440,
    "year-short": _3mmj417,
    "year-narrow": _3mmj417,
    quarter: _3mmj445,
    "quarter-short": _3mmj427,
    "quarter-narrow": _3mmj427,
    month: _3mmj441,
    "month-short": _3mmj418,
    "month-narrow": _3mmj418,
    week: _3mmj442,
    "week-short": _3mmj425,
    "week-narrow": _3mmj425,
    day: _3mmj439,
    "day-short": _3mmj419,
    "day-narrow": _3mmj419,
    weekday: _3mmj42,
    dayperiod: _3mmj3,
    hour: _3mmj420,
    "hour-short": _3mmj421,
    "hour-narrow": _3mmj416,
    minute: _3mmj428,
    "minute-short": _3mmj422,
    "minute-narrow": _3mmj414,
    second: _3mmj436,
    "second-short": _3mmj423,
    "second-narrow": _3mmj415,
    zone: _3mmj29,
    sun: _3mmj343,
    "sun-short": _3mmj147,
    "sun-narrow": _3mmj147,
    mon: _3mmj412,
    "mon-short": _3mmj148,
    "mon-narrow": _3mmj148,
    tue: _3mmj396,
    "tue-short": _3mmj149,
    "tue-narrow": _3mmj149,
    wed: _3mmj408,
    "wed-short": _3mmj150,
    "wed-narrow": _3mmj150,
    thu: _3mmj397,
    "thu-short": _3mmj151,
    "thu-narrow": _3mmj151,
    fri: _3mmj398,
    "fri-short": _3mmj152,
    "fri-narrow": _3mmj152,
    sat: _3mmj314,
    "sat-short": _3mmj153,
    "sat-narrow": _3mmj153
}, _3mmj488 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _3mmj487
}, _3mmj489 = {
    dayParts: _3mmj456,
    days: _3mmj484,
    months: _3mmj484,
    years: _3mmj484,
    zodiacs: _3mmj456
}, _3mmj490 = {
    dateFormats: _3mmj480,
    datePartsOrder: "dmy",
    dateIntervalFormats: _3mmj479,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _3mmj469,
    dayPeriods: _3mmj444,
    monthNames: _3mmj475,
    eraNames: _3mmj45,
    quarterNames: _3mmj458,
    fields: _3mmj487
}, _3mmj491 = {
    dateFormats: _3mmj477,
    datePartsOrder: "md",
    dateIntervalFormats: _3mmj478,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _3mmj469,
    dayPeriods: _3mmj444,
    cyclicNames: _3mmj489,
    monthNames: _3mmj468,
    monthPatterns: _3mmj447,
    quarterNames: _3mmj458,
    fields: _3mmj487
};

inter.id = "kea";

inter.listPatterns = {
    "default": _3mmj259,
    unit: _3mmj259,
    unitNarrow: P.listPatterns.default,
    unitShort: P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                other: "{0} forsa G"
            },
            accelerationMeterPerSecondSquared: {
                other: "{0} métru pur sigundu kuadradu"
            },
            angleRadian: {
                other: "{0} radianu"
            },
            angleDegree: {
                other: "{0} grau"
            },
            areaSquareKilometer: {
                other: "{0} kilómetru kuadradu"
            },
            areaHectare: {
                other: "{0} ektar"
            },
            areaSquareMeter: {
                other: "{0} métru kuadradu"
            },
            areaSquareCentimeter: {
                other: "{0} sentímetru kuadradu"
            },
            areaSquareMile: {
                other: "{0} milha kuadradu"
            },
            areaAcre: {
                other: "{0} ákri"
            },
            areaSquareYard: {
                other: "{0} jarda kuadradu"
            },
            areaSquareFoot: {
                other: "{0} pé kuadradu"
            },
            areaSquareInch: {
                other: "{0} pulegada kuadradu"
            },
            concentrKarat: {
                other: "{0} kilati"
            },
            consumptionLiterPerKilometer: {
                other: "{0} litru pur kilómetru"
            },
            consumptionMilePerGallon: {
                other: "{0} milha pur galãu"
            },
            digitalTerabyte: {
                other: "{0} terabyte"
            },
            digitalTerabit: {
                other: "{0} terabit"
            },
            digitalGigabyte: {
                other: "{0} jigabyte"
            },
            digitalGigabit: {
                other: "{0} jigabit"
            },
            digitalMegabyte: {
                other: "{0} megabyte"
            },
            digitalMegabit: {
                other: "{0} megabit"
            },
            digitalKilobyte: {
                other: "{0} kilobyte"
            },
            digitalKilobit: {
                other: "{0} kilobit"
            },
            digitalByte: {
                other: "{0} byte"
            },
            digitalBit: {
                other: "{0} bit"
            },
            durationYear: {
                other: "{0} anu"
            },
            durationMonth: {
                other: "{0} mes"
            },
            durationWeek: {
                other: "{0} simana"
            },
            durationDay: {
                other: "{0} dia"
            },
            durationHour: {
                other: "{0} ora"
            },
            durationMinute: {
                other: "{0} minutu"
            },
            durationSecond: {
                other: "{0} sigundu"
            },
            durationMillisecond: {
                other: "{0} milisigundu"
            },
            durationMicrosecond: {
                other: "{0} mikrosigundu"
            },
            durationNanosecond: {
                other: "{0} nanosigundu"
            },
            lengthKilometer: {
                other: "{0} kilómetru"
            },
            lengthMeter: {
                other: "{0} métru"
            },
            lengthDecimeter: {
                other: "{0} desímetru"
            },
            lengthCentimeter: {
                other: "{0} sentímetru"
            },
            lengthMillimeter: {
                other: "{0} milímetru"
            },
            lengthMicrometer: {
                other: "{0} mikrómetru"
            },
            lengthNanometer: {
                other: "{0} nanómetru"
            },
            lengthPicometer: {
                other: "{0} pikómetru"
            },
            lengthMile: {
                other: "{0} milha"
            },
            lengthYard: {
                other: "{0} jarda"
            },
            lengthFoot: {
                other: "{0} pé"
            },
            lengthInch: {
                other: "{0} pulegada"
            },
            lengthParsec: {
                other: "{0} parsek"
            },
            lengthLightYear: _3mmj1,
            lengthAstronomicalUnit: {
                other: "{0} unidadi astronómiku"
            },
            lengthNauticalMile: {
                other: "{0} milha náutiku"
            },
            lightLux: {
                other: "{0} lux"
            },
            speedKilometerPerHour: {
                other: "{0} kilómetru pur ora"
            },
            speedMeterPerSecond: {
                other: "{0} métru pur sigundu"
            },
            speedMilePerHour: {
                other: "{0} milha pur ora"
            },
            volumeCubicKilometer: {
                other: "{0} kilómetru kúbiku"
            },
            volumeCubicMeter: {
                other: "{0} métru kúbiku"
            },
            volumeCubicCentimeter: {
                other: "{0} sentímetru kúbiku"
            },
            volumeCubicMile: {
                other: "{0} milha kúbiku"
            },
            volumeCubicYard: {
                other: "{0} jarda kúbiku"
            },
            volumeCubicFoot: {
                other: "{0} pé kúbiku"
            },
            volumeCubicInch: {
                other: "{0} pulegada kúbiku"
            },
            volumeMegaliter: {
                other: "{0} megalitru"
            },
            volumeHectoliter: {
                other: "{0} ektolitru"
            },
            volumeLiter: {
                other: "{0} litru"
            },
            volumeDeciliter: {
                other: "{0} desilitru"
            },
            volumeCentiliter: {
                other: "{0} sentilitru"
            },
            volumeMilliliter: {
                other: "{0} mililitru"
            },
            volumeAcreFoot: {
                other: "{0} ákri-pé"
            },
            volumeGallon: {
                other: "{0} galãu"
            },
            volumeQuart: {
                other: "{0} kuart"
            },
            volumePint: {
                other: "{0} pint"
            },
            volumeCup: {
                other: "{0} xávina"
            },
            volumeFluidOunce: {
                other: "{0} ónsa fluídu"
            },
            volumeTablespoon: {
                other: "{0} kudjer di sopa"
            },
            volumeTeaspoon: {
                other: "{0} kudjer di xá"
            }
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                other: "{0} m/s²"
            },
            angleRadian: {
                other: "{0} rad"
            },
            angleDegree: {
                other: "{0}°"
            },
            angleArcMinute: {
                other: "{0}′"
            },
            angleArcSecond: {
                other: "{0}″"
            },
            areaSquareKilometer: {
                other: "{0} km²"
            },
            areaHectare: {
                other: "{0} ha"
            },
            areaSquareMeter: {
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                other: "{0} cm²"
            },
            areaSquareMile: {
                other: "{0} mi²"
            },
            areaAcre: {
                other: "{0} ac"
            },
            areaSquareYard: {
                other: "{0} yd²"
            },
            areaSquareFoot: {
                other: "{0} ft²"
            },
            areaSquareInch: {
                other: "{0} in²"
            },
            concentrKarat: {
                other: "{0} kt"
            },
            consumptionLiterPerKilometer: {
                other: "{0} l/km"
            },
            consumptionMilePerGallon: {
                other: "{0} mpg"
            },
            digitalTerabyte: {
                other: "{0} TB"
            },
            digitalTerabit: {
                other: "{0} Tb"
            },
            digitalGigabyte: {
                other: "{0} GB"
            },
            digitalGigabit: {
                other: "{0} Gb"
            },
            digitalMegabyte: {
                other: "{0} MB"
            },
            digitalMegabit: {
                other: "{0} Mb"
            },
            digitalKilobyte: {
                other: "{0} KB"
            },
            digitalKilobit: {
                other: "{0} Kb"
            },
            digitalByte: {
                other: "{0} B"
            },
            digitalBit: {
                other: "{0} b"
            },
            durationYear: {
                other: "{0} anu"
            },
            durationMonth: {
                other: "{0} mes"
            },
            durationWeek: {
                other: "{0} sim."
            },
            durationDay: {
                other: "{0} dia"
            },
            durationHour: {
                other: "{0} h"
            },
            durationMinute: {
                other: "{0} min."
            },
            durationSecond: {
                other: "{0} sig."
            },
            durationMillisecond: {
                other: "{0} ms"
            },
            durationMicrosecond: {
                other: "{0} μs"
            },
            durationNanosecond: {
                other: "{0} ns"
            },
            electricAmpere: {
                other: "{0} A"
            },
            electricMilliampere: {
                other: "{0} mA"
            },
            electricOhm: {
                other: "{0} Ω"
            },
            electricVolt: {
                other: "{0} V"
            },
            energyKilocalorie: {
                other: "{0} kcal"
            },
            energyCalorie: {
                other: "{0} cal"
            },
            energyFoodcalorie: {
                other: "{0} Cal"
            },
            energyKilojoule: {
                other: "{0} kJ"
            },
            energyKilowattHour: {
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                other: "{0} kHz"
            },
            frequencyHertz: {
                other: "{0} Hz"
            },
            lengthKilometer: {
                other: "{0} km"
            },
            lengthMeter: {
                other: "{0} m"
            },
            lengthDecimeter: {
                other: "{0} dm"
            },
            lengthCentimeter: {
                other: "{0} cm"
            },
            lengthMillimeter: {
                other: "{0} mm"
            },
            lengthMicrometer: {
                other: "{0} µm"
            },
            lengthNanometer: {
                other: "{0} nm"
            },
            lengthPicometer: {
                other: "{0} pm"
            },
            lengthMile: {
                other: "{0} mi"
            },
            lengthYard: {
                other: "{0} yd"
            },
            lengthFoot: {
                other: "{0} pé"
            },
            lengthInch: {
                other: "{0} in"
            },
            lengthParsec: {
                other: "{0} pc"
            },
            lengthLightYear: _3mmj1,
            lengthAstronomicalUnit: {
                other: "{0} ua"
            },
            lengthNauticalMile: {
                other: "{0} nmi"
            },
            lightLux: {
                other: "{0} lx"
            },
            massMetricTon: {
                other: "{0} t"
            },
            massGram: {
                other: "{0} g"
            },
            massMilligram: {
                other: "{0} mg"
            },
            massMicrogram: {
                other: "{0} µg"
            },
            massTon: {
                other: "{0} tn"
            },
            massPound: {
                other: "{0} lb"
            },
            massOunce: {
                other: "{0} oz"
            },
            massOunceTroy: {
                other: "{0} oz t"
            },
            massCarat: {
                other: "{0} CD"
            },
            powerGigawatt: {
                other: "{0} GW"
            },
            powerMegawatt: {
                other: "{0} MW"
            },
            powerKilowatt: {
                other: "{0} kW"
            },
            powerWatt: {
                other: "{0} W"
            },
            powerMilliwatt: {
                other: "{0} mW"
            },
            pressureHectopascal: {
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                other: "{0} psi"
            },
            pressureInchHg: {
                other: "{0} inHg"
            },
            pressureMillibar: {
                other: "{0} mbar"
            },
            speedKilometerPerHour: {
                other: "{0} km/h"
            },
            speedMeterPerSecond: {
                other: "{0} m/s"
            },
            speedMilePerHour: {
                other: "{0} mi/h"
            },
            temperatureKelvin: {
                other: "{0} K"
            },
            volumeCubicKilometer: {
                other: "{0} km³"
            },
            volumeCubicMeter: {
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                other: "{0} cm³"
            },
            volumeCubicMile: {
                other: "{0} mi³"
            },
            volumeCubicYard: {
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                other: "{0} ft³"
            },
            volumeCubicInch: {
                other: "{0} in³"
            },
            volumeMegaliter: {
                other: "{0} Ml"
            },
            volumeHectoliter: {
                other: "{0} hl"
            },
            volumeLiter: {
                other: "{0} l"
            },
            volumeDeciliter: {
                other: "{0} dl"
            },
            volumeCentiliter: {
                other: "{0} cl"
            },
            volumeMilliliter: {
                other: "{0} ml"
            },
            volumeAcreFoot: {
                other: "{0} ac ft"
            },
            volumeGallon: {
                other: "{0} gal"
            },
            volumeQuart: {
                other: "{0} qt"
            },
            volumePint: {
                other: "{0} pt"
            },
            volumeCup: {
                other: "{0} xáv."
            },
            volumeFluidOunce: {
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                other: "{0} k.sp."
            },
            volumeTeaspoon: {
                other: "{0} k.xá"
            },
            angleRevolution: {
                other: "{0} rev"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            "consumptionLiterPer-100kilometers": {
                other: "{0} L/100km"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            durationCentury: {
                other: "{0} c"
            },
            energyJoule: {
                other: "{0} J"
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            lengthMileScandinavian: {
                other: "{0} smi"
            },
            massKilogram: {
                other: "{0} kg"
            },
            massStone: {
                other: "{0} st"
            },
            powerHorsepower: {
                other: "{0} hp"
            },
            speedKnot: {
                other: "{0} kn"
            },
            temperatureGeneric: {
                other: "{0}°"
            },
            temperatureCelsius: {
                other: "{0}°C"
            },
            temperatureFahrenheit: {
                other: "{0}°F"
            },
            volumePintMetric: {
                other: "{0} mpt"
            },
            volumeCupMetric: {
                other: "{0} mc"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            durationYear: {
                other: "{0} anu"
            },
            durationMonth: {
                other: "{0} mes"
            },
            durationWeek: {
                other: "{0} sim."
            },
            durationDay: {
                other: "{0} dia"
            },
            durationHour: {
                other: "{0} h"
            },
            durationMinute: {
                other: "{0} min."
            },
            durationSecond: {
                other: "{0} s"
            },
            durationMillisecond: {
                other: "{0} ms"
            },
            lengthKilometer: {
                other: "{0} km"
            },
            lengthMeter: {
                other: "{0} m"
            },
            lengthCentimeter: {
                other: "{0} cm"
            },
            lengthMillimeter: {
                other: "{0} mm"
            },
            massKilogram: {
                other: "{0} kg"
            },
            massGram: {
                other: "{0} g"
            },
            speedKilometerPerHour: {
                other: "{0} km/h"
            },
            volumeLiter: {
                other: "{0} l"
            }
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "Ora di {0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "Ora di {0} (verãu)",
        standard: "Ora di {0} (normal)"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "b", "d", "{dj}", "e", "f", "g", "h", "i", "j", "k", "l", "{lh}", "m", "n", "ñ", "{nh}", "o", "p", "r", "s", "t", "{tx}", "u", "v", "x", "y", "z" ],
        auxiliary: [ "á", "à", "ă", "â", "å", "ä", "ã", "ā", "æ", "c", "ç", "é", "è", "ĕ", "ê", "ë", "ẽ", "ē", "í", "ì", "ĭ", "î", "ï", "ĩ", "ī", "{n\\u0308}", "ó", "ò", "ŏ", "ô", "ö", "õ", "ø", "ō", "œ", "q", "{rr}", "ú", "ù", "ŭ", "û", "ü", "ũ", "ū", "w", "ÿ" ],
        index: [ "A", "B", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "R", "S", "T", "U", "V", "X", "Z" ],
        punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "(", ")", "\\[", "\\]", "\\{", "\\}" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _3mmj443,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _3mmj485,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _3mmj485,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _3mmj443,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _3mmj443,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _3mmj443,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _3mmj443,
        digits: "renderEthiopic"
    },
    finance: _3mmj446,
    fullwide: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _3mmj443,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _3mmj443,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _3mmj443,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _3mmj443,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _3mmj448,
    hansfin: _3mmj449,
    hant: _3mmj448,
    hantfin: _3mmj449,
    hebr: {
        symbols: _3mmj443,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _3mmj443,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _3mmj448,
    jpanfin: _3mmj449,
    kali: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _3mmj443,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _3mmj443,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _3mmj443,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _3mmj443,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _3mmj443,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _3mmj443,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _3mmj443,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _3mmj443,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _3mmj446,
    nkoo: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _3mmj443,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _3mmj443,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _3mmj443,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _3mmj443,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _3mmj443,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _3mmj443,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _3mmj446,
    vaii: {
        symbols: _3mmj443,
        formats: _3mmj485,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _3mmj443,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _3mmj480,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3mmj479,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3mmj469,
        dayPeriods: _3mmj444,
        monthNames: _3mmj471,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _3mmj458,
        fields: _3mmj487
    },
    chinese: _3mmj491,
    coptic: {
        dateFormats: _3mmj480,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3mmj479,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3mmj469,
        dayPeriods: _3mmj444,
        monthNames: {
            format: _3mmj462,
            standAlone: _3mmj462
        },
        eraNames: _3mmj66,
        quarterNames: _3mmj458,
        fields: _3mmj487
    },
    dangi: _3mmj491,
    ethioaa: _3mmj488,
    ethiopic: {
        dateFormats: _3mmj480,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3mmj479,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3mmj469,
        dayPeriods: _3mmj444,
        monthNames: {
            format: _3mmj464,
            standAlone: _3mmj464
        },
        eraNames: _3mmj66,
        quarterNames: _3mmj458,
        fields: _3mmj487
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d 'di' MMMM 'di' y",
                longDate: "d 'di' MMMM 'di' y",
                mediumDate: "d MMM y",
                shortDate: "d/M/y",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "d/M/y HH:mm",
                mediumDateTime: "d MMM y HH:mm:ss",
                longDateTime: "d 'di' MMMM 'di' y HH:mm:ss z",
                fullDateTime: "EEEE, d 'di' MMMM 'di' y HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E, d",
                Ehm: "E, h:mm a",
                EHm: "E, HH:mm",
                Ehms: "E, h:mm:ss a",
                EHms: "E, HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM 'di' y G",
                GyMMMd: "d 'di' MMM 'di' y G",
                GyMMMEd: "E, d 'di' MMM 'di' y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                M: "L",
                Md: "dd/MM",
                MEd: "E, dd/MM",
                MMdd: "dd/MM",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E, d MMM",
                MMMMd: "d 'di' MMMM",
                MMMMEd: "E, d 'di' MMMM",
                mmss: "mm:ss",
                ms: "mm:ss",
                y: "y",
                yM: "MM/y",
                yMd: "dd/MM/y",
                yMEd: "E, dd/MM/y",
                yMM: "MM/y",
                yMMM: "MMM 'di' y",
                yMMMd: "d MMM y",
                yMMMEd: "E, d MMM y",
                yMMMM: "MMMM 'di' y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ 'di' y",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d – d"
            },
            h: {
                a: "h a – h a",
                h: "h – h a"
            },
            H: {
                H: "HH – HH"
            },
            hm: {
                a: "h:mm a – h:mm a",
                h: "h:mm – h:mm a",
                m: "h:mm – h:mm a"
            },
            Hm: {
                H: "HH:mm – HH:mm",
                m: "HH:mm – HH:mm"
            },
            hmv: {
                a: "h:mm a – h:mm a v",
                h: "h:mm – h:mm a v",
                m: "h:mm – h:mm a v"
            },
            Hmv: {
                H: "HH:mm – HH:mm v",
                m: "HH:mm – HH:mm v"
            },
            hv: {
                a: "h a – h a v",
                h: "h – h a v"
            },
            Hv: {
                H: "HH – HH v"
            },
            M: {
                M: "M – M"
            },
            Md: _3mmj54,
            MEd: _3mmj58,
            MMM: {
                M: "LLL – LLL"
            },
            MMMd: {
                d: "d – d MMM",
                M: "dd/MM – dd/MM"
            },
            MMMEd: _3mmj58,
            y: {
                y: "y – y"
            },
            yM: _3mmj48,
            yMd: _3mmj281,
            yMEd: _3mmj409,
            yMMM: _3mmj51,
            yMMMd: _3mmj94,
            yMMMEd: _3mmj395,
            yMMMM: {
                M: "MMMM – MMMM 'di' y",
                y: "MMMM y – MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3mmj469,
        dayPeriods: _3mmj444,
        monthNames: _3mmj471,
        eraNames: {
            wide: [ "Antis di Kristu", "Dispos di Kristu" ],
            abbreviated: [ "AK", "DK" ]
        },
        quarterNames: _3mmj458,
        fields: _3mmj487
    },
    hebrew: {
        dateFormats: _3mmj480,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3mmj479,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3mmj469,
        dayPeriods: _3mmj444,
        monthNames: {
            format: _3mmj459,
            standAlone: _3mmj459
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _3mmj458,
        fields: _3mmj487
    },
    indian: {
        dateFormats: _3mmj480,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3mmj479,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3mmj469,
        dayPeriods: _3mmj444,
        monthNames: {
            format: _3mmj465,
            standAlone: _3mmj465
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _3mmj458,
        fields: _3mmj487
    },
    islamic: _3mmj490,
    "islamic-umalqura": _3mmj490,
    "islamic-tbla": _3mmj490,
    "islamic-civil": _3mmj490,
    "islamic-rgsa": _3mmj490,
    iso8601: _3mmj488,
    japanese: {
        dateFormats: _3mmj480,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3mmj479,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3mmj469,
        dayPeriods: _3mmj444,
        monthNames: _3mmj471,
        eraNames: {
            wide: _3mmj486,
            abbreviated: _3mmj486
        },
        quarterNames: _3mmj458,
        fields: _3mmj487
    },
    persian: {
        dateFormats: _3mmj480,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3mmj479,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3mmj469,
        dayPeriods: _3mmj444,
        monthNames: {
            format: _3mmj461,
            standAlone: _3mmj461
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _3mmj458,
        fields: _3mmj487
    },
    roc: {
        dateFormats: _3mmj480,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3mmj479,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3mmj469,
        dayPeriods: _3mmj444,
        monthNames: _3mmj471,
        eraNames: {
            wide: _3mmj34,
            abbreviated: _3mmj34
        },
        quarterNames: _3mmj458,
        fields: _3mmj487
    },
    islamicc: _3mmj488
};

inter.pluralRule = function(n) {
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 93), {
    id: "America/Blanc-Sablon",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Blank-Sablon",
    countryId: "CA"
}, P.timeZones.slice(94, 419));

inter.territories = [ _3mmj301, _3mmj323, _3mmj104, _3mmj191, _3mmj230, _3mmj154, _3mmj155, _3mmj156, _3mmj67, _3mmj356, _3mmj332, _3mmj192, _3mmj260, _3mmj193, _3mmj118, _3mmj261, _3mmj366, _3mmj194, _3mmj285, _3mmj157, _3mmj286, _3mmj158, _3mmj231, _3mmj195, _3mmj159, _3mmj119, _3mmj232, _3mmj196, _3mmj357, _3mmj233, _3mmj160, _3mmj161, _3mmj234, _3mmj315, _3mmj197, _3mmj120, _3mmj198, _3mmj81, _3mmj262, _3mmj199, _3mmj235, _3mmj121, _3mmj200, _3mmj302, _3mmj371, _3mmj333, _3mmj390, _3mmj400, _3mmj391, _3mmj376, _3mmj122, _3mmj263, _3mmj264, _3mmj162, _3mmj123, _3mmj163, _3mmj105, _3mmj164, _3mmj124, _3mmj334, _3mmj106, _3mmj344, _3mmj287, _3mmj201, _3mmj165, _3mmj303, _3mmj265, _3mmj107, _3mmj266, _3mmj125, _3mmj77, _3mmj324, _3mmj87, _3mmj92, _3mmj304, _3mmj82, _3mmj288, _3mmj305, _3mmj316, _3mmj79, _3mmj267, _3mmj335, _3mmj392, _3mmj317, _3mmj336, _3mmj405, _3mmj325, _3mmj326, _3mmj377, _3mmj401, _3mmj383, {
    id: "QO",
    displayName: "Ilhas di Oseania",
    regionId: "009",
    hasTimeZones: false
}, _3mmj306, _3mmj126, _3mmj268, _3mmj127, _3mmj236, _3mmj202, _3mmj108, _3mmj237, _3mmj166, _3mmj167, _3mmj203, _3mmj204, _3mmj128, _3mmj129, _3mmj407, _3mmj269, _3mmj205, _3mmj238, _3mmj289, _3mmj239, _3mmj240, _3mmj206, _3mmj168, _3mmj68, _3mmj355, _3mmj362, _3mmj130, _3mmj290, _3mmj131, _3mmj270, _3mmj241, _3mmj242, _3mmj358, _3mmj345, _3mmj346, _3mmj327, _3mmj291, _3mmj347, _3mmj207, _3mmj208, _3mmj109, _3mmj169, _3mmj209, _3mmj110, _3mmj210, _3mmj170, _3mmj171, _3mmj211, _3mmj132, _3mmj243, _3mmj292, _3mmj293, _3mmj294, _3mmj172, _3mmj173, _3mmj212, _3mmj244, _3mmj111, _3mmj133, _3mmj213, _3mmj271, _3mmj272, _3mmj295, _3mmj359, _3mmj378, _3mmj372, _3mmj337, _3mmj214, _3mmj296, _3mmj245, _3mmj174, _3mmj246, _3mmj247, _3mmj297, _3mmj65, _3mmj273, _3mmj175, _3mmj215, _3mmj134, _3mmj135, _3mmj136, _3mmj216, _3mmj274, _3mmj112, _3mmj384, _3mmj393, _3mmj217, _3mmj338, _3mmj328, _3mmj176, _3mmj113, _3mmj218, _3mmj348, _3mmj248, _3mmj137, _3mmj275, _3mmj177, _3mmj349, _3mmj249, _3mmj114, _3mmj250, _3mmj363, _3mmj360, _3mmj298, _3mmj219, _3mmj251, _3mmj307, _3mmj426, _3mmj424, _3mmj411, _3mmj406, _3mmj350, _3mmj373, _3mmj220, _3mmj178, _3mmj179, _3mmj138, _3mmj139, _3mmj329, _3mmj299, _3mmj367, _3mmj308, _3mmj309, _3mmj339, _3mmj252, _3mmj221, _3mmj276, _3mmj180, _3mmj88, _3mmj277, _3mmj140, _3mmj253, _3mmj254, _3mmj181, _3mmj278, _3mmj385, _3mmj182, _3mmj310, _3mmj402, _3mmj141, _3mmj318, _3mmj183, _3mmj142, _3mmj379, _3mmj368, _3mmj222, _3mmj255, _3mmj374, _3mmj340, _3mmj403, _3mmj380, _3mmj386, _3mmj387, _3mmj369, _3mmj311, _3mmj279, _3mmj184, _3mmj256, _3mmj185, _3mmj312, _3mmj115, _3mmj223, _3mmj143, _3mmj361, _3mmj95, _3mmj224, _3mmj186, _3mmj330, _3mmj187, _3mmj144, _3mmj341, _3mmj188, _3mmj225, _3mmj189, _3mmj226, _3mmj300, _3mmj227, _3mmj257, _3mmj228, _3mmj280, _3mmj116, _3mmj117, _3mmj145, _3mmj190, _3mmj258, _3mmj342, _3mmj394, _3mmj404, _3mmj388, _3mmj319, _3mmj381, _3mmj389, _3mmj375 ];

inter.regions = [ _3mmj366, _3mmj333, _3mmj390, _3mmj400, _3mmj391, _3mmj376, _3mmj355, _3mmj359, _3mmj378, _3mmj372, _3mmj337, _3mmj65, _3mmj384, _3mmj393, _3mmj348, _3mmj360, _3mmj411, _3mmj402, _3mmj379, _3mmj368, _3mmj342, _3mmj394, _3mmj404, _3mmj388, _3mmj319, _3mmj381, _3mmj389, _3mmj375 ];

inter.countries = [ _3mmj301, _3mmj323, _3mmj104, _3mmj191, _3mmj230, _3mmj154, _3mmj155, _3mmj156, _3mmj67, _3mmj356, _3mmj332, _3mmj192, _3mmj260, _3mmj193, _3mmj118, _3mmj261, _3mmj194, _3mmj285, _3mmj157, _3mmj286, _3mmj158, _3mmj231, _3mmj195, _3mmj159, _3mmj119, _3mmj232, _3mmj196, _3mmj357, _3mmj233, _3mmj160, _3mmj161, _3mmj234, _3mmj315, _3mmj197, _3mmj120, _3mmj198, _3mmj81, _3mmj262, _3mmj199, _3mmj235, _3mmj121, _3mmj200, _3mmj302, _3mmj371, _3mmj122, _3mmj263, _3mmj264, _3mmj162, _3mmj123, _3mmj163, _3mmj105, _3mmj164, _3mmj124, _3mmj334, _3mmj106, _3mmj344, _3mmj287, _3mmj201, _3mmj165, _3mmj303, _3mmj265, _3mmj107, _3mmj266, _3mmj125, _3mmj77, _3mmj324, _3mmj87, _3mmj92, _3mmj304, _3mmj82, _3mmj288, _3mmj305, _3mmj316, _3mmj79, _3mmj267, _3mmj335, _3mmj392, _3mmj317, _3mmj336, _3mmj405, _3mmj325, _3mmj326, _3mmj377, _3mmj401, _3mmj383, _3mmj306, _3mmj126, _3mmj268, _3mmj127, _3mmj236, _3mmj202, _3mmj108, _3mmj237, _3mmj166, _3mmj167, _3mmj203, _3mmj204, _3mmj128, _3mmj129, _3mmj407, _3mmj269, _3mmj205, _3mmj238, _3mmj289, _3mmj239, _3mmj240, _3mmj206, _3mmj168, _3mmj68, _3mmj362, _3mmj130, _3mmj290, _3mmj131, _3mmj270, _3mmj241, _3mmj242, _3mmj358, _3mmj345, _3mmj346, _3mmj327, _3mmj291, _3mmj347, _3mmj207, _3mmj208, _3mmj109, _3mmj169, _3mmj209, _3mmj110, _3mmj210, _3mmj170, _3mmj171, _3mmj211, _3mmj132, _3mmj243, _3mmj292, _3mmj293, _3mmj294, _3mmj172, _3mmj173, _3mmj212, _3mmj244, _3mmj111, _3mmj133, _3mmj213, _3mmj271, _3mmj272, _3mmj295, _3mmj214, _3mmj296, _3mmj245, _3mmj174, _3mmj246, _3mmj247, _3mmj297, _3mmj273, _3mmj175, _3mmj215, _3mmj134, _3mmj135, _3mmj136, _3mmj216, _3mmj274, _3mmj112, _3mmj217, _3mmj338, _3mmj328, _3mmj176, _3mmj113, _3mmj218, _3mmj248, _3mmj137, _3mmj275, _3mmj177, _3mmj349, _3mmj249, _3mmj114, _3mmj250, _3mmj363, _3mmj298, _3mmj219, _3mmj251, _3mmj307, _3mmj426, _3mmj424, _3mmj406, _3mmj350, _3mmj373, _3mmj220, _3mmj178, _3mmj179, _3mmj138, _3mmj139, _3mmj329, _3mmj299, _3mmj367, _3mmj308, _3mmj309, _3mmj339, _3mmj252, _3mmj221, _3mmj276, _3mmj180, _3mmj88, _3mmj277, _3mmj140, _3mmj253, _3mmj254, _3mmj181, _3mmj278, _3mmj385, _3mmj182, _3mmj310, _3mmj141, _3mmj318, _3mmj183, _3mmj142, _3mmj222, _3mmj255, _3mmj374, _3mmj340, _3mmj403, _3mmj380, _3mmj386, _3mmj387, _3mmj369, _3mmj311, _3mmj279, _3mmj184, _3mmj256, _3mmj185, _3mmj312, _3mmj115, _3mmj223, _3mmj143, _3mmj361, _3mmj95, _3mmj224, _3mmj186, _3mmj330, _3mmj187, _3mmj144, _3mmj341, _3mmj188, _3mmj225, _3mmj189, _3mmj226, _3mmj300, _3mmj227, _3mmj257, _3mmj228, _3mmj280, _3mmj116, _3mmj117, _3mmj145, _3mmj190, _3mmj258 ];

inter.languages = [ {
    id: "ab",
    displayName: "abkaziu"
}, {
    id: "af",
    displayName: "afrikaner",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ay",
    displayName: "aimara"
}, {
    id: "ht",
    displayName: "aitianu"
}, {
    id: "ak",
    displayName: "akan",
    nativeDisplayName: "Akan"
}, {
    id: "en_us",
    displayName: "ingles merkanu",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "inari sami",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "arn",
    displayName: "araukanu"
}, {
    id: "en_au",
    displayName: "ingles australianu",
    nativeDisplayName: "Australian English"
}, {
    id: "az",
    displayName: "azerbaijanu",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "malaiu",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "ba",
    displayName: "baxkir"
}, {
    id: "bs",
    displayName: "bosniu",
    nativeDisplayName: "bosanski"
}, {
    id: "br",
    displayName: "bretãu",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "ingles britaniku",
    nativeDisplayName: "British English"
}, {
    id: "en_ca",
    displayName: "ingles kanadianu",
    nativeDisplayName: "Canadian English"
}, {
    id: "ca",
    displayName: "katalãu",
    nativeDisplayName: "català"
}, {
    id: "cy",
    displayName: "gales",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "dinamarkes",
    nativeDisplayName: "dansk"
}, {
    id: "de",
    displayName: "alimãu",
    nativeDisplayName: "Deutsch"
}, {
    id: "dsb",
    displayName: "sórbiu baxu",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "stonianu",
    nativeDisplayName: "eesti"
}, {
    id: "guz",
    displayName: "gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "en",
    displayName: "ingles",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "spanhol",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "spanhol europeu",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "spanhol mexikanu",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "spanhol latinu-merkanu",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "sperantu",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "basku",
    nativeDisplayName: "euskara"
}, {
    id: "ee",
    displayName: "eve",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fj",
    displayName: "fijianu"
}, {
    id: "fil",
    displayName: "filipinu",
    nativeDisplayName: "Filipino"
}, {
    id: "fr",
    displayName: "franses",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "franses kanadianu",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "franses suisu",
    nativeDisplayName: "français suisse"
}, {
    id: "fo",
    displayName: "faroes",
    nativeDisplayName: "føroyskt"
}, {
    id: "ga",
    displayName: "irlandes",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manks",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "gagauz"
}, {
    id: "gl",
    displayName: "galegu",
    nativeDisplayName: "galego"
}, {
    id: "ki",
    displayName: "kikuiu",
    nativeDisplayName: "Gikuyu"
}, {
    id: "gn",
    displayName: "guarani"
}, {
    id: "ha",
    displayName: "auza",
    nativeDisplayName: "Hausa"
}, {
    id: "bez",
    displayName: "bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hsb",
    displayName: "sórbiu altu",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "kroata",
    nativeDisplayName: "hrvatski"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "ig",
    displayName: "ibo",
    nativeDisplayName: "Igbo"
}, {
    id: "id",
    displayName: "indonéziu",
    nativeDisplayName: "Indonesia"
}, {
    id: "iu",
    displayName: "inuktitut"
}, {
    id: "zu",
    displayName: "zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "italianu",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "javanes"
}, {
    id: "dyo",
    displayName: "jola-fonyi",
    nativeDisplayName: "joola"
}, {
    id: "kea",
    displayName: "kabuverdianu",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kl",
    displayName: "groenlandes",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "kw",
    displayName: "kórniku",
    nativeDisplayName: "kernewek"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "matxame",
    nativeDisplayName: "Kimachame"
}, {
    id: "rw",
    displayName: "kiniaruanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asu",
    nativeDisplayName: "Kipare"
}, {
    id: "sw",
    displayName: "suaíli",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "suaíli kongoles",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "quc",
    displayName: "kitxe"
}, {
    id: "koi",
    displayName: "komi-permiak"
}, {
    id: "khq",
    displayName: "koira txiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "koiraboro seni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "xh",
    displayName: "koza"
}, {
    id: "ku",
    displayName: "kurdu"
}, {
    id: "nmg",
    displayName: "kuazio",
    nativeDisplayName: "Kwasio"
}, {
    id: "co",
    displayName: "kórsiku"
}, {
    id: "ebu",
    displayName: "embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "la",
    displayName: "latin"
}, {
    id: "lv",
    displayName: "letãu",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "tonganes",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lt",
    displayName: "lituanes",
    nativeDisplayName: "lietuvių"
}, {
    id: "und",
    displayName: "lingua diskonxedu"
}, {
    id: "lg",
    displayName: "luganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lb",
    displayName: "luxemburges",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "hu",
    displayName: "úngaru",
    nativeDisplayName: "magyar"
}, {
    id: "mg",
    displayName: "malgaxi",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "maltes",
    nativeDisplayName: "Malti"
}, {
    id: "mi",
    displayName: "maori"
}, {
    id: "jgo",
    displayName: "ñomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "nl",
    displayName: "olandes",
    nativeDisplayName: "Nederlands"
}, {
    id: "nb",
    displayName: "norueges bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "nn",
    displayName: "norueges nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "om",
    displayName: "oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "uz",
    displayName: "uzbeki",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pl",
    displayName: "pulaku",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "purtuges",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "purtuges brazileru",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "purtuges europeu",
    nativeDisplayName: "português europeu"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "ro",
    displayName: "rumenu",
    nativeDisplayName: "română"
}, {
    id: "cgg",
    displayName: "xiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "romanxi",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "kexua",
    nativeDisplayName: "Runasimi"
}, {
    id: "sa",
    displayName: "sanskritu"
}, {
    id: "de_ch",
    displayName: "altu alimãu suisu",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "alimãu di Suisa",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "zxx",
    displayName: "sem konteudo linguistiku"
}, {
    id: "sq",
    displayName: "albanes",
    nativeDisplayName: "shqip"
}, {
    id: "sd",
    displayName: "sindi"
}, {
    id: "sk",
    displayName: "slovaku",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "sloveniu",
    nativeDisplayName: "slovenščina"
}, {
    id: "so",
    displayName: "somali",
    nativeDisplayName: "Soomaali"
}, {
    id: "su",
    displayName: "sundanes"
}, {
    id: "fi",
    displayName: "finlandes",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "sueku",
    nativeDisplayName: "svenska"
}, {
    id: "tg",
    displayName: "tajik"
}, {
    id: "tzm",
    displayName: "tamazait di Atlas Sentral",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "kabila",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "tt",
    displayName: "tatar"
}, {
    id: "vi",
    displayName: "vietnamita",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "cv",
    displayName: "txuvaxi"
}, {
    id: "tk",
    displayName: "turkmenu",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "turku",
    nativeDisplayName: "Türkçe"
}, {
    id: "wo",
    displayName: "uolof"
}, {
    id: "nl_be",
    displayName: "flamengu",
    nativeDisplayName: "Vlaams"
}, {
    id: "fy",
    displayName: "frisiu osidental",
    nativeDisplayName: "West-Frysk"
}, {
    id: "dje",
    displayName: "zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "yo",
    displayName: "ioruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islandes",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "alimãu austriaku",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "txeku",
    nativeDisplayName: "čeština"
}, {
    id: "haw",
    displayName: "avaianu",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "gregu",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "bielorusu",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "búlgaru",
    nativeDisplayName: "български"
}, {
    id: "ky",
    displayName: "kirgiz",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "masedoniu",
    nativeDisplayName: "македонски"
}, {
    id: "ce",
    displayName: "txetxenu",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "rusu",
    nativeDisplayName: "русский"
}, {
    id: "sr",
    displayName: "sérviu",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ukranianu",
    nativeDisplayName: "українська"
}, {
    id: "kk",
    displayName: "kazak",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "arméniu",
    nativeDisplayName: "հայերեն"
}, {
    id: "he",
    displayName: "ebraiku",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uigur",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "arabi",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "arabi mudernu",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "persa",
    nativeDisplayName: "فارسی"
}, {
    id: "ps",
    displayName: "paxto",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "kurdu sentral",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "kaxmira",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepales",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marati",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "indi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "asames",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengali",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "pandjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gujarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kanares",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malaialam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "singales",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "tailandes",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "lausianu",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibetanu",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzonka",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "birmanes",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "jorjianu",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrinia",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amariku",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "kmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zh",
    displayName: "xines",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japones",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "xines simplifikadu",
    nativeDisplayName: "简体中文"
}, {
    id: "zh_hant",
    displayName: "xines tradisional",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "nuosu",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "chr",
    displayName: "xeroki",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "korianu",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Hang",
    displayName: "angul"
}, {
    id: "Armn",
    displayName: "arméniu"
}, {
    id: "Arab",
    displayName: "arábiku"
}, {
    id: "Beng",
    displayName: "bengali"
}, {
    id: "Mymr",
    displayName: "birmanes"
}, {
    id: "Bopo",
    displayName: "bopomofo"
}, {
    id: "Brai",
    displayName: "braille"
}, {
    id: "Deva",
    displayName: "devanagari"
}, {
    id: "Hebr",
    displayName: "ebraiku"
}, {
    id: "Ethi",
    displayName: "etiópiku"
}, {
    id: "Grek",
    displayName: "gregu"
}, {
    id: "Gujr",
    displayName: "gujarati"
}, {
    id: "Guru",
    displayName: "gurmuki"
}, {
    id: "Hani",
    displayName: "han"
}, {
    id: "Hira",
    displayName: "iragana"
}, {
    id: "Jpan",
    displayName: "japones"
}, {
    id: "Geor",
    displayName: "jorjianu"
}, {
    id: "Knda",
    displayName: "kanares"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Khmr",
    displayName: "kmer"
}, {
    id: "Zyyy",
    displayName: "komun"
}, {
    id: "Kore",
    displayName: "korianu"
}, {
    id: "Latn",
    displayName: "latinu"
}, {
    id: "Laoo",
    displayName: "lausianu"
}, {
    id: "Mlym",
    displayName: "malaialam"
}, {
    id: "Mong",
    displayName: "mongol"
}, {
    id: "Zxxx",
    displayName: "nãu skritu"
}, {
    id: "Orya",
    displayName: "oriya"
}, {
    id: "Zsym",
    displayName: "simbulus"
}, {
    id: "Hans",
    displayName: "simplifikadu"
}, {
    id: "Sinh",
    displayName: "singales"
}, {
    id: "Cyrl",
    displayName: "siríliku"
}, {
    id: "Zzzz",
    displayName: "skrita diskonxedu"
}, {
    id: "Thaa",
    displayName: "taana"
}, {
    id: "Thai",
    displayName: "tailandes"
}, {
    id: "Taml",
    displayName: "tamil"
}, {
    id: "Telu",
    displayName: "telugu"
}, {
    id: "Tibt",
    displayName: "tibetanu"
}, {
    id: "Hant",
    displayName: "tradisional"
} ];

inter.currencies = [ {
    id: "MGA",
    displayName: "Ariari di Madagaskar",
    symbol: "MGA",
    other: "Ariari di Madagaskar"
}, {
    id: "THB",
    displayName: "Baht tailandes",
    symbol: "฿",
    other: "Baht tailandes"
}, {
    id: "ETB",
    displayName: "Bir etiopi",
    symbol: "ETB",
    other: "Bir etiopi"
}, {
    id: "GMD",
    displayName: "Dalasi",
    symbol: "GMD",
    other: "Dalasi"
}, {
    id: "DZD",
    displayName: "Dinar arjelinu",
    symbol: "DZD",
    other: "Dinar arjelinu"
}, {
    id: "BHD",
    displayName: "Dinar di Barain",
    symbol: "BHD",
    other: "Dinar di Barain"
}, {
    id: "LYD",
    displayName: "Dinar libiu",
    symbol: "LYD",
    other: "Dinar libiu"
}, {
    id: "TND",
    displayName: "Dinar tunizianu",
    symbol: "TND",
    other: "Dinar tunizianu"
}, {
    id: "AED",
    displayName: "Diren di Emiradus Arabi Unidu",
    symbol: "AED",
    other: "Diren di Emiradus Arabi Unidu"
}, {
    id: "MAD",
    displayName: "Diren marokinu",
    symbol: "MAD",
    other: "Diren marokinu"
}, {
    id: "STD",
    displayName: "Dobra di Sãu Tume i Prinsipi",
    symbol: "STD",
    other: "Dobra di Sãu Tume i Prinsipi"
}, {
    id: "TWD",
    displayName: "Dola Novu di Taiwan",
    symbol: "NT$",
    other: "Dola Novu di Taiwan"
}, {
    id: "AUD",
    displayName: "Dola australianu",
    symbol: "AU$",
    other: "Dola australianu"
}, {
    id: "HKD",
    displayName: "Dola di Ong Kong",
    symbol: "HK$",
    other: "Dola di Ong Kong"
}, {
    id: "ZWD",
    displayName: "Dola di Zimbabue"
}, {
    id: "CAD",
    displayName: "Dola kanadianu",
    symbol: "CA$",
    other: "Dola kanadianu"
}, {
    id: "LRD",
    displayName: "Dola liberianu",
    symbol: "$",
    other: "Dola liberianu"
}, {
    id: "USD",
    displayName: "Dola merkanu",
    symbol: "US$",
    other: "Dola merkanu"
}, {
    id: "NAD",
    displayName: "Dola namibianu",
    symbol: "$",
    other: "Dola namibianu"
}, {
    id: "EUR",
    displayName: "Euro",
    symbol: "€",
    other: "Euro"
}, {
    id: "XOF",
    displayName: "Franku CFA BCEAO",
    symbol: "CFA",
    other: "Franku CFA BCEAO"
}, {
    id: "XAF",
    displayName: "Franku CFA BEAC",
    symbol: "FCFA",
    other: "Franku CFA BEAC"
}, {
    id: "BIF",
    displayName: "Franku borundes",
    symbol: "BIF",
    other: "Franku borundes"
}, {
    id: "DJF",
    displayName: "Franku di Djibuti",
    symbol: "DJF",
    other: "Franku di Djibuti"
}, {
    id: "KMF",
    displayName: "Franku di Komoris",
    symbol: "KMF",
    other: "Franku di Komoris"
}, {
    id: "CDF",
    displayName: "Franku kongoles",
    symbol: "CDF",
    other: "Franku kongoles"
}, {
    id: "RWF",
    displayName: "Franku ruandes",
    symbol: "RWF",
    other: "Franku ruandes"
}, {
    id: "CHF",
    displayName: "Franku suisu",
    symbol: "CHF",
    other: "Franku suisu"
}, {
    id: "JPY",
    displayName: "Ieni japones",
    symbol: "JP¥",
    other: "Ieni japones"
}, {
    id: "CNY",
    displayName: "Iuan xines",
    symbol: "CN¥",
    other: "Iuan xines"
}, {
    id: "AOA",
    displayName: "Kuanza",
    symbol: "AOA",
    other: "Kuanza"
}, {
    id: "MWK",
    displayName: "Kuaxa di Malaui",
    symbol: "MWK",
    other: "Kuaxa di Malaui"
}, {
    id: "ZMW",
    displayName: "Kuaxa zambianu",
    symbol: "ZMW",
    other: "Kuaxa zambianu"
}, {
    id: "ZMK",
    displayName: "Kuaxa zambianu (1968–2012)"
}, {
    id: "DKK",
    displayName: "Kuroa dinamarkeza",
    symbol: "DKK",
    other: "Kuroa dinamarkeza"
}, {
    id: "NOK",
    displayName: "Kuroa norueges",
    symbol: "NOK",
    other: "Kuroa norueges"
}, {
    id: "SEK",
    displayName: "Kuroa sueku",
    symbol: "SEK",
    other: "Kuroa sueku"
}, {
    id: "SLL",
    displayName: "Leone di Sera Leoa",
    symbol: "SLL",
    other: "Leone di Sera Leoa"
}, {
    id: "GBP",
    displayName: "Libra britaniku",
    symbol: "£",
    other: "Libra britaniku"
}, {
    id: "SHP",
    displayName: "Libra di Santa Ilena",
    symbol: "SHP",
    other: "Libra di Santa Ilena"
}, {
    id: "EGP",
    displayName: "Libra ejipsiu",
    symbol: "EGP",
    other: "Libra ejipsiu"
}, {
    id: "SDG",
    displayName: "Libra sudanes",
    symbol: "SDG",
    other: "Libra sudanes"
}, {
    id: "SDP",
    displayName: "Libra sudanes antigu"
}, {
    id: "SZL",
    displayName: "Lilanjeni",
    symbol: "SZL",
    other: "Lilanjeni"
}, {
    id: "TRY",
    displayName: "Lira turku",
    symbol: "₺",
    other: "Lira turku"
}, {
    id: "LSL",
    displayName: "Loti di Lezotu"
}, {
    id: "MZM",
    displayName: "Metikal"
}, {
    id: "XXX",
    displayName: "Mueda diskonxedu",
    other: "(mueda diskonxedu)"
}, {
    id: "ERN",
    displayName: "Nafka di Eritreia",
    symbol: "ERN",
    other: "Nafka di Eritreia"
}, {
    id: "NGN",
    displayName: "Naira",
    symbol: "₦",
    other: "Naira"
}, {
    id: "MRO",
    displayName: "Ougia",
    symbol: "MRO",
    other: "Ougia"
}, {
    id: "MXN",
    displayName: "Pezu mexikanu",
    symbol: "MX$",
    other: "Pezu mexikanu"
}, {
    id: "BWP",
    displayName: "Pula di Botsuana",
    symbol: "BWP",
    other: "Pula di Botsuana"
}, {
    id: "ZAR",
    displayName: "Rand sulafrikanu",
    symbol: "ZAR",
    other: "Rand sulafrikanu"
}, {
    id: "BRL",
    displayName: "Rial brazileru",
    symbol: "R$",
    other: "Rial brazileru"
}, {
    id: "SAR",
    displayName: "Rial saudita",
    symbol: "SAR",
    other: "Rial saudita"
}, {
    id: "RUB",
    displayName: "Rublu rusu",
    symbol: "₽",
    other: "Rublu rusu"
}, {
    id: "MUR",
    displayName: "Rupia di Maurisias",
    symbol: "MUR",
    other: "Rupia di Maurisias"
}, {
    id: "SCR",
    displayName: "Rupia di Seixelis",
    symbol: "SCR",
    other: "Rupia di Seixelis"
}, {
    id: "INR",
    displayName: "Rupia indianu",
    symbol: "₹",
    other: "Rupia indianu"
}, {
    id: "IDR",
    displayName: "Rupia indoneziu",
    symbol: "IDR",
    other: "Rupia indoneziu"
}, {
    id: "GHC",
    displayName: "Sedi di Gana"
}, {
    id: "GNS",
    displayName: "Sili"
}, {
    id: "CVE",
    displayName: "Skudu Kabuverdianu",
    symbol: "​",
    other: "Skudu Kabuverdianu"
}, {
    id: "KRW",
    displayName: "Won sul-koreanu",
    symbol: "₩",
    other: "Won sul-koreanu"
}, {
    id: "TZS",
    displayName: "Xelin di Tanzania",
    symbol: "TZS",
    other: "Xelin di Tanzania"
}, {
    id: "KES",
    displayName: "Xelin kenianu",
    symbol: "KES",
    other: "Xelin kenianu"
}, {
    id: "SOS",
    displayName: "Xelin somalianu",
    symbol: "SOS",
    other: "Xelin somalianu"
}, {
    id: "UGX",
    displayName: "Xelin ugandensi",
    symbol: "UGX",
    other: "Xelin ugandensi"
}, {
    id: "PLN",
    displayName: "Zloty polaku",
    symbol: "PLN",
    other: "Zloty polaku"
} ];

module.exports = inter;