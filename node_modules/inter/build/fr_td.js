function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./fr.js"), inter = defaults({
    renderers: {}
}, P);

var _cir51 = [ "T1", "T2", "T3", "T4" ], _cir52 = {
    all: {
        leap: "{0}bis"
    }
}, _cir53 = {
    displayName: "cadran"
}, _cir54 = {
    a: "h a – h a",
    h: "h–h a"
}, _cir55 = {
    a: "h a – h a",
    h: "h – h a"
}, _cir56 = {
    one: "+{0}h",
    other: "+{0}h"
}, _cir57 = {
    one: "−{0}h",
    other: "−{0}h"
}, _cir58 = [ "D", "L", "M", "M", "J", "V", "S" ], _cir59 = {
    one: "+{0} a",
    other: "+{0} a"
}, _cir510 = {
    one: "-{0} a",
    other: "-{0} a"
}, _cir511 = {
    one: "+{0} j",
    other: "+{0} j"
}, _cir512 = {
    one: "-{0} j",
    other: "-{0} j"
}, _cir513 = {
    one: "+{0} s",
    other: "+{0} s"
}, _cir514 = {
    one: "-{0} s",
    other: "-{0} s"
}, _cir515 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _cir516 = {
    displayName: "fuseau horaire"
}, _cir517 = {
    a: "h a – h a v",
    h: "h – h a v"
}, _cir518 = {
    d: "d–d MMM",
    M: "d MMM – d MMM"
}, _cir519 = {
    one: "+{0} m.",
    other: "+{0} m."
}, _cir520 = {
    one: "-{0} m.",
    other: "-{0} m."
}, _cir521 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _cir522 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _cir523 = {
    one: "+{0} min",
    other: "+{0} min"
}, _cir524 = {
    one: "-{0} min",
    other: "-{0} min"
}, _cir525 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _cir526 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _cir527 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _cir528 = {
    displayName: "jour de la semaine"
}, _cir529 = {
    M: "MM/y – MM/y G",
    y: "M/y – M/y G"
}, _cir530 = {
    one: "+{0} sem.",
    other: "+{0} sem."
}, _cir531 = {
    one: "-{0} sem.",
    other: "-{0} sem."
}, _cir532 = [ "di", "lu", "ma", "me", "je", "ve", "sa" ], _cir533 = {
    H: "HH:mm – HH:mm",
    m: "HH:mm – HH:mm"
}, _cir534 = {
    d: "dd/MM – dd/MM",
    M: "dd/MM – dd/MM"
}, _cir535 = {
    M: "MMM–MMM y G",
    y: "MMM y – MMM y G"
}, _cir536 = {
    one: "dans {0} a",
    other: "dans {0} a"
}, _cir537 = {
    one: "+{0} trim.",
    other: "+{0} trim."
}, _cir538 = {
    one: "-{0} trim.",
    other: "-{0} trim."
}, _cir539 = {
    one: "dans {0} j",
    other: "dans {0} j"
}, _cir540 = {
    one: "dans {0} h",
    other: "dans {0} h"
}, _cir541 = {
    one: "dans {0} s",
    other: "dans {0} s"
}, _cir542 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _cir543 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _cir544 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _cir545 = {
    "0": "ce tr",
    "1": "tr proch",
    "-1": "tr dern"
}, _cir546 = {
    one: "dans {0} m.",
    other: "dans {0} m."
}, _cir547 = {
    one: "dans {0} an",
    other: "dans {0} ans"
}, _cir548 = {
    H: "HH:mm – HH:mm v",
    m: "HH:mm – HH:mm v"
}, _cir549 = {
    one: "il y a {0} a",
    other: "il y a {0} a"
}, _cir550 = {
    one: "il y a {0} j",
    other: "il y a {0} j"
}, _cir551 = {
    one: "il y a {0} h",
    other: "il y a {0} h"
}, _cir552 = {
    one: "dans {0} min",
    other: "dans {0} min"
}, _cir553 = {
    one: "il y a {0} s",
    other: "il y a {0} s"
}, _cir554 = {
    "0": "ce dim",
    "1": "dim proch",
    "-1": "dim dern"
}, _cir555 = {
    "0": "ce lun",
    "1": "lun proch",
    "-1": "lun dern"
}, _cir556 = {
    "0": "ce mar",
    "1": "mar proch",
    "-1": "mar dern"
}, _cir557 = {
    "0": "ce mer",
    "1": "mer proch",
    "-1": "mer dern"
}, _cir558 = {
    "0": "ce jeu",
    "1": "jeu proch",
    "-1": "jeu dern"
}, _cir559 = {
    "0": "ce ven",
    "1": "ven proch",
    "-1": "ven dern"
}, _cir560 = {
    "0": "ce sam",
    "1": "sam proch",
    "-1": "sam dern"
}, _cir561 = {
    M: "MMMM – MMMM y G",
    y: "MMMM y – MMMM y G"
}, _cir562 = {
    one: "dans {0} mois",
    other: "dans {0} mois"
}, _cir563 = {
    one: "il y a {0} m.",
    other: "il y a {0} m."
}, _cir564 = {
    one: "dans {0} sem.",
    other: "dans {0} sem."
}, _cir565 = {
    one: "il y a {0} an",
    other: "il y a {0} ans"
}, _cir566 = {
    one: "dans {0} jour",
    other: "dans {0} jours"
}, _cir567 = {
    d: "E dd/MM – E dd/MM",
    M: "E dd/MM – E dd/MM"
}, _cir568 = {
    d: "E d MMM – E d MMM",
    M: "E d MMM – E d MMM"
}, _cir569 = {
    one: "dans {0} trim.",
    other: "dans {0} trim."
}, _cir570 = {
    one: "il y a {0} min",
    other: "il y a {0} min"
}, _cir571 = {
    one: "dans {0} heure",
    other: "dans {0} heures"
}, _cir572 = {
    one: "il y a {0} mois",
    other: "il y a {0} mois"
}, _cir573 = {
    one: "il y a {0} sem.",
    other: "il y a {0} sem."
}, _cir574 = {
    one: "il y a {0} jour",
    other: "il y a {0} jours"
}, _cir575 = {
    one: "dans {0} minute",
    other: "dans {0} minutes"
}, _cir576 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _cir577 = {
    one: "il y a {0} trim.",
    other: "il y a {0} trim."
}, _cir578 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _cir579 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _cir580 = [ "C", "V", "J", "Ā", "S", "B", "Ā", "K", "M", "P", "M", "P" ], _cir581 = [ "dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam." ], _cir582 = {
    one: "dans {0} semaine",
    other: "dans {0} semaines"
}, _cir583 = {
    one: "il y a {0} heure",
    other: "il y a {0} heures"
}, _cir584 = {
    one: "dans {0} seconde",
    other: "dans {0} secondes"
}, _cir585 = {
    "0": "ce dim.",
    "1": "dim. prochain",
    "-1": "dim. dernier"
}, _cir586 = {
    "0": "ce lun.",
    "1": "lun. prochain",
    "-1": "lun. dernier"
}, _cir587 = {
    "0": "ce mar.",
    "1": "mar. prochain",
    "-1": "mar. dernier"
}, _cir588 = {
    "0": "ce mer.",
    "1": "mer. prochain",
    "-1": "mer. dernier"
}, _cir589 = {
    "0": "ce jeu.",
    "1": "jeu. prochain",
    "-1": "jeu. dernier"
}, _cir590 = {
    "0": "ce ven.",
    "1": "ven. prochain",
    "-1": "ven. dernier"
}, _cir591 = {
    "0": "ce sam.",
    "1": "sam. prochain",
    "-1": "sam. dernier"
}, _cir592 = {
    one: "il y a {0} minute",
    other: "il y a {0} minutes"
}, _cir593 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _cir594 = {
    relative: _cir554
}, _cir595 = {
    relative: _cir555
}, _cir596 = {
    relative: _cir556
}, _cir597 = {
    relative: _cir557
}, _cir598 = {
    relative: _cir558
}, _cir599 = {
    relative: _cir559
}, _cir5100 = {
    relative: _cir560
}, _cir5101 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _cir5102 = [ "T", "B", "H", "K", "T", "A", "B", "B", "B", "B", "A", "M", "N" ], _cir5103 = [ "M", "T", "H", "T", "T", "Y", "M", "M", "G", "S", "H", "N", "P" ], _cir5104 = [ "T", "H", "K", "T", "S", "A", "A", "N", "I", "S", "T", "A", "E" ], _cir5105 = {
    one: "dans {0} trimestre",
    other: "dans {0} trimestres"
}, _cir5106 = {
    one: "il y a {0} semaine",
    other: "il y a {0} semaines"
}, _cir5107 = {
    one: "il y a {0} seconde",
    other: "il y a {0} secondes"
}, _cir5108 = {
    "0": "ce lundi",
    "1": "lundi prochain",
    "-1": "lundi dernier"
}, _cir5109 = {
    "0": "ce mardi",
    "1": "mardi prochain",
    "-1": "mardi dernier"
}, _cir5110 = {
    "0": "ce jeudi",
    "1": "jeudi prochain",
    "-1": "jeudi dernier"
}, _cir5111 = {
    "0": "ce trim.",
    "1": "le trim. proch.",
    "-1": "le trim. dern."
}, _cir5112 = {
    a: "h:mm a – h:mm a",
    h: "h:mm – h:mm a",
    m: "h:mm – h:mm a"
}, _cir5113 = {
    "0": "ce samedi",
    "1": "samedi prochain",
    "-1": "samedi dernier"
}, _cir5114 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _cir5115 = {
    one: "il y a {0} trimestre",
    other: "il y a {0} trimestres"
}, _cir5116 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _cir5117 = {
    "0": "ce mois-ci",
    "1": "le mois prochain",
    "-1": "le mois dernier"
}, _cir5118 = [ "1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre" ], _cir5119 = {
    relative: _cir585
}, _cir5120 = {
    relative: _cir586
}, _cir5121 = {
    relative: _cir587
}, _cir5122 = {
    relative: _cir588
}, _cir5123 = {
    relative: _cir589
}, _cir5124 = {
    relative: _cir590
}, _cir5125 = {
    relative: _cir591
}, _cir5126 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm – h:mm a v",
    m: "h:mm – h:mm a v"
}, _cir5127 = {
    d: "d–d MMM y G",
    M: "d MMM – d MMM y G",
    y: "d MMM y – d MMM y G"
}, _cir5128 = {
    "0": "cette année",
    "1": "l’année prochaine",
    "-1": "l’année dernière"
}, _cir5129 = {
    "0": "ce dimanche",
    "1": "dimanche prochain",
    "-1": "dimanche dernier"
}, _cir5130 = {
    "0": "ce mercredi",
    "1": "mercredi prochain",
    "-1": "mercredi dernier"
}, _cir5131 = {
    "0": "ce vendredi",
    "1": "vendredi prochain",
    "-1": "vendredi dernier"
}, _cir5132 = {
    d: "d/M/y – d/M/y G",
    M: "d/M/y – d/M/y G",
    y: "dd/MM/y – dd/MM/y G"
}, _cir5133 = {
    relative: _cir5108
}, _cir5134 = {
    relative: _cir5109
}, _cir5135 = {
    relative: _cir5110
}, _cir5136 = [ "dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi" ], _cir5137 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _cir5138 = {
    relative: _cir5113
}, _cir5139 = {
    future: _cir56,
    past: _cir57
}, _cir5140 = {
    "0": "cette semaine",
    "1": "la semaine prochaine",
    "-1": "la semaine dernière"
}, _cir5141 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _cir5142 = {
    future: _cir59,
    past: _cir510
}, _cir5143 = {
    future: _cir511,
    past: _cir512
}, _cir5144 = {
    future: _cir513,
    past: _cir514
}, _cir5145 = {
    relative: _cir5129
}, _cir5146 = {
    relative: _cir5130
}, _cir5147 = {
    relative: _cir5131
}, _cir5148 = {
    "0": "ce trimestre-ci",
    "1": "le trimestre prochain",
    "-1": "le trimestre dernier"
}, _cir5149 = {
    "0": "aujourd’hui",
    "1": "demain",
    "2": "après-demain",
    "-2": "avant-hier",
    "-1": "hier"
}, _cir5150 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _cir5151 = {
    d: "E d – E d MMM y G",
    M: "E d MMM – E d MMM y G",
    y: "E d MMM y – E d MMM y G"
}, _cir5152 = {
    future: _cir519,
    past: _cir520
}, _cir5153 = {
    future: _cir523,
    past: _cir524
}, _cir5154 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _cir5155 = {
    d: "E dd/MM/y – E dd/MM/y G",
    M: "E dd/MM/y – E dd/MM/y G",
    y: "E dd/MM/y – E dd/MM/y G"
}, _cir5156 = {
    future: _cir530,
    past: _cir531
}, _cir5157 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _cir5158 = [ "janv.", "févr.", "mars", "avr.", "mai", "juin", "juil.", "août", "sept.", "oct.", "nov.", "déc." ], _cir5159 = [ "1yuè", "2yuè", "3yuè", "4yuè", "5yuè", "6yuè", "7yuè", "8yuè", "9yuè", "10yuè", "11yuè", "12yuè" ], _cir5160 = {
    future: _cir537,
    past: _cir538
}, _cir5161 = [ "mäs.", "teq.", "hed.", "tah.", "ter", "yäk.", "mäg.", "miy.", "gue.", "sän.", "ham.", "näh.", "pag." ], _cir5162 = [ "tis.", "hes.", "kis.", "téb.", "sché.", "ad.I", "adar", "nis.", "iyar", "siv.", "tam.", "ab", "ell." ], _cir5163 = [ "chai.", "vai.", "jyai.", "āsha.", "shrā.", "bhā.", "āshw.", "kār.", "mār.", "pau.", "māgh", "phāl." ], _cir5164 = {
    future: _cir536,
    past: _cir549
}, _cir5165 = {
    future: _cir539,
    past: _cir550
}, _cir5166 = {
    future: _cir540,
    past: _cir551
}, _cir5167 = {
    future: _cir541,
    past: _cir553
}, _cir5168 = {
    future: _cir546,
    past: _cir563
}, _cir5169 = {
    future: _cir547,
    past: _cir565
}, _cir5170 = {
    displayName: "h",
    relativeTime: _cir5139
}, _cir5171 = {
    future: _cir552,
    past: _cir570
}, _cir5172 = [ "tout", "bâb.", "hât.", "kya.", "toub.", "amsh.", "barma.", "barmo.", "bash.", "ba’o.", "abî.", "mis.", "al-n." ], _cir5173 = {
    displayName: "a",
    relativeTime: _cir5142
}, _cir5174 = {
    displayName: "j",
    relativeTime: _cir5143
}, _cir5175 = {
    displayName: "s",
    relativeTime: _cir5144
}, _cir5176 = {
    future: _cir562,
    past: _cir572
}, _cir5177 = {
    future: _cir564,
    past: _cir573
}, _cir5178 = {
    future: _cir566,
    past: _cir574
}, _cir5179 = {
    future: _cir569,
    past: _cir577
}, _cir5180 = {
    displayName: "m.",
    relativeTime: _cir5152
}, _cir5181 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _cir5182 = {
    midnight: "min.",
    am: "AM",
    noon: "midi",
    pm: "PM",
    morning1: "mat.",
    afternoon1: "ap.m.",
    evening1: "soir",
    night1: "nuit"
}, _cir5183 = [ "janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre" ], _cir5184 = {
    future: _cir571,
    past: _cir583
}, _cir5185 = [ "zhēngyuè", "èryuè", "sānyuè", "sìyuè", "wǔyuè", "liùyuè", "qīyuè", "bāyuè", "jiǔyuè", "shíyuè", "shíyīyuè", "shí’èryuè" ], _cir5186 = [ "Tisseri", "Hesvan", "Kislev", "Tébeth", "Schébat", "Adar I", "Adar", "Nissan", "Iyar", "Sivan", "Tamouz", "Ab", "Elloul" ], _cir5187 = {
    displayName: "min",
    relativeTime: _cir5153
}, _cir5188 = {
    future: _cir575,
    past: _cir592
}, _cir5189 = [ "mouh.", "saf.", "rab. aw.", "rab. th.", "joum. oul.", "joum. tha.", "raj.", "chaa.", "ram.", "chaw.", "dhou. q.", "dhou. h." ], _cir5190 = [ "mouh.", "saf.", "rab. aw.", "rab. th.", "joum. ou.", "joum. th.", "raj.", "chaa.", "ram.", "chaw.", "dhou. qi.", "dhou. hi." ], _cir5191 = {
    midnight: "minuit",
    am: "AM",
    noon: "midi",
    pm: "PM",
    morning1: "matin",
    afternoon1: "après-midi",
    evening1: "soir",
    night1: "nuit"
}, _cir5192 = {
    future: _cir582,
    past: _cir5106
}, _cir5193 = {
    displayName: "sem.",
    relativeTime: _cir5156
}, _cir5194 = {
    future: _cir584,
    past: _cir5107
}, _cir5195 = [ "tout", "bâbâ", "hâtour", "kyakh", "toubah", "amshîr", "barmahât", "barmoudah", "bashans", "ba’ounah", "abîb", "misra", "al-nasi" ], _cir5196 = [ "mäskäräm", "teqemt", "hedar", "tahesas", "ter", "yäkatit", "mägabit", "miyazya", "guenbot", "säné", "hamlé", "nähasé", "pagumén" ], _cir5197 = {
    displayName: "j",
    relativeTime: _cir5165
}, _cir5198 = {
    displayName: "h",
    relativeTime: _cir5166
}, _cir5199 = {
    displayName: "s",
    relativeTime: _cir5167
}, _cir5200 = [ "chaitra", "vaishākh", "jyaishtha", "āshādha", "shrāvana", "bhādrapad", "āshwin", "kārtik", "mārgashīrsha", "paush", "māgh", "phālgun" ], _cir5201 = {
    displayName: "ann.",
    relativeTime: _cir5164
}, _cir5202 = {
    future: _cir5105,
    past: _cir5115
}, _cir5203 = {
    abbreviated: _cir51,
    narrow: [ "1", "2", "3", "4" ],
    wide: _cir5118
}, _cir5204 = {
    displayName: "m.",
    relativeTime: _cir5168
}, _cir5205 = {
    midnight: "minuit",
    am: "AM",
    noon: "midi",
    pm: "PM",
    morning1: "du matin",
    afternoon1: "de l’après-midi",
    evening1: "du soir",
    night1: "de nuit"
}, _cir5206 = {
    displayName: "min",
    relativeTime: _cir5171
}, _cir5207 = {
    displayName: "sem.",
    relativeTime: _cir5177
}, _cir5208 = {
    displayName: "heure",
    relativeTime: _cir5184
}, _cir5209 = {
    displayName: "minute",
    relativeTime: _cir5188
}, _cir5210 = [ "mouharram", "safar", "rabia al awal", "rabia ath-thani", "joumada al oula", "joumada ath-thania", "rajab", "chaabane", "ramadan", "chawwal", "dhou al qi`da", "dhou al-hijja" ], _cir5211 = {
    displayName: "trim.",
    relative: _cir545,
    relativeTime: _cir5160
}, _cir5212 = {
    displayName: "seconde",
    relative: [ "maintenant" ],
    relativeTime: _cir5194
}, _cir5213 = {
    format: _cir5141,
    numeric: _cir52,
    standAlone: _cir5141
}, _cir5214 = {
    displayName: "année",
    relative: _cir5128,
    relativeTime: _cir5169
}, _cir5215 = {
    displayName: "mois",
    relative: _cir5117,
    relativeTime: _cir5176
}, _cir5216 = {
    displayName: "trim.",
    relative: _cir5111,
    relativeTime: _cir5179
}, _cir5217 = {
    abbreviated: _cir581,
    narrow: _cir58,
    wide: _cir5136,
    "short": _cir532
}, _cir5218 = {
    displayName: "jour",
    relative: _cir5149,
    relativeTime: _cir5178
}, _cir5219 = {
    displayName: "semaine",
    relative: _cir5140,
    relativeTime: _cir5192
}, _cir5220 = {
    displayName: "trimestre",
    relative: _cir5148,
    relativeTime: _cir5202
}, _cir5221 = {
    abbreviated: _cir5150,
    narrow: _cir5150,
    wide: _cir5150
}, _cir5222 = {
    format: _cir5221
}, _cir5223 = {
    abbreviated: _cir5158,
    narrow: _cir576,
    wide: _cir5183
}, _cir5224 = {
    format: _cir5203,
    standAlone: _cir5203
}, _cir5225 = {
    abbreviated: _cir5159,
    narrow: _cir593,
    wide: _cir5185
}, _cir5226 = {
    abbreviated: _cir5162,
    narrow: _cir5104,
    wide: _cir5186
}, _cir5227 = {
    abbreviated: _cir5161,
    narrow: _cir5103,
    wide: _cir5196
}, _cir5228 = {
    abbreviated: _cir5163,
    narrow: _cir580,
    wide: _cir5200
}, _cir5229 = {
    abbreviated: _cir5181,
    narrow: _cir593,
    wide: _cir5181
}, _cir5230 = {
    abbreviated: _cir5172,
    narrow: _cir5102,
    wide: _cir5195
}, _cir5231 = {
    fullDate: "EEEE d MMMM U",
    longDate: "d MMMM U",
    mediumDate: "d MMM U",
    shortDate: "d/M/y",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "d/M/y h:mm a",
    mediumDateTime: "d MMM U h:mm:ss a",
    longDateTime: "d MMMM U h:mm:ss a z",
    fullDateTime: "EEEE d MMMM U h:mm:ss a zzzz"
}, _cir5232 = {
    fullDate: "EEEE d MMMM y G",
    longDate: "d MMMM y G",
    mediumDate: "d MMM y G",
    shortDate: "dd/MM/y GGGGG",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "dd/MM/y GGGGG h:mm a",
    mediumDateTime: "d MMM y G h:mm:ss a",
    longDateTime: "d MMMM y G 'à' h:mm:ss a z",
    fullDateTime: "EEEE d MMMM y G 'à' h:mm:ss a zzzz"
}, _cir5233 = {
    abbreviated: _cir5189,
    narrow: _cir593,
    wide: _cir5210
}, _cir5234 = {
    abbreviated: _cir5190,
    narrow: _cir593,
    wide: _cir5210
}, _cir5235 = {
    abbreviated: _cir5182,
    narrow: _cir5182,
    wide: _cir5191
}, _cir5236 = {
    abbreviated: _cir5182,
    narrow: _cir5182,
    wide: _cir5205
}, _cir5237 = {
    format: _cir5217,
    standAlone: _cir5217
}, _cir5238 = {
    Gy: "U",
    GyMMM: "MMM U",
    GyMMMd: "d MMM U",
    GyMMMEd: "E d MMM U",
    M: "L",
    Md: "d/M",
    MEd: "E d/M",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E d MMM",
    MMMMd: "d MMMM",
    ms: "mm:ss",
    y: "U",
    yMd: "d/M/y",
    yyyy: "U",
    yyyyM: "M/y",
    yyyyMd: "d/M/y",
    yyyyMEd: "E d/M/y",
    yyyyMMM: "MMM U",
    yyyyMMMd: "d MMM U",
    yyyyMMMEd: "E d MMM U",
    yyyyMMMM: "MMMM U",
    yyyyQQQ: "QQQ U",
    yyyyQQQQ: "QQQQ U",
    d: "d",
    E: "ccc",
    Ed: "d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d"
}, _cir5239 = {
    d: "d",
    E: "ccc",
    Ed: "E d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E d MMM y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "d/M",
    MEd: "E d/M",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E d MMM",
    MMMMd: "d MMMM",
    ms: "mm:ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M/y GGGGG",
    yyyyMd: "d/M/y GGGGG",
    yyyyMEd: "E d/M/y GGGGG",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E d MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _cir5240 = {
    d: "d",
    E: "ccc",
    Ed: "E d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E d MMM y G",
    M: "L",
    Md: "dd/MM",
    MEd: "E dd/MM",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E d MMM",
    MMMMd: "d MMMM",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M/y GGGGG",
    yyyyMd: "d/M/y GGGGG",
    yyyyMEd: "E d/M/y GGGGG",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E d MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    ms: "mm:ss",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _cir5241 = {
    format: _cir5223,
    standAlone: _cir5223
}, _cir5242 = {
    format: _cir5225,
    standAlone: _cir5225
}, _cir5243 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _cir5244 = {
    format: _cir5233,
    standAlone: _cir5234
}, _cir5245 = {
    format: _cir5236,
    standAlone: _cir5235
}, _cir5246 = {
    basic: _cir5231,
    cldr: _cir5238
}, _cir5247 = {
    basic: _cir5232,
    cldr: _cir5239
}, _cir5248 = {
    basic: _cir5232,
    cldr: _cir5240
}, _cir5249 = {
    d: {
        d: "d–d"
    },
    h: _cir54,
    H: {
        H: "HH–HH"
    },
    hm: _cir5101,
    Hm: _cir525,
    hmv: _cir5116,
    Hmv: _cir542,
    hv: _cir515,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _cir543,
    MEd: _cir578,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _cir521,
    MMMEd: _cir579,
    y: {
        y: "U–U"
    },
    yM: _cir526,
    yMd: _cir5137,
    yMEd: _cir5157,
    yMMM: _cir527,
    yMMMd: _cir5114,
    yMMMEd: _cir5154,
    yMMMM: _cir544
}, _cir5250 = {
    d: {
        d: "d – d"
    },
    h: _cir55,
    H: {
        H: "HH – HH"
    },
    hm: _cir5112,
    Hm: _cir533,
    hmv: _cir5126,
    Hmv: _cir548,
    hv: _cir517,
    Hv: {
        H: "HH – HH v"
    },
    M: {
        M: "M – M"
    },
    Md: _cir534,
    MEd: _cir567,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _cir518,
    MMMEd: _cir568,
    y: {
        y: "y – y G"
    },
    yM: _cir529,
    yMd: _cir5132,
    yMEd: _cir5155,
    yMMM: _cir535,
    yMMMd: _cir5127,
    yMMMEd: _cir5151,
    yMMMM: _cir561
}, _cir5251 = {
    abbreviated: _cir5243,
    narrow: _cir5243,
    wide: _cir5243
}, _cir5252 = {
    format: _cir5251
}, _cir5253 = {
    era: {
        displayName: "ère"
    },
    year: _cir5214,
    "year-short": _cir5201,
    "year-narrow": _cir5173,
    quarter: _cir5220,
    "quarter-short": _cir5216,
    "quarter-narrow": _cir5211,
    month: _cir5215,
    "month-short": _cir5204,
    "month-narrow": _cir5180,
    week: _cir5219,
    "week-short": _cir5207,
    "week-narrow": _cir5193,
    day: _cir5218,
    "day-short": _cir5197,
    "day-narrow": _cir5174,
    weekday: _cir528,
    dayperiod: _cir53,
    hour: _cir5208,
    "hour-short": _cir5198,
    "hour-narrow": _cir5170,
    minute: _cir5209,
    "minute-short": _cir5206,
    "minute-narrow": _cir5187,
    second: _cir5212,
    "second-short": _cir5199,
    "second-narrow": _cir5175,
    zone: _cir516,
    sun: _cir5145,
    "sun-short": _cir5119,
    "sun-narrow": _cir594,
    mon: _cir5133,
    "mon-short": _cir5120,
    "mon-narrow": _cir595,
    tue: _cir5134,
    "tue-short": _cir5121,
    "tue-narrow": _cir596,
    wed: _cir5146,
    "wed-short": _cir5122,
    "wed-narrow": _cir597,
    thu: _cir5135,
    "thu-short": _cir5123,
    "thu-narrow": _cir598,
    fri: _cir5147,
    "fri-short": _cir5124,
    "fri-narrow": _cir599,
    sat: _cir5138,
    "sat-short": _cir5125,
    "sat-narrow": _cir5100
}, _cir5254 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _cir5253
}, _cir5255 = {
    dayParts: _cir5222,
    days: _cir5252,
    months: _cir5252,
    years: _cir5252,
    zodiacs: _cir5222
}, _cir5256 = {
    dateFormats: _cir5248,
    datePartsOrder: "dmy",
    dateIntervalFormats: _cir5250,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _cir5237,
    dayPeriods: _cir5245,
    monthNames: _cir5244,
    eraNames: _cir522,
    quarterNames: _cir5224,
    fields: _cir5253
}, _cir5257 = {
    dateFormats: _cir5246,
    datePartsOrder: "dmy",
    dateIntervalFormats: _cir5249,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _cir5237,
    dayPeriods: _cir5245,
    cyclicNames: _cir5255,
    monthNames: _cir5242,
    monthPatterns: _cir5213,
    quarterNames: _cir5224,
    fields: _cir5253
};

inter.id = "fr_td";

inter.calendars = {
    buddhist: {
        dateFormats: {
            basic: _cir5232,
            cldr: {
                d: "d",
                M: "L",
                Md: "d/M",
                MEd: "E d/M",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E d MMM",
                y: "y G",
                E: "ccc",
                Ed: "E d",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E d MMM y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                MMMMd: "d MMMM",
                ms: "mm:ss",
                yyyy: "y G",
                yyyyM: "M/y GGGGG",
                yyyyMd: "d/M/y GGGGG",
                yyyyMEd: "E d/M/y GGGGG",
                yyyyMMM: "MMM y G",
                yyyyMMMd: "d MMM y G",
                yyyyMMMEd: "E d MMM y G",
                yyyyMMMM: "MMMM y G",
                yyyyQQQ: "QQQ y G",
                yyyyQQQQ: "QQQQ y G",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: _cir5250,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _cir5237,
        dayPeriods: _cir5245,
        monthNames: _cir5241,
        eraNames: {
            wide: [ "ère bouddhiste" ],
            abbreviated: [ "ère b." ]
        },
        quarterNames: _cir5224,
        fields: _cir5253
    },
    chinese: _cir5257,
    coptic: {
        dateFormats: _cir5247,
        datePartsOrder: "dmy",
        dateIntervalFormats: _cir5250,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _cir5237,
        dayPeriods: _cir5245,
        monthNames: {
            format: _cir5230,
            standAlone: _cir5230
        },
        eraNames: {
            wide: [ "avant Dioclétien", "après Dioclétien" ],
            abbreviated: [ "av. D.", "ap. D." ]
        },
        quarterNames: _cir5224,
        fields: _cir5253
    },
    dangi: _cir5257,
    ethioaa: _cir5254,
    ethiopic: {
        dateFormats: _cir5247,
        datePartsOrder: "dmy",
        dateIntervalFormats: _cir5250,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _cir5237,
        dayPeriods: _cir5245,
        monthNames: {
            format: _cir5227,
            standAlone: _cir5227
        },
        eraNames: {
            wide: [ "avant l’Incarnation", "après l’Incarnation" ],
            abbreviated: [ "av. Inc.", "ap. Inc." ]
        },
        quarterNames: _cir5224,
        fields: _cir5253
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE d MMMM y",
                longDate: "d MMMM y",
                mediumDate: "d MMM y",
                shortDate: "dd/MM/y",
                fullTime: "h:mm:ss a zzzz",
                longTime: "h:mm:ss a z",
                mediumTime: "h:mm:ss a",
                shortTime: "h:mm a",
                shortDateTime: "dd/MM/y h:mm a",
                mediumDateTime: "d MMM y 'à' h:mm:ss a",
                longDateTime: "d MMMM y 'à' h:mm:ss a z",
                fullDateTime: "EEEE d MMMM y 'à' h:mm:ss a zzzz"
            },
            cldr: {
                d: "d",
                E: "E",
                Ed: "E d",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E d MMM y G",
                h: "h a",
                H: "HH 'h'",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "dd/MM",
                MEd: "E dd/MM",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E d MMM",
                MMMMd: "d MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "MM/y",
                yMd: "dd/MM/y",
                yMEd: "E dd/MM/y",
                yMMM: "MMM y",
                yMMMd: "d MMM y",
                yMMMEd: "E d MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _cir55,
            H: {
                H: "HH – HH"
            },
            hm: _cir5112,
            Hm: _cir533,
            hmv: _cir5126,
            Hmv: _cir548,
            hv: _cir517,
            Hv: {
                H: "HH – HH v"
            },
            M: {
                M: "M–M"
            },
            Md: _cir534,
            MEd: _cir567,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _cir518,
            MMMEd: {
                d: "E d – E d MMM",
                M: "E d MMM – E d MMM"
            },
            y: {
                y: "y–y"
            },
            yM: {
                M: "MM/y – MM/y",
                y: "MM/y – MM/y"
            },
            yMd: {
                d: "dd/MM/y – dd/MM/y",
                M: "dd/MM/y – dd/MM/y",
                y: "dd/MM/y – dd/MM/y"
            },
            yMEd: {
                d: "E dd/MM/y – E dd/MM/y",
                M: "E dd/MM/y – E dd/MM/y",
                y: "E dd/MM/y – E dd/MM/y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "d–d MMM y",
                M: "d MMM – d MMM y",
                y: "d MMM y – d MMM y"
            },
            yMMMEd: {
                d: "E d – E d MMM y",
                M: "E d MMM – E d MMM y",
                y: "E d MMM y – E d MMM y"
            },
            yMMMM: {
                M: "MMMM – MMMM y",
                y: "MMMM y – MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _cir5237,
        dayPeriods: _cir5245,
        monthNames: _cir5241,
        eraNames: {
            wide: [ "avant Jésus-Christ", "après Jésus-Christ" ],
            abbreviated: [ "av. J.-C.", "ap. J.-C." ]
        },
        quarterNames: _cir5224,
        fields: _cir5253
    },
    hebrew: {
        dateFormats: _cir5247,
        datePartsOrder: "dmy",
        dateIntervalFormats: _cir5250,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _cir5237,
        dayPeriods: _cir5245,
        monthNames: {
            format: _cir5226,
            standAlone: _cir5226
        },
        eraNames: {
            wide: [ "Anno Mundi" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _cir5224,
        fields: _cir5253
    },
    indian: {
        dateFormats: _cir5247,
        datePartsOrder: "dmy",
        dateIntervalFormats: _cir5250,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _cir5237,
        dayPeriods: _cir5245,
        monthNames: {
            format: _cir5228,
            standAlone: _cir5228
        },
        eraNames: {
            wide: [ "SAKA" ],
            abbreviated: [ "SAKA" ]
        },
        quarterNames: _cir5224,
        fields: _cir5253
    },
    islamic: _cir5256,
    "islamic-umalqura": _cir5256,
    "islamic-tbla": _cir5256,
    "islamic-civil": _cir5256,
    "islamic-rgsa": _cir5256,
    iso8601: _cir5254,
    japanese: {
        dateFormats: {
            basic: {
                fullDate: "EEEE d MMMM y G",
                longDate: "d MMMM y G",
                mediumDate: "d MMM y G",
                shortDate: "dd/MM/y GGGGG",
                fullTime: "h:mm:ss a zzzz",
                longTime: "h:mm:ss a z",
                mediumTime: "h:mm:ss a",
                shortTime: "h:mm a",
                shortDateTime: "dd/MM/y GGGGG h:mm a",
                mediumDateTime: "d MMM y G h:mm:ss a",
                longDateTime: "d MMMM y G h:mm:ss a z",
                fullDateTime: "EEEE d MMMM y G h:mm:ss a zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E d",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E d MMM y G",
                M: "L",
                Md: "d/M",
                MEd: "E d/M",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E d MMM",
                MMMMd: "d MMMM",
                y: "y G",
                yyyy: "y G",
                yyyyM: "M/y GGGGG",
                yyyyMd: "d/M/y GGGGG",
                yyyyMEd: "E d/M/y GGGGG",
                yyyyMMM: "MMM y G",
                yyyyMMMd: "d MMM y G",
                yyyyMMMEd: "E d MMM y G",
                yyyyMMMM: "MMMM y G",
                yyyyQQQ: "QQQ y G",
                yyyyQQQQ: "QQQQ y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                ms: "mm:ss",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: _cir5250,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _cir5237,
        dayPeriods: _cir5245,
        monthNames: _cir5241,
        eraNames: {
            wide: [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tempyō (729–749)", "Tempyō-kampō (749-749)", "Tempyō-shōhō (749-757)", "Tempyō-hōji (757-765)", "Temphō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kemmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōryaku (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ],
            abbreviated: [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ]
        },
        quarterNames: _cir5224,
        fields: _cir5253
    },
    persian: {
        dateFormats: _cir5247,
        datePartsOrder: "dmy",
        dateIntervalFormats: _cir5250,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _cir5237,
        dayPeriods: _cir5245,
        monthNames: {
            format: _cir5229,
            standAlone: _cir5229
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _cir5224,
        fields: _cir5253
    },
    roc: {
        dateFormats: _cir5247,
        datePartsOrder: "dmy",
        dateIntervalFormats: _cir5250,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _cir5237,
        dayPeriods: _cir5245,
        monthNames: _cir5241,
        eraNames: {
            wide: [ "avant RdC", "RdC" ],
            abbreviated: [ "avant RdC", "RdC" ]
        },
        quarterNames: _cir5224,
        fields: _cir5253
    },
    islamicc: _cir5254
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n));
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 0 || i === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderDigitsOrdinalMasculine(n);
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinalMasculine(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderDigitsOrdinalMasculine = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinalMasculine(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + this.renderDordMascabbrev(n);
};

inter.renderSpelloutCardinalMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "moins " + this.renderSpelloutCardinalMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculine(Math.floor(n)) + " virgule " + this.renderSpelloutCardinalMasculine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutLeading(Math.floor(n / 1e15)) + " billiards" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 1e15) return "un billiard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutLeading(Math.floor(n / 1e12)) + " billions" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 1e12) return "un billion" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutLeading(Math.floor(n / 1e9)) + " milliards" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 1e9) return "un milliard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutLeading(Math.floor(n / 1e6)) + " millions" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 1e6) return "un million" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutLeading(Math.floor(n / 1e3)) + " mille" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 1e3) return "mille" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinalMasculine(Math.floor(n / 100)) + " cent" + this.renderCentsM(n % 100);
    if (n >= 100) return "cent" + (n === 100 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 80) return "quatre-vingt" + this.renderSubcentsM(n % 10);
    if (n >= 60) return "soixante" + (n === 60 ? "" : "-" + this.renderEtUn(n % 10));
    if (n >= 50) return "cinquante" + (n === 50 ? "" : "-" + this.renderEtUn(n % 10));
    if (n >= 40) return "quarante" + (n === 40 ? "" : "-" + this.renderEtUn(n % 10));
    if (n >= 30) return "trente" + (n === 30 ? "" : "-" + this.renderEtUn(n % 10));
    if (n >= 20) return "vingt" + (n === 20 ? "" : "-" + this.renderEtUn(n % 10));
    if (n >= 17) return "dix-" + this.renderSpelloutCardinalMasculine(n % 10);
    if (n >= 16) return "seize";
    if (n >= 15) return "quinze";
    if (n >= 14) return "quatorze";
    if (n >= 13) return "treize";
    if (n >= 12) return "douze";
    if (n >= 11) return "onze";
    if (n >= 10) return "dix";
    if (n >= 9) return "neuf";
    if (n >= 8) return "huit";
    if (n >= 7) return "sept";
    if (n >= 6) return "six";
    if (n >= 5) return "cinq";
    if (n >= 4) return "quatre";
    if (n >= 3) return "trois";
    if (n >= 2) return "deux";
    if (n >= 1) return "un";
    if (n >= 0) return "zéro";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderDordMascabbrev = function(n) {
    if (n >= 2) return "e";
    if (n >= 1) return "er";
    if (n >= 0) return "e";
};

inter.renderSpelloutLeading = function(n) {
    if (n >= 1e3) return this.renderSpelloutCardinalMasculine(n);
    if (n >= 200) return this.renderSpelloutLeading(Math.floor(n / 100)) + " cent" + (n === 200 ? "" : " " + this.renderSpelloutLeading(n % 100));
    if (n >= 100) return "cent" + (n === 100 ? "" : " " + this.renderSpelloutLeading(n % 100));
    if (n >= 80) return "quatre-vingt" + (n === 80 ? "" : "-" + this.renderSpelloutLeading(n % 10));
    if (n >= 0) return this.renderSpelloutCardinalMasculine(n);
};

inter.renderCentsM = function(n) {
    if (n >= 1) return " " + this.renderSpelloutCardinalMasculine(n);
    if (n >= 0) return "s";
};

inter.renderSubcentsM = function(n) {
    if (n >= 1) return "-" + this.renderSpelloutCardinalMasculine(n);
    if (n >= 0) return "s";
};

inter.renderEtUn = function(n) {
    if (n >= 12) return this.renderSpelloutCardinalMasculine(n);
    if (n >= 11) return "et-onze";
    if (n >= 2) return this.renderSpelloutCardinalMasculine(n);
    if (n >= 1) return "et-un";
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

module.exports = inter;