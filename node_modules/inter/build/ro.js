function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _5o8d1 = {
    "default": "#,##0 %"
}, _5o8d2 = {
    all: {
        leap: "{0}bis"
    }
}, _5o8d3 = {
    displayName: "a.m/p.m."
}, _5o8d4 = {
    displayName: "Fus orar"
}, _5o8d5 = {
    a: "h a – h a",
    h: "h–h a"
}, _5o8d6 = [ "Before R.O.C.", "R.O.C." ], _5o8d7 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _5o8d8 = [ "D", "L", "M", "M", "J", "V", "S" ], _5o8d9 = {
    d: "d–d MMM",
    M: "d MMM – d MMM"
}, _5o8d10 = {
    displayName: "Zi a săptămânii"
}, _5o8d11 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _5o8d12 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _5o8d13 = {
    one: "0 K",
    few: "0 K",
    other: "0 K"
}, _5o8d14 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _5o8d15 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _5o8d16 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _5o8d17 = {
    one: "{0}°",
    few: "{0}°",
    other: "{0}°"
}, _5o8d18 = {
    one: "00 K",
    few: "00 K",
    other: "00 K"
}, _5o8d19 = [ "du", "lu", "ma", "mi", "jo", "vi", "sâ" ], _5o8d20 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _5o8d21 = {
    d: "dd.MM – dd.MM",
    M: "dd.MM – dd.MM"
}, _5o8d22 = {
    M: "MM.y – MM.y G",
    y: "MM.y – MM.y G"
}, _5o8d23 = {
    M: "MMM–MMM y G",
    y: "MMM y – MMM y G"
}, _5o8d24 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _5o8d25 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _5o8d26 = {
    one: "{0} G",
    few: "{0} G",
    other: "{0} G"
}, _5o8d27 = {
    one: "{0} s",
    few: "{0} s",
    other: "{0} s"
}, _5o8d28 = {
    one: "{0} m",
    few: "{0} m",
    other: "{0} m"
}, _5o8d29 = {
    one: "{0} g",
    few: "{0} g",
    other: "{0} g"
}, _5o8d30 = {
    one: "{0} W",
    few: "{0} W",
    other: "{0} W"
}, _5o8d31 = {
    one: "{0} l",
    few: "{0} l",
    other: "{0} l"
}, _5o8d32 = {
    one: "000 K",
    few: "000 K",
    other: "000 K"
}, _5o8d33 = {
    M: "MMMM–MMMM y G",
    y: "MMMM y – MMMM y G"
}, _5o8d34 = {
    one: "{0} ha",
    few: "{0} ha",
    other: "{0} ha"
}, _5o8d35 = {
    one: "{0} m²",
    few: "{0} m²",
    other: "{0} m²"
}, _5o8d36 = {
    one: "{0} ms",
    few: "{0} ms",
    other: "{0} ms"
}, _5o8d37 = {
    one: "{0} km",
    few: "{0} km",
    other: "{0} km"
}, _5o8d38 = {
    one: "{0} cm",
    few: "{0} cm",
    other: "{0} cm"
}, _5o8d39 = {
    one: "{0} mm",
    few: "{0} mm",
    other: "{0} mm"
}, _5o8d40 = {
    one: "{0} pm",
    few: "{0} pm",
    other: "{0} pm"
}, _5o8d41 = {
    one: "{0} mi",
    few: "{0} mi",
    other: "{0} mi"
}, _5o8d42 = {
    one: "{0} yd",
    few: "{0} yd",
    other: "{0} yd"
}, _5o8d43 = {
    one: "{0} ft",
    few: "{0} ft",
    other: "{0} ft"
}, _5o8d44 = {
    one: "{0} in",
    few: "{0} in",
    other: "{0} in"
}, _5o8d45 = {
    one: "{0} kg",
    few: "{0} kg",
    other: "{0} kg"
}, _5o8d46 = {
    one: "{0} lb",
    few: "{0} lb",
    other: "{0} lb"
}, _5o8d47 = {
    one: "{0} oz",
    few: "{0} oz",
    other: "{0} oz"
}, _5o8d48 = {
    one: "{0} kW",
    few: "{0} kW",
    other: "{0} kW"
}, _5o8d49 = {
    one: "{0} CP",
    few: "{0} CP",
    other: "{0} CP"
}, _5o8d50 = {
    one: "{0} °C",
    few: "{0} °C",
    other: "{0} °C"
}, _5o8d51 = {
    one: "0 mie",
    few: "0 mii",
    other: "0 de mii"
}, _5o8d52 = {
    one: "+{0} h",
    few: "+{0} h",
    other: "+{0} h"
}, _5o8d53 = {
    one: "-{0} h",
    few: "-{0} h",
    other: "-{0} h"
}, _5o8d54 = {
    one: "+{0} m",
    few: "+{0} m",
    other: "+{0} m"
}, _5o8d55 = {
    one: "-{0} m",
    few: "-{0} m",
    other: "-{0} m"
}, _5o8d56 = {
    one: "+{0} s",
    few: "+{0} s",
    other: "+{0} s"
}, _5o8d57 = {
    one: "-{0} s",
    few: "-{0} s",
    other: "-{0} s"
}, _5o8d58 = [ "du.", "lu.", "ma.", "mi.", "jo.", "vi.", "sâ." ], _5o8d59 = {
    one: "{0} km²",
    few: "{0} km²",
    other: "{0} km²"
}, _5o8d60 = {
    one: "{0} mi²",
    few: "{0} mi²",
    other: "{0} mi²"
}, _5o8d61 = {
    one: "{0} ac.",
    few: "{0} ac.",
    other: "{0} ac."
}, _5o8d62 = {
    one: "{0} ft²",
    few: "{0} ft²",
    other: "{0} ft²"
}, _5o8d63 = {
    one: "{0} hPa",
    few: "{0} hPa",
    other: "{0} hPa"
}, _5o8d64 = {
    one: "{0} m/s",
    few: "{0} m/s",
    other: "{0} m/s"
}, _5o8d65 = {
    one: "{0} km³",
    few: "{0} km³",
    other: "{0} km³"
}, _5o8d66 = {
    one: "{0} mi³",
    few: "{0} mi³",
    other: "{0} mi³"
}, _5o8d67 = {
    one: "00 mie",
    few: "00 mii",
    other: "00 de mii"
}, _5o8d68 = {
    one: "0 mie ¤",
    few: "0 mii ¤",
    other: "0 mii ¤"
}, _5o8d69 = [ "trim. I", "trim. II", "trim. III", "trim. IV" ], _5o8d70 = [ "Trim. I", "Trim. II", "Trim. III", "Trim. IV" ], _5o8d71 = {
    one: "+{0} an",
    few: "+{0} ani",
    other: "+{0} ani"
}, _5o8d72 = {
    one: "-{0} an",
    few: "-{0} ani",
    other: "-{0} ani"
}, _5o8d73 = {
    one: "{0} sec.",
    few: "{0} sec.",
    other: "{0} sec."
}, _5o8d74 = {
    one: "{0} kcal",
    few: "{0} kcal",
    other: "{0} kcal"
}, _5o8d75 = {
    one: "{0} a.l.",
    few: "{0} a.l.",
    other: "{0} a.l."
}, _5o8d76 = {
    one: "{0} km/h",
    few: "{0} km/h",
    other: "{0} km/h"
}, _5o8d77 = {
    one: "{0} mi/h",
    few: "{0} mi/h",
    other: "{0} mi/h"
}, _5o8d78 = {
    one: "000 mie",
    few: "000 mii",
    other: "000 de mii"
}, _5o8d79 = {
    one: "0 mil'.'",
    few: "0 mil'.'",
    other: "0 mil'.'"
}, _5o8d80 = {
    one: "0 mld'.'",
    few: "0 mld'.'",
    other: "0 mld'.'"
}, _5o8d81 = {
    one: "00 mii ¤",
    few: "00 mii ¤",
    other: "00 mii ¤"
}, _5o8d82 = {
    id: "001",
    displayName: "Lume",
    hasTimeZones: false
}, _5o8d83 = {
    d: "E, dd.MM – E, dd.MM",
    M: "E, dd.MM – E, dd.MM"
}, _5o8d84 = {
    d: "E, d MMM – E, d MMM",
    M: "E, d MMM – E, d MMM"
}, _5o8d85 = [ "dum.", "lun.", "mar.", "mie.", "joi", "vin.", "sâm." ], _5o8d86 = [ "I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D" ], _5o8d87 = {
    one: "+{0} zi",
    few: "+{0} zile",
    other: "+{0} zile"
}, _5o8d88 = {
    one: "-{0} zi",
    few: "-{0} zile",
    other: "-{0} zile"
}, _5o8d89 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _5o8d90 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _5o8d91 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _5o8d92 = {
    one: "{0} săpt.",
    few: "{0} săpt.",
    other: "{0} săpt."
}, _5o8d93 = {
    one: "00 mil'.'",
    few: "00 mil'.'",
    other: "00 mil'.'"
}, _5o8d94 = {
    one: "00 mld'.'",
    few: "00 mld'.'",
    other: "00 mld'.'"
}, _5o8d95 = {
    one: "0 tril'.'",
    few: "0 tril'.'",
    other: "0 tril'.'"
}, _5o8d96 = {
    one: "000 mii ¤",
    few: "000 mii ¤",
    other: "000 mii ¤"
}, _5o8d97 = {
    one: "+{0} lună",
    few: "+{0} luni",
    other: "+{0} luni"
}, _5o8d98 = {
    one: "-{0} lună",
    few: "-{0} luni",
    other: "-{0} luni"
}, _5o8d99 = {
    "0": "anul acesta",
    "1": "anul viitor",
    "-1": "anul trecut"
}, _5o8d100 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _5o8d101 = {
    id: "AQ",
    displayName: "Antarctica",
    hasTimeZones: true
}, _5o8d102 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _5o8d103 = {
    "0": "D (aceasta)",
    "1": "D (viitoare)",
    "-1": "D (trecută)"
}, _5o8d104 = {
    "0": "L (aceasta)",
    "1": "L (viitoare)",
    "-1": "L (trecută)"
}, _5o8d105 = {
    "0": "J (aceasta)",
    "1": "J (viitoare)",
    "-1": "J (trecută)"
}, _5o8d106 = {
    "0": "V (aceasta)",
    "1": "V (viitoare)",
    "-1": "V (trecută)"
}, _5o8d107 = {
    "0": "S (aceasta)",
    "1": "S (viitoare)",
    "-1": "S (trecută)"
}, _5o8d108 = {
    one: "000 mil'.'",
    few: "000 mil'.'",
    other: "000 mil'.'"
}, _5o8d109 = {
    one: "000 mld'.'",
    few: "000 mld'.'",
    other: "000 mld'.'"
}, _5o8d110 = {
    one: "00 tril'.'",
    few: "00 tril'.'",
    other: "00 tril'.'"
}, _5o8d111 = {
    one: "0 mil'.' ¤",
    few: "0 mil'.' ¤",
    other: "0 mil'.' ¤"
}, _5o8d112 = {
    one: "0 mld'.' ¤",
    few: "0 mld'.' ¤",
    other: "0 mld'.' ¤"
}, _5o8d113 = {
    one: "+{0} trim.",
    few: "+{0} trim.",
    other: "+{0} trim."
}, _5o8d114 = {
    one: "-{0} trim.",
    few: "-{0} trim.",
    other: "-{0} trim."
}, _5o8d115 = {
    one: "+{0} săpt.",
    few: "+{0} săpt.",
    other: "+{0} săpt."
}, _5o8d116 = {
    one: "-{0} săpt.",
    few: "-{0} săpt.",
    other: "-{0} săpt."
}, _5o8d117 = {
    one: "acum {0} h",
    few: "acum {0} h",
    other: "acum {0} h"
}, _5o8d118 = {
    one: "0 milion",
    few: "0 milioane",
    other: "0 de milioane"
}, _5o8d119 = {
    "0": "trim. acesta",
    "1": "trim. viitor",
    "-1": "trim. trecut"
}, _5o8d120 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _5o8d121 = {
    one: "0 miliard",
    few: "0 miliarde",
    other: "0 de miliarde"
}, _5o8d122 = {
    "0": "luna aceasta",
    "1": "luna viitoare",
    "-1": "luna trecută"
}, _5o8d123 = {
    "0": "dum. aceasta",
    "1": "dum. viitoare",
    "-1": "dum. trecută"
}, _5o8d124 = {
    "0": "lun. aceasta",
    "1": "lun. viitoare",
    "-1": "lun. trecută"
}, _5o8d125 = {
    "0": "mar. aceasta",
    "1": "mar. viitoare",
    "-1": "mar. trecută"
}, _5o8d126 = {
    "0": "Ma (aceasta)",
    "1": "Ma (viitoare)",
    "-1": "Ma (trecută)"
}, _5o8d127 = {
    "0": "mie. aceasta",
    "1": "mie. viitoare",
    "-1": "mie. trecută"
}, _5o8d128 = {
    "0": "Mi (aceasta)",
    "1": "Mi (viitoare)",
    "-1": "Mi (trecută)"
}, _5o8d129 = {
    "0": "joia aceasta",
    "1": "joia viitoare",
    "-1": "joia trecută"
}, _5o8d130 = {
    "0": "vin. aceasta",
    "1": "vin. viitoare",
    "-1": "vin. trecută"
}, _5o8d131 = {
    "0": "sâm. aceasta",
    "1": "sâm. viitoare",
    "-1": "sâm. trecută"
}, _5o8d132 = {
    id: "BV",
    displayName: "Insula Bouvet",
    hasTimeZones: false
}, _5o8d133 = {
    one: "000 tril'.'",
    few: "000 tril'.'",
    other: "000 tril'.'"
}, _5o8d134 = {
    one: "00 mil'.' ¤",
    few: "00 mil'.' ¤",
    other: "00 mil'.' ¤"
}, _5o8d135 = {
    one: "00 mld'.' ¤",
    few: "00 mld'.' ¤",
    other: "00 mld'.' ¤"
}, _5o8d136 = {
    one: "0 tril'.' ¤",
    few: "0 tril'.' ¤",
    other: "0 tril'.' ¤"
}, _5o8d137 = {
    one: "peste {0} h",
    few: "peste {0} h",
    other: "peste {0} h"
}, _5o8d138 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _5o8d139 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _5o8d140 = {
    one: "00 milion",
    few: "00 milioane",
    other: "00 de milioane"
}, _5o8d141 = {
    one: "0 trilion",
    few: "0 trilioane",
    other: "0 de trilioane"
}, _5o8d142 = {
    id: "CX",
    displayName: "Insula Christmas",
    hasTimeZones: true
}, _5o8d143 = {
    id: "IC",
    displayName: "Insulele Canare",
    hasTimeZones: false
}, _5o8d144 = {
    one: "00 miliard",
    few: "00 miliarde",
    other: "00 de miliarde"
}, _5o8d145 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _5o8d146 = {
    "0": "lunea aceasta",
    "1": "lunea viitoare",
    "-1": "lunea trecută"
}, _5o8d147 = {
    id: "EA",
    displayName: "Ceuta și Melilla",
    hasTimeZones: false
}, _5o8d148 = {
    id: "AC",
    displayName: "Insula Ascension",
    hasTimeZones: false
}, _5o8d149 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _5o8d150 = {
    one: "000 mil'.' ¤",
    few: "000 mil'.' ¤",
    other: "000 mil'.' ¤"
}, _5o8d151 = {
    one: "000 mld'.' ¤",
    few: "000 mld'.' ¤",
    other: "000 mld'.' ¤"
}, _5o8d152 = {
    one: "00 tril'.' ¤",
    few: "00 tril'.' ¤",
    other: "00 tril'.' ¤"
}, _5o8d153 = {
    id: "CP",
    displayName: "Insula Clipperton",
    hasTimeZones: false
}, _5o8d154 = {
    one: "000 milion",
    few: "000 milioane",
    other: "000 de milioane"
}, _5o8d155 = {
    one: "00 trilion",
    few: "00 trilioane",
    other: "00 de trilioane"
}, _5o8d156 = {
    one: "acum {0} zi",
    few: "acum {0} zile",
    other: "acum {0} zile"
}, _5o8d157 = {
    id: "TD",
    displayName: "Ciad",
    regionId: "017",
    hasTimeZones: true
}, _5o8d158 = {
    id: "CU",
    displayName: "Cuba",
    regionId: "029",
    hasTimeZones: true
}, _5o8d159 = {
    id: "FJ",
    displayName: "Fiji",
    regionId: "054",
    hasTimeZones: true
}, _5o8d160 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _5o8d161 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _5o8d162 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _5o8d163 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _5o8d164 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _5o8d165 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _5o8d166 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _5o8d167 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _5o8d168 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _5o8d169 = {
    one: "000 miliard",
    few: "000 miliarde",
    other: "000 de miliarde"
}, _5o8d170 = {
    one: "acum {0} an",
    few: "acum {0} ani",
    other: "acum {0} de ani"
}, _5o8d171 = {
    one: "peste {0} an",
    few: "peste {0} ani",
    other: "peste {0} ani"
}, _5o8d172 = {
    "0": "azi",
    "1": "mâine",
    "2": "poimâine",
    "-2": "alaltăieri",
    "-1": "ieri"
}, _5o8d173 = {
    "0": "marțea aceasta",
    "1": "marțea viitoare",
    "-1": "marțea trecută"
}, _5o8d174 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _5o8d175 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _5o8d176 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _5o8d177 = {
    id: "CN",
    displayName: "China",
    regionId: "030",
    hasTimeZones: true
}, _5o8d178 = {
    id: "CY",
    displayName: "Cipru",
    regionId: "145",
    hasTimeZones: true
}, _5o8d179 = {
    id: "EG",
    displayName: "Egipt",
    regionId: "015",
    hasTimeZones: true
}, _5o8d180 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _5o8d181 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _5o8d182 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _5o8d183 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _5o8d184 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _5o8d185 = {
    id: "LB",
    displayName: "Liban",
    regionId: "145",
    hasTimeZones: true
}, _5o8d186 = {
    id: "LY",
    displayName: "Libia",
    regionId: "015",
    hasTimeZones: true
}, _5o8d187 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _5o8d188 = {
    id: "MA",
    displayName: "Maroc",
    regionId: "015",
    hasTimeZones: true
}, _5o8d189 = {
    id: "MX",
    displayName: "Mexic",
    regionId: "013",
    hasTimeZones: true
}, _5o8d190 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _5o8d191 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _5o8d192 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _5o8d193 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _5o8d194 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _5o8d195 = {
    id: "RU",
    displayName: "Rusia",
    regionId: "151",
    hasTimeZones: true
}, _5o8d196 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _5o8d197 = {
    id: "SY",
    displayName: "Siria",
    regionId: "145",
    hasTimeZones: true
}, _5o8d198 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _5o8d199 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _5o8d200 = {
    id: "YE",
    displayName: "Yemen",
    regionId: "145",
    hasTimeZones: true
}, _5o8d201 = {
    one: "000 tril'.' ¤",
    few: "000 tril'.' ¤",
    other: "000 tril'.' ¤"
}, _5o8d202 = {
    d: "d–d MMM y G",
    M: "d MMM – d MMM y G",
    y: "d MMM y – d MMM y G"
}, _5o8d203 = [ "duminică", "luni", "marți", "miercuri", "joi", "vineri", "sâmbătă" ], _5o8d204 = {
    one: "acum {0} lună",
    few: "acum {0} luni",
    other: "acum {0} luni"
}, _5o8d205 = {
    one: "acum {0} oră",
    few: "acum {0} ore",
    other: "acum {0} de ore"
}, _5o8d206 = {
    one: "acum {0} min.",
    few: "acum {0} min.",
    other: "acum {0} min."
}, _5o8d207 = {
    one: "acum {0} sec.",
    few: "acum {0} sec.",
    other: "acum {0} sec."
}, _5o8d208 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _5o8d209 = {
    id: "BE",
    displayName: "Belgia",
    regionId: "155",
    hasTimeZones: true
}, _5o8d210 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _5o8d211 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _5o8d212 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _5o8d213 = {
    id: "CA",
    displayName: "Canada",
    regionId: "021",
    hasTimeZones: true
}, _5o8d214 = {
    id: "KM",
    displayName: "Comore",
    regionId: "014",
    hasTimeZones: true
}, _5o8d215 = {
    id: "FR",
    displayName: "Franța",
    regionId: "155",
    hasTimeZones: true
}, _5o8d216 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _5o8d217 = {
    id: "GR",
    displayName: "Grecia",
    regionId: "039",
    hasTimeZones: true
}, _5o8d218 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _5o8d219 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _5o8d220 = {
    id: "IT",
    displayName: "Italia",
    regionId: "039",
    hasTimeZones: true
}, _5o8d221 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _5o8d222 = {
    id: "KW",
    displayName: "Kuweit",
    regionId: "145",
    hasTimeZones: true
}, _5o8d223 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _5o8d224 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _5o8d225 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _5o8d226 = {
    id: "RW",
    displayName: "Rwanda",
    regionId: "014",
    hasTimeZones: true
}, _5o8d227 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _5o8d228 = {
    id: "ES",
    displayName: "Spania",
    regionId: "039",
    hasTimeZones: true
}, _5o8d229 = {
    id: "SE",
    displayName: "Suedia",
    regionId: "154",
    hasTimeZones: true
}, _5o8d230 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _5o8d231 = {
    id: "TR",
    displayName: "Turcia",
    regionId: "145",
    hasTimeZones: true
}, _5o8d232 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _5o8d233 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _5o8d234 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _5o8d235 = {
    one: "000 trilion",
    few: "000 trilioane",
    other: "000 de trilioane"
}, _5o8d236 = {
    one: "acum {0} zi",
    few: "acum {0} zile",
    other: "acum {0} de zile"
}, _5o8d237 = {
    one: "peste {0} zi",
    few: "peste {0} zile",
    other: "peste {0} zile"
}, _5o8d238 = {
    relative: _5o8d103
}, _5o8d239 = {
    relative: _5o8d104
}, _5o8d240 = {
    relative: _5o8d105
}, _5o8d241 = {
    relative: _5o8d106
}, _5o8d242 = {
    relative: _5o8d107
}, _5o8d243 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _5o8d244 = {
    id: "DZ",
    displayName: "Algeria",
    regionId: "015",
    hasTimeZones: true
}, _5o8d245 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _5o8d246 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _5o8d247 = {
    id: "AT",
    displayName: "Austria",
    regionId: "155",
    hasTimeZones: true
}, _5o8d248 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _5o8d249 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _5o8d250 = {
    id: "BY",
    displayName: "Belarus",
    regionId: "151",
    hasTimeZones: true
}, _5o8d251 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _5o8d252 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _5o8d253 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _5o8d254 = {
    id: "CM",
    displayName: "Camerun",
    regionId: "017",
    hasTimeZones: true
}, _5o8d255 = {
    id: "HR",
    displayName: "Croația",
    regionId: "039",
    hasTimeZones: true
}, _5o8d256 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _5o8d257 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _5o8d258 = {
    id: "CH",
    displayName: "Elveția",
    regionId: "155",
    hasTimeZones: true
}, _5o8d259 = {
    id: "EE",
    displayName: "Estonia",
    regionId: "154",
    hasTimeZones: true
}, _5o8d260 = {
    id: "ET",
    displayName: "Etiopia",
    regionId: "014",
    hasTimeZones: true
}, _5o8d261 = {
    id: "GE",
    displayName: "Georgia",
    regionId: "145",
    hasTimeZones: true
}, _5o8d262 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _5o8d263 = {
    id: "GN",
    displayName: "Guineea",
    regionId: "011",
    hasTimeZones: true
}, _5o8d264 = {
    id: "IE",
    displayName: "Irlanda",
    regionId: "154",
    hasTimeZones: true
}, _5o8d265 = {
    id: "IS",
    displayName: "Islanda",
    regionId: "154",
    hasTimeZones: true
}, _5o8d266 = {
    id: "JM",
    displayName: "Jamaica",
    regionId: "029",
    hasTimeZones: true
}, _5o8d267 = {
    id: "JP",
    displayName: "Japonia",
    regionId: "030",
    hasTimeZones: true
}, _5o8d268 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _5o8d269 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _5o8d270 = {
    id: "LV",
    displayName: "Letonia",
    regionId: "154",
    hasTimeZones: true
}, _5o8d271 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _5o8d272 = {
    id: "MV",
    displayName: "Maldive",
    regionId: "034",
    hasTimeZones: true
}, _5o8d273 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _5o8d274 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _5o8d275 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _5o8d276 = {
    id: "PL",
    displayName: "Polonia",
    regionId: "151",
    hasTimeZones: true
}, _5o8d277 = {
    id: "RO",
    displayName: "România",
    regionId: "151",
    hasTimeZones: true
}, _5o8d278 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _5o8d279 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _5o8d280 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _5o8d281 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _5o8d282 = {
    id: "TN",
    displayName: "Tunisia",
    regionId: "015",
    hasTimeZones: true
}, _5o8d283 = {
    id: "UA",
    displayName: "Ucraina",
    regionId: "151",
    hasTimeZones: true
}, _5o8d284 = {
    id: "HU",
    displayName: "Ungaria",
    regionId: "151",
    hasTimeZones: true
}, _5o8d285 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _5o8d286 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _5o8d287 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _5o8d288 = {
    one: "peste {0} an",
    few: "peste {0} ani",
    other: "peste {0} de ani"
}, _5o8d289 = {
    "0": "vinerea aceasta",
    "1": "vinerea viitoare",
    "-1": "vinerea trecută"
}, _5o8d290 = {
    "0": "sâmbăta aceasta",
    "1": "sâmbăta viitoare",
    "-1": "sâmbăta trecută"
}, _5o8d291 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _5o8d292 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _5o8d293 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _5o8d294 = {
    id: "BR",
    displayName: "Brazilia",
    regionId: "005",
    hasTimeZones: true
}, _5o8d295 = {
    id: "BG",
    displayName: "Bulgaria",
    regionId: "151",
    hasTimeZones: true
}, _5o8d296 = {
    id: "CO",
    displayName: "Columbia",
    regionId: "005",
    hasTimeZones: true
}, _5o8d297 = {
    id: "DJ",
    displayName: "Djibouti",
    regionId: "014",
    hasTimeZones: true
}, _5o8d298 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _5o8d299 = {
    id: "ER",
    displayName: "Eritreea",
    regionId: "014",
    hasTimeZones: true
}, _5o8d300 = {
    id: "PH",
    displayName: "Filipine",
    regionId: "035",
    hasTimeZones: true
}, _5o8d301 = {
    id: "FI",
    displayName: "Finlanda",
    regionId: "154",
    hasTimeZones: true
}, _5o8d302 = {
    id: "DE",
    displayName: "Germania",
    regionId: "155",
    hasTimeZones: true
}, _5o8d303 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _5o8d304 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _5o8d305 = {
    id: "JO",
    displayName: "Iordania",
    regionId: "145",
    hasTimeZones: true
}, _5o8d306 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _5o8d307 = {
    id: "LT",
    displayName: "Lituania",
    regionId: "154",
    hasTimeZones: true
}, _5o8d308 = {
    id: "MY",
    displayName: "Malaysia",
    regionId: "035",
    hasTimeZones: true
}, _5o8d309 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _5o8d310 = {
    id: "MZ",
    displayName: "Mozambic",
    regionId: "014",
    hasTimeZones: true
}, _5o8d311 = {
    id: "NO",
    displayName: "Norvegia",
    regionId: "154",
    hasTimeZones: true
}, _5o8d312 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _5o8d313 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _5o8d314 = {
    id: "SK",
    displayName: "Slovacia",
    regionId: "151",
    hasTimeZones: true
}, _5o8d315 = {
    id: "SI",
    displayName: "Slovenia",
    regionId: "039",
    hasTimeZones: true
}, _5o8d316 = {
    id: "SR",
    displayName: "Suriname",
    regionId: "005",
    hasTimeZones: true
}, _5o8d317 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _5o8d318 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _5o8d319 = {
    one: "acum {0} trim.",
    few: "acum {0} trim.",
    other: "acum {0} trim."
}, _5o8d320 = {
    one: "acum {0} lună",
    few: "acum {0} luni",
    other: "acum {0} de luni"
}, _5o8d321 = {
    one: "peste {0} lună",
    few: "peste {0} luni",
    other: "peste {0} luni"
}, _5o8d322 = {
    one: "acum {0} săpt.",
    few: "acum {0} săpt.",
    other: "acum {0} săpt."
}, _5o8d323 = {
    one: "peste {0} oră",
    few: "peste {0} ore",
    other: "peste {0} de ore"
}, _5o8d324 = {
    one: "peste {0} min.",
    few: "peste {0} min.",
    other: "peste {0} min."
}, _5o8d325 = {
    one: "peste {0} sec.",
    few: "peste {0} sec.",
    other: "peste {0} sec."
}, _5o8d326 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _5o8d327 = {
    id: "AU",
    displayName: "Australia",
    regionId: "053",
    hasTimeZones: true
}, _5o8d328 = {
    id: "KH",
    displayName: "Cambodgia",
    regionId: "035",
    hasTimeZones: true
}, _5o8d329 = {
    id: "DK",
    displayName: "Danemarca",
    regionId: "154",
    hasTimeZones: true
}, _5o8d330 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _5o8d331 = {
    id: "GP",
    displayName: "Guadelupa",
    regionId: "029",
    hasTimeZones: true
}, _5o8d332 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _5o8d333 = {
    id: "ID",
    displayName: "Indonezia",
    regionId: "035",
    hasTimeZones: true
}, _5o8d334 = {
    id: "CC",
    displayName: "Insulele Cocos (Keeling)",
    hasTimeZones: true
}, _5o8d335 = {
    id: "KZ",
    displayName: "Kazahstan",
    regionId: "143",
    hasTimeZones: true
}, _5o8d336 = {
    id: "LU",
    displayName: "Luxemburg",
    regionId: "155",
    hasTimeZones: true
}, _5o8d337 = {
    id: "MK",
    displayName: "Macedonia",
    regionId: "039",
    hasTimeZones: true
}, _5o8d338 = {
    id: "MQ",
    displayName: "Martinica",
    regionId: "029",
    hasTimeZones: true
}, _5o8d339 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _5o8d340 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _5o8d341 = {
    id: "SG",
    displayName: "Singapore",
    regionId: "035",
    hasTimeZones: true
}, _5o8d342 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _5o8d343 = {
    id: "SZ",
    displayName: "Swaziland",
    regionId: "018",
    hasTimeZones: true
}, _5o8d344 = {
    id: "TH",
    displayName: "Thailanda",
    regionId: "035",
    hasTimeZones: true
}, _5o8d345 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _5o8d346 = {
    one: "peste {0} zi",
    few: "peste {0} zile",
    other: "peste {0} de zile"
}, _5o8d347 = {
    relative: _5o8d123
}, _5o8d348 = {
    relative: _5o8d124
}, _5o8d349 = {
    relative: _5o8d125
}, _5o8d350 = {
    relative: _5o8d126
}, _5o8d351 = {
    relative: _5o8d127
}, _5o8d352 = {
    relative: _5o8d128
}, _5o8d353 = {
    relative: _5o8d129
}, _5o8d354 = {
    relative: _5o8d130
}, _5o8d355 = {
    relative: _5o8d131
}, _5o8d356 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _5o8d357 = {
    id: "AF",
    displayName: "Afganistan",
    regionId: "034",
    hasTimeZones: true
}, _5o8d358 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _5o8d359 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _5o8d360 = {
    id: "GL",
    displayName: "Groenlanda",
    regionId: "021",
    hasTimeZones: true
}, _5o8d361 = {
    id: "IM",
    displayName: "Insula Man",
    regionId: "154",
    hasTimeZones: true
}, _5o8d362 = {
    id: "KG",
    displayName: "Kârgâzstan",
    regionId: "143",
    hasTimeZones: true
}, _5o8d363 = {
    id: "MG",
    displayName: "Madagascar",
    regionId: "014",
    hasTimeZones: true
}, _5o8d364 = {
    id: "MR",
    displayName: "Mauritania",
    regionId: "011",
    hasTimeZones: true
}, _5o8d365 = {
    id: "FM",
    displayName: "Micronezia",
    regionId: "057",
    hasTimeZones: true
}, _5o8d366 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _5o8d367 = {
    id: "ME",
    displayName: "Muntenegru",
    regionId: "039",
    hasTimeZones: true
}, _5o8d368 = {
    id: "PT",
    displayName: "Portugalia",
    regionId: "039",
    hasTimeZones: true
}, _5o8d369 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _5o8d370 = {
    id: "SC",
    displayName: "Seychelles",
    regionId: "014",
    hasTimeZones: true
}, _5o8d371 = {
    id: "UZ",
    displayName: "Uzbekistan",
    regionId: "143",
    hasTimeZones: true
}, _5o8d372 = {
    "0": "duminica aceasta",
    "1": "duminica viitoare",
    "-1": "duminica trecută"
}, _5o8d373 = {
    id: "AZ",
    displayName: "Azerbaidjan",
    regionId: "145",
    hasTimeZones: true
}, _5o8d374 = {
    id: "CV",
    displayName: "Capul Verde",
    regionId: "011",
    hasTimeZones: true
}, _5o8d375 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _5o8d376 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _5o8d377 = {
    id: "TJ",
    displayName: "Tadjikistan",
    regionId: "143",
    hasTimeZones: true
}, _5o8d378 = {
    one: "peste {0} trim.",
    few: "peste {0} trim.",
    other: "peste {0} trim."
}, _5o8d379 = {
    one: "peste {0} lună",
    few: "peste {0} luni",
    other: "peste {0} de luni"
}, _5o8d380 = {
    one: "peste {0} săpt.",
    few: "peste {0} săpt.",
    other: "peste {0} săpt."
}, _5o8d381 = {
    id: "142",
    displayName: "Asia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5o8d382 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _5o8d383 = {
    id: "GB",
    displayName: "Regatul Unit",
    regionId: "154",
    hasTimeZones: true
}, _5o8d384 = {
    id: "SH",
    displayName: "Sfânta Elena",
    regionId: "011",
    hasTimeZones: true
}, _5o8d385 = {
    id: "LC",
    displayName: "Sfânta Lucia",
    regionId: "029",
    hasTimeZones: true
}, _5o8d386 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _5o8d387 = {
    id: "SX",
    displayName: "Sint-Maarten",
    regionId: "029",
    hasTimeZones: true
}, _5o8d388 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _5o8d389 = {
    "0": "trimestrul acesta",
    "1": "trimestrul viitor",
    "-1": "trimestrul trecut"
}, _5o8d390 = {
    relative: _5o8d146
}, _5o8d391 = {
    id: "ZA",
    displayName: "Africa de Sud",
    regionId: "018",
    hasTimeZones: true
}, _5o8d392 = {
    id: "KR",
    displayName: "Coreea de Sud",
    regionId: "030",
    hasTimeZones: true
}, _5o8d393 = {
    id: "CI",
    displayName: "Côte d’Ivoire",
    regionId: "011",
    hasTimeZones: true
}, _5o8d394 = {
    id: "CK",
    displayName: "Insulele Cook",
    regionId: "061",
    hasTimeZones: true
}, _5o8d395 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _5o8d396 = {
    id: "NZ",
    displayName: "Noua Zeelandă",
    regionId: "053",
    hasTimeZones: true
}, _5o8d397 = {
    id: "NL",
    displayName: "Țările de Jos",
    regionId: "155",
    hasTimeZones: true
}, _5o8d398 = {
    "0": "săptămâna aceasta",
    "1": "săptămâna viitoare",
    "-1": "săptămâna trecută"
}, _5o8d399 = {
    one: "acum {0} minut",
    few: "acum {0} minute",
    other: "acum {0} de minute"
}, _5o8d400 = {
    "0": "miercurea aceasta",
    "1": "miercurea viitoare",
    "-1": "miercurea trecută"
}, _5o8d401 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _5o8d402 = {
    id: "002",
    displayName: "Africa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5o8d403 = {
    id: "SA",
    displayName: "Arabia Saudită",
    regionId: "145",
    hasTimeZones: true
}, _5o8d404 = {
    id: "KP",
    displayName: "Coreea de Nord",
    regionId: "030",
    hasTimeZones: true
}, _5o8d405 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5o8d406 = {
    id: "GW",
    displayName: "Guineea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _5o8d407 = {
    id: "NF",
    displayName: "Insula Norfolk",
    regionId: "053",
    hasTimeZones: true
}, _5o8d408 = {
    id: "FO",
    displayName: "Insulele Feroe",
    regionId: "154",
    hasTimeZones: true
}, _5o8d409 = {
    id: "AX",
    displayName: "Insulele Åland",
    regionId: "154",
    hasTimeZones: true
}, _5o8d410 = {
    id: "NC",
    displayName: "Noua Caledonie",
    regionId: "054",
    hasTimeZones: true
}, _5o8d411 = {
    id: "CZ",
    displayName: "Republica Cehă",
    regionId: "151",
    hasTimeZones: true
}, _5o8d412 = {
    id: "MF",
    displayName: "Sfântul Martin",
    regionId: "029",
    hasTimeZones: true
}, _5o8d413 = {
    id: "SS",
    displayName: "Sudanul de Sud",
    regionId: "014",
    hasTimeZones: true
}, _5o8d414 = {
    id: "TL",
    displayName: "Timorul de Est",
    regionId: "035",
    hasTimeZones: true
}, _5o8d415 = {
    one: "{0} kilocalorie",
    few: "{0} kilocalorii",
    other: "{0} de kilocalorii"
}, _5o8d416 = {
    id: "019",
    displayName: "Americi",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5o8d417 = {
    id: "029",
    displayName: "Caraibe",
    hasTimeZones: false,
    parentRegionId: "019"
}, _5o8d418 = {
    id: "GF",
    displayName: "Guyana Franceză",
    regionId: "005",
    hasTimeZones: true
}, _5o8d419 = {
    id: "KY",
    displayName: "Insulele Cayman",
    regionId: "029",
    hasTimeZones: true
}, _5o8d420 = {
    id: "009",
    displayName: "Oceania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _5o8d421 = {
    id: "AS",
    displayName: "Samoa Americană",
    regionId: "061",
    hasTimeZones: true
}, _5o8d422 = {
    d: "dd.MM.y – dd.MM.y G",
    M: "dd.MM.y – dd.MM.y G",
    y: "dd.MM.y – dd.MM.y G"
}, _5o8d423 = {
    relative: _5o8d173
}, _5o8d424 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _5o8d425 = {
    id: "CD",
    displayName: "Congo - Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _5o8d426 = {
    id: "SB",
    displayName: "Insulele Solomon",
    regionId: "054",
    hasTimeZones: true
}, _5o8d427 = {
    id: "UM",
    displayName: "Insulele Îndepărtate ale S.U.A.",
    hasTimeZones: true
}, _5o8d428 = {
    id: "WF",
    displayName: "Wallis și Futuna",
    regionId: "061",
    hasTimeZones: true
}, _5o8d429 = {
    one: "peste {0} minut",
    few: "peste {0} minute",
    other: "peste {0} de minute"
}, _5o8d430 = {
    id: "FK",
    displayName: "Insulele Falkland",
    regionId: "005",
    hasTimeZones: true
}, _5o8d431 = {
    id: "MH",
    displayName: "Insulele Marshall",
    regionId: "057",
    hasTimeZones: true
}, _5o8d432 = {
    id: "PN",
    displayName: "Insulele Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _5o8d433 = {
    id: "054",
    displayName: "Melanezia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _5o8d434 = {
    id: "PG",
    displayName: "Papua-Noua Guinee",
    regionId: "054",
    hasTimeZones: true
}, _5o8d435 = {
    id: "061",
    displayName: "Polinezia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _5o8d436 = {
    id: "MD",
    displayName: "Republica Moldova",
    regionId: "151",
    hasTimeZones: true
}, _5o8d437 = {
    one: "acum {0} secundă",
    few: "acum {0} secunde",
    other: "acum {0} de secunde"
}, _5o8d438 = {
    id: "AG",
    displayName: "Antigua și Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _5o8d439 = {
    id: "MM",
    displayName: "Myanmar (Birmania)",
    regionId: "035",
    hasTimeZones: true
}, _5o8d440 = {
    id: "PF",
    displayName: "Polinezia Franceză",
    regionId: "061",
    hasTimeZones: true
}, _5o8d441 = {
    id: "EH",
    displayName: "Sahara Occidentală",
    regionId: "015",
    hasTimeZones: true
}, _5o8d442 = {
    id: "BL",
    displayName: "Sfântul Bartolomeu",
    regionId: "029",
    hasTimeZones: true
}, _5o8d443 = {
    id: "TT",
    displayName: "Trinidad și Tobago",
    regionId: "029",
    hasTimeZones: true
}, _5o8d444 = {
    relative: _5o8d289
}, _5o8d445 = {
    relative: _5o8d290
}, _5o8d446 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _5o8d447 = {
    id: "053",
    displayName: "Australasia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _5o8d448 = {
    id: "CG",
    displayName: "Congo - Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _5o8d449 = {
    id: "GQ",
    displayName: "Guineea Ecuatorială",
    regionId: "017",
    hasTimeZones: true
}, _5o8d450 = {
    id: "HM",
    displayName: "Insula Heard și Insulele McDonald",
    hasTimeZones: false
}, _5o8d451 = {
    id: "DO",
    displayName: "Republica Dominicană",
    regionId: "029",
    hasTimeZones: true
}, _5o8d452 = {
    id: "KN",
    displayName: "Saint Kitts și Nevis",
    regionId: "029",
    hasTimeZones: true
}, _5o8d453 = {
    id: "ST",
    displayName: "Sao Tome și Principe",
    regionId: "017",
    hasTimeZones: true
}, _5o8d454 = {
    one: "peste {0} secundă",
    few: "peste {0} secunde",
    other: "peste {0} de secunde"
}, _5o8d455 = {
    id: "143",
    displayName: "Asia Centrală",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5o8d456 = {
    id: "BA",
    displayName: "Bosnia și Herțegovina",
    regionId: "039",
    hasTimeZones: true
}, _5o8d457 = {
    id: "AE",
    displayName: "Emiratele Arabe Unite",
    regionId: "145",
    hasTimeZones: true
}, _5o8d458 = {
    id: "MO",
    displayName: "R.A.S. Macao a Chinei",
    regionId: "030",
    hasTimeZones: true
}, _5o8d459 = {
    id: "SJ",
    displayName: "Svalbard și Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _5o8d460 = {
    relative: _5o8d372
}, _5o8d461 = {
    id: "005",
    displayName: "America de Sud",
    hasTimeZones: false,
    parentRegionId: "019"
}, _5o8d462 = {
    id: "030",
    displayName: "Asia Orientală",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5o8d463 = {
    id: "017",
    displayName: "Africa Centrală",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5o8d464 = {
    id: "035",
    displayName: "Asia de Sud-Est",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5o8d465 = {
    id: "VI",
    displayName: "Insulele Virgine S.U.A.",
    regionId: "029",
    hasTimeZones: true
}, _5o8d466 = {
    id: "CF",
    displayName: "Republica Centrafricană",
    regionId: "017",
    hasTimeZones: true
}, _5o8d467 = {
    id: "IO",
    displayName: "Teritoriul Britanic din Oceanul Indian",
    hasTimeZones: true
}, _5o8d468 = {
    one: "acum {0} trimestru",
    few: "acum {0} trimestre",
    other: "acum {0} de trimestre"
}, _5o8d469 = {
    one: "acum {0} săptămână",
    few: "acum {0} săptămâni",
    other: "acum {0} de săptămâni"
}, _5o8d470 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _5o8d471 = {
    id: "014",
    displayName: "Africa Orientală",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5o8d472 = {
    id: "013",
    displayName: "America Centrală",
    hasTimeZones: false,
    parentRegionId: "019"
}, _5o8d473 = {
    id: "034",
    displayName: "Asia Meridională",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5o8d474 = {
    id: "145",
    displayName: "Asia Occidentală",
    hasTimeZones: false,
    parentRegionId: "142"
}, _5o8d475 = {
    id: "151",
    displayName: "Europa Orientală",
    hasTimeZones: false,
    parentRegionId: "150"
}, _5o8d476 = {
    id: "MP",
    displayName: "Insulele Mariane de Nord",
    regionId: "057",
    hasTimeZones: true
}, _5o8d477 = {
    id: "TC",
    displayName: "Insulele Turks și Caicos",
    regionId: "029",
    hasTimeZones: true
}, _5o8d478 = {
    id: "PM",
    displayName: "Saint-Pierre și Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _5o8d479 = {
    id: "PS",
    displayName: "Teritoriile Palestiniene",
    regionId: "145",
    hasTimeZones: true
}, _5o8d480 = {
    relative: _5o8d400
}, _5o8d481 = {
    id: "BQ",
    displayName: "Insulele Caraibe Olandeze",
    regionId: "029",
    hasTimeZones: true
}, _5o8d482 = {
    id: "HK",
    displayName: "R.A.S. Hong Kong a Chinei",
    regionId: "030",
    hasTimeZones: true
}, _5o8d483 = {
    id: "018",
    displayName: "Africa Meridională",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5o8d484 = {
    id: "011",
    displayName: "Africa Occidentală",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5o8d485 = {
    id: "039",
    displayName: "Europa Meridională",
    hasTimeZones: false,
    parentRegionId: "150"
}, _5o8d486 = {
    id: "155",
    displayName: "Europa Occidentală",
    hasTimeZones: false,
    parentRegionId: "150"
}, _5o8d487 = {
    id: "VG",
    displayName: "Insulele Virgine Britanice",
    regionId: "029",
    hasTimeZones: true
}, _5o8d488 = {
    id: "US",
    displayName: "Statele Unite ale Americii",
    regionId: "021",
    hasTimeZones: true
}, _5o8d489 = {
    id: "VA",
    displayName: "Statul Cetății Vaticanului",
    regionId: "039",
    hasTimeZones: true
}, _5o8d490 = {
    one: "peste {0} trimestru",
    few: "peste {0} trimestre",
    other: "peste {0} de trimestre"
}, _5o8d491 = {
    one: "peste {0} săptămână",
    few: "peste {0} săptămâni",
    other: "peste {0} de săptămâni"
}, _5o8d492 = {
    id: "GS",
    displayName: "Georgia de Sud și Insulele Sandwich de Sud",
    hasTimeZones: true
}, _5o8d493 = {
    id: "057",
    displayName: "Regiunea Micronezia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _5o8d494 = [ "ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec." ], _5o8d495 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _5o8d496 = {
    id: "VC",
    displayName: "Saint Vincent și Grenadinele",
    regionId: "029",
    hasTimeZones: true
}, _5o8d497 = {
    id: "TF",
    displayName: "Teritoriile Australe și Antarctice Franceze",
    hasTimeZones: true
}, _5o8d498 = [ "trimestrul I", "trimestrul al II-lea", "trimestrul al III-lea", "trimestrul al IV-lea" ], _5o8d499 = [ "Trimestrul I", "Trimestrul al II-lea", "Trimestrul al III-lea", "Trimestrul al IV-lea" ], _5o8d500 = {
    id: "015",
    displayName: "Africa Septentrională",
    hasTimeZones: false,
    parentRegionId: "002"
}, _5o8d501 = {
    id: "154",
    displayName: "Europa Septentrională",
    hasTimeZones: false,
    parentRegionId: "150"
}, _5o8d502 = {
    d: "E, d MMM – E, d MMM y G",
    M: "E, d MMM – E, d MMM y G",
    y: "E, d MMM y – E, d MMM y G"
}, _5o8d503 = {
    id: "021",
    displayName: "America Septentrională",
    hasTimeZones: false,
    parentRegionId: "019"
}, _5o8d504 = {
    d: "E, dd.MM.y – E, dd.MM.y G",
    M: "E, dd.MM.y – E, dd.MM.y G",
    y: "E, dd.MM.y – E, dd.MM.y G"
}, _5o8d505 = {
    future: _5o8d52,
    past: _5o8d53
}, _5o8d506 = {
    future: _5o8d54,
    past: _5o8d55
}, _5o8d507 = {
    future: _5o8d56,
    past: _5o8d57
}, _5o8d508 = [ "Tișrei", "Heșvan", "Kislev", "Tevet", "Șevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tammuz", "Av", "Elul" ], _5o8d509 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _5o8d510 = {
    future: _5o8d71,
    past: _5o8d72
}, _5o8d511 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _5o8d512 = {
    future: _5o8d87,
    past: _5o8d88
}, _5o8d513 = [ "Tout", "Baba", "Hathor", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesori", "El Nasii" ], _5o8d514 = [ "meskerem", "taqemt", "hedar", "tahsas", "ter", "yekatit", "megabit", "miazia", "genbot", "sene", "hamle", "nehase", "pagumen" ], _5o8d515 = {
    future: _5o8d97,
    past: _5o8d98
}, _5o8d516 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _5o8d517 = [ "ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie" ], _5o8d518 = {
    future: _5o8d113,
    past: _5o8d114
}, _5o8d519 = {
    future: _5o8d115,
    past: _5o8d116
}, _5o8d520 = {
    future: _5o8d137,
    past: _5o8d117
}, _5o8d521 = {
    displayName: "h",
    relativeTime: _5o8d505
}, _5o8d522 = {
    displayName: "m",
    relativeTime: _5o8d506
}, _5o8d523 = {
    displayName: "s",
    relativeTime: _5o8d507
}, _5o8d524 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _5o8d525 = {
    midnight: "miezul nopții",
    am: "a.m.",
    noon: "prânz",
    pm: "p.m.",
    morning1: "dimineață",
    afternoon1: "după-amiază",
    evening1: "seară",
    night1: "noapte"
}, _5o8d526 = {
    future: _5o8d171,
    past: _5o8d170
}, _5o8d527 = {
    midnight: "miezul nopții",
    am: "a.m.",
    noon: "amiază",
    pm: "p.m.",
    morning1: "dimineața",
    afternoon1: "după-amiaza",
    evening1: "seara",
    night1: "noaptea"
}, _5o8d528 = {
    midnight: "miezul nopții",
    am: "a.m.",
    pm: "p.m.",
    noon: "amiază",
    morning1: "dimineața",
    afternoon1: "după-amiaza",
    evening1: "seara",
    night1: "noaptea"
}, _5o8d529 = {
    future: _5o8d237,
    past: _5o8d156
}, _5o8d530 = {
    displayName: "an",
    relativeTime: _5o8d510
}, _5o8d531 = {
    future: _5o8d288,
    past: _5o8d170
}, _5o8d532 = {
    future: _5o8d321,
    past: _5o8d204
}, _5o8d533 = {
    future: _5o8d323,
    past: _5o8d205
}, _5o8d534 = {
    future: _5o8d324,
    past: _5o8d206
}, _5o8d535 = {
    future: _5o8d325,
    past: _5o8d207
}, _5o8d536 = {
    midnight: "la miezul nopții",
    am: "a.m.",
    noon: "la amiază",
    pm: "p.m.",
    morning1: "dimineață",
    afternoon1: "după-amiază",
    evening1: "seară",
    night1: "noapte"
}, _5o8d537 = {
    displayName: "zi",
    relativeTime: _5o8d512
}, _5o8d538 = {
    midnight: "la miezul nopții",
    am: "a.m.",
    noon: "la amiază",
    pm: "p.m.",
    morning1: "dimineața",
    afternoon1: "după-amiaza",
    evening1: "seara",
    night1: "noaptea"
}, _5o8d539 = {
    future: _5o8d346,
    past: _5o8d236
}, _5o8d540 = {
    future: _5o8d378,
    past: _5o8d319
}, _5o8d541 = {
    future: _5o8d379,
    past: _5o8d320
}, _5o8d542 = {
    future: _5o8d380,
    past: _5o8d322
}, _5o8d543 = {
    displayName: "lună",
    relativeTime: _5o8d515
}, _5o8d544 = {
    displayName: "h",
    relativeTime: _5o8d520
}, _5o8d545 = {
    displayName: "săpt.",
    relativeTime: _5o8d519
}, _5o8d546 = {
    future: _5o8d429,
    past: _5o8d399
}, _5o8d547 = {
    future: _5o8d454,
    past: _5o8d437
}, _5o8d548 = {
    displayName: "an",
    relativeTime: _5o8d526
}, _5o8d549 = {
    decimal: ",",
    group: ".",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _5o8d550 = {
    displayName: "zi",
    relativeTime: _5o8d529
}, _5o8d551 = {
    abbreviated: _5o8d69,
    narrow: [ "1", "2", "3", "4" ],
    wide: _5o8d498
}, _5o8d552 = {
    abbreviated: _5o8d70,
    narrow: [ "1", "2", "3", "4" ],
    wide: _5o8d499
}, _5o8d553 = {
    displayName: "Oră",
    relativeTime: _5o8d533
}, _5o8d554 = {
    displayName: "lună",
    relativeTime: _5o8d532
}, _5o8d555 = {
    displayName: "min.",
    relativeTime: _5o8d534
}, _5o8d556 = {
    displayName: "sec.",
    relativeTime: _5o8d535
}, _5o8d557 = {
    future: _5o8d490,
    past: _5o8d468
}, _5o8d558 = {
    future: _5o8d491,
    past: _5o8d469
}, _5o8d559 = {
    symbols: _5o8d549
}, _5o8d560 = {
    abbreviated: _5o8d100,
    narrow: _5o8d100,
    wide: _5o8d100
}, _5o8d561 = {
    displayName: "săpt.",
    relativeTime: _5o8d542
}, _5o8d562 = {
    format: _5o8d401,
    numeric: _5o8d2,
    standAlone: _5o8d401
}, _5o8d563 = {
    displayName: "Minut",
    relativeTime: _5o8d546
}, _5o8d564 = {
    abbreviated: _5o8d100,
    narrow: _5o8d100,
    wide: _5o8d424
}, _5o8d565 = {
    symbols: _5o8d549,
    digits: "renderSpelloutCardinal"
}, _5o8d566 = {
    abbreviated: _5o8d85,
    narrow: _5o8d8,
    wide: _5o8d203,
    "short": _5o8d19
}, _5o8d567 = {
    abbreviated: _5o8d85,
    narrow: _5o8d8,
    wide: _5o8d203,
    "short": _5o8d58
}, _5o8d568 = {
    symbols: _5o8d549,
    digits: "renderSpelloutCardinalFinancial"
}, _5o8d569 = {
    displayName: "trim.",
    relative: _5o8d119,
    relativeTime: _5o8d518
}, _5o8d570 = {
    displayName: "Secundă",
    relative: [ "acum" ],
    relativeTime: _5o8d547
}, _5o8d571 = {
    displayName: "An",
    relative: _5o8d99,
    relativeTime: _5o8d531
}, _5o8d572 = {
    displayName: "trim.",
    relative: _5o8d119,
    relativeTime: _5o8d540
}, _5o8d573 = {
    displayName: "Lună",
    relative: _5o8d122,
    relativeTime: _5o8d541
}, _5o8d574 = {
    displayName: "Zi",
    relative: _5o8d172,
    relativeTime: _5o8d539
}, _5o8d575 = {
    abbreviated: _5o8d446,
    narrow: _5o8d446,
    wide: _5o8d446
}, _5o8d576 = {
    format: _5o8d575
}, _5o8d577 = {
    abbreviated: _5o8d494,
    narrow: _5o8d86,
    wide: _5o8d517
}, _5o8d578 = {
    abbreviated: _5o8d508,
    narrow: _5o8d139,
    wide: _5o8d508
}, _5o8d579 = {
    abbreviated: _5o8d511,
    narrow: _5o8d100,
    wide: _5o8d511
}, _5o8d580 = {
    displayName: "Trimestru",
    relative: _5o8d389,
    relativeTime: _5o8d557
}, _5o8d581 = {
    displayName: "Săptămână",
    relative: _5o8d398,
    relativeTime: _5o8d558
}, _5o8d582 = {
    abbreviated: _5o8d509,
    narrow: _5o8d100,
    wide: _5o8d524
}, _5o8d583 = {
    abbreviated: _5o8d513,
    narrow: _5o8d139,
    wide: _5o8d513
}, _5o8d584 = {
    abbreviated: _5o8d514,
    narrow: _5o8d139,
    wide: _5o8d514
}, _5o8d585 = {
    abbreviated: _5o8d516,
    narrow: _5o8d100,
    wide: _5o8d516
}, _5o8d586 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss zzzz"
}, _5o8d587 = {
    fullDate: "EEEE, d MMMM y G",
    longDate: "d MMMM y G",
    mediumDate: "dd.MM.y G",
    shortDate: "dd.MM.y GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd.MM.y GGGGG, HH:mm",
    mediumDateTime: "dd.MM.y G, HH:mm:ss",
    longDateTime: "d MMMM y G 'la' HH:mm:ss z",
    fullDateTime: "EEEE, d MMMM y G 'la' HH:mm:ss zzzz"
}, _5o8d588 = {
    format: _5o8d551,
    standAlone: _5o8d552
}, _5o8d589 = {
    format: _5o8d564,
    standAlone: _5o8d560
}, _5o8d590 = {
    abbreviated: _5o8d527,
    narrow: _5o8d525,
    wide: _5o8d538
}, _5o8d591 = {
    abbreviated: _5o8d527,
    narrow: _5o8d528,
    wide: _5o8d536
}, _5o8d592 = {
    format: _5o8d567,
    standAlone: _5o8d566
}, _5o8d593 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _5o8d594 = {
    d: "d",
    E: "ccc",
    Ed: "E d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E, d MMM y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "dd.MM",
    MEd: "E, dd.MM",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E, d MMM",
    MMMMd: "d MMMM",
    MMMMEd: "E, d MMMM",
    ms: "mm:ss",
    y: "y",
    yyyy: "y G",
    yyyyM: "MM.y G",
    yyyyMd: "dd.MM.y G",
    yyyyMEd: "E, dd.MM.y G",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E, d MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _5o8d595 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _5o8d596 = {
    format: _5o8d577,
    standAlone: _5o8d577
}, _5o8d597 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _5o8d598 = {
    "1000": _5o8d13,
    "10000": _5o8d18,
    "100000": _5o8d32,
    "1000000": _5o8d79,
    "10000000": _5o8d93,
    "100000000": _5o8d108,
    "1000000000": _5o8d80,
    "10000000000": _5o8d94,
    "100000000000": _5o8d109,
    "1000000000000": _5o8d95,
    "10000000000000": _5o8d110,
    "100000000000000": _5o8d133
}, _5o8d599 = {
    format: _5o8d582,
    standAlone: _5o8d582
}, _5o8d600 = {
    "1000": _5o8d68,
    "10000": _5o8d81,
    "100000": _5o8d96,
    "1000000": _5o8d111,
    "10000000": _5o8d134,
    "100000000": _5o8d150,
    "1000000000": _5o8d112,
    "10000000000": _5o8d135,
    "100000000000": _5o8d151,
    "1000000000000": _5o8d136,
    "10000000000000": _5o8d152,
    "100000000000000": _5o8d201
}, _5o8d601 = {
    "1000": _5o8d51,
    "10000": _5o8d67,
    "100000": _5o8d78,
    "1000000": _5o8d118,
    "10000000": _5o8d140,
    "100000000": _5o8d154,
    "1000000000": _5o8d121,
    "10000000000": _5o8d144,
    "100000000000": _5o8d169,
    "1000000000000": _5o8d141,
    "10000000000000": _5o8d155,
    "100000000000000": _5o8d235
}, _5o8d602 = {
    basic: _5o8d586,
    cldr: _5o8d593
}, _5o8d603 = {
    basic: _5o8d587,
    cldr: _5o8d594
}, _5o8d604 = {
    format: _5o8d590,
    standAlone: _5o8d591
}, _5o8d605 = {
    d: {
        d: "d–d"
    },
    h: _5o8d5,
    H: {
        H: "HH–HH"
    },
    hm: _5o8d102,
    Hm: _5o8d14,
    hmv: _5o8d145,
    Hmv: _5o8d20,
    hv: _5o8d7,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _5o8d24,
    MEd: _5o8d89,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _5o8d11,
    MMMEd: _5o8d90,
    y: {
        y: "U–U"
    },
    yM: _5o8d15,
    yMd: _5o8d356,
    yMEd: _5o8d495,
    yMMM: _5o8d16,
    yMMMd: _5o8d138,
    yMMMEd: _5o8d470,
    yMMMM: _5o8d25
}, _5o8d606 = {
    d: {
        d: "d–d"
    },
    h: _5o8d5,
    H: {
        H: "HH–HH"
    },
    hm: _5o8d102,
    Hm: _5o8d14,
    hmv: _5o8d145,
    Hmv: _5o8d20,
    hv: _5o8d7,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _5o8d21,
    MEd: _5o8d83,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _5o8d9,
    MMMEd: _5o8d84,
    y: {
        y: "y–y G"
    },
    yM: _5o8d22,
    yMd: _5o8d422,
    yMEd: _5o8d504,
    yMMM: _5o8d23,
    yMMMd: _5o8d202,
    yMMMEd: _5o8d502,
    yMMMM: _5o8d33
}, _5o8d607 = {
    beforeCurrency: _5o8d595,
    afterCurrency: _5o8d595
}, _5o8d608 = {
    "long": _5o8d601,
    "short": _5o8d598,
    "default": "#,##0.###"
}, _5o8d609 = {
    abbreviated: _5o8d597,
    narrow: _5o8d597,
    wide: _5o8d597
}, _5o8d610 = {
    format: _5o8d609
}, _5o8d611 = {
    "short": _5o8d600,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    few: "{0} {1}",
    other: "{0} de {1}",
    currencySpacing: _5o8d607
}, _5o8d612 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _5o8d608,
    currency: _5o8d611,
    percent: _5o8d1
}, _5o8d613 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _5o8d614 = {
    dayParts: _5o8d576,
    days: _5o8d610,
    months: _5o8d610,
    years: _5o8d610,
    zodiacs: _5o8d576
}, _5o8d615 = {
    era: {
        displayName: "Eră"
    },
    year: _5o8d571,
    "year-short": _5o8d548,
    "year-narrow": _5o8d530,
    quarter: _5o8d580,
    "quarter-short": _5o8d572,
    "quarter-narrow": _5o8d569,
    month: _5o8d573,
    "month-short": _5o8d554,
    "month-narrow": _5o8d543,
    week: _5o8d581,
    "week-short": _5o8d561,
    "week-narrow": _5o8d545,
    day: _5o8d574,
    "day-short": _5o8d550,
    "day-narrow": _5o8d537,
    weekday: _5o8d10,
    dayperiod: _5o8d3,
    hour: _5o8d553,
    "hour-short": _5o8d544,
    "hour-narrow": _5o8d521,
    minute: _5o8d563,
    "minute-short": _5o8d555,
    "minute-narrow": _5o8d522,
    second: _5o8d570,
    "second-short": _5o8d556,
    "second-narrow": _5o8d523,
    zone: _5o8d4,
    sun: _5o8d460,
    "sun-short": _5o8d347,
    "sun-narrow": _5o8d238,
    mon: _5o8d390,
    "mon-short": _5o8d348,
    "mon-narrow": _5o8d239,
    tue: _5o8d423,
    "tue-short": _5o8d349,
    "tue-narrow": _5o8d350,
    wed: _5o8d480,
    "wed-short": _5o8d351,
    "wed-narrow": _5o8d352,
    thu: _5o8d353,
    "thu-short": _5o8d353,
    "thu-narrow": _5o8d240,
    fri: _5o8d444,
    "fri-short": _5o8d354,
    "fri-narrow": _5o8d241,
    sat: _5o8d445,
    "sat-short": _5o8d355,
    "sat-narrow": _5o8d242
}, _5o8d616 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _5o8d615
}, _5o8d617 = {
    dateFormats: _5o8d603,
    datePartsOrder: "dmy",
    dateIntervalFormats: _5o8d606,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _5o8d592,
    dayPeriods: _5o8d604,
    monthNames: _5o8d599,
    eraNames: _5o8d12,
    quarterNames: _5o8d588,
    fields: _5o8d615
}, _5o8d618 = {
    dateFormats: _5o8d602,
    datePartsOrder: "md",
    dateIntervalFormats: _5o8d605,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _5o8d592,
    dayPeriods: _5o8d604,
    cyclicNames: _5o8d614,
    monthNames: _5o8d589,
    monthPatterns: _5o8d562,
    quarterNames: _5o8d588,
    fields: _5o8d615
};

inter.id = "ro";

inter.delimiters = {
    quotationStart: "„",
    quotationEnd: "”",
    alternateQuotationStart: "«",
    alternateQuotationEnd: "»"
};

inter.listPatterns = {
    "default": {
        "2": "{0} și {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0} și {1}"
    },
    unit: {
        "2": "{0} și {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0}, {1}"
    },
    unitNarrow: P.listPatterns.default,
    unitShort: P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} forță g",
                few: "{0} forță g",
                other: "{0} forță g"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} metru pe secundă la pătrat",
                few: "{0} metri pe secundă la pătrat",
                other: "{0} de metri pe secundă la pătrat"
            },
            angleRevolution: {
                one: "{0} revoluție",
                few: "{0} revoluții",
                other: "{0} de revoluții"
            },
            angleRadian: {
                one: "{0} radian",
                few: "{0} radiani",
                other: "{0} de radiani"
            },
            angleDegree: {
                one: "{0} grad",
                few: "{0} grade",
                other: "{0} de grade"
            },
            angleArcMinute: {
                one: "{0} minut de arc",
                few: "{0} minute de arc",
                other: "{0} de minute de arc"
            },
            angleArcSecond: {
                one: "{0} secundă de arc",
                few: "{0} secunde de arc",
                other: "{0} de secunde de arc"
            },
            areaSquareKilometer: {
                one: "{0} kilometru pătrat",
                few: "{0} kilometri pătrați",
                other: "{0} de kilometri pătrați"
            },
            areaHectare: {
                one: "{0} hectar",
                few: "{0} hectare",
                other: "{0} de hectare"
            },
            areaSquareMeter: {
                one: "{0} metru pătrat",
                few: "{0} metri pătrați",
                other: "{0} de metri pătrați"
            },
            areaSquareCentimeter: {
                one: "{0} centimetru pătrat",
                few: "{0} centimetri pătrați",
                other: "{0} de centimetri pătrați"
            },
            areaSquareMile: {
                one: "{0} milă pătrată",
                few: "{0} mile pătrate",
                other: "{0} de mile pătrate"
            },
            areaAcre: {
                one: "{0} acru",
                few: "{0} acri",
                other: "{0} de acri"
            },
            areaSquareYard: {
                one: "{0} iard pătrat",
                few: "{0} iarzi pătrați",
                other: "{0} de iarzi pătrați"
            },
            areaSquareFoot: {
                one: "{0} picior pătrat",
                few: "{0} picioare pătrate",
                other: "{0} de picioare pătrate"
            },
            areaSquareInch: {
                one: "{0} inch pătrat",
                few: "{0} inchi pătrați",
                other: "{0} de inchi pătrați"
            },
            concentrKarat: {
                one: "{0} karată",
                few: "{0} karate",
                other: "{0} de karate"
            },
            consumptionLiterPerKilometer: {
                one: "{0} litru pe kilometru",
                few: "{0} litri pe kilometru",
                other: "{0} de litri pe kilometru"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} litru la suta de kilometri",
                few: "{0} litri la suta de kilometri",
                other: "{0} de litri la suta de kilometri"
            },
            consumptionMilePerGallon: {
                one: "{0} milă pe galon",
                few: "{0} mile pe galon",
                other: "{0} de mile pe galon"
            },
            digitalTerabyte: {
                one: "{0} terabyte",
                few: "{0} terabyți",
                other: "{0} de terabyți"
            },
            digitalTerabit: {
                one: "{0} terabit",
                few: "{0} terabiți",
                other: "{0} de terabiți"
            },
            digitalGigabyte: {
                one: "{0} gigabyte",
                few: "{0} gigabyți",
                other: "{0} de gigabyți"
            },
            digitalGigabit: {
                one: "{0} gigabit",
                few: "{0} gigabiți",
                other: "{0} de gigabiți"
            },
            digitalMegabyte: {
                one: "{0} megabyte",
                few: "{0} megabyți",
                other: "{0} de megabyți"
            },
            digitalMegabit: {
                one: "{0} megabit",
                few: "{0} megabiți",
                other: "{0} de megabiți"
            },
            digitalKilobyte: {
                one: "{0} kilobyte",
                few: "{0} kilobyți",
                other: "{0} de kilobyți"
            },
            digitalKilobit: {
                one: "{0} kilobit",
                few: "{0} kilobiți",
                other: "{0} de kilobiți"
            },
            digitalByte: {
                one: "{0} byte",
                few: "{0} byți",
                other: "{0} de byți"
            },
            digitalBit: {
                one: "{0} bit",
                few: "{0} biți",
                other: "{0} de biți"
            },
            durationCentury: {
                one: "{0} secol",
                few: "{0} secole",
                other: "{0} de secole"
            },
            durationYear: {
                one: "{0} an",
                few: "{0} ani",
                other: "{0} de ani"
            },
            durationMonth: {
                one: "{0} lună",
                few: "{0} luni",
                other: "{0} de luni"
            },
            durationWeek: {
                one: "{0} săptămână",
                few: "{0} săptămâni",
                other: "{0} de săptămâni"
            },
            durationDay: {
                one: "{0} zi",
                few: "{0} zile",
                other: "{0} de zile"
            },
            durationHour: {
                one: "{0} oră",
                few: "{0} ore",
                other: "{0} de ore"
            },
            durationMinute: {
                one: "{0} minut",
                few: "{0} minute",
                other: "{0} de minute"
            },
            durationSecond: {
                one: "{0} secundă",
                few: "{0} secunde",
                other: "{0} de secunde"
            },
            durationMillisecond: {
                one: "{0} milisecundă",
                few: "{0} milisecunde",
                other: "{0} de milisecunde"
            },
            durationMicrosecond: {
                one: "{0} microsecundă",
                few: "{0} microsecunde",
                other: "{0} de microsecunde"
            },
            durationNanosecond: {
                one: "{0} nanosecundă",
                few: "{0} nanosecunde",
                other: "{0} de nanosecunde"
            },
            electricAmpere: {
                one: "{0} amper",
                few: "{0} amperi",
                other: "{0} de amperi"
            },
            electricMilliampere: {
                one: "{0} miliamper",
                few: "{0} miliamperi",
                other: "{0} de miliamperi"
            },
            electricOhm: {
                one: "{0} ohm",
                few: "{0} ohmi",
                other: "{0} de ohmi"
            },
            electricVolt: {
                one: "{0} volt",
                few: "{0} volți",
                other: "{0} de volți"
            },
            energyKilocalorie: _5o8d415,
            energyCalorie: {
                one: "{0} calorie",
                few: "{0} calorii",
                other: "{0} de calorii"
            },
            energyFoodcalorie: _5o8d415,
            energyKilojoule: {
                one: "{0} kilojoule",
                few: "{0} kilojouli",
                other: "{0} de kilojouli"
            },
            energyJoule: {
                one: "{0} joule",
                few: "{0} jouli",
                other: "{0} de jouli"
            },
            energyKilowattHour: {
                one: "kilowatt-oră",
                few: "{0} kilowați-oră",
                other: "{0} de kilowați-oră"
            },
            frequencyGigahertz: {
                one: "{0} gigahertz",
                few: "{0} gigahertzi",
                other: "{0} de gigahertzi"
            },
            frequencyMegahertz: {
                one: "{0} megahertz",
                few: "{0} megahertzi",
                other: "{0} de megahertzi"
            },
            frequencyKilohertz: {
                one: "{0} kilohertz",
                few: "{0} kilohertzi",
                other: "{0} de kilohertzi"
            },
            frequencyHertz: {
                one: "{0} hertz",
                few: "{0} hertzi",
                other: "{0} de hertzi"
            },
            lengthKilometer: {
                one: "{0} kilometru",
                few: "{0} kilometri",
                other: "{0} de kilometri"
            },
            lengthMeter: {
                one: "{0} metru",
                few: "{0} metri",
                other: "{0} de metri"
            },
            lengthDecimeter: {
                one: "{0} decimetru",
                few: "{0} decimetri",
                other: "{0} de decimetri"
            },
            lengthCentimeter: {
                one: "{0} centimetru",
                few: "{0} centimetri",
                other: "{0} de centimetri"
            },
            lengthMillimeter: {
                one: "{0} milimetru",
                few: "{0} milimetri",
                other: "{0} de milimetri"
            },
            lengthMicrometer: {
                one: "{0} micrometru",
                few: "{0} micrometri",
                other: "{0} de micrometri"
            },
            lengthNanometer: {
                one: "{0} nanometru",
                few: "{0} nanometri",
                other: "{0} de nanometri"
            },
            lengthPicometer: {
                one: "{0} picometru",
                few: "{0} picometri",
                other: "{0} de picometri"
            },
            lengthMile: {
                one: "{0} milă",
                few: "{0} mile",
                other: "{0} de mile"
            },
            lengthYard: {
                one: "{0} iard",
                few: "{0} iarzi",
                other: "{0} de iarzi"
            },
            lengthFoot: {
                one: "{0} picior",
                few: "{0} picioare",
                other: "{0} de picioare"
            },
            lengthInch: {
                one: "{0} inch",
                few: "{0} inchi",
                other: "{0} de inchi"
            },
            lengthParsec: {
                one: "{0} parsec",
                few: "{0} parseci",
                other: "{0} de parseci"
            },
            lengthLightYear: {
                one: "{0} an lumină",
                few: "{0} ani lumină",
                other: "{0} de ani lumină"
            },
            lengthAstronomicalUnit: {
                one: "{0} unitate astronomică",
                few: "{0} unități astronomice",
                other: "{0} de unități astronomice"
            },
            lengthNauticalMile: {
                one: "{0} milă nautică",
                few: "{0} mile nautice",
                other: "{0} de mile nautice"
            },
            lengthMileScandinavian: {
                one: "{0} milă scandinavă",
                few: "{0} mile scandinave",
                other: "{0} de mile scandinave"
            },
            lightLux: {
                one: "{0} lux",
                few: "{0} lucși",
                other: "{0} de lucși"
            },
            massMetricTon: {
                one: "{0} tonă",
                few: "{0} tone",
                other: "{0} de tone"
            },
            massKilogram: {
                one: "{0} kilogram",
                few: "{0} kilograme",
                other: "{0} de kilograme"
            },
            massGram: {
                one: "{0} gram",
                few: "{0} grame",
                other: "{0} de grame"
            },
            massMilligram: {
                one: "{0} miligram",
                few: "{0} miligrame",
                other: "{0} de miligrame"
            },
            massMicrogram: {
                one: "{0} microgram",
                few: "{0} micrograme",
                other: "{0} de micrograme"
            },
            massTon: {
                one: "{0} tonă scurtă",
                few: "{0} tone scurte",
                other: "{0} de tone scurte"
            },
            massPound: {
                one: "{0} livră",
                few: "{0} livre",
                other: "{0} de livre"
            },
            massOunce: {
                one: "{0} uncie",
                few: "{0} uncii",
                other: "{0} de uncii"
            },
            massOunceTroy: {
                one: "{0} uncie monetară",
                few: "{0} uncii monetare",
                other: "{0} de uncii monetare"
            },
            massCarat: {
                one: "{0} carat",
                few: "{0} carate",
                other: "{0} de carate"
            },
            powerGigawatt: {
                one: "{0} gigawatt",
                few: "{0} gigawați",
                other: "{0} de gigawați"
            },
            powerMegawatt: {
                one: "{0} megawatt",
                few: "{0} megawați",
                other: "{0} de megawați"
            },
            powerKilowatt: {
                one: "{0} kilowatt",
                few: "{0} kilowați",
                other: "{0} de kilowați"
            },
            powerWatt: {
                one: "{0} watt",
                few: "{0} wați",
                other: "{0} de wați"
            },
            powerMilliwatt: {
                one: "{0} miliwatt",
                few: "{0} miliwați",
                other: "{0} de miliwați"
            },
            powerHorsepower: {
                one: "{0} cal putere",
                few: "{0} cai putere",
                other: "{0} de cai putere"
            },
            pressureHectopascal: {
                one: "{0} hectopascal",
                few: "{0} hectopascali",
                other: "{0} de hectopascali"
            },
            pressureMillimeterOfMercury: {
                one: "{0} milimetru coloană de mercur",
                few: "{0} milimetri coloană de mercur",
                other: "{0} de milimetri coloană de mercur"
            },
            pressurePoundPerSquareInch: {
                one: "{0} livră pe inch pătrat",
                few: "{0} livre pe inch pătrat",
                other: "{0} de livre pe inch pătrat"
            },
            pressureInchHg: {
                one: "{0} inch coloană de mercur",
                few: "{0} inchi coloană de mercur",
                other: "{0} de inchi coloană de mercur"
            },
            pressureMillibar: {
                one: "{0} milibar",
                few: "{0} milibari",
                other: "{0} de milibari"
            },
            speedKilometerPerHour: {
                one: "{0} kilometru pe oră",
                few: "{0} kilometri pe oră",
                other: "{0} de kilometri pe oră"
            },
            speedMeterPerSecond: {
                one: "{0} metru pe secundă",
                few: "{0} metri pe secundă",
                other: "{0} de metri pe secundă"
            },
            speedMilePerHour: {
                one: "{0} milă pe oră",
                few: "{0} mile pe oră",
                other: "{0} de mile pe oră"
            },
            speedKnot: {
                one: "{0} nod",
                few: "{0} noduri",
                other: "{0} de noduri"
            },
            temperatureGeneric: _5o8d17,
            temperatureCelsius: {
                one: "{0} grad Celsius",
                few: "{0} grade Celsius",
                other: "{0} de grade Celsius"
            },
            temperatureFahrenheit: {
                one: "{0} grad Fahrenheit",
                few: "{0} grade Fahrenheit",
                other: "{0} de grade Fahrenheit"
            },
            temperatureKelvin: {
                one: "{0} kelvin",
                few: "{0} kelvini",
                other: "{0} de kelvini"
            },
            volumeCubicKilometer: {
                one: "{0} kilometru cub",
                few: "{0} kilometri cubi",
                other: "{0} de kilometri cubi"
            },
            volumeCubicMeter: {
                one: "{0} metru cub",
                few: "{0} metri cubi",
                other: "{0} de metri cubi"
            },
            volumeCubicCentimeter: {
                one: "{0} centimetru cub",
                few: "{0} centimetri cubi",
                other: "{0} de centimetri cubi"
            },
            volumeCubicMile: {
                one: "{0} milă cubică",
                few: "{0} mile cubice",
                other: "{0} de mile cubice"
            },
            volumeCubicYard: {
                one: "{0} iard cubic",
                few: "{0} iarzi cubici",
                other: "{0} de iarzi cubici"
            },
            volumeCubicFoot: {
                one: "{0} picior cubic",
                few: "{0} picioare cubice",
                other: "{0} de picioare cubice"
            },
            volumeCubicInch: {
                one: "{0} inch cubic",
                few: "{0} inchi cubici",
                other: "{0} de inchi cubici"
            },
            volumeMegaliter: {
                one: "{0} megalitru",
                few: "{0} megalitri",
                other: "{0} megalitri"
            },
            volumeHectoliter: {
                one: "{0} hectolitru",
                few: "{0} hectolitri",
                other: "{0} de hectolitri"
            },
            volumeLiter: {
                one: "{0} litru",
                few: "{0} litri",
                other: "{0} de litri"
            },
            volumeDeciliter: {
                one: "{0} decilitru",
                few: "{0} decilitri",
                other: "{0} de decilitri"
            },
            volumeCentiliter: {
                one: "{0} centilitru",
                few: "{0} centilitri",
                other: "{0} de centilitri"
            },
            volumeMilliliter: {
                one: "{0} mililitru",
                few: "{0} mililitri",
                other: "{0} de mililitri"
            },
            volumePintMetric: {
                one: "{0} pintă metrică",
                few: "{0} pinte metrice",
                other: "{0} de pinte metrice"
            },
            volumeCupMetric: {
                one: "{0} cană metrică",
                few: "{0} căni metrice",
                other: "{0} de căni metrice"
            },
            volumeAcreFoot: {
                one: "{0} acru-picior",
                few: "{0} acru-picioare",
                other: "{0} de acru-picioare"
            },
            volumeGallon: {
                one: "{0} galon",
                few: "{0} galoane",
                other: "{0} de galoane"
            },
            volumeQuart: {
                one: "{0} quart",
                few: "{0} quarte",
                other: "{0} de quarte"
            },
            volumePint: {
                one: "{0} pintă",
                few: "{0} pinte",
                other: "{0} de pinte"
            },
            volumeCup: {
                one: "{0} cană",
                few: "{0} căni",
                other: "{0} de căni"
            },
            volumeFluidOunce: {
                one: "{0} uncie lichidă",
                few: "{0} uncii lichide",
                other: "{0} de uncii lichide"
            },
            volumeTablespoon: {
                one: "{0} lingură",
                few: "{0} linguri",
                other: "{0} de linguri"
            },
            volumeTeaspoon: {
                one: "{0} linguriță",
                few: "{0} lingurițe",
                other: "{0} de lingurițe"
            }
        },
        compoundUnit: {
            per: "{0} pe {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: _5o8d26,
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                few: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: {
                one: "{0} rev.",
                few: "{0} rev.",
                other: "{0} rev."
            },
            angleRadian: {
                one: "{0} rad",
                few: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: _5o8d17,
            angleArcMinute: {
                one: "{0} arcmin",
                few: "{0} arcmin",
                other: "{0} arcmin"
            },
            angleArcSecond: _5o8d73,
            areaSquareKilometer: _5o8d59,
            areaHectare: _5o8d34,
            areaSquareMeter: _5o8d35,
            areaSquareCentimeter: {
                one: "{0} cm²",
                few: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: _5o8d60,
            areaAcre: _5o8d61,
            areaSquareYard: {
                one: "{0} yd²",
                few: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: _5o8d62,
            areaSquareInch: {
                one: "{0} in²",
                few: "{0} in²",
                other: "{0} in²"
            },
            concentrKarat: {
                one: "{0} kt",
                few: "{0} kt",
                other: "{0} kt"
            },
            consumptionLiterPerKilometer: {
                one: "{0} l/km",
                few: "{0} l/km",
                other: "{0} l/km"
            },
            "consumptionLiterPer-100kilometers": {
                one: "l/100 km",
                few: "{0} l/100 km",
                other: "{0} l/100 km"
            },
            consumptionMilePerGallon: {
                one: "{0} milă/gal.",
                few: "{0} mile/gal.",
                other: "{0} mile/gal."
            },
            digitalTerabyte: {
                one: "{0} TB",
                few: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                few: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} GB",
                few: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gb",
                few: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: {
                one: "{0} MB",
                few: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mb",
                few: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: {
                one: "{0} kB",
                few: "{0} kB",
                other: "{0} kB"
            },
            digitalKilobit: {
                one: "{0} kb",
                few: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: {
                one: "{0} B",
                few: "{0} B",
                other: "{0} B"
            },
            digitalBit: {
                one: "{0} b",
                few: "{0} b",
                other: "{0} b"
            },
            durationCentury: _5o8d73,
            durationYear: {
                one: "{0} an",
                few: "{0} ani",
                other: "{0} ani"
            },
            durationMonth: {
                one: "{0} lună",
                few: "{0} luni",
                other: "{0} luni"
            },
            durationWeek: _5o8d92,
            durationDay: {
                one: "{0} zi",
                few: "{0} zile",
                other: "{0} zile"
            },
            durationHour: {
                one: "{0} oră",
                few: "{0} ore",
                other: "{0} ore"
            },
            durationMinute: {
                one: "{0} min.",
                few: "{0} min.",
                other: "{0} min."
            },
            durationSecond: _5o8d27,
            durationMillisecond: _5o8d36,
            durationMicrosecond: {
                one: "{0} μs",
                few: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                few: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                few: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                few: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                few: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                few: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: _5o8d74,
            energyCalorie: {
                one: "{0} cal",
                few: "{0} cal",
                other: "{0} cal"
            },
            energyFoodcalorie: _5o8d74,
            energyKilojoule: {
                one: "{0} kJ",
                few: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                few: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                few: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                few: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                few: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                few: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                few: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: _5o8d37,
            lengthMeter: _5o8d28,
            lengthDecimeter: {
                one: "{0} dm",
                few: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: _5o8d38,
            lengthMillimeter: _5o8d39,
            lengthMicrometer: {
                one: "{0} µm",
                few: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                few: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: _5o8d40,
            lengthMile: _5o8d41,
            lengthYard: _5o8d42,
            lengthFoot: _5o8d43,
            lengthInch: _5o8d44,
            lengthParsec: {
                one: "{0} pc",
                few: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: _5o8d75,
            lengthAstronomicalUnit: {
                one: "{0} ua",
                few: "{0} ua",
                other: "{0} ua"
            },
            lengthNauticalMile: {
                one: "{0} mn",
                few: "{0} mn",
                other: "{0} mn"
            },
            lengthMileScandinavian: {
                one: "{0} smi",
                few: "{0} smi",
                other: "{0} smi"
            },
            lightLux: {
                one: "{0} lx",
                few: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: {
                one: "{0} t",
                few: "{0} t",
                other: "{0} t"
            },
            massKilogram: _5o8d45,
            massGram: _5o8d29,
            massMilligram: {
                one: "{0} mg",
                few: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} µg",
                few: "{0} µg",
                other: "{0} µg"
            },
            massTon: {
                one: "{0} t.s.",
                few: "{0} t.s.",
                other: "{0} t.s."
            },
            massPound: _5o8d46,
            massOunce: _5o8d47,
            massOunceTroy: {
                one: "{0} oz t",
                few: "{0} oz t",
                other: "{0} oz t"
            },
            massCarat: {
                one: "{0} ct",
                few: "{0} ct",
                other: "{0} ct"
            },
            powerGigawatt: {
                one: "{0} GW",
                few: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                few: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: _5o8d48,
            powerWatt: _5o8d30,
            powerMilliwatt: {
                one: "{0} mW",
                few: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: _5o8d49,
            pressureHectopascal: _5o8d63,
            pressureMillimeterOfMercury: {
                one: "{0} mm Hg",
                few: "{0} mm Hg",
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0} psi",
                few: "{0} psi",
                other: "{0} psi"
            },
            pressureInchHg: {
                one: "{0} in Hg",
                few: "{0} in Hg",
                other: "{0} in Hg"
            },
            pressureMillibar: {
                one: "{0} mbar",
                few: "{0} mbar",
                other: "{0} mbar"
            },
            speedKilometerPerHour: _5o8d76,
            speedMeterPerSecond: _5o8d64,
            speedMilePerHour: _5o8d77,
            speedKnot: {
                one: "{0} kn",
                few: "{0} kn",
                other: "{0} kn"
            },
            temperatureGeneric: _5o8d17,
            temperatureCelsius: _5o8d50,
            temperatureFahrenheit: {
                one: "{0} °F",
                few: "{0} °F",
                other: "{0} °F"
            },
            temperatureKelvin: {
                one: "{0} K",
                few: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: _5o8d65,
            volumeCubicMeter: {
                one: "{0} m³",
                few: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                few: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: _5o8d66,
            volumeCubicYard: {
                one: "{0} yd³",
                few: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                few: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: {
                one: "{0} in³",
                few: "{0} in³",
                other: "{0} in³"
            },
            volumeMegaliter: {
                one: "{0} Ml",
                few: "{0} Ml",
                other: "{0} Ml"
            },
            volumeHectoliter: {
                one: "{0} hl",
                few: "{0} hl",
                other: "{0} hl"
            },
            volumeLiter: _5o8d31,
            volumeDeciliter: {
                one: "{0} dl",
                few: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} cl",
                few: "{0} cl",
                other: "{0} cl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                few: "{0} ml",
                other: "{0} ml"
            },
            volumePintMetric: {
                one: "{0} mpt",
                few: "{0} mpt",
                other: "{0} mpt"
            },
            volumeCupMetric: {
                one: "{0} mc",
                few: "{0} mc",
                other: "{0} mc"
            },
            volumeAcreFoot: {
                one: "{0} ac ft",
                few: "{0} ac ft",
                other: "{0} ac ft"
            },
            volumeGallon: {
                one: "{0} gal",
                few: "{0} gal",
                other: "{0} gal"
            },
            volumeQuart: {
                one: "{0} qt",
                few: "{0} qt",
                other: "{0} qt"
            },
            volumePint: {
                one: "{0} pt",
                few: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: {
                one: "{0} c",
                few: "{0} c",
                other: "{0} c"
            },
            volumeFluidOunce: {
                one: "{0} fl oz",
                few: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} tbsp",
                few: "{0} tbsp",
                other: "{0} tbsp"
            },
            volumeTeaspoon: {
                one: "{0} tsp",
                few: "{0} tsp",
                other: "{0} tsp"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            massStone: {
                other: "{0} st"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: _5o8d26,
            angleDegree: _5o8d17,
            angleArcMinute: {
                one: "{0}′",
                few: "{0}′",
                other: "{0}′"
            },
            angleArcSecond: {
                one: "{0}″",
                few: "{0}″",
                other: "{0}″"
            },
            areaSquareKilometer: _5o8d59,
            areaHectare: _5o8d34,
            areaSquareMeter: _5o8d35,
            areaSquareMile: _5o8d60,
            areaAcre: _5o8d61,
            areaSquareFoot: _5o8d62,
            "consumptionLiterPer-100kilometers": {
                one: "{0} l/100 km",
                few: "{0} l/100 km",
                other: "{0} l/100 km"
            },
            durationYear: {
                one: "{0} a",
                few: "{0} a",
                other: "{0} a"
            },
            durationMonth: _5o8d31,
            durationWeek: _5o8d92,
            durationDay: {
                one: "{0} z",
                few: "{0} z",
                other: "{0} z"
            },
            durationHour: {
                one: "{0} h",
                few: "{0} h",
                other: "{0} h"
            },
            durationMinute: _5o8d28,
            durationSecond: _5o8d27,
            durationMillisecond: _5o8d36,
            lengthKilometer: _5o8d37,
            lengthMeter: _5o8d28,
            lengthCentimeter: _5o8d38,
            lengthMillimeter: _5o8d39,
            lengthPicometer: _5o8d40,
            lengthMile: _5o8d41,
            lengthYard: _5o8d42,
            lengthFoot: _5o8d43,
            lengthInch: _5o8d44,
            lengthLightYear: _5o8d75,
            massKilogram: _5o8d45,
            massGram: _5o8d29,
            massPound: _5o8d46,
            massOunce: _5o8d47,
            powerKilowatt: _5o8d48,
            powerWatt: _5o8d30,
            powerHorsepower: _5o8d49,
            pressureHectopascal: _5o8d63,
            pressureInchHg: {
                one: "{0} inHg",
                few: "{0} inHg",
                other: "{0} inHg"
            },
            pressureMillibar: {
                one: "{0} mb",
                few: "{0} mb",
                other: "{0} mb"
            },
            speedKilometerPerHour: _5o8d76,
            speedMeterPerSecond: _5o8d64,
            speedMilePerHour: _5o8d77,
            temperatureCelsius: _5o8d50,
            temperatureFahrenheit: {
                one: "{0}°F",
                few: "{0}°F",
                other: "{0}°F"
            },
            volumeCubicKilometer: _5o8d65,
            volumeCubicMile: _5o8d66,
            volumeLiter: _5o8d31
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "Ora din {0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "Ora de vară din {0}",
        standard: "Ora standard din {0}"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "ă", "â", "b", "c", "d", "e", "f", "g", "h", "i", "î", "j", "k", "l", "m", "n", "o", "p", "r", "s", "ș", "t", "ț", "u", "v", "x", "z" ],
        auxiliary: [ "á", "à", "å", "ä", "ç", "é", "è", "ê", "ë", "ñ", "ö", "q", "ş", "ţ", "ü", "w", "y" ],
        index: [ "A", "Ă", "Â", "B", "C", "D", "E", "F", "G", "H", "I", "Î", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "Ș", "T", "Ț", "U", "V", "W", "X", "Y", "Z" ],
        punctuation: [ "\\-", "‐", "–", "—", ",", ";", "\\:", "!", "?", ".", "…", "'", "‘", '"', "“", "”", "„", "«", "»", "(", ")", "\\[", "\\]", "@", "*", "/" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0}…",
        "word-initial": "…{0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "..."
};

inter.numbers = {
    ahom: {
        symbols: _5o8d549,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _5o8d612,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _5o8d612,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _5o8d549,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _5o8d549,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _5o8d549,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _5o8d549,
        digits: "renderEthiopic"
    },
    finance: _5o8d559,
    fullwide: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _5o8d549,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _5o8d549,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _5o8d549,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _5o8d549,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _5o8d565,
    hansfin: _5o8d568,
    hant: _5o8d565,
    hantfin: _5o8d568,
    hebr: {
        symbols: _5o8d549,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _5o8d549,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _5o8d565,
    jpanfin: _5o8d568,
    kali: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _5o8d549,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _5o8d549,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _5o8d549,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _5o8d549,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _5o8d549,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _5o8d549,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _5o8d549,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _5o8d549,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _5o8d559,
    nkoo: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _5o8d549,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _5o8d549,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _5o8d549,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _5o8d549,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _5o8d549,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _5o8d549,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _5o8d559,
    vaii: {
        symbols: _5o8d549,
        formats: _5o8d612,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _5o8d549,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _5o8d603,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5o8d606,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5o8d592,
        dayPeriods: _5o8d604,
        monthNames: _5o8d596,
        eraNames: {
            wide: [ "era budistă" ],
            abbreviated: [ "e.b." ]
        },
        quarterNames: _5o8d588,
        fields: _5o8d615
    },
    chinese: _5o8d618,
    coptic: {
        dateFormats: _5o8d603,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5o8d606,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5o8d592,
        dayPeriods: _5o8d604,
        monthNames: {
            format: _5o8d583,
            standAlone: _5o8d583
        },
        eraNames: _5o8d91,
        quarterNames: _5o8d588,
        fields: _5o8d615
    },
    dangi: _5o8d618,
    ethioaa: _5o8d616,
    ethiopic: {
        dateFormats: _5o8d603,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5o8d606,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5o8d592,
        dayPeriods: _5o8d604,
        monthNames: {
            format: _5o8d584,
            standAlone: _5o8d584
        },
        eraNames: _5o8d91,
        quarterNames: _5o8d588,
        fields: _5o8d615
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d MMMM y",
                longDate: "d MMMM y",
                mediumDate: "d MMM y",
                shortDate: "dd.MM.y",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "dd.MM.y, HH:mm",
                mediumDateTime: "d MMM y, HH:mm:ss",
                longDateTime: "d MMMM y, HH:mm:ss z",
                fullDateTime: "EEEE, d MMMM y, HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E d",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E, d MMM y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "dd.MM",
                MEd: "E, dd.MM",
                MMdd: "dd.MM",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E, d MMM",
                MMMMd: "d MMMM",
                MMMMEd: "E, d MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "MM.y",
                yMd: "dd.MM.y",
                yMEd: "E, dd.MM.y",
                yMM: "MM.y",
                yMMM: "MMM y",
                yMMMd: "d MMM y",
                yMMMEd: "E, d MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _5o8d5,
            H: {
                H: "HH–HH"
            },
            hm: _5o8d102,
            Hm: _5o8d14,
            hmv: _5o8d145,
            Hmv: _5o8d20,
            hv: _5o8d7,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            Md: _5o8d21,
            MEd: _5o8d83,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _5o8d9,
            MMMEd: _5o8d84,
            y: {
                y: "y–y"
            },
            yM: {
                M: "MM.y – MM.y",
                y: "MM.y – MM.y"
            },
            yMd: {
                d: "dd.MM.y – dd.MM.y",
                M: "dd.MM.y – dd.MM.y",
                y: "dd.MM.y – dd.MM.y"
            },
            yMEd: {
                d: "E, dd.MM.y – E, dd.MM.y",
                M: "E, dd.MM.y – E, dd.MM.y",
                y: "E, dd.MM.y – E, dd.MM.y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "d–d MMM y",
                M: "d MMM – d MMM y",
                y: "d MMM y – d MMM y"
            },
            yMMMEd: {
                d: "E, d MMM – E, d MMM y",
                M: "E, d MMM – E, d MMM y",
                y: "E, d MMM y – E, d MMM y"
            },
            yMMMM: {
                M: "MMMM – MMMM y",
                y: "MMMM y – MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5o8d592,
        dayPeriods: _5o8d604,
        monthNames: _5o8d596,
        eraNames: {
            wide: [ "înainte de Hristos", "după Hristos" ],
            abbreviated: [ "î.Hr.", "d.Hr." ]
        },
        quarterNames: _5o8d588,
        fields: _5o8d615
    },
    hebrew: {
        dateFormats: _5o8d603,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5o8d606,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5o8d592,
        dayPeriods: _5o8d604,
        monthNames: {
            format: _5o8d578,
            standAlone: _5o8d578
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _5o8d588,
        fields: _5o8d615
    },
    indian: {
        dateFormats: _5o8d603,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5o8d606,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5o8d592,
        dayPeriods: _5o8d604,
        monthNames: {
            format: _5o8d585,
            standAlone: _5o8d585
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _5o8d588,
        fields: _5o8d615
    },
    islamic: _5o8d617,
    "islamic-umalqura": _5o8d617,
    "islamic-tbla": _5o8d617,
    "islamic-civil": _5o8d617,
    "islamic-rgsa": _5o8d617,
    iso8601: _5o8d616,
    japanese: {
        dateFormats: _5o8d603,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5o8d606,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5o8d592,
        dayPeriods: _5o8d604,
        monthNames: _5o8d596,
        eraNames: {
            wide: _5o8d613,
            abbreviated: _5o8d613
        },
        quarterNames: _5o8d588,
        fields: _5o8d615
    },
    persian: {
        dateFormats: _5o8d603,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5o8d606,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5o8d592,
        dayPeriods: _5o8d604,
        monthNames: {
            format: _5o8d579,
            standAlone: _5o8d579
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _5o8d588,
        fields: _5o8d615
    },
    roc: {
        dateFormats: _5o8d603,
        datePartsOrder: "dmy",
        dateIntervalFormats: _5o8d606,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _5o8d592,
        dayPeriods: _5o8d604,
        monthNames: _5o8d596,
        eraNames: {
            wide: _5o8d6,
            abbreviated: _5o8d6
        },
        quarterNames: _5o8d588,
        fields: _5o8d615
    },
    islamicc: _5o8d616
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length;
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 1 && v === 0) return "one";
    if (!(v === 0) || n === 0 || !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19) return "few";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + "a";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinalMasculine(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderSpelloutCardinalMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculine(Math.floor(n)) + " virgulă " + this.renderSpelloutCardinalMasculine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e15)) + " biliarde" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 1e15) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e15)) + " biliard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e12)) + " bilioane" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 1e12) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e12)) + " bilion" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e9)) + " miliarde" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 1e9) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e9)) + " miliard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e6)) + " milioane" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 1e6) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e6)) + " milion" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e3)) + " mii" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 1e3) return "una mie" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinalFeminine(Math.floor(n / 100)) + " sute" + (n === 200 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 100) return "una sută" + (n === 100 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 100));
    if (n >= 20) return this.renderSpelloutCardinalFeminine(Math.floor(n / 10)) + "zeci" + (n === 20 ? "" : " şi " + this.renderSpelloutCardinalMasculine(n % 10));
    if (n >= 12) return this.renderSpelloutCardinalMasculine(n % 10) + "sprezece";
    if (n >= 11) return "unsprezece";
    if (n >= 10) return "zece";
    if (n >= 9) return "nouă";
    if (n >= 8) return "opt";
    if (n >= 7) return "şapte";
    if (n >= 6) return "şase";
    if (n >= 5) return "cinci";
    if (n >= 4) return "patru";
    if (n >= 3) return "trei";
    if (n >= 2) return "doi";
    if (n >= 1) return "unu";
    if (n >= 0) return "zero";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderSpelloutCardinalNeuter = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalNeuter(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalNeuter(Math.floor(n)) + " virgulă " + this.renderSpelloutCardinalNeuter(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e15)) + " biliarde" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e15));
    if (n >= 1e15) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e15)) + " biliard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e12)) + " bilioane" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e12));
    if (n >= 1e12) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e12)) + " bilion" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e9)) + " miliarde" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e9));
    if (n >= 1e9) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e9)) + " miliard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e6)) + " milioane" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e6));
    if (n >= 1e6) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e6)) + " milion" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e3)) + " mii" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e3));
    if (n >= 1e3) return "una mie" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinalFeminine(Math.floor(n / 100)) + " sute" + (n === 200 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 100));
    if (n >= 100) return "una sută" + (n === 100 ? "" : " " + this.renderSpelloutCardinalNeuter(n % 100));
    if (n >= 20) return this.renderSpelloutCardinalFeminine(Math.floor(n / 10)) + "zeci" + (n === 20 ? "" : " şi " + this.renderSpelloutCardinalNeuter(n % 10));
    if (n >= 2) return this.renderSpelloutCardinalFeminine(n);
    if (n >= 1) return "unu";
    if (n >= 0) return "zero";
};

inter.renderSpelloutCardinalFeminine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinalFeminine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalFeminine(Math.floor(n)) + " virgulă " + this.renderSpelloutCardinalFeminine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e15)) + " biliarde" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e15));
    if (n >= 1e15) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e15)) + " biliard" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e12)) + " bilioane" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e12));
    if (n >= 1e12) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e12)) + " bilion" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e9)) + " miliarde" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e9));
    if (n >= 1e9) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e9)) + " miliard" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e6)) + " milioane" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e6));
    if (n >= 1e6) return this.renderSpelloutCardinalNeuter(Math.floor(n / 1e6)) + " milion" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinalFeminine(Math.floor(n / 1e3)) + " mii" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e3));
    if (n >= 1e3) return "una mie" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinalFeminine(Math.floor(n / 100)) + " sute" + (n === 200 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 100) return "una sută" + (n === 100 ? "" : " " + this.renderSpelloutCardinalFeminine(n % 100));
    if (n >= 20) return this.renderSpelloutCardinalFeminine(Math.floor(n / 10)) + "zeci" + (n === 20 ? "" : " şi " + this.renderSpelloutCardinalFeminine(n % 10));
    if (n >= 12) return this.renderSpelloutCardinalFeminine(n % 10) + "sprezece";
    if (n >= 3) return this.renderSpelloutCardinalMasculine(n);
    if (n >= 2) return "două";
    if (n >= 1) return "una";
    if (n >= 0) return "zero";
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 7), {
    id: "Pacific/Marquesas",
    regionId: "061",
    utcStandardOffsetSeconds: -34200,
    displayName: "Marchize",
    countryId: "PF"
}, P.timeZones.slice(8, 15), {
    id: "Pacific/Pitcairn",
    regionId: "061",
    utcStandardOffsetSeconds: -28800,
    displayName: "Insula Pitcairn",
    countryId: "PN"
}, P.timeZones[15], P.timeZones.slice(17, 36), {
    id: "America/North_Dakota/Beulah",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Beulah, Dakota de Nord",
    countryId: "US"
}, {
    id: "America/North_Dakota/Center",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Centru, Dakota de Nord",
    countryId: "US"
}, P.timeZones.slice(38, 40), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Ciudad de Mexico",
    countryId: "MX"
}, P.timeZones[40], P.timeZones.slice(42, 45), {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Insula Paștelui",
    countryId: "CL"
}, P.timeZones.slice(45, 50), P.timeZones[51], {
    id: "America/North_Dakota/New_Salem",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "New Salem, Dakota de Nord",
    countryId: "US"
}, P.timeZones.slice(53, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones.slice(91, 98), {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 103), {
    id: "America/Guadeloupe",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Guadelupa",
    countryId: "GP"
}, P.timeZones.slice(104, 111), {
    id: "America/Martinique",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Martinica",
    countryId: "MQ"
}, P.timeZones.slice(112, 117), {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Barthélemy",
    countryId: "BL"
}, P.timeZones.slice(117, 119), P.timeZones.slice(120, 155), {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Georgia de Sud",
    countryId: "GS"
}, P.timeZones.slice(155, 157), {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azore",
    countryId: "PT"
}, {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Capul Verde",
    countryId: "CV"
}, P.timeZones.slice(160, 166), {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Canare",
    countryId: "ES"
}, P.timeZones.slice(167, 174), {
    id: "Europe/Isle_of_Man",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Insula Man",
    countryId: "IM"
}, P.timeZones[175], {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lisabona",
    countryId: "PT"
}, P.timeZones[177], {
    id: "Europe/London",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Londra",
    countryId: "GB"
}, P.timeZones.slice(179, 184), {
    id: "Atlantic/St_Helena",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Sf. Elena",
    countryId: "SH"
}, {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Alger",
    countryId: "DZ"
}, P.timeZones.slice(188, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrad",
    countryId: "RS"
}, P.timeZones.slice(192, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bruxelles",
    countryId: "BE"
}, {
    id: "Europe/Budapest",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Budapesta",
    countryId: "HU"
}, P.timeZones.slice(197, 200), {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Copenhaga",
    countryId: "DK"
}, P.timeZones.slice(201, 210), {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luxemburg",
    countryId: "LU"
}, P.timeZones.slice(211, 215), P.timeZones[216], {
    id: "Africa/Ndjamena",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "N’Djamena",
    countryId: "TD"
}, P.timeZones.slice(217, 221), {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Praga",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Roma",
    countryId: "IT"
}, P.timeZones.slice(223, 227), {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, P.timeZones.slice(228, 230), {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Varșovia",
    countryId: "PL"
}, P.timeZones[230], {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Viena",
    countryId: "AT"
}, P.timeZones[233], {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zürich",
    countryId: "CH"
}, {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Atena",
    countryId: "GR"
}, P.timeZones.slice(236, 238), {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "București",
    countryId: "RO"
}, P.timeZones.slice(239, 241), {
    id: "Europe/Chisinau",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Chișinău",
    countryId: "MD"
}, P.timeZones.slice(242, 248), {
    id: "Asia/Jerusalem",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Ierusalim",
    countryId: "IL"
}, P.timeZones.slice(249, 268), {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Addis Abeba",
    countryId: "ET"
}, P.timeZones.slice(269, 273), {
    id: "Asia/Baghdad",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bagdad",
    countryId: "IQ"
}, P.timeZones[274], {
    id: "Indian/Comoro",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Comore",
    countryId: "KM"
}, {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damasc",
    countryId: "SY"
}, P.timeZones.slice(277, 282), {
    id: "Asia/Kuwait",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Kuweit",
    countryId: "KW"
}, P.timeZones.slice(283, 286), {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Moscova",
    countryId: "RU"
}, P.timeZones.slice(287, 289), {
    id: "Asia/Riyadh",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Riad",
    countryId: "SA"
}, {
    id: "Antarctica/Syowa",
    utcStandardOffsetSeconds: 10800,
    displayName: "Showa",
    countryId: "AQ"
}, P.timeZones[290], P.timeZones[292], {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Teheran",
    countryId: "IR"
}, P.timeZones.slice(294, 297), {
    id: "Asia/Yerevan",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Erevan",
    countryId: "AM"
}, P.timeZones.slice(297, 300), {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Réunion",
    countryId: "RE"
}, P.timeZones.slice(301, 305), P.timeZones[306], {
    id: "Asia/Aqtau",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aktau",
    countryId: "KZ"
}, {
    id: "Asia/Aqtobe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aktobe",
    countryId: "KZ"
}, P.timeZones[310], {
    id: "Asia/Ashgabat",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Așgabat",
    countryId: "TM"
}, {
    id: "Asia/Dushanbe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Dușanbe",
    countryId: "TJ"
}, {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Ekaterinburg",
    countryId: "RU"
}, P.timeZones.slice(312, 314), {
    id: "Asia/Qyzylorda",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Kyzylorda",
    countryId: "KZ"
}, {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Maldive",
    countryId: "MV"
}, P.timeZones[315], P.timeZones[318], {
    id: "Asia/Tashkent",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Tașkent",
    countryId: "UZ"
}, {
    id: "Asia/Oral",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Uralsk",
    countryId: "KZ"
}, P.timeZones.slice(321, 324), {
    id: "Asia/Almaty",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Almatî",
    countryId: "KZ"
}, {
    id: "Asia/Bishkek",
    regionId: "143",
    utcStandardOffsetSeconds: 21600,
    displayName: "Bișkek",
    countryId: "KG"
}, P.timeZones[326], {
    id: "Asia/Dhaka",
    regionId: "034",
    utcStandardOffsetSeconds: 21600,
    displayName: "Dacca",
    countryId: "BD"
}, P.timeZones.slice(328, 337), P.timeZones.slice(338, 341), {
    id: "Indian/Christmas",
    utcStandardOffsetSeconds: 25200,
    displayName: "Insula Crăciunului",
    countryId: "CX"
}, P.timeZones[341], {
    id: "Asia/Krasnoyarsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Krasnoiarsk",
    countryId: "RU"
}, {
    id: "Asia/Novokuznetsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Novokuznețk",
    countryId: "RU"
}, P.timeZones.slice(344, 352), {
    id: "Asia/Irkutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 28800,
    displayName: "Irkuțk",
    countryId: "RU"
}, P.timeZones.slice(353, 355), {
    id: "Asia/Macau",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Macao",
    countryId: "MO"
}, P.timeZones.slice(356, 362), {
    id: "Asia/Ulaanbaatar",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Ulan Bator",
    countryId: "MN"
}, P.timeZones[363], {
    id: "Asia/Chita",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Cita",
    countryId: "RU"
}, P.timeZones.slice(365, 369), {
    id: "Asia/Pyongyang",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Phenian",
    countryId: "KP"
}, {
    id: "Asia/Seoul",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Seul",
    countryId: "KR"
}, P.timeZones[371], {
    id: "Asia/Yakutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Yakuțk",
    countryId: "RU"
}, P.timeZones.slice(373, 399), {
    id: "Asia/Sakhalin",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Sahalin",
    countryId: "RU"
}, {
    id: "Asia/Srednekolymsk",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Srednekolimsk",
    countryId: "RU"
}, {
    id: "Asia/Anadyr",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Anadir",
    countryId: "RU"
}, P.timeZones.slice(402, 405), {
    id: "Asia/Kamchatka",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Kamciatka",
    countryId: "RU"
}, P.timeZones.slice(406, 419));

inter.territories = [ _5o8d357, _5o8d402, _5o8d463, _5o8d483, _5o8d484, _5o8d471, _5o8d500, _5o8d391, _5o8d243, _5o8d244, _5o8d472, _5o8d503, _5o8d461, _5o8d416, _5o8d245, _5o8d208, _5o8d291, _5o8d101, _5o8d438, _5o8d403, _5o8d326, _5o8d246, _5o8d174, _5o8d381, _5o8d455, _5o8d473, _5o8d474, _5o8d462, _5o8d464, _5o8d447, _5o8d327, _5o8d247, _5o8d373, _5o8d248, _5o8d249, _5o8d358, _5o8d292, _5o8d250, _5o8d209, _5o8d210, _5o8d175, _5o8d251, _5o8d211, _5o8d252, _5o8d456, _5o8d293, _5o8d294, _5o8d212, _5o8d295, _5o8d382, _5o8d253, _5o8d328, _5o8d254, _5o8d213, _5o8d374, _5o8d417, _5o8d147, _5o8d176, _5o8d177, _5o8d157, _5o8d178, _5o8d296, _5o8d214, _5o8d448, _5o8d425, _5o8d404, _5o8d392, _5o8d359, _5o8d255, _5o8d158, _5o8d256, _5o8d393, _5o8d329, _5o8d120, _5o8d297, _5o8d298, _5o8d257, _5o8d179, _5o8d375, _5o8d258, _5o8d457, _5o8d299, _5o8d259, _5o8d260, _5o8d405, _5o8d485, _5o8d486, _5o8d475, _5o8d501, _5o8d159, _5o8d300, _5o8d301, _5o8d215, _5o8d180, _5o8d216, _5o8d261, _5o8d492, _5o8d302, _5o8d181, _5o8d330, _5o8d217, _5o8d262, _5o8d360, _5o8d331, _5o8d160, _5o8d332, _5o8d303, _5o8d263, _5o8d449, _5o8d406, _5o8d218, _5o8d418, _5o8d182, _5o8d304, _5o8d183, _5o8d333, _5o8d148, _5o8d132, _5o8d142, _5o8d153, _5o8d450, _5o8d361, _5o8d407, _5o8d143, _5o8d481, _5o8d419, _5o8d334, _5o8d394, _5o8d430, _5o8d408, _5o8d476, _5o8d431, _5o8d432, _5o8d426, _5o8d477, _5o8d487, _5o8d465, _5o8d409, _5o8d427, _5o8d305, _5o8d161, _5o8d162, _5o8d264, _5o8d265, _5o8d219, _5o8d220, _5o8d266, _5o8d267, _5o8d221, _5o8d335, _5o8d184, _5o8d306, _5o8d268, _5o8d222, _5o8d362, _5o8d163, _5o8d269, _5o8d270, _5o8d185, _5o8d271, _5o8d186, _5o8d395, _5o8d307, _5o8d82, _5o8d336, _5o8d337, _5o8d363, _5o8d223, _5o8d308, _5o8d272, _5o8d164, _5o8d187, _5o8d188, _5o8d338, _5o8d364, _5o8d339, _5o8d273, _5o8d433, _5o8d189, _5o8d365, _5o8d224, _5o8d309, _5o8d366, _5o8d310, _5o8d367, _5o8d439, _5o8d274, _5o8d190, _5o8d191, _5o8d340, _5o8d192, _5o8d275, _5o8d165, _5o8d311, _5o8d410, _5o8d396, _5o8d420, {
    id: "QO",
    displayName: "Oceania Periferică",
    regionId: "009",
    hasTimeZones: false
}, _5o8d166, _5o8d312, _5o8d193, _5o8d225, _5o8d434, _5o8d313, _5o8d167, _5o8d435, _5o8d440, _5o8d276, _5o8d368, _5o8d376, _5o8d194, _5o8d482, _5o8d458, _5o8d383, _5o8d493, _5o8d411, _5o8d466, _5o8d451, _5o8d436, _5o8d277, _5o8d195, _5o8d226, _5o8d278, _5o8d441, _5o8d452, _5o8d496, _5o8d478, _5o8d196, _5o8d421, _5o8d369, _5o8d453, _5o8d279, _5o8d227, _5o8d370, _5o8d384, _5o8d385, _5o8d442, _5o8d412, _5o8d386, _5o8d341, _5o8d387, _5o8d197, _5o8d314, _5o8d315, _5o8d280, _5o8d228, _5o8d342, _5o8d488, _5o8d489, _5o8d198, _5o8d413, _5o8d229, _5o8d316, _5o8d459, _5o8d343, _5o8d377, _5o8d230, _5o8d317, _5o8d497, _5o8d479, _5o8d467, _5o8d344, _5o8d414, _5o8d168, _5o8d281, _5o8d199, _5o8d443, _5o8d149, _5o8d282, _5o8d231, _5o8d388, _5o8d232, _5o8d283, _5o8d233, _5o8d284, _5o8d285, _5o8d371, _5o8d286, _5o8d345, _5o8d287, _5o8d428, _5o8d200, _5o8d234, _5o8d318, _5o8d397 ];

inter.regions = [ _5o8d402, _5o8d463, _5o8d483, _5o8d484, _5o8d471, _5o8d500, _5o8d472, _5o8d503, _5o8d461, _5o8d416, _5o8d381, _5o8d455, _5o8d473, _5o8d474, _5o8d462, _5o8d464, _5o8d447, _5o8d417, _5o8d405, _5o8d485, _5o8d486, _5o8d475, _5o8d501, _5o8d82, _5o8d433, _5o8d420, _5o8d435, _5o8d493 ];

inter.countries = [ _5o8d357, _5o8d391, _5o8d243, _5o8d244, _5o8d245, _5o8d208, _5o8d291, _5o8d101, _5o8d438, _5o8d403, _5o8d326, _5o8d246, _5o8d174, _5o8d327, _5o8d247, _5o8d373, _5o8d248, _5o8d249, _5o8d358, _5o8d292, _5o8d250, _5o8d209, _5o8d210, _5o8d175, _5o8d251, _5o8d211, _5o8d252, _5o8d456, _5o8d293, _5o8d294, _5o8d212, _5o8d295, _5o8d382, _5o8d253, _5o8d328, _5o8d254, _5o8d213, _5o8d374, _5o8d147, _5o8d176, _5o8d177, _5o8d157, _5o8d178, _5o8d296, _5o8d214, _5o8d448, _5o8d425, _5o8d404, _5o8d392, _5o8d359, _5o8d255, _5o8d158, _5o8d256, _5o8d393, _5o8d329, _5o8d120, _5o8d297, _5o8d298, _5o8d257, _5o8d179, _5o8d375, _5o8d258, _5o8d457, _5o8d299, _5o8d259, _5o8d260, _5o8d159, _5o8d300, _5o8d301, _5o8d215, _5o8d180, _5o8d216, _5o8d261, _5o8d492, _5o8d302, _5o8d181, _5o8d330, _5o8d217, _5o8d262, _5o8d360, _5o8d331, _5o8d160, _5o8d332, _5o8d303, _5o8d263, _5o8d449, _5o8d406, _5o8d218, _5o8d418, _5o8d182, _5o8d304, _5o8d183, _5o8d333, _5o8d148, _5o8d132, _5o8d142, _5o8d153, _5o8d450, _5o8d361, _5o8d407, _5o8d143, _5o8d481, _5o8d419, _5o8d334, _5o8d394, _5o8d430, _5o8d408, _5o8d476, _5o8d431, _5o8d432, _5o8d426, _5o8d477, _5o8d487, _5o8d465, _5o8d409, _5o8d427, _5o8d305, _5o8d161, _5o8d162, _5o8d264, _5o8d265, _5o8d219, _5o8d220, _5o8d266, _5o8d267, _5o8d221, _5o8d335, _5o8d184, _5o8d306, _5o8d268, _5o8d222, _5o8d362, _5o8d163, _5o8d269, _5o8d270, _5o8d185, _5o8d271, _5o8d186, _5o8d395, _5o8d307, _5o8d336, _5o8d337, _5o8d363, _5o8d223, _5o8d308, _5o8d272, _5o8d164, _5o8d187, _5o8d188, _5o8d338, _5o8d364, _5o8d339, _5o8d273, _5o8d189, _5o8d365, _5o8d224, _5o8d309, _5o8d366, _5o8d310, _5o8d367, _5o8d439, _5o8d274, _5o8d190, _5o8d191, _5o8d340, _5o8d192, _5o8d275, _5o8d165, _5o8d311, _5o8d410, _5o8d396, _5o8d166, _5o8d312, _5o8d193, _5o8d225, _5o8d434, _5o8d313, _5o8d167, _5o8d440, _5o8d276, _5o8d368, _5o8d376, _5o8d194, _5o8d482, _5o8d458, _5o8d383, _5o8d411, _5o8d466, _5o8d451, _5o8d436, _5o8d277, _5o8d195, _5o8d226, _5o8d278, _5o8d441, _5o8d452, _5o8d496, _5o8d478, _5o8d196, _5o8d421, _5o8d369, _5o8d453, _5o8d279, _5o8d227, _5o8d370, _5o8d384, _5o8d385, _5o8d442, _5o8d412, _5o8d386, _5o8d341, _5o8d387, _5o8d197, _5o8d314, _5o8d315, _5o8d280, _5o8d228, _5o8d342, _5o8d488, _5o8d489, _5o8d198, _5o8d413, _5o8d229, _5o8d316, _5o8d459, _5o8d343, _5o8d377, _5o8d230, _5o8d317, _5o8d497, _5o8d479, _5o8d467, _5o8d344, _5o8d414, _5o8d168, _5o8d281, _5o8d199, _5o8d443, _5o8d149, _5o8d282, _5o8d231, _5o8d388, _5o8d232, _5o8d283, _5o8d233, _5o8d284, _5o8d285, _5o8d371, _5o8d286, _5o8d345, _5o8d287, _5o8d428, _5o8d200, _5o8d234, _5o8d318, _5o8d397 ];

inter.languages = [ {
    id: "ab",
    displayName: "abhază"
}, {
    id: "ace",
    displayName: "aceh"
}, {
    id: "ach",
    displayName: "acoli"
}, {
    id: "ada",
    displayName: "adangme"
}, {
    id: "ady",
    displayName: "adyghe"
}, {
    id: "aa",
    displayName: "afar"
}, {
    id: "afh",
    displayName: "afrihili"
}, {
    id: "af",
    displayName: "afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ain",
    displayName: "ainu"
}, {
    id: "ak",
    displayName: "akan",
    nativeDisplayName: "Akan"
}, {
    id: "akk",
    displayName: "akkadiană"
}, {
    id: "bss",
    displayName: "akoose"
}, {
    id: "ale",
    displayName: "aleută"
}, {
    id: "alt",
    displayName: "altaică meridională"
}, {
    id: "en_us",
    displayName: "engleză americană",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "inari sami",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "anp",
    displayName: "angika"
}, {
    id: "shu",
    displayName: "arabă ciadiană"
}, {
    id: "an",
    displayName: "aragoneză"
}, {
    id: "arc",
    displayName: "aramaică"
}, {
    id: "sam",
    displayName: "aramaică samariteană"
}, {
    id: "arp",
    displayName: "arapaho"
}, {
    id: "arw",
    displayName: "arawak"
}, {
    id: "rup",
    displayName: "aromână"
}, {
    id: "ast",
    displayName: "asturiană",
    nativeDisplayName: "asturianu"
}, {
    id: "cch",
    displayName: "atsam"
}, {
    id: "en_au",
    displayName: "engleză australiană",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "avară"
}, {
    id: "ae",
    displayName: "avestană"
}, {
    id: "awa",
    displayName: "awadhi"
}, {
    id: "ay",
    displayName: "aymara"
}, {
    id: "az",
    displayName: "azeră",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "bfd",
    displayName: "bafut"
}, {
    id: "ms",
    displayName: "malaeză",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "ban",
    displayName: "balineză"
}, {
    id: "bal",
    displayName: "baluchi"
}, {
    id: "bgn",
    displayName: "baluchi occidentală"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bax",
    displayName: "bamun"
}, {
    id: "ba",
    displayName: "bașkiră"
}, {
    id: "bej",
    displayName: "beja"
}, {
    id: "bho",
    displayName: "bhojpuri"
}, {
    id: "bik",
    displayName: "bikol"
}, {
    id: "bin",
    displayName: "bini"
}, {
    id: "bi",
    displayName: "bislama"
}, {
    id: "byn",
    displayName: "blin"
}, {
    id: "bs",
    displayName: "bosniacă",
    nativeDisplayName: "bosanski"
}, {
    id: "bra",
    displayName: "braj"
}, {
    id: "br",
    displayName: "bretonă",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "engleză britanică",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "bugineză"
}, {
    id: "bum",
    displayName: "bulu"
}, {
    id: "bua",
    displayName: "buriat"
}, {
    id: "cad",
    displayName: "caddo"
}, {
    id: "xal",
    displayName: "calmucă"
}, {
    id: "en_ca",
    displayName: "engleză canadiană",
    nativeDisplayName: "Canadian English"
}, {
    id: "car",
    displayName: "carib"
}, {
    id: "ca",
    displayName: "catalană",
    nativeDisplayName: "català"
}, {
    id: "cay",
    displayName: "cayuga"
}, {
    id: "csb",
    displayName: "cașubiană"
}, {
    id: "ceb",
    displayName: "cebuano"
}, {
    id: "chg",
    displayName: "chagatai"
}, {
    id: "ch",
    displayName: "chamorro"
}, {
    id: "chy",
    displayName: "cheyenne"
}, {
    id: "chb",
    displayName: "chibcha"
}, {
    id: "kde",
    displayName: "makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "chp",
    displayName: "chipewyan"
}, {
    id: "sn",
    displayName: "shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cho",
    displayName: "choctaw"
}, {
    id: "chk",
    displayName: "chuukese"
}, {
    id: "cv",
    displayName: "ciuvașă"
}, {
    id: "swb",
    displayName: "comoreză"
}, {
    id: "kg",
    displayName: "congoleză"
}, {
    id: "cop",
    displayName: "coptă"
}, {
    id: "co",
    displayName: "corsicană"
}, {
    id: "cr",
    displayName: "cree"
}, {
    id: "mus",
    displayName: "creek"
}, {
    id: "cy",
    displayName: "galeză",
    nativeDisplayName: "Cymraeg"
}, {
    id: "dak",
    displayName: "dakota"
}, {
    id: "da",
    displayName: "daneză",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "dargwa"
}, {
    id: "se",
    displayName: "sami de nord",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "dzg",
    displayName: "dazaga"
}, {
    id: "del",
    displayName: "delaware"
}, {
    id: "de",
    displayName: "germană",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "dinka"
}, {
    id: "dv",
    displayName: "divehi"
}, {
    id: "doi",
    displayName: "dogri"
}, {
    id: "dgr",
    displayName: "dogrib"
}, {
    id: "dsb",
    displayName: "sorabă de jos",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "dyu",
    displayName: "dyula"
}, {
    id: "et",
    displayName: "estoniană",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efik"
}, {
    id: "egy",
    displayName: "egipteană veche"
}, {
    id: "eka",
    displayName: "ekajuk"
}, {
    id: "guz",
    displayName: "gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "elx",
    displayName: "elamită"
}, {
    id: "enm",
    displayName: "engleză mijlocie"
}, {
    id: "ang",
    displayName: "engleză veche"
}, {
    id: "en",
    displayName: "engleză",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "erzya"
}, {
    id: "es",
    displayName: "spaniolă",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "spaniolă europeană",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "spaniolă mexicană",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "spaniolă latino-americană",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "bască",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ee",
    displayName: "ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "fang"
}, {
    id: "fat",
    displayName: "fanti"
}, {
    id: "zxx",
    displayName: "fară conținut lingvistic"
}, {
    id: "phn",
    displayName: "feniciană"
}, {
    id: "fj",
    displayName: "fijiană"
}, {
    id: "fil",
    displayName: "filipineză",
    nativeDisplayName: "Filipino"
}, {
    id: "fon",
    displayName: "fon"
}, {
    id: "frm",
    displayName: "franceză mijlocie"
}, {
    id: "fro",
    displayName: "franceză veche"
}, {
    id: "fr",
    displayName: "franceză",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "franceză canadiană",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "franceză elvețiană",
    nativeDisplayName: "français suisse"
}, {
    id: "frr",
    displayName: "frizonă nordică"
}, {
    id: "frs",
    displayName: "frizonă orientală"
}, {
    id: "fur",
    displayName: "friulană",
    nativeDisplayName: "furlan"
}, {
    id: "fo",
    displayName: "faroeză",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "ga"
}, {
    id: "ga",
    displayName: "irlandeză",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gl",
    displayName: "galiciană",
    nativeDisplayName: "galego"
}, {
    id: "gay",
    displayName: "gayo"
}, {
    id: "gba",
    displayName: "gbaya"
}, {
    id: "gez",
    displayName: "geez"
}, {
    id: "nds",
    displayName: "germana de jos"
}, {
    id: "gmh",
    displayName: "germană mijlocie înaltă"
}, {
    id: "goh",
    displayName: "germană veche înaltă"
}, {
    id: "bbj",
    displayName: "ghomala"
}, {
    id: "ki",
    displayName: "kikuyu",
    nativeDisplayName: "Gikuyu"
}, {
    id: "gil",
    displayName: "gilbertină"
}, {
    id: "gon",
    displayName: "gondi"
}, {
    id: "gor",
    displayName: "gorontalo"
}, {
    id: "got",
    displayName: "gotică"
}, {
    id: "grc",
    displayName: "greacă veche"
}, {
    id: "grb",
    displayName: "grebo"
}, {
    id: "gn",
    displayName: "guarani"
}, {
    id: "gwi",
    displayName: "gwichʼin"
}, {
    id: "gd",
    displayName: "gaelică scoțiană",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "gag",
    displayName: "găgăuză"
}, {
    id: "hai",
    displayName: "haida"
}, {
    id: "ht",
    displayName: "haitiană"
}, {
    id: "ha",
    displayName: "hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "hz",
    displayName: "herero"
}, {
    id: "bez",
    displayName: "bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hil",
    displayName: "hiligaynon"
}, {
    id: "ho",
    displayName: "hiri motu"
}, {
    id: "hit",
    displayName: "hitită"
}, {
    id: "hmn",
    displayName: "hmong"
}, {
    id: "hsb",
    displayName: "sorabă de sus",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "croată",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "hupa"
}, {
    id: "iba",
    displayName: "iban"
}, {
    id: "ibb",
    displayName: "ibibio"
}, {
    id: "bem",
    displayName: "bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "io",
    displayName: "ido"
}, {
    id: "ig",
    displayName: "igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "kirundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "iloko"
}, {
    id: "id",
    displayName: "indoneziană",
    nativeDisplayName: "Indonesia"
}, {
    id: "inh",
    displayName: "ingușă"
}, {
    id: "ia",
    displayName: "interlingua"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "iu",
    displayName: "inuktitut"
}, {
    id: "ik",
    displayName: "inupiak"
}, {
    id: "mga",
    displayName: "irlandeză mijlocie"
}, {
    id: "sga",
    displayName: "irlandeză veche"
}, {
    id: "sbp",
    displayName: "sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "ndebele de nord",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "italiană",
    nativeDisplayName: "italiano"
}, {
    id: "jrb",
    displayName: "iudeo-arabă"
}, {
    id: "jpr",
    displayName: "iudeo-persană"
}, {
    id: "chn",
    displayName: "jargon chinook"
}, {
    id: "jv",
    displayName: "javaneză"
}, {
    id: "kaj",
    displayName: "jju"
}, {
    id: "dyo",
    displayName: "jola-fonyi",
    nativeDisplayName: "joola"
}, {
    id: "kbd",
    displayName: "kabardian"
}, {
    id: "kea",
    displayName: "kabuverdianu",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kac",
    displayName: "kachin"
}, {
    id: "kkj",
    displayName: "kako",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "kalaallisut",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "kbl",
    displayName: "kanembu"
}, {
    id: "kr",
    displayName: "kanuri"
}, {
    id: "krc",
    displayName: "karaceai-balkar"
}, {
    id: "kaa",
    displayName: "karakalpak"
}, {
    id: "krl",
    displayName: "kareliană"
}, {
    id: "kaw",
    displayName: "kawi"
}, {
    id: "kw",
    displayName: "cornică",
    nativeDisplayName: "kernewek"
}, {
    id: "kha",
    displayName: "khasi"
}, {
    id: "naq",
    displayName: "nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "rof",
    displayName: "rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "machame",
    nativeDisplayName: "Kimachame"
}, {
    id: "kmb",
    displayName: "kimbundu"
}, {
    id: "rw",
    displayName: "kinyarwanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asu",
    nativeDisplayName: "Kipare"
}, {
    id: "rwk",
    displayName: "rwa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "shambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "swahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "swahili Congo",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "tlh",
    displayName: "klingoniană"
}, {
    id: "bkm",
    displayName: "kom"
}, {
    id: "kv",
    displayName: "komi"
}, {
    id: "koi",
    displayName: "komi-permiak"
}, {
    id: "kfo",
    displayName: "koro"
}, {
    id: "kos",
    displayName: "kosrae"
}, {
    id: "khq",
    displayName: "koyra chiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "koyraboro Senni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "kpe",
    displayName: "kpelle"
}, {
    id: "mfe",
    displayName: "morisyen",
    nativeDisplayName: "kreol morisien"
}, {
    id: "kj",
    displayName: "kuanyama"
}, {
    id: "kum",
    displayName: "kumyk"
}, {
    id: "ku",
    displayName: "kurdă"
}, {
    id: "sdh",
    displayName: "kurdă de sud"
}, {
    id: "kru",
    displayName: "kurukh"
}, {
    id: "kut",
    displayName: "kutenai"
}, {
    id: "nmg",
    displayName: "kwasio",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ksh",
    displayName: "kölsch",
    nativeDisplayName: "Kölsch"
}, {
    id: "ebu",
    displayName: "embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "lad",
    displayName: "ladino"
}, {
    id: "lah",
    displayName: "lahnda"
}, {
    id: "lkt",
    displayName: "lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lam",
    displayName: "lamba"
}, {
    id: "la",
    displayName: "latină"
}, {
    id: "lv",
    displayName: "letonă",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "tonga",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lez",
    displayName: "lezghian"
}, {
    id: "lt",
    displayName: "lituaniană",
    nativeDisplayName: "lietuvių"
}, {
    id: "mul",
    displayName: "limbi multiple"
}, {
    id: "kho",
    displayName: "limbp khotaneză"
}, {
    id: "li",
    displayName: "limburgheză"
}, {
    id: "und",
    displayName: "limbă necunoscută"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "jbo",
    displayName: "lojban"
}, {
    id: "loz",
    displayName: "lozi"
}, {
    id: "lua",
    displayName: "luba-lulua"
}, {
    id: "lg",
    displayName: "ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "luiseno"
}, {
    id: "smj",
    displayName: "lule sami"
}, {
    id: "luy",
    displayName: "luyia",
    nativeDisplayName: "Luluhia"
}, {
    id: "lun",
    displayName: "lunda"
}, {
    id: "lus",
    displayName: "lusahi"
}, {
    id: "lb",
    displayName: "luxemburgheză",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "masai",
    nativeDisplayName: "Maa"
}, {
    id: "mde",
    displayName: "maba"
}, {
    id: "mad",
    displayName: "madureză"
}, {
    id: "maf",
    displayName: "mafa"
}, {
    id: "mag",
    displayName: "magahi"
}, {
    id: "hu",
    displayName: "maghiară",
    nativeDisplayName: "magyar"
}, {
    id: "mai",
    displayName: "maithili"
}, {
    id: "mak",
    displayName: "makasar"
}, {
    id: "mgh",
    displayName: "makhuwa-meetto",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "malgașă",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "malteză",
    nativeDisplayName: "Malti"
}, {
    id: "mnc",
    displayName: "manciuriană"
}, {
    id: "mdr",
    displayName: "mandar"
}, {
    id: "man",
    displayName: "mandingo"
}, {
    id: "mni",
    displayName: "manipur"
}, {
    id: "mi",
    displayName: "maori"
}, {
    id: "arn",
    displayName: "mapuche"
}, {
    id: "chm",
    displayName: "mari"
}, {
    id: "mh",
    displayName: "marshalleză"
}, {
    id: "mwr",
    displayName: "marwari"
}, {
    id: "byv",
    displayName: "medumba"
}, {
    id: "men",
    displayName: "mende"
}, {
    id: "mgo",
    displayName: "meta’",
    nativeDisplayName: "metaʼ"
}, {
    id: "mic",
    displayName: "micmac"
}, {
    id: "min",
    displayName: "minangkabau"
}, {
    id: "mwl",
    displayName: "mirandeză"
}, {
    id: "moh",
    displayName: "mohawk"
}, {
    id: "mdf",
    displayName: "moksha"
}, {
    id: "ro_md",
    displayName: "moldovenească",
    nativeDisplayName: "moldovenească"
}, {
    id: "lol",
    displayName: "mongo"
}, {
    id: "mos",
    displayName: "mossi"
}, {
    id: "mua",
    displayName: "mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "mye",
    displayName: "myene"
}, {
    id: "nap",
    displayName: "napolitană"
}, {
    id: "na",
    displayName: "nauru"
}, {
    id: "nv",
    displayName: "navajo"
}, {
    id: "jgo",
    displayName: "ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "nr",
    displayName: "ndebele de sud"
}, {
    id: "ng",
    displayName: "ndonga"
}, {
    id: "nl",
    displayName: "neerlandeză",
    nativeDisplayName: "Nederlands"
}, {
    id: "new",
    displayName: "newari"
}, {
    id: "nwc",
    displayName: "newari clasică"
}, {
    id: "sba",
    displayName: "ngambay"
}, {
    id: "nia",
    displayName: "nias"
}, {
    id: "niu",
    displayName: "niueană"
}, {
    id: "nog",
    displayName: "nogai"
}, {
    id: "non",
    displayName: "nordică veche"
}, {
    id: "nb",
    displayName: "norvegiană bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "norvegiană"
}, {
    id: "yav",
    displayName: "yangben",
    nativeDisplayName: "nuasue"
}, {
    id: "nym",
    displayName: "nyamwezi"
}, {
    id: "ny",
    displayName: "nyanja"
}, {
    id: "tog",
    displayName: "nyasa tonga"
}, {
    id: "nn",
    displayName: "norvegiană nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "nyo",
    displayName: "nyoro"
}, {
    id: "nzi",
    displayName: "nzima"
}, {
    id: "nqo",
    displayName: "n’ko"
}, {
    id: "oc",
    displayName: "occitană"
}, {
    id: "oj",
    displayName: "ojibwa"
}, {
    id: "dum",
    displayName: "olandeză mijlocie"
}, {
    id: "xog",
    displayName: "soga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "osage"
}, {
    id: "uz",
    displayName: "uzbecă",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pal",
    displayName: "pahlavi"
}, {
    id: "pau",
    displayName: "palauană"
}, {
    id: "pi",
    displayName: "pali"
}, {
    id: "pam",
    displayName: "pampanga"
}, {
    id: "pag",
    displayName: "pangasinan"
}, {
    id: "pap",
    displayName: "papiamento"
}, {
    id: "peo",
    displayName: "persană veche"
}, {
    id: "pon",
    displayName: "pohnpeiană"
}, {
    id: "pl",
    displayName: "poloneză",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "portugheză",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "portugheză braziliană",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "portugheză europeană",
    nativeDisplayName: "português europeu"
}, {
    id: "pro",
    displayName: "provensală veche"
}, {
    id: "ff",
    displayName: "fulah",
    nativeDisplayName: "Pulaar"
}, {
    id: "quc",
    displayName: "quiché"
}, {
    id: "raj",
    displayName: "rajasthani"
}, {
    id: "rap",
    displayName: "rapanui"
}, {
    id: "rar",
    displayName: "rarotongan"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "rom",
    displayName: "romani"
}, {
    id: "ro",
    displayName: "română",
    nativeDisplayName: "română"
}, {
    id: "root",
    displayName: "root"
}, {
    id: "cgg",
    displayName: "chiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "romanșă",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "quechua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "ssy",
    displayName: "saho"
}, {
    id: "sma",
    displayName: "sami de sud"
}, {
    id: "sm",
    displayName: "samoană"
}, {
    id: "sad",
    displayName: "sandawe"
}, {
    id: "sa",
    displayName: "sanscrită"
}, {
    id: "sat",
    displayName: "santali"
}, {
    id: "sc",
    displayName: "sardiniană"
}, {
    id: "sas",
    displayName: "sasak"
}, {
    id: "nds_nl",
    displayName: "saxona de jos"
}, {
    id: "de_ch",
    displayName: "germană standard elvețiană",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "germană elvețiană",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "sco",
    displayName: "scots"
}, {
    id: "sel",
    displayName: "selkup"
}, {
    id: "seh",
    displayName: "sena",
    nativeDisplayName: "sena"
}, {
    id: "see",
    displayName: "seneca"
}, {
    id: "srr",
    displayName: "serer"
}, {
    id: "st",
    displayName: "sesotho"
}, {
    id: "tn",
    displayName: "setswana"
}, {
    id: "shn",
    displayName: "shan"
}, {
    id: "sq",
    displayName: "albaneză",
    nativeDisplayName: "shqip"
}, {
    id: "nnh",
    displayName: "ngiemboon",
    nativeDisplayName: "Shwóŋò ngiembɔɔn"
}, {
    id: "scn",
    displayName: "siciliană"
}, {
    id: "sid",
    displayName: "sidamo"
}, {
    id: "bla",
    displayName: "siksika"
}, {
    id: "zbl",
    displayName: "simboluri Bilss"
}, {
    id: "sd",
    displayName: "sindhi"
}, {
    id: "syr",
    displayName: "siriacă"
}, {
    id: "syc",
    displayName: "siriacă clasică"
}, {
    id: "sms",
    displayName: "skolt sami"
}, {
    id: "den",
    displayName: "slave"
}, {
    id: "sk",
    displayName: "slovacă",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "slovenă",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "sogdien"
}, {
    id: "snk",
    displayName: "soninke"
}, {
    id: "so",
    displayName: "somaleză",
    nativeDisplayName: "Soomaali"
}, {
    id: "nso",
    displayName: "sotho de nord"
}, {
    id: "srn",
    displayName: "sranan tongo"
}, {
    id: "suk",
    displayName: "sukuma"
}, {
    id: "sux",
    displayName: "sumeriană"
}, {
    id: "su",
    displayName: "sundaneză"
}, {
    id: "fi",
    displayName: "finlandeză",
    nativeDisplayName: "suomi"
}, {
    id: "sus",
    displayName: "susu"
}, {
    id: "sv",
    displayName: "suedeză",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "swati"
}, {
    id: "sh",
    displayName: "sârbo-croată"
}, {
    id: "sg",
    displayName: "sango",
    nativeDisplayName: "Sängö"
}, {
    id: "tg",
    displayName: "tadjică"
}, {
    id: "tl",
    displayName: "tagalog"
}, {
    id: "ty",
    displayName: "tahitiană"
}, {
    id: "tmh",
    displayName: "tamashek"
}, {
    id: "tzm",
    displayName: "tamazight central marocană",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "kabyle",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "trv",
    displayName: "taroko"
}, {
    id: "twq",
    displayName: "tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "ter",
    displayName: "tereno"
}, {
    id: "tet",
    displayName: "tetum"
}, {
    id: "nus",
    displayName: "nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "tig",
    displayName: "tigre"
}, {
    id: "tem",
    displayName: "timne"
}, {
    id: "tiv",
    displayName: "tiv"
}, {
    id: "vi",
    displayName: "vietnameză",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tli",
    displayName: "tlingit"
}, {
    id: "tpi",
    displayName: "tok pisin"
}, {
    id: "tkl",
    displayName: "tokelau"
}, {
    id: "lu",
    displayName: "luba-katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tsi",
    displayName: "tsimshian"
}, {
    id: "ts",
    displayName: "tsonga"
}, {
    id: "tum",
    displayName: "tumbuka"
}, {
    id: "crh",
    displayName: "turcă crimeeană"
}, {
    id: "ota",
    displayName: "turcă otomană"
}, {
    id: "tvl",
    displayName: "tuvalu"
}, {
    id: "tyv",
    displayName: "tuvană"
}, {
    id: "tw",
    displayName: "twi"
}, {
    id: "kcg",
    displayName: "tyap"
}, {
    id: "tk",
    displayName: "turkmenă",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "turcă",
    nativeDisplayName: "Türkçe"
}, {
    id: "tt",
    displayName: "tătară"
}, {
    id: "udm",
    displayName: "udmurt"
}, {
    id: "uga",
    displayName: "ugaritică"
}, {
    id: "umb",
    displayName: "umbundu"
}, {
    id: "wa",
    displayName: "valonă"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "nl_be",
    displayName: "flamandă",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "volapuk",
    nativeDisplayName: "Volapük"
}, {
    id: "vot",
    displayName: "votic"
}, {
    id: "wal",
    displayName: "walamo"
}, {
    id: "wae",
    displayName: "walser",
    nativeDisplayName: "Walser"
}, {
    id: "war",
    displayName: "waray"
}, {
    id: "wbp",
    displayName: "warlpiri"
}, {
    id: "was",
    displayName: "washo"
}, {
    id: "fy",
    displayName: "frizonă occidentală",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "wolof"
}, {
    id: "xh",
    displayName: "xhosa"
}, {
    id: "yao",
    displayName: "yao"
}, {
    id: "yap",
    displayName: "yapeză"
}, {
    id: "ybb",
    displayName: "yemba"
}, {
    id: "zap",
    displayName: "zapotecă"
}, {
    id: "dje",
    displayName: "zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "zaza"
}, {
    id: "zen",
    displayName: "zenaga"
}, {
    id: "za",
    displayName: "zhuang"
}, {
    id: "zun",
    displayName: "zuni"
}, {
    id: "yo",
    displayName: "yoruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islandeză",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "germană austriacă",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "cehă",
    nativeDisplayName: "čeština"
}, {
    id: "bas",
    displayName: "basaa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "hawaiiană",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "greacă",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "bielorusă",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bulgară",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "osetă",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "kârgâză",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "macedoneană",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongolă",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "cecenă",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "rusă",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "sakha",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "sârbă",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ucraineană",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "slavonă",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "kazahă",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armeană",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "idiș",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "ebraică",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uigură",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "arabă",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "arabă standard modernă",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "persană",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "luri de nord",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "mazanderani",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "paștună",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "kurdă sorani",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "cașmiră",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepaleză",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "asameză",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengaleză",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "punjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gujarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamilă",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malayalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "singhaleză",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "thailandeză",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "laoțiană",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibetană",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "birmaneză",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "georgiană",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrină",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amharică",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "khmeră",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "tamazight standard marocană",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "tachelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "chineză",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japoneză",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "chineză simplificată",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "cantoneză",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "chineză tradițională",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "sichuan yi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "cherokee",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "coreeană",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Arab",
    displayName: "arabă"
}, {
    id: "Armn",
    displayName: "armeană"
}, {
    id: "Bali",
    displayName: "balineză"
}, {
    id: "Beng",
    displayName: "bengaleză"
}, {
    id: "Tfng",
    displayName: "berberă"
}, {
    id: "Mymr",
    displayName: "birmană"
}, {
    id: "Bopo",
    displayName: "bopomofo"
}, {
    id: "Brai",
    displayName: "braille"
}, {
    id: "Cyrl",
    displayName: "chirilică"
}, {
    id: "Cyrs",
    displayName: "chirilică slavonă bisericească veche"
}, {
    id: "Cprt",
    displayName: "cipriotă"
}, {
    id: "Zyyy",
    displayName: "comună"
}, {
    id: "Copt",
    displayName: "coptă"
}, {
    id: "Kore",
    displayName: "coreeană"
}, {
    id: "Xsux",
    displayName: "cuneiformă sumero-akkadiană"
}, {
    id: "Egyd",
    displayName: "demotică egipteană"
}, {
    id: "Deva",
    displayName: "devanagari"
}, {
    id: "Hebr",
    displayName: "ebraică"
}, {
    id: "Ethi",
    displayName: "etiopiană"
}, {
    id: "Phnx",
    displayName: "feniciană"
}, {
    id: "Geor",
    displayName: "georgiană"
}, {
    id: "Geok",
    displayName: "georgiană bisericească"
}, {
    id: "Glag",
    displayName: "glagolitică"
}, {
    id: "Goth",
    displayName: "gotică"
}, {
    id: "Grek",
    displayName: "greacă"
}, {
    id: "Gujr",
    displayName: "gujarati"
}, {
    id: "Guru",
    displayName: "gurmukhi"
}, {
    id: "Hani",
    displayName: "han"
}, {
    id: "Hang",
    displayName: "hangul"
}, {
    id: "Egyh",
    displayName: "hieratică egipteană"
}, {
    id: "Egyp",
    displayName: "hieroglife egiptene"
}, {
    id: "Maya",
    displayName: "hieroglife maya"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Inds",
    displayName: "indus"
}, {
    id: "Ital",
    displayName: "italică veche"
}, {
    id: "Jpan",
    displayName: "japoneză"
}, {
    id: "Java",
    displayName: "javaneză"
}, {
    id: "Knda",
    displayName: "kannada"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Hrkt",
    displayName: "katakana sau hiragana"
}, {
    id: "Khmr",
    displayName: "khmeră"
}, {
    id: "Laoo",
    displayName: "laoțiană"
}, {
    id: "Latn",
    displayName: "latină"
}, {
    id: "Latf",
    displayName: "latină Fraktur"
}, {
    id: "Latg",
    displayName: "latină gaelică"
}, {
    id: "Lydi",
    displayName: "lidiană"
}, {
    id: "Lina",
    displayName: "lineară A"
}, {
    id: "Linb",
    displayName: "lineară B"
}, {
    id: "Hung",
    displayName: "maghiară veche"
}, {
    id: "Mlym",
    displayName: "malayalam"
}, {
    id: "Mong",
    displayName: "mongolă"
}, {
    id: "Dsrt",
    displayName: "mormonă"
}, {
    id: "Zinh",
    displayName: "moștenită"
}, {
    id: "Zxxx",
    displayName: "nescrisă"
}, {
    id: "Orya",
    displayName: "oriya"
}, {
    id: "Xpeo",
    displayName: "persană veche"
}, {
    id: "Runr",
    displayName: "runică"
}, {
    id: "Zzzz",
    displayName: "scriere necunoscută"
}, {
    id: "Cans",
    displayName: "silabică aborigenă canadiană unificată"
}, {
    id: "Zsym",
    displayName: "simboluri"
}, {
    id: "Hans",
    displayName: "simplificată"
}, {
    id: "Sinh",
    displayName: "singaleză"
}, {
    id: "Syrc",
    displayName: "siriacă"
}, {
    id: "Syrj",
    displayName: "siriacă occidentală"
}, {
    id: "Syrn",
    displayName: "siriacă orientală"
}, {
    id: "Taml",
    displayName: "tamilă"
}, {
    id: "Telu",
    displayName: "telugu"
}, {
    id: "Thaa",
    displayName: "thaana"
}, {
    id: "Thai",
    displayName: "thailandeză"
}, {
    id: "Tibt",
    displayName: "tibetană"
}, {
    id: "Hant",
    displayName: "tradițională"
} ];

inter.currencies = [ {
    id: "AFN",
    displayName: "afgani afgan",
    symbol: "AFN",
    one: "afgani afgan",
    few: "afgani afgani",
    other: "afgani afgani"
}, {
    id: "XAG",
    displayName: "argint"
}, {
    id: "MGA",
    displayName: "ariary malgaș",
    symbol: "MGA",
    one: "ariary malgaș",
    few: "ariary malgași",
    other: "ariary malgași"
}, {
    id: "XAU",
    displayName: "aur"
}, {
    id: "THB",
    displayName: "baht thailandez",
    symbol: "THB",
    one: "baht thailandez",
    few: "bahți thailandezi",
    other: "bahți thailandezi"
}, {
    id: "PAB",
    displayName: "balboa panameză",
    symbol: "PAB",
    one: "balboa panameză",
    few: "balboa panameze",
    other: "balboa panameze"
}, {
    id: "ETB",
    displayName: "birr etiopian",
    symbol: "ETB",
    one: "birr etiopian",
    few: "birri etiopieni",
    other: "birri etiopieni"
}, {
    id: "VEB",
    displayName: "bolivar Venezuela (1871–2008)",
    one: "bolivar Venezuela (1871–2008)",
    few: "bolivari Venezuela (1871–2008)",
    other: "bolivari Venezuela (1871–2008)"
}, {
    id: "VEF",
    displayName: "bolivar venezuelean",
    symbol: "VEF",
    one: "bolivar venezuelean",
    few: "bolivari venezueleni",
    other: "bolivari venezueleni"
}, {
    id: "BOB",
    displayName: "boliviano bolivian",
    symbol: "BOB",
    one: "boliviano bolivian",
    few: "boliviano bolivieni",
    other: "boliviano bolivieni"
}, {
    id: "UAK",
    displayName: "carboavă ucraineană",
    one: "carboavă ucraineană",
    few: "carboave ucrainiene",
    other: "carboave ucrainiene"
}, {
    id: "GHC",
    displayName: "cedi Ghana (1979–2007)"
}, {
    id: "GHS",
    displayName: "cedi ghanez",
    symbol: "GHS",
    one: "cedi ghanez",
    few: "cedi ghanezi",
    other: "cedi ghanezi"
}, {
    id: "XTS",
    displayName: "cod monetar de test"
}, {
    id: "SVC",
    displayName: "colon El Salvador",
    one: "colon El Salvador",
    few: "coloni El Salvador",
    other: "coloni El Salvador"
}, {
    id: "CRC",
    displayName: "colon costarican",
    symbol: "CRC",
    one: "colon costarican",
    few: "coloni costaricani",
    other: "coloni costaricani"
}, {
    id: "NIO",
    displayName: "cordoba nicaraguană",
    symbol: "NIO",
    one: "cordoba nicaraguană",
    few: "cordobe nicaraguane",
    other: "cordobe nicaraguane"
}, {
    id: "NIC",
    displayName: "cordoba nicaraguană (1988–1991)"
}, {
    id: "CZK",
    displayName: "coroană cehă",
    symbol: "CZK",
    one: "coroană cehă",
    few: "coroane cehe",
    other: "coroane cehe"
}, {
    id: "DKK",
    displayName: "coroană daneză",
    symbol: "DKK",
    one: "coroană daneză",
    few: "coroane daneze",
    other: "coroane daneze"
}, {
    id: "EEK",
    displayName: "coroană estoniană",
    one: "coroană estoniană",
    few: "coroane estoniene",
    other: "coroane estoniene"
}, {
    id: "ISK",
    displayName: "coroană islandeză",
    symbol: "ISK",
    one: "coroană islandeză",
    few: "coroane islandeze",
    other: "coroane islandeze"
}, {
    id: "NOK",
    displayName: "coroană norvegiană",
    symbol: "NOK",
    one: "coroană norvegiană",
    few: "coroane norvegiene",
    other: "coroane norvegiene"
}, {
    id: "SKK",
    displayName: "coroană slovacă",
    one: "coroană slovacă",
    few: "coroane slovace",
    other: "coroane slovace"
}, {
    id: "SEK",
    displayName: "coroană suedeză",
    symbol: "SEK",
    one: "coroană suedeză",
    few: "coroane suedeze",
    other: "coroane suedeze"
}, {
    id: "BRE",
    displayName: "cruzeiro brazilian (1990–1993)"
}, {
    id: "BRR",
    displayName: "cruzeiro brazilian (1993–1994)"
}, {
    id: "GMD",
    displayName: "dalasi din Gambia",
    symbol: "GMD",
    one: "dalasi din Gambia",
    few: "dalasi din Gambia",
    other: "dalasi din Gambia"
}, {
    id: "BAD",
    displayName: "dinar Bosnia-Herțegovina (1992–1994)",
    one: "dinar Bosnia-Herțegovina (1992–1994)",
    few: "dinari Bosnia-Herțegovina",
    other: "dinari Bosnia-Herțegovina (1992–1994)"
}, {
    id: "CSD",
    displayName: "dinar Serbia și Muntenegru (2002–2006)",
    one: "dinar Serbia și Muntenegru (2002–2006)",
    few: "dinari Serbia și Muntenegru (2002–2006)",
    other: "dinari Serbia și Muntenegru (2002–2006)"
}, {
    id: "YDD",
    displayName: "dinar Yemen",
    one: "dinar Yemen",
    few: "dinari Yemen",
    other: "dinari Yemen"
}, {
    id: "DZD",
    displayName: "dinar algerian",
    symbol: "DZD",
    one: "dinar algerian",
    few: "dinari algerieni",
    other: "dinari algerieni"
}, {
    id: "HRD",
    displayName: "dinar croat",
    one: "dinar croat",
    few: "dinari croați",
    other: "dinari croați"
}, {
    id: "BHD",
    displayName: "dinar din Bahrain",
    symbol: "BHD",
    one: "dinar din Bahrain",
    few: "dinari din Bahrain",
    other: "dinari din Bahrain"
}, {
    id: "JOD",
    displayName: "dinar iordanian",
    symbol: "JOD",
    one: "dinar iordanian",
    few: "dinari iordanieni",
    other: "dinari iordanieni"
}, {
    id: "IQD",
    displayName: "dinar irakian",
    symbol: "IQD",
    one: "dinar irakian",
    few: "dinari irakieni",
    other: "dinari irakieni"
}, {
    id: "YUN",
    displayName: "dinar iugoslav convertibil",
    one: "dinar iugoslav convertibil",
    few: "dinari iugoslavi convertibili",
    other: "dinari iugoslavi convertibili"
}, {
    id: "YUD",
    displayName: "dinar iugoslav greu",
    one: "dinar iugoslav greu",
    few: "dinari iugoslavi grei",
    other: "dinari iugoslavi grei"
}, {
    id: "YUM",
    displayName: "dinar iugoslav nou",
    one: "dinar iugoslav nou",
    few: "dinari iugoslavi noi",
    other: "dinari iugoslavi noi"
}, {
    id: "KWD",
    displayName: "dinar kuweitian",
    symbol: "KWD",
    one: "dinar kuweitian",
    few: "dinari kuweitieni",
    other: "dinari kuweitieni"
}, {
    id: "LYD",
    displayName: "dinar libian",
    symbol: "LYD",
    one: "dinar libian",
    few: "dinari libieni",
    other: "dinari libieni"
}, {
    id: "MKD",
    displayName: "dinar macedonean",
    symbol: "MKD",
    one: "dinar macedonean",
    few: "dinari macedoneni",
    other: "dinari macedoneni"
}, {
    id: "SDD",
    displayName: "dinar sudanez",
    one: "dinar sudanez",
    few: "dinari sudanezi",
    other: "dinari sudanezi"
}, {
    id: "RSD",
    displayName: "dinar sârbesc",
    symbol: "RSD",
    one: "dinar sârbesc",
    few: "dinari sârbești",
    other: "dinari sârbești"
}, {
    id: "TND",
    displayName: "dinar tunisian",
    symbol: "TND",
    one: "dinar tunisian",
    few: "dinari tunisieni",
    other: "dinari tunisieni"
}, {
    id: "AED",
    displayName: "dirham din Emiratele Arabe Unite",
    symbol: "AED",
    one: "dirham din Emiratele Arabe Unite",
    few: "dirhami din Emiratele Arabe Unite",
    other: "dirhami din Emiratele Arabe Unite"
}, {
    id: "MAD",
    displayName: "dirham marocan",
    symbol: "MAD",
    one: "dirham marocan",
    few: "dirhami marocani",
    other: "dirhami marocani"
}, {
    id: "STD",
    displayName: "dobra Sao Tome și Principe",
    symbol: "STD",
    one: "dobra Sao Tome și Principe",
    few: "dobre Sao Tome și Principe",
    other: "dobre Sao Tome și Principe"
}, {
    id: "BBD",
    displayName: "dolar Barbados",
    symbol: "BBD",
    one: "dolar Barbados",
    few: "dolari Barbados",
    other: "dolari Barbados"
}, {
    id: "SGD",
    displayName: "dolar Singapore",
    symbol: "SGD",
    one: "dolar Singapore",
    few: "dolari Singapore",
    other: "dolari Singapore"
}, {
    id: "ZWD",
    displayName: "dolar Zimbabwe (1980–2008)",
    one: "dolar Zimbabwe (1980–2008)",
    few: "dolari Zimbabwe (1980–2008)",
    other: "dolari Zimbabwe (1980–2008)"
}, {
    id: "ZWR",
    displayName: "dolar Zimbabwe (2008)"
}, {
    id: "ZWL",
    displayName: "dolar Zimbabwe (2009)"
}, {
    id: "USD",
    displayName: "dolar american",
    symbol: "USD",
    one: "dolar american",
    few: "dolari americani",
    other: "dolari americani"
}, {
    id: "USS",
    displayName: "dolar american (aceeași zi)",
    one: "dolar american (aceeași zi)",
    few: "dolari americani (aceeași zi)",
    other: "dolari americani (aceeași zi)"
}, {
    id: "USN",
    displayName: "dolar american (ziua următoare)",
    one: "dolar american (ziua următoare)",
    few: "dolari americani (ziua următoare)",
    other: "dolari americani (ziua următoare)"
}, {
    id: "AUD",
    displayName: "dolar australian",
    symbol: "AUD",
    one: "dolar australian",
    few: "dolari australieni",
    other: "dolari australieni"
}, {
    id: "CAD",
    displayName: "dolar canadian",
    symbol: "CAD",
    one: "dolar canadian",
    few: "dolari canadieni",
    other: "dolari canadieni"
}, {
    id: "BSD",
    displayName: "dolar din Bahamas",
    symbol: "BSD",
    one: "dolar din Bahamas",
    few: "dolari din Bahamas",
    other: "dolari din Bahamas"
}, {
    id: "BZD",
    displayName: "dolar din Belize",
    symbol: "BZD",
    one: "dolar din Belize",
    few: "dolari din Belize",
    other: "dolari din Belize"
}, {
    id: "BMD",
    displayName: "dolar din Bermuda",
    symbol: "BMD",
    one: "dolar din Bermuda",
    few: "dolari din Bermuda",
    other: "dolari din Bermuda"
}, {
    id: "BND",
    displayName: "dolar din Brunei",
    symbol: "BND",
    one: "dolar din Brunei",
    few: "dolari din Brunei",
    other: "dolari Brunei"
}, {
    id: "XCD",
    displayName: "dolar din Caraibele de Est",
    symbol: "XCD",
    one: "dolar din Caraibele de Est",
    few: "dolari din Caraibele de Est",
    other: "dolari din Caraibele de Est"
}, {
    id: "HKD",
    displayName: "dolar din Hong Kong",
    symbol: "HKD",
    one: "dolar din Hong Kong",
    few: "dolari din Hong Kong",
    other: "dolari din Hong Kong"
}, {
    id: "KYD",
    displayName: "dolar din Insulele Cayman",
    symbol: "KYD",
    one: "dolar din Insulele Cayman",
    few: "dolari din Insulele Cayman",
    other: "dolari din Insulele Cayman"
}, {
    id: "SBD",
    displayName: "dolar din Insulele Solomon",
    symbol: "SBD",
    one: "dolar din Insulele Solomon",
    few: "dolari din Insulele Solomon",
    other: "dolari din Insulele Solomon"
}, {
    id: "TTD",
    displayName: "dolar din Trinidad-Tobago",
    symbol: "TTD",
    one: "dolar din Trinidad-Tobago",
    few: "dolari din Trinidad-Tobago",
    other: "dolari din Trinidad-Tobago"
}, {
    id: "FJD",
    displayName: "dolar fijian",
    symbol: "FJD",
    one: "dolar fijian",
    few: "dolari fijieni",
    other: "dolari fijieni"
}, {
    id: "GYD",
    displayName: "dolar guyanez",
    symbol: "GYD",
    one: "dolar guyanez",
    few: "dolari guyanezi",
    other: "dolari guyanezi"
}, {
    id: "JMD",
    displayName: "dolar jamaican",
    symbol: "JMD",
    one: "dolar jamaican",
    few: "dolari jamaicani",
    other: "dolari jamaicani"
}, {
    id: "LRD",
    displayName: "dolar liberian",
    symbol: "LRD",
    one: "dolar liberian",
    few: "dolari liberieni",
    other: "dolari liberieni"
}, {
    id: "NAD",
    displayName: "dolar namibian",
    symbol: "NAD",
    one: "dolar namibian",
    few: "dolari namibieni",
    other: "dolari namibieni"
}, {
    id: "NZD",
    displayName: "dolar neozeelandez",
    symbol: "NZD",
    one: "dolar neozeelandez",
    few: "dolari neozeelandezi",
    other: "dolari neozeelandezi"
}, {
    id: "TWD",
    displayName: "dolar nou din Taiwan",
    symbol: "TWD",
    one: "dolar nou din Taiwan",
    few: "dolari noi din Taiwan",
    other: "dolari noi Taiwan"
}, {
    id: "RHD",
    displayName: "dolar rhodesian",
    one: "dolar rhodesian",
    few: "dolari rhodesieni",
    other: "dolari rhodesieni"
}, {
    id: "SRD",
    displayName: "dolar surinamez",
    symbol: "SRD",
    one: "dolar surinamez",
    few: "dolari surinamezi",
    other: "dolari surinamezi"
}, {
    id: "VND",
    displayName: "dong vietnamez",
    symbol: "VND",
    one: "dong vietnamez",
    few: "dongi vietnamezi",
    other: "dongi vietnamezi"
}, {
    id: "GRD",
    displayName: "drahmă grecească",
    one: "drahmă grecească",
    few: "drahme grecești",
    other: "drahme grecești"
}, {
    id: "AMD",
    displayName: "dram armenesc",
    symbol: "AMD",
    one: "dram armenesc",
    few: "drami armenești",
    other: "drami armenești"
}, {
    id: "XDR",
    displayName: "drepturi speciale de tragere"
}, {
    id: "MZE",
    displayName: "escudo Mozambic"
}, {
    id: "CVE",
    displayName: "escudo din Capul Verde",
    symbol: "CVE",
    one: "escudo din Capul Verde",
    few: "escudo din Capul Verde",
    other: "escudo din Capul Verde"
}, {
    id: "EUR",
    displayName: "euro",
    symbol: "EUR",
    one: "euro",
    few: "euro",
    other: "euro"
}, {
    id: "AWG",
    displayName: "florin aruban",
    symbol: "AWG",
    one: "florin aruban",
    few: "florini arubani",
    other: "florini arubani"
}, {
    id: "HUF",
    displayName: "forint maghiar",
    symbol: "HUF",
    one: "forint maghiar",
    few: "forinți maghiari",
    other: "forinți maghiari"
}, {
    id: "XOF",
    displayName: "franc CFA BCEAO",
    symbol: "CFA",
    one: "franc CFA BCEAO",
    few: "franci CFA BCEAO",
    other: "franci CFA BCEAO"
}, {
    id: "XAF",
    displayName: "franc CFA BEAC",
    symbol: "FCFA",
    one: "franc CFA BEAC",
    few: "franci CFA BEAC",
    other: "franci Comunitatea Financiară"
}, {
    id: "XPF",
    displayName: "franc CFP",
    symbol: "CFPF",
    one: "franc CFP",
    few: "franci CFP",
    other: "franci CFP"
}, {
    id: "MGF",
    displayName: "franc Madagascar",
    one: "franc Madagascar",
    few: "franci Madagascar",
    other: "franci Madagascar"
}, {
    id: "MLF",
    displayName: "franc Mali",
    one: "franc Mali",
    few: "franci Mali",
    other: "franci Mali"
}, {
    id: "XFU",
    displayName: "franc UIC francez"
}, {
    id: "BEF",
    displayName: "franc belgian",
    one: "franc belgian",
    few: "franci belgieni",
    other: "franci belgieni"
}, {
    id: "BEC",
    displayName: "franc belgian (convertibil)",
    one: "franc belgian (convertibil)",
    few: "franci belgieni (convertibili)",
    other: "franci belgieni (convertibili)"
}, {
    id: "BEL",
    displayName: "franc belgian (financiar)",
    one: "franc belgian (financiar)",
    few: "franci belgieni (financiari)",
    other: "franci belgieni (financiari)"
}, {
    id: "BIF",
    displayName: "franc burundez",
    symbol: "BIF",
    one: "franc burundez",
    few: "franci burundezi",
    other: "franci burundezi"
}, {
    id: "KMF",
    displayName: "franc comorian",
    symbol: "KMF",
    one: "franc comorian",
    few: "franci comorieni",
    other: "franci comorieni"
}, {
    id: "CDF",
    displayName: "franc congolez",
    symbol: "CDF",
    one: "franc congolez",
    few: "franci congolezi",
    other: "franci congolezi"
}, {
    id: "LUC",
    displayName: "franc convertibil luxemburghez",
    one: "franc convertibil luxemburghez",
    few: "franci convertibili luxemburghezi",
    other: "franci convertibili luxemburghezi"
}, {
    id: "DJF",
    displayName: "franc djiboutian",
    symbol: "DJF",
    one: "franc djiboutian",
    few: "franci djiboutieni",
    other: "franci djiboutieni"
}, {
    id: "CHF",
    displayName: "franc elvețian",
    symbol: "CHF",
    one: "franc elvețian",
    few: "franci elvețieni",
    other: "franci elvețieni"
}, {
    id: "LUL",
    displayName: "franc financiar luxemburghez",
    one: "franc financiar luxemburghez",
    few: "franci financiari luxemburghezi",
    other: "franci financiari luxemburghezi"
}, {
    id: "FRF",
    displayName: "franc francez",
    one: "franc francez",
    few: "franci francezi",
    other: "franci francezi"
}, {
    id: "XFO",
    displayName: "franc francez de aur",
    one: "franc francez de aur",
    few: "franci francezi de aur",
    other: "franci francezi de aur"
}, {
    id: "GNF",
    displayName: "franc guineean",
    symbol: "GNF",
    one: "franc guineean",
    few: "franci guineeni",
    other: "franci guineeni"
}, {
    id: "LUF",
    displayName: "franc luxemburghez",
    one: "franc luxemburghez",
    few: "franci luxemburghezi",
    other: "franci luxemburghezi"
}, {
    id: "MAF",
    displayName: "franc marocan",
    one: "franc marocan",
    few: "franci marocani",
    other: "franci marocani"
}, {
    id: "RWF",
    displayName: "franc rwandez",
    symbol: "RWF",
    one: "franc rwandez",
    few: "franci rwandezi",
    other: "franci rwandezi"
}, {
    id: "HTG",
    displayName: "gourde din Haiti",
    symbol: "HTG",
    one: "gourde din Haiti",
    few: "gourde din Haiti",
    other: "gourde din Haiti"
}, {
    id: "PYG",
    displayName: "guarani paraguayan",
    symbol: "PYG",
    one: "guarani paraguayan",
    few: "guarani paraguayeni",
    other: "guarani paraguayeni"
}, {
    id: "SRG",
    displayName: "gulden Surinam",
    one: "gulden Surinam",
    few: "guldeni Surinam",
    other: "guldeni Surinam"
}, {
    id: "ANG",
    displayName: "gulden din Antilele Olandeze",
    symbol: "ANG",
    one: "gulden din Antilele Olandeze",
    few: "guldeni din Antilele Olandeze",
    other: "guldeni din Antilele Olandeze"
}, {
    id: "NLG",
    displayName: "gulden olandez",
    one: "gulden olandez",
    few: "guldeni olandezi",
    other: "guldeni olandezi"
}, {
    id: "UAH",
    displayName: "hryvna ucraineană",
    symbol: "UAH",
    one: "hryvna ucrainiană",
    few: "hryvna ucrainiene",
    other: "hryvna ucrainiene"
}, {
    id: "PEI",
    displayName: "inti peruvian"
}, {
    id: "PGK",
    displayName: "kina din Papua-Noua Guinee",
    symbol: "PGK",
    one: "kina din Papua-Noua Guinee",
    few: "kina din Papua-Noua Guinee",
    other: "kina din Papua-Noua Guinee"
}, {
    id: "LAK",
    displayName: "kip laoțian",
    symbol: "LAK",
    one: "kip laoțian",
    few: "kipi laoțieni",
    other: "kipi laoțieni"
}, {
    id: "HRK",
    displayName: "kuna croată",
    symbol: "HRK",
    one: "kuna croată",
    few: "kune croate",
    other: "kune croate"
}, {
    id: "MWK",
    displayName: "kwacha malawiană",
    symbol: "MWK",
    one: "kwacha malawiană",
    few: "kwache malawiene",
    other: "kwache malawiene"
}, {
    id: "ZMW",
    displayName: "kwacha zambian",
    symbol: "ZMW",
    one: "kwacha zambian",
    few: "kwache zambiene",
    other: "kwache zambiene"
}, {
    id: "ZMK",
    displayName: "kwacha zambian (1968–2012)",
    one: "kwacha zambiană (1968–2012)",
    few: "kwache zambiene (1968–2012)",
    other: "kwache zambiene (1968–2012)"
}, {
    id: "AOA",
    displayName: "kwanza angoleză",
    symbol: "AOA",
    one: "kwanza angoleză",
    few: "kwanze angoleze",
    other: "kwanze angoleze"
}, {
    id: "BUK",
    displayName: "kyat birman"
}, {
    id: "MMK",
    displayName: "kyat din Myanmar",
    symbol: "MMK",
    one: "kyat din Myanmar",
    few: "kyați din Myanmar",
    other: "kyați din Myanmar"
}, {
    id: "GEL",
    displayName: "lari georgian",
    symbol: "GEL",
    one: "lari georgian",
    few: "lari georgieni",
    other: "lari georgieni"
}, {
    id: "LVL",
    displayName: "lats letonian",
    symbol: "LVL",
    one: "lats letonian",
    few: "lats letonieni",
    other: "lats letonieni"
}, {
    id: "ALL",
    displayName: "leka albaneză",
    symbol: "ALL",
    one: "leka albaneză",
    few: "leka albaneze",
    other: "leka albaneze"
}, {
    id: "HNL",
    displayName: "lempira honduriană",
    symbol: "HNL",
    one: "lempiră honduriană",
    few: "lempire honduriene",
    other: "lempire honduriene"
}, {
    id: "SLL",
    displayName: "leone din Sierra Leone",
    symbol: "SLL",
    one: "leone din Sierra Leone",
    few: "leoni din Sierra Leone",
    other: "leoni din Sierra Leone"
}, {
    id: "MDL",
    displayName: "leu moldovenesc",
    symbol: "MDL",
    one: "leu moldovenesc",
    few: "lei moldovenești",
    other: "lei moldovenești"
}, {
    id: "RON",
    displayName: "leu românesc",
    symbol: "RON",
    one: "leu românesc",
    few: "lei românești",
    other: "lei românești"
}, {
    id: "ROL",
    displayName: "leu românesc (1952–2006)",
    one: "leu românesc (1952–2006)",
    few: "lei românești (1952–2006)",
    other: "lei românești (1952–2006)"
}, {
    id: "BGN",
    displayName: "leva bulgărească",
    symbol: "BGN",
    one: "leva bulgărească",
    few: "leva bulgărești",
    other: "leva bulgărești"
}, {
    id: "SZL",
    displayName: "lilangeni din Swaziland",
    symbol: "SZL",
    one: "lilangeni din Swaziland",
    few: "emalangeni din Swaziland",
    other: "emalangeni din Swaziland"
}, {
    id: "SHP",
    displayName: "liră Insula Sf. Elena",
    symbol: "SHP",
    one: "liră Insula Sf. Elena",
    few: "lire Insula Sf. Elena",
    other: "lire Insula Sf. Elena"
}, {
    id: "CYP",
    displayName: "liră cipriotă",
    one: "liră cipriotă",
    few: "lire cipriote",
    other: "lire cipriote"
}, {
    id: "GIP",
    displayName: "liră din Gibraltar",
    symbol: "GIP",
    one: "liră din Gibraltar",
    few: "lire din Gibraltar",
    other: "lire Gibraltar"
}, {
    id: "FKP",
    displayName: "liră din Insulele Falkland",
    symbol: "FKP",
    one: "liră din Insulele Falkland",
    few: "lire din Insulele Falkland",
    other: "lire din Insulele Falkland"
}, {
    id: "EGP",
    displayName: "liră egipteană",
    symbol: "EGP",
    one: "liră egipteană",
    few: "lire egiptene",
    other: "lire egiptene"
}, {
    id: "IEP",
    displayName: "liră irlandeză",
    one: "liră irlandeză",
    few: "lire irlandeze",
    other: "lire irlandeze"
}, {
    id: "ILP",
    displayName: "liră israeliană",
    one: "liră israeliană",
    few: "lire israeliene",
    other: "lire israeliene"
}, {
    id: "ITL",
    displayName: "liră italiană",
    one: "liră italiană",
    few: "lire italiene",
    other: "lire italiene"
}, {
    id: "LBP",
    displayName: "liră libaneză",
    symbol: "LBP",
    one: "liră libaneză",
    few: "lire libaneze",
    other: "lire libaneze"
}, {
    id: "MTL",
    displayName: "liră malteză",
    one: "liră malteză",
    few: "lire malteze",
    other: "lire malteze"
}, {
    id: "SYP",
    displayName: "liră siriană",
    symbol: "SYP",
    one: "liră siriană",
    few: "lire siriene",
    other: "lire siriene"
}, {
    id: "GBP",
    displayName: "liră sterlină",
    symbol: "GBP",
    one: "liră sterlină",
    few: "lire sterline",
    other: "lire sterline"
}, {
    id: "SSP",
    displayName: "liră sud-sudaneză",
    symbol: "SSP",
    one: "liră sud-sudaneză",
    few: "lire sud-sudaneze",
    other: "lire sud-sudaneze"
}, {
    id: "SDG",
    displayName: "liră sudaneză",
    symbol: "SDG",
    one: "liră sudaneză",
    few: "lire sudaneze",
    other: "lire sudaneze"
}, {
    id: "SDP",
    displayName: "liră sudaneză (1957–1998)",
    one: "liră sudaneză (1957–1998)",
    few: "lire sudaneze (1957–1998)",
    other: "lire sudaneze (1957–1998)"
}, {
    id: "TRY",
    displayName: "liră turcească",
    symbol: "TRY",
    one: "liră turcească",
    few: "lire turcești",
    other: "lire turcești"
}, {
    id: "TRL",
    displayName: "liră turcească (1922–2005)",
    one: "liră turcească (1922–2005)",
    few: "liră turcească (1922–2005)",
    other: "lire turcești (1922–2005)"
}, {
    id: "LTL",
    displayName: "litu lituanian",
    symbol: "LTL",
    one: "litu lituanian",
    few: "lite lituaniene",
    other: "lite lituaniene"
}, {
    id: "LSL",
    displayName: "loti lesothian"
}, {
    id: "AZN",
    displayName: "manat azer",
    symbol: "AZN",
    one: "manat azer",
    few: "manați azeri",
    other: "manați azeri"
}, {
    id: "AZM",
    displayName: "manat azer (1993–2006)"
}, {
    id: "TMT",
    displayName: "manat turkmen",
    symbol: "TMT",
    one: "manat turkmen",
    few: "manat turkmeni",
    other: "manat turkmeni"
}, {
    id: "TMM",
    displayName: "manat turkmen (1993–2009)",
    one: "manat turkmen (1993–2009)",
    few: "manat turkmeni (1993–2009)",
    other: "manat turkmeni (1993–2009)"
}, {
    id: "BAM",
    displayName: "marcă convertibilă din Bosnia și Herțegovina",
    symbol: "BAM",
    one: "marcă convertibilă din Bosnia și Herțegovina",
    few: "mărci convertibile din Bosnia și Herțegovina",
    other: "mărci convertibile din Bosnia și Herțegovina"
}, {
    id: "DDM",
    displayName: "marcă est-germană",
    one: "marcă est-germană",
    few: "mărci est-germane",
    other: "mărci est-germane"
}, {
    id: "FIM",
    displayName: "marcă finlandeză",
    one: "mărci finlandeze",
    few: "mărci finlandeze",
    other: "mărci finlandeze"
}, {
    id: "DEM",
    displayName: "marcă germană",
    one: "marcă germană",
    few: "mărci germane",
    other: "mărci germane"
}, {
    id: "MZM",
    displayName: "metical Mozambic vechi"
}, {
    id: "MZN",
    displayName: "metical mozambican",
    symbol: "MZN",
    one: "metical mozambican",
    few: "metical mozambicani",
    other: "metical mozambicani"
}, {
    id: "XXX",
    displayName: "monedă necunoscută",
    one: "(unitate monetară necunoscută)",
    few: "(monedă necunoscută)",
    other: "(monedă necunoscută)"
}, {
    id: "BOV",
    displayName: "mvdol bolivian"
}, {
    id: "NGN",
    displayName: "naira nigeriană",
    symbol: "NGN",
    one: "naira nigeriană",
    few: "naire nigeriene",
    other: "naire nigeriene"
}, {
    id: "ERN",
    displayName: "nakfa eritreeană",
    symbol: "ERN",
    one: "nakfa eritreeană",
    few: "nakfa eritreene",
    other: "nakfa eritreene"
}, {
    id: "BTN",
    displayName: "ngultrum din Bhutan",
    symbol: "BTN",
    one: "ngultrum din Bhutan",
    few: "ngultrum din Bhutan",
    other: "ngultrum din Bhutan"
}, {
    id: "MRO",
    displayName: "ouguiya mauritană",
    symbol: "MRO",
    one: "ouguiya mauritană",
    few: "ouguiya mauritane",
    other: "ouguiya mauritane"
}, {
    id: "XPD",
    displayName: "paladiu"
}, {
    id: "MOP",
    displayName: "pataca din Macao",
    symbol: "MOP",
    one: "pataca din Macao",
    few: "pataca din Macao",
    other: "pataca din Macao"
}, {
    id: "TOP",
    displayName: "pa’anga tongană",
    symbol: "TOP",
    one: "pa’anga tongană",
    few: "pa’anga tongane",
    other: "pa’anga tongane"
}, {
    id: "ESA",
    displayName: "peseta spaniolă (cont A)"
}, {
    id: "ESB",
    displayName: "peseta spaniolă (cont convertibil)"
}, {
    id: "ADP",
    displayName: "pesetă andorrană",
    one: "pesetă andorrană",
    few: "pesete andorrane",
    other: "pesete andorrane"
}, {
    id: "ESP",
    displayName: "pesetă spaniolă",
    symbol: "₧",
    one: "pesetă spaniolă",
    few: "pesete spaniole",
    other: "pesete spaniole"
}, {
    id: "GWP",
    displayName: "peso Guineea-Bissau",
    one: "peso Guineea-Bissau",
    few: "pesos Guineea-Bissau",
    other: "pesos Guineea-Bissau"
}, {
    id: "UYP",
    displayName: "peso Uruguay (1975–1993)",
    one: "peso Uruguay (1975–1993)",
    few: "pesos Uruguay (1975–1993)",
    other: "pesos Uruguay (1975–1993)"
}, {
    id: "ARS",
    displayName: "peso argentinian",
    symbol: "ARS",
    one: "peso argentinian",
    few: "pesos argentinieni",
    other: "pesos argentinieni"
}, {
    id: "ARP",
    displayName: "peso argentinian (1983–1985)",
    one: "peso argentinian (1983–1985)",
    few: "pesos argentinieni (1983–1985)",
    other: "pesos argentinieni (1983–1985)"
}, {
    id: "BOP",
    displayName: "peso bolivian",
    one: "peso bolivian",
    few: "pesos bolivieni",
    other: "pesos bolivieni"
}, {
    id: "CLP",
    displayName: "peso chilian",
    symbol: "CLP",
    one: "peso chilian",
    few: "pesos chilieni",
    other: "pesos chilieni"
}, {
    id: "COP",
    displayName: "peso columbian",
    symbol: "COP",
    one: "peso columbian",
    few: "pesos columbieni",
    other: "pesos columbieni"
}, {
    id: "CUP",
    displayName: "peso cubanez",
    symbol: "CUP",
    one: "peso cubanez",
    few: "pesos cubanezi",
    other: "pesos cubanezi"
}, {
    id: "CUC",
    displayName: "peso cubanez convertibil",
    symbol: "CUC",
    one: "peso cubanez convertibil",
    few: "pesos cubanezi convertibili",
    other: "pesos cubanezi convertibili"
}, {
    id: "DOP",
    displayName: "peso dominican",
    symbol: "DOP",
    one: "peso dominican",
    few: "pesos dominicani",
    other: "pesos dominicani"
}, {
    id: "PHP",
    displayName: "peso filipinez",
    symbol: "PHP",
    one: "peso filipinez",
    few: "pesos filipinezi",
    other: "pesos filipinezi"
}, {
    id: "MXN",
    displayName: "peso mexican",
    symbol: "MXN",
    one: "peso mexican",
    few: "pesos mexicani",
    other: "pesos mexicani"
}, {
    id: "MXP",
    displayName: "peso mexican de argint (1861–1992)",
    one: "peso mexican de argint (1861–1992)",
    few: "pesos mexicani de argint (1861–1992",
    other: "pesos mexicani de argint (1861–1992)"
}, {
    id: "UYU",
    displayName: "peso uruguayan",
    symbol: "UYU",
    one: "peso uruguayan",
    few: "pesos uruguayeni",
    other: "pesos uruguayeni"
}, {
    id: "XPT",
    displayName: "platină"
}, {
    id: "BWP",
    displayName: "pula Botswana",
    symbol: "BWP",
    one: "pulă Botswana",
    few: "pule Botswana",
    other: "pule Botswana"
}, {
    id: "GTQ",
    displayName: "quetzal guatemalez",
    symbol: "GTQ",
    one: "quetzal guatemalez",
    few: "quetzali guatemalezi",
    other: "quetzali guatemalezi"
}, {
    id: "ZAR",
    displayName: "rand sud-african",
    symbol: "ZAR",
    one: "rand sud-african",
    few: "ranzi sud-africani",
    other: "ranzi sud-africani"
}, {
    id: "ZAL",
    displayName: "rand sud-african (financiar)"
}, {
    id: "BRL",
    displayName: "real brazilian",
    symbol: "BRL",
    one: "real brazilian",
    few: "reali brazilieni",
    other: "reali brazilieni"
}, {
    id: "IRR",
    displayName: "rial iranian",
    symbol: "IRR",
    one: "rial iranian",
    few: "riali iranieni",
    other: "riali iranieni"
}, {
    id: "OMR",
    displayName: "rial omanez",
    symbol: "OMR",
    one: "rial omanez",
    few: "riali omanezi",
    other: "riali omanezi"
}, {
    id: "QAR",
    displayName: "rial qatarian",
    symbol: "QAR",
    one: "rial qatarian",
    few: "riali qatarieni",
    other: "riali qatarieni"
}, {
    id: "SAR",
    displayName: "rial saudit",
    symbol: "SAR",
    one: "rial saudit",
    few: "riali saudiți",
    other: "riali saudiți"
}, {
    id: "YER",
    displayName: "rial yemenit",
    symbol: "YER",
    one: "rial yemenit",
    few: "riali yemeniți",
    other: "riali yemeniți"
}, {
    id: "KHR",
    displayName: "riel cambodgian",
    symbol: "KHR",
    one: "riel cambodgian",
    few: "rieli cambodgieni",
    other: "rieli cambodgieni"
}, {
    id: "MYR",
    displayName: "ringgit malaiezian",
    symbol: "MYR",
    one: "ringgit malaiezian",
    few: "ringgit malaiezieni",
    other: "ringgit malaiezieni"
}, {
    id: "LVR",
    displayName: "rublă Letonia",
    one: "rublă Letonia",
    few: "ruble Letonia",
    other: "ruble Letonia"
}, {
    id: "TJR",
    displayName: "rublă Tadjikistan",
    one: "rublă Tadjikistan",
    few: "ruble Tadjikistan",
    other: "ruble Tadjikistan"
}, {
    id: "BYR",
    displayName: "rublă belarusă",
    symbol: "BYR",
    one: "rublă belarusă",
    few: "ruble belaruse",
    other: "ruble belaruse"
}, {
    id: "RUB",
    displayName: "rublă rusească",
    symbol: "RUB",
    one: "rublă rusească",
    few: "ruble rusești",
    other: "ruble rusești"
}, {
    id: "SUR",
    displayName: "rublă sovietică",
    one: "rublă sovietică",
    few: "ruble sovietice",
    other: "ruble sovietice"
}, {
    id: "MVR",
    displayName: "rufiyaa maldiviană",
    symbol: "MVR",
    one: "rufiyaa maldiviană",
    few: "rufiyaa maldiviene",
    other: "rufiyaa maldiviene"
}, {
    id: "SCR",
    displayName: "rupie din Seychelles",
    symbol: "SCR",
    one: "rupie din Seychelles",
    few: "rupii din Seychelles",
    other: "rupii din Seychelles"
}, {
    id: "LKR",
    displayName: "rupie din Sri Lanka",
    symbol: "LKR",
    one: "rupie din Sri Lanka",
    few: "rupii din Sri Lanka",
    other: "rupii Sri Lanka"
}, {
    id: "INR",
    displayName: "rupie indiană",
    symbol: "INR",
    one: "rupie indiană",
    few: "rupii indiene",
    other: "rupii indiene"
}, {
    id: "IDR",
    displayName: "rupie indoneziană",
    symbol: "IDR",
    one: "rupie indoneziană",
    few: "rupii indoneziene",
    other: "rupii indoneziene"
}, {
    id: "MUR",
    displayName: "rupie mauritiană",
    symbol: "MUR",
    one: "rupie mauritiană",
    few: "rupii mauritiene",
    other: "rupii mauritiene"
}, {
    id: "NPR",
    displayName: "rupie nepaleză",
    symbol: "NPR",
    one: "rupie nepaleză",
    few: "rupii nepaleze",
    other: "rupii nepaleze"
}, {
    id: "PKR",
    displayName: "rupie pakistaneză",
    symbol: "PKR",
    one: "rupie pakistaneză",
    few: "rupii pakistaneze",
    other: "rupii pakistaneze"
}, {
    id: "PEN",
    displayName: "sol nou peruvian",
    symbol: "PEN",
    one: "sol nou peruvian",
    few: "soli noi peruvieni",
    other: "soli noi peruvieni"
}, {
    id: "PES",
    displayName: "sol peruvian (1863–1965)",
    one: "sol peruvian (1863–1965)",
    few: "soli Peru (1863–1965)",
    other: "soli Peru (1863–1965)"
}, {
    id: "KGS",
    displayName: "som kârgâz",
    symbol: "KGS",
    one: "som kârgâz",
    few: "somi kârgâzi",
    other: "somi kârgâzi"
}, {
    id: "TJS",
    displayName: "somoni tadjic",
    symbol: "TJS",
    one: "somoni tajdic",
    few: "somoni tadjici",
    other: "somoni tadjici"
}, {
    id: "ECS",
    displayName: "sucre Ecuador"
}, {
    id: "UZS",
    displayName: "sum Uzbekistan",
    symbol: "UZS",
    one: "sum Uzbekistan",
    few: "sum Uzbekistan",
    other: "sum Uzbekistan"
}, {
    id: "BDT",
    displayName: "taka din Bangladesh",
    symbol: "BDT",
    one: "taka din Bangladesh",
    few: "taka din Bangladesh",
    other: "taka din Bangladesh"
}, {
    id: "WST",
    displayName: "tala samoană",
    symbol: "WST",
    one: "tala samoană",
    few: "tala samoane",
    other: "tala samoană"
}, {
    id: "KZT",
    displayName: "tenge kazahă",
    symbol: "KZT",
    one: "tenge kazahă",
    few: "tenge kazahe",
    other: "tenge kazahe"
}, {
    id: "SIT",
    displayName: "tolar sloven",
    one: "tolar sloven",
    few: "tolari sloveni",
    other: "tolari sloveni"
}, {
    id: "MNT",
    displayName: "tugrik mongol",
    symbol: "MNT",
    one: "tugrik mongol",
    few: "tugrici mongoli",
    other: "tugrici mongoli"
}, {
    id: "XBA",
    displayName: "unitate compusă europeană"
}, {
    id: "XBC",
    displayName: "unitate de cont europeană (XBC)"
}, {
    id: "XBD",
    displayName: "unitate de cont europeană (XBD)"
}, {
    id: "XEU",
    displayName: "unitate de monedă europeană"
}, {
    id: "XBB",
    displayName: "unitate monetară europeană"
}, {
    id: "VUV",
    displayName: "vatu din Vanuatu",
    symbol: "VUV",
    one: "vatu din Vanuatu",
    few: "vatu din Vanuatu",
    other: "vatu din Vanuatu"
}, {
    id: "KPW",
    displayName: "won nord-coreean",
    symbol: "KPW",
    one: "won nord-coreean",
    few: "woni nord-coreeni",
    other: "woni nord-coreeni"
}, {
    id: "KRW",
    displayName: "won sud-coreean",
    symbol: "KRW",
    one: "won sud-coreean",
    few: "woni sud-coreeni",
    other: "woni sud-coreeni"
}, {
    id: "JPY",
    displayName: "yen japonez",
    symbol: "JPY",
    one: "yen japonez",
    few: "yeni japonezi",
    other: "yeni japonezi"
}, {
    id: "CNY",
    displayName: "yuan chinezesc",
    symbol: "CNY",
    one: "yuan chinezesc",
    few: "yuani chinezești",
    other: "yuani chinezești"
}, {
    id: "ZRN",
    displayName: "zair nou",
    one: "zair nou",
    few: "zairi noi",
    other: "zairi noi"
}, {
    id: "PLN",
    displayName: "zlot polonez",
    symbol: "PLN",
    one: "zlot polonez",
    few: "zloți polonezi",
    other: "zloți polonezi"
}, {
    id: "PLZ",
    displayName: "zlot polonez (1950–1995)",
    one: "zlot polonez (1950–1995)",
    few: "zloți polonezi (1950–1995)",
    other: "zloți polonezi (1950–1995)"
}, {
    id: "ILS",
    displayName: "șechel israelian nou",
    symbol: "ILS",
    one: "șechel israelian nou",
    few: "șecheli israelieni noi",
    other: "șecheli israelieni noi"
}, {
    id: "ATS",
    displayName: "șiling austriac",
    one: "șiling austriac",
    few: "șilingi austrieci",
    other: "șilingi austrieci"
}, {
    id: "KES",
    displayName: "șiling kenyan",
    symbol: "KES",
    one: "șiling kenyan",
    few: "șilingi kenyeni",
    other: "șilingi kenyeni"
}, {
    id: "SOS",
    displayName: "șiling somalez",
    symbol: "SOS",
    one: "șiling somalez",
    few: "șilingi somalezi",
    other: "șilingi somalezi"
}, {
    id: "TZS",
    displayName: "șiling tanzanian",
    symbol: "TZS",
    one: "șiling tanzanian",
    few: "șilingi tanzanieni",
    other: "șilingi tanzanieni"
}, {
    id: "UGX",
    displayName: "șiling ugandez",
    symbol: "UGX",
    one: "șiling ugandez",
    few: "șilingi ugandezi",
    other: "șilingi ugandezi"
}, {
    id: "UGS",
    displayName: "șiling ugandez (1966–1987)",
    one: "șiling ugandez (1966–1987)",
    few: "șilingi ugandezi (1966–1987)",
    other: "șilingi ugandezi (1966–1987)"
} ];

module.exports = inter;