function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _hhr51 = {
    other: "{0} L/100km"
}, _hhr52 = {
    other: "000 trilion"
}, _hhr53 = [ "S1", "S2", "S3", "S4" ], _hhr54 = {
    other: "dlm {0} bln"
}, _hhr55 = {
    other: "dlm {0} mgu"
}, _hhr56 = {
    other: "dlm {0} jam"
}, _hhr57 = {
    other: "dlm {0} min"
}, _hhr58 = {
    all: {
        leap: "{0}bis"
    }
}, _hhr59 = {
    other: "{0} sudu teh"
}, _hhr510 = {
    other: "{0} thn lalu"
}, _hhr511 = {
    other: "dlm {0} suku"
}, _hhr512 = {
    other: "{0} bln lalu"
}, _hhr513 = {
    other: "{0} mng lalu"
}, _hhr514 = {
    other: "{0} mgu lalu"
}, _hhr515 = {
    other: "dlm {0} hari"
}, _hhr516 = {
    displayName: "PG/PTG"
}, _hhr517 = {
    other: "dlm {0} saat"
}, _hhr518 = {
    other: "{0} saat arka"
}, _hhr519 = {
    other: "dalam {0} thn"
}, _hhr520 = {
    other: "{0} suku lalu"
}, _hhr521 = {
    other: "{0} hari lalu"
}, _hhr522 = {
    other: "dalam {0} jam"
}, _hhr523 = {
    other: "{0} saat lalu"
}, _hhr524 = {
    other: "{0} sudu besar"
}, _hhr525 = {
    other: "dalam {0} saat"
}, _hhr526 = {
    other: "{0} tahun lalu"
}, _hhr527 = {
    other: "dalam {0} suku"
}, _hhr528 = {
    other: "{0} bulan lalu"
}, _hhr529 = {
    other: "dalam {0} hari"
}, _hhr530 = {
    a: "h a – h a",
    h: "h–h a"
}, _hhr531 = {
    other: "dalam {0} bulan"
}, _hhr532 = {
    other: "{0} minggu lalu"
}, _hhr533 = {
    other: "{0} jam yg lalu"
}, _hhr534 = {
    other: "dalam {0} minit"
}, _hhr535 = {
    other: "{0} min yg lalu"
}, _hhr536 = {
    displayName: "Zon Waktu"
}, _hhr537 = {
    other: "dalam {0} minggu"
}, _hhr538 = {
    other: "{0} hari yg lalu"
}, _hhr539 = {
    other: "{0} saat yg lalu"
}, _hhr540 = [ "Before R.O.C.", "R.O.C." ], _hhr541 = {
    other: "{0} jam yang lalu"
}, _hhr542 = {
    other: "dalam {0} bln lalu"
}, _hhr543 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _hhr544 = {
    d: "d/M – d/M",
    M: "d/M – d/M"
}, _hhr545 = [ "A", "I", "S", "R", "K", "J", "S" ], _hhr546 = {
    other: "{0} minit yang lalu"
}, _hhr547 = {
    d: "d–d MMM",
    M: "d MMM – d MMM"
}, _hhr548 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _hhr549 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _hhr550 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _hhr551 = {
    M: "M/y – M/y G",
    y: "M/y – M/y G"
}, _hhr552 = {
    displayName: "Hari dalam Minggu"
}, _hhr553 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _hhr554 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _hhr555 = [ "Ah", "Is", "Se", "Ra", "Kh", "Ju", "Sa" ], _hhr556 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _hhr557 = {
    M: "MMM–MMM y G",
    y: "MMM y – MMM y G"
}, _hhr558 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _hhr559 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _hhr560 = {
    d: "E, d/M – E, d/M",
    M: "E, d/M – E, d/M"
}, _hhr561 = {
    M: "MMMM–MMMM y G",
    y: "MMMM y – MMMM y G"
}, _hhr562 = [ "Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab" ], _hhr563 = {
    "0": "bln ini",
    "1": "bln depan",
    "-1": "bln lalu"
}, _hhr564 = {
    "0": "Aha ini",
    "1": "Aha depan",
    "-1": "Aha lalu"
}, _hhr565 = {
    "0": "Ahd ini",
    "1": "Ahd depan",
    "-1": "Ahd lalu"
}, _hhr566 = {
    "0": "Isn ini",
    "1": "Isn depan",
    "-1": "Isn lalu"
}, _hhr567 = {
    "0": "Sel ini",
    "1": "Sel depan",
    "-1": "Sel lalu"
}, _hhr568 = {
    "0": "Rab ini",
    "1": "Rab depan",
    "-1": "Rab lalu"
}, _hhr569 = {
    "0": "Kha ini",
    "1": "Kha depan",
    "-1": "Kha lalu"
}, _hhr570 = {
    "0": "Jum ini",
    "1": "Jum depan",
    "-1": "Jum lalu"
}, _hhr571 = {
    "0": "Sab ini",
    "1": "Sab depan",
    "-1": "Sab lalu"
}, _hhr572 = {
    "0": "thn ini",
    "1": "thn depan",
    "-1": "thn lepas"
}, _hhr573 = {
    "0": "mng ini",
    "1": "mng depan",
    "-1": "mng lepas"
}, _hhr574 = {
    "0": "Ahad ini",
    "1": "Ahad depan",
    "-1": "Ahad lalu"
}, _hhr575 = {
    "0": "Rabu ini",
    "1": "Rabu depan",
    "-1": "Rabu lalu"
}, _hhr576 = {
    d: "E, d MMM – E, d MMM",
    M: "E, d MMM – E, d MMM"
}, _hhr577 = [ "J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D" ], _hhr578 = {
    "0": "bulan ini",
    "1": "bulan depan",
    "-1": "bulan lalu"
}, _hhr579 = {
    "0": "Isnin ini",
    "1": "Isnin depan",
    "-1": "Isnin lalu"
}, _hhr580 = {
    "0": "Sabtu ini",
    "1": "Sabtu depan",
    "-1": "Sabtu lalu"
}, _hhr581 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _hhr582 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _hhr583 = {
    id: "001",
    displayName: "Dunia",
    hasTimeZones: false
}, _hhr584 = {
    "0": "tahun ini",
    "1": "tahun depan",
    "-1": "tahun lepas"
}, _hhr585 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _hhr586 = {
    id: "AQ",
    displayName: "Antartika",
    hasTimeZones: true
}, _hhr587 = [ "Suku pertama", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4" ], _hhr588 = {
    "0": "suku ini",
    "1": "suku seterusnya",
    "-1": "suku lepas"
}, _hhr589 = {
    "0": "Selasa ini",
    "1": "Selasa depan",
    "-1": "Selasa lalu"
}, _hhr590 = {
    "0": "Khamis ini",
    "1": "Khamis depan",
    "-1": "Khamis lalu"
}, _hhr591 = {
    "0": "Jumaat ini",
    "1": "Jumaat depan",
    "-1": "Jumaat lalu"
}, _hhr592 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _hhr593 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _hhr594 = {
    "0": "minggu ini",
    "1": "minggu depan",
    "-1": "minggu lepas"
}, _hhr595 = {
    relative: _hhr564
}, _hhr596 = {
    relative: _hhr565
}, _hhr597 = {
    relative: _hhr566
}, _hhr598 = {
    relative: _hhr567
}, _hhr599 = {
    relative: _hhr568
}, _hhr5100 = {
    relative: _hhr569
}, _hhr5101 = {
    relative: _hhr570
}, _hhr5102 = {
    relative: _hhr571
}, _hhr5103 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _hhr5104 = {
    id: "BV",
    displayName: "Pulau Bouvet",
    hasTimeZones: false
}, _hhr5105 = {
    id: "CX",
    displayName: "Pulau Krismas",
    hasTimeZones: true
}, _hhr5106 = {
    relative: _hhr574
}, _hhr5107 = {
    relative: _hhr575
}, _hhr5108 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _hhr5109 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _hhr5110 = [ "Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu" ], _hhr5111 = {
    future: _hhr54,
    past: _hhr512
}, _hhr5112 = {
    future: _hhr55,
    past: _hhr513
}, _hhr5113 = {
    future: _hhr55,
    past: _hhr514
}, _hhr5114 = {
    id: "AC",
    displayName: "Pulau Ascension",
    hasTimeZones: false
}, _hhr5115 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _hhr5116 = {
    id: "IC",
    displayName: "Kepulauan Canary",
    hasTimeZones: false
}, _hhr5117 = {
    id: "CP",
    displayName: "Pulau Clipperton",
    hasTimeZones: false
}, _hhr5118 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _hhr5119 = {
    future: _hhr519,
    past: _hhr510
}, _hhr5120 = {
    future: _hhr511,
    past: _hhr520
}, _hhr5121 = {
    relative: _hhr579
}, _hhr5122 = {
    relative: _hhr580
}, _hhr5123 = {
    id: "EA",
    displayName: "Ceuta dan Melilla",
    hasTimeZones: false
}, _hhr5124 = {
    d: "d/M/y – d/M/y G",
    M: "d/M/y – d/M/y G",
    y: "d/M/y – d/M/y G"
}, _hhr5125 = {
    "0": "hari ini",
    "1": "esok",
    "2": "lusa",
    "-2": "kelmarin",
    "-1": "semlm"
}, _hhr5126 = {
    future: _hhr56,
    past: _hhr533
}, _hhr5127 = {
    future: _hhr57,
    past: _hhr535
}, _hhr5128 = [ "Jn", "Fb", "Mc", "Ap", "Me", "Ju", "Jl", "Og", "Sp", "Ok", "Nv", "Ds" ], _hhr5129 = [ "Jn", "Fe", "Mc", "Ap", "Me", "Ju", "Jl", "Og", "Sp", "Ok", "Nv", "Ds" ], _hhr5130 = {
    id: "TD",
    displayName: "Chad",
    regionId: "017",
    hasTimeZones: true
}, _hhr5131 = {
    id: "CU",
    displayName: "Cuba",
    regionId: "029",
    hasTimeZones: true
}, _hhr5132 = {
    id: "FJ",
    displayName: "Fiji",
    regionId: "054",
    hasTimeZones: true
}, _hhr5133 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _hhr5134 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _hhr5135 = {
    id: "IQ",
    displayName: "Iraq",
    regionId: "145",
    hasTimeZones: true
}, _hhr5136 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _hhr5137 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _hhr5138 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _hhr5139 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _hhr5140 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _hhr5141 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _hhr5142 = {
    future: _hhr527,
    past: _hhr520
}, _hhr5143 = {
    future: _hhr529,
    past: _hhr521
}, _hhr5144 = {
    future: _hhr525,
    past: _hhr523
}, _hhr5145 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _hhr5146 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _hhr5147 = {
    id: "CL",
    displayName: "Chile",
    regionId: "005",
    hasTimeZones: true
}, _hhr5148 = {
    id: "CN",
    displayName: "China",
    regionId: "030",
    hasTimeZones: true
}, _hhr5149 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _hhr5150 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _hhr5151 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _hhr5152 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _hhr5153 = {
    id: "IT",
    displayName: "Itali",
    regionId: "039",
    hasTimeZones: true
}, _hhr5154 = {
    id: "JP",
    displayName: "Jepun",
    regionId: "030",
    hasTimeZones: true
}, _hhr5155 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _hhr5156 = {
    id: "LY",
    displayName: "Libya",
    regionId: "015",
    hasTimeZones: true
}, _hhr5157 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _hhr5158 = {
    id: "EG",
    displayName: "Mesir",
    regionId: "015",
    hasTimeZones: true
}, _hhr5159 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _hhr5160 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _hhr5161 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _hhr5162 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _hhr5163 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _hhr5164 = {
    id: "RU",
    displayName: "Rusia",
    regionId: "151",
    hasTimeZones: true
}, _hhr5165 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _hhr5166 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _hhr5167 = {
    id: "SY",
    displayName: "Syria",
    regionId: "145",
    hasTimeZones: true
}, _hhr5168 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _hhr5169 = {
    id: "TR",
    displayName: "Turki",
    regionId: "145",
    hasTimeZones: true
}, _hhr5170 = {
    id: "YE",
    displayName: "Yaman",
    regionId: "145",
    hasTimeZones: true
}, _hhr5171 = {
    future: _hhr525,
    past: _hhr526
}, _hhr5172 = {
    "0": "hari ini",
    "1": "esok",
    "2": "lusa",
    "-2": "kelmarin",
    "-1": "semalam"
}, _hhr5173 = {
    future: _hhr515,
    past: _hhr538
}, _hhr5174 = {
    future: _hhr517,
    past: _hhr539
}, _hhr5175 = {
    relative: _hhr589
}, _hhr5176 = {
    relative: _hhr590
}, _hhr5177 = {
    relative: _hhr591
}, _hhr5178 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _hhr5179 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _hhr5180 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _hhr5181 = {
    id: "BR",
    displayName: "Brazil",
    regionId: "005",
    hasTimeZones: true
}, _hhr5182 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _hhr5183 = {
    id: "CY",
    displayName: "Cyprus",
    regionId: "145",
    hasTimeZones: true
}, _hhr5184 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _hhr5185 = {
    id: "GR",
    displayName: "Greece",
    regionId: "039",
    hasTimeZones: true
}, _hhr5186 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _hhr5187 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _hhr5188 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _hhr5189 = {
    id: "DE",
    displayName: "Jerman",
    regionId: "155",
    hasTimeZones: true
}, _hhr5190 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _hhr5191 = {
    id: "JO",
    displayName: "Jordan",
    regionId: "145",
    hasTimeZones: true
}, _hhr5192 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _hhr5193 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _hhr5194 = {
    id: "LV",
    displayName: "Latvia",
    regionId: "154",
    hasTimeZones: true
}, _hhr5195 = {
    id: "LB",
    displayName: "Lubnan",
    regionId: "145",
    hasTimeZones: true
}, _hhr5196 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _hhr5197 = {
    id: "MX",
    displayName: "Mexico",
    regionId: "013",
    hasTimeZones: true
}, _hhr5198 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _hhr5199 = {
    id: "NO",
    displayName: "Norway",
    regionId: "154",
    hasTimeZones: true
}, _hhr5200 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _hhr5201 = {
    id: "PL",
    displayName: "Poland",
    regionId: "151",
    hasTimeZones: true
}, _hhr5202 = {
    id: "RW",
    displayName: "Rwanda",
    regionId: "014",
    hasTimeZones: true
}, _hhr5203 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _hhr5204 = {
    id: "SE",
    displayName: "Sweden",
    regionId: "154",
    hasTimeZones: true
}, _hhr5205 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _hhr5206 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _hhr5207 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _hhr5208 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _hhr5209 = {
    d: "d–d MMM y G",
    M: "d MMM – d MMM, y G",
    y: "d MMM y – d MMM y G"
}, _hhr5210 = {
    future: _hhr531,
    past: _hhr528
}, _hhr5211 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _hhr5212 = {
    id: "DZ",
    displayName: "Algeria",
    regionId: "015",
    hasTimeZones: true
}, _hhr5213 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _hhr5214 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _hhr5215 = {
    id: "AT",
    displayName: "Austria",
    regionId: "155",
    hasTimeZones: true
}, _hhr5216 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _hhr5217 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _hhr5218 = {
    id: "NL",
    displayName: "Belanda",
    regionId: "155",
    hasTimeZones: true
}, _hhr5219 = {
    id: "BY",
    displayName: "Belarus",
    regionId: "151",
    hasTimeZones: true
}, _hhr5220 = {
    id: "BE",
    displayName: "Belgium",
    regionId: "155",
    hasTimeZones: true
}, _hhr5221 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _hhr5222 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _hhr5223 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _hhr5224 = {
    id: "KM",
    displayName: "Comoros",
    regionId: "014",
    hasTimeZones: true
}, _hhr5225 = {
    id: "HR",
    displayName: "Croatia",
    regionId: "039",
    hasTimeZones: true
}, _hhr5226 = {
    id: "CW",
    displayName: "Curacao",
    regionId: "029",
    hasTimeZones: true
}, _hhr5227 = {
    id: "DK",
    displayName: "Denmark",
    regionId: "154",
    hasTimeZones: true
}, _hhr5228 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _hhr5229 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _hhr5230 = {
    id: "EE",
    displayName: "Estonia",
    regionId: "154",
    hasTimeZones: true
}, _hhr5231 = {
    id: "FI",
    displayName: "Finland",
    regionId: "154",
    hasTimeZones: true
}, _hhr5232 = {
    id: "GE",
    displayName: "Georgia",
    regionId: "145",
    hasTimeZones: true
}, _hhr5233 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _hhr5234 = {
    id: "HU",
    displayName: "Hungary",
    regionId: "151",
    hasTimeZones: true
}, _hhr5235 = {
    id: "IS",
    displayName: "Iceland",
    regionId: "154",
    hasTimeZones: true
}, _hhr5236 = {
    id: "IE",
    displayName: "Ireland",
    regionId: "154",
    hasTimeZones: true
}, _hhr5237 = {
    id: "JM",
    displayName: "Jamaica",
    regionId: "029",
    hasTimeZones: true
}, _hhr5238 = {
    id: "KH",
    displayName: "Kemboja",
    regionId: "035",
    hasTimeZones: true
}, _hhr5239 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _hhr5240 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _hhr5241 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _hhr5242 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _hhr5243 = {
    id: "MD",
    displayName: "Moldova",
    regionId: "151",
    hasTimeZones: true
}, _hhr5244 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _hhr5245 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _hhr5246 = {
    id: "RE",
    displayName: "Reunion",
    regionId: "014",
    hasTimeZones: true
}, _hhr5247 = {
    id: "RO",
    displayName: "Romania",
    regionId: "151",
    hasTimeZones: true
}, _hhr5248 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _hhr5249 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _hhr5250 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _hhr5251 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _hhr5252 = {
    id: "TN",
    displayName: "Tunisia",
    regionId: "015",
    hasTimeZones: true
}, _hhr5253 = {
    id: "UA",
    displayName: "Ukraine",
    regionId: "151",
    hasTimeZones: true
}, _hhr5254 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _hhr5255 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _hhr5256 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _hhr5257 = {
    future: _hhr522,
    past: _hhr541
}, _hhr5258 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _hhr5259 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _hhr5260 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _hhr5261 = {
    id: "BG",
    displayName: "Bulgaria",
    regionId: "151",
    hasTimeZones: true
}, _hhr5262 = {
    id: "CM",
    displayName: "Cameroon",
    regionId: "017",
    hasTimeZones: true
}, _hhr5263 = {
    id: "CO",
    displayName: "Colombia",
    regionId: "005",
    hasTimeZones: true
}, _hhr5264 = {
    id: "DJ",
    displayName: "Djibouti",
    regionId: "014",
    hasTimeZones: true
}, _hhr5265 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _hhr5266 = {
    id: "ET",
    displayName: "Ethiopia",
    regionId: "014",
    hasTimeZones: true
}, _hhr5267 = {
    id: "PH",
    displayName: "Filipina",
    regionId: "035",
    hasTimeZones: true
}, _hhr5268 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _hhr5269 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _hhr5270 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _hhr5271 = {
    id: "MA",
    displayName: "Maghribi",
    regionId: "015",
    hasTimeZones: true
}, _hhr5272 = {
    id: "MY",
    displayName: "Malaysia",
    regionId: "035",
    hasTimeZones: true
}, _hhr5273 = {
    id: "MV",
    displayName: "Maldives",
    regionId: "034",
    hasTimeZones: true
}, _hhr5274 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _hhr5275 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _hhr5276 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _hhr5277 = {
    id: "FR",
    displayName: "Perancis",
    regionId: "155",
    hasTimeZones: true
}, _hhr5278 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _hhr5279 = {
    id: "ES",
    displayName: "Sepanyol",
    regionId: "039",
    hasTimeZones: true
}, _hhr5280 = {
    id: "SK",
    displayName: "Slovakia",
    regionId: "151",
    hasTimeZones: true
}, _hhr5281 = {
    id: "SI",
    displayName: "Slovenia",
    regionId: "039",
    hasTimeZones: true
}, _hhr5282 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _hhr5283 = {
    id: "TH",
    displayName: "Thailand",
    regionId: "035",
    hasTimeZones: true
}, _hhr5284 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _hhr5285 = {
    future: _hhr537,
    past: _hhr532
}, _hhr5286 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _hhr5287 = {
    id: "AU",
    displayName: "Australia",
    regionId: "053",
    hasTimeZones: true
}, _hhr5288 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _hhr5289 = {
    id: "GL",
    displayName: "Greenland",
    regionId: "021",
    hasTimeZones: true
}, _hhr5290 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _hhr5291 = {
    id: "ID",
    displayName: "Indonesia",
    regionId: "035",
    hasTimeZones: true
}, _hhr5292 = {
    id: "UM",
    displayName: "Kepulauan Terpencil A.S.",
    hasTimeZones: true
}, _hhr5293 = {
    id: "LT",
    displayName: "Lithuania",
    regionId: "154",
    hasTimeZones: true
}, _hhr5294 = {
    id: "MK",
    displayName: "Macedonia",
    regionId: "039",
    hasTimeZones: true
}, _hhr5295 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _hhr5296 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _hhr5297 = {
    id: "SG",
    displayName: "Singapura",
    regionId: "035",
    hasTimeZones: true
}, _hhr5298 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _hhr5299 = {
    id: "SZ",
    displayName: "Swaziland",
    regionId: "018",
    hasTimeZones: true
}, _hhr5300 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _hhr5301 = {
    id: "TF",
    displayName: "Wilayah Selatan Perancis",
    hasTimeZones: true
}, _hhr5302 = {
    future: _hhr542,
    past: _hhr528
}, _hhr5303 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _hhr5304 = {
    id: "SA",
    displayName: "Arab Saudi",
    regionId: "145",
    hasTimeZones: true
}, _hhr5305 = {
    id: "AZ",
    displayName: "Azerbaijan",
    regionId: "145",
    hasTimeZones: true
}, _hhr5306 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _hhr5307 = {
    id: "CV",
    displayName: "Cape Verde",
    regionId: "011",
    hasTimeZones: true
}, _hhr5308 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _hhr5309 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _hhr5310 = {
    id: "KZ",
    displayName: "Kazakhstan",
    regionId: "143",
    hasTimeZones: true
}, _hhr5311 = {
    id: "CC",
    displayName: "Kepulauan Cocos (Keeling)",
    hasTimeZones: true
}, _hhr5312 = {
    id: "KG",
    displayName: "Kyrgyzstan",
    regionId: "143",
    hasTimeZones: true
}, _hhr5313 = {
    id: "LU",
    displayName: "Luxembourg",
    regionId: "155",
    hasTimeZones: true
}, _hhr5314 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _hhr5315 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _hhr5316 = {
    id: "MR",
    displayName: "Mauritania",
    regionId: "011",
    hasTimeZones: true
}, _hhr5317 = {
    id: "FM",
    displayName: "Micronesia",
    regionId: "057",
    hasTimeZones: true
}, _hhr5318 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _hhr5319 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _hhr5320 = {
    id: "MZ",
    displayName: "Mozambique",
    regionId: "014",
    hasTimeZones: true
}, _hhr5321 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _hhr5322 = {
    id: "SC",
    displayName: "Seychelles",
    regionId: "014",
    hasTimeZones: true
}, _hhr5323 = {
    id: "TJ",
    displayName: "Tajikistan",
    regionId: "143",
    hasTimeZones: true
}, _hhr5324 = {
    id: "UZ",
    displayName: "Uzbekistan",
    regionId: "143",
    hasTimeZones: true
}, _hhr5325 = {
    id: "AF",
    displayName: "Afghanistan",
    regionId: "034",
    hasTimeZones: true
}, _hhr5326 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _hhr5327 = {
    id: "IM",
    displayName: "Isle of Man",
    regionId: "154",
    hasTimeZones: true
}, _hhr5328 = {
    id: "KP",
    displayName: "Korea Utara",
    regionId: "030",
    hasTimeZones: true
}, _hhr5329 = {
    id: "NZ",
    displayName: "New Zealand",
    regionId: "053",
    hasTimeZones: true
}, _hhr5330 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _hhr5331 = {
    id: "LC",
    displayName: "Saint Lucia",
    regionId: "029",
    hasTimeZones: true
}, _hhr5332 = {
    id: "CH",
    displayName: "Switzerland",
    regionId: "155",
    hasTimeZones: true
}, _hhr5333 = {
    id: "TL",
    displayName: "Timor-Leste",
    regionId: "035",
    hasTimeZones: true
}, _hhr5334 = {
    future: _hhr534,
    past: _hhr546
}, _hhr5335 = {
    id: "142",
    displayName: "Asia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _hhr5336 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _hhr5337 = {
    id: "HM",
    displayName: "Kepulauan Heard & McDonald",
    hasTimeZones: false
}, _hhr5338 = {
    id: "VA",
    displayName: "Kota Vatican",
    regionId: "039",
    hasTimeZones: true
}, _hhr5339 = {
    id: "EH",
    displayName: "Sahara Barat",
    regionId: "015",
    hasTimeZones: true
}, _hhr5340 = {
    id: "SH",
    displayName: "Saint Helena",
    regionId: "011",
    hasTimeZones: true
}, _hhr5341 = {
    id: "MF",
    displayName: "Saint Martin",
    regionId: "029",
    hasTimeZones: true
}, _hhr5342 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _hhr5343 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _hhr5344 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _hhr5345 = {
    id: "CI",
    displayName: "Cote d’Ivoire",
    regionId: "011",
    hasTimeZones: true
}, _hhr5346 = {
    id: "GW",
    displayName: "Guinea Bissau",
    regionId: "011",
    hasTimeZones: true
}, _hhr5347 = {
    id: "KR",
    displayName: "Korea Selatan",
    regionId: "030",
    hasTimeZones: true
}, _hhr5348 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _hhr5349 = {
    id: "NC",
    displayName: "New Caledonia",
    regionId: "054",
    hasTimeZones: true
}, _hhr5350 = {
    id: "NF",
    displayName: "Pulau Norfolk",
    regionId: "053",
    hasTimeZones: true
}, _hhr5351 = {
    id: "AS",
    displayName: "Samoa Amerika",
    regionId: "061",
    hasTimeZones: true
}, _hhr5352 = {
    id: "SS",
    displayName: "Sudan Selatan",
    regionId: "014",
    hasTimeZones: true
}, _hhr5353 = {
    id: "IO",
    displayName: "Wilayah Lautan Hindi British",
    hasTimeZones: true
}, _hhr5354 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _hhr5355 = {
    id: "002",
    displayName: "Afrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _hhr5356 = {
    id: "ZA",
    displayName: "Afrika Selatan",
    regionId: "018",
    hasTimeZones: true
}, _hhr5357 = {
    id: "150",
    displayName: "Eropah",
    hasTimeZones: false,
    parentRegionId: "001"
}, _hhr5358 = {
    id: "CK",
    displayName: "Kepulauan Cook",
    regionId: "061",
    hasTimeZones: true
}, _hhr5359 = {
    id: "CZ",
    displayName: "Republik Czech",
    regionId: "151",
    hasTimeZones: true
}, _hhr5360 = {
    id: "GB",
    displayName: "United Kingdom",
    regionId: "154",
    hasTimeZones: true
}, _hhr5361 = {
    id: "019",
    displayName: "Amerika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _hhr5362 = {
    id: "GF",
    displayName: "Guiana Perancis",
    regionId: "005",
    hasTimeZones: true
}, _hhr5363 = {
    id: "AX",
    displayName: "Kepulauan Aland",
    regionId: "154",
    hasTimeZones: true
}, _hhr5364 = {
    id: "FO",
    displayName: "Kepulauan Faroe",
    regionId: "154",
    hasTimeZones: true
}, _hhr5365 = {
    id: "MO",
    displayName: "Macau SAR China",
    regionId: "030",
    hasTimeZones: true
}, _hhr5366 = {
    id: "MM",
    displayName: "Myanmar (Burma)",
    regionId: "035",
    hasTimeZones: true
}, _hhr5367 = {
    id: "009",
    displayName: "Oceania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _hhr5368 = [ "Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis" ], _hhr5369 = {
    id: "US",
    displayName: "Amerika Syarikat",
    regionId: "021",
    hasTimeZones: true
}, _hhr5370 = {
    id: "CD",
    displayName: "Congo - Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _hhr5371 = {
    id: "KY",
    displayName: "Kepulauan Cayman",
    regionId: "029",
    hasTimeZones: true
}, _hhr5372 = {
    id: "PG",
    displayName: "Papua New Guinea",
    regionId: "054",
    hasTimeZones: true
}, _hhr5373 = {
    id: "BL",
    displayName: "Saint Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _hhr5374 = {
    id: "PS",
    displayName: "Wilayah Palestin",
    regionId: "145",
    hasTimeZones: true
}, _hhr5375 = {
    id: "BQ",
    displayName: "Belanda Caribbean",
    regionId: "029",
    hasTimeZones: true
}, _hhr5376 = {
    id: "029",
    displayName: "Caribbean",
    hasTimeZones: false,
    parentRegionId: "019"
}, _hhr5377 = {
    id: "SB",
    displayName: "Kepulauan Solomon",
    regionId: "054",
    hasTimeZones: true
}, _hhr5378 = {
    id: "054",
    displayName: "Melanesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _hhr5379 = {
    id: "061",
    displayName: "Polinesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _hhr5380 = {
    id: "DO",
    displayName: "Republik Dominica",
    regionId: "029",
    hasTimeZones: true
}, _hhr5381 = {
    id: "WF",
    displayName: "Wallis dan Futuna",
    regionId: "061",
    hasTimeZones: true
}, _hhr5382 = {
    id: "145",
    displayName: "Asia Barat",
    hasTimeZones: false,
    parentRegionId: "142"
}, _hhr5383 = {
    id: "030",
    displayName: "Asia Timur",
    hasTimeZones: false,
    parentRegionId: "142"
}, _hhr5384 = {
    id: "FK",
    displayName: "Kepulauan Falkland",
    regionId: "005",
    hasTimeZones: true
}, _hhr5385 = {
    id: "MH",
    displayName: "Kepulauan Marshall",
    regionId: "057",
    hasTimeZones: true
}, _hhr5386 = {
    id: "PN",
    displayName: "Kepulauan Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _hhr5387 = {
    id: "PF",
    displayName: "Polinesia Perancis",
    regionId: "061",
    hasTimeZones: true
}, _hhr5388 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _hhr5389 = {
    id: "AG",
    displayName: "Antigua dan Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _hhr5390 = {
    id: "143",
    displayName: "Asia Tengah",
    hasTimeZones: false,
    parentRegionId: "142"
}, _hhr5391 = {
    id: "053",
    displayName: "Australasia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _hhr5392 = {
    id: "CG",
    displayName: "Congo - Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _hhr5393 = {
    id: "GQ",
    displayName: "Guinea Khatulistiwa",
    regionId: "017",
    hasTimeZones: true
}, _hhr5394 = {
    id: "HK",
    displayName: "Hong Kong SAR China",
    regionId: "030",
    hasTimeZones: true
}, _hhr5395 = {
    id: "TT",
    displayName: "Trinidad dan Tobago",
    regionId: "029",
    hasTimeZones: true
}, _hhr5396 = {
    id: "011",
    displayName: "Afrika Barat",
    hasTimeZones: false,
    parentRegionId: "002"
}, _hhr5397 = {
    id: "014",
    displayName: "Afrika Timur",
    hasTimeZones: false,
    parentRegionId: "002"
}, _hhr5398 = {
    id: "015",
    displayName: "Afrika Utara",
    hasTimeZones: false,
    parentRegionId: "002"
}, _hhr5399 = {
    id: "034",
    displayName: "Asia Selatan",
    hasTimeZones: false,
    parentRegionId: "142"
}, _hhr5400 = {
    id: "AE",
    displayName: "Emiriah Arab Bersatu",
    regionId: "145",
    hasTimeZones: true
}, _hhr5401 = {
    id: "155",
    displayName: "Eropah Barat",
    hasTimeZones: false,
    parentRegionId: "150"
}, _hhr5402 = {
    id: "151",
    displayName: "Eropah Timur",
    hasTimeZones: false,
    parentRegionId: "150"
}, _hhr5403 = {
    id: "154",
    displayName: "Eropah Utara",
    hasTimeZones: false,
    parentRegionId: "150"
}, _hhr5404 = {
    id: "017",
    displayName: "Afrika Tengah",
    hasTimeZones: false,
    parentRegionId: "002"
}, _hhr5405 = {
    id: "035",
    displayName: "Asia Tenggara",
    hasTimeZones: false,
    parentRegionId: "142"
}, _hhr5406 = {
    id: "VI",
    displayName: "Kepulauan Virgin A.S.",
    regionId: "029",
    hasTimeZones: true
}, _hhr5407 = {
    id: "KN",
    displayName: "Saint Kitts dan Nevis",
    regionId: "029",
    hasTimeZones: true
}, _hhr5408 = {
    id: "ST",
    displayName: "Sao Tome dan Principe",
    regionId: "017",
    hasTimeZones: true
}, _hhr5409 = {
    id: "021",
    displayName: "Utara Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _hhr5410 = {
    d: "E, d/M/y – E, d/M/y G",
    M: "E, d/M/y – E, d/M/y G",
    y: "E, d/M/y – E, d/M/y G"
}, _hhr5411 = {
    id: "013",
    displayName: "Amerika Tengah",
    hasTimeZones: false,
    parentRegionId: "019"
}, _hhr5412 = {
    id: "BA",
    displayName: "Bosnia dan Herzegovina",
    regionId: "039",
    hasTimeZones: true
}, _hhr5413 = {
    id: "039",
    displayName: "Eropah Selatan",
    hasTimeZones: false,
    parentRegionId: "150"
}, _hhr5414 = {
    id: "CF",
    displayName: "Republik Afrika Tengah",
    regionId: "017",
    hasTimeZones: true
}, _hhr5415 = {
    id: "018",
    displayName: "Selatan Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _hhr5416 = {
    id: "SJ",
    displayName: "Svalbard dan Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _hhr5417 = {
    id: "005",
    displayName: "Amerika Selatan",
    hasTimeZones: false,
    parentRegionId: "019"
}, _hhr5418 = {
    id: "MP",
    displayName: "Kepulauan Mariana Utara",
    regionId: "057",
    hasTimeZones: true
}, _hhr5419 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _hhr5420 = {
    id: "VG",
    displayName: "Kepulauan Virgin British",
    regionId: "029",
    hasTimeZones: true
}, _hhr5421 = {
    id: "PM",
    displayName: "Saint Pierre dan Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _hhr5422 = {
    id: "TC",
    displayName: "Kepulauan Turks dan Caicos",
    regionId: "029",
    hasTimeZones: true
}, _hhr5423 = {
    id: "057",
    displayName: "Wilayah Mikronesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _hhr5424 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _hhr5425 = {
    id: "VC",
    displayName: "Saint Vincent dan Grenadines",
    regionId: "029",
    hasTimeZones: true
}, _hhr5426 = {
    id: "GS",
    displayName: "Kepulauan Georgia Selatan & Sandwich Selatan",
    hasTimeZones: true
}, _hhr5427 = {
    d: "E, d MMM – E, d MMM, y G",
    M: "E, d MMM – E, d MMM, y G",
    y: "E, d MMM y – E, d MMM y G"
}, _hhr5428 = {
    displayName: "jam",
    relativeTime: _hhr5126
}, _hhr5429 = {
    displayName: "min",
    relativeTime: _hhr5127
}, _hhr5430 = {
    displayName: "saat",
    relativeTime: _hhr5174
}, _hhr5431 = {
    displayName: "Jam",
    relativeTime: _hhr5257
}, _hhr5432 = {
    displayName: "Minit",
    relativeTime: _hhr5334
}, _hhr5433 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _hhr5434 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _hhr5435 = [ "Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember" ], _hhr5436 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _hhr5437 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _hhr5438 = {
    am: "a",
    pm: "p",
    morning1: "tengah malam",
    morning2: "pagi",
    afternoon1: "tengah hari",
    evening1: "petang",
    night1: "malam"
}, _hhr5439 = {
    am: "PG",
    pm: "PTG",
    morning1: "tengah malam",
    morning2: "pagi",
    afternoon1: "tengah hari",
    evening1: "petang",
    night1: "malam"
}, _hhr5440 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _hhr5441 = {
    abbreviated: _hhr53,
    narrow: [ "1", "2", "3", "4" ],
    wide: _hhr587
}, _hhr5442 = {
    displayName: "Saat",
    relative: [ "sekarang" ],
    relativeTime: _hhr5144
}, _hhr5443 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _hhr5444 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _hhr5445 = {
    displayName: "bln",
    relative: _hhr563,
    relativeTime: _hhr5111
}, _hhr5446 = {
    displayName: "mgu",
    relative: _hhr573,
    relativeTime: _hhr5112
}, _hhr5447 = {
    displayName: "mgu",
    relative: _hhr573,
    relativeTime: _hhr5113
}, _hhr5448 = {
    displayName: "thn",
    relative: _hhr572,
    relativeTime: _hhr5119
}, _hhr5449 = {
    displayName: "bln",
    relative: _hhr563,
    relativeTime: _hhr5302
}, _hhr5450 = {
    displayName: "suku",
    relative: _hhr588,
    relativeTime: _hhr5120
}, _hhr5451 = {
    displayName: "Tahun",
    relative: _hhr584,
    relativeTime: _hhr5171
}, _hhr5452 = {
    displayName: "Bulan",
    relative: _hhr578,
    relativeTime: _hhr5210
}, _hhr5453 = {
    displayName: "Suku Tahun",
    relative: _hhr588,
    relativeTime: _hhr5142
}, _hhr5454 = {
    displayName: "Minggu",
    relative: _hhr594,
    relativeTime: _hhr5285
}, _hhr5455 = {
    displayName: "hari",
    relative: _hhr5125,
    relativeTime: _hhr5173
}, _hhr5456 = {
    displayName: "Hari",
    relative: _hhr5172,
    relativeTime: _hhr5143
}, _hhr5457 = {
    decimal: ".",
    group: ",",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _hhr5458 = {
    symbols: _hhr5457
}, _hhr5459 = {
    format: _hhr5354,
    numeric: _hhr58,
    standAlone: _hhr5354
}, _hhr5460 = {
    abbreviated: _hhr562,
    narrow: _hhr545,
    wide: _hhr5110,
    "short": _hhr555
}, _hhr5461 = {
    symbols: _hhr5457,
    digits: "renderSpelloutCardinal"
}, _hhr5462 = {
    "1000": {
        other: "0K"
    },
    "10000": {
        other: "00K"
    },
    "100000": {
        other: "000K"
    },
    "1000000": {
        other: "0J"
    },
    "10000000": {
        other: "00J"
    },
    "100000000": {
        other: "000J"
    },
    "1000000000": {
        other: "0B"
    },
    "10000000000": {
        other: "00B"
    },
    "100000000000": {
        other: "000B"
    },
    "1000000000000": {
        other: "0T"
    },
    "10000000000000": {
        other: "00T"
    },
    "100000000000000": {
        other: "000T"
    }
}, _hhr5463 = {
    symbols: _hhr5457,
    digits: "renderSpelloutCardinalFinancial"
}, _hhr5464 = {
    "1000": {
        other: "¤0K"
    },
    "10000": {
        other: "¤00K"
    },
    "100000": {
        other: "¤000K"
    },
    "1000000": {
        other: "¤0J"
    },
    "10000000": {
        other: "¤00J"
    },
    "100000000": {
        other: "¤000J"
    },
    "1000000000": {
        other: "¤0B"
    },
    "10000000000": {
        other: "¤00B"
    },
    "100000000000": {
        other: "¤000B"
    },
    "1000000000000": {
        other: "¤0T"
    },
    "10000000000000": {
        other: "¤00T"
    },
    "100000000000000": {
        other: "¤000T"
    }
}, _hhr5465 = {
    abbreviated: _hhr5388,
    narrow: _hhr5388,
    wide: _hhr5388
}, _hhr5466 = {
    abbreviated: _hhr5368,
    narrow: _hhr577,
    wide: _hhr5435
}, _hhr5467 = {
    format: _hhr5441,
    standAlone: _hhr5441
}, _hhr5468 = {
    format: _hhr5465
}, _hhr5469 = {
    abbreviated: _hhr5368,
    narrow: _hhr5128,
    wide: _hhr5435
}, _hhr5470 = {
    abbreviated: _hhr5368,
    narrow: _hhr5129,
    wide: _hhr5435
}, _hhr5471 = {
    "1000": {
        other: "0 ribu"
    },
    "10000": {
        other: "00 ribu"
    },
    "100000": {
        other: "000 ribu"
    },
    "1000000": {
        other: "0 juta"
    },
    "10000000": {
        other: "00 juta"
    },
    "100000000": {
        other: "000 juta"
    },
    "1000000000": {
        other: "0 bilion"
    },
    "10000000000": {
        other: "00 bilion"
    },
    "100000000000": {
        other: "000 bilion"
    },
    "1000000000000": {
        other: "0 trilion"
    },
    "10000000000000": {
        other: "00 trilion"
    },
    "100000000000000": _hhr52
}, _hhr5472 = {
    abbreviated: _hhr5434,
    narrow: _hhr5109,
    wide: _hhr5434
}, _hhr5473 = {
    abbreviated: _hhr5436,
    narrow: _hhr592,
    wide: _hhr5436
}, _hhr5474 = {
    abbreviated: _hhr5437,
    narrow: _hhr5109,
    wide: _hhr5437
}, _hhr5475 = {
    abbreviated: _hhr5433,
    narrow: _hhr592,
    wide: _hhr5444
}, _hhr5476 = {
    abbreviated: _hhr5440,
    narrow: _hhr5109,
    wide: _hhr5440
}, _hhr5477 = {
    abbreviated: _hhr5443,
    narrow: _hhr592,
    wide: _hhr5443
}, _hhr5478 = {
    fullDate: "EEEE, U MMMM dd",
    longDate: "U MMMM d",
    mediumDate: "U MMM d",
    shortDate: "y-M-d",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "y-M-d h:mm a",
    mediumDateTime: "U MMM d h:mm:ss a",
    longDateTime: "U MMMM d h:mm:ss a z",
    fullDateTime: "EEEE, U MMMM dd h:mm:ss a zzzz"
}, _hhr5479 = {
    fullDate: "EEEE, d MMMM y G",
    longDate: "d MMMM y G",
    mediumDate: "dd/MM/y G",
    shortDate: "d/MM/y GGGGG",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "d/MM/y GGGGG h:mm a",
    mediumDateTime: "dd/MM/y G h:mm:ss a",
    longDateTime: "d MMMM y G h:mm:ss a z",
    fullDateTime: "EEEE, d MMMM y G h:mm:ss a zzzz"
}, _hhr5480 = {
    abbreviated: _hhr5439,
    narrow: _hhr5438,
    wide: _hhr5439
}, _hhr5481 = {
    format: _hhr5460,
    standAlone: _hhr5460
}, _hhr5482 = {
    d: "d",
    E: "ccc",
    Ed: "E, d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E, d MMM y G",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "d/M",
    MEd: "E, d/M",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E, d MMM",
    MMMMd: "d MMMM",
    ms: "mm:ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M/y G",
    yyyyMd: "d/M/y G",
    yyyyMEd: "E, d/M/y G",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E, d MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _hhr5483 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _hhr5484 = {
    format: _hhr5466,
    standAlone: _hhr5466
}, _hhr5485 = {
    "long": _hhr5471,
    "short": _hhr5462,
    "default": "#,##0.###"
}, _hhr5486 = {
    format: _hhr5469,
    standAlone: _hhr5470
}, _hhr5487 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _hhr5488 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _hhr5489 = {
    format: _hhr5475,
    standAlone: _hhr5475
}, _hhr5490 = {
    format: _hhr5480,
    standAlone: _hhr5480
}, _hhr5491 = {
    basic: _hhr5478,
    cldr: _hhr5483
}, _hhr5492 = {
    basic: _hhr5479,
    cldr: _hhr5482
}, _hhr5493 = {
    d: {
        d: "d–d"
    },
    h: _hhr530,
    H: {
        H: "HH–HH"
    },
    hm: _hhr593,
    Hm: _hhr550,
    hmv: _hhr5115,
    Hmv: _hhr556,
    hv: _hhr543,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _hhr544,
    MEd: _hhr560,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _hhr547,
    MMMEd: _hhr576,
    y: {
        y: "y–y G"
    },
    yM: _hhr551,
    yMd: _hhr5124,
    yMEd: _hhr5410,
    yMMM: _hhr557,
    yMMMd: _hhr5209,
    yMMMEd: _hhr5427,
    yMMMM: _hhr561
}, _hhr5494 = {
    d: {
        d: "d–d"
    },
    h: _hhr530,
    H: {
        H: "HH–HH"
    },
    hm: _hhr593,
    Hm: _hhr550,
    hmv: _hhr5115,
    Hmv: _hhr556,
    hv: _hhr543,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _hhr558,
    MEd: _hhr581,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _hhr548,
    MMMEd: _hhr582,
    y: {
        y: "U–U"
    },
    yM: _hhr553,
    yMd: _hhr5303,
    yMEd: _hhr5424,
    yMMM: _hhr554,
    yMMMd: _hhr5108,
    yMMMEd: _hhr5419,
    yMMMM: _hhr559
}, _hhr5495 = {
    beforeCurrency: _hhr5487,
    afterCurrency: _hhr5487
}, _hhr5496 = {
    "short": _hhr5464,
    "default": "¤#,##0.00",
    other: "{0} {1}",
    currencySpacing: _hhr5495
}, _hhr5497 = {
    abbreviated: _hhr5488,
    narrow: _hhr5488,
    wide: _hhr5488
}, _hhr5498 = {
    format: _hhr5497
}, _hhr5499 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _hhr5485,
    currency: _hhr5496,
    percent: {
        "default": "#,##0%"
    }
}, _hhr5500 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _hhr5501 = {
    era: {
        displayName: "Era"
    },
    year: _hhr5451,
    "year-short": _hhr5448,
    "year-narrow": _hhr5448,
    quarter: _hhr5453,
    "quarter-short": _hhr5450,
    "quarter-narrow": _hhr5450,
    month: _hhr5452,
    "month-short": _hhr5445,
    "month-narrow": _hhr5449,
    week: _hhr5454,
    "week-short": _hhr5446,
    "week-narrow": _hhr5447,
    day: _hhr5456,
    "day-short": _hhr5455,
    "day-narrow": _hhr5455,
    weekday: _hhr552,
    dayperiod: _hhr516,
    hour: _hhr5431,
    "hour-short": _hhr5428,
    "hour-narrow": _hhr5428,
    minute: _hhr5432,
    "minute-short": _hhr5429,
    "minute-narrow": _hhr5429,
    second: _hhr5442,
    "second-short": _hhr5430,
    "second-narrow": _hhr5430,
    zone: _hhr536,
    sun: _hhr5106,
    "sun-short": _hhr595,
    "sun-narrow": _hhr596,
    mon: _hhr5121,
    "mon-short": _hhr597,
    "mon-narrow": _hhr597,
    tue: _hhr5175,
    "tue-short": _hhr598,
    "tue-narrow": _hhr598,
    wed: _hhr5107,
    "wed-short": _hhr599,
    "wed-narrow": _hhr599,
    thu: _hhr5176,
    "thu-short": _hhr5100,
    "thu-narrow": _hhr5100,
    fri: _hhr5177,
    "fri-short": _hhr5101,
    "fri-narrow": _hhr5101,
    sat: _hhr5122,
    "sat-short": _hhr5102,
    "sat-narrow": _hhr5102
}, _hhr5502 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _hhr5501
}, _hhr5503 = {
    dayParts: _hhr5468,
    days: _hhr5498,
    months: _hhr5498,
    years: _hhr5498,
    zodiacs: _hhr5468
}, _hhr5504 = {
    dateFormats: _hhr5492,
    datePartsOrder: "dmy",
    dateIntervalFormats: _hhr5493,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _hhr5481,
    dayPeriods: _hhr5490,
    monthNames: _hhr5489,
    eraNames: _hhr549,
    quarterNames: _hhr5467,
    fields: _hhr5501
}, _hhr5505 = {
    dateFormats: _hhr5491,
    datePartsOrder: "ymd",
    dateIntervalFormats: _hhr5494,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _hhr5481,
    dayPeriods: _hhr5490,
    cyclicNames: _hhr5503,
    monthNames: _hhr5486,
    monthPatterns: _hhr5459,
    quarterNames: _hhr5467,
    fields: _hhr5501
};

inter.id = "ms";

inter.listPatterns = {
    "default": {
        "2": "{0} dan {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0} dan {1}"
    },
    unit: P.listPatterns.default,
    unitNarrow: {
        "2": "{0} {1}",
        start: "{0} {1}",
        middle: "{0} {1}",
        end: "{0} {1}"
    },
    unitShort: P.listPatterns.default
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                other: "{0} daya g"
            },
            accelerationMeterPerSecondSquared: {
                other: "{0} meter sesaat ganda dua"
            },
            angleRevolution: {
                other: "{0} rev"
            },
            angleRadian: {
                other: "{0} radian"
            },
            angleDegree: {
                other: "{0} darjah"
            },
            angleArcMinute: {
                other: "{0} minit arka"
            },
            angleArcSecond: _hhr518,
            areaSquareKilometer: {
                other: "{0} kilometer persegi"
            },
            areaHectare: {
                other: "{0} hektar"
            },
            areaSquareMeter: {
                other: "{0} meter persegi"
            },
            areaSquareCentimeter: {
                other: "{0} sentimeter persegi"
            },
            areaSquareMile: {
                other: "{0} batu persegi"
            },
            areaAcre: {
                other: "{0} ekar"
            },
            areaSquareYard: {
                other: "{0} ela persegi"
            },
            areaSquareFoot: {
                other: "{0} kaki persegi"
            },
            areaSquareInch: {
                other: "{0} inci persegi"
            },
            concentrKarat: {
                other: "{0} karat"
            },
            consumptionLiterPerKilometer: {
                other: "{0} liter sekilometer"
            },
            "consumptionLiterPer-100kilometers": {
                other: "{0} liter setiap 100 kilometer"
            },
            consumptionMilePerGallon: {
                other: "{0} batu segelen"
            },
            digitalTerabyte: {
                other: "{0} terabait"
            },
            digitalTerabit: {
                other: "{0} terabit"
            },
            digitalGigabyte: {
                other: "{0} gigabait"
            },
            digitalGigabit: {
                other: "{0} gigabit"
            },
            digitalMegabyte: {
                other: "{0} megabait"
            },
            digitalMegabit: {
                other: "{0} megabit"
            },
            digitalKilobyte: {
                other: "{0} kilobait"
            },
            digitalKilobit: {
                other: "{0} kilobit"
            },
            digitalByte: {
                other: "{0} bait"
            },
            digitalBit: {
                other: "{0} bit"
            },
            durationCentury: {
                other: "{0} abad"
            },
            durationYear: {
                other: "{0} tahun"
            },
            durationMonth: {
                other: "{0} bulan"
            },
            durationWeek: {
                other: "{0} minggu"
            },
            durationDay: {
                other: "{0} hari"
            },
            durationHour: {
                other: "{0} jam"
            },
            durationMinute: {
                other: "{0} minit"
            },
            durationSecond: {
                other: "{0} saat"
            },
            durationMillisecond: {
                other: "{0} milisaat"
            },
            durationMicrosecond: {
                other: "{0} mikrosaat"
            },
            durationNanosecond: {
                other: "{0} nanosaat"
            },
            electricAmpere: {
                other: "{0} ampere"
            },
            electricMilliampere: {
                other: "{0} miliampere"
            },
            electricOhm: {
                other: "{0} ohm"
            },
            electricVolt: {
                other: "{0} volt"
            },
            energyKilocalorie: {
                other: "{0} kilokalori"
            },
            energyCalorie: {
                other: "{0} kalori"
            },
            energyFoodcalorie: {
                other: "{0} Kalori"
            },
            energyKilojoule: {
                other: "{0} kilojoule"
            },
            energyJoule: {
                other: "{0} joule"
            },
            energyKilowattHour: {
                other: "{0} kilowatt jam"
            },
            frequencyGigahertz: {
                other: "{0} gigahertz"
            },
            frequencyMegahertz: {
                other: "{0} megahertz"
            },
            frequencyKilohertz: {
                other: "{0} kilohertz"
            },
            frequencyHertz: {
                other: "{0} hertz"
            },
            lengthKilometer: {
                other: "{0} kilometer"
            },
            lengthMeter: {
                other: "{0} meter"
            },
            lengthDecimeter: {
                other: "{0} desimeter"
            },
            lengthCentimeter: {
                other: "{0} sentimeter"
            },
            lengthMillimeter: {
                other: "{0} milimeter"
            },
            lengthMicrometer: {
                other: "{0} mikrometer"
            },
            lengthNanometer: {
                other: "{0} nanometer"
            },
            lengthPicometer: {
                other: "{0} pikometer"
            },
            lengthMile: {
                other: "{0} batu"
            },
            lengthYard: {
                other: "{0} ela"
            },
            lengthFoot: {
                other: "{0} kaki"
            },
            lengthInch: {
                other: "{0} inci"
            },
            lengthParsec: {
                other: "{0} parsek"
            },
            lengthLightYear: {
                other: "{0} tahun cahaya"
            },
            lengthAstronomicalUnit: {
                other: "{0} unit astronomi"
            },
            lengthNauticalMile: {
                other: "{0} batu nautika"
            },
            lengthMileScandinavian: {
                other: "{0} batu-skandinavia"
            },
            lightLux: {
                other: "{0} lux"
            },
            massMetricTon: {
                other: "{0} metrik tan"
            },
            massKilogram: {
                other: "{0} kilogram"
            },
            massGram: {
                other: "{0} gram"
            },
            massMilligram: {
                other: "{0} miligram"
            },
            massMicrogram: {
                other: "{0} mikrogram"
            },
            massTon: {
                other: "{0} tan"
            },
            massPound: {
                other: "{0} paun"
            },
            massOunce: {
                other: "{0} auns"
            },
            massOunceTroy: {
                other: "{0} auns troy"
            },
            massCarat: {
                other: "{0} karat"
            },
            powerGigawatt: {
                other: "{0} gigawatt"
            },
            powerMegawatt: {
                other: "{0} megawatt"
            },
            powerKilowatt: {
                other: "{0} kilowatt"
            },
            powerWatt: {
                other: "{0} watt"
            },
            powerMilliwatt: {
                other: "{0} miliwatt"
            },
            powerHorsepower: {
                other: "{0} kuasa kuda"
            },
            pressureHectopascal: {
                other: "{0} hektopascal"
            },
            pressureMillimeterOfMercury: {
                other: "{0} milimeter raksa"
            },
            pressurePoundPerSquareInch: {
                other: "{0} paun seinci persegi"
            },
            pressureInchHg: {
                other: "{0} inci raksa"
            },
            pressureMillibar: {
                other: "{0} milibar"
            },
            speedKilometerPerHour: {
                other: "{0} kilometer sejam"
            },
            speedMeterPerSecond: {
                other: "{0} meter sesaat"
            },
            speedMilePerHour: {
                other: "{0} batu sejam"
            },
            speedKnot: {
                other: "{0} knot"
            },
            temperatureGeneric: {
                other: "{0}°"
            },
            temperatureCelsius: {
                other: "{0} darjah Celsius"
            },
            temperatureFahrenheit: {
                other: "{0} darjah Fahrenheit"
            },
            temperatureKelvin: {
                other: "{0} kelvin"
            },
            volumeCubicKilometer: {
                other: "{0} kilometer padu"
            },
            volumeCubicMeter: {
                other: "{0} meter padu"
            },
            volumeCubicCentimeter: {
                other: "{0} sentimeter padu"
            },
            volumeCubicMile: {
                other: "{0} batu padu"
            },
            volumeCubicYard: {
                other: "{0} ela padu"
            },
            volumeCubicFoot: {
                other: "{0} kaki padu"
            },
            volumeCubicInch: {
                other: "{0} inci padu"
            },
            volumeMegaliter: {
                other: "{0} megaliter"
            },
            volumeHectoliter: {
                other: "{0} hektoliter"
            },
            volumeLiter: {
                other: "{0} liter"
            },
            volumeDeciliter: {
                other: "{0} desiliter"
            },
            volumeCentiliter: {
                other: "{0} sentiliter"
            },
            volumeMilliliter: {
                other: "{0} mililiter"
            },
            volumePintMetric: {
                other: "{0} pain metrik"
            },
            volumeCupMetric: {
                other: "{0} cawan metrik"
            },
            volumeAcreFoot: {
                other: "{0} ekar-kaki"
            },
            volumeGallon: {
                other: "{0} gelen"
            },
            volumeQuart: {
                other: "{0} kuart"
            },
            volumePint: {
                other: "{0} pain"
            },
            volumeCup: {
                other: "{0} cawan"
            },
            volumeFluidOunce: {
                other: "{0} auns cecair"
            },
            volumeTablespoon: _hhr524,
            volumeTeaspoon: _hhr59
        },
        compoundUnit: {
            per: "{0} per {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                other: "{0} m/s²"
            },
            angleRevolution: {
                other: "{0} rev"
            },
            angleRadian: {
                other: "{0} rad"
            },
            angleDegree: {
                other: "{0} darjah"
            },
            angleArcMinute: {
                other: "{0} arcmin"
            },
            angleArcSecond: _hhr518,
            areaSquareKilometer: {
                other: "{0} km²"
            },
            areaHectare: {
                other: "{0} ha"
            },
            areaSquareMeter: {
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                other: "{0} cm²"
            },
            areaSquareMile: {
                other: "{0} bt²"
            },
            areaAcre: {
                other: "{0} ekar"
            },
            areaSquareYard: {
                other: "{0} ela²"
            },
            areaSquareFoot: {
                other: "{0} ka²"
            },
            areaSquareInch: {
                other: "{0} in²"
            },
            concentrKarat: {
                other: "{0} kt"
            },
            consumptionLiterPerKilometer: {
                other: "{0} L/km"
            },
            "consumptionLiterPer-100kilometers": _hhr51,
            consumptionMilePerGallon: {
                other: "{0} bpg"
            },
            digitalTerabyte: {
                other: "{0} TB"
            },
            digitalTerabit: {
                other: "{0} Tb"
            },
            digitalGigabyte: {
                other: "{0} GB"
            },
            digitalGigabit: {
                other: "{0} Gb"
            },
            digitalMegabyte: {
                other: "{0} MB"
            },
            digitalMegabit: {
                other: "{0} Mb"
            },
            digitalKilobyte: {
                other: "{0} kB"
            },
            digitalKilobit: {
                other: "{0} kb"
            },
            digitalByte: {
                other: "{0} bait"
            },
            digitalBit: {
                other: "{0} bit"
            },
            durationCentury: {
                other: "{0} abad"
            },
            durationYear: {
                other: "{0} thn"
            },
            durationMonth: {
                other: "{0} bln"
            },
            durationWeek: {
                other: "{0} mgu"
            },
            durationDay: {
                other: "{0} hari"
            },
            durationHour: {
                other: "{0} j"
            },
            durationMinute: {
                other: "{0} min"
            },
            durationSecond: {
                other: "{0} saat"
            },
            durationMillisecond: {
                other: "{0} ms"
            },
            durationMicrosecond: {
                other: "{0} μs"
            },
            durationNanosecond: {
                other: "{0} ns"
            },
            electricAmpere: {
                other: "{0} A"
            },
            electricMilliampere: {
                other: "{0} mA"
            },
            electricOhm: {
                other: "{0} Ω"
            },
            electricVolt: {
                other: "{0} V"
            },
            energyKilocalorie: {
                other: "{0} kkal"
            },
            energyCalorie: {
                other: "{0} kal"
            },
            energyFoodcalorie: {
                other: "{0} Kal"
            },
            energyKilojoule: {
                other: "{0} kJ"
            },
            energyJoule: {
                other: "{0} J"
            },
            energyKilowattHour: {
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                other: "{0} kHz"
            },
            frequencyHertz: {
                other: "{0} Hz"
            },
            lengthKilometer: {
                other: "{0} km"
            },
            lengthMeter: {
                other: "{0} m"
            },
            lengthDecimeter: {
                other: "{0} dm"
            },
            lengthCentimeter: {
                other: "{0} cm"
            },
            lengthMillimeter: {
                other: "{0} mm"
            },
            lengthMicrometer: {
                other: "{0} µm"
            },
            lengthNanometer: {
                other: "{0} nm"
            },
            lengthPicometer: {
                other: "{0} pm"
            },
            lengthMile: {
                other: "{0} bt"
            },
            lengthYard: {
                other: "{0} ela"
            },
            lengthFoot: {
                other: "{0} ka"
            },
            lengthInch: {
                other: "{0} in"
            },
            lengthParsec: {
                other: "{0} pc"
            },
            lengthLightYear: {
                other: "{0} thn cahaya"
            },
            lengthAstronomicalUnit: {
                other: "{0} au"
            },
            lengthNauticalMile: {
                other: "{0} btn"
            },
            lengthMileScandinavian: {
                other: "{0} smi"
            },
            lightLux: {
                other: "{0} lx"
            },
            massMetricTon: {
                other: "{0} t"
            },
            massKilogram: {
                other: "{0} kg"
            },
            massGram: {
                other: "{0} g"
            },
            massMilligram: {
                other: "{0} mg"
            },
            massMicrogram: {
                other: "{0} µg"
            },
            massTon: {
                other: "{0} tn"
            },
            massPound: {
                other: "{0} lb"
            },
            massOunce: {
                other: "{0} oz"
            },
            massOunceTroy: {
                other: "{0} oz t"
            },
            massCarat: {
                other: "{0} CD"
            },
            powerGigawatt: {
                other: "{0} GW"
            },
            powerMegawatt: {
                other: "{0} MW"
            },
            powerKilowatt: {
                other: "{0} kW"
            },
            powerWatt: {
                other: "{0} W"
            },
            powerMilliwatt: {
                other: "{0} mW"
            },
            powerHorsepower: {
                other: "{0} hp"
            },
            pressureHectopascal: {
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                other: "{0} psi"
            },
            pressureInchHg: {
                other: "{0} inHg"
            },
            pressureMillibar: {
                other: "{0} mbar"
            },
            speedKilometerPerHour: {
                other: "{0} kmj"
            },
            speedMeterPerSecond: {
                other: "{0} m/s"
            },
            speedMilePerHour: {
                other: "{0} bsj"
            },
            speedKnot: {
                other: "{0} kn"
            },
            temperatureGeneric: {
                other: "{0}°"
            },
            temperatureCelsius: {
                other: "{0}°C"
            },
            temperatureFahrenheit: {
                other: "{0}°F"
            },
            temperatureKelvin: {
                other: "{0} K"
            },
            volumeCubicKilometer: {
                other: "{0} km³"
            },
            volumeCubicMeter: {
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                other: "{0} cm³"
            },
            volumeCubicMile: {
                other: "{0} bt³"
            },
            volumeCubicYard: {
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                other: "{0} ka³"
            },
            volumeCubicInch: {
                other: "{0} in³"
            },
            volumeMegaliter: {
                other: "{0} ML"
            },
            volumeHectoliter: {
                other: "{0} hL"
            },
            volumeLiter: {
                other: "{0} l"
            },
            volumeDeciliter: {
                other: "{0} dL"
            },
            volumeCentiliter: {
                other: "{0} cL"
            },
            volumeMilliliter: {
                other: "{0} mL"
            },
            volumePintMetric: {
                other: "{0} mpt"
            },
            volumeCupMetric: {
                other: "{0} mc"
            },
            volumeAcreFoot: {
                other: "{0} ekar ka"
            },
            volumeGallon: {
                other: "{0} gal"
            },
            volumeQuart: {
                other: "{0} qt"
            },
            volumePint: {
                other: "{0} pt"
            },
            volumeCup: {
                other: "{0} c"
            },
            volumeFluidOunce: {
                other: "{0} fl oz"
            },
            volumeTablespoon: _hhr524,
            volumeTeaspoon: _hhr59,
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            massStone: {
                other: "{0} st"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                other: "{0} g"
            },
            angleDegree: {
                other: "{0}°"
            },
            angleArcMinute: {
                other: "{0}′"
            },
            angleArcSecond: {
                other: "{0}″"
            },
            areaSquareKilometer: {
                other: "{0} km²"
            },
            areaHectare: {
                other: "{0} ha"
            },
            areaSquareMeter: {
                other: "{0} m²"
            },
            areaSquareMile: {
                other: "{0} bt²"
            },
            areaAcre: {
                other: "{0} ekar"
            },
            areaSquareFoot: {
                other: "{0} ka²"
            },
            "consumptionLiterPer-100kilometers": _hhr51,
            durationYear: {
                other: "{0} thn"
            },
            durationMonth: {
                other: "{0} bln"
            },
            durationWeek: {
                other: "{0} mgu"
            },
            durationDay: {
                other: "{0} h"
            },
            durationHour: {
                other: "{0} j"
            },
            durationMinute: {
                other: "{0} min"
            },
            durationSecond: {
                other: "{0} s"
            },
            durationMillisecond: {
                other: "{0} ms"
            },
            lengthKilometer: {
                other: "{0} km"
            },
            lengthMeter: {
                other: "{0} m"
            },
            lengthCentimeter: {
                other: "{0} cm"
            },
            lengthMillimeter: {
                other: "{0} mm"
            },
            lengthPicometer: {
                other: "{0} pm"
            },
            lengthMile: {
                other: "{0} bt"
            },
            lengthYard: {
                other: "{0} ela"
            },
            lengthFoot: {
                other: "{0}'"
            },
            lengthInch: {
                other: '{0}"'
            },
            lengthLightYear: {
                other: "{0} t. chya"
            },
            massKilogram: {
                other: "{0} kg"
            },
            massGram: {
                other: "{0} g"
            },
            massPound: {
                other: "{0} paun"
            },
            massOunce: {
                other: "{0} auns"
            },
            powerKilowatt: {
                other: "{0} kW"
            },
            powerWatt: {
                other: "{0} W"
            },
            powerHorsepower: {
                other: "{0} hp"
            },
            pressureHectopascal: {
                other: "{0} hPa"
            },
            pressureInchHg: {
                other: "{0} inHg"
            },
            pressureMillibar: {
                other: "{0} mb"
            },
            speedKilometerPerHour: {
                other: "{0} kmj"
            },
            speedMeterPerSecond: {
                other: "{0} m/s"
            },
            speedMilePerHour: {
                other: "{0} bsj"
            },
            temperatureCelsius: {
                other: "{0}°C"
            },
            temperatureFahrenheit: {
                other: "{0}°F"
            },
            volumeCubicKilometer: {
                other: "{0} km³"
            },
            volumeCubicMile: {
                other: "{0} bt³"
            },
            volumeLiter: {
                other: "{0} l"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "Waktu {0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "Waktu Siang {0}",
        standard: "Waktu Piawai {0}"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "{ai}", "{au}", "b", "c", "d", "{dz}", "e", "f", "g", "h", "i", "j", "k", "{kh}", "l", "m", "n", "{ng}", "{ngg}", "{ny}", "o", "p", "q", "r", "s", "{sy}", "t", "{ts}", "u", "{ua}", "v", "w", "x", "y", "z" ],
        auxiliary: [ "" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ],
        punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "(", ")", "\\[", "\\]", "\\{", "\\}" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _hhr5457,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _hhr5499,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _hhr5499,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _hhr5457,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _hhr5457,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _hhr5457,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _hhr5457,
        digits: "renderEthiopic"
    },
    finance: _hhr5458,
    fullwide: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _hhr5457,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _hhr5457,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _hhr5457,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _hhr5457,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _hhr5461,
    hansfin: _hhr5463,
    hant: _hhr5461,
    hantfin: _hhr5463,
    hebr: {
        symbols: _hhr5457,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _hhr5457,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _hhr5461,
    jpanfin: _hhr5463,
    kali: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _hhr5457,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _hhr5457,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _hhr5457,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _hhr5457,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _hhr5457,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _hhr5457,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _hhr5457,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _hhr5457,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _hhr5458,
    nkoo: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _hhr5457,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _hhr5457,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _hhr5457,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _hhr5457,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _hhr5457,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _hhr5457,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _hhr5458,
    vaii: {
        symbols: _hhr5457,
        formats: _hhr5499,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _hhr5457,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _hhr5492,
        datePartsOrder: "dmy",
        dateIntervalFormats: _hhr5493,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _hhr5481,
        dayPeriods: _hhr5490,
        monthNames: _hhr5484,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _hhr5467,
        fields: _hhr5501
    },
    chinese: _hhr5505,
    coptic: {
        dateFormats: _hhr5492,
        datePartsOrder: "dmy",
        dateIntervalFormats: _hhr5493,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _hhr5481,
        dayPeriods: _hhr5490,
        monthNames: {
            format: _hhr5474,
            standAlone: _hhr5474
        },
        eraNames: _hhr585,
        quarterNames: _hhr5467,
        fields: _hhr5501
    },
    dangi: _hhr5505,
    ethioaa: _hhr5502,
    ethiopic: {
        dateFormats: _hhr5492,
        datePartsOrder: "dmy",
        dateIntervalFormats: _hhr5493,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _hhr5481,
        dayPeriods: _hhr5490,
        monthNames: {
            format: _hhr5476,
            standAlone: _hhr5476
        },
        eraNames: _hhr585,
        quarterNames: _hhr5467,
        fields: _hhr5501
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d MMMM y",
                longDate: "d MMMM y",
                mediumDate: "d MMM y",
                shortDate: "d/MM/yy",
                fullTime: "h:mm:ss a zzzz",
                longTime: "h:mm:ss a z",
                mediumTime: "h:mm:ss a",
                shortTime: "h:mm a",
                shortDateTime: "d/MM/yy h:mm a",
                mediumDateTime: "d MMM y h:mm:ss a",
                longDateTime: "d MMMM y h:mm:ss a z",
                fullDateTime: "EEEE, d MMMM y h:mm:ss a zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "d E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "d-M",
                MEd: "E, d-M",
                MMdd: "dd/MM",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E, d MMM",
                MMMMd: "d MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "M-y",
                yMd: "d/M/y",
                yMEd: "E, d/M/y",
                yMMM: "MMM y",
                yMMMd: "d MMM y",
                yMMMEd: "E, d MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _hhr530,
            H: {
                H: "HH–HH"
            },
            hm: _hhr593,
            Hm: _hhr550,
            hmv: _hhr5115,
            Hmv: _hhr556,
            hv: _hhr543,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            Md: _hhr544,
            MEd: _hhr560,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _hhr547,
            MMMEd: _hhr576,
            y: {
                y: "y–y"
            },
            yM: {
                M: "M/y – M/y",
                y: "M/y – M/y"
            },
            yMd: {
                d: "d/M/y – d/M/y",
                M: "d/M/y – d/M/y",
                y: "d/M/y – d/M/y"
            },
            yMEd: {
                d: "E, d/M/y – E, d/M/y",
                M: "E, d/M/y – E, d/M/y",
                y: "E, d/M/y – E, d/M/y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "d–d MMM y",
                M: "d MMM – d MMM, y",
                y: "d MMM y – d MMM y"
            },
            yMMMEd: {
                d: "E, d MMM – E, d MMM y",
                M: "E, d MMM – E, d MMM y",
                y: "E, d MMM y – E, d MMM y"
            },
            yMMMM: {
                M: "MMMM–MMMM y",
                y: "MMMM y – MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _hhr5481,
        dayPeriods: _hhr5490,
        monthNames: _hhr5484,
        eraNames: {
            wide: [ "S.M.", "TM" ],
            abbreviated: [ "S.M.", "TM" ]
        },
        quarterNames: _hhr5467,
        fields: _hhr5501
    },
    hebrew: {
        dateFormats: _hhr5492,
        datePartsOrder: "dmy",
        dateIntervalFormats: _hhr5493,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _hhr5481,
        dayPeriods: _hhr5490,
        monthNames: {
            format: _hhr5472,
            standAlone: _hhr5472
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _hhr5467,
        fields: _hhr5501
    },
    indian: {
        dateFormats: _hhr5492,
        datePartsOrder: "dmy",
        dateIntervalFormats: _hhr5493,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _hhr5481,
        dayPeriods: _hhr5490,
        monthNames: {
            format: _hhr5477,
            standAlone: _hhr5477
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _hhr5467,
        fields: _hhr5501
    },
    islamic: _hhr5504,
    "islamic-umalqura": _hhr5504,
    "islamic-tbla": _hhr5504,
    "islamic-civil": _hhr5504,
    "islamic-rgsa": _hhr5504,
    iso8601: _hhr5502,
    japanese: {
        dateFormats: _hhr5492,
        datePartsOrder: "dmy",
        dateIntervalFormats: _hhr5493,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _hhr5481,
        dayPeriods: _hhr5490,
        monthNames: _hhr5484,
        eraNames: {
            wide: _hhr5500,
            abbreviated: _hhr5500
        },
        quarterNames: _hhr5467,
        fields: _hhr5501
    },
    persian: {
        dateFormats: _hhr5492,
        datePartsOrder: "dmy",
        dateIntervalFormats: _hhr5493,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _hhr5481,
        dayPeriods: _hhr5490,
        monthNames: {
            format: _hhr5473,
            standAlone: _hhr5473
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _hhr5467,
        fields: _hhr5501
    },
    roc: {
        dateFormats: _hhr5492,
        datePartsOrder: "dmy",
        dateIntervalFormats: _hhr5493,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _hhr5481,
        dayPeriods: _hhr5490,
        monthNames: _hhr5484,
        eraNames: {
            wide: _hhr540,
            abbreviated: _hhr540
        },
        quarterNames: _hhr5467,
        fields: _hhr5501
    },
    islamicc: _hhr5502
};

inter.pluralRule = function(n) {
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "ke−" + this.renderNumber(-n, "#,##0");
    if (n >= 0) return "ke" + this.renderNumber(n, "#,##0");
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinal(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "negatif " + this.renderSpelloutCardinal(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinal(Math.floor(n)) + " titik " + this.renderSpelloutCardinal(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return this.renderSpelloutCardinal(Math.floor(n / 1e15)) + " bilyar" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinal(n % 1e15));
    if (n >= 1e12) return this.renderSpelloutCardinal(Math.floor(n / 1e12)) + " bilyun" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinal(n % 1e12));
    if (n >= 1e9) return this.renderSpelloutCardinal(Math.floor(n / 1e9)) + " milyar" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinal(n % 1e9));
    if (n >= 1e6) return this.renderSpelloutCardinal(Math.floor(n / 1e6)) + " juta" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinal(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinal(Math.floor(n / 1e3)) + " ribu" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 1e3) return "seribu" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinal(Math.floor(n / 100)) + " ratus" + (n === 200 ? "" : " " + this.renderSpelloutCardinal(n % 100));
    if (n >= 100) return "seratus" + (n === 100 ? "" : " " + this.renderSpelloutCardinal(n % 100));
    if (n >= 20) return this.renderSpelloutCardinal(Math.floor(n / 10)) + " puluh" + (n === 20 ? "" : " " + this.renderSpelloutCardinal(n % 10));
    if (n >= 12) return this.renderSpelloutCardinal(n % 10) + " belas";
    if (n >= 11) return "sebelas";
    if (n >= 10) return "sepuluh";
    if (n >= 9) return "sembilan";
    if (n >= 8) return "lapan";
    if (n >= 7) return "tujuh";
    if (n >= 6) return "enam";
    if (n >= 5) return "lima";
    if (n >= 4) return "empat";
    if (n >= 3) return "tiga";
    if (n >= 2) return "dua";
    if (n >= 1) return "satu";
    if (n >= 0) return "kosong";
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 20), P.timeZones.slice(21, 32), {
    id: "America/Cambridge_Bay",
    regionId: "021",
    utcStandardOffsetSeconds: -25200,
    displayName: "Teluk Cambridge",
    countryId: "CA"
}, P.timeZones.slice(32, 100), P.timeZones.slice(102, 117), {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Barthelemy",
    countryId: "BL"
}, P.timeZones.slice(117, 119), P.timeZones.slice(120, 124), {
    id: "America/Glace_Bay",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Teluk Glace",
    countryId: "CA"
}, {
    id: "America/Goose_Bay",
    regionId: "021",
    utcStandardOffsetSeconds: -14400,
    displayName: "Teluk Goose",
    countryId: "CA"
}, P.timeZones.slice(124, 236), {
    id: "Asia/Jerusalem",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Baitulmuqaddis",
    countryId: "IL"
}, P.timeZones.slice(236, 248), P.timeZones.slice(249, 276), {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damsyik",
    countryId: "SY"
}, P.timeZones.slice(277, 360), {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Singapura",
    countryId: "SG"
}, P.timeZones.slice(361, 419));

inter.territories = [ _hhr5325, _hhr5355, _hhr5396, _hhr5356, _hhr5404, _hhr5397, _hhr5398, _hhr5211, _hhr5212, _hhr5361, _hhr5417, _hhr5369, _hhr5411, _hhr5213, _hhr5178, _hhr5258, _hhr586, _hhr5389, _hhr5304, _hhr5286, _hhr5214, _hhr5145, _hhr5335, _hhr5382, _hhr5399, _hhr5390, _hhr5405, _hhr5383, _hhr5391, _hhr5287, _hhr5215, _hhr5305, _hhr5216, _hhr5217, _hhr5306, _hhr5259, _hhr5218, _hhr5375, _hhr5219, _hhr5220, _hhr5179, _hhr5146, _hhr5221, _hhr5180, _hhr5222, _hhr5412, _hhr5260, _hhr5181, _hhr5182, _hhr5261, _hhr5336, _hhr5223, _hhr5262, _hhr5307, _hhr5376, _hhr5123, _hhr5130, _hhr5147, _hhr5148, _hhr5263, _hhr5224, _hhr5392, _hhr5370, _hhr5308, _hhr5345, _hhr5225, _hhr5131, _hhr5226, _hhr5183, _hhr5227, _hhr5103, _hhr5264, _hhr5265, _hhr583, _hhr5228, _hhr5326, _hhr5400, _hhr5229, _hhr5357, _hhr5401, _hhr5413, _hhr5402, _hhr5403, _hhr5230, _hhr5266, _hhr5132, _hhr5267, _hhr5231, _hhr5149, _hhr5184, _hhr5232, _hhr5150, _hhr5288, _hhr5185, _hhr5289, _hhr5233, _hhr5309, _hhr5133, _hhr5290, _hhr5268, _hhr5362, _hhr5186, _hhr5346, _hhr5393, _hhr5187, _hhr5151, _hhr5269, _hhr5394, _hhr5234, _hhr5235, _hhr5152, _hhr5291, _hhr5134, _hhr5135, _hhr5236, _hhr5327, _hhr5188, _hhr5153, _hhr5237, _hhr5154, _hhr5189, _hhr5190, _hhr5191, _hhr5192, _hhr5310, _hhr5238, _hhr5155, _hhr5363, _hhr5116, _hhr5371, _hhr5311, _hhr5358, _hhr5384, _hhr5364, _hhr5426, _hhr5337, _hhr5418, _hhr5385, _hhr5386, _hhr5377, _hhr5292, _hhr5422, _hhr5406, _hhr5420, _hhr5270, _hhr5347, _hhr5328, _hhr5239, _hhr5338, _hhr5193, _hhr5312, _hhr5136, _hhr5194, _hhr5240, _hhr5241, _hhr5156, _hhr5348, _hhr5293, _hhr5195, _hhr5313, _hhr5365, _hhr5294, _hhr5314, _hhr5271, _hhr5196, _hhr5272, _hhr5273, _hhr5137, _hhr5157, _hhr5315, _hhr5316, _hhr5295, _hhr5242, _hhr5378, _hhr5158, _hhr5197, _hhr5317, _hhr5243, _hhr5198, _hhr5274, _hhr5318, _hhr5319, _hhr5320, _hhr5366, _hhr5244, _hhr5159, _hhr5160, _hhr5349, _hhr5329, _hhr5296, _hhr5161, _hhr5245, _hhr5138, _hhr5199, _hhr5367, {
    id: "QO",
    displayName: "Oceania Terpencil",
    regionId: "009",
    hasTimeZones: false
}, _hhr5139, _hhr5275, _hhr5162, _hhr5200, _hhr5372, _hhr5276, _hhr5277, _hhr5140, _hhr5201, _hhr5379, _hhr5387, _hhr5278, _hhr5330, _hhr5114, _hhr5104, _hhr5117, _hhr5105, _hhr5350, _hhr5163, _hhr5414, _hhr5359, _hhr5380, _hhr5246, _hhr5247, _hhr5164, _hhr5202, _hhr5339, _hhr5373, _hhr5340, _hhr5407, _hhr5331, _hhr5341, _hhr5421, _hhr5425, _hhr5165, _hhr5351, _hhr5321, _hhr5408, _hhr5415, _hhr5248, _hhr5279, _hhr5203, _hhr5322, _hhr5342, _hhr5297, _hhr5343, _hhr5280, _hhr5281, _hhr5249, _hhr5298, _hhr5166, _hhr5352, _hhr5250, _hhr5416, _hhr5299, _hhr5204, _hhr5332, _hhr5167, _hhr5205, _hhr5323, _hhr5282, _hhr5283, _hhr5333, _hhr5141, _hhr5251, _hhr5168, _hhr5395, _hhr5118, _hhr5252, _hhr5169, _hhr5344, _hhr5206, _hhr5207, _hhr5253, _hhr5360, _hhr5254, _hhr5409, _hhr5324, _hhr5255, _hhr5300, _hhr5256, _hhr5381, _hhr5353, _hhr5423, _hhr5374, _hhr5301, _hhr5170, _hhr5208, _hhr5284 ];

inter.regions = [ _hhr5355, _hhr5396, _hhr5404, _hhr5397, _hhr5398, _hhr5361, _hhr5417, _hhr5411, _hhr5335, _hhr5382, _hhr5399, _hhr5390, _hhr5405, _hhr5383, _hhr5391, _hhr5376, _hhr583, _hhr5357, _hhr5401, _hhr5413, _hhr5402, _hhr5403, _hhr5378, _hhr5367, _hhr5379, _hhr5415, _hhr5409, _hhr5423 ];

inter.countries = [ _hhr5325, _hhr5356, _hhr5211, _hhr5212, _hhr5369, _hhr5213, _hhr5178, _hhr5258, _hhr586, _hhr5389, _hhr5304, _hhr5286, _hhr5214, _hhr5145, _hhr5287, _hhr5215, _hhr5305, _hhr5216, _hhr5217, _hhr5306, _hhr5259, _hhr5218, _hhr5375, _hhr5219, _hhr5220, _hhr5179, _hhr5146, _hhr5221, _hhr5180, _hhr5222, _hhr5412, _hhr5260, _hhr5181, _hhr5182, _hhr5261, _hhr5336, _hhr5223, _hhr5262, _hhr5307, _hhr5123, _hhr5130, _hhr5147, _hhr5148, _hhr5263, _hhr5224, _hhr5392, _hhr5370, _hhr5308, _hhr5345, _hhr5225, _hhr5131, _hhr5226, _hhr5183, _hhr5227, _hhr5103, _hhr5264, _hhr5265, _hhr5228, _hhr5326, _hhr5400, _hhr5229, _hhr5230, _hhr5266, _hhr5132, _hhr5267, _hhr5231, _hhr5149, _hhr5184, _hhr5232, _hhr5150, _hhr5288, _hhr5185, _hhr5289, _hhr5233, _hhr5309, _hhr5133, _hhr5290, _hhr5268, _hhr5362, _hhr5186, _hhr5346, _hhr5393, _hhr5187, _hhr5151, _hhr5269, _hhr5394, _hhr5234, _hhr5235, _hhr5152, _hhr5291, _hhr5134, _hhr5135, _hhr5236, _hhr5327, _hhr5188, _hhr5153, _hhr5237, _hhr5154, _hhr5189, _hhr5190, _hhr5191, _hhr5192, _hhr5310, _hhr5238, _hhr5155, _hhr5363, _hhr5116, _hhr5371, _hhr5311, _hhr5358, _hhr5384, _hhr5364, _hhr5426, _hhr5337, _hhr5418, _hhr5385, _hhr5386, _hhr5377, _hhr5292, _hhr5422, _hhr5406, _hhr5420, _hhr5270, _hhr5347, _hhr5328, _hhr5239, _hhr5338, _hhr5193, _hhr5312, _hhr5136, _hhr5194, _hhr5240, _hhr5241, _hhr5156, _hhr5348, _hhr5293, _hhr5195, _hhr5313, _hhr5365, _hhr5294, _hhr5314, _hhr5271, _hhr5196, _hhr5272, _hhr5273, _hhr5137, _hhr5157, _hhr5315, _hhr5316, _hhr5295, _hhr5242, _hhr5158, _hhr5197, _hhr5317, _hhr5243, _hhr5198, _hhr5274, _hhr5318, _hhr5319, _hhr5320, _hhr5366, _hhr5244, _hhr5159, _hhr5160, _hhr5349, _hhr5329, _hhr5296, _hhr5161, _hhr5245, _hhr5138, _hhr5199, _hhr5139, _hhr5275, _hhr5162, _hhr5200, _hhr5372, _hhr5276, _hhr5277, _hhr5140, _hhr5201, _hhr5387, _hhr5278, _hhr5330, _hhr5114, _hhr5104, _hhr5117, _hhr5105, _hhr5350, _hhr5163, _hhr5414, _hhr5359, _hhr5380, _hhr5246, _hhr5247, _hhr5164, _hhr5202, _hhr5339, _hhr5373, _hhr5340, _hhr5407, _hhr5331, _hhr5341, _hhr5421, _hhr5425, _hhr5165, _hhr5351, _hhr5321, _hhr5408, _hhr5248, _hhr5279, _hhr5203, _hhr5322, _hhr5342, _hhr5297, _hhr5343, _hhr5280, _hhr5281, _hhr5249, _hhr5298, _hhr5166, _hhr5352, _hhr5250, _hhr5416, _hhr5299, _hhr5204, _hhr5332, _hhr5167, _hhr5205, _hhr5323, _hhr5282, _hhr5283, _hhr5333, _hhr5141, _hhr5251, _hhr5168, _hhr5395, _hhr5118, _hhr5252, _hhr5169, _hhr5344, _hhr5206, _hhr5207, _hhr5253, _hhr5360, _hhr5254, _hhr5324, _hhr5255, _hhr5300, _hhr5256, _hhr5381, _hhr5353, _hhr5374, _hhr5301, _hhr5170, _hhr5208, _hhr5284 ];

inter.languages = [ {
    id: "ab",
    displayName: "Abkhazia"
}, {
    id: "ady",
    displayName: "Adyghe"
}, {
    id: "af",
    displayName: "Afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "Aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ak",
    displayName: "Akan",
    nativeDisplayName: "Akan"
}, {
    id: "ach",
    displayName: "Akoli"
}, {
    id: "bss",
    displayName: "Akoose"
}, {
    id: "alt",
    displayName: "Altai Selatan"
}, {
    id: "en_us",
    displayName: "Inggeris AS",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "Inari Sami",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "arq",
    displayName: "Arab Algeria"
}, {
    id: "ary",
    displayName: "Arab Maghribi"
}, {
    id: "arz",
    displayName: "Arab Mesir"
}, {
    id: "aeb",
    displayName: "Arab Tunisia"
}, {
    id: "en_au",
    displayName: "Inggeris Australia",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "Avaric"
}, {
    id: "ae",
    displayName: "Avestan"
}, {
    id: "ay",
    displayName: "Aymara"
}, {
    id: "az",
    displayName: "Azerbaijan",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "bfd",
    displayName: "Bafut"
}, {
    id: "ms",
    displayName: "Bahasa Melayu",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "und",
    displayName: "Bahasa Tidak Diketahui"
}, {
    id: "bgn",
    displayName: "Balochi Barat"
}, {
    id: "bal",
    displayName: "Baluchi"
}, {
    id: "bm",
    displayName: "Bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bax",
    displayName: "Bamun"
}, {
    id: "ba",
    displayName: "Bashkir"
}, {
    id: "bej",
    displayName: "Beja"
}, {
    id: "bpy",
    displayName: "Bishnupriya"
}, {
    id: "bs",
    displayName: "Bosnia",
    nativeDisplayName: "bosanski"
}, {
    id: "brh",
    displayName: "Brahui"
}, {
    id: "br",
    displayName: "Breton",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "Inggeris British",
    nativeDisplayName: "British English"
}, {
    id: "bum",
    displayName: "Bulu"
}, {
    id: "bua",
    displayName: "Buriat"
}, {
    id: "en_ca",
    displayName: "Inggeris Kanada",
    nativeDisplayName: "Canadian English"
}, {
    id: "ca",
    displayName: "Catalonia",
    nativeDisplayName: "català"
}, {
    id: "cay",
    displayName: "Cayuga"
}, {
    id: "shu",
    displayName: "Chadian Arab"
}, {
    id: "kde",
    displayName: "Makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "sn",
    displayName: "Shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cv",
    displayName: "Chuvash"
}, {
    id: "swb",
    displayName: "Comoria"
}, {
    id: "cop",
    displayName: "Coptic"
}, {
    id: "co",
    displayName: "Corsica"
}, {
    id: "cy",
    displayName: "Wales",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "Denmark",
    nativeDisplayName: "dansk"
}, {
    id: "se",
    displayName: "Sami Utara",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "dzg",
    displayName: "Dazaga"
}, {
    id: "de",
    displayName: "Jerman",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "Luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "dv",
    displayName: "Divehi"
}, {
    id: "doi",
    displayName: "Dogri"
}, {
    id: "dsb",
    displayName: "Lower Sorbian",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "Duala",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "Estonia",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "Efik"
}, {
    id: "guz",
    displayName: "Gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "en",
    displayName: "Inggeris",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "Sepanyol",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "Sepanyol Eropah",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "Sepanyol Mexico",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "Sepanyol Amerika Latin",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "Esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "Basque",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "Ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ee",
    displayName: "Ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fj",
    displayName: "Fiji"
}, {
    id: "fil",
    displayName: "Filipina",
    nativeDisplayName: "Filipino"
}, {
    id: "fr",
    displayName: "Perancis",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "Perancis Kanada",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "Perancis Switzerland",
    nativeDisplayName: "français suisse"
}, {
    id: "fo",
    displayName: "Faroe",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "Ga"
}, {
    id: "ga",
    displayName: "Ireland",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "Manx",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "Gagauz"
}, {
    id: "gl",
    displayName: "Galicia",
    nativeDisplayName: "galego"
}, {
    id: "gba",
    displayName: "Gbaya"
}, {
    id: "bbj",
    displayName: "Ghomala"
}, {
    id: "ki",
    displayName: "Kikuya",
    nativeDisplayName: "Gikuyu"
}, {
    id: "glk",
    displayName: "Gilaki"
}, {
    id: "grc",
    displayName: "Greek Purba"
}, {
    id: "gn",
    displayName: "Guarani"
}, {
    id: "gd",
    displayName: "Scots Gaelic",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "ht",
    displayName: "Haiti"
}, {
    id: "ha",
    displayName: "Hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "bez",
    displayName: "Bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hsb",
    displayName: "Upper Sorbian",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "Croatia",
    nativeDisplayName: "hrvatski"
}, {
    id: "ibb",
    displayName: "Ibibio"
}, {
    id: "bem",
    displayName: "Bemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "ig",
    displayName: "Igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "Rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "id",
    displayName: "Indonesia",
    nativeDisplayName: "Indonesia"
}, {
    id: "ia",
    displayName: "Interlingua"
}, {
    id: "ie",
    displayName: "Interlingue"
}, {
    id: "iu",
    displayName: "Inuktitut"
}, {
    id: "sbp",
    displayName: "Sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "Ndebele Utara",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "Zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "Itali",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "Jawa"
}, {
    id: "nds",
    displayName: "Jerman Rendah"
}, {
    id: "dyo",
    displayName: "Jola-Fonyi",
    nativeDisplayName: "joola"
}, {
    id: "kea",
    displayName: "Kabuverdianu",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kkj",
    displayName: "Kako",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "Kalaallisut",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "Kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "kbl",
    displayName: "Kanembu"
}, {
    id: "kw",
    displayName: "Cornish",
    nativeDisplayName: "kernewek"
}, {
    id: "naq",
    displayName: "Nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "khw",
    displayName: "Khowar"
}, {
    id: "rof",
    displayName: "Rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "Kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "Machame",
    nativeDisplayName: "Kimachame"
}, {
    id: "rw",
    displayName: "Kinyarwanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "Asu",
    nativeDisplayName: "Kipare"
}, {
    id: "rwk",
    displayName: "Rwa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "Samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "Shambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "Swahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "Congo Swahili",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "Taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "Teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "tlh",
    displayName: "Klingon"
}, {
    id: "bkm",
    displayName: "Kom"
}, {
    id: "koi",
    displayName: "Komi-Permyak"
}, {
    id: "kg",
    displayName: "Kongo"
}, {
    id: "khq",
    displayName: "Koyra Chiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "Koyraboro Senni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "mfe",
    displayName: "Morisyen",
    nativeDisplayName: "kreol morisien"
}, {
    id: "ku",
    displayName: "Kurdish"
}, {
    id: "sdh",
    displayName: "Kurdish Selatan"
}, {
    id: "nmg",
    displayName: "Kwasio",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "Vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ksh",
    displayName: "Colognian",
    nativeDisplayName: "Kölsch"
}, {
    id: "ebu",
    displayName: "Embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "Meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "Langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "quc",
    displayName: "Kʼicheʼ"
}, {
    id: "lah",
    displayName: "Lahnda"
}, {
    id: "lkt",
    displayName: "Lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "la",
    displayName: "Latin"
}, {
    id: "lv",
    displayName: "Latvia",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "Tonga",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lt",
    displayName: "Lithuania",
    nativeDisplayName: "lietuvių"
}, {
    id: "ln",
    displayName: "Lingala",
    nativeDisplayName: "lingála"
}, {
    id: "loz",
    displayName: "Lozi"
}, {
    id: "lua",
    displayName: "Luba-Lulua"
}, {
    id: "lg",
    displayName: "Ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "smj",
    displayName: "Lule Sami"
}, {
    id: "luy",
    displayName: "Luyia",
    nativeDisplayName: "Luluhia"
}, {
    id: "lb",
    displayName: "Luxembourg",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "Masai",
    nativeDisplayName: "Maa"
}, {
    id: "mde",
    displayName: "Maba"
}, {
    id: "maf",
    displayName: "Mafa"
}, {
    id: "hu",
    displayName: "Hungary",
    nativeDisplayName: "magyar"
}, {
    id: "mgh",
    displayName: "Makhuwa-Meetto",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "Malagasy",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "Malta",
    nativeDisplayName: "Malti"
}, {
    id: "mni",
    displayName: "Manipuri"
}, {
    id: "mi",
    displayName: "Maori"
}, {
    id: "arn",
    displayName: "Mapuche"
}, {
    id: "chm",
    displayName: "Mari"
}, {
    id: "byv",
    displayName: "Medumba"
}, {
    id: "mgo",
    displayName: "Meta’",
    nativeDisplayName: "metaʼ"
}, {
    id: "lus",
    displayName: "Mizo"
}, {
    id: "moh",
    displayName: "Mohawk"
}, {
    id: "ro_md",
    displayName: "Moldavia",
    nativeDisplayName: "moldovenească"
}, {
    id: "mua",
    displayName: "Mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "mye",
    displayName: "Myene"
}, {
    id: "jgo",
    displayName: "Ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "nl",
    displayName: "Belanda",
    nativeDisplayName: "Nederlands"
}, {
    id: "sba",
    displayName: "Ngambay"
}, {
    id: "nb",
    displayName: "Bokmål Norway",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "Norway"
}, {
    id: "yav",
    displayName: "Yangben",
    nativeDisplayName: "nuasue"
}, {
    id: "ny",
    displayName: "Nyanja"
}, {
    id: "nn",
    displayName: "Nynorsk Norway",
    nativeDisplayName: "nynorsk"
}, {
    id: "nqo",
    displayName: "N’ko"
}, {
    id: "oc",
    displayName: "Occitania"
}, {
    id: "xog",
    displayName: "Soga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "Oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "uz",
    displayName: "Uzbekistan",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pl",
    displayName: "Poland",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "Portugis",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "Portugis Brazil",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "Portugis Eropah",
    nativeDisplayName: "português europeu"
}, {
    id: "ksf",
    displayName: "Bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "ro",
    displayName: "Romania",
    nativeDisplayName: "română"
}, {
    id: "cgg",
    displayName: "Chiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "Romansh",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "Quechua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "Nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "ssy",
    displayName: "Saho"
}, {
    id: "sma",
    displayName: "Sami Selatan"
}, {
    id: "sm",
    displayName: "Samoa"
}, {
    id: "sa",
    displayName: "Sanskrit"
}, {
    id: "nds_nl",
    displayName: "Saxon Rendah"
}, {
    id: "de_ch",
    displayName: "Jerman Halus Switzerland",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "Jerman Switzerland",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "seh",
    displayName: "Sena",
    nativeDisplayName: "sena"
}, {
    id: "see",
    displayName: "Seneca"
}, {
    id: "sh",
    displayName: "SerboCroatia"
}, {
    id: "sq",
    displayName: "Albania",
    nativeDisplayName: "shqip"
}, {
    id: "nnh",
    displayName: "Ngiemboon",
    nativeDisplayName: "Shwóŋò ngiembɔɔn"
}, {
    id: "sd",
    displayName: "Sindhi"
}, {
    id: "sms",
    displayName: "Skolt Sami"
}, {
    id: "sk",
    displayName: "Slovak",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "Slovenia",
    nativeDisplayName: "slovenščina"
}, {
    id: "so",
    displayName: "Somali",
    nativeDisplayName: "Soomaali"
}, {
    id: "st",
    displayName: "Sotho Selatan"
}, {
    id: "nso",
    displayName: "Sotho Utara"
}, {
    id: "su",
    displayName: "Sunda"
}, {
    id: "fi",
    displayName: "Finland",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "Sweden",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "Swati"
}, {
    id: "sg",
    displayName: "Sango",
    nativeDisplayName: "Sängö"
}, {
    id: "ty",
    displayName: "Tahiti"
}, {
    id: "tg",
    displayName: "Tajik"
}, {
    id: "tly",
    displayName: "Talysh"
}, {
    id: "tzm",
    displayName: "Tamazight Atlas Tengah",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "Kabyle",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "trv",
    displayName: "Taroko"
}, {
    id: "twq",
    displayName: "Tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "Tatar"
}, {
    id: "tet",
    displayName: "Tetum"
}, {
    id: "nus",
    displayName: "Nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "zxx",
    displayName: "Tiada kandungan linguistik"
}, {
    id: "vi",
    displayName: "Vietnam",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tpi",
    displayName: "Tok Pisin"
}, {
    id: "lu",
    displayName: "Luba-Katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "ts",
    displayName: "Tsonga"
}, {
    id: "tn",
    displayName: "Tswana"
}, {
    id: "tum",
    displayName: "Tumbuka"
}, {
    id: "crh",
    displayName: "Turki Krimea"
}, {
    id: "tw",
    displayName: "Twi"
}, {
    id: "tk",
    displayName: "Turkmen",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "Turki",
    nativeDisplayName: "Türkçe"
}, {
    id: "ve",
    displayName: "Venda"
}, {
    id: "nl_be",
    displayName: "Flemish",
    nativeDisplayName: "Vlaams"
}, {
    id: "wae",
    displayName: "Walser",
    nativeDisplayName: "Walser"
}, {
    id: "wbp",
    displayName: "Warlpiri"
}, {
    id: "fy",
    displayName: "Frisian Barat",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "Wolof"
}, {
    id: "xh",
    displayName: "Xhosa"
}, {
    id: "ybb",
    displayName: "Yemba"
}, {
    id: "dje",
    displayName: "Zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "Zaza"
}, {
    id: "gbz",
    displayName: "Zoroastrian Dari"
}, {
    id: "yo",
    displayName: "Yoruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "Iceland",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "Jerman Austria",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "Czech",
    nativeDisplayName: "čeština"
}, {
    id: "bas",
    displayName: "Basaa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "Hawaii",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "Greek",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "Belarus",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "Bulgaria",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "Ossete",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "Kirghiz",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "Macedonia",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "Mongolia",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "Chechen",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "Rusia",
    nativeDisplayName: "русский"
}, {
    id: "sr",
    displayName: "Serbia",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "Ukraine",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "Slavik Gereja",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "Kazakhstan",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "Armenia",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "Yiddish",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "Ibrani",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "Uyghur",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "Urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "Arab",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "Arab Standard Moden",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "Parsi",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "Luri Utara",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "Mazanderani",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "Pashto",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "Kurdi Sorani",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "Kashmir",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "Konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "Nepal",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "Bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "Marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "Hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "Assam",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "Benggala",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "Punjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "Gujerat",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "Oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "Tamil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "Telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "Kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "Malayalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "Sinhala",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "Thai",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "Laos",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "Tibet",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "Dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "Burma",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "Georgia",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "Tigrinya",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "Amharic",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "Khmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "Tamazight Maghribi Standard",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "Tachelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "Cina",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "Jepun",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "Cina Ringkas",
    nativeDisplayName: "简体中文"
}, {
    id: "zh_hant",
    displayName: "Cina Tradisional",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "Sichuan Yi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "Vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "Cherokee",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "Korea",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Arab",
    displayName: "Arab"
}, {
    id: "Armn",
    displayName: "Armenia"
}, {
    id: "Bali",
    displayName: "Bali"
}, {
    id: "Bamu",
    displayName: "Bamu"
}, {
    id: "Beng",
    displayName: "Bengali"
}, {
    id: "Zyyy",
    displayName: "Biasa"
}, {
    id: "Bopo",
    displayName: "Bopomofo"
}, {
    id: "Brai",
    displayName: "Braille"
}, {
    id: "Cans",
    displayName: "Cans"
}, {
    id: "Cyrl",
    displayName: "Cyril"
}, {
    id: "Deva",
    displayName: "Devanagari"
}, {
    id: "Ethi",
    displayName: "Ethiopia"
}, {
    id: "Geor",
    displayName: "Georgia"
}, {
    id: "Grek",
    displayName: "Greek"
}, {
    id: "Gujr",
    displayName: "Gujarat"
}, {
    id: "Guru",
    displayName: "Gurmukhi"
}, {
    id: "Hani",
    displayName: "Han"
}, {
    id: "Hang",
    displayName: "Hangul"
}, {
    id: "Hira",
    displayName: "Hiragana"
}, {
    id: "Hebr",
    displayName: "Ibrani"
}, {
    id: "Jpan",
    displayName: "Jepun"
}, {
    id: "Knda",
    displayName: "Kannada"
}, {
    id: "Kana",
    displayName: "Katakana"
}, {
    id: "Khmr",
    displayName: "Khmer"
}, {
    id: "Kore",
    displayName: "Korea"
}, {
    id: "Laoo",
    displayName: "Lao"
}, {
    id: "Latn",
    displayName: "Latin"
}, {
    id: "Mlym",
    displayName: "Malayalam"
}, {
    id: "Mong",
    displayName: "Mongolia"
}, {
    id: "Mymr",
    displayName: "Myammar"
}, {
    id: "Orya",
    displayName: "Oriya"
}, {
    id: "Hans",
    displayName: "Ringkas"
}, {
    id: "Zsym",
    displayName: "Simbol"
}, {
    id: "Sinh",
    displayName: "Sinhala"
}, {
    id: "Zzzz",
    displayName: "Skrip Tidak Diketahui"
}, {
    id: "Taml",
    displayName: "Tamil"
}, {
    id: "Telu",
    displayName: "Telugu"
}, {
    id: "Thaa",
    displayName: "Thaana"
}, {
    id: "Thai",
    displayName: "Thai"
}, {
    id: "Tibt",
    displayName: "Tibet"
}, {
    id: "Zxxx",
    displayName: "Tidak ditulis"
}, {
    id: "Hant",
    displayName: "Tradisional"
} ];

inter.currencies = [ {
    id: "AFN",
    displayName: "Afghani Afghanistan",
    symbol: "AFN",
    other: "Afghani Afghanistan"
}, {
    id: "MGA",
    displayName: "Ariary Malagasy",
    symbol: "MGA",
    other: "Ariary Malagasy"
}, {
    id: "THB",
    displayName: "Baht Thai",
    symbol: "THB",
    other: "Baht Thai"
}, {
    id: "PAB",
    displayName: "Balboa Panama",
    symbol: "PAB",
    other: "Balboa Panama"
}, {
    id: "ETB",
    displayName: "Birr Ethiopia",
    symbol: "ETB",
    other: "Birr Ethiopia"
}, {
    id: "VEF",
    displayName: "Bolivar Venezuela",
    symbol: "VEF",
    other: "Bolivar Venezuela"
}, {
    id: "BOB",
    displayName: "Boliviano Bolivia",
    symbol: "BOB",
    other: "Boliviano Bolivia"
}, {
    id: "GHS",
    displayName: "Cedi Ghana",
    symbol: "GHS",
    other: "Cedi Ghana"
}, {
    id: "CRC",
    displayName: "Colon Costa Rica",
    symbol: "CRC",
    other: "Colon Costa Rica"
}, {
    id: "NIO",
    displayName: "Cordoba Nicaragua",
    symbol: "NIO",
    other: "Cordoba Nicaragua"
}, {
    id: "GMD",
    displayName: "Dalasi Gambia",
    symbol: "GMD",
    other: "Dalasi Gambia"
}, {
    id: "MKD",
    displayName: "Denar Macedonia",
    symbol: "MKD",
    other: "Denar Macedonia"
}, {
    id: "DZD",
    displayName: "Dinar Algeria",
    symbol: "DZD",
    other: "Dinar Algeria"
}, {
    id: "BHD",
    displayName: "Dinar Bahrain",
    symbol: "BHD",
    other: "Dinar Bahrain"
}, {
    id: "IQD",
    displayName: "Dinar Iraq",
    symbol: "IQD",
    other: "Dinar Iraq"
}, {
    id: "JOD",
    displayName: "Dinar Jordan",
    symbol: "JOD",
    other: "Dinar Jordan"
}, {
    id: "KWD",
    displayName: "Dinar Kuwait",
    symbol: "KWD",
    other: "Dinar Kuwait"
}, {
    id: "LYD",
    displayName: "Dinar Libya",
    symbol: "LYD",
    other: "Dinar Libya"
}, {
    id: "RSD",
    displayName: "Dinar Serbia",
    symbol: "RSD",
    other: "Dinar Serbia"
}, {
    id: "TND",
    displayName: "Dinar Tunisia",
    symbol: "TND",
    other: "Dinar Tunisia"
}, {
    id: "AED",
    displayName: "Dirham Emiriah Arab Bersatu",
    symbol: "AED",
    other: "Dirham Emiriah Arab Bersatu"
}, {
    id: "MAD",
    displayName: "Dirham Maghribi",
    symbol: "MAD",
    other: "Dirham Maghribi"
}, {
    id: "STD",
    displayName: "Dobra Sao Tome dan Principe",
    symbol: "STD",
    other: "Dobra Sao Tome dan Principe"
}, {
    id: "USD",
    displayName: "Dolar AS",
    symbol: "USD",
    other: "Dolar AS"
}, {
    id: "AUD",
    displayName: "Dolar Australia",
    symbol: "A$",
    other: "Dolar Australia"
}, {
    id: "BSD",
    displayName: "Dolar Bahamas",
    symbol: "BSD",
    other: "Dolar Bahamas"
}, {
    id: "BBD",
    displayName: "Dolar Barbados",
    symbol: "BBD",
    other: "Dolar Barbados"
}, {
    id: "BZD",
    displayName: "Dolar Belize",
    symbol: "BZD",
    other: "Dolar Belize"
}, {
    id: "BMD",
    displayName: "Dolar Bermuda",
    symbol: "BMD",
    other: "Dolar Bermuda"
}, {
    id: "BND",
    displayName: "Dolar Brunei",
    symbol: "BND",
    other: "Dolar Brunei"
}, {
    id: "XCD",
    displayName: "Dolar Caribbean Timur",
    symbol: "EC$",
    other: "Dolar Caribbean Timur"
}, {
    id: "FJD",
    displayName: "Dolar Fiji",
    symbol: "FJD",
    other: "Dolar Fiji"
}, {
    id: "GYD",
    displayName: "Dolar Guyana",
    symbol: "GYD",
    other: "Dolar Guyana"
}, {
    id: "HKD",
    displayName: "Dolar Hong Kong",
    symbol: "HK$",
    other: "Dolar Hong Kong"
}, {
    id: "JMD",
    displayName: "Dolar Jamaica",
    symbol: "JMD",
    other: "Dolar Jamaica"
}, {
    id: "CAD",
    displayName: "Dolar Kanada",
    symbol: "CAD",
    other: "Dolar Kanada"
}, {
    id: "KYD",
    displayName: "Dolar Kepulauan Cayman",
    symbol: "KYD",
    other: "Dolar Kepulauan Cayman"
}, {
    id: "SBD",
    displayName: "Dolar Kepulauan Solomon",
    symbol: "SBD",
    other: "Dolar Kepulauan Solomon"
}, {
    id: "LRD",
    displayName: "Dolar Liberia",
    symbol: "LRD",
    other: "Dolar Liberia"
}, {
    id: "NAD",
    displayName: "Dolar Namibia",
    symbol: "NAD",
    other: "Dolar Namibia"
}, {
    id: "NZD",
    displayName: "Dolar New Zealand",
    symbol: "NZ$",
    other: "Dolar New Zealand"
}, {
    id: "SGD",
    displayName: "Dolar Singapura",
    symbol: "SGD",
    other: "Dolar Singapura"
}, {
    id: "SRD",
    displayName: "Dolar Surinam",
    symbol: "SRD",
    other: "Dolar Surinam"
}, {
    id: "TWD",
    displayName: "Dolar Taiwan Baru",
    symbol: "NT$",
    other: "Dolar Taiwan Baru"
}, {
    id: "TTD",
    displayName: "Dolar Trinidad dan Tobago",
    symbol: "TTD",
    other: "Dolar Trinidad dan Tobago"
}, {
    id: "VND",
    displayName: "Dong Vietnam",
    symbol: "₫",
    other: "Dong Vietnam"
}, {
    id: "AMD",
    displayName: "Dram Armenia",
    symbol: "AMD",
    other: "Dram Armenia"
}, {
    id: "ERN",
    displayName: "ERN",
    symbol: "ERN",
    other: "Nakfa Eritrea"
}, {
    id: "CVE",
    displayName: "Escudo Tanjung Verde",
    symbol: "CVE",
    other: "Escudo Tanjung Verde"
}, {
    id: "EUR",
    displayName: "Euro",
    symbol: "€",
    other: "Euro"
}, {
    id: "AWG",
    displayName: "Florin Aruba",
    symbol: "AWG",
    other: "Florin Aruba"
}, {
    id: "HUF",
    displayName: "Forint Hungary",
    symbol: "HUF",
    other: "Forint Hungary"
}, {
    id: "BIF",
    displayName: "Franc Burundia",
    symbol: "BIF",
    other: "Franc Burundia"
}, {
    id: "XOF",
    displayName: "Franc CFA BCEAO",
    symbol: "CFA",
    other: "Franc CFA BCEAO"
}, {
    id: "XAF",
    displayName: "Franc CFA BEAC",
    symbol: "FCFA",
    other: "Franc CFA BEAC"
}, {
    id: "XPF",
    displayName: "Franc CFP",
    symbol: "CFPF",
    other: "Franc CFP"
}, {
    id: "KMF",
    displayName: "Franc Comoria",
    symbol: "KMF",
    other: "Franc Comoria"
}, {
    id: "CDF",
    displayName: "Franc Congo",
    symbol: "CDF",
    other: "Franc Congo"
}, {
    id: "DJF",
    displayName: "Franc Djibouti",
    symbol: "DJF",
    other: "Franc Djibouti"
}, {
    id: "GNF",
    displayName: "Franc Guinea",
    symbol: "GNF",
    other: "Franc Guinea"
}, {
    id: "RWF",
    displayName: "Franc Rwanda",
    symbol: "RWF",
    other: "Franc Rwanda"
}, {
    id: "CHF",
    displayName: "Franc Switzerland",
    symbol: "CHF",
    other: "Franc Switzerland"
}, {
    id: "HTG",
    displayName: "Gourde Haiti",
    symbol: "HTG",
    other: "Gourde Haiti"
}, {
    id: "PYG",
    displayName: "Guarani Paraguay",
    symbol: "PYG",
    other: "Guarani Paraguay"
}, {
    id: "ANG",
    displayName: "Guilder Antillean Netherland",
    symbol: "ANG",
    other: "Guilder Antillean Netherland"
}, {
    id: "UAH",
    displayName: "Hryvnia Ukraine",
    symbol: "UAH",
    other: "Hryvnia Ukraine"
}, {
    id: "PGK",
    displayName: "Kina Papua New Guinea",
    symbol: "PGK",
    other: "Kina Papua New Guinea"
}, {
    id: "LAK",
    displayName: "Kip Laos",
    symbol: "LAK",
    other: "Kip Laos"
}, {
    id: "CZK",
    displayName: "Koruna Republik Czech",
    symbol: "CZK",
    other: "Koruna Republik Czech"
}, {
    id: "ISK",
    displayName: "Krona Iceland",
    symbol: "ISK",
    other: "Krona Iceland"
}, {
    id: "SEK",
    displayName: "Krona Sweden",
    symbol: "SEK",
    other: "Krona Sweden"
}, {
    id: "DKK",
    displayName: "Krone Denmark",
    symbol: "DKK",
    other: "Krone Denmark"
}, {
    id: "NOK",
    displayName: "Krone Norway",
    symbol: "NOK",
    other: "Krone Norway"
}, {
    id: "HRK",
    displayName: "Kuna Croatia",
    symbol: "HRK",
    other: "Kuna Croatia"
}, {
    id: "MWK",
    displayName: "Kwacha Malawi",
    symbol: "MWK",
    other: "Kwacha Malawi"
}, {
    id: "ZMW",
    displayName: "Kwacha Zambia",
    symbol: "ZMW",
    other: "Kwacha Zambia"
}, {
    id: "ZMK",
    displayName: "Kwacha Zambia (1968–2012)",
    symbol: "ZMK"
}, {
    id: "AOA",
    displayName: "Kwanza Angola",
    symbol: "AOA",
    other: "Kwanza Angola"
}, {
    id: "MMK",
    displayName: "Kyat Myanma",
    symbol: "MMK",
    other: "Kyat Myanma"
}, {
    id: "GEL",
    displayName: "Lari Georgia",
    symbol: "GEL",
    other: "Lari Georgia"
}, {
    id: "LVL",
    displayName: "Lats Latvia",
    symbol: "LVL",
    other: "Lats Latvia"
}, {
    id: "ALL",
    displayName: "Lek Albania",
    symbol: "ALL",
    other: "Lek Albania"
}, {
    id: "HNL",
    displayName: "Lempira Honduras",
    symbol: "HNL",
    other: "Lempira Honduras"
}, {
    id: "SLL",
    displayName: "Leone Sierra Leone",
    symbol: "SLL",
    other: "Leone Sierra Leone"
}, {
    id: "MDL",
    displayName: "Leu Moldova",
    symbol: "MDL",
    other: "Leu Moldova"
}, {
    id: "RON",
    displayName: "Leu Romania",
    symbol: "RON",
    other: "Leu Romania"
}, {
    id: "BGN",
    displayName: "Lev Bulgaria",
    symbol: "BGN",
    other: "Lev Bulgaria"
}, {
    id: "SZL",
    displayName: "Lilangeni Swazi",
    symbol: "SZL",
    other: "Lilangeni Swazi"
}, {
    id: "TRY",
    displayName: "Lira Turki",
    symbol: "TRY",
    other: "Lira Turki"
}, {
    id: "LTL",
    displayName: "Litas Lithuania",
    symbol: "LTL",
    other: "Litas Lithuania"
}, {
    id: "LSL",
    displayName: "Loti Lesotho"
}, {
    id: "AZN",
    displayName: "Manat Azerbaijan",
    symbol: "AZN",
    other: "Manat Azerbaijan"
}, {
    id: "TMT",
    displayName: "Manat Turkmenistan",
    symbol: "TMT",
    other: "Manat Turkmenistan"
}, {
    id: "BAM",
    displayName: "Mark Boleh Tukar Bosnia-Herzegovina",
    symbol: "BAM",
    other: "Mark Boleh Tukar Bosnia-Herzegovina"
}, {
    id: "XXX",
    displayName: "Mata Wang Tidak Diketahui",
    other: "(mata wang tidak diketahui)"
}, {
    id: "MZN",
    displayName: "Metikal Mozambique",
    symbol: "MZN",
    other: "Metikal Mozambique"
}, {
    id: "NGN",
    displayName: "Naira Nigeria",
    symbol: "NGN",
    other: "Naira Nigeria"
}, {
    id: "BTN",
    displayName: "Ngultrum Bhutan",
    symbol: "BTN",
    other: "Ngultrum Bhutan"
}, {
    id: "PEN",
    displayName: "Nuevo Sol Peru",
    symbol: "PEN",
    other: "Nuevo Sol Peru"
}, {
    id: "MRO",
    displayName: "Ouguiya Mauritania",
    symbol: "MRO",
    other: "Ouguiya Mauritania"
}, {
    id: "MOP",
    displayName: "Pataca Macau",
    symbol: "MOP",
    other: "Pataca Macau"
}, {
    id: "GBP",
    displayName: "Paun British",
    symbol: "£",
    other: "Paun British"
}, {
    id: "GIP",
    displayName: "Paun Gibraltar",
    symbol: "GIP",
    other: "Paun Gibraltar"
}, {
    id: "FKP",
    displayName: "Paun Kepulauan Falkland",
    symbol: "FKP",
    other: "Paun Kepulauan Falkland"
}, {
    id: "LBP",
    displayName: "Paun Lubnan",
    symbol: "LBP",
    other: "Paun Lubnan"
}, {
    id: "EGP",
    displayName: "Paun Mesir",
    symbol: "EGP",
    other: "Paun Mesir"
}, {
    id: "SHP",
    displayName: "Paun Saint Helena",
    symbol: "SHP",
    other: "Paun Saint Helena"
}, {
    id: "SDG",
    displayName: "Paun Sudan",
    symbol: "SDG",
    other: "Paun Sudan"
}, {
    id: "SSP",
    displayName: "Paun Sudan selatan",
    symbol: "SSP",
    other: "Paun Sudan selatan"
}, {
    id: "SYP",
    displayName: "Paun Syria",
    symbol: "SYP",
    other: "Paun Syria"
}, {
    id: "ARS",
    displayName: "Peso Argentina",
    symbol: "ARS",
    other: "Peso Argentina"
}, {
    id: "CUC",
    displayName: "Peso Boleh Tukar Cuba",
    symbol: "CUC",
    other: "Peso Boleh Tukar Cuba"
}, {
    id: "CLP",
    displayName: "Peso Chile",
    symbol: "CLP",
    other: "Peso Chile"
}, {
    id: "COP",
    displayName: "Peso Colombia",
    symbol: "COP",
    other: "Peso Colombia"
}, {
    id: "CUP",
    displayName: "Peso Cuba",
    symbol: "CUP",
    other: "Peso Cuba"
}, {
    id: "DOP",
    displayName: "Peso Dominican",
    symbol: "DOP",
    other: "Peso Dominican"
}, {
    id: "PHP",
    displayName: "Peso Filipina",
    symbol: "PHP",
    other: "Peso Filipina"
}, {
    id: "MXN",
    displayName: "Peso Mexico",
    symbol: "MXN",
    other: "Peso Mexico"
}, {
    id: "BWP",
    displayName: "Pula Botswana",
    symbol: "BWP",
    other: "Pula Botswana"
}, {
    id: "GTQ",
    displayName: "Quetzal Guatemala",
    symbol: "GTQ",
    other: "Quetzal Guatemala"
}, {
    id: "ZAR",
    displayName: "Rand Afrika Selatan",
    symbol: "ZAR",
    other: "Rand Afrika Selatan"
}, {
    id: "BRL",
    displayName: "Real Brazil",
    symbol: "R$",
    other: "Real Brazil"
}, {
    id: "IRR",
    displayName: "Rial Iran",
    symbol: "IRR",
    other: "Rial Iran"
}, {
    id: "OMR",
    displayName: "Rial Oman",
    symbol: "OMR",
    other: "Rial Oman"
}, {
    id: "QAR",
    displayName: "Rial Qatar",
    symbol: "QAR",
    other: "Rial Qatar"
}, {
    id: "YER",
    displayName: "Rial Yaman",
    symbol: "YER",
    other: "Rial Yaman"
}, {
    id: "KHR",
    displayName: "Riel Kemboja",
    symbol: "KHR",
    other: "Riel Kemboja"
}, {
    id: "MYR",
    displayName: "Ringgit Malaysia",
    symbol: "RM",
    other: "Ringgit Malaysia"
}, {
    id: "SAR",
    displayName: "Riyal Saudi",
    symbol: "SAR",
    other: "Riyal Saudi"
}, {
    id: "BYR",
    displayName: "Ruble Belarus",
    symbol: "BYR",
    other: "Ruble Belarus"
}, {
    id: "RUB",
    displayName: "Ruble Rusia",
    symbol: "RUB",
    other: "Ruble Rusia"
}, {
    id: "MVR",
    displayName: "Rufiyaa Maldives",
    symbol: "MVR",
    other: "Rufiyaa Maldives"
}, {
    id: "INR",
    displayName: "Rupee India",
    symbol: "₹",
    other: "Rupee India"
}, {
    id: "MUR",
    displayName: "Rupee Mauritia",
    symbol: "MUR",
    other: "Rupee Mauritia"
}, {
    id: "NPR",
    displayName: "Rupee Nepal",
    symbol: "NPR",
    other: "Rupee Nepal"
}, {
    id: "PKR",
    displayName: "Rupee Pakistan",
    symbol: "PKR",
    other: "Rupee Pakistan"
}, {
    id: "SCR",
    displayName: "Rupee Seychelles",
    symbol: "SCR",
    other: "Rupee Seychelles"
}, {
    id: "LKR",
    displayName: "Rupee Sri Lanka",
    symbol: "LKR",
    other: "Rupee Sri Lanka"
}, {
    id: "IDR",
    displayName: "Rupiah Indonesia",
    symbol: "IDR",
    other: "Rupiah Indonesia"
}, {
    id: "ILS",
    displayName: "Sheqel Baru Israel",
    symbol: "₪",
    other: "Sheqel Baru Israel"
}, {
    id: "KGS",
    displayName: "Som Kyrgystani",
    symbol: "KGS",
    other: "Som Kyrgystani"
}, {
    id: "UZS",
    displayName: "Som Uzbekistan",
    symbol: "UZS",
    other: "Som Uzbekistan"
}, {
    id: "TJS",
    displayName: "Somoni Tajikistan",
    symbol: "TJS",
    other: "Somoni Tajikistan"
}, {
    id: "KES",
    displayName: "Syiling Kenya",
    symbol: "KES",
    other: "Syiling Kenya"
}, {
    id: "SOS",
    displayName: "Syiling Somali",
    symbol: "SOS",
    other: "Syiling Somali"
}, {
    id: "TZS",
    displayName: "Syiling Tanzania",
    symbol: "TZS",
    other: "Syiling Tanzania"
}, {
    id: "UGX",
    displayName: "Syiling Uganda",
    symbol: "UGX",
    other: "Syiling Uganda"
}, {
    id: "BDT",
    displayName: "Taka Bangladesh",
    symbol: "BDT",
    other: "Taka Bangladesh"
}, {
    id: "WST",
    displayName: "Tala Samoa",
    symbol: "WST",
    other: "Tala Samoa"
}, {
    id: "KZT",
    displayName: "Tenge Kazakhstan",
    symbol: "KZT",
    other: "Tenge Kazakhstan"
}, {
    id: "TOP",
    displayName: "Tongan Paʻanga",
    symbol: "TOP",
    other: "Tongan Paʻanga"
}, {
    id: "MNT",
    displayName: "Tugrik Mongolia",
    symbol: "MNT",
    other: "Tugrik Mongolia"
}, {
    id: "UYU",
    displayName: "UYU",
    symbol: "UYU",
    other: "Peso Uruguay"
}, {
    id: "VUV",
    displayName: "Vatu Vanuatu",
    symbol: "VUV",
    other: "Vatu Vanuatu"
}, {
    id: "KRW",
    displayName: "Won Korea Selatan",
    symbol: "₩",
    other: "Won Korea Selatan"
}, {
    id: "KPW",
    displayName: "Won Korea Utara",
    symbol: "KPW",
    other: "Won Korea Utara"
}, {
    id: "JPY",
    displayName: "Yen Jepun",
    symbol: "JP¥",
    other: "Yen Jepun"
}, {
    id: "CNY",
    displayName: "Yuan Cina",
    symbol: "CN¥",
    other: "Yuan Cina"
}, {
    id: "PLN",
    displayName: "Zloty Poland",
    symbol: "PLN",
    other: "Zloty Poland"
} ];

module.exports = inter;