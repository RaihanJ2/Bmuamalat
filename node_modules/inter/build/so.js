function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _3s391 = [ "R1", "R2", "R3", "R4" ], _3s392 = {
    displayName: "Qarni"
}, _3s393 = {
    all: {
        leap: "{0}bis"
    }
}, _3s394 = {
    one: "¤0K",
    other: "¤0K"
}, _3s395 = {
    one: "¤0M",
    other: "¤0M"
}, _3s396 = {
    one: "¤0G",
    other: "¤0G"
}, _3s397 = {
    one: "¤0T",
    other: "¤0T"
}, _3s398 = {
    displayName: "sn./gn."
}, _3s399 = {
    one: "¤00K",
    other: "¤00K"
}, _3s3910 = {
    one: "¤00M",
    other: "¤00M"
}, _3s3911 = {
    one: "¤00G",
    other: "¤00G"
}, _3s3912 = {
    one: "¤00T",
    other: "¤00T"
}, _3s3913 = {
    a: "h a – h a",
    h: "h–h a"
}, _3s3914 = [ "Before R.O.C.", "R.O.C." ], _3s3915 = {
    one: "¤000K",
    other: "¤000K"
}, _3s3916 = {
    one: "¤000M",
    other: "¤000M"
}, _3s3917 = {
    one: "¤000G",
    other: "¤000G"
}, _3s3918 = {
    one: "¤000T",
    other: "¤000T"
}, _3s3919 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _3s3920 = [ "A", "I", "T", "A", "K", "J", "S" ], _3s3921 = {
    displayName: "Xadka waqtiga"
}, _3s3922 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _3s3923 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _3s3924 = {
    M: "MM/y – MM/y",
    y: "MM/y – MM/y"
}, _3s3925 = {
    M: "MMM–MMM y",
    y: "MMM y – MMM y"
}, _3s3926 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _3s3927 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _3s3928 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _3s3929 = {
    d: "dd–dd MMM",
    M: "dd MMM – dd MMM"
}, _3s3930 = {
    "0": "Maanta",
    "1": "Berri",
    "-1": "Shalay"
}, _3s3931 = {
    displayName: "Maalinta toddobaadka"
}, _3s3932 = {
    d: "dd/MM – dd/MM",
    M: "dd/MM – dd/MM"
}, _3s3933 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _3s3934 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _3s3935 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _3s3936 = {
    M: "G y MMMM–MMMM",
    y: "G y MMMM – y MMMM"
}, _3s3937 = [ "Axd", "Isn", "Tal", "Arb", "Kha", "Jim", "Sab" ], _3s3938 = {
    "0": "this year",
    "1": "next year",
    "-1": "last year"
}, _3s3939 = {
    "0": "this week",
    "1": "next week",
    "-1": "last week"
}, _3s3940 = {
    future: {
        other: "+{0} y"
    },
    past: {
        other: "-{0} y"
    }
}, _3s3941 = {
    future: {
        other: "+{0} m"
    },
    past: {
        other: "-{0} m"
    }
}, _3s3942 = {
    future: {
        other: "+{0} w"
    },
    past: {
        other: "-{0} w"
    }
}, _3s3943 = {
    future: {
        other: "+{0} d"
    },
    past: {
        other: "-{0} d"
    }
}, _3s3944 = {
    future: {
        other: "+{0} h"
    },
    past: {
        other: "-{0} h"
    }
}, _3s3945 = {
    future: {
        other: "+{0} s"
    },
    past: {
        other: "-{0} s"
    }
}, _3s3946 = {
    future: {
        other: "+{0} Q"
    },
    past: {
        other: "-{0} Q"
    }
}, _3s3947 = {
    d: "E, dd/MM – E, dd/MM",
    M: "E, dd/MM – E, dd/MM"
}, _3s3948 = {
    d: "E, dd – E, dd MMM",
    M: "E, dd MMM – E, dd MMM"
}, _3s3949 = [ "K", "L", "S", "A", "S", "L", "T", "S", "S", "T", "K", "L" ], _3s3950 = {
    "0": "this month",
    "1": "next month",
    "-1": "last month"
}, _3s3951 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _3s3952 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _3s3953 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _3s3954 = {
    future: {
        other: "+{0} min"
    },
    past: {
        other: "-{0} min"
    }
}, _3s3955 = {
    "0": "this Sunday",
    "1": "next Sunday",
    "-1": "last Sunday"
}, _3s3956 = {
    "0": "this Monday",
    "1": "next Monday",
    "-1": "last Monday"
}, _3s3957 = {
    "0": "this Friday",
    "1": "next Friday",
    "-1": "last Friday"
}, _3s3958 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _3s3959 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _3s3960 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _3s3961 = {
    "0": "this Tuesday",
    "1": "next Tuesday",
    "-1": "last Tuesday"
}, _3s3962 = [ "Rubaca 1aad", "Rubaca 2aad", "Rubaca 3aad", "Rubaca 4aad" ], _3s3963 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _3s3964 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _3s3965 = {
    "0": "this Thursday",
    "1": "next Thursday",
    "-1": "last Thursday"
}, _3s3966 = {
    "0": "this Saturday",
    "1": "next Saturday",
    "-1": "last Saturday"
}, _3s3967 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _3s3968 = {
    "0": "this Wednesday",
    "1": "next Wednesday",
    "-1": "last Wednesday"
}, _3s3969 = {
    id: "FJ",
    displayName: "Fiji",
    regionId: "054",
    hasTimeZones: true
}, _3s3970 = {
    id: "GN",
    displayName: "Gini",
    regionId: "011",
    hasTimeZones: true
}, _3s3971 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _3s3972 = {
    id: "TD",
    displayName: "Jaad",
    regionId: "017",
    hasTimeZones: true
}, _3s3973 = {
    id: "CL",
    displayName: "Jili",
    regionId: "005",
    hasTimeZones: true
}, _3s3974 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _3s3975 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _3s3976 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _3s3977 = [ "Axad", "Isniin", "Talaado", "Arbaco", "Khamiis", "Jimco", "Sabti" ], _3s3978 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _3s3979 = {
    id: "GH",
    displayName: "Gaana",
    regionId: "011",
    hasTimeZones: true
}, _3s3980 = {
    id: "HT",
    displayName: "Hayti",
    regionId: "029",
    hasTimeZones: true
}, _3s3981 = {
    id: "CG",
    displayName: "Kongo",
    regionId: "017",
    hasTimeZones: true
}, _3s3982 = {
    id: "CU",
    displayName: "Kuuba",
    regionId: "029",
    hasTimeZones: true
}, _3s3983 = {
    id: "ML",
    displayName: "Maali",
    regionId: "011",
    hasTimeZones: true
}, _3s3984 = {
    id: "EG",
    displayName: "Masar",
    regionId: "015",
    hasTimeZones: true
}, _3s3985 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _3s3986 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _3s3987 = {
    id: "QA",
    displayName: "Qadar",
    regionId: "145",
    hasTimeZones: true
}, _3s3988 = {
    id: "RU",
    displayName: "Ruush",
    regionId: "151",
    hasTimeZones: true
}, _3s3989 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _3s3990 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _3s3991 = {
    id: "TG",
    displayName: "Toogo",
    regionId: "011",
    hasTimeZones: true
}, _3s3992 = {
    id: "TR",
    displayName: "Turki",
    regionId: "145",
    hasTimeZones: true
}, _3s3993 = {
    id: "JO",
    displayName: "Urdun",
    regionId: "145",
    hasTimeZones: true
}, _3s3994 = {
    id: "YE",
    displayName: "Yaman",
    regionId: "145",
    hasTimeZones: true
}, _3s3995 = {
    d: "dd–dd MMM y",
    M: "dd MMM – dd MMM y",
    y: "dd MMM y – dd MMM y"
}, _3s3996 = {
    relative: _3s3955
}, _3s3997 = {
    relative: _3s3956
}, _3s3998 = {
    relative: _3s3957
}, _3s3999 = {
    id: "AD",
    displayName: "Andora",
    regionId: "039",
    hasTimeZones: true
}, _3s39100 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _3s39101 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _3s39102 = {
    id: "BE",
    displayName: "Biljam",
    regionId: "155",
    hasTimeZones: true
}, _3s39103 = {
    id: "BJ",
    displayName: "Biniin",
    regionId: "011",
    hasTimeZones: true
}, _3s39104 = {
    id: "IQ",
    displayName: "Ciraaq",
    regionId: "145",
    hasTimeZones: true
}, _3s39105 = {
    id: "OM",
    displayName: "Cumaan",
    regionId: "145",
    hasTimeZones: true
}, _3s39106 = {
    id: "GR",
    displayName: "Giriig",
    regionId: "039",
    hasTimeZones: true
}, _3s39107 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _3s39108 = {
    id: "IR",
    displayName: "Iiraan",
    regionId: "034",
    hasTimeZones: true
}, _3s39109 = {
    id: "ES",
    displayName: "Isbeyn",
    regionId: "039",
    hasTimeZones: true
}, _3s39110 = {
    id: "JP",
    displayName: "Jabaan",
    regionId: "030",
    hasTimeZones: true
}, _3s39111 = {
    id: "DE",
    displayName: "Jarmal",
    regionId: "155",
    hasTimeZones: true
}, _3s39112 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _3s39113 = {
    id: "KW",
    displayName: "Kuwayt",
    regionId: "145",
    hasTimeZones: true
}, _3s39114 = {
    id: "MT",
    displayName: "Maalda",
    regionId: "039",
    hasTimeZones: true
}, _3s39115 = {
    id: "NE",
    displayName: "Nayjer",
    regionId: "011",
    hasTimeZones: true
}, _3s39116 = {
    id: "NP",
    displayName: "Nebaal",
    regionId: "034",
    hasTimeZones: true
}, _3s39117 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _3s39118 = {
    id: "CY",
    displayName: "Qubrus",
    regionId: "145",
    hasTimeZones: true
}, _3s39119 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _3s39120 = {
    id: "UA",
    displayName: "Ukrayn",
    regionId: "151",
    hasTimeZones: true
}, _3s39121 = {
    id: "AO",
    displayName: "Angoola",
    regionId: "017",
    hasTimeZones: true
}, _3s39122 = {
    id: "BH",
    displayName: "Baxreyn",
    regionId: "145",
    hasTimeZones: true
}, _3s39123 = {
    id: "BY",
    displayName: "Belarus",
    regionId: "151",
    hasTimeZones: true
}, _3s39124 = {
    id: "PL",
    displayName: "Booland",
    regionId: "151",
    hasTimeZones: true
}, _3s39125 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _3s39126 = {
    id: "DK",
    displayName: "Denmark",
    regionId: "154",
    hasTimeZones: true
}, _3s39127 = {
    id: "FI",
    displayName: "Finland",
    regionId: "154",
    hasTimeZones: true
}, _3s39128 = {
    id: "GA",
    displayName: "Gaaboon",
    regionId: "017",
    hasTimeZones: true
}, _3s39129 = {
    id: "GM",
    displayName: "Gambiya",
    regionId: "011",
    hasTimeZones: true
}, _3s39130 = {
    id: "HU",
    displayName: "Hangeri",
    regionId: "151",
    hasTimeZones: true
}, _3s39131 = {
    id: "IN",
    displayName: "Hindiya",
    regionId: "034",
    hasTimeZones: true
}, _3s39132 = {
    id: "DJ",
    displayName: "Jabuuti",
    regionId: "014",
    hasTimeZones: true
}, _3s39133 = {
    id: "JM",
    displayName: "Jameyka",
    regionId: "029",
    hasTimeZones: true
}, _3s39134 = {
    id: "KE",
    displayName: "Kiiniya",
    regionId: "014",
    hasTimeZones: true
}, _3s39135 = {
    id: "LV",
    displayName: "Latfiya",
    regionId: "154",
    hasTimeZones: true
}, _3s39136 = {
    id: "LY",
    displayName: "Liibiya",
    regionId: "015",
    hasTimeZones: true
}, _3s39137 = {
    id: "LS",
    displayName: "Losooto",
    regionId: "018",
    hasTimeZones: true
}, _3s39138 = {
    id: "LB",
    displayName: "Lubnaan",
    regionId: "145",
    hasTimeZones: true
}, _3s39139 = {
    id: "MW",
    displayName: "Malaawi",
    regionId: "014",
    hasTimeZones: true
}, _3s39140 = {
    id: "MA",
    displayName: "Marooko",
    regionId: "015",
    hasTimeZones: true
}, _3s39141 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _3s39142 = {
    id: "MX",
    displayName: "Meksiko",
    regionId: "013",
    hasTimeZones: true
}, _3s39143 = {
    id: "MD",
    displayName: "Moldofa",
    regionId: "151",
    hasTimeZones: true
}, _3s39144 = {
    id: "MC",
    displayName: "Moonako",
    regionId: "155",
    hasTimeZones: true
}, _3s39145 = {
    id: "MM",
    displayName: "Myanmar",
    regionId: "035",
    hasTimeZones: true
}, _3s39146 = {
    id: "RW",
    displayName: "Ruwanda",
    regionId: "014",
    hasTimeZones: true
}, _3s39147 = {
    id: "RE",
    displayName: "Réunion",
    regionId: "014",
    hasTimeZones: true
}, _3s39148 = {
    id: "SD",
    displayName: "Suudaan",
    regionId: "015",
    hasTimeZones: true
}, _3s39149 = {
    id: "SY",
    displayName: "Suuriya",
    regionId: "145",
    hasTimeZones: true
}, _3s39150 = {
    id: "TW",
    displayName: "Taywaan",
    regionId: "030",
    hasTimeZones: true
}, _3s39151 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _3s39152 = {
    id: "UG",
    displayName: "Ugaanda",
    regionId: "014",
    hasTimeZones: true
}, _3s39153 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _3s39154 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _3s39155 = {
    id: "IE",
    displayName: "Ayrlaand",
    regionId: "154",
    hasTimeZones: true
}, _3s39156 = {
    id: "BS",
    displayName: "Bahaamas",
    regionId: "029",
    hasTimeZones: true
}, _3s39157 = {
    id: "BM",
    displayName: "Bermuuda",
    regionId: "021",
    hasTimeZones: true
}, _3s39158 = {
    id: "BR",
    displayName: "Braasiil",
    regionId: "005",
    hasTimeZones: true
}, _3s39159 = {
    id: "PH",
    displayName: "Filibiin",
    regionId: "035",
    hasTimeZones: true
}, _3s39160 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _3s39161 = {
    id: "IS",
    displayName: "Iislaand",
    regionId: "154",
    hasTimeZones: true
}, _3s39162 = {
    id: "SE",
    displayName: "Iswidhan",
    regionId: "154",
    hasTimeZones: true
}, _3s39163 = {
    id: "ET",
    displayName: "Itoobiya",
    regionId: "014",
    hasTimeZones: true
}, _3s39164 = {
    id: "GE",
    displayName: "Joorjiya",
    regionId: "145",
    hasTimeZones: true
}, _3s39165 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _3s39166 = {
    id: "KM",
    displayName: "Komooros",
    regionId: "014",
    hasTimeZones: true
}, _3s39167 = {
    id: "MY",
    displayName: "Malaysia",
    regionId: "035",
    hasTimeZones: true
}, _3s39168 = {
    id: "NO",
    displayName: "Noorweey",
    regionId: "154",
    hasTimeZones: true
}, _3s39169 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _3s39170 = {
    id: "PN",
    displayName: "Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _3s39171 = {
    id: "ZM",
    displayName: "Saambiya",
    regionId: "014",
    hasTimeZones: true
}, _3s39172 = {
    id: "CN",
    displayName: "Shiinaha",
    regionId: "030",
    hasTimeZones: true
}, _3s39173 = {
    id: "SN",
    displayName: "Sinigaal",
    regionId: "011",
    hasTimeZones: true
}, _3s39174 = {
    id: "SC",
    displayName: "Sishelis",
    regionId: "014",
    hasTimeZones: true
}, _3s39175 = {
    id: "SK",
    displayName: "Slovakia",
    regionId: "151",
    hasTimeZones: true
}, _3s39176 = {
    id: "SI",
    displayName: "Slovenia",
    regionId: "039",
    hasTimeZones: true
}, _3s39177 = {
    id: "SR",
    displayName: "Suriname",
    regionId: "005",
    hasTimeZones: true
}, _3s39178 = {
    id: "IT",
    displayName: "Talyaani",
    regionId: "039",
    hasTimeZones: true
}, _3s39179 = {
    id: "TH",
    displayName: "Taylaand",
    regionId: "035",
    hasTimeZones: true
}, _3s39180 = {
    relative: _3s3961
}, _3s39181 = {
    id: "AL",
    displayName: "Albaaniya",
    regionId: "039",
    hasTimeZones: true
}, _3s39182 = {
    id: "DZ",
    displayName: "Aljeeriya",
    regionId: "015",
    hasTimeZones: true
}, _3s39183 = {
    id: "AR",
    displayName: "Arjantiin",
    regionId: "005",
    hasTimeZones: true
}, _3s39184 = {
    id: "AM",
    displayName: "Armeeniya",
    regionId: "145",
    hasTimeZones: true
}, _3s39185 = {
    id: "AT",
    displayName: "Awsteriya",
    regionId: "155",
    hasTimeZones: true
}, _3s39186 = {
    id: "PK",
    displayName: "Bakistaan",
    regionId: "034",
    hasTimeZones: true
}, _3s39187 = {
    id: "BO",
    displayName: "Boliifiya",
    regionId: "005",
    hasTimeZones: true
}, _3s39188 = {
    id: "PT",
    displayName: "Bortuqaal",
    regionId: "039",
    hasTimeZones: true
}, _3s39189 = {
    id: "BN",
    displayName: "Buruneeya",
    regionId: "035",
    hasTimeZones: true
}, _3s39190 = {
    id: "DM",
    displayName: "Domeenika",
    regionId: "029",
    hasTimeZones: true
}, _3s39191 = {
    id: "EE",
    displayName: "Estooniya",
    regionId: "154",
    hasTimeZones: true
}, _3s39192 = {
    id: "VA",
    displayName: "Faatikaan",
    regionId: "039",
    hasTimeZones: true
}, _3s39193 = {
    id: "FR",
    displayName: "Faransiis",
    regionId: "155",
    hasTimeZones: true
}, _3s39194 = {
    id: "VN",
    displayName: "Fiyetnaam",
    regionId: "035",
    hasTimeZones: true
}, _3s39195 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _3s39196 = {
    id: "GL",
    displayName: "Greenland",
    regionId: "021",
    hasTimeZones: true
}, _3s39197 = {
    id: "EC",
    displayName: "Ikuwadoor",
    regionId: "005",
    hasTimeZones: true
}, _3s39198 = {
    id: "IL",
    displayName: "Israaʼiil",
    regionId: "145",
    hasTimeZones: true
}, _3s39199 = {
    id: "CM",
    displayName: "Kaameruun",
    regionId: "017",
    hasTimeZones: true
}, _3s39200 = {
    id: "CO",
    displayName: "Kolombiya",
    regionId: "005",
    hasTimeZones: true
}, _3s39201 = {
    id: "MZ",
    displayName: "Musambiig",
    regionId: "014",
    hasTimeZones: true
}, _3s39202 = {
    id: "NA",
    displayName: "Namiibiya",
    regionId: "018",
    hasTimeZones: true
}, _3s39203 = {
    id: "RO",
    displayName: "Rumaaniya",
    regionId: "151",
    hasTimeZones: true
}, _3s39204 = {
    id: "ZW",
    displayName: "Simbaabwe",
    regionId: "014",
    hasTimeZones: true
}, _3s39205 = {
    id: "SG",
    displayName: "Singaboor",
    regionId: "035",
    hasTimeZones: true
}, _3s39206 = {
    id: "TN",
    displayName: "Tuniisiya",
    regionId: "015",
    hasTimeZones: true
}, _3s39207 = {
    id: "UY",
    displayName: "Uruguwaay",
    regionId: "005",
    hasTimeZones: true
}, _3s39208 = {
    d: "dd/MM/y – dd/MM/y",
    M: "dd/MM/y – dd/MM/y",
    y: "dd/MM/y – dd/MM/y"
}, _3s39209 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _3s39210 = {
    id: "AZ",
    displayName: "Azerbajaan",
    regionId: "145",
    hasTimeZones: true
}, _3s39211 = {
    id: "BB",
    displayName: "Baarbadoos",
    regionId: "029",
    hasTimeZones: true
}, _3s39212 = {
    id: "BW",
    displayName: "Botuswaana",
    regionId: "018",
    hasTimeZones: true
}, _3s39213 = {
    id: "BG",
    displayName: "Bulgaariya",
    regionId: "151",
    hasTimeZones: true
}, _3s39214 = {
    id: "ER",
    displayName: "Eretereeya",
    regionId: "014",
    hasTimeZones: true
}, _3s39215 = {
    id: "GD",
    displayName: "Giriinaada",
    regionId: "029",
    hasTimeZones: true
}, _3s39216 = {
    id: "GP",
    displayName: "Guadeloupe",
    regionId: "029",
    hasTimeZones: true
}, _3s39217 = {
    id: "KH",
    displayName: "Kamboodiya",
    regionId: "035",
    hasTimeZones: true
}, _3s39218 = {
    id: "KG",
    displayName: "Kirgistaan",
    regionId: "143",
    hasTimeZones: true
}, _3s39219 = {
    id: "LR",
    displayName: "Laybeeriya",
    regionId: "011",
    hasTimeZones: true
}, _3s39220 = {
    id: "MV",
    displayName: "Maaldiqeen",
    regionId: "034",
    hasTimeZones: true
}, _3s39221 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _3s39222 = {
    id: "US",
    displayName: "Maraykanka",
    regionId: "021",
    hasTimeZones: true
}, _3s39223 = {
    id: "MQ",
    displayName: "Martinique",
    regionId: "029",
    hasTimeZones: true
}, _3s39224 = {
    id: "FM",
    displayName: "Micronesia",
    regionId: "057",
    hasTimeZones: true
}, _3s39225 = {
    id: "MN",
    displayName: "Mongooliya",
    regionId: "030",
    hasTimeZones: true
}, _3s39226 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _3s39227 = {
    id: "NG",
    displayName: "Nayjeeriya",
    regionId: "011",
    hasTimeZones: true
}, _3s39228 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _3s39229 = {
    id: "LK",
    displayName: "Sirilaanka",
    regionId: "034",
    hasTimeZones: true
}, _3s39230 = {
    id: "SO",
    displayName: "Soomaaliya",
    regionId: "014",
    hasTimeZones: true
}, _3s39231 = {
    id: "TJ",
    displayName: "Tajikistan",
    regionId: "143",
    hasTimeZones: true
}, _3s39232 = {
    id: "TZ",
    displayName: "Tansaaniya",
    regionId: "014",
    hasTimeZones: true
}, _3s39233 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _3s39234 = {
    id: "VE",
    displayName: "Fenisuweela",
    regionId: "005",
    hasTimeZones: true
}, _3s39235 = {
    id: "GW",
    displayName: "Gini-Bisaaw",
    regionId: "011",
    hasTimeZones: true
}, _3s39236 = {
    id: "ID",
    displayName: "Indoneesiya",
    regionId: "035",
    hasTimeZones: true
}, _3s39237 = {
    id: "CI",
    displayName: "Ivory coast",
    regionId: "011",
    hasTimeZones: true
}, _3s39238 = {
    id: "HR",
    displayName: "Korweeshiya",
    regionId: "039",
    hasTimeZones: true
}, _3s39239 = {
    id: "CR",
    displayName: "Kosta Riika",
    regionId: "013",
    hasTimeZones: true
}, _3s39240 = {
    id: "LT",
    displayName: "Lituweeniya",
    regionId: "154",
    hasTimeZones: true
}, _3s39241 = {
    id: "LU",
    displayName: "Luksemboorg",
    regionId: "155",
    hasTimeZones: true
}, _3s39242 = {
    id: "MK",
    displayName: "Makadooniya",
    regionId: "039",
    hasTimeZones: true
}, _3s39243 = {
    id: "MU",
    displayName: "Murishiyoos",
    regionId: "014",
    hasTimeZones: true
}, _3s39244 = {
    id: "MR",
    displayName: "Muritaaniya",
    regionId: "011",
    hasTimeZones: true
}, _3s39245 = {
    id: "NL",
    displayName: "Netherlands",
    regionId: "155",
    hasTimeZones: true
}, _3s39246 = {
    id: "NI",
    displayName: "Nikaraaguwa",
    regionId: "013",
    hasTimeZones: true
}, _3s39247 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _3s39248 = {
    id: "LC",
    displayName: "Saint Lucia",
    regionId: "029",
    hasTimeZones: true
}, _3s39249 = {
    id: "SL",
    displayName: "Siraaliyoon",
    regionId: "011",
    hasTimeZones: true
}, _3s39250 = {
    relative: _3s3965
}, _3s39251 = {
    relative: _3s3966
}, _3s39252 = {
    id: "AF",
    displayName: "Afgaanistaan",
    regionId: "034",
    hasTimeZones: true
}, _3s39253 = {
    id: "AU",
    displayName: "Awstaraaliya",
    regionId: "053",
    hasTimeZones: true
}, _3s39254 = {
    id: "GT",
    displayName: "Guwaatamaala",
    regionId: "013",
    hasTimeZones: true
}, _3s39255 = {
    id: "SZ",
    displayName: "Iswaasilaand",
    regionId: "018",
    hasTimeZones: true
}, _3s39256 = {
    id: "NZ",
    displayName: "Neyuusilaand",
    regionId: "053",
    hasTimeZones: true
}, _3s39257 = {
    id: "SH",
    displayName: "Saint Helena",
    regionId: "011",
    hasTimeZones: true
}, _3s39258 = {
    id: "CH",
    displayName: "Swiiserlaand",
    regionId: "155",
    hasTimeZones: true
}, _3s39259 = {
    id: "TL",
    displayName: "Timorka bari",
    regionId: "035",
    hasTimeZones: true
}, _3s39260 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _3s39261 = {
    id: "UZ",
    displayName: "Uusbakistaan",
    regionId: "143",
    hasTimeZones: true
}, _3s39262 = {
    id: "GF",
    displayName: "French Guiana",
    regionId: "005",
    hasTimeZones: true
}, _3s39263 = {
    id: "KZ",
    displayName: "Kasaakhistaan",
    regionId: "143",
    hasTimeZones: true
}, _3s39264 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _3s39265 = {
    id: "NC",
    displayName: "New Caledonia",
    regionId: "054",
    hasTimeZones: true
}, _3s39266 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _3s39267 = {
    id: "BD",
    displayName: "Bangaaladheesh",
    regionId: "034",
    hasTimeZones: true
}, _3s39268 = {
    id: "BF",
    displayName: "Burkiina Faaso",
    regionId: "011",
    hasTimeZones: true
}, _3s39269 = {
    id: "KY",
    displayName: "Cayman Islands",
    regionId: "029",
    hasTimeZones: true
}, _3s39270 = {
    id: "ZA",
    displayName: "Koonfur Afrika",
    regionId: "018",
    hasTimeZones: true
}, _3s39271 = {
    id: "NF",
    displayName: "Norfolk Island",
    regionId: "053",
    hasTimeZones: true
}, _3s39272 = {
    id: "GB",
    displayName: "United Kingdom",
    regionId: "154",
    hasTimeZones: true
}, _3s39273 = {
    relative: _3s3968
}, _3s39274 = {
    id: "IO",
    displayName: "British Indian Ocean Territory",
    hasTimeZones: true
}, _3s39275 = {
    id: "CK",
    displayName: "Jaziiradda Cook",
    regionId: "061",
    hasTimeZones: true
}, _3s39276 = {
    id: "SS",
    displayName: "Koonfur Suudaan",
    regionId: "014",
    hasTimeZones: true
}, _3s39277 = {
    id: "AS",
    displayName: "Samowa Ameerika",
    regionId: "061",
    hasTimeZones: true
}, _3s39278 = {
    id: "SB",
    displayName: "Solomon Islands",
    regionId: "054",
    hasTimeZones: true
}, _3s39279 = [ "Kob", "Lab", "Sad", "Afr", "Sha", "Lix", "Tod", "Sid", "Sag", "Tob", "KIT", "LIT" ], _3s39280 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _3s39281 = {
    id: "PF",
    displayName: "French Polynesia",
    regionId: "061",
    hasTimeZones: true
}, _3s39282 = {
    id: "MH",
    displayName: "Marshall Islands",
    regionId: "057",
    hasTimeZones: true
}, _3s39283 = {
    id: "PG",
    displayName: "Papua New Guinea",
    regionId: "054",
    hasTimeZones: true
}, _3s39284 = {
    id: "SA",
    displayName: "Sacuudi Carabiya",
    regionId: "145",
    hasTimeZones: true
}, _3s39285 = {
    id: "GQ",
    displayName: "Equatorial Guinea",
    regionId: "017",
    hasTimeZones: true
}, _3s39286 = {
    id: "CZ",
    displayName: "Jamhuuriyadda Jek",
    regionId: "151",
    hasTimeZones: true
}, _3s39287 = {
    id: "KP",
    displayName: "Kuuriyada Waqooyi",
    regionId: "030",
    hasTimeZones: true
}, _3s39288 = {
    id: "WF",
    displayName: "Wallis and Futuna",
    regionId: "061",
    hasTimeZones: true
}, _3s39289 = {
    id: "CV",
    displayName: "Cape Verde Islands",
    regionId: "011",
    hasTimeZones: true
}, _3s39290 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _3s39291 = {
    id: "AG",
    displayName: "Antigua iyo Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _3s39292 = {
    id: "TT",
    displayName: "Trinidad and Tobago",
    regionId: "029",
    hasTimeZones: true
}, _3s39293 = {
    id: "VI",
    displayName: "U.S. Virgin Islands",
    regionId: "029",
    hasTimeZones: true
}, _3s39294 = {
    id: "BA",
    displayName: "Bosniya Hersigoviina",
    regionId: "039",
    hasTimeZones: true
}, _3s39295 = {
    id: "FK",
    displayName: "Jaziiradaha Fooklaan",
    regionId: "005",
    hasTimeZones: true
}, _3s39296 = {
    id: "KR",
    displayName: "Kuuriyada Koonfureed",
    regionId: "030",
    hasTimeZones: true
}, _3s39297 = {
    id: "151",
    displayName: "Yurubta Bari",
    hasTimeZones: false,
    parentRegionId: "150"
}, _3s39298 = {
    id: "030",
    displayName: "Aasiyada Bari",
    hasTimeZones: false,
    parentRegionId: "142"
}, _3s39299 = {
    id: "014",
    displayName: "Afrikada Bari",
    hasTimeZones: false,
    parentRegionId: "002"
}, _3s39300 = {
    id: "KN",
    displayName: "Saint Kitts and Nevis",
    regionId: "029",
    hasTimeZones: true
}, _3s39301 = {
    id: "ST",
    displayName: "São Tomé and Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _3s39302 = {
    id: "VG",
    displayName: "British Virgin Islands",
    regionId: "029",
    hasTimeZones: true
}, _3s39303 = {
    id: "DO",
    displayName: "Jamhuuriyadda Domeenika",
    regionId: "029",
    hasTimeZones: true
}, _3s39304 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _3s39305 = {
    id: "MP",
    displayName: "Northern Mariana Islands",
    regionId: "057",
    hasTimeZones: true
}, _3s39306 = {
    id: "TC",
    displayName: "Turks and Caicos Islands",
    regionId: "029",
    hasTimeZones: true
}, _3s39307 = {
    id: "PM",
    displayName: "Saint Pierre and Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _3s39308 = {
    displayName: "Saacad",
    relativeTime: _3s3944
}, _3s39309 = {
    d: "E, dd/MM/y – E, dd/MM/y",
    M: "E, dd/MM/y – E, dd/MM/y",
    y: "E, dd/MM/y – E, dd/MM/y"
}, _3s39310 = {
    abbreviated: {
        am: "sn.",
        pm: "gn."
    },
    narrow: {
        am: "sn.",
        pm: "gn."
    },
    wide: {
        am: "sn.",
        pm: "gn."
    }
}, _3s39311 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _3s39312 = {
    id: "CF",
    displayName: "Jamhuuriyadda Afrikada Dhexe",
    regionId: "017",
    hasTimeZones: true
}, _3s39313 = {
    id: "AE",
    displayName: "Imaaraadka Carabta ee Midoobay",
    regionId: "145",
    hasTimeZones: true
}, _3s39314 = {
    displayName: "Daqiiqad",
    relativeTime: _3s3954
}, _3s39315 = {
    id: "VC",
    displayName: "Saint Vincent and the Grenadines",
    regionId: "029",
    hasTimeZones: true
}, _3s39316 = {
    id: "PS",
    displayName: "Falastiin Daanka galbeed iyo Qasa",
    regionId: "145",
    hasTimeZones: true
}, _3s39317 = {
    id: "CD",
    displayName: "Jamhuuriyadda Dimuquraadiga Kongo",
    regionId: "017",
    hasTimeZones: true
}, _3s39318 = {
    d: "E, MMM dd – E, MMM dd, y",
    M: "E, MMM dd – E, MMM dd, y",
    y: "E, MMM dd, y – E, MMM dd, y"
}, _3s39319 = {
    displayName: "Il biriqsi",
    relative: [ "now" ],
    relativeTime: _3s3945
}, _3s39320 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _3s39321 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _3s39322 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _3s39323 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _3s39324 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _3s39325 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _3s39326 = {
    abbreviated: _3s391,
    narrow: [ "1", "2", "3", "4" ],
    wide: _3s3962
}, _3s39327 = {
    displayName: "Maalin",
    relative: _3s3930,
    relativeTime: _3s3943
}, _3s39328 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _3s39329 = {
    displayName: "Sanad",
    relative: _3s3938,
    relativeTime: _3s3940
}, _3s39330 = {
    displayName: "Bil",
    relative: _3s3950,
    relativeTime: _3s3941
}, _3s39331 = {
    displayName: "Toddobaad",
    relative: _3s3939,
    relativeTime: _3s3942
}, _3s39332 = {
    displayName: "Quarter",
    relative: _3s3960,
    relativeTime: _3s3946
}, _3s39333 = {
    decimal: ".",
    group: ",",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _3s39334 = {
    decimal: ".",
    group: ",",
    list: "؛",
    percentSign: "٪",
    plusSign: "‏+",
    minusSign: "‏-",
    exponential: "اس",
    superscriptingExponent: "×",
    perMille: "؉",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _3s39335 = {
    symbols: _3s39334
}, _3s39336 = {
    format: _3s39310,
    standAlone: _3s39310
}, _3s39337 = {
    format: _3s39266,
    numeric: _3s393,
    standAlone: _3s39266
}, _3s39338 = {
    abbreviated: _3s3937,
    narrow: _3s3920,
    wide: _3s3977,
    "short": _3s3937
}, _3s39339 = [ "Bisha Koobaad", "Bisha Labaad", "Bisha Saddexaad", "Bisha Afraad", "Bisha Shanaad", "Bisha Lixaad", "Bisha Todobaad", "Bisha Sideedaad", "Bisha Sagaalaad", "Bisha Tobnaad", "Bisha Kow iyo Tobnaad", "Bisha Laba iyo Tobnaad" ], _3s39340 = {
    symbols: _3s39334,
    digits: "renderSpelloutCardinal"
}, _3s39341 = {
    "1000": {
        other: "0K"
    },
    "10000": {
        other: "00K"
    },
    "100000": {
        other: "000K"
    },
    "1000000": {
        other: "0M"
    },
    "10000000": {
        other: "00M"
    },
    "100000000": {
        other: "000M"
    },
    "1000000000": {
        other: "0G"
    },
    "10000000000": {
        other: "00G"
    },
    "100000000000": {
        other: "000G"
    },
    "1000000000000": {
        other: "0T"
    },
    "10000000000000": {
        other: "00T"
    },
    "100000000000000": {
        other: "000T"
    }
}, _3s39342 = {
    symbols: _3s39334,
    digits: "renderSpelloutCardinalFinancial"
}, _3s39343 = {
    abbreviated: _3s39280,
    narrow: _3s3958,
    wide: _3s39280
}, _3s39344 = {
    abbreviated: _3s39290,
    narrow: _3s39290,
    wide: _3s39290
}, _3s39345 = {
    format: _3s39344
}, _3s39346 = {
    format: _3s39326,
    standAlone: _3s39326
}, _3s39347 = {
    abbreviated: _3s39321,
    narrow: _3s3964,
    wide: _3s39321
}, _3s39348 = {
    abbreviated: _3s39322,
    narrow: _3s3958,
    wide: _3s39322
}, _3s39349 = {
    abbreviated: _3s39323,
    narrow: _3s3964,
    wide: _3s39323
}, _3s39350 = {
    abbreviated: _3s39320,
    narrow: _3s3958,
    wide: _3s39328
}, _3s39351 = {
    abbreviated: _3s39324,
    narrow: _3s3964,
    wide: _3s39324
}, _3s39352 = {
    abbreviated: _3s39325,
    narrow: _3s3958,
    wide: _3s39325
}, _3s39353 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "r-MM-dd h:mm a",
    mediumDateTime: "r MMM d h:mm:ss a",
    longDateTime: "r(U) MMMM d h:mm:ss a z",
    fullDateTime: "r(U) MMMM d, EEEE h:mm:ss a zzzz"
}, _3s39354 = {
    fullDate: "EEEE, MMMM dd, y G",
    longDate: "dd MMMM y G",
    mediumDate: "dd-MMM-y G",
    shortDate: "dd/MM/yy GGGGG",
    fullTime: "h:mm:ss a zzzz",
    longTime: "h:mm:ss a z",
    mediumTime: "h:mm:ss a",
    shortTime: "h:mm a",
    shortDateTime: "dd/MM/yy GGGGG h:mm a",
    mediumDateTime: "dd-MMM-y G h:mm:ss a",
    longDateTime: "dd MMMM y G h:mm:ss a z",
    fullDateTime: "EEEE, MMMM dd, y G h:mm:ss a zzzz"
}, _3s39355 = {
    abbreviated: _3s39279,
    narrow: _3s3949,
    wide: _3s39339
}, _3s39356 = {
    "1000": _3s394,
    "10000": _3s399,
    "100000": _3s3915,
    "1000000": _3s395,
    "10000000": _3s3910,
    "100000000": _3s3916,
    "1000000000": _3s396,
    "10000000000": _3s3911,
    "100000000000": _3s3917,
    "1000000000000": _3s397,
    "10000000000000": _3s3912,
    "100000000000000": _3s3918
}, _3s39357 = {
    format: _3s39338,
    standAlone: _3s39338
}, _3s39358 = {
    format: _3s39343,
    standAlone: _3s39343
}, _3s39359 = {
    "long": _3s39341,
    "short": _3s39341,
    "default": "#,##0.###"
}, _3s39360 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _3s39361 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _3s39362 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _3s39363 = {
    d: "d",
    hm: "h:mm a",
    Hm: "HH:mm",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "M/d",
    MEd: "E, M/d",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "E, MMM d",
    MMMMd: "MMMM d",
    MMMMEd: "E, MMMM d",
    ms: "mm:ss",
    y: "y",
    yM: "M/y",
    yMEd: "E, M/d/y",
    yMMM: "MMM y",
    yMMMEd: "E, MMM d, y",
    yMMMM: "MMMM y",
    yQQQ: "QQQ y",
    yQQQQ: "QQQQ y",
    E: "ccc",
    Ed: "d, E",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss",
    Gy: "G y",
    GyMMM: "G y MMM",
    GyMMMd: "G y MMM d",
    GyMMMEd: "G y MMM d, E",
    h: "h a",
    H: "HH",
    hms: "h:mm:ss a",
    yyyy: "G y",
    yyyyM: "GGGGG y-MM",
    yyyyMd: "GGGGG y-MM-dd",
    yyyyMEd: "GGGGG y-MM-dd, E",
    yyyyMMM: "G y MMM",
    yyyyMMMd: "G y MMM d",
    yyyyMMMEd: "G y MMM d, E",
    yyyyMMMM: "G y MMMM",
    yyyyQQQ: "G y QQQ",
    yyyyQQQQ: "G y QQQQ"
}, _3s39364 = {
    format: _3s39350,
    standAlone: _3s39350
}, _3s39365 = {
    format: _3s39355,
    standAlone: _3s39355
}, _3s39366 = {
    basic: _3s39353,
    cldr: _3s39360
}, _3s39367 = {
    d: {
        d: "d–d"
    },
    h: _3s3913,
    H: {
        H: "HH–HH"
    },
    hm: _3s3959,
    Hm: _3s3926,
    hmv: _3s3967,
    Hmv: _3s3933,
    hv: _3s3919,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _3s3934,
    MEd: _3s3951,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _3s3922,
    MMMEd: _3s3952,
    y: {
        y: "U–U"
    },
    yM: _3s3927,
    yMd: _3s39209,
    yMEd: _3s39311,
    yMMM: _3s3928,
    yMMMd: _3s3963,
    yMMMEd: _3s39304,
    yMMMM: _3s3935
}, _3s39368 = {
    d: {
        d: "d–d"
    },
    h: _3s3913,
    hm: _3s3959,
    hmv: _3s3967,
    hv: _3s3919,
    M: {
        M: "M–M"
    },
    Md: _3s3932,
    MEd: _3s3947,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _3s3929,
    MMMEd: _3s3948,
    y: {
        y: "y–y"
    },
    yM: _3s3924,
    yMd: _3s39208,
    yMEd: _3s39309,
    yMMM: _3s3925,
    yMMMd: _3s3995,
    yMMMEd: _3s39318,
    H: {
        H: "HH–HH"
    },
    Hm: _3s3926,
    Hmv: _3s3933,
    Hv: {
        H: "HH–HH v"
    },
    yMMMM: _3s3936
}, _3s39369 = {
    basic: _3s39354,
    cldr: _3s39363
}, _3s39370 = {
    beforeCurrency: _3s39361,
    afterCurrency: _3s39361
}, _3s39371 = {
    "short": _3s39356,
    "default": "¤#,##0.00",
    other: "{0} {1}",
    currencySpacing: _3s39370
}, _3s39372 = {
    era: _3s392,
    year: _3s39329,
    month: _3s39330,
    week: _3s39331,
    day: _3s39327,
    weekday: _3s3931,
    dayperiod: _3s398,
    hour: _3s39308,
    minute: _3s39314,
    second: _3s39319,
    zone: _3s3921,
    quarter: _3s39332,
    sun: _3s3996,
    mon: _3s3997,
    tue: _3s39180,
    wed: _3s39273,
    thu: _3s39250,
    fri: _3s3998,
    sat: _3s39251
}, _3s39373 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _3s39372
}, _3s39374 = {
    abbreviated: _3s39362,
    narrow: _3s39362,
    wide: _3s39362
}, _3s39375 = {
    format: _3s39374
}, _3s39376 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _3s39359,
    currency: _3s39371,
    percent: {
        "default": "#,##0%"
    }
}, _3s39377 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _3s39378 = {
    dateFormats: _3s39369,
    datePartsOrder: "dmy",
    dateIntervalFormats: _3s39368,
    dateIntervalFallbackFormat: "{0} - {1}",
    dayNames: _3s39357,
    dayPeriods: _3s39336,
    monthNames: _3s39364,
    eraNames: _3s3923,
    quarterNames: _3s39346,
    fields: _3s39372
}, _3s39379 = {
    dayParts: _3s39345,
    days: _3s39375,
    months: _3s39375,
    years: _3s39375,
    zodiacs: _3s39345
}, _3s39380 = {
    dateFormats: _3s39366,
    datePartsOrder: "md",
    dateIntervalFormats: _3s39367,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _3s39357,
    dayPeriods: _3s39336,
    cyclicNames: _3s39379,
    monthNames: _3s39358,
    monthPatterns: _3s39337,
    quarterNames: _3s39346,
    fields: _3s39372
};

inter.id = "so";

inter.characters = {
    exemplar: {
        "default": [ "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ],
        auxiliary: [ "" ],
        punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "(", ")", "\\[", "\\]", "\\{", "\\}" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _3s39334,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _3s39376,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _3s39376,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _3s39334,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _3s39334,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _3s39334,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _3s39334,
        digits: "renderEthiopic"
    },
    finance: _3s39335,
    fullwide: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _3s39334,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _3s39334,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _3s39334,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _3s39334,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _3s39340,
    hansfin: _3s39342,
    hant: _3s39340,
    hantfin: _3s39342,
    hebr: {
        symbols: _3s39334,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _3s39334,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _3s39340,
    jpanfin: _3s39342,
    kali: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _3s39334,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _3s39334,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _3s39334,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _3s39334,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _3s39334,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _3s39334,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _3s39334,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _3s39334,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _3s39335,
    nkoo: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _3s39334,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _3s39334,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _3s39334,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _3s39334,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _3s39334,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _3s39334,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _3s39335,
    vaii: {
        symbols: _3s39333,
        formats: _3s39376,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _3s39334,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _3s39369,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3s39368,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _3s39357,
        dayPeriods: _3s39336,
        monthNames: _3s39365,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _3s39346,
        fields: _3s39372
    },
    chinese: _3s39380,
    coptic: {
        dateFormats: _3s39369,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3s39368,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _3s39357,
        dayPeriods: _3s39336,
        monthNames: {
            format: _3s39349,
            standAlone: _3s39349
        },
        eraNames: _3s3953,
        quarterNames: _3s39346,
        fields: _3s39372
    },
    dangi: _3s39380,
    ethioaa: _3s39373,
    ethiopic: {
        dateFormats: _3s39369,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3s39368,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _3s39357,
        dayPeriods: _3s39336,
        monthNames: {
            format: _3s39351,
            standAlone: _3s39351
        },
        eraNames: _3s3953,
        quarterNames: _3s39346,
        fields: _3s39372
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, MMMM dd, y",
                longDate: "dd MMMM y",
                mediumDate: "dd-MMM-y",
                shortDate: "dd/MM/yy",
                fullTime: "h:mm:ss a zzzz",
                longTime: "h:mm:ss a z",
                mediumTime: "h:mm:ss a",
                shortTime: "h:mm a",
                shortDateTime: "dd/MM/yy h:mm a",
                mediumDateTime: "dd-MMM-y h:mm:ss a",
                longDateTime: "dd MMMM y h:mm:ss a z",
                fullDateTime: "EEEE, MMMM dd, y h:mm:ss a zzzz"
            },
            cldr: {
                d: "d",
                hm: "h:mm a",
                Hm: "HH:mm",
                Hms: "HH:mm:ss",
                M: "L",
                Md: "M/d",
                MEd: "E, M/d",
                MMM: "LLL",
                MMMd: "MMM d",
                MMMEd: "E, MMM d",
                MMMMd: "MMMM d",
                MMMMEd: "E, MMMM d",
                ms: "mm:ss",
                y: "y",
                yM: "M/y",
                yMEd: "E, M/d/y",
                yMMM: "MMM y",
                yMMMEd: "E, MMM d, y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y",
                E: "ccc",
                Ed: "d, E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                H: "HH",
                hms: "h:mm:ss a",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                yMd: "y-MM-dd",
                yMMMd: "y MMM d"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _3s3913,
            hm: _3s3959,
            hmv: _3s3967,
            hv: _3s3919,
            M: {
                M: "M–M"
            },
            Md: _3s3932,
            MEd: _3s3947,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _3s3929,
            MMMEd: _3s3948,
            y: {
                y: "y–y"
            },
            yM: _3s3924,
            yMd: _3s39208,
            yMEd: _3s39309,
            yMMM: _3s3925,
            yMMMd: _3s3995,
            yMMMEd: _3s39318,
            H: {
                H: "HH–HH"
            },
            Hm: _3s3926,
            Hmv: _3s3933,
            Hv: {
                H: "HH–HH v"
            },
            yMMMM: {
                M: "y MMMM–MMMM",
                y: "y MMMM – y MMMM"
            }
        },
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _3s39357,
        dayPeriods: _3s39336,
        monthNames: _3s39365,
        eraNames: {
            wide: [ "Ciise ka hor (CS)", "Ciise ka dib (CS)" ],
            abbreviated: [ "CK", "CD" ]
        },
        quarterNames: _3s39346,
        fields: _3s39372
    },
    hebrew: {
        dateFormats: _3s39369,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3s39368,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _3s39357,
        dayPeriods: _3s39336,
        monthNames: {
            format: _3s39347,
            standAlone: _3s39347
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _3s39346,
        fields: _3s39372
    },
    indian: {
        dateFormats: _3s39369,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3s39368,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _3s39357,
        dayPeriods: _3s39336,
        monthNames: {
            format: _3s39352,
            standAlone: _3s39352
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _3s39346,
        fields: _3s39372
    },
    islamic: _3s39378,
    "islamic-umalqura": _3s39378,
    "islamic-tbla": _3s39378,
    "islamic-civil": _3s39378,
    "islamic-rgsa": _3s39378,
    iso8601: _3s39373,
    japanese: {
        dateFormats: _3s39369,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3s39368,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _3s39357,
        dayPeriods: _3s39336,
        monthNames: _3s39365,
        eraNames: {
            wide: _3s39377,
            abbreviated: _3s39377
        },
        quarterNames: _3s39346,
        fields: _3s39372
    },
    persian: {
        dateFormats: _3s39369,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3s39368,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _3s39357,
        dayPeriods: _3s39336,
        monthNames: {
            format: _3s39348,
            standAlone: _3s39348
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _3s39346,
        fields: _3s39372
    },
    roc: {
        dateFormats: _3s39369,
        datePartsOrder: "dmy",
        dateIntervalFormats: _3s39368,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _3s39357,
        dayPeriods: _3s39336,
        monthNames: _3s39365,
        eraNames: {
            wide: _3s3914,
            abbreviated: _3s3914
        },
        quarterNames: _3s39346,
        fields: _3s39372
    },
    islamicc: _3s39373
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.territories = [ _3s39298, _3s39252, _3s39299, _3s39181, _3s39182, _3s3999, _3s39121, _3s39154, _3s39291, _3s39183, _3s39184, _3s3978, _3s39253, _3s39185, _3s39155, _3s39210, _3s39211, _3s39156, _3s39186, _3s39267, _3s39122, _3s39123, _3s39100, _3s39157, _3s39101, _3s39102, _3s39103, _3s39187, _3s39124, _3s39188, _3s39294, _3s39212, _3s39158, _3s39274, _3s39302, _3s39213, _3s39268, _3s39125, _3s39189, _3s39289, _3s39269, _3s39104, _3s39105, _3s39126, _3s39190, _3s39233, _3s39285, _3s39214, _3s39191, _3s39192, _3s39316, _3s39193, _3s39234, _3s3969, _3s39159, _3s39127, _3s39194, _3s39262, _3s39281, _3s39128, _3s3979, _3s39129, _3s39195, _3s3970, _3s39235, _3s39106, _3s39215, _3s39196, _3s39216, _3s3971, _3s39254, _3s39107, _3s39130, _3s3980, _3s39131, _3s39160, _3s39108, _3s39161, _3s39197, _3s39313, _3s39236, _3s39109, _3s39198, _3s39255, _3s39162, _3s39163, _3s39237, _3s3972, _3s39110, _3s39132, _3s39133, _3s39312, _3s39317, _3s39303, _3s39286, _3s39111, _3s39295, _3s39275, _3s3973, _3s39164, _3s39199, _3s39217, _3s39112, _3s39263, _3s39134, _3s39218, _3s39165, _3s39200, _3s39166, _3s3981, _3s39270, _3s39276, _3s39238, _3s39239, _3s3982, _3s39296, _3s39287, _3s39113, _3s3974, _3s39135, _3s39219, _3s39264, _3s39136, _3s39240, _3s39137, _3s39138, _3s39241, _3s39114, _3s39220, _3s3983, _3s39221, _3s39242, _3s39139, _3s39167, _3s39222, _3s39140, _3s39282, _3s39223, _3s3984, _3s39141, _3s39142, _3s39224, _3s39143, _3s39225, _3s39226, _3s39144, _3s39243, _3s39244, _3s39201, _3s39145, _3s39202, _3s3985, _3s39227, _3s39115, _3s39116, _3s39245, _3s39265, _3s39256, _3s39246, _3s3975, _3s39168, _3s39271, _3s39305, _3s3986, _3s39117, _3s39283, _3s39169, _3s3976, _3s39170, _3s39247, _3s3987, _3s39118, _3s39203, _3s3988, _3s39146, _3s39147, _3s39171, _3s39284, _3s39257, _3s39300, _3s39248, _3s39307, _3s39315, _3s3989, _3s39277, _3s39228, _3s39172, _3s39204, _3s39205, _3s39173, _3s39249, _3s39229, _3s39174, _3s39175, _3s39176, _3s39278, _3s39230, _3s39177, _3s39148, _3s39149, _3s39258, _3s39301, _3s39231, _3s39178, _3s39232, _3s39179, _3s39150, _3s39259, _3s39151, _3s3990, _3s3991, _3s39292, _3s39206, _3s3992, _3s39260, _3s39306, _3s39119, _3s39293, _3s39152, _3s39120, _3s39272, _3s3993, _3s39207, _3s39261, _3s39153, _3s39288, _3s3994, _3s39297 ];

inter.regions = [ _3s39298, _3s39299, _3s39297 ];

inter.countries = [ _3s39252, _3s39181, _3s39182, _3s3999, _3s39121, _3s39154, _3s39291, _3s39183, _3s39184, _3s3978, _3s39253, _3s39185, _3s39155, _3s39210, _3s39211, _3s39156, _3s39186, _3s39267, _3s39122, _3s39123, _3s39100, _3s39157, _3s39101, _3s39102, _3s39103, _3s39187, _3s39124, _3s39188, _3s39294, _3s39212, _3s39158, _3s39274, _3s39302, _3s39213, _3s39268, _3s39125, _3s39189, _3s39289, _3s39269, _3s39104, _3s39105, _3s39126, _3s39190, _3s39233, _3s39285, _3s39214, _3s39191, _3s39192, _3s39316, _3s39193, _3s39234, _3s3969, _3s39159, _3s39127, _3s39194, _3s39262, _3s39281, _3s39128, _3s3979, _3s39129, _3s39195, _3s3970, _3s39235, _3s39106, _3s39215, _3s39196, _3s39216, _3s3971, _3s39254, _3s39107, _3s39130, _3s3980, _3s39131, _3s39160, _3s39108, _3s39161, _3s39197, _3s39313, _3s39236, _3s39109, _3s39198, _3s39255, _3s39162, _3s39163, _3s39237, _3s3972, _3s39110, _3s39132, _3s39133, _3s39312, _3s39317, _3s39303, _3s39286, _3s39111, _3s39295, _3s39275, _3s3973, _3s39164, _3s39199, _3s39217, _3s39112, _3s39263, _3s39134, _3s39218, _3s39165, _3s39200, _3s39166, _3s3981, _3s39270, _3s39276, _3s39238, _3s39239, _3s3982, _3s39296, _3s39287, _3s39113, _3s3974, _3s39135, _3s39219, _3s39264, _3s39136, _3s39240, _3s39137, _3s39138, _3s39241, _3s39114, _3s39220, _3s3983, _3s39221, _3s39242, _3s39139, _3s39167, _3s39222, _3s39140, _3s39282, _3s39223, _3s3984, _3s39141, _3s39142, _3s39224, _3s39143, _3s39225, _3s39226, _3s39144, _3s39243, _3s39244, _3s39201, _3s39145, _3s39202, _3s3985, _3s39227, _3s39115, _3s39116, _3s39245, _3s39265, _3s39256, _3s39246, _3s3975, _3s39168, _3s39271, _3s39305, _3s3986, _3s39117, _3s39283, _3s39169, _3s3976, _3s39170, _3s39247, _3s3987, _3s39118, _3s39203, _3s3988, _3s39146, _3s39147, _3s39171, _3s39284, _3s39257, _3s39300, _3s39248, _3s39307, _3s39315, _3s3989, _3s39277, _3s39228, _3s39172, _3s39204, _3s39205, _3s39173, _3s39249, _3s39229, _3s39174, _3s39175, _3s39176, _3s39278, _3s39230, _3s39177, _3s39148, _3s39149, _3s39258, _3s39301, _3s39231, _3s39178, _3s39232, _3s39179, _3s39150, _3s39259, _3s39151, _3s3990, _3s3991, _3s39292, _3s39206, _3s3992, _3s39260, _3s39306, _3s39119, _3s39293, _3s39152, _3s39120, _3s39272, _3s3993, _3s39207, _3s39261, _3s39153, _3s39288, _3s3994 ];

inter.languages = [ {
    id: "und",
    displayName: "Af aan la aqoon ama aan sax ahayn"
}, {
    id: "no",
    displayName: "Af Noorwiijiyaan"
}, {
    id: "af",
    displayName: "Afrikaanays",
    nativeDisplayName: "Afrikaans"
}, {
    id: "ak",
    displayName: "Akan",
    nativeDisplayName: "Akan"
}, {
    id: "en_us",
    displayName: "Ingiriisi (Maraykan)",
    nativeDisplayName: "American English"
}, {
    id: "az",
    displayName: "Azerbaijan",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "Malaay",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bs",
    displayName: "Boosniya",
    nativeDisplayName: "bosanski"
}, {
    id: "br",
    displayName: "Bereton",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "Ingiriisi (Boqortooyada Midowday)",
    nativeDisplayName: "British English"
}, {
    id: "ca",
    displayName: "Katalaan",
    nativeDisplayName: "català"
}, {
    id: "cy",
    displayName: "Welsh",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "Danmarkays",
    nativeDisplayName: "dansk"
}, {
    id: "de",
    displayName: "Jarmal",
    nativeDisplayName: "Deutsch"
}, {
    id: "et",
    displayName: "Istooniyaan",
    nativeDisplayName: "eesti"
}, {
    id: "en",
    displayName: "Ingiriisi",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "Isbaanish",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "Isbaanish (Isbayn)",
    nativeDisplayName: "español de España"
}, {
    id: "es_419",
    displayName: "Isbaanishka Laatiin Ameerika",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "Isberento",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "Basquu",
    nativeDisplayName: "euskara"
}, {
    id: "fil",
    displayName: "Tagalog",
    nativeDisplayName: "Filipino"
}, {
    id: "fr",
    displayName: "Faransiis",
    nativeDisplayName: "français"
}, {
    id: "fr_ch",
    displayName: "Faransiis (Iswiiserlaand)",
    nativeDisplayName: "français suisse"
}, {
    id: "fo",
    displayName: "Farowsi",
    nativeDisplayName: "føroyskt"
}, {
    id: "ga",
    displayName: "Ayrish",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gl",
    displayName: "Galiisiyaan",
    nativeDisplayName: "galego"
}, {
    id: "gn",
    displayName: "Guraani"
}, {
    id: "gd",
    displayName: "Iskot Giilik",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "ha",
    displayName: "Hawsa",
    nativeDisplayName: "Hausa"
}, {
    id: "xh",
    displayName: "Hoosta"
}, {
    id: "hr",
    displayName: "Koro’eeshiyaan",
    nativeDisplayName: "hrvatski"
}, {
    id: "ig",
    displayName: "Igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "id",
    displayName: "Indunuusiyaan",
    nativeDisplayName: "Indonesia"
}, {
    id: "ie",
    displayName: "Interlingue"
}, {
    id: "ia",
    displayName: "Interlinguwa"
}, {
    id: "zu",
    displayName: "Zuulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "Talyaani",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "Jafaaniis"
}, {
    id: "tlh",
    displayName: "Kiligoon"
}, {
    id: "rw",
    displayName: "Rwanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "sw",
    displayName: "Sawaaxili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "ku",
    displayName: "Kurdishka"
}, {
    id: "la",
    displayName: "Laatiin"
}, {
    id: "lv",
    displayName: "Laatfiyaan",
    nativeDisplayName: "latviešu"
}, {
    id: "lt",
    displayName: "Lituwaanays",
    nativeDisplayName: "lietuvių"
}, {
    id: "ln",
    displayName: "Lingala",
    nativeDisplayName: "lingála"
}, {
    id: "hu",
    displayName: "Hangariyaan",
    nativeDisplayName: "magyar"
}, {
    id: "mt",
    displayName: "Maltiis",
    nativeDisplayName: "Malti"
}, {
    id: "nl",
    displayName: "Holandays",
    nativeDisplayName: "Nederlands"
}, {
    id: "nn",
    displayName: "Nowrwejiyan (naynoroski)",
    nativeDisplayName: "nynorsk"
}, {
    id: "oc",
    displayName: "Okitaan"
}, {
    id: "uz",
    displayName: "Usbakis",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pl",
    displayName: "Boolish",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "Boortaqiis",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "Boortaqiiska Baraasiil",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "Boortaqiis (Boortuqaal)",
    nativeDisplayName: "português europeu"
}, {
    id: "ro",
    displayName: "Romanka",
    nativeDisplayName: "română"
}, {
    id: "sa",
    displayName: "Sanskrit"
}, {
    id: "de_ch",
    displayName: "Jarmal (Iswiiserlaand)",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "sh",
    displayName: "Serbiyaan"
}, {
    id: "st",
    displayName: "Sesooto"
}, {
    id: "sq",
    displayName: "Albaaniyaan",
    nativeDisplayName: "shqip"
}, {
    id: "sd",
    displayName: "SINDHI"
}, {
    id: "sk",
    displayName: "Isloofaak",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "Islofeeniyaan",
    nativeDisplayName: "slovenščina"
}, {
    id: "so",
    displayName: "Soomaali",
    nativeDisplayName: "Soomaali"
}, {
    id: "fi",
    displayName: "Fiinlaandees",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "Swiidhis",
    nativeDisplayName: "svenska"
}, {
    id: "tw",
    displayName: "Tiwiyan"
}, {
    id: "vi",
    displayName: "Fiitnaamays",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tk",
    displayName: "Turkumaanish",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "Turkish",
    nativeDisplayName: "Türkçe"
}, {
    id: "fy",
    displayName: "Firiisiyan Galbeed",
    nativeDisplayName: "West-Frysk"
}, {
    id: "yo",
    displayName: "Yoruuba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "Ayslandays",
    nativeDisplayName: "íslenska"
}, {
    id: "cs",
    displayName: "Jeeg",
    nativeDisplayName: "čeština"
}, {
    id: "el",
    displayName: "Giriik",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "Beleruusiyaan",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "Bulgeeriyaan",
    nativeDisplayName: "български"
}, {
    id: "ky",
    displayName: "Kirgiis",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "Masadooniyaan",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "Mangooli",
    nativeDisplayName: "монгол"
}, {
    id: "ru",
    displayName: "Ruush",
    nativeDisplayName: "русский"
}, {
    id: "sr",
    displayName: "Seerbiyaan",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "Yukreeniyaan",
    nativeDisplayName: "українська"
}, {
    id: "hy",
    displayName: "Armeeniyaan",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "Yadhish",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "Cibri",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "UIGHUR",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "Urduu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "Carabi",
    nativeDisplayName: "العربية"
}, {
    id: "fa",
    displayName: "Faarisi",
    nativeDisplayName: "فارسی"
}, {
    id: "ps",
    displayName: "Bashtuu",
    nativeDisplayName: "پښتو"
}, {
    id: "ne",
    displayName: "Nebaali",
    nativeDisplayName: "नेपाली"
}, {
    id: "mr",
    displayName: "Maarati",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "Hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "Asaamiis",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "Bangaali",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "Bunjaabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "Gujaraati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "Oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "Tamiil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "Teluugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "Kannadays",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "Malayalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "Sinhaleys",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "Taaylandays",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "Laothian",
    nativeDisplayName: "ລາວ"
}, {
    id: "my",
    displayName: "Burmese",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "Joorijiyaan",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "Tigrinya",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "Axmaari",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "Kamboodhian",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zh",
    displayName: "Jayniis",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "Jabbaaniis",
    nativeDisplayName: "日本語"
}, {
    id: "ko",
    displayName: "Kuuriyaan",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Zxxx",
    displayName: "Aan la qorin"
}, {
    id: "Zzzz",
    displayName: "Far aan la aqoon amase aan saxnayn"
}, {
    id: "Latn",
    displayName: "Laatiin"
} ];

inter.currencies = [ {
    id: "ETB",
    displayName: "Birta Itoobbiya"
}, {
    id: "USD",
    displayName: "Doollar maraykan",
    symbol: "US$"
}, {
    id: "DJF",
    displayName: "Faran Jabbuuti"
}, {
    id: "XXX",
    displayName: "Lacag aan la qoon ama aan saxnayn"
}, {
    id: "SAR",
    displayName: "Riyaalka Sacuudiga"
}, {
    id: "TZS",
    displayName: "Shilin Tansaani"
}, {
    id: "SOS",
    displayName: "Shilin soomaali",
    symbol: "S"
}, {
    id: "EUR",
    displayName: "Yuuroo",
    symbol: "€"
} ];

module.exports = inter;