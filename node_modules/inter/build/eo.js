function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _3woq1 = [ "K1", "K2", "K3", "K4" ], _3woq2 = {
    all: {
        leap: "{0}bis"
    }
}, _3woq3 = {
    displayName: "atm/ptm"
}, _3woq4 = {
    displayName: "horzono"
}, _3woq5 = {
    one: "¤ 0K",
    other: "¤ 0K"
}, _3woq6 = {
    one: "¤ 0M",
    other: "¤ 0M"
}, _3woq7 = {
    one: "¤ 0G",
    other: "¤ 0G"
}, _3woq8 = {
    one: "¤ 0T",
    other: "¤ 0T"
}, _3woq9 = {
    a: "h a – h a",
    h: "h–h a"
}, _3woq10 = [ "Before R.O.C.", "R.O.C." ], _3woq11 = {
    one: "¤ 00K",
    other: "¤ 00K"
}, _3woq12 = {
    one: "¤ 00M",
    other: "¤ 00M"
}, _3woq13 = {
    one: "¤ 00G",
    other: "¤ 00G"
}, _3woq14 = {
    one: "¤ 00T",
    other: "¤ 00T"
}, _3woq15 = {
    one: "¤ 000K",
    other: "¤ 000K"
}, _3woq16 = {
    one: "¤ 000M",
    other: "¤ 000M"
}, _3woq17 = {
    one: "¤ 000G",
    other: "¤ 000G"
}, _3woq18 = {
    one: "¤ 000T",
    other: "¤ 000T"
}, _3woq19 = [ "D", "L", "M", "M", "Ĵ", "V", "S" ], _3woq20 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _3woq21 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _3woq22 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _3woq23 = {
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _3woq24 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _3woq25 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _3woq26 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _3woq27 = {
    displayName: "tago de la semajno"
}, _3woq28 = [ "di", "lu", "ma", "me", "ĵa", "ve", "sa" ], _3woq29 = {
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _3woq30 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _3woq31 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _3woq32 = {
    M: "G y-MM – y-MM",
    y: "G y-MM – y-MM"
}, _3woq33 = {
    "0": "hodiaŭ",
    "1": "morgaŭ",
    "-1": "hieraŭ"
}, _3woq34 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _3woq35 = {
    d: "MMM-dd – MMM-dd",
    M: "MMM-dd – MMM-dd"
}, _3woq36 = {
    M: "G y-MMM – y-MMM",
    y: "G y-MMM – y-MMM"
}, _3woq37 = {
    M: "G y MMMM–MMMM",
    y: "G y MMMM – y MMMM"
}, _3woq38 = {
    one: "post {0} jaro",
    other: "post {0} jaroj"
}, _3woq39 = {
    one: "post {0} tago",
    other: "post {0} tagoj"
}, _3woq40 = {
    one: "post {0} horo",
    other: "post {0} horoj"
}, _3woq41 = {
    one: "antaŭ {0} jaro",
    other: "antaŭ {0} jaroj"
}, _3woq42 = {
    one: "antaŭ {0} tago",
    other: "antaŭ {0} tagoj"
}, _3woq43 = {
    one: "antaŭ {0} horo",
    other: "antaŭ {0} horoj"
}, _3woq44 = {
    one: "post {0} monato",
    other: "post {0} monatoj"
}, _3woq45 = {
    one: "post {0} minuto",
    other: "post {0} minutoj"
}, _3woq46 = {
    d: "E, MM-dd – E, MM-dd",
    M: "E, MM-dd – E, MM-dd"
}, _3woq47 = [ "J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D" ], _3woq48 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _3woq49 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _3woq50 = {
    one: "antaŭ {0} monato",
    other: "antaŭ {0} monatoj"
}, _3woq51 = {
    one: "post {0} semajno",
    other: "post {0} semajnoj"
}, _3woq52 = {
    one: "antaŭ {0} minuto",
    other: "antaŭ {0} minutoj"
}, _3woq53 = {
    one: "post {0} sekundo",
    other: "post {0} sekundoj"
}, _3woq54 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _3woq55 = {
    id: "AQ",
    displayName: "Antarkto",
    hasTimeZones: true
}, _3woq56 = {
    "0": "nuna jaro",
    "1": "venonta jaro",
    "-1": "pasinta jaro"
}, _3woq57 = {
    one: "antaŭ {0} semajno",
    other: "antaŭ {0} semajnoj"
}, _3woq58 = {
    one: "antaŭ {0} sekundo",
    other: "antaŭ {0} sekundoj"
}, _3woq59 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _3woq60 = {
    d: "E, MMM-dd – E, MMM-dd",
    M: "E, MMM-dd – E, MMM-dd"
}, _3woq61 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _3woq62 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _3woq63 = {
    one: "post {0} kvaronjaro",
    other: "post {0} kvaronjaroj"
}, _3woq64 = {
    "0": "ĉi tiu lundo",
    "1": "venonta lundo",
    "-1": "pasinta lundo"
}, _3woq65 = {
    "0": "ĉi tiu mardo",
    "1": "venonta mardo",
    "-1": "pasinta mardo"
}, _3woq66 = {
    "0": "ĉi tiu ĵaŭdo",
    "1": "venonta ĵaŭdo",
    "-1": "pasinta ĵaŭdo"
}, _3woq67 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _3woq68 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _3woq69 = {
    one: "antaŭ {0} kvaronjaro",
    other: "antaŭ {0} kvaronjaroj"
}, _3woq70 = {
    "0": "nuna monato",
    "1": "venonta monato",
    "-1": "pasinta monato"
}, _3woq71 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _3woq72 = {
    "0": "ĉi tiu sabato",
    "1": "venonta sabato",
    "-1": "pasinta sabato"
}, _3woq73 = {
    "0": "nuna semajno",
    "1": "venonta semajno",
    "-1": "pasinta semajno"
}, _3woq74 = {
    id: "CU",
    displayName: "Kubo",
    regionId: "029",
    hasTimeZones: true
}, _3woq75 = {
    id: "NU",
    displayName: "Niuo",
    regionId: "061",
    hasTimeZones: true
}, _3woq76 = {
    id: "TD",
    displayName: "Ĉado",
    regionId: "017",
    hasTimeZones: true
}, _3woq77 = {
    id: "AW",
    displayName: "Arubo",
    regionId: "029",
    hasTimeZones: true
}, _3woq78 = {
    id: "FJ",
    displayName: "Fiĝoj",
    regionId: "054",
    hasTimeZones: true
}, _3woq79 = {
    id: "GH",
    displayName: "Ganao",
    regionId: "011",
    hasTimeZones: true
}, _3woq80 = {
    id: "GU",
    displayName: "Gvamo",
    regionId: "057",
    hasTimeZones: true
}, _3woq81 = {
    id: "IQ",
    displayName: "Irako",
    regionId: "145",
    hasTimeZones: true
}, _3woq82 = {
    id: "IR",
    displayName: "Irano",
    regionId: "034",
    hasTimeZones: true
}, _3woq83 = {
    id: "KE",
    displayName: "Kenjo",
    regionId: "014",
    hasTimeZones: true
}, _3woq84 = {
    id: "CY",
    displayName: "Kipro",
    regionId: "145",
    hasTimeZones: true
}, _3woq85 = {
    id: "LA",
    displayName: "Laoso",
    regionId: "035",
    hasTimeZones: true
}, _3woq86 = {
    id: "LY",
    displayName: "Libio",
    regionId: "015",
    hasTimeZones: true
}, _3woq87 = {
    id: "ML",
    displayName: "Malio",
    regionId: "011",
    hasTimeZones: true
}, _3woq88 = {
    id: "MT",
    displayName: "Malto",
    regionId: "039",
    hasTimeZones: true
}, _3woq89 = {
    id: "NR",
    displayName: "Nauro",
    regionId: "057",
    hasTimeZones: true
}, _3woq90 = {
    id: "OM",
    displayName: "Omano",
    regionId: "145",
    hasTimeZones: true
}, _3woq91 = {
    id: "PE",
    displayName: "Peruo",
    regionId: "005",
    hasTimeZones: true
}, _3woq92 = {
    id: "WS",
    displayName: "Samoo",
    regionId: "061",
    hasTimeZones: true
}, _3woq93 = {
    id: "SY",
    displayName: "Sirio",
    regionId: "145",
    hasTimeZones: true
}, _3woq94 = {
    id: "TO",
    displayName: "Tongo",
    regionId: "061",
    hasTimeZones: true
}, _3woq95 = {
    id: "US",
    displayName: "Usono",
    regionId: "021",
    hasTimeZones: true
}, _3woq96 = {
    id: "CL",
    displayName: "Ĉilio",
    regionId: "005",
    hasTimeZones: true
}, _3woq97 = {
    "0": "ĉi tiu dimanĉo",
    "1": "venonta dimanĉo",
    "-1": "pasinta dimanĉo"
}, _3woq98 = {
    id: "AD",
    displayName: "Andoro",
    regionId: "039",
    hasTimeZones: true
}, _3woq99 = {
    id: "AO",
    displayName: "Angolo",
    regionId: "017",
    hasTimeZones: true
}, _3woq100 = {
    id: "PW",
    displayName: "Belaŭo",
    regionId: "057",
    hasTimeZones: true
}, _3woq101 = {
    id: "BZ",
    displayName: "Belizo",
    regionId: "013",
    hasTimeZones: true
}, _3woq102 = {
    id: "BJ",
    displayName: "Benino",
    regionId: "011",
    hasTimeZones: true
}, _3woq103 = {
    id: "BT",
    displayName: "Butano",
    regionId: "034",
    hasTimeZones: true
}, _3woq104 = {
    id: "DK",
    displayName: "Danujo",
    regionId: "154",
    hasTimeZones: true
}, _3woq105 = {
    id: "EG",
    displayName: "Egipto",
    regionId: "015",
    hasTimeZones: true
}, _3woq106 = {
    id: "FO",
    displayName: "Ferooj",
    regionId: "154",
    hasTimeZones: true
}, _3woq107 = {
    id: "GA",
    displayName: "Gabono",
    regionId: "017",
    hasTimeZones: true
}, _3woq108 = {
    id: "GM",
    displayName: "Gambio",
    regionId: "011",
    hasTimeZones: true
}, _3woq109 = {
    id: "GY",
    displayName: "Gujano",
    regionId: "005",
    hasTimeZones: true
}, _3woq110 = {
    id: "GN",
    displayName: "Gvineo",
    regionId: "011",
    hasTimeZones: true
}, _3woq111 = {
    id: "HT",
    displayName: "Haitio",
    regionId: "029",
    hasTimeZones: true
}, _3woq112 = {
    id: "YE",
    displayName: "Jemeno",
    regionId: "145",
    hasTimeZones: true
}, _3woq113 = {
    id: "CA",
    displayName: "Kanado",
    regionId: "021",
    hasTimeZones: true
}, _3woq114 = {
    id: "QA",
    displayName: "Kataro",
    regionId: "145",
    hasTimeZones: true
}, _3woq115 = {
    id: "LS",
    displayName: "Lesoto",
    regionId: "018",
    hasTimeZones: true
}, _3woq116 = {
    id: "LB",
    displayName: "Libano",
    regionId: "145",
    hasTimeZones: true
}, _3woq117 = {
    id: "YT",
    displayName: "Majoto",
    regionId: "014",
    hasTimeZones: true
}, _3woq118 = {
    id: "MA",
    displayName: "Maroko",
    regionId: "015",
    hasTimeZones: true
}, _3woq119 = {
    id: "MC",
    displayName: "Monako",
    regionId: "155",
    hasTimeZones: true
}, _3woq120 = {
    id: "NP",
    displayName: "Nepalo",
    regionId: "034",
    hasTimeZones: true
}, _3woq121 = {
    id: "NE",
    displayName: "Niĝero",
    regionId: "011",
    hasTimeZones: true
}, _3woq122 = {
    id: "PA",
    displayName: "Panamo",
    regionId: "013",
    hasTimeZones: true
}, _3woq123 = {
    id: "RE",
    displayName: "Reunio",
    regionId: "014",
    hasTimeZones: true
}, _3woq124 = {
    id: "RW",
    displayName: "Ruando",
    regionId: "014",
    hasTimeZones: true
}, _3woq125 = {
    id: "RU",
    displayName: "Rusujo",
    regionId: "151",
    hasTimeZones: true
}, _3woq126 = {
    id: "SD",
    displayName: "Sudano",
    regionId: "015",
    hasTimeZones: true
}, _3woq127 = {
    id: "TG",
    displayName: "Togolo",
    regionId: "011",
    hasTimeZones: true
}, _3woq128 = {
    id: "TV",
    displayName: "Tuvalo",
    regionId: "061",
    hasTimeZones: true
}, _3woq129 = {
    id: "UG",
    displayName: "Ugando",
    regionId: "014",
    hasTimeZones: true
}, _3woq130 = {
    id: "ZM",
    displayName: "Zambio",
    regionId: "014",
    hasTimeZones: true
}, _3woq131 = {
    id: "CZ",
    displayName: "Ĉeĥujo",
    regionId: "151",
    hasTimeZones: true
}, _3woq132 = {
    id: "CN",
    displayName: "Ĉinujo",
    regionId: "030",
    hasTimeZones: true
}, _3woq133 = {
    id: "DZ",
    displayName: "Alĝerio",
    regionId: "015",
    hasTimeZones: true
}, _3woq134 = {
    id: "AI",
    displayName: "Angvilo",
    regionId: "029",
    hasTimeZones: true
}, _3woq135 = {
    id: "BS",
    displayName: "Bahamoj",
    regionId: "029",
    hasTimeZones: true
}, _3woq136 = {
    id: "BB",
    displayName: "Barbado",
    regionId: "029",
    hasTimeZones: true
}, _3woq137 = {
    id: "BH",
    displayName: "Barejno",
    regionId: "145",
    hasTimeZones: true
}, _3woq138 = {
    id: "BE",
    displayName: "Belgujo",
    regionId: "155",
    hasTimeZones: true
}, _3woq139 = {
    id: "BW",
    displayName: "Bocvano",
    regionId: "018",
    hasTimeZones: true
}, _3woq140 = {
    id: "BO",
    displayName: "Bolivio",
    regionId: "005",
    hasTimeZones: true
}, _3woq141 = {
    id: "BR",
    displayName: "Brazilo",
    regionId: "005",
    hasTimeZones: true
}, _3woq142 = {
    id: "BN",
    displayName: "Brunejo",
    regionId: "035",
    hasTimeZones: true
}, _3woq143 = {
    id: "BF",
    displayName: "Burkino",
    regionId: "011",
    hasTimeZones: true
}, _3woq144 = {
    id: "BI",
    displayName: "Burundo",
    regionId: "014",
    hasTimeZones: true
}, _3woq145 = {
    id: "DO",
    displayName: "Domingo",
    regionId: "029",
    hasTimeZones: true
}, _3woq146 = {
    id: "ER",
    displayName: "Eritreo",
    regionId: "014",
    hasTimeZones: true
}, _3woq147 = {
    id: "GR",
    displayName: "Grekujo",
    regionId: "039",
    hasTimeZones: true
}, _3woq148 = {
    id: "GD",
    displayName: "Grenado",
    regionId: "029",
    hasTimeZones: true
}, _3woq149 = {
    id: "IN",
    displayName: "Hindujo",
    regionId: "034",
    hasTimeZones: true
}, _3woq150 = {
    id: "HN",
    displayName: "Honduro",
    regionId: "013",
    hasTimeZones: true
}, _3woq151 = {
    id: "IE",
    displayName: "Irlando",
    regionId: "154",
    hasTimeZones: true
}, _3woq152 = {
    id: "IS",
    displayName: "Islando",
    regionId: "154",
    hasTimeZones: true
}, _3woq153 = {
    id: "IL",
    displayName: "Israelo",
    regionId: "145",
    hasTimeZones: true
}, _3woq154 = {
    id: "IT",
    displayName: "Italujo",
    regionId: "039",
    hasTimeZones: true
}, _3woq155 = {
    id: "JM",
    displayName: "Jamajko",
    regionId: "029",
    hasTimeZones: true
}, _3woq156 = {
    id: "KH",
    displayName: "Kamboĝo",
    regionId: "035",
    hasTimeZones: true
}, _3woq157 = {
    id: "KM",
    displayName: "Komoroj",
    regionId: "014",
    hasTimeZones: true
}, _3woq158 = {
    id: "CG",
    displayName: "Kongolo",
    regionId: "017",
    hasTimeZones: true
}, _3woq159 = {
    id: "KW",
    displayName: "Kuvajto",
    regionId: "145",
    hasTimeZones: true
}, _3woq160 = {
    id: "LV",
    displayName: "Latvujo",
    regionId: "154",
    hasTimeZones: true
}, _3woq161 = {
    id: "LR",
    displayName: "Liberio",
    regionId: "011",
    hasTimeZones: true
}, _3woq162 = {
    id: "MW",
    displayName: "Malavio",
    regionId: "014",
    hasTimeZones: true
}, _3woq163 = {
    id: "MX",
    displayName: "Meksiko",
    regionId: "013",
    hasTimeZones: true
}, _3woq164 = {
    id: "MM",
    displayName: "Mjanmao",
    regionId: "035",
    hasTimeZones: true
}, _3woq165 = {
    id: "NA",
    displayName: "Namibio",
    regionId: "018",
    hasTimeZones: true
}, _3woq166 = {
    id: "NG",
    displayName: "Niĝerio",
    regionId: "011",
    hasTimeZones: true
}, _3woq167 = {
    id: "SE",
    displayName: "Svedujo",
    regionId: "154",
    hasTimeZones: true
}, _3woq168 = {
    id: "CH",
    displayName: "Svisujo",
    regionId: "155",
    hasTimeZones: true
}, _3woq169 = {
    id: "TW",
    displayName: "Tajvano",
    regionId: "030",
    hasTimeZones: true
}, _3woq170 = {
    id: "TN",
    displayName: "Tunizio",
    regionId: "015",
    hasTimeZones: true
}, _3woq171 = {
    id: "TR",
    displayName: "Turkujo",
    regionId: "145",
    hasTimeZones: true
}, _3woq172 = {
    id: "UA",
    displayName: "Ukrajno",
    regionId: "151",
    hasTimeZones: true
}, _3woq173 = {
    id: "DJ",
    displayName: "Ĝibutio",
    regionId: "014",
    hasTimeZones: true
}, _3woq174 = {
    id: "AF",
    displayName: "Afganujo",
    regionId: "034",
    hasTimeZones: true
}, _3woq175 = {
    id: "AL",
    displayName: "Albanujo",
    regionId: "039",
    hasTimeZones: true
}, _3woq176 = {
    id: "AM",
    displayName: "Armenujo",
    regionId: "145",
    hasTimeZones: true
}, _3woq177 = {
    id: "AT",
    displayName: "Aŭstrujo",
    regionId: "155",
    hasTimeZones: true
}, _3woq178 = {
    id: "BM",
    displayName: "Bermudoj",
    regionId: "021",
    hasTimeZones: true
}, _3woq179 = {
    id: "DM",
    displayName: "Dominiko",
    regionId: "029",
    hasTimeZones: true
}, _3woq180 = {
    id: "EC",
    displayName: "Ekvadoro",
    regionId: "005",
    hasTimeZones: true
}, _3woq181 = {
    id: "EE",
    displayName: "Estonujo",
    regionId: "154",
    hasTimeZones: true
}, _3woq182 = {
    id: "ET",
    displayName: "Etiopujo",
    regionId: "014",
    hasTimeZones: true
}, _3woq183 = {
    id: "FR",
    displayName: "Francujo",
    regionId: "155",
    hasTimeZones: true
}, _3woq184 = {
    id: "HK",
    displayName: "Honkongo",
    regionId: "030",
    hasTimeZones: true
}, _3woq185 = {
    id: "JP",
    displayName: "Japanujo",
    regionId: "030",
    hasTimeZones: true
}, _3woq186 = {
    id: "JO",
    displayName: "Jordanio",
    regionId: "145",
    hasTimeZones: true
}, _3woq187 = {
    id: "CM",
    displayName: "Kameruno",
    regionId: "017",
    hasTimeZones: true
}, _3woq188 = {
    id: "KY",
    displayName: "Kejmanoj",
    regionId: "029",
    hasTimeZones: true
}, _3woq189 = {
    id: "KI",
    displayName: "Kiribato",
    regionId: "057",
    hasTimeZones: true
}, _3woq190 = {
    id: "CO",
    displayName: "Kolombio",
    regionId: "005",
    hasTimeZones: true
}, _3woq191 = {
    id: "HR",
    displayName: "Kroatujo",
    regionId: "039",
    hasTimeZones: true
}, _3woq192 = {
    id: "LT",
    displayName: "Litovujo",
    regionId: "154",
    hasTimeZones: true
}, _3woq193 = {
    id: "MY",
    displayName: "Malajzio",
    regionId: "035",
    hasTimeZones: true
}, _3woq194 = {
    id: "MV",
    displayName: "Maldivoj",
    regionId: "034",
    hasTimeZones: true
}, _3woq195 = {
    id: "MH",
    displayName: "Marŝaloj",
    regionId: "057",
    hasTimeZones: true
}, _3woq196 = {
    id: "MU",
    displayName: "Maŭricio",
    regionId: "014",
    hasTimeZones: true
}, _3woq197 = {
    id: "PL",
    displayName: "Pollando",
    regionId: "151",
    hasTimeZones: true
}, _3woq198 = {
    id: "RO",
    displayName: "Rumanujo",
    regionId: "151",
    hasTimeZones: true
}, _3woq199 = {
    id: "SC",
    displayName: "Sejŝeloj",
    regionId: "014",
    hasTimeZones: true
}, _3woq200 = {
    id: "SN",
    displayName: "Senegalo",
    regionId: "011",
    hasTimeZones: true
}, _3woq201 = {
    id: "SO",
    displayName: "Somalujo",
    regionId: "014",
    hasTimeZones: true
}, _3woq202 = {
    id: "SR",
    displayName: "Surinamo",
    regionId: "005",
    hasTimeZones: true
}, _3woq203 = {
    id: "TH",
    displayName: "Tajlando",
    regionId: "035",
    hasTimeZones: true
}, _3woq204 = {
    id: "TZ",
    displayName: "Tanzanio",
    regionId: "014",
    hasTimeZones: true
}, _3woq205 = {
    id: "TJ",
    displayName: "Taĝikujo",
    regionId: "143",
    hasTimeZones: true
}, _3woq206 = {
    id: "UY",
    displayName: "Urugvajo",
    regionId: "005",
    hasTimeZones: true
}, _3woq207 = {
    id: "UZ",
    displayName: "Uzbekujo",
    regionId: "143",
    hasTimeZones: true
}, _3woq208 = {
    id: "VU",
    displayName: "Vanuatuo",
    regionId: "054",
    hasTimeZones: true
}, _3woq209 = {
    id: "VA",
    displayName: "Vatikano",
    regionId: "039",
    hasTimeZones: true
}, _3woq210 = {
    id: "VN",
    displayName: "Vjetnamo",
    regionId: "035",
    hasTimeZones: true
}, _3woq211 = {
    id: "ZW",
    displayName: "Zimbabvo",
    regionId: "014",
    hasTimeZones: true
}, _3woq212 = [ "dimanĉo", "lundo", "mardo", "merkredo", "ĵaŭdo", "vendredo", "sabato" ], _3woq213 = {
    "0": "ĉi tiu merkredo",
    "1": "venonta merkredo",
    "-1": "pasinta merkredo"
}, _3woq214 = {
    "0": "ĉi tiu vendredo",
    "1": "venonta vendredo",
    "-1": "pasinta vendredo"
}, _3woq215 = {
    id: "AR",
    displayName: "Argentino",
    regionId: "005",
    hasTimeZones: true
}, _3woq216 = {
    id: "AU",
    displayName: "Aŭstralio",
    regionId: "053",
    hasTimeZones: true
}, _3woq217 = {
    id: "BG",
    displayName: "Bulgarujo",
    regionId: "151",
    hasTimeZones: true
}, _3woq218 = {
    id: "PH",
    displayName: "Filipinoj",
    regionId: "035",
    hasTimeZones: true
}, _3woq219 = {
    id: "FI",
    displayName: "Finnlando",
    regionId: "154",
    hasTimeZones: true
}, _3woq220 = {
    id: "DE",
    displayName: "Germanujo",
    regionId: "155",
    hasTimeZones: true
}, _3woq221 = {
    id: "GL",
    displayName: "Gronlando",
    regionId: "021",
    hasTimeZones: true
}, _3woq222 = {
    id: "GP",
    displayName: "Gvadelupo",
    regionId: "029",
    hasTimeZones: true
}, _3woq223 = {
    id: "GT",
    displayName: "Gvatemalo",
    regionId: "013",
    hasTimeZones: true
}, _3woq224 = {
    id: "ES",
    displayName: "Hispanujo",
    regionId: "039",
    hasTimeZones: true
}, _3woq225 = {
    id: "HU",
    displayName: "Hungarujo",
    regionId: "151",
    hasTimeZones: true
}, _3woq226 = {
    id: "ID",
    displayName: "Indonezio",
    regionId: "035",
    hasTimeZones: true
}, _3woq227 = {
    id: "CR",
    displayName: "Kostariko",
    regionId: "013",
    hasTimeZones: true
}, _3woq228 = {
    id: "MQ",
    displayName: "Martiniko",
    regionId: "029",
    hasTimeZones: true
}, _3woq229 = {
    id: "MD",
    displayName: "Moldavujo",
    regionId: "151",
    hasTimeZones: true
}, _3woq230 = {
    id: "MN",
    displayName: "Mongolujo",
    regionId: "030",
    hasTimeZones: true
}, _3woq231 = {
    id: "MZ",
    displayName: "Mozambiko",
    regionId: "014",
    hasTimeZones: true
}, _3woq232 = {
    id: "NI",
    displayName: "Nikaragvo",
    regionId: "013",
    hasTimeZones: true
}, _3woq233 = {
    id: "NO",
    displayName: "Norvegujo",
    regionId: "154",
    hasTimeZones: true
}, _3woq234 = {
    id: "PK",
    displayName: "Pakistano",
    regionId: "034",
    hasTimeZones: true
}, _3woq235 = {
    id: "PY",
    displayName: "Paragvajo",
    regionId: "005",
    hasTimeZones: true
}, _3woq236 = {
    id: "SB",
    displayName: "Salomonoj",
    regionId: "054",
    hasTimeZones: true
}, _3woq237 = {
    id: "SV",
    displayName: "Salvadoro",
    regionId: "013",
    hasTimeZones: true
}, _3woq238 = {
    id: "SG",
    displayName: "Singapuro",
    regionId: "035",
    hasTimeZones: true
}, _3woq239 = {
    id: "SK",
    displayName: "Slovakujo",
    regionId: "151",
    hasTimeZones: true
}, _3woq240 = {
    id: "SI",
    displayName: "Slovenujo",
    regionId: "039",
    hasTimeZones: true
}, _3woq241 = {
    id: "LK",
    displayName: "Sri-Lanko",
    regionId: "034",
    hasTimeZones: true
}, _3woq242 = {
    id: "KR",
    displayName: "Sud-Koreo",
    regionId: "030",
    hasTimeZones: true
}, _3woq243 = {
    id: "VE",
    displayName: "Venezuelo",
    regionId: "005",
    hasTimeZones: true
}, _3woq244 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _3woq245 = {
    id: "BD",
    displayName: "Bangladeŝo",
    regionId: "034",
    hasTimeZones: true
}, _3woq246 = {
    id: "BY",
    displayName: "Belorusujo",
    regionId: "151",
    hasTimeZones: true
}, _3woq247 = {
    id: "CI",
    displayName: "Ebur-Bordo",
    regionId: "011",
    hasTimeZones: true
}, _3woq248 = {
    id: "CV",
    displayName: "Kabo-Verdo",
    regionId: "011",
    hasTimeZones: true
}, _3woq249 = {
    id: "GE",
    displayName: "Kartvelujo",
    regionId: "145",
    hasTimeZones: true
}, _3woq250 = {
    id: "KZ",
    displayName: "Kazaĥstano",
    regionId: "143",
    hasTimeZones: true
}, _3woq251 = {
    id: "CK",
    displayName: "Kukinsuloj",
    regionId: "061",
    hasTimeZones: true
}, _3woq252 = {
    id: "MK",
    displayName: "Makedonujo",
    regionId: "039",
    hasTimeZones: true
}, _3woq253 = {
    id: "FM",
    displayName: "Mikronezio",
    regionId: "057",
    hasTimeZones: true
}, _3woq254 = {
    id: "NL",
    displayName: "Nederlando",
    regionId: "155",
    hasTimeZones: true
}, _3woq255 = {
    id: "KP",
    displayName: "Nord-Koreo",
    regionId: "030",
    hasTimeZones: true
}, _3woq256 = {
    id: "SM",
    displayName: "San-Marino",
    regionId: "039",
    hasTimeZones: true
}, _3woq257 = {
    id: "LC",
    displayName: "Sent-Lucio",
    regionId: "029",
    hasTimeZones: true
}, _3woq258 = {
    id: "ZA",
    displayName: "Sud-Afriko",
    regionId: "018",
    hasTimeZones: true
}, _3woq259 = {
    id: "SS",
    displayName: "Sud-Sudano",
    regionId: "014",
    hasTimeZones: true
}, _3woq260 = {
    id: "SZ",
    displayName: "Svazilando",
    regionId: "018",
    hasTimeZones: true
}, _3woq261 = {
    id: "TM",
    displayName: "Turkmenujo",
    regionId: "143",
    hasTimeZones: true
}, _3woq262 = {
    id: "UM",
    displayName: "Usonaj malgrandaj insuloj",
    hasTimeZones: true
}, _3woq263 = {
    id: "GI",
    displayName: "Ĝibraltaro",
    regionId: "039",
    hasTimeZones: true
}, _3woq264 = {
    relative: _3woq64
}, _3woq265 = {
    relative: _3woq65
}, _3woq266 = {
    relative: _3woq66
}, _3woq267 = {
    id: "AZ",
    displayName: "Azerbajĝano",
    regionId: "145",
    hasTimeZones: true
}, _3woq268 = {
    id: "IO",
    displayName: "Brita Hindoceana Teritorio",
    hasTimeZones: true
}, _3woq269 = {
    id: "LU",
    displayName: "Luksemburgo",
    regionId: "155",
    hasTimeZones: true
}, _3woq270 = {
    id: "MG",
    displayName: "Madagaskaro",
    regionId: "014",
    hasTimeZones: true
}, _3woq271 = {
    id: "MR",
    displayName: "Maŭritanujo",
    regionId: "011",
    hasTimeZones: true
}, _3woq272 = {
    id: "NZ",
    displayName: "Nov-Zelando",
    regionId: "053",
    hasTimeZones: true
}, _3woq273 = {
    id: "PT",
    displayName: "Portugalujo",
    regionId: "039",
    hasTimeZones: true
}, _3woq274 = {
    id: "PR",
    displayName: "Puerto-Riko",
    regionId: "029",
    hasTimeZones: true
}, _3woq275 = {
    id: "SH",
    displayName: "Sent-Heleno",
    regionId: "011",
    hasTimeZones: true
}, _3woq276 = {
    id: "SL",
    displayName: "Siera-Leono",
    regionId: "011",
    hasTimeZones: true
}, _3woq277 = [ "1-a kvaronjaro", "2-a kvaronjaro", "3-a kvaronjaro", "4-a kvaronjaro" ], _3woq278 = {
    id: "KG",
    displayName: "Kirgizistano",
    regionId: "143",
    hasTimeZones: true
}, _3woq279 = {
    id: "LI",
    displayName: "Liĥtenŝtejno",
    regionId: "155",
    hasTimeZones: true
}, _3woq280 = {
    id: "GF",
    displayName: "Franca Gviano",
    regionId: "005",
    hasTimeZones: true
}, _3woq281 = {
    id: "GW",
    displayName: "Gvineo-Bisaŭo",
    regionId: "011",
    hasTimeZones: true
}, _3woq282 = {
    id: "MP",
    displayName: "Nord-Marianoj",
    regionId: "057",
    hasTimeZones: true
}, _3woq283 = {
    id: "NF",
    displayName: "Norfolkinsulo",
    regionId: "053",
    hasTimeZones: true
}, _3woq284 = {
    id: "NC",
    displayName: "Nov-Kaledonio",
    regionId: "054",
    hasTimeZones: true
}, _3woq285 = {
    id: "SA",
    displayName: "Saŭda Arabujo",
    regionId: "145",
    hasTimeZones: true
}, _3woq286 = {
    relative: _3woq72
}, _3woq287 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _3woq288 = {
    id: "AG",
    displayName: "Antigvo-Barbudo",
    regionId: "029",
    hasTimeZones: true
}, _3woq289 = {
    id: "GQ",
    displayName: "Ekvatora Gvineo",
    regionId: "017",
    hasTimeZones: true
}, _3woq290 = {
    id: "HM",
    displayName: "Herda kaj Makdonaldaj Insuloj",
    hasTimeZones: false
}, _3woq291 = {
    id: "PN",
    displayName: "Pitkarna Insulo",
    regionId: "061",
    hasTimeZones: true
}, _3woq292 = {
    d: "G y-MM-dd – y-MM-dd",
    M: "G y-MM-dd – y-MM-dd",
    y: "G y-MM-dd – y-MM-dd"
}, _3woq293 = [ "jan", "feb", "mar", "apr", "maj", "jun", "jul", "aŭg", "sep", "okt", "nov", "dec" ], _3woq294 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _3woq295 = {
    id: "PF",
    displayName: "Franca Polinezio",
    regionId: "061",
    hasTimeZones: true
}, _3woq296 = {
    id: "EH",
    displayName: "Okcidenta Saharo",
    regionId: "015",
    hasTimeZones: true
}, _3woq297 = {
    id: "PG",
    displayName: "Papuo-Nov-Gvineo",
    regionId: "054",
    hasTimeZones: true
}, _3woq298 = {
    relative: _3woq97
}, _3woq299 = {
    id: "WF",
    displayName: "Valiso kaj Futuno",
    regionId: "061",
    hasTimeZones: true
}, _3woq300 = {
    id: "BA",
    displayName: "Bosnio-Hercegovino",
    regionId: "039",
    hasTimeZones: true
}, _3woq301 = {
    id: "GB",
    displayName: "Unuiĝinta Reĝlando",
    regionId: "154",
    hasTimeZones: true
}, _3woq302 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _3woq303 = {
    id: "GS",
    displayName: "Sud-Georgio kaj Sud-Sandviĉinsuloj",
    hasTimeZones: true
}, _3woq304 = {
    relative: _3woq213
}, _3woq305 = {
    relative: _3woq214
}, _3woq306 = {
    id: "TT",
    displayName: "Trinidado kaj Tobago",
    regionId: "029",
    hasTimeZones: true
}, _3woq307 = {
    d: "G y-MMM-dd – y-MMM-dd",
    M: "G y-MMM-dd – y-MMM-dd",
    y: "G y-MMM-dd – y-MMM-dd"
}, _3woq308 = {
    id: "VG",
    displayName: "Britaj Virgulininsuloj",
    regionId: "029",
    hasTimeZones: true
}, _3woq309 = {
    id: "VI",
    displayName: "Usonaj Virgulininsuloj",
    regionId: "029",
    hasTimeZones: true
}, _3woq310 = {
    id: "CF",
    displayName: "Centr-Afrika Respubliko",
    regionId: "017",
    hasTimeZones: true
}, _3woq311 = {
    id: "ST",
    displayName: "Sao-Tomeo kaj Principeo",
    regionId: "017",
    hasTimeZones: true
}, _3woq312 = {
    id: "PM",
    displayName: "Sent-Piero kaj Mikelono",
    regionId: "021",
    hasTimeZones: true
}, _3woq313 = {
    abbreviated: {
        am: "atm",
        pm: "ptm"
    },
    narrow: {
        am: "a",
        pm: "p"
    },
    wide: {
        am: "atm",
        pm: "ptm"
    }
}, _3woq314 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _3woq315 = {
    id: "KN",
    displayName: "Sent-Kristofo kaj Neviso",
    regionId: "029",
    hasTimeZones: true
}, _3woq316 = {
    d: "E, y-MM-dd – E, y-MM-dd",
    M: "E, y-MM-dd – E, y-MM-dd",
    y: "E, y-MM-dd – E, y-MM-dd"
}, _3woq317 = {
    abbreviated: {
        am: "atm",
        pm: "ptm"
    },
    narrow: {
        am: "atm",
        pm: "ptm"
    },
    wide: {
        am: "atm",
        pm: "ptm"
    }
}, _3woq318 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _3woq319 = {
    id: "AE",
    displayName: "Unuiĝintaj Arabaj Emirlandoj",
    regionId: "145",
    hasTimeZones: true
}, _3woq320 = {
    id: "SJ",
    displayName: "Svalbardo kaj Jan-Majen-insulo",
    regionId: "154",
    hasTimeZones: true
}, _3woq321 = {
    id: "VC",
    displayName: "Sent-Vincento kaj la Grenadinoj",
    regionId: "029",
    hasTimeZones: true
}, _3woq322 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _3woq323 = {
    future: _3woq38,
    past: _3woq41
}, _3woq324 = {
    future: _3woq39,
    past: _3woq42
}, _3woq325 = {
    future: _3woq40,
    past: _3woq43
}, _3woq326 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _3woq327 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _3woq328 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _3woq329 = {
    future: _3woq44,
    past: _3woq50
}, _3woq330 = {
    future: _3woq45,
    past: _3woq52
}, _3woq331 = [ "januaro", "februaro", "marto", "aprilo", "majo", "junio", "julio", "aŭgusto", "septembro", "oktobro", "novembro", "decembro" ], _3woq332 = {
    future: _3woq51,
    past: _3woq57
}, _3woq333 = {
    future: _3woq53,
    past: _3woq58
}, _3woq334 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _3woq335 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _3woq336 = {
    future: _3woq63,
    past: _3woq69
}, _3woq337 = {
    d: "E, d-'a' - E, d-'a' 'de' MMM y G",
    M: "E, d-'a' 'de' MMM – E, d-'a' 'de' MMM y G",
    y: "E, d-'a' 'de' MMM y – E, d-'a' 'de' MMM y G"
}, _3woq338 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _3woq339 = {
    abbreviated: _3woq1,
    narrow: [ "1", "2", "3", "4" ],
    wide: _3woq277
}, _3woq340 = {
    displayName: "horo",
    relativeTime: _3woq325
}, _3woq341 = {
    displayName: "minuto",
    relativeTime: _3woq330
}, _3woq342 = {
    displayName: "sekundo",
    relative: [ "now" ],
    relativeTime: _3woq333
}, _3woq343 = {
    decimal: ",",
    group: " ",
    percentSign: "%",
    plusSign: "+",
    minusSign: "−",
    perMille: "‰",
    infinity: "∞",
    list: ";",
    exponential: "E",
    superscriptingExponent: "×",
    nan: "NaN",
    timeSeparator: ":"
}, _3woq344 = {
    decimal: ",",
    group: " ",
    percentSign: "%",
    plusSign: "+",
    minusSign: "−",
    perMille: "‰",
    infinity: "∞",
    list: "؛",
    exponential: "اس",
    superscriptingExponent: "×",
    nan: "NaN",
    timeSeparator: ":"
}, _3woq345 = {
    symbols: _3woq344
}, _3woq346 = {
    displayName: "tago",
    relative: _3woq33,
    relativeTime: _3woq324
}, _3woq347 = {
    format: _3woq313,
    standAlone: _3woq317
}, _3woq348 = {
    format: _3woq287,
    numeric: _3woq2,
    standAlone: _3woq287
}, _3woq349 = {
    displayName: "jaro",
    relative: _3woq56,
    relativeTime: _3woq323
}, _3woq350 = {
    abbreviated: _3woq28,
    narrow: _3woq19,
    wide: _3woq212,
    "short": _3woq28
}, _3woq351 = {
    symbols: _3woq344,
    digits: "renderSpelloutCardinal"
}, _3woq352 = {
    displayName: "monato",
    relative: _3woq70,
    relativeTime: _3woq329
}, _3woq353 = {
    "1000": {
        other: "0K"
    },
    "10000": {
        other: "00K"
    },
    "100000": {
        other: "000K"
    },
    "1000000": {
        other: "0M"
    },
    "10000000": {
        other: "00M"
    },
    "100000000": {
        other: "000M"
    },
    "1000000000": {
        other: "0G"
    },
    "10000000000": {
        other: "00G"
    },
    "100000000000": {
        other: "000G"
    },
    "1000000000000": {
        other: "0T"
    },
    "10000000000000": {
        other: "00T"
    },
    "100000000000000": {
        other: "000T"
    }
}, _3woq354 = {
    symbols: _3woq344,
    digits: "renderSpelloutCardinalFinancial"
}, _3woq355 = {
    displayName: "semajno",
    relative: _3woq73,
    relativeTime: _3woq332
}, _3woq356 = {
    abbreviated: _3woq294,
    narrow: _3woq59,
    wide: _3woq294
}, _3woq357 = {
    displayName: "kvaronjaro",
    relative: _3woq62,
    relativeTime: _3woq336
}, _3woq358 = {
    abbreviated: _3woq302,
    narrow: _3woq302,
    wide: _3woq302
}, _3woq359 = {
    format: _3woq358
}, _3woq360 = {
    abbreviated: _3woq293,
    narrow: _3woq47,
    wide: _3woq331
}, _3woq361 = {
    format: _3woq339,
    standAlone: _3woq339
}, _3woq362 = {
    abbreviated: _3woq326,
    narrow: _3woq68,
    wide: _3woq326
}, _3woq363 = {
    abbreviated: _3woq327,
    narrow: _3woq59,
    wide: _3woq327
}, _3woq364 = {
    abbreviated: _3woq328,
    narrow: _3woq68,
    wide: _3woq328
}, _3woq365 = {
    abbreviated: _3woq322,
    narrow: _3woq59,
    wide: _3woq338
}, _3woq366 = {
    abbreviated: _3woq334,
    narrow: _3woq68,
    wide: _3woq334
}, _3woq367 = {
    abbreviated: _3woq335,
    narrow: _3woq59,
    wide: _3woq335
}, _3woq368 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "H-'a' 'horo' 'kaj' m:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss z",
    fullDateTime: "r(U) MMMM d, EEEE H-'a' 'horo' 'kaj' m:ss zzzz"
}, _3woq369 = {
    "1000": _3woq5,
    "10000": _3woq11,
    "100000": _3woq15,
    "1000000": _3woq6,
    "10000000": _3woq12,
    "100000000": _3woq16,
    "1000000000": _3woq7,
    "10000000000": _3woq13,
    "100000000000": _3woq17,
    "1000000000000": _3woq8,
    "10000000000000": _3woq14,
    "100000000000000": _3woq18
}, _3woq370 = {
    fullDate: "EEEE, d-'a' 'de' MMMM y G",
    longDate: "G y-MMMM-dd",
    mediumDate: "G y-MMM-dd",
    shortDate: "GGGGG y-MM-dd",
    fullTime: "H-'a' 'horo' 'kaj' m:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "GGGGG y-MM-dd HH:mm",
    mediumDateTime: "G y-MMM-dd HH:mm:ss",
    longDateTime: "G y-MMMM-dd HH:mm:ss z",
    fullDateTime: "EEEE, d-'a' 'de' MMMM y G H-'a' 'horo' 'kaj' m:ss zzzz"
}, _3woq371 = {
    format: _3woq350,
    standAlone: _3woq350
}, _3woq372 = {
    basic: _3woq370,
    cldr: P.calendars.buddhist.dateFormats
}, _3woq373 = {
    format: _3woq356,
    standAlone: _3woq356
}, _3woq374 = {
    "long": _3woq353,
    "short": _3woq353,
    "default": "#,##0.###"
}, _3woq375 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _3woq376 = {
    format: _3woq360,
    standAlone: _3woq360
}, _3woq377 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _3woq378 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _3woq379 = {
    format: _3woq365,
    standAlone: _3woq365
}, _3woq380 = {
    basic: _3woq368,
    cldr: _3woq375
}, _3woq381 = {
    d: {
        d: "d–d"
    },
    h: _3woq9,
    H: {
        H: "HH–HH"
    },
    hm: _3woq61,
    Hm: _3woq24,
    hmv: _3woq71,
    Hmv: _3woq30,
    hv: _3woq20,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _3woq31,
    MEd: _3woq48,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _3woq21,
    MMMEd: _3woq49,
    y: {
        y: "U–U"
    },
    yM: _3woq25,
    yMd: _3woq244,
    yMEd: _3woq318,
    yMMM: _3woq26,
    yMMMd: _3woq67,
    yMMMEd: _3woq314,
    yMMMM: _3woq34
}, _3woq382 = {
    d: {
        d: "d–d"
    },
    h: {
        h: "h–h a"
    },
    H: {
        H: "HH–HH"
    },
    hm: _3woq23,
    Hm: _3woq24,
    hmv: _3woq29,
    Hmv: _3woq30,
    hv: {
        h: "h–h a v"
    },
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _3woq31,
    MEd: _3woq46,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _3woq35,
    MMMEd: _3woq60,
    y: {
        y: "G y–y"
    },
    yM: _3woq32,
    yMd: _3woq292,
    yMEd: _3woq316,
    yMMM: _3woq36,
    yMMMd: _3woq307,
    yMMMEd: _3woq337,
    yMMMM: _3woq37
}, _3woq383 = {
    beforeCurrency: _3woq377,
    afterCurrency: _3woq377
}, _3woq384 = {
    "short": _3woq369,
    "default": "¤ #,##0.00",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _3woq383
}, _3woq385 = {
    abbreviated: _3woq378,
    narrow: _3woq378,
    wide: _3woq378
}, _3woq386 = {
    format: _3woq385
}, _3woq387 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _3woq374,
    currency: _3woq384,
    percent: {
        "default": "#,##0%"
    }
}, _3woq388 = {
    era: {
        displayName: "erao"
    },
    year: _3woq349,
    quarter: _3woq357,
    month: _3woq352,
    week: _3woq355,
    day: _3woq346,
    weekday: _3woq27,
    dayperiod: _3woq3,
    hour: _3woq340,
    "hour-narrow": {
        displayName: "h"
    },
    minute: _3woq341,
    "minute-narrow": {
        displayName: "m"
    },
    second: _3woq342,
    "second-narrow": {
        displayName: "s"
    },
    zone: _3woq4,
    sun: _3woq298,
    mon: _3woq264,
    tue: _3woq265,
    wed: _3woq304,
    thu: _3woq266,
    fri: _3woq305,
    sat: _3woq286
}, _3woq389 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _3woq388
}, _3woq390 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _3woq391 = {
    dateFormats: _3woq372,
    datePartsOrder: "ymd",
    dateIntervalFormats: _3woq382,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _3woq371,
    dayPeriods: _3woq347,
    monthNames: _3woq379,
    eraNames: _3woq22,
    quarterNames: _3woq361,
    fields: _3woq388
}, _3woq392 = {
    dayParts: _3woq359,
    days: _3woq386,
    months: _3woq386,
    years: _3woq386,
    zodiacs: _3woq359
}, _3woq393 = {
    dateFormats: _3woq380,
    datePartsOrder: "md",
    dateIntervalFormats: _3woq381,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _3woq371,
    dayPeriods: _3woq347,
    cyclicNames: _3woq392,
    monthNames: _3woq373,
    monthPatterns: _3woq348,
    quarterNames: _3woq361,
    fields: _3woq388
}, _3woq394 = [ _3woq174, _3woq175, _3woq133, _3woq98, _3woq99, _3woq134, _3woq55, _3woq288, _3woq215, _3woq176, _3woq77, _3woq267, _3woq216, _3woq177, _3woq135, _3woq245, _3woq136, _3woq137, _3woq100, _3woq138, _3woq101, _3woq246, _3woq102, _3woq178, _3woq139, _3woq140, _3woq300, _3woq141, _3woq268, _3woq308, _3woq142, _3woq217, _3woq143, _3woq144, _3woq103, _3woq310, _3woq104, _3woq145, _3woq179, _3woq247, _3woq105, _3woq180, _3woq289, _3woq146, _3woq181, _3woq182, _3woq106, _3woq218, _3woq219, _3woq78, _3woq280, _3woq295, _3woq183, _3woq107, _3woq108, _3woq79, _3woq220, _3woq147, _3woq148, _3woq221, _3woq109, _3woq222, _3woq80, _3woq223, _3woq110, _3woq281, _3woq111, _3woq290, _3woq149, _3woq224, _3woq150, _3woq184, _3woq225, _3woq226, _3woq81, _3woq82, _3woq151, _3woq152, _3woq153, _3woq154, _3woq155, _3woq185, _3woq112, _3woq186, _3woq248, _3woq156, _3woq187, _3woq113, _3woq249, _3woq114, _3woq250, _3woq188, _3woq83, _3woq84, _3woq278, _3woq189, _3woq190, _3woq157, _3woq158, _3woq227, _3woq191, _3woq74, _3woq251, _3woq159, _3woq85, _3woq160, _3woq115, _3woq116, _3woq161, _3woq86, _3woq192, _3woq279, _3woq269, _3woq270, _3woq117, _3woq252, _3woq193, _3woq162, _3woq194, _3woq87, _3woq88, _3woq118, _3woq228, _3woq195, _3woq196, _3woq271, _3woq163, _3woq253, _3woq164, _3woq229, _3woq119, _3woq230, _3woq231, _3woq165, _3woq89, _3woq254, _3woq120, _3woq232, _3woq75, _3woq166, _3woq121, _3woq255, _3woq282, _3woq283, _3woq233, _3woq284, _3woq272, _3woq296, _3woq90, _3woq234, _3woq122, _3woq297, _3woq235, _3woq91, _3woq291, _3woq197, _3woq273, _3woq274, _3woq123, _3woq124, _3woq198, _3woq125, _3woq236, _3woq237, _3woq92, _3woq256, _3woq311, _3woq285, _3woq199, _3woq200, _3woq275, _3woq315, _3woq257, _3woq312, _3woq321, _3woq276, _3woq238, _3woq93, _3woq239, _3woq240, _3woq201, _3woq241, _3woq258, _3woq303, _3woq242, _3woq259, _3woq126, _3woq202, _3woq320, _3woq260, _3woq167, _3woq168, _3woq203, _3woq169, _3woq204, _3woq205, _3woq127, _3woq94, _3woq306, _3woq170, _3woq261, _3woq171, _3woq128, _3woq129, _3woq172, _3woq301, _3woq319, _3woq206, _3woq309, _3woq262, _3woq95, _3woq207, _3woq299, _3woq208, _3woq209, _3woq243, _3woq210, _3woq130, _3woq211, _3woq76, _3woq131, _3woq96, _3woq132, _3woq263, _3woq173 ];

inter.id = "eo";

inter.listPatterns = {
    "default": {
        "2": "{0} kaj {1}",
        start: "{0}, {1}",
        middle: "{0}, {1}",
        end: "{0} kaj {1}"
    }
};

inter.unitPatterns = {
    "long": {
        unit: {
            areaSquareKilometer: {
                one: "{0} kvadrata kilometro",
                other: "{0} kvadrataj kilometroj"
            },
            areaHectare: {
                one: "{0} hektaro",
                other: "{0} hektaroj"
            },
            areaSquareMeter: {
                one: "{0} kvadrata metro",
                other: "{0} kvadrataj metroj"
            },
            areaSquareCentimeter: {
                one: "{0} kvadrata centimetro",
                other: "{0} kvadrataj centimetroj"
            },
            areaSquareMile: {
                one: "{0} kvadrata mejlo",
                other: "{0} kvadrataj mejloj"
            },
            areaAcre: {
                one: "{0} akreo",
                other: "{0} akreoj"
            },
            areaSquareYard: {
                one: "{0} kvadrata jardo",
                other: "{0} kvadrataj jardoj"
            },
            areaSquareFoot: {
                one: "{0} kvadrata futo",
                other: "{0} kvadrataj futoj"
            },
            areaSquareInch: {
                one: "{0} kvadrata colo",
                other: "{0} kvadrataj coloj"
            },
            digitalTerabyte: {
                one: "{0} terabajto",
                other: "{0} terabajtoj"
            },
            digitalTerabit: {
                one: "{0} terabito",
                other: "{0} terabitoj"
            },
            digitalGigabyte: {
                one: "{0} gigabajto",
                other: "{0} gigabajtoj"
            },
            digitalGigabit: {
                one: "{0} gigabito",
                other: "{0} gigabitoj"
            },
            digitalMegabyte: {
                one: "{0} megabajto",
                other: "{0} megabajtoj"
            },
            digitalMegabit: {
                one: "{0} megabito",
                other: "{0} megabitoj"
            },
            digitalKilobyte: {
                one: "{0} kilobajto",
                other: "{0} kilobajtoj"
            },
            digitalKilobit: {
                one: "{0} kilobito",
                other: "{0} kilobitoj"
            },
            digitalByte: {
                one: "{0} bajto",
                other: "{0} bajtoj"
            },
            digitalBit: {
                one: "{0} bito",
                other: "{0} bitoj"
            },
            durationYear: {
                one: "{0} jaro",
                other: "{0} jaroj"
            },
            durationMonth: {
                one: "{0} monato",
                other: "{0} monatoj"
            },
            durationWeek: {
                one: "{0} semajno",
                other: "{0} semajnoj"
            },
            durationDay: {
                one: "{0} tago",
                other: "{0} tagoj"
            },
            durationHour: {
                one: "{0} horo",
                other: "{0} horoj"
            },
            durationMinute: {
                one: "{0} minuto",
                other: "{0} minutoj"
            },
            durationSecond: {
                one: "{0} sekundo",
                other: "{0} sekundoj"
            },
            durationMillisecond: {
                one: "{0} milisekundo",
                other: "{0} milisekundoj"
            },
            lengthKilometer: {
                one: "{0} kilometro",
                other: "{0} kilometroj"
            },
            lengthMeter: {
                one: "{0} metro",
                other: "{0} metroj"
            },
            lengthDecimeter: {
                one: "{0} decimetro",
                other: "{0} decimetroj"
            },
            lengthCentimeter: {
                one: "{0} centimetro",
                other: "{0} centimetroj"
            },
            lengthMillimeter: {
                one: "{0} milimetro",
                other: "{0} milimetroj"
            },
            lengthMicrometer: {
                one: "{0} mikrometro",
                other: "{0} mikrometroj"
            },
            lengthNanometer: {
                one: "{0} nanometro",
                other: "{0} nanometroj"
            },
            lengthPicometer: {
                one: "{0} pikometro",
                other: "{0} pikometroj"
            },
            lengthMile: {
                one: "{0} mejlo",
                other: "{0} mejloj"
            },
            lengthYard: {
                one: "{0} jardo",
                other: "{0} jardoj"
            },
            lengthFoot: {
                one: "{0} futo",
                other: "{0} futoj"
            },
            lengthInch: {
                one: "{0} colo",
                other: "{0} coloj"
            },
            lengthParsec: {
                one: "{0} parseko",
                other: "{0} parsekoj"
            },
            lengthLightYear: {
                one: "{0} lumjaro",
                other: "{0} lumjaroj"
            },
            lengthAstronomicalUnit: {
                one: "{0} astronomia unuo",
                other: "{0} astronomiaj unuoj"
            },
            lengthFurlong: {
                one: "{0} stadio",
                other: "{0} stadioj"
            },
            lengthFathom: {
                one: "{0} klafto",
                other: "{0} klaftoj"
            },
            lengthNauticalMile: {
                one: "{0} marmejlo",
                other: "{0} marmejloj"
            },
            massKilogram: {
                one: "{0} kilogramo",
                other: "{0} kilogramoj"
            },
            massGram: {
                one: "{0} gramo",
                other: "{0} gramoj"
            },
            speedKilometerPerHour: {
                one: "{0} kilometro en horo",
                other: "{0} kilometroj en horo"
            },
            temperatureCelsius: {
                one: "{0} grado celsia",
                other: "{0} gradoj celsiaj"
            },
            volumeLiter: {
                one: "{0} litro",
                other: "{0} litroj"
            }
        }
    },
    "short": {
        unit: {
            areaSquareKilometer: {
                one: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                one: "{0} ha",
                other: "{0} ha"
            },
            areaSquareMeter: {
                one: "{0} m²",
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            durationYear: {
                one: "{0} j.",
                other: "{0} j."
            },
            durationMonth: {
                one: "{0} mon.",
                other: "{0} mon."
            },
            durationDay: {
                one: "{0} t.",
                other: "{0} t."
            },
            durationHour: {
                one: "{0} h.",
                other: "{0} h."
            },
            durationMinute: {
                one: "{0} m.",
                other: "{0} m."
            },
            durationSecond: {
                one: "{0} s.",
                other: "{0} s."
            },
            durationMillisecond: {
                one: "{0} ms.",
                other: "{0} ms."
            },
            lengthKilometer: {
                one: "{0} km",
                other: "{0} km"
            },
            lengthMeter: {
                one: "{0} m",
                other: "{0} m"
            },
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: {
                one: "{0} cm",
                other: "{0} cm"
            },
            lengthMillimeter: {
                one: "{0} mm",
                other: "{0} mm"
            },
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: {
                one: "{0} pm",
                other: "{0} pm"
            },
            lengthParsec: {
                one: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: {
                one: "{0} lj",
                other: "{0} lj"
            },
            lengthAstronomicalUnit: {
                one: "{0} au",
                other: "{0} au"
            },
            massKilogram: {
                one: "{0} kg",
                other: "{0} kg"
            },
            massGram: {
                one: "{0} g",
                other: "{0} g"
            },
            speedKilometerPerHour: {
                one: "{0} km/h",
                other: "{0} km/h"
            },
            temperatureCelsius: {
                one: "{0} °C",
                other: "{0} °C"
            },
            volumeLiter: {
                one: "{0} L",
                other: "{0} L"
            },
            accelerationGForce: {
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                other: "{0} m/s²"
            },
            angleRevolution: {
                other: "{0} rev"
            },
            angleRadian: {
                other: "{0} rad"
            },
            angleDegree: {
                other: "{0}°"
            },
            angleArcMinute: {
                other: "{0}′"
            },
            angleArcSecond: {
                other: "{0}″"
            },
            areaSquareMile: {
                other: "{0} mi²"
            },
            areaAcre: {
                other: "{0} ac"
            },
            areaSquareYard: {
                other: "{0} yd²"
            },
            areaSquareFoot: {
                other: "{0} ft²"
            },
            areaSquareInch: {
                other: "{0} in²"
            },
            concentrKarat: {
                other: "{0} kt"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionLiterPerKilometer: {
                other: "{0} L/km"
            },
            "consumptionLiterPer-100kilometers": {
                other: "{0} L/100km"
            },
            consumptionMilePerGallon: {
                other: "{0} mpg US"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            digitalTerabyte: {
                other: "{0} TB"
            },
            digitalTerabit: {
                other: "{0} Tb"
            },
            digitalGigabyte: {
                other: "{0} GB"
            },
            digitalGigabit: {
                other: "{0} Gb"
            },
            digitalMegabyte: {
                other: "{0} MB"
            },
            digitalMegabit: {
                other: "{0} Mb"
            },
            digitalKilobyte: {
                other: "{0} kB"
            },
            digitalKilobit: {
                other: "{0} kb"
            },
            digitalByte: {
                other: "{0} byte"
            },
            digitalBit: {
                other: "{0} bit"
            },
            durationCentury: {
                other: "{0} c"
            },
            durationWeek: {
                other: "{0} w"
            },
            durationMicrosecond: {
                other: "{0} μs"
            },
            durationNanosecond: {
                other: "{0} ns"
            },
            electricAmpere: {
                other: "{0} A"
            },
            electricMilliampere: {
                other: "{0} mA"
            },
            electricOhm: {
                other: "{0} Ω"
            },
            electricVolt: {
                other: "{0} V"
            },
            energyKilocalorie: {
                other: "{0} kcal"
            },
            energyCalorie: {
                other: "{0} cal"
            },
            energyFoodcalorie: {
                other: "{0} Cal"
            },
            energyKilojoule: {
                other: "{0} kJ"
            },
            energyJoule: {
                other: "{0} J"
            },
            energyKilowattHour: {
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                other: "{0} kHz"
            },
            frequencyHertz: {
                other: "{0} Hz"
            },
            lengthMile: {
                other: "{0} mi"
            },
            lengthYard: {
                other: "{0} yd"
            },
            lengthFoot: {
                other: "{0} ft"
            },
            lengthInch: {
                other: "{0} in"
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            lengthNauticalMile: {
                other: "{0} nmi"
            },
            lengthMileScandinavian: {
                other: "{0} smi"
            },
            lightLux: {
                other: "{0} lx"
            },
            massMetricTon: {
                other: "{0} t"
            },
            massMilligram: {
                other: "{0} mg"
            },
            massMicrogram: {
                other: "{0} µg"
            },
            massTon: {
                other: "{0} tn"
            },
            massStone: {
                other: "{0} st"
            },
            massPound: {
                other: "{0} lb"
            },
            massOunce: {
                other: "{0} oz"
            },
            massOunceTroy: {
                other: "{0} oz t"
            },
            massCarat: {
                other: "{0} CD"
            },
            powerGigawatt: {
                other: "{0} GW"
            },
            powerMegawatt: {
                other: "{0} MW"
            },
            powerKilowatt: {
                other: "{0} kW"
            },
            powerWatt: {
                other: "{0} W"
            },
            powerMilliwatt: {
                other: "{0} mW"
            },
            powerHorsepower: {
                other: "{0} hp"
            },
            pressureHectopascal: {
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                other: "{0} psi"
            },
            pressureInchHg: {
                other: "{0} inHg"
            },
            pressureMillibar: {
                other: "{0} mbar"
            },
            speedMeterPerSecond: {
                other: "{0} m/s"
            },
            speedMilePerHour: {
                other: "{0} mi/h"
            },
            speedKnot: {
                other: "{0} kn"
            },
            temperatureGeneric: {
                other: "{0}°"
            },
            temperatureFahrenheit: {
                other: "{0}°F"
            },
            temperatureKelvin: {
                other: "{0} K"
            },
            volumeCubicKilometer: {
                other: "{0} km³"
            },
            volumeCubicMeter: {
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                other: "{0} cm³"
            },
            volumeCubicMile: {
                other: "{0} mi³"
            },
            volumeCubicYard: {
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                other: "{0} ft³"
            },
            volumeCubicInch: {
                other: "{0} in³"
            },
            volumeMegaliter: {
                other: "{0} ML"
            },
            volumeHectoliter: {
                other: "{0} hL"
            },
            volumeDeciliter: {
                other: "{0} dL"
            },
            volumeCentiliter: {
                other: "{0} cL"
            },
            volumeMilliliter: {
                other: "{0} mL"
            },
            volumePintMetric: {
                other: "{0} mpt"
            },
            volumeCupMetric: {
                other: "{0} mc"
            },
            volumeAcreFoot: {
                other: "{0} ac ft"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallon: {
                other: "{0} gal US"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            },
            volumeQuart: {
                other: "{0} qt"
            },
            volumePint: {
                other: "{0} pt"
            },
            volumeCup: {
                other: "{0} c"
            },
            volumeFluidOunce: {
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                other: "{0} tbsp"
            },
            volumeTeaspoon: {
                other: "{0} tsp"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            angleDegree: {
                one: "{0}°",
                other: "{0}°"
            },
            areaSquareKilometer: {
                one: "{0}km²",
                other: "{0}km²"
            },
            areaHectare: {
                one: "{0}ha",
                other: "{0}ha"
            },
            areaSquareMeter: {
                one: "{0}m²",
                other: "{0}m²"
            },
            areaSquareCentimeter: {
                one: "{0}cm²",
                other: "{0}cm²"
            },
            durationYear: {
                one: "{0}j.",
                other: "{0}j."
            },
            durationDay: {
                one: "{0}t.",
                other: "{0}t."
            },
            durationHour: {
                one: "{0}h.",
                other: "{0}h."
            },
            durationMinute: {
                one: "{0}m.",
                other: "{0}m."
            },
            durationSecond: {
                one: "{0}s.",
                other: "{0}s."
            },
            durationMillisecond: {
                one: "{0}ms.",
                other: "{0}ms."
            },
            lengthKilometer: {
                one: "{0}km",
                other: "{0}km"
            },
            lengthMeter: {
                one: "{0}m",
                other: "{0}m"
            },
            lengthDecimeter: {
                one: "{0}dm",
                other: "{0}dm"
            },
            lengthCentimeter: {
                one: "{0}cm",
                other: "{0}cm"
            },
            lengthMillimeter: {
                one: "{0}mm",
                other: "{0}mm"
            },
            lengthMicrometer: {
                one: "{0}µm",
                other: "{0}µm"
            },
            lengthNanometer: {
                one: "{0}nm",
                other: "{0}nm"
            },
            lengthPicometer: {
                one: "{0}pm",
                other: "{0}pm"
            },
            lengthParsec: {
                one: "{0}pc",
                other: "{0}pc"
            },
            lengthLightYear: {
                one: "{0}lj",
                other: "{0}lj"
            },
            lengthAstronomicalUnit: {
                one: "{0}au",
                other: "{0}au"
            },
            massKilogram: {
                one: "{0}kg",
                other: "{0}kg"
            },
            massGram: {
                one: "{0}g",
                other: "{0}g"
            },
            speedKilometerPerHour: {
                one: "{0}km/h",
                other: "{0}km/h"
            },
            temperatureCelsius: {
                one: "{0}°C",
                other: "{0}°C"
            },
            volumeLiter: {
                one: "{0}L",
                other: "{0}L"
            }
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "−HH:mm" ],
    gmt: "UTC{0}",
    gmtZero: "UTC",
    region: "tempo de {0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "somera tempo de {0}",
        standard: "norma tempo de {0}"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "b", "c", "ĉ", "d", "e", "f", "g", "ĝ", "h", "ĥ", "i", "j", "ĵ", "k", "l", "m", "n", "o", "p", "r", "s", "ŝ", "t", "u", "ŭ", "v", "z" ],
        auxiliary: [ "q", "w", "x", "y" ],
        index: [ "A", "B", "C", "Ĉ", "D", "E", "F", "G", "Ĝ", "H", "Ĥ", "I", "J", "Ĵ", "K", "L", "M", "N", "O", "P", "R", "S", "Ŝ", "T", "U", "Ŭ", "V", "Z" ],
        punctuation: [ "\\-", "‐", "–", "—", ",", ";", "\\:", "!", "?", ".", "…", "'", "‘", "’", '"', "“", "”", "(", ")", "\\[", "\\]", "\\{", "\\}", "/" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _3woq344,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _3woq387,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _3woq387,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _3woq344,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _3woq344,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _3woq344,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _3woq344,
        digits: "renderEthiopic"
    },
    finance: _3woq345,
    fullwide: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _3woq344,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _3woq344,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _3woq344,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _3woq344,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _3woq351,
    hansfin: _3woq354,
    hant: _3woq351,
    hantfin: _3woq354,
    hebr: {
        symbols: _3woq344,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _3woq344,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _3woq351,
    jpanfin: _3woq354,
    kali: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _3woq344,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _3woq344,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _3woq344,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _3woq344,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _3woq344,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _3woq344,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _3woq344,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _3woq344,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _3woq345,
    nkoo: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _3woq344,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _3woq344,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _3woq344,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _3woq344,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _3woq344,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _3woq344,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _3woq345,
    vaii: {
        symbols: _3woq343,
        formats: _3woq387,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _3woq344,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _3woq372,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3woq382,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3woq371,
        dayPeriods: _3woq347,
        monthNames: _3woq376,
        eraNames: {
            wide: [ "BE" ],
            abbreviated: [ "BE" ]
        },
        quarterNames: _3woq361,
        fields: _3woq388
    },
    chinese: _3woq393,
    coptic: {
        dateFormats: _3woq372,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3woq382,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3woq371,
        dayPeriods: _3woq347,
        monthNames: {
            format: _3woq364,
            standAlone: _3woq364
        },
        eraNames: _3woq54,
        quarterNames: _3woq361,
        fields: _3woq388
    },
    dangi: _3woq393,
    ethioaa: _3woq389,
    ethiopic: {
        dateFormats: _3woq372,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3woq382,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3woq371,
        dayPeriods: _3woq347,
        monthNames: {
            format: _3woq366,
            standAlone: _3woq366
        },
        eraNames: _3woq54,
        quarterNames: _3woq361,
        fields: _3woq388
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE, d-'a' 'de' MMMM y",
                longDate: "y-MMMM-dd",
                mediumDate: "y-MMM-dd",
                shortDate: "yy-MM-dd",
                fullTime: "H-'a' 'horo' 'kaj' m:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "yy-MM-dd HH:mm",
                mediumDateTime: "y-MMM-dd HH:mm:ss",
                longDateTime: "y-MMMM-dd HH:mm:ss z",
                fullDateTime: "EEEE, d-'a' 'de' MMMM y H-'a' 'horo' 'kaj' m:ss zzzz"
            },
            cldr: {
                d: "d",
                Ed: "E d",
                MMMd: "d MMM",
                MMMEd: "E 'la' d-'an' 'de' MMM",
                y: "y",
                yMMM: "MMM y",
                yMMMd: "d MMM y",
                yMMMEd: "E 'la' d-'an' 'de' MMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y",
                E: "ccc",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y MMM",
                GyMMMd: "G y MMM d",
                GyMMMEd: "G y MMM d, E",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "MM-dd",
                MEd: "MM-dd, E",
                MMM: "LLL",
                MMMMd: "MMMM d",
                ms: "mm:ss",
                yM: "y-MM",
                yMd: "y-MM-dd",
                yMEd: "y-MM-dd, E",
                yMMMM: "y MMMM"
            }
        },
        datePartsOrder: "ymd",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: {
                h: "h–h a"
            },
            H: {
                H: "HH–HH"
            },
            hm: _3woq23,
            Hm: _3woq24,
            hmv: _3woq29,
            Hmv: _3woq30,
            hv: {
                h: "h–h a v"
            },
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            Md: _3woq31,
            MEd: _3woq46,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _3woq35,
            MMMEd: _3woq60,
            y: {
                y: "y–y"
            },
            yM: _3woq25,
            yMd: _3woq244,
            yMEd: _3woq316,
            yMMM: {
                M: "y-MMM – y-MMM",
                y: "y-MMM – y-MMM"
            },
            yMMMd: {
                d: "y-MMM-dd – y-MMM-dd",
                M: "y-MMM-dd – y-MMM-dd",
                y: "y-MMM-dd – y-MMM-dd"
            },
            yMMMEd: {
                d: "E, d-'a' - E, d-'a' 'de' MMM y",
                M: "E, d-'a' 'de' MMM – E, d-'a' 'de' MMM y",
                y: "E, d-'a' 'de' MMM y – E, d-'a' 'de' MMM y"
            },
            yMMMM: {
                M: "y MMMM–MMMM",
                y: "y MMMM – y MMMM"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3woq371,
        dayPeriods: _3woq347,
        monthNames: _3woq376,
        eraNames: {
            wide: [ "aK", "pK" ],
            abbreviated: [ "aK", "pK" ]
        },
        quarterNames: _3woq361,
        fields: _3woq388
    },
    hebrew: {
        dateFormats: _3woq372,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3woq382,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3woq371,
        dayPeriods: _3woq347,
        monthNames: {
            format: _3woq362,
            standAlone: _3woq362
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _3woq361,
        fields: _3woq388
    },
    indian: {
        dateFormats: _3woq372,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3woq382,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3woq371,
        dayPeriods: _3woq347,
        monthNames: {
            format: _3woq367,
            standAlone: _3woq367
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _3woq361,
        fields: _3woq388
    },
    islamic: _3woq391,
    "islamic-umalqura": _3woq391,
    "islamic-tbla": _3woq391,
    "islamic-civil": _3woq391,
    "islamic-rgsa": _3woq391,
    iso8601: _3woq389,
    japanese: {
        dateFormats: _3woq372,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3woq382,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3woq371,
        dayPeriods: _3woq347,
        monthNames: _3woq376,
        eraNames: {
            wide: _3woq390,
            abbreviated: _3woq390
        },
        quarterNames: _3woq361,
        fields: _3woq388
    },
    persian: {
        dateFormats: _3woq372,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3woq382,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3woq371,
        dayPeriods: _3woq347,
        monthNames: {
            format: _3woq363,
            standAlone: _3woq363
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _3woq361,
        fields: _3woq388
    },
    roc: {
        dateFormats: _3woq372,
        datePartsOrder: "ymd",
        dateIntervalFormats: _3woq382,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _3woq371,
        dayPeriods: _3woq347,
        monthNames: _3woq376,
        eraNames: {
            wide: _3woq10,
            abbreviated: _3woq10
        },
        quarterNames: _3woq361,
        fields: _3woq388
    },
    islamicc: _3woq389
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderSpelloutCardinal(n);
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "minus " + this.renderSpelloutCardinal(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinal(Math.floor(n)) + " komo " + this.renderSpelloutCardinal(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinal(Math.floor(n / 1e15)) + " biliardoj" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinal(n % 1e15));
    if (n >= 1e15) return "biliardo" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinal(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinal(Math.floor(n / 1e12)) + " bilionoj" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinal(n % 1e12));
    if (n >= 1e12) return "biliono" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinal(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinal(Math.floor(n / 1e9)) + " miliardoj" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinal(n % 1e9));
    if (n >= 1e9) return "miliardo" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinal(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinal(Math.floor(n / 1e6)) + " milionoj" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinal(n % 1e6));
    if (n >= 1e6) return "miliono" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinal(n % 1e6));
    if (n >= 2e3) return this.renderSpelloutCardinal(Math.floor(n / 1e3)) + " mil" + (n === 2e3 ? "" : " " + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 1e3) return "mil" + (n === 1e3 ? "" : " " + this.renderSpelloutCardinal(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinal(Math.floor(n / 100)) + "cent" + (n === 200 ? "" : " " + this.renderSpelloutCardinal(n % 100));
    if (n >= 100) return "cent" + (n === 100 ? "" : " " + this.renderSpelloutCardinal(n % 100));
    if (n >= 20) return this.renderSpelloutCardinal(Math.floor(n / 10)) + "dek" + (n === 20 ? "" : " " + this.renderSpelloutCardinal(n % 10));
    if (n >= 10) return "dek" + (n === 10 ? "" : " " + this.renderSpelloutCardinal(n % 10));
    if (n >= 9) return "naŭ";
    if (n >= 8) return "ok";
    if (n >= 7) return "sep";
    if (n >= 6) return "ses";
    if (n >= 5) return "kvin";
    if (n >= 4) return "kvar";
    if (n >= 3) return "tri";
    if (n >= 2) return "du";
    if (n >= 1) return "unu";
    if (n >= 0) return "nulo";
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.territories = _3woq394;

inter.countries = _3woq394;

inter.languages = [ {
    id: "ab",
    displayName: "abĥaza"
}, {
    id: "aa",
    displayName: "afara"
}, {
    id: "af",
    displayName: "afrikansa",
    nativeDisplayName: "Afrikaans"
}, {
    id: "ay",
    displayName: "ajmara"
}, {
    id: "ak",
    displayName: "akana",
    nativeDisplayName: "Akan"
}, {
    id: "en_us",
    displayName: "usona angla",
    nativeDisplayName: "American English"
}, {
    id: "en_au",
    displayName: "aŭstralia angla",
    nativeDisplayName: "Australian English"
}, {
    id: "az",
    displayName: "azerbajĝana",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "malaja",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "ba",
    displayName: "baŝkira"
}, {
    id: "bi",
    displayName: "bislamo"
}, {
    id: "bs",
    displayName: "bosnia",
    nativeDisplayName: "bosanski"
}, {
    id: "br",
    displayName: "bretona",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "brita angla",
    nativeDisplayName: "British English"
}, {
    id: "en_ca",
    displayName: "kanada angla",
    nativeDisplayName: "Canadian English"
}, {
    id: "ca",
    displayName: "kataluna",
    nativeDisplayName: "català"
}, {
    id: "sn",
    displayName: "ŝona",
    nativeDisplayName: "chiShona"
}, {
    id: "ts",
    displayName: "conga"
}, {
    id: "tn",
    displayName: "cvana"
}, {
    id: "cy",
    displayName: "kimra",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "dana",
    nativeDisplayName: "dansk"
}, {
    id: "de",
    displayName: "germana",
    nativeDisplayName: "Deutsch"
}, {
    id: "dsb",
    displayName: "malsuprasoraba",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "et",
    displayName: "estona",
    nativeDisplayName: "eesti"
}, {
    id: "en",
    displayName: "angla",
    nativeDisplayName: "English"
}, {
    id: "ik",
    displayName: "eskima"
}, {
    id: "es",
    displayName: "hispana",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "eŭropa hispana",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "meksika hispana",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "amerika hispana",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "eŭska",
    nativeDisplayName: "euskara"
}, {
    id: "fil",
    displayName: "filipina",
    nativeDisplayName: "Filipino"
}, {
    id: "fj",
    displayName: "fiĝia"
}, {
    id: "fr",
    displayName: "franca",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "kanada franca",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "svisa franca",
    nativeDisplayName: "français suisse"
}, {
    id: "fo",
    displayName: "feroa",
    nativeDisplayName: "føroyskt"
}, {
    id: "ga",
    displayName: "irlanda",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gl",
    displayName: "galega",
    nativeDisplayName: "galego"
}, {
    id: "gn",
    displayName: "gvarania"
}, {
    id: "gd",
    displayName: "gaela",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "ht",
    displayName: "haitia kreola"
}, {
    id: "ha",
    displayName: "haŭsa",
    nativeDisplayName: "Hausa"
}, {
    id: "hr",
    displayName: "kroata",
    nativeDisplayName: "hrvatski"
}, {
    id: "efi",
    displayName: "ibibioefika"
}, {
    id: "rn",
    displayName: "burunda",
    nativeDisplayName: "Ikirundi"
}, {
    id: "id",
    displayName: "indonezia",
    nativeDisplayName: "Indonesia"
}, {
    id: "ia",
    displayName: "interlingvao"
}, {
    id: "iu",
    displayName: "inuita"
}, {
    id: "zu",
    displayName: "zulua",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "itala",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "java"
}, {
    id: "kl",
    displayName: "gronlanda",
    nativeDisplayName: "kalaallisut"
}, {
    id: "rw",
    displayName: "ruanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "sw",
    displayName: "svahila",
    nativeDisplayName: "Kiswahili"
}, {
    id: "tlh",
    displayName: "klingona"
}, {
    id: "co",
    displayName: "korsika"
}, {
    id: "xh",
    displayName: "ksosa"
}, {
    id: "ku",
    displayName: "kurda"
}, {
    id: "la",
    displayName: "latino"
}, {
    id: "lv",
    displayName: "latva",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "tongaa",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lt",
    displayName: "litova",
    nativeDisplayName: "lietuvių"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "lb",
    displayName: "luksemburga",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "hu",
    displayName: "hungara",
    nativeDisplayName: "magyar"
}, {
    id: "dv",
    displayName: "mahla"
}, {
    id: "mg",
    displayName: "malagasa",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "malta",
    nativeDisplayName: "Malti"
}, {
    id: "mi",
    displayName: "maoria"
}, {
    id: "arn",
    displayName: "mapuĉa"
}, {
    id: "na",
    displayName: "naura"
}, {
    id: "nl",
    displayName: "nederlanda",
    nativeDisplayName: "Nederlands"
}, {
    id: "und",
    displayName: "nekonata lingvo"
}, {
    id: "zxx",
    displayName: "nelingvaĵo"
}, {
    id: "nb",
    displayName: "dannorvega",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "norvega"
}, {
    id: "nn",
    displayName: "novnorvega",
    nativeDisplayName: "nynorsk"
}, {
    id: "ie",
    displayName: "okcidentalo"
}, {
    id: "oc",
    displayName: "okcitana"
}, {
    id: "om",
    displayName: "oroma",
    nativeDisplayName: "Oromoo"
}, {
    id: "uz",
    displayName: "uzbeka",
    nativeDisplayName: "o‘zbek"
}, {
    id: "mul",
    displayName: "pluraj lingvoj"
}, {
    id: "pl",
    displayName: "pola",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "portugala",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "brazilportugala",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "eŭropportugala",
    nativeDisplayName: "português europeu"
}, {
    id: "ro",
    displayName: "rumana",
    nativeDisplayName: "română"
}, {
    id: "rm",
    displayName: "romanĉa",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "keĉua",
    nativeDisplayName: "Runasimi"
}, {
    id: "sm",
    displayName: "samoa"
}, {
    id: "sa",
    displayName: "sanskrito"
}, {
    id: "de_ch",
    displayName: "svisa germana",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "sh",
    displayName: "serbo-Kroata"
}, {
    id: "sq",
    displayName: "albana",
    nativeDisplayName: "shqip"
}, {
    id: "sd",
    displayName: "sinda"
}, {
    id: "sk",
    displayName: "slovaka",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "slovena",
    nativeDisplayName: "slovenščina"
}, {
    id: "so",
    displayName: "somala",
    nativeDisplayName: "Soomaali"
}, {
    id: "st",
    displayName: "sota"
}, {
    id: "su",
    displayName: "sunda"
}, {
    id: "fi",
    displayName: "finna",
    nativeDisplayName: "suomi"
}, {
    id: "ss",
    displayName: "svazia"
}, {
    id: "sv",
    displayName: "sveda",
    nativeDisplayName: "svenska"
}, {
    id: "sg",
    displayName: "sangoa",
    nativeDisplayName: "Sängö"
}, {
    id: "tl",
    displayName: "tagaloga"
}, {
    id: "tt",
    displayName: "tatara"
}, {
    id: "tg",
    displayName: "taĝika"
}, {
    id: "vi",
    displayName: "vjetnama",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tw",
    displayName: "tw"
}, {
    id: "tk",
    displayName: "turkmena",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "turka",
    nativeDisplayName: "Türkçe"
}, {
    id: "nl_be",
    displayName: "flandra",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "volapuko",
    nativeDisplayName: "Volapük"
}, {
    id: "wo",
    displayName: "volofa"
}, {
    id: "fy",
    displayName: "frisa",
    nativeDisplayName: "West-Frysk"
}, {
    id: "yo",
    displayName: "joruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islanda",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "aŭstra germana",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "ĉeĥa",
    nativeDisplayName: "čeština"
}, {
    id: "za",
    displayName: "ĝuanga"
}, {
    id: "haw",
    displayName: "havaja",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "greka",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "belorusa",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bulgara",
    nativeDisplayName: "български"
}, {
    id: "ky",
    displayName: "kirgiza",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "makedona",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongola",
    nativeDisplayName: "монгол"
}, {
    id: "ru",
    displayName: "rusa",
    nativeDisplayName: "русский"
}, {
    id: "sr",
    displayName: "serba",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ukraina",
    nativeDisplayName: "українська"
}, {
    id: "kk",
    displayName: "kazaĥa",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armena",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "jida",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "hebrea",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "ujgura",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urduo",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "araba",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "moderna norma araba",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "persa",
    nativeDisplayName: "فارسی"
}, {
    id: "ps",
    displayName: "paŝtoa",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "sorana",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "kaŝmira",
    nativeDisplayName: "کٲشُر"
}, {
    id: "ne",
    displayName: "nepala",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodoa",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marata",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hinda",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "asama",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengala",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "panĝaba",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "guĝarata",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "orijo",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamila",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugua",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kanara",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malajalama",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "sinhala",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "taja",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "laŭa",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibeta",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzonko",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "birma",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "kartvela",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigraja",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amhara",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "kmera",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zh",
    displayName: "ĉina",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japana",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "ĉina simpligita",
    nativeDisplayName: "简体中文"
}, {
    id: "zh_hant",
    displayName: "ĉina tradicia",
    nativeDisplayName: "繁體中文"
}, {
    id: "chr",
    displayName: "ĉeroka",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "korea",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Arab",
    displayName: "araba"
}, {
    id: "Cyrl",
    displayName: "cirila"
}, {
    id: "Jpan",
    displayName: "japana"
}, {
    id: "Kore",
    displayName: "korea"
}, {
    id: "Latn",
    displayName: "latina"
}, {
    id: "Zzzz",
    displayName: "nekonata skribsistemo"
}, {
    id: "Zxxx",
    displayName: "neskribata"
}, {
    id: "Hans",
    displayName: "simpligita"
}, {
    id: "Hant",
    displayName: "tradicia"
} ];

inter.currencies = [ {
    id: "AUD",
    displayName: "Aŭstralia dolaro",
    symbol: "AU$",
    one: "aŭstralia dolaro",
    other: "aŭstraliaj dolaroj"
}, {
    id: "INR",
    displayName: "Barata rupio",
    symbol: "₹",
    one: "barata rupio",
    other: "barataj rupioj"
}, {
    id: "BRL",
    displayName: "Brazila realo",
    symbol: "R$",
    one: "brazila realo",
    other: "brazilaj realoj"
}, {
    id: "GBP",
    displayName: "Brita pundo",
    symbol: "£",
    one: "brita pundo",
    other: "britaj pundoj"
}, {
    id: "DKK",
    displayName: "Dana krono",
    symbol: "DKK",
    one: "dana krono",
    other: "danaj kronoj"
}, {
    id: "EUR",
    displayName: "Eŭro",
    symbol: "€",
    one: "eŭro",
    other: "eŭroj"
}, {
    id: "HKD",
    displayName: "Honkonga dolaro",
    symbol: "HK$",
    one: "honkonga dolaro",
    other: "honkongaj dolaroj"
}, {
    id: "IDR",
    displayName: "Indonezia rupio",
    symbol: "IDR",
    one: "Indonezia rupio",
    other: "Indoneziaj rupioj"
}, {
    id: "JPY",
    displayName: "Japana eno",
    symbol: "JP¥",
    one: "japana eno",
    other: "japanaj enoj"
}, {
    id: "CAD",
    displayName: "Kanada dolaro",
    symbol: "CA$",
    one: "kanada dolaro",
    other: "kanadaj dolaroj"
}, {
    id: "MXN",
    displayName: "Meksika peso",
    symbol: "MX$",
    one: "meksika peso",
    other: "meksikaj pesoj"
}, {
    id: "XXX",
    displayName: "Nekonata valuto",
    one: "nekonata monunuo",
    other: "nekonataj monunuoj"
}, {
    id: "NOK",
    displayName: "Norvega krono",
    symbol: "NOK",
    one: "norvega krono",
    other: "norvegaj kronoj"
}, {
    id: "TWD",
    displayName: "Nova tajvana dolaro",
    symbol: "NT$",
    one: "nova tajvana dolaro",
    other: "novaj tajvanaj dolaroj"
}, {
    id: "PLN",
    displayName: "Pola zloto",
    symbol: "PLN",
    one: "pola zloto",
    other: "polaj zlotoj"
}, {
    id: "RUB",
    displayName: "Rusa rublo",
    symbol: "RUB",
    one: "rusa rublo",
    other: "rusaj rubloj"
}, {
    id: "SAR",
    displayName: "Sauda rialo",
    symbol: "SAR",
    one: "sauda rialo",
    other: "saudaj rialoj"
}, {
    id: "ZAR",
    displayName: "Sud-afrika rando",
    symbol: "ZAR",
    one: "sud-afrika rando",
    other: "sud-afrikaj randoj"
}, {
    id: "KRW",
    displayName: "Sud-korea ŭono",
    symbol: "₩",
    one: "sud-korea ŭono",
    other: "sud-koreaj ŭonoj"
}, {
    id: "SEK",
    displayName: "Sveda krono",
    symbol: "SEK",
    one: "sveda krono",
    other: "svedaj kronoj"
}, {
    id: "CHF",
    displayName: "Svisa franko",
    symbol: "CHF",
    one: "svisa franko",
    other: "svisaj frankoj"
}, {
    id: "THB",
    displayName: "Taja bahto",
    symbol: "฿",
    one: "taja bahto",
    other: "tajaj bahtoj"
}, {
    id: "TRY",
    displayName: "Turka liro",
    symbol: "₺",
    one: "turka liro",
    other: "turkaj liroj"
}, {
    id: "USD",
    displayName: "Usona dolaro",
    symbol: "US$",
    one: "usona dolaro",
    other: "usonaj dolaroj"
}, {
    id: "XAG",
    displayName: "arĝento"
}, {
    id: "XBB",
    displayName: "eŭropa monunuo"
}, {
    id: "XFO",
    displayName: "franca ora franko"
}, {
    id: "XAU",
    displayName: "oro"
}, {
    id: "XPD",
    displayName: "paladio"
}, {
    id: "XPT",
    displayName: "plateno"
}, {
    id: "CNY",
    displayName: "Ĉina juano",
    symbol: "CN¥",
    one: "ĉina juano",
    other: "ĉinaj juanoj"
} ];

module.exports = inter;