function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _g98t1 = {
    "default": "% #,##0"
}, _g98t2 = {
    all: {
        leap: "{0}bis"
    }
}, _g98t3 = {
    displayName: "AM//PM"
}, _g98t4 = {
    one: "0 M",
    other: "0 M"
}, _g98t5 = {
    one: "0 B",
    other: "0 B"
}, _g98t6 = {
    displayName: "Asteguna"
}, _g98t7 = {
    one: "{0}°",
    other: "{0}°"
}, _g98t8 = {
    one: "{0}′",
    other: "{0}′"
}, _g98t9 = {
    one: "{0}″",
    other: "{0}″"
}, _g98t10 = {
    one: "0000",
    other: "0000"
}, _g98t11 = {
    one: "00 M",
    other: "00 M"
}, _g98t12 = {
    one: "00 B",
    other: "00 B"
}, _g98t13 = {
    a: "h a – h a",
    h: "h–h a"
}, _g98t14 = [ "1Hh", "2Hh", "3Hh", "4Hh" ], _g98t15 = {
    displayName: "Ordu-zona"
}, _g98t16 = {
    one: "{0} G",
    other: "{0} G"
}, _g98t17 = {
    one: "{0} h",
    other: "{0} h"
}, _g98t18 = {
    one: "{0} s",
    other: "{0} s"
}, _g98t19 = {
    one: "{0} m",
    other: "{0} m"
}, _g98t20 = {
    one: "{0} g",
    other: "{0} g"
}, _g98t21 = {
    one: "{0} W",
    other: "{0} W"
}, _g98t22 = {
    one: "{0}°F",
    other: "{0}°F"
}, _g98t23 = {
    one: "{0} l",
    other: "{0} l"
}, _g98t24 = {
    one: "00000",
    other: "00000"
}, _g98t25 = {
    one: "000 M",
    other: "000 M"
}, _g98t26 = {
    one: "000 B",
    other: "000 B"
}, _g98t27 = {
    one: "0 M ¤",
    other: "0 M ¤"
}, _g98t28 = {
    one: "0 B ¤",
    other: "0 B ¤"
}, _g98t29 = [ "R.O.C. aurretik", "R.O.C." ], _g98t30 = {
    one: "{0} ha",
    other: "{0} ha"
}, _g98t31 = {
    one: "{0} m²",
    other: "{0} m²"
}, _g98t32 = {
    one: "{0} ac",
    other: "{0} ac"
}, _g98t33 = {
    one: "{0} ms",
    other: "{0} ms"
}, _g98t34 = {
    one: "{0} km",
    other: "{0} km"
}, _g98t35 = {
    one: "{0} cm",
    other: "{0} cm"
}, _g98t36 = {
    one: "{0} mm",
    other: "{0} mm"
}, _g98t37 = {
    one: "{0} pm",
    other: "{0} pm"
}, _g98t38 = {
    one: "{0} mi",
    other: "{0} mi"
}, _g98t39 = {
    one: "{0} yd",
    other: "{0} yd"
}, _g98t40 = {
    one: "{0} ft",
    other: "{0} ft"
}, _g98t41 = {
    one: "{0} in",
    other: "{0} in"
}, _g98t42 = {
    one: "{0} ly",
    other: "{0} ly"
}, _g98t43 = {
    one: "{0} kg",
    other: "{0} kg"
}, _g98t44 = {
    one: "{0} lb",
    other: "{0} lb"
}, _g98t45 = {
    one: "{0} oz",
    other: "{0} oz"
}, _g98t46 = {
    one: "{0} kW",
    other: "{0} kW"
}, _g98t47 = {
    one: "{0} hp",
    other: "{0} hp"
}, _g98t48 = {
    one: "{0} mb",
    other: "{0} mb"
}, _g98t49 = {
    one: "000000",
    other: "000000"
}, _g98t50 = {
    one: "0000 M",
    other: "0000 M"
}, _g98t51 = {
    one: "0000 ¤",
    other: "0000 ¤"
}, _g98t52 = {
    one: "00 M ¤",
    other: "00 M ¤"
}, _g98t53 = {
    one: "00 B ¤",
    other: "00 B ¤"
}, _g98t54 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _g98t55 = [ "I", "A", "A", "A", "O", "O", "L" ], _g98t56 = {
    one: "{0} cm²",
    other: "{0} cm²"
}, _g98t57 = {
    one: "{0} bit",
    other: "{0} bit"
}, _g98t58 = {
    one: "{0} km²",
    other: "{0} km²"
}, _g98t59 = {
    one: "{0} mi²",
    other: "{0} mi²"
}, _g98t60 = {
    one: "{0} ft²",
    other: "{0} ft²"
}, _g98t61 = {
    one: "{0} min",
    other: "{0} min"
}, _g98t62 = {
    one: "{0} hPa",
    other: "{0} hPa"
}, _g98t63 = {
    one: "{0} m/s",
    other: "{0} m/s"
}, _g98t64 = {
    one: "{0} mph",
    other: "{0} mph"
}, _g98t65 = {
    one: "{0} km³",
    other: "{0} km³"
}, _g98t66 = {
    one: "{0} mi³",
    other: "{0} mi³"
}, _g98t67 = {
    one: "00000 M",
    other: "00000 M"
}, _g98t68 = {
    one: "00000 ¤",
    other: "00000 ¤"
}, _g98t69 = {
    one: "000 M ¤",
    other: "000 M ¤"
}, _g98t70 = {
    one: "000 B ¤",
    other: "000 B ¤"
}, _g98t71 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _g98t72 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _g98t73 = {
    one: "{0} byte",
    other: "{0} byte"
}, _g98t74 = {
    one: "{0} urte",
    other: "{0} urte"
}, _g98t75 = {
    one: "{0} aste",
    other: "{0} aste"
}, _g98t76 = {
    one: "{0} egun",
    other: "{0} egun"
}, _g98t77 = {
    one: "{0} inHg",
    other: "{0} inHg"
}, _g98t78 = {
    one: "{0} km/h",
    other: "{0} km/h"
}, _g98t79 = {
    one: "0 milioi",
    other: "0 milioi"
}, _g98t80 = {
    one: "0 bilioi",
    other: "0 bilioi"
}, _g98t81 = {
    one: "000000 M",
    other: "000000 M"
}, _g98t82 = {
    one: "000000 ¤",
    other: "000000 ¤"
}, _g98t83 = {
    one: "0000 M ¤",
    other: "0000 M ¤"
}, _g98t84 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _g98t85 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _g98t86 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _g98t87 = {
    d: "MMMM d–d",
    M: "MMMM d – MMMM d"
}, _g98t88 = {
    one: "00 milioi",
    other: "00 milioi"
}, _g98t89 = {
    one: "00 bilioi",
    other: "00 bilioi"
}, _g98t90 = {
    one: "00000 M ¤",
    other: "00000 M ¤"
}, _g98t91 = {
    one: "{0} minutu",
    other: "{0} minutu"
}, _g98t92 = {
    one: "{0} kilate",
    other: "{0} kilate"
}, _g98t93 = {
    one: "000 milioi",
    other: "000 milioi"
}, _g98t94 = {
    one: "000 bilioi",
    other: "000 bilioi"
}, _g98t95 = {
    one: "000000 M ¤",
    other: "000000 M ¤"
}, _g98t96 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _g98t97 = {
    d: "MM/dd – MM/dd",
    M: "MM/dd – MM/dd"
}, _g98t98 = {
    M: "G y/MM – y/MM",
    y: "G y/MM – y/MM"
}, _g98t99 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _g98t100 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _g98t101 = {
    one: "{0} segundo",
    other: "{0} segundo"
}, _g98t102 = {
    one: "{0} kaloria",
    other: "{0} kaloria"
}, _g98t103 = {
    one: "0000 milioi",
    other: "0000 milioi"
}, _g98t104 = {
    one: "{0} hilabete",
    other: "{0} hilabete"
}, _g98t105 = {
    one: "00000 milioi",
    other: "00000 milioi"
}, _g98t106 = {
    one: "000000 milioi",
    other: "000000 milioi"
}, _g98t107 = [ "ig.", "al.", "ar.", "az.", "og.", "or.", "lr." ], _g98t108 = [ "Ig.", "Al.", "Ar.", "Az.", "Og.", "Or.", "Lr." ], _g98t109 = {
    one: "{0} urte barru",
    other: "{0} urte barru"
}, _g98t110 = {
    one: "Duela {0} urte",
    other: "Duela {0} urte"
}, _g98t111 = {
    one: "{0} aste barru",
    other: "{0} aste barru"
}, _g98t112 = {
    one: "Duela {0} aste",
    other: "Duela {0} aste"
}, _g98t113 = {
    one: "{0} egun barru",
    other: "{0} egun barru"
}, _g98t114 = {
    one: "Duela {0} egun",
    other: "Duela {0} egun"
}, _g98t115 = {
    one: "{0} ordu barru",
    other: "{0} ordu barru"
}, _g98t116 = {
    one: "Duela {0} ordu",
    other: "Duela {0} ordu"
}, _g98t117 = [ "U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A" ], _g98t118 = {
    one: "{0} minutu barru",
    other: "{0} minutu barru"
}, _g98t119 = {
    one: "Duela {0} minutu",
    other: "Duela {0} minutu"
}, _g98t120 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _g98t121 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _g98t122 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _g98t123 = {
    id: "001",
    displayName: "Mundua",
    hasTimeZones: false
}, _g98t124 = {
    one: "{0} segundo barru",
    other: "{0} segundo barru"
}, _g98t125 = {
    one: "Duela {0} segundo",
    other: "Duela {0} segundo"
}, _g98t126 = {
    id: "AQ",
    displayName: "Antartika",
    hasTimeZones: true
}, _g98t127 = {
    id: "IC",
    displayName: "Kanariak",
    hasTimeZones: false
}, _g98t128 = {
    "0": "aurten",
    "1": "hurrengo urtea",
    "-1": "aurreko urtea"
}, _g98t129 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _g98t130 = {
    one: "{0} hilabete barru",
    other: "{0} hilabete barru"
}, _g98t131 = {
    one: "Duela {0} hilabete",
    other: "Duela {0} hilabete"
}, _g98t132 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _g98t133 = {
    a: ":h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _g98t134 = {
    "0": "aste hau",
    "1": "hurrengo astea",
    "-1": "aurreko astea"
}, _g98t135 = {
    "0": "this quarter",
    "1": "next quarter",
    "-1": "last quarter"
}, _g98t136 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _g98t137 = {
    id: "CC",
    displayName: "Cocos uharteak",
    hasTimeZones: true
}, _g98t138 = {
    one: "{0} hiruhileko barru",
    other: "{0} hiruhileko barru"
}, _g98t139 = {
    one: "Duela {0} hiruhileko",
    other: "Duela {0} hiruhileko"
}, _g98t140 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _g98t141 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _g98t142 = {
    id: "BV",
    displayName: "Bouvet uhartea",
    hasTimeZones: false
}, _g98t143 = {
    "0": "gaur",
    "1": "bihar",
    "2": "etzi",
    "-2": "herenegun",
    "-1": "atzo"
}, _g98t144 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _g98t145 = {
    id: "CX",
    displayName: "Christmas uhartea",
    hasTimeZones: true
}, _g98t146 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _g98t147 = {
    "0": "igande hau",
    "1": "hurrengo igandea",
    "-1": "aurreko igandea"
}, _g98t148 = {
    id: "AC",
    displayName: "Ascension uhartea",
    hasTimeZones: false
}, _g98t149 = {
    id: "EA",
    displayName: "Ceuta eta Melilla",
    hasTimeZones: false
}, _g98t150 = {
    d: "MM/dd, EEEE – MM/dd, EEEE",
    M: "MM/dd, EEEE – MM/dd, EEEE"
}, _g98t151 = {
    id: "CP",
    displayName: "Clipperton uhartea",
    hasTimeZones: false
}, _g98t152 = {
    id: "FJ",
    displayName: "Fiji",
    regionId: "054",
    hasTimeZones: true
}, _g98t153 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _g98t154 = {
    id: "IQ",
    displayName: "Irak",
    regionId: "145",
    hasTimeZones: true
}, _g98t155 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _g98t156 = {
    id: "CU",
    displayName: "Kuba",
    regionId: "029",
    hasTimeZones: true
}, _g98t157 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _g98t158 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _g98t159 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _g98t160 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _g98t161 = {
    id: "PE",
    displayName: "Peru",
    regionId: "005",
    hasTimeZones: true
}, _g98t162 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _g98t163 = {
    id: "TD",
    displayName: "Txad",
    regionId: "017",
    hasTimeZones: true
}, _g98t164 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _g98t165 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _g98t166 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _g98t167 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _g98t168 = {
    id: "GN",
    displayName: "Ginea",
    regionId: "011",
    hasTimeZones: true
}, _g98t169 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _g98t170 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _g98t171 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _g98t172 = {
    id: "LY",
    displayName: "Libia",
    regionId: "015",
    hasTimeZones: true
}, _g98t173 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _g98t174 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _g98t175 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _g98t176 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _g98t177 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _g98t178 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _g98t179 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _g98t180 = {
    id: "SY",
    displayName: "Siria",
    regionId: "145",
    hasTimeZones: true
}, _g98t181 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _g98t182 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _g98t183 = {
    id: "CL",
    displayName: "Txile",
    regionId: "005",
    hasTimeZones: true
}, _g98t184 = {
    id: "CN",
    displayName: "Txina",
    regionId: "030",
    hasTimeZones: true
}, _g98t185 = {
    id: "YE",
    displayName: "Yemen",
    regionId: "145",
    hasTimeZones: true
}, _g98t186 = {
    id: "CY",
    displayName: "Zipre",
    regionId: "145",
    hasTimeZones: true
}, _g98t187 = {
    "0": "ostegun hau",
    "1": "hurrengo osteguna",
    "-1": "aurreko osteguna"
}, _g98t188 = {
    "0": "ostiral hau",
    "1": "hurrengo ostirala",
    "-1": "aurreko ostirala"
}, _g98t189 = {
    id: "AI",
    displayName: "Angila",
    regionId: "029",
    hasTimeZones: true
}, _g98t190 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _g98t191 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _g98t192 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _g98t193 = {
    id: "BR",
    displayName: "Brasil",
    regionId: "005",
    hasTimeZones: true
}, _g98t194 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _g98t195 = {
    id: "EG",
    displayName: "Egipto",
    regionId: "015",
    hasTimeZones: true
}, _g98t196 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _g98t197 = {
    id: "GR",
    displayName: "Grezia",
    regionId: "039",
    hasTimeZones: true
}, _g98t198 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _g98t199 = {
    id: "IL",
    displayName: "Israel",
    regionId: "145",
    hasTimeZones: true
}, _g98t200 = {
    id: "IT",
    displayName: "Italia",
    regionId: "039",
    hasTimeZones: true
}, _g98t201 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _g98t202 = {
    id: "CA",
    displayName: "Kanada",
    regionId: "021",
    hasTimeZones: true
}, _g98t203 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _g98t204 = {
    id: "LB",
    displayName: "Libano",
    regionId: "145",
    hasTimeZones: true
}, _g98t205 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _g98t206 = {
    id: "MA",
    displayName: "Maroko",
    regionId: "015",
    hasTimeZones: true
}, _g98t207 = {
    id: "MX",
    displayName: "Mexiko",
    regionId: "013",
    hasTimeZones: true
}, _g98t208 = {
    id: "MC",
    displayName: "Monako",
    regionId: "155",
    hasTimeZones: true
}, _g98t209 = {
    id: "PA",
    displayName: "Panama",
    regionId: "013",
    hasTimeZones: true
}, _g98t210 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _g98t211 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _g98t212 = {
    id: "SE",
    displayName: "Suedia",
    regionId: "154",
    hasTimeZones: true
}, _g98t213 = {
    id: "CH",
    displayName: "Suitza",
    regionId: "155",
    hasTimeZones: true
}, _g98t214 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _g98t215 = {
    id: "TR",
    displayName: "Turkia",
    regionId: "145",
    hasTimeZones: true
}, _g98t216 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _g98t217 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _g98t218 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _g98t219 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _g98t220 = {
    id: "DZ",
    displayName: "Aljeria",
    regionId: "015",
    hasTimeZones: true
}, _g98t221 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _g98t222 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _g98t223 = {
    id: "AT",
    displayName: "Austria",
    regionId: "155",
    hasTimeZones: true
}, _g98t224 = {
    id: "BS",
    displayName: "Bahamak",
    regionId: "029",
    hasTimeZones: true
}, _g98t225 = {
    id: "BH",
    displayName: "Bahrain",
    regionId: "145",
    hasTimeZones: true
}, _g98t226 = {
    id: "BE",
    displayName: "Belgika",
    regionId: "155",
    hasTimeZones: true
}, _g98t227 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _g98t228 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _g98t229 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _g98t230 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _g98t231 = {
    id: "DJ",
    displayName: "Djibuti",
    regionId: "014",
    hasTimeZones: true
}, _g98t232 = {
    id: "EC",
    displayName: "Ekuador",
    regionId: "005",
    hasTimeZones: true
}, _g98t233 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _g98t234 = {
    id: "RU",
    displayName: "Errusia",
    regionId: "151",
    hasTimeZones: true
}, _g98t235 = {
    id: "EE",
    displayName: "Estonia",
    regionId: "154",
    hasTimeZones: true
}, _g98t236 = {
    id: "ET",
    displayName: "Etiopia",
    regionId: "014",
    hasTimeZones: true
}, _g98t237 = {
    id: "GE",
    displayName: "Georgia",
    regionId: "145",
    hasTimeZones: true
}, _g98t238 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _g98t239 = {
    id: "IE",
    displayName: "Irlanda",
    regionId: "154",
    hasTimeZones: true
}, _g98t240 = {
    id: "JM",
    displayName: "Jamaika",
    regionId: "029",
    hasTimeZones: true
}, _g98t241 = {
    id: "JP",
    displayName: "Japonia",
    regionId: "030",
    hasTimeZones: true
}, _g98t242 = {
    id: "CM",
    displayName: "Kamerun",
    regionId: "017",
    hasTimeZones: true
}, _g98t243 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _g98t244 = {
    id: "HR",
    displayName: "Kroazia",
    regionId: "039",
    hasTimeZones: true
}, _g98t245 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _g98t246 = {
    id: "LV",
    displayName: "Letonia",
    regionId: "154",
    hasTimeZones: true
}, _g98t247 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _g98t248 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _g98t249 = {
    id: "MM",
    displayName: "Myanmar",
    regionId: "035",
    hasTimeZones: true
}, _g98t250 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _g98t251 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _g98t252 = {
    id: "PL",
    displayName: "Polonia",
    regionId: "151",
    hasTimeZones: true
}, _g98t253 = {
    id: "RE",
    displayName: "Reunion",
    regionId: "014",
    hasTimeZones: true
}, _g98t254 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _g98t255 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _g98t256 = {
    id: "SR",
    displayName: "Surinam",
    regionId: "005",
    hasTimeZones: true
}, _g98t257 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _g98t258 = {
    id: "TN",
    displayName: "Tunisia",
    regionId: "015",
    hasTimeZones: true
}, _g98t259 = {
    id: "UA",
    displayName: "Ukraina",
    regionId: "151",
    hasTimeZones: true
}, _g98t260 = {
    id: "UY",
    displayName: "Uruguai",
    regionId: "005",
    hasTimeZones: true
}, _g98t261 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _g98t262 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _g98t263 = {
    d: "MMMM d, EEEE – MMMM d, EEEE",
    M: "MMMM d, EEEE – MMMM d, EEEE"
}, _g98t264 = {
    id: "DE",
    displayName: "Alemania",
    regionId: "155",
    hasTimeZones: true
}, _g98t265 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _g98t266 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _g98t267 = {
    id: "BG",
    displayName: "Bulgaria",
    regionId: "151",
    hasTimeZones: true
}, _g98t268 = {
    id: "DM",
    displayName: "Dominika",
    regionId: "029",
    hasTimeZones: true
}, _g98t269 = {
    id: "ES",
    displayName: "Espainia",
    regionId: "039",
    hasTimeZones: true
}, _g98t270 = {
    id: "FR",
    displayName: "Frantzia",
    regionId: "155",
    hasTimeZones: true
}, _g98t271 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _g98t272 = {
    id: "HU",
    displayName: "Hungaria",
    regionId: "151",
    hasTimeZones: true
}, _g98t273 = {
    id: "IS",
    displayName: "Islandia",
    regionId: "154",
    hasTimeZones: true
}, _g98t274 = {
    id: "JO",
    displayName: "Jordania",
    regionId: "145",
    hasTimeZones: true
}, _g98t275 = {
    id: "KH",
    displayName: "Kanbodia",
    regionId: "035",
    hasTimeZones: true
}, _g98t276 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _g98t277 = {
    id: "CO",
    displayName: "Kolonbia",
    regionId: "005",
    hasTimeZones: true
}, _g98t278 = {
    id: "KM",
    displayName: "Komoreak",
    regionId: "014",
    hasTimeZones: true
}, _g98t279 = {
    id: "LT",
    displayName: "Lituania",
    regionId: "154",
    hasTimeZones: true
}, _g98t280 = {
    id: "MY",
    displayName: "Malaysia",
    regionId: "035",
    hasTimeZones: true
}, _g98t281 = {
    id: "MV",
    displayName: "Maldivak",
    regionId: "034",
    hasTimeZones: true
}, _g98t282 = {
    id: "FK",
    displayName: "Malvinak",
    regionId: "005",
    hasTimeZones: true
}, _g98t283 = {
    id: "MU",
    displayName: "Maurizio",
    regionId: "014",
    hasTimeZones: true
}, _g98t284 = {
    id: "MD",
    displayName: "Moldavia",
    regionId: "151",
    hasTimeZones: true
}, _g98t285 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _g98t286 = {
    id: "NO",
    displayName: "Norvegia",
    regionId: "154",
    hasTimeZones: true
}, _g98t287 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _g98t288 = {
    id: "PY",
    displayName: "Paraguai",
    regionId: "005",
    hasTimeZones: true
}, _g98t289 = {
    id: "PT",
    displayName: "Portugal",
    regionId: "039",
    hasTimeZones: true
}, _g98t290 = {
    id: "SG",
    displayName: "Singapur",
    regionId: "035",
    hasTimeZones: true
}, _g98t291 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _g98t292 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _g98t293 = {
    "0": "hilabete hau",
    "1": "hurrengo hilabetea",
    "-1": "aurreko hilabetea"
}, _g98t294 = {
    "0": "astearte hau",
    "1": "hurrengo asteartea",
    "-1": "aurreko asteartea"
}, _g98t295 = {
    "0": "larunbat hau",
    "1": "hurrengo larunbata",
    "-1": "aurreko larunbata"
}, _g98t296 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _g98t297 = {
    id: "AU",
    displayName: "Australia",
    regionId: "053",
    hasTimeZones: true
}, _g98t298 = {
    id: "DK",
    displayName: "Danimarka",
    regionId: "154",
    hasTimeZones: true
}, _g98t299 = {
    id: "RO",
    displayName: "Errumania",
    regionId: "151",
    hasTimeZones: true
}, _g98t300 = {
    id: "SK",
    displayName: "Eslovakia",
    regionId: "151",
    hasTimeZones: true
}, _g98t301 = {
    id: "SI",
    displayName: "Eslovenia",
    regionId: "039",
    hasTimeZones: true
}, _g98t302 = {
    id: "PH",
    displayName: "Filipinak",
    regionId: "035",
    hasTimeZones: true
}, _g98t303 = {
    id: "FI",
    displayName: "Finlandia",
    regionId: "154",
    hasTimeZones: true
}, _g98t304 = {
    id: "GI",
    displayName: "Gibraltar",
    regionId: "039",
    hasTimeZones: true
}, _g98t305 = {
    id: "GP",
    displayName: "Guadalupe",
    regionId: "029",
    hasTimeZones: true
}, _g98t306 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _g98t307 = {
    id: "GG",
    displayName: "Guernesey",
    regionId: "154",
    hasTimeZones: true
}, _g98t308 = {
    id: "ID",
    displayName: "Indonesia",
    regionId: "035",
    hasTimeZones: true
}, _g98t309 = {
    id: "MQ",
    displayName: "Martinika",
    regionId: "029",
    hasTimeZones: true
}, _g98t310 = {
    id: "MK",
    displayName: "Mazedonia",
    regionId: "039",
    hasTimeZones: true
}, _g98t311 = {
    id: "MZ",
    displayName: "Mozambike",
    regionId: "014",
    hasTimeZones: true
}, _g98t312 = {
    id: "NI",
    displayName: "Nikaragua",
    regionId: "013",
    hasTimeZones: true
}, _g98t313 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _g98t314 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _g98t315 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _g98t316 = {
    id: "AF",
    displayName: "Afganistan",
    regionId: "034",
    hasTimeZones: true
}, _g98t317 = {
    id: "AZ",
    displayName: "Azerbaijan",
    regionId: "145",
    hasTimeZones: true
}, _g98t318 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _g98t319 = {
    id: "CI",
    displayName: "Boli Kosta",
    regionId: "011",
    hasTimeZones: true
}, _g98t320 = {
    id: "CV",
    displayName: "Cabo Verde",
    regionId: "011",
    hasTimeZones: true
}, _g98t321 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _g98t322 = {
    id: "KR",
    displayName: "Hego Korea",
    regionId: "030",
    hasTimeZones: true
}, _g98t323 = {
    id: "SS",
    displayName: "Hego Sudan",
    regionId: "014",
    hasTimeZones: true
}, _g98t324 = {
    id: "ZA",
    displayName: "Hegoafrika",
    regionId: "018",
    hasTimeZones: true
}, _g98t325 = {
    id: "KP",
    displayName: "Ipar Korea",
    regionId: "030",
    hasTimeZones: true
}, _g98t326 = {
    id: "KZ",
    displayName: "Kazakhstan",
    regionId: "143",
    hasTimeZones: true
}, _g98t327 = {
    id: "LU",
    displayName: "Luxenburgo",
    regionId: "155",
    hasTimeZones: true
}, _g98t328 = {
    id: "MG",
    displayName: "Madagaskar",
    regionId: "014",
    hasTimeZones: true
}, _g98t329 = {
    id: "MR",
    displayName: "Mauritania",
    regionId: "011",
    hasTimeZones: true
}, _g98t330 = {
    id: "FM",
    displayName: "Mikronesia",
    regionId: "057",
    hasTimeZones: true
}, _g98t331 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _g98t332 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _g98t333 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _g98t334 = {
    id: "TJ",
    displayName: "Tajikistan",
    regionId: "143",
    hasTimeZones: true
}, _g98t335 = {
    id: "TH",
    displayName: "Thailandia",
    regionId: "035",
    hasTimeZones: true
}, _g98t336 = {
    id: "UZ",
    displayName: "Uzbekistan",
    regionId: "143",
    hasTimeZones: true
}, _g98t337 = {
    M: "G y('e')'ko' MMMM–MMMM",
    y: "G y('e')'ko' MMMM – y('e')'ko' MMMM"
}, _g98t338 = {
    id: "BY",
    displayName: "Bielorrusia",
    regionId: "151",
    hasTimeZones: true
}, _g98t339 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _g98t340 = {
    id: "GL",
    displayName: "Groenlandia",
    regionId: "021",
    hasTimeZones: true
}, _g98t341 = {
    id: "NL",
    displayName: "Herbehereak",
    regionId: "155",
    hasTimeZones: true
}, _g98t342 = {
    id: "KG",
    displayName: "Kirgizistan",
    regionId: "143",
    hasTimeZones: true
}, _g98t343 = {
    id: "IM",
    displayName: "Man uhartea",
    regionId: "154",
    hasTimeZones: true
}, _g98t344 = {
    id: "PR",
    displayName: "Puerto Rico",
    regionId: "029",
    hasTimeZones: true
}, _g98t345 = {
    id: "LC",
    displayName: "Santa Luzia",
    regionId: "029",
    hasTimeZones: true
}, _g98t346 = {
    id: "SC",
    displayName: "Seychelleak",
    regionId: "014",
    hasTimeZones: true
}, _g98t347 = {
    id: "SZ",
    displayName: "Swazilandia",
    regionId: "018",
    hasTimeZones: true
}, _g98t348 = [ "1. hiruhilekoa", "2. hiruhilekoa", "3. hiruhilekoa", "4. hiruhilekoa" ], _g98t349 = {
    "0": "astelehen hau",
    "1": "hurrengo astelehena",
    "-1": "aurreko astelehena"
}, _g98t350 = {
    "0": "asteazken hau",
    "1": "hurrengo asteazkena",
    "-1": "aurreko asteazkena"
}, _g98t351 = {
    id: "142",
    displayName: "Asia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _g98t352 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _g98t353 = {
    id: "GW",
    displayName: "Ginea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _g98t354 = {
    id: "SH",
    displayName: "Saint Helena",
    regionId: "011",
    hasTimeZones: true
}, _g98t355 = {
    id: "MF",
    displayName: "Saint Martin",
    regionId: "029",
    hasTimeZones: true
}, _g98t356 = {
    id: "SA",
    displayName: "Saudi Arabia",
    regionId: "145",
    hasTimeZones: true
}, _g98t357 = {
    id: "SL",
    displayName: "Sierra Leona",
    regionId: "011",
    hasTimeZones: true
}, _g98t358 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _g98t359 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _g98t360 = {
    "2": "{0} eta {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0} eta {1}"
}, _g98t361 = {
    M: "G y('e')'ko' MMMM – MMMM",
    y: "G y('e')'ko' MMMM – y('e')'ko' MMMM"
}, _g98t362 = {
    id: "CK",
    displayName: "Cook uharteak",
    regionId: "061",
    hasTimeZones: true
}, _g98t363 = {
    id: "HM",
    displayName: "Heard eta McDonald uharteak",
    hasTimeZones: false
}, _g98t364 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _g98t365 = {
    relative: _g98t147
}, _g98t366 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _g98t367 = {
    id: "002",
    displayName: "Afrika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _g98t368 = {
    id: "AX",
    displayName: "Aland uharteak",
    regionId: "154",
    hasTimeZones: true
}, _g98t369 = {
    id: "AS",
    displayName: "Amerikar Samoa",
    regionId: "061",
    hasTimeZones: true
}, _g98t370 = {
    id: "GQ",
    displayName: "Ekuatore Ginea",
    regionId: "017",
    hasTimeZones: true
}, _g98t371 = {
    id: "GB",
    displayName: "Erresuma Batua",
    regionId: "154",
    hasTimeZones: true
}, _g98t372 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _g98t373 = {
    id: "FO",
    displayName: "Faroe uharteak",
    regionId: "154",
    hasTimeZones: true
}, _g98t374 = {
    id: "VA",
    displayName: "Vatikano Hiria",
    regionId: "039",
    hasTimeZones: true
}, _g98t375 = {
    id: "019",
    displayName: "Amerika",
    hasTimeZones: false,
    parentRegionId: "001"
}, _g98t376 = {
    id: "TL",
    displayName: "Ekialdeko Timor",
    regionId: "035",
    hasTimeZones: true
}, _g98t377 = {
    id: "TF",
    displayName: "Hegoaldeko lurralde frantsesak",
    hasTimeZones: true
}, _g98t378 = {
    id: "KY",
    displayName: "Kaiman uharteak",
    regionId: "029",
    hasTimeZones: true
}, _g98t379 = {
    id: "029",
    displayName: "Karibea",
    hasTimeZones: false,
    parentRegionId: "019"
}, _g98t380 = {
    id: "MO",
    displayName: "Macau AEB Txina",
    regionId: "030",
    hasTimeZones: true
}, _g98t381 = {
    id: "NF",
    displayName: "Norfolk uhartea",
    regionId: "053",
    hasTimeZones: true
}, _g98t382 = {
    id: "009",
    displayName: "Ozeania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _g98t383 = {
    id: "NZ",
    displayName: "Zeelanda Berria",
    regionId: "053",
    hasTimeZones: true
}, _g98t384 = {
    d: "G y/MM/dd – y/MM/dd",
    M: "G y/MM/dd – y/MM/dd",
    y: "G y/MM/dd – y/MM/dd"
}, _g98t385 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _g98t386 = {
    id: "GF",
    displayName: "Guyana Frantsesa",
    regionId: "005",
    hasTimeZones: true
}, _g98t387 = {
    id: "NC",
    displayName: "Kaledonia Berria",
    regionId: "054",
    hasTimeZones: true
}, _g98t388 = {
    id: "BL",
    displayName: "Saint Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _g98t389 = {
    id: "SB",
    displayName: "Salomon uharteak",
    regionId: "054",
    hasTimeZones: true
}, _g98t390 = {
    relative: _g98t187
}, _g98t391 = {
    relative: _g98t188
}, _g98t392 = {
    id: "MH",
    displayName: "Marshall uharteak",
    regionId: "057",
    hasTimeZones: true
}, _g98t393 = {
    id: "054",
    displayName: "Melanesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _g98t394 = {
    id: "PN",
    displayName: "Pitcairn uharteak",
    regionId: "061",
    hasTimeZones: true
}, _g98t395 = {
    id: "061",
    displayName: "Polinesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _g98t396 = {
    id: "WF",
    displayName: "Wallis eta Futuna",
    regionId: "061",
    hasTimeZones: true
}, _g98t397 = {
    id: "BA",
    displayName: "Bosnia-Herzegovina",
    regionId: "039",
    hasTimeZones: true
}, _g98t398 = {
    id: "PG",
    displayName: "Papua Ginea Berria",
    regionId: "054",
    hasTimeZones: true
}, _g98t399 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _g98t400 = {
    id: "AG",
    displayName: "Antigua eta Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _g98t401 = {
    id: "053",
    displayName: "Australasia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _g98t402 = {
    id: "HK",
    displayName: "Hong Kong AEB Txina",
    regionId: "030",
    hasTimeZones: true
}, _g98t403 = {
    id: "CG",
    displayName: "Kongo (Brazzaville)",
    regionId: "017",
    hasTimeZones: true
}, _g98t404 = {
    id: "EH",
    displayName: "Mendebaldeko Sahara",
    regionId: "015",
    hasTimeZones: true
}, _g98t405 = {
    id: "PF",
    displayName: "Polinesia Frantsesa",
    regionId: "061",
    hasTimeZones: true
}, _g98t406 = {
    id: "TT",
    displayName: "Trinidad eta Tobago",
    regionId: "029",
    hasTimeZones: true
}, _g98t407 = {
    id: "CZ",
    displayName: "Txekiar Errepublika",
    regionId: "151",
    hasTimeZones: true
}, _g98t408 = {
    abbreviated: {
        am: "AM",
        pm: "PM"
    },
    narrow: {
        am: "g",
        pm: "a"
    },
    wide: {
        am: "AM",
        pm: "PM"
    }
}, _g98t409 = {
    relative: _g98t294
}, _g98t410 = {
    relative: _g98t295
}, _g98t411 = {
    id: "005",
    displayName: "Hego Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _g98t412 = {
    id: "BQ",
    displayName: "Karibeko Herbehereak",
    regionId: "029",
    hasTimeZones: true
}, _g98t413 = {
    id: "030",
    displayName: "Asia ekialdea",
    hasTimeZones: false,
    parentRegionId: "142"
}, _g98t414 = {
    id: "DO",
    displayName: "Dominikar Errepublika",
    regionId: "029",
    hasTimeZones: true
}, _g98t415 = {
    id: "KN",
    displayName: "Saint Kitts eta Nevis",
    regionId: "029",
    hasTimeZones: true
}, _g98t416 = {
    id: "ST",
    displayName: "Sao Tome eta Principe",
    regionId: "017",
    hasTimeZones: true
}, _g98t417 = {
    id: "143",
    displayName: "Asia erdialdea",
    hasTimeZones: false,
    parentRegionId: "142"
}, _g98t418 = {
    id: "034",
    displayName: "Asia hegoaldea",
    hasTimeZones: false,
    parentRegionId: "142"
}, _g98t419 = {
    id: "PS",
    displayName: "Palestinako Lurraldeak",
    regionId: "145",
    hasTimeZones: true
}, _g98t420 = {
    relative: _g98t349
}, _g98t421 = {
    relative: _g98t350
}, _g98t422 = {
    id: "014",
    displayName: "Afrika ekialdea",
    hasTimeZones: false,
    parentRegionId: "002"
}, _g98t423 = {
    id: "AE",
    displayName: "Arabiar Emirerri Batuak",
    regionId: "145",
    hasTimeZones: true
}, _g98t424 = {
    id: "151",
    displayName: "Europa ekialdea",
    hasTimeZones: false,
    parentRegionId: "150"
}, _g98t425 = {
    id: "IO",
    displayName: "Indiako Ozeanoko lurralde britainiarra",
    hasTimeZones: true
}, _g98t426 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _g98t427 = {
    id: "018",
    displayName: "Afrika hegoaldea",
    hasTimeZones: false,
    parentRegionId: "002"
}, _g98t428 = {
    id: "145",
    displayName: "Asia mendebaldea",
    hasTimeZones: false,
    parentRegionId: "142"
}, _g98t429 = {
    id: "039",
    displayName: "Europa hegoaldea",
    hasTimeZones: false,
    parentRegionId: "150"
}, _g98t430 = {
    id: "TC",
    displayName: "Turk eta Caicos uharteak",
    regionId: "029",
    hasTimeZones: true
}, _g98t431 = {
    id: "CF",
    displayName: "Afrika Erdiko Errepublika",
    regionId: "017",
    hasTimeZones: true
}, _g98t432 = {
    id: "015",
    displayName: "Afrika iparraldea",
    hasTimeZones: false,
    parentRegionId: "002"
}, _g98t433 = {
    id: "US",
    displayName: "Ameriketako Estatu Batuak",
    regionId: "021",
    hasTimeZones: true
}, _g98t434 = {
    id: "017",
    displayName: "Erdialdeko Afrika",
    hasTimeZones: false,
    parentRegionId: "002"
}, _g98t435 = {
    id: "154",
    displayName: "Europa iparraldea",
    hasTimeZones: false,
    parentRegionId: "150"
}, _g98t436 = {
    id: "PM",
    displayName: "Saint-Pierre eta Mikelune",
    regionId: "021",
    hasTimeZones: true
}, _g98t437 = [ "igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata" ], _g98t438 = [ "Igandea", "Astelehena", "Asteartea", "Asteazkena", "Osteguna", "Ostirala", "Larunbata" ], _g98t439 = {
    id: "011",
    displayName: "Afrika mendebaldea",
    hasTimeZones: false,
    parentRegionId: "002"
}, _g98t440 = {
    id: "021",
    displayName: "Amerika iparraldea",
    hasTimeZones: false,
    parentRegionId: "019"
}, _g98t441 = {
    id: "035",
    displayName: "Asia hego-ekialdea",
    hasTimeZones: false,
    parentRegionId: "142"
}, _g98t442 = {
    id: "VI",
    displayName: "Birjina uharte amerikarrak",
    regionId: "029",
    hasTimeZones: true
}, _g98t443 = {
    id: "013",
    displayName: "Erdialdeko Amerika",
    hasTimeZones: false,
    parentRegionId: "019"
}, _g98t444 = {
    id: "155",
    displayName: "Europa mendebaldea",
    hasTimeZones: false,
    parentRegionId: "150"
}, _g98t445 = [ "urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe." ], _g98t446 = [ "Urt.", "Ots.", "Mar.", "Api.", "Mai.", "Eka.", "Uzt.", "Abu.", "Ira.", "Urr.", "Aza.", "Abe." ], _g98t447 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _g98t448 = {
    id: "VG",
    displayName: "Birjina uharte britainiarrak",
    regionId: "029",
    hasTimeZones: true
}, _g98t449 = {
    id: "MP",
    displayName: "Iparraldeko Mariana uharteak",
    regionId: "057",
    hasTimeZones: true
}, _g98t450 = {
    id: "057",
    displayName: "Mikronesia eskualdea",
    hasTimeZones: false,
    parentRegionId: "009"
}, _g98t451 = {
    id: "VC",
    displayName: "Saint Vincent eta Grenadinak",
    regionId: "029",
    hasTimeZones: true
}, _g98t452 = {
    id: "SJ",
    displayName: "Svalbard eta Jan Mayen uharteak",
    regionId: "154",
    hasTimeZones: true
}, _g98t453 = {
    id: "CD",
    displayName: "Kongoko Errepublika Demokratikoa",
    regionId: "017",
    hasTimeZones: true
}, _g98t454 = {
    id: "GS",
    displayName: "Hegoaldeko Georgia eta Hegoaldeko Sandwich uharteak",
    hasTimeZones: true
}, _g98t455 = {
    id: "UM",
    displayName: "Ameriketako Estatu Batuetako Kanpoaldeko Uharte Txikiak",
    hasTimeZones: true
}, _g98t456 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _g98t457 = {
    future: _g98t109,
    past: _g98t110
}, _g98t458 = {
    future: _g98t111,
    past: _g98t112
}, _g98t459 = {
    future: _g98t113,
    past: _g98t114
}, _g98t460 = {
    future: _g98t115,
    past: _g98t116
}, _g98t461 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _g98t462 = {
    d: "G y/MM/dd, EEEE – y/MM/dd, EEEE",
    M: "G y/MM/dd, EEEE – y/MM/dd, EEEE",
    y: "G y/MM/dd, EEEE – y/MM/dd, EEEE"
}, _g98t463 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _g98t464 = {
    d: "G y('e')'ko' MMMM dd–dd",
    M: "G y('e')'ko' MMMM dd – MMMM dd",
    y: "G y('e')'ko' MMMM dd – y('e')'ko' MMMM dd"
}, _g98t465 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _g98t466 = {
    future: _g98t118,
    past: _g98t119
}, _g98t467 = {
    future: _g98t124,
    past: _g98t125
}, _g98t468 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _g98t469 = [ "Urtarrila", "Otsaila", "Martxoa", "Apirila", "Maiatza", "Ekaina", "Uztaila", "Abuztua", "Iraila", "Urria", "Azaroa", "Abendua" ], _g98t470 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _g98t471 = {
    future: _g98t130,
    past: _g98t131
}, _g98t472 = {
    future: _g98t138,
    past: _g98t139
}, _g98t473 = [ "urtarrilak", "otsailak", "martxoak", "apirilak", "maiatzak", "ekainak", "uztailak", "abuztuak", "irailak", "urriak", "azaroak", "abenduak" ], _g98t474 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _g98t475 = {
    displayName: "h",
    relativeTime: _g98t460
}, _g98t476 = {
    displayName: "eg.",
    relativeTime: _g98t459
}, _g98t477 = {
    abbreviated: _g98t14,
    narrow: [ "1", "2", "3", "4" ],
    wide: _g98t348
}, _g98t478 = {
    displayName: "ast.",
    relativeTime: _g98t458
}, _g98t479 = {
    displayName: "Ordua",
    relativeTime: _g98t460
}, _g98t480 = {
    displayName: "min",
    relativeTime: _g98t466
}, _g98t481 = {
    displayName: "s",
    relativeTime: _g98t467
}, _g98t482 = {
    displayName: "Minutua",
    relativeTime: _g98t466
}, _g98t483 = {
    d: "G y('e')'ko' MMMM dd, EEEE – MMMM dd, EEEE",
    M: "G y('e')'ko' MMMM dd, EEEE – MMMM dd, EEEE",
    y: "G y('e')'ko' MMMM dd, EEEE – y('e')'ko' MMMM dd, EEEE"
}, _g98t484 = {
    displayName: "hil.",
    relativeTime: _g98t471
}, _g98t485 = {
    midnight: "gauerdia",
    am: "AM",
    pm: "PM",
    morning1: "goizaldea",
    morning2: "goiza",
    afternoon1: "eguerdia",
    afternoon2: "arratsaldea",
    evening1: "iluntzea",
    night1: "gaua"
}, _g98t486 = {
    displayName: "hiruhil.",
    relativeTime: _g98t472
}, _g98t487 = {
    decimal: ",",
    group: ".",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _g98t488 = {
    displayName: "Segundoa",
    relative: [ "orain" ],
    relativeTime: _g98t467
}, _g98t489 = {
    symbols: _g98t487
}, _g98t490 = {
    format: _g98t366,
    numeric: _g98t2,
    standAlone: _g98t366
}, _g98t491 = {
    displayName: "Urtea",
    relative: _g98t128,
    relativeTime: _g98t457
}, _g98t492 = {
    displayName: "urtea",
    relative: _g98t128,
    relativeTime: _g98t457
}, _g98t493 = {
    displayName: "Astea",
    relative: _g98t134,
    relativeTime: _g98t458
}, _g98t494 = {
    displayName: "Eguna",
    relative: _g98t143,
    relativeTime: _g98t459
}, _g98t495 = {
    symbols: _g98t487,
    digits: "renderSpelloutCardinal"
}, _g98t496 = {
    abbreviated: {
        am: "AM",
        pm: "PM"
    },
    narrow: {
        am: "AM",
        pm: "PM"
    },
    wide: _g98t485
}, _g98t497 = {
    symbols: _g98t487,
    digits: "renderSpelloutCardinalFinancial"
}, _g98t498 = {
    abbreviated: _g98t385,
    narrow: _g98t129,
    wide: _g98t385
}, _g98t499 = {
    abbreviated: _g98t107,
    narrow: _g98t55,
    wide: _g98t437,
    "short": _g98t107
}, _g98t500 = {
    abbreviated: _g98t108,
    narrow: _g98t55,
    wide: _g98t438,
    "short": _g98t107
}, _g98t501 = {
    displayName: "Hiruhilekoa",
    relative: _g98t135,
    relativeTime: _g98t472
}, _g98t502 = {
    displayName: "Hilabetea",
    relative: _g98t293,
    relativeTime: _g98t471
}, _g98t503 = {
    abbreviated: _g98t399,
    narrow: _g98t399,
    wide: _g98t399
}, _g98t504 = {
    format: _g98t503
}, _g98t505 = {
    abbreviated: _g98t446,
    narrow: _g98t117,
    wide: _g98t469
}, _g98t506 = {
    abbreviated: _g98t445,
    narrow: _g98t117,
    wide: _g98t473
}, _g98t507 = {
    abbreviated: _g98t461,
    narrow: _g98t141,
    wide: _g98t461
}, _g98t508 = {
    abbreviated: _g98t463,
    narrow: _g98t129,
    wide: _g98t463
}, _g98t509 = {
    format: _g98t477,
    standAlone: _g98t477
}, _g98t510 = {
    abbreviated: _g98t465,
    narrow: _g98t141,
    wide: _g98t465
}, _g98t511 = {
    format: _g98t408,
    standAlone: _g98t496
}, _g98t512 = {
    abbreviated: _g98t456,
    narrow: _g98t129,
    wide: _g98t474
}, _g98t513 = {
    abbreviated: _g98t468,
    narrow: _g98t141,
    wide: _g98t468
}, _g98t514 = {
    abbreviated: _g98t470,
    narrow: _g98t129,
    wide: _g98t470
}, _g98t515 = {
    fullDate: "r(U) MMMM d, EEEE",
    longDate: "r(U) MMMM d",
    mediumDate: "r MMM d",
    shortDate: "r-MM-dd",
    fullTime: "HH:mm:ss (zzzz)",
    longTime: "HH:mm:ss (z)",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "r-MM-dd HH:mm",
    mediumDateTime: "r MMM d HH:mm:ss",
    longDateTime: "r(U) MMMM d HH:mm:ss (z)",
    fullDateTime: "r(U) MMMM d, EEEE HH:mm:ss (zzzz)"
}, _g98t516 = {
    "1000": _g98t10,
    "10000": _g98t24,
    "100000": _g98t49,
    "1000000": _g98t4,
    "10000000": _g98t11,
    "100000000": _g98t25,
    "1000000000": _g98t50,
    "10000000000": _g98t67,
    "100000000000": _g98t81,
    "1000000000000": _g98t5,
    "10000000000000": _g98t12,
    "100000000000000": _g98t26
}, _g98t517 = {
    "1000": _g98t51,
    "10000": _g98t68,
    "100000": _g98t82,
    "1000000": _g98t27,
    "10000000": _g98t52,
    "100000000": _g98t69,
    "1000000000": _g98t83,
    "10000000000": _g98t90,
    "100000000000": _g98t95,
    "1000000000000": _g98t28,
    "10000000000000": _g98t53,
    "100000000000000": _g98t70
}, _g98t518 = {
    fullDate: "G. 'aroko' y. 'urteko' MMMM d, EEEE",
    longDate: "G. 'aroko' y. 'urteko' MMMM d",
    mediumDate: "G. 'aroko' y('e')'ko' MMM d",
    shortDate: "GGGGG y-MM-dd",
    fullTime: "HH:mm:ss (zzzz)",
    longTime: "HH:mm:ss (z)",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "GGGGG y-MM-dd HH:mm",
    mediumDateTime: "G. 'aroko' y('e')'ko' MMM d HH:mm:ss",
    longDateTime: "G. 'aroko' y. 'urteko' MMMM d HH:mm:ss (z)",
    fullDateTime: "G. 'aroko' y. 'urteko' MMMM d, EEEE HH:mm:ss (zzzz)"
}, _g98t519 = {
    format: _g98t498,
    standAlone: _g98t498
}, _g98t520 = {
    "1000": _g98t10,
    "10000": _g98t24,
    "100000": _g98t49,
    "1000000": _g98t79,
    "10000000": _g98t88,
    "100000000": _g98t93,
    "1000000000": _g98t103,
    "10000000000": _g98t105,
    "100000000000": _g98t106,
    "1000000000000": _g98t80,
    "10000000000000": _g98t89,
    "100000000000000": _g98t94
}, _g98t521 = {
    format: _g98t499,
    standAlone: _g98t500
}, _g98t522 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _g98t523 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _g98t524 = {
    format: _g98t506,
    standAlone: _g98t505
}, _g98t525 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _g98t526 = {
    format: _g98t512,
    standAlone: _g98t512
}, _g98t527 = {
    d: "d",
    Ed: "d, EEEE",
    Gy: "G. 'aroko' y. 'urtea'",
    GyMMM: "G. 'aroko' y('e')'ko' MMMM",
    GyMMMd: "G. 'aroko' y('e')'ko' MMMM d",
    GyMMMEd: "G. 'aroko' y('e')'ko' MMMM d, EEEE",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM/dd",
    MEd: "MM/dd, EEEE",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, EEEE",
    ms: "mm:ss",
    y: "y",
    yM: "y/MM",
    yMd: "y/MM/dd",
    yMEd: "y/MM/dd, EEEE",
    yMMM: "y('e')'ko' MMMM",
    yMMMd: "y('e')'ko' MMMM d",
    yMMMEd: "y('e')'ko' MMMM d, EEEE",
    yQQQ: "y QQQ",
    yQQQQ: "y('e')'ko' QQQQ",
    yyyy: "G y",
    yyyyM: "G y/MM",
    yyyyMd: "G y/MM/dd",
    yyyyMEd: "G y/MM/dd, EEEE",
    yyyyMMM: "G y MMM",
    yyyyMMMd: "G y MMM d",
    yyyyMMMEd: "G y MMM d, EEEE",
    yyyyMMMM: "G y('e')'ko' MMMM",
    yyyyMMMMd: "G y('e')'ko' MMMM d",
    yyyyMMMMEd: "G y('e')'ko' MMMM d, EEEE",
    yyyyQQQ: "G y QQQ",
    yyyyQQQQ: "G y('e')'ko' QQQQ",
    E: "ccc",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss",
    h: "h a",
    MMMMd: "MMMM d"
}, _g98t528 = {
    basic: _g98t515,
    cldr: _g98t522
}, _g98t529 = {
    "long": _g98t520,
    "short": _g98t516,
    "default": "#,##0.###"
}, _g98t530 = {
    d: {
        d: "d–d"
    },
    h: _g98t13,
    H: {
        H: "HH–HH"
    },
    hm: _g98t132,
    Hm: _g98t84,
    hmv: _g98t144,
    Hmv: _g98t96,
    hv: _g98t54,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _g98t99,
    MEd: _g98t120,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _g98t71,
    MMMEd: _g98t121,
    y: {
        y: "U–U"
    },
    yM: _g98t85,
    yMd: _g98t315,
    yMEd: _g98t447,
    yMMM: _g98t86,
    yMMMd: _g98t140,
    yMMMEd: _g98t426,
    yMMMM: _g98t100
}, _g98t531 = {
    beforeCurrency: _g98t523,
    afterCurrency: _g98t523
}, _g98t532 = {
    d: {
        d: "dd–dd"
    },
    h: _g98t13,
    H: {
        H: "HH–HH"
    },
    hm: _g98t133,
    Hm: _g98t84,
    hmv: _g98t144,
    Hmv: _g98t96,
    hv: _g98t54,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _g98t97,
    MEd: _g98t150,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _g98t87,
    MMMEd: _g98t263,
    y: {
        y: "G y–y"
    },
    yM: _g98t98,
    yMd: _g98t384,
    yMEd: _g98t462,
    yMMM: _g98t337,
    yMMMd: _g98t464,
    yMMMEd: _g98t483,
    yMMMM: _g98t361
}, _g98t533 = {
    basic: _g98t518,
    cldr: _g98t527
}, _g98t534 = {
    "short": _g98t517,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _g98t531
}, _g98t535 = {
    abbreviated: _g98t525,
    narrow: _g98t525,
    wide: _g98t525
}, _g98t536 = {
    format: _g98t535
}, _g98t537 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _g98t529,
    currency: _g98t534,
    percent: _g98t1
}, _g98t538 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _g98t539 = {
    dayParts: _g98t504,
    days: _g98t536,
    months: _g98t536,
    years: _g98t536,
    zodiacs: _g98t504
}, _g98t540 = {
    era: {
        displayName: "Aroa"
    },
    year: _g98t491,
    "year-short": _g98t492,
    "year-narrow": _g98t492,
    quarter: _g98t501,
    "quarter-short": _g98t486,
    "quarter-narrow": _g98t486,
    month: _g98t502,
    "month-short": _g98t484,
    "month-narrow": _g98t484,
    week: _g98t493,
    "week-short": _g98t478,
    "week-narrow": _g98t478,
    day: _g98t494,
    "day-short": _g98t476,
    "day-narrow": _g98t476,
    weekday: _g98t6,
    dayperiod: _g98t3,
    hour: _g98t479,
    "hour-short": _g98t475,
    "hour-narrow": _g98t475,
    minute: _g98t482,
    "minute-short": _g98t480,
    "minute-narrow": _g98t480,
    second: _g98t488,
    "second-short": _g98t481,
    "second-narrow": _g98t481,
    zone: _g98t15,
    sun: _g98t365,
    "sun-short": _g98t365,
    "sun-narrow": _g98t365,
    mon: _g98t420,
    "mon-short": _g98t420,
    "mon-narrow": _g98t420,
    tue: _g98t409,
    "tue-short": _g98t409,
    "tue-narrow": _g98t409,
    wed: _g98t421,
    "wed-short": _g98t421,
    "wed-narrow": _g98t421,
    thu: _g98t390,
    "thu-short": _g98t390,
    "thu-narrow": _g98t390,
    fri: _g98t391,
    "fri-short": _g98t391,
    "fri-narrow": _g98t391,
    sat: _g98t410,
    "sat-short": _g98t410,
    "sat-narrow": _g98t410
}, _g98t541 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _g98t540
}, _g98t542 = {
    dateFormats: _g98t533,
    datePartsOrder: "ymd",
    dateIntervalFormats: _g98t532,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _g98t521,
    dayPeriods: _g98t511,
    monthNames: _g98t526,
    eraNames: _g98t72,
    quarterNames: _g98t509,
    fields: _g98t540
}, _g98t543 = {
    dateFormats: _g98t528,
    datePartsOrder: "md",
    dateIntervalFormats: _g98t530,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _g98t521,
    dayPeriods: _g98t511,
    cyclicNames: _g98t539,
    monthNames: _g98t519,
    monthPatterns: _g98t490,
    quarterNames: _g98t509,
    fields: _g98t540
};

inter.id = "eu";

inter.delimiters = {
    quotationStart: "“",
    quotationEnd: "”",
    alternateQuotationStart: "“",
    alternateQuotationEnd: "”"
};

inter.listPatterns = {
    "default": _g98t360,
    unit: _g98t360,
    unitNarrow: _g98t360,
    unitShort: _g98t360
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} grabitate-indar",
                other: "{0} grabitate-indar"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} metro segundo karratuko",
                other: "{0} metro segundo karratuko"
            },
            angleRadian: {
                one: "{0} radian",
                other: "{0} radian"
            },
            angleDegree: {
                one: "{0} gradu",
                other: "{0} gradu"
            },
            angleArcMinute: _g98t91,
            angleArcSecond: _g98t101,
            areaSquareKilometer: {
                one: "{0} kilometro karratu",
                other: "{0} kilometro karratu"
            },
            areaHectare: {
                one: "{0} hektarea",
                other: "{0} hektarea"
            },
            areaSquareMeter: {
                one: "{0} metro karratu",
                other: "{0} metro karratu"
            },
            areaSquareCentimeter: _g98t56,
            areaSquareMile: {
                one: "{0} milia karratu",
                other: "{0} milia karratu"
            },
            areaAcre: {
                one: "{0} akre",
                other: "{0} akre"
            },
            areaSquareYard: {
                one: "{0} yarda karratu",
                other: "{0} yarda karratu"
            },
            areaSquareFoot: {
                one: "{0} oin karratu",
                other: "{0} oin karratu"
            },
            areaSquareInch: {
                one: "{0} hazbete karratu",
                other: "{0} hazbete karratu"
            },
            concentrKarat: _g98t92,
            consumptionLiterPerKilometer: {
                one: "{0} litro kilometroko",
                other: "{0} litro kilometroko"
            },
            consumptionMilePerGallon: {
                one: "{0} milia galoiko",
                other: "{0} milia galoiko"
            },
            digitalTerabyte: {
                one: "{0} terabyte",
                other: "{0} terabyte"
            },
            digitalTerabit: {
                one: "{0} terabit",
                other: "{0} terabit"
            },
            digitalGigabyte: {
                one: "{0} gigabyte",
                other: "{0} gigabyte"
            },
            digitalGigabit: {
                one: "{0} gigabit",
                other: "{0} gigabit"
            },
            digitalMegabyte: {
                one: "{0} megabyte",
                other: "{0} megabyte"
            },
            digitalMegabit: {
                one: "{0} megabit",
                other: "{0} megabit"
            },
            digitalKilobyte: {
                one: "{0} kilobyte",
                other: "{0} kilobyte"
            },
            digitalKilobit: {
                one: "{0} kilobit",
                other: "{0} kilobit"
            },
            digitalByte: _g98t73,
            digitalBit: _g98t57,
            durationYear: _g98t74,
            durationMonth: _g98t104,
            durationWeek: _g98t75,
            durationDay: _g98t76,
            durationHour: {
                one: "{0} ordu",
                other: "{0} ordu"
            },
            durationMinute: _g98t91,
            durationSecond: _g98t101,
            durationMillisecond: {
                one: "{0} milisegundo",
                other: "{0} milisegundo"
            },
            durationMicrosecond: {
                one: "{0} mikrosegundo",
                other: "{0} mikrosegundo"
            },
            durationNanosecond: {
                one: "{0} nanosegundo",
                other: "{0} nanosegundo"
            },
            electricAmpere: {
                one: "{0} ampere",
                other: "{0} ampere"
            },
            electricMilliampere: {
                one: "{0} miliampere",
                other: "{0} miliampere"
            },
            electricOhm: {
                one: "{0} ohm",
                other: "{0} ohm"
            },
            electricVolt: {
                one: "{0} volt",
                other: "{0} volt"
            },
            energyKilocalorie: {
                one: "{0} kilokaloria",
                other: "{0} kilokaloria"
            },
            energyCalorie: _g98t102,
            energyFoodcalorie: _g98t102,
            energyKilojoule: {
                one: "{0} kilojoule",
                other: "{0} kilojoule"
            },
            energyJoule: {
                one: "{0} joule",
                other: "{0} joule"
            },
            energyKilowattHour: {
                one: "{0} kilowatt-ordu",
                other: "{0} kilowatt-ordu"
            },
            frequencyGigahertz: {
                one: "{0} gigahertz",
                other: "{0} gigahertz"
            },
            frequencyMegahertz: {
                one: "{0} megahertz",
                other: "{0} megahertz"
            },
            frequencyKilohertz: {
                one: "{0} kilohertz",
                other: "{0} kilohertz"
            },
            frequencyHertz: {
                one: "{0} hertz",
                other: "{0} hertz"
            },
            lengthKilometer: {
                one: "{0} kilometro",
                other: "{0} kilometro"
            },
            lengthMeter: {
                one: "{0} metro",
                other: "{0} metro"
            },
            lengthDecimeter: {
                one: "{0} dezimetro",
                other: "{0} dezimetro"
            },
            lengthCentimeter: {
                one: "{0} zentimetro",
                other: "{0} zentimetro"
            },
            lengthMillimeter: {
                one: "{0} milimetro",
                other: "{0} milimetro"
            },
            lengthMicrometer: {
                one: "{0} mikrometro",
                other: "{0} mikrometro"
            },
            lengthNanometer: {
                one: "{0} nanometro",
                other: "{0} nanometro"
            },
            lengthPicometer: {
                one: "{0} pikometro",
                other: "{0} pikometro"
            },
            lengthMile: {
                one: "{0} milia",
                other: "{0} milia"
            },
            lengthYard: {
                one: "{0} yarda",
                other: "{0} yarda"
            },
            lengthFoot: {
                one: "{0} oin",
                other: "{0} oin"
            },
            lengthInch: {
                one: "{0} hazbete",
                other: "{0} hazbete"
            },
            lengthParsec: {
                one: "{0} parsec",
                other: "{0} parsec"
            },
            lengthLightYear: {
                one: "{0} argi-urte",
                other: "{0} argi-urte"
            },
            lengthAstronomicalUnit: {
                one: "{0} unitate astronomiko",
                other: "{0} unitate astronomiko"
            },
            lengthNauticalMile: {
                one: "{0} milia nautiko",
                other: "{0} milia nautiko"
            },
            lightLux: {
                one: "{0} lux",
                other: "{0} lux"
            },
            massMetricTon: {
                one: "{0} tona",
                other: "{0} tona"
            },
            massKilogram: {
                one: "{0} kilogramo",
                other: "{0} kilogramo"
            },
            massGram: {
                one: "{0} gramo",
                other: "{0} gramo"
            },
            massMilligram: {
                one: "{0} miligramo",
                other: "{0} miligramo"
            },
            massMicrogram: {
                one: "{0} mikrogramo",
                other: "{0} mikrogramo"
            },
            massTon: {
                one: "{0} AEBetako tona",
                other: "{0} AEBetako tona"
            },
            massPound: {
                one: "{0} libra",
                other: "{0} libra"
            },
            massOunce: {
                one: "{0} ontza",
                other: "{0} ontza"
            },
            massOunceTroy: {
                one: "{0} troy ontza",
                other: "{0} troy ontza"
            },
            massCarat: _g98t92,
            powerGigawatt: {
                one: "{0} gigawatt",
                other: "{0} gigawatt"
            },
            powerMegawatt: {
                one: "{0} megawatt",
                other: "{0} megawatt"
            },
            powerKilowatt: {
                one: "{0} kilowatt",
                other: "{0} kilowatt"
            },
            powerWatt: {
                one: "{0} watt",
                other: "{0} watt"
            },
            powerMilliwatt: {
                one: "{0} miliwatt",
                other: "{0} miliwatt"
            },
            powerHorsepower: {
                one: "{0} zaldi-potentzia",
                other: "{0} zaldi-potentzia"
            },
            pressureHectopascal: {
                one: "{0} hektopascal",
                other: "{0} hektopascal"
            },
            pressureMillimeterOfMercury: {
                one: "{0} merkurio-milimetro",
                other: "{0} merkurio-milimetro"
            },
            pressurePoundPerSquareInch: {
                one: "{0} libra hazbete karratuko",
                other: "{0} libra hazbete karratuko"
            },
            pressureInchHg: {
                one: "{0} merkurio-hazbete",
                other: "{0} merkurio-hazbete"
            },
            pressureMillibar: {
                one: "{0} milibar",
                other: "{0} milibar"
            },
            speedKilometerPerHour: {
                one: "{0} kilometro orduko",
                other: "{0} kilometro orduko"
            },
            speedMeterPerSecond: {
                one: "{0} metro segundoko",
                other: "{0} metro segundoko"
            },
            speedMilePerHour: {
                one: "{0} milia orduko",
                other: "{0} milia orduko"
            },
            temperatureCelsius: {
                one: "{0} Celcius gradu",
                other: "{0} Celcius gradu"
            },
            temperatureFahrenheit: {
                one: "{0}Fahrenheit gradu",
                other: "{0}Fahrenheit gradu"
            },
            temperatureKelvin: {
                one: "{0} kelvin gradu",
                other: "{0} kelvin gradu"
            },
            volumeCubicKilometer: {
                one: "{0} kilometro kubiko",
                other: "{0} kilometro kubiko"
            },
            volumeCubicMeter: {
                one: "{0} metro kubiko",
                other: "{0} metro kubiko"
            },
            volumeCubicCentimeter: {
                one: "{0} zentimetro kubiko",
                other: "{0} zentimetro kubiko"
            },
            volumeCubicMile: {
                one: "{0} milia kubiko",
                other: "{0} milia kubiko"
            },
            volumeCubicYard: {
                one: "{0} yarda kubiko",
                other: "{0} yarda kubiko"
            },
            volumeCubicFoot: {
                one: "{0} oin kubiko",
                other: "{0} oin kubiko"
            },
            volumeCubicInch: {
                one: "{0} hazbete kubiko",
                other: "{0} hazbete kubiko"
            },
            volumeMegaliter: {
                one: "{0} megalitro",
                other: "{0} megalitro"
            },
            volumeHectoliter: {
                one: "{0} hektolitro",
                other: "{0} hektolitro"
            },
            volumeLiter: {
                one: "{0} litro",
                other: "{0} litro"
            },
            volumeDeciliter: {
                one: "{0} dezilitro",
                other: "{0} dezilitro"
            },
            volumeCentiliter: {
                one: "{0} zentilitro",
                other: "{0} zentilitro"
            },
            volumeMilliliter: {
                one: "{0} mililitro",
                other: "{0} mililitro"
            },
            volumeAcreFoot: {
                one: "{0} akre-oin",
                other: "{0} akre-oin"
            },
            volumeGallon: {
                one: "{0} galoi",
                other: "{0} galoi"
            },
            volumeQuart: {
                one: "{0} galoi-laurden",
                other: "{0} galoi-laurden"
            },
            volumePint: {
                one: "{0} pinta",
                other: "{0} pinta"
            },
            volumeCup: {
                one: "{0} katilukada",
                other: "{0} katilukada"
            },
            volumeFluidOunce: {
                one: "{0} ontza likido",
                other: "{0} ontza likido"
            },
            volumeTablespoon: {
                one: "{0} koilarakada",
                other: "{0} koilarakada"
            },
            volumeTeaspoon: {
                one: "{0} koilaratxokada",
                other: "{0} koilaratxokada"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: _g98t16,
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRadian: {
                one: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: _g98t7,
            angleArcMinute: _g98t8,
            angleArcSecond: _g98t9,
            areaSquareKilometer: _g98t58,
            areaHectare: _g98t30,
            areaSquareMeter: _g98t31,
            areaSquareCentimeter: _g98t56,
            areaSquareMile: _g98t59,
            areaAcre: _g98t32,
            areaSquareYard: {
                one: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: _g98t60,
            areaSquareInch: {
                one: "{0} in²",
                other: "{0} in²"
            },
            concentrKarat: {
                one: "{0} kt",
                other: "{0} kt"
            },
            consumptionLiterPerKilometer: {
                one: "{0} l/km",
                other: "{0} l/km"
            },
            consumptionMilePerGallon: {
                one: "{0} mpg",
                other: "{0} mpg"
            },
            digitalTerabyte: {
                one: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: {
                one: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: {
                one: "{0} kB",
                other: "{0} kB"
            },
            digitalKilobit: {
                one: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: _g98t73,
            digitalBit: _g98t57,
            durationYear: _g98t74,
            durationMonth: _g98t104,
            durationWeek: _g98t75,
            durationDay: _g98t76,
            durationHour: _g98t17,
            durationMinute: _g98t61,
            durationSecond: _g98t18,
            durationMillisecond: _g98t33,
            durationMicrosecond: {
                one: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: {
                one: "{0} kcal",
                other: "{0} kcal"
            },
            energyCalorie: {
                one: "{0} cal",
                other: "{0} cal"
            },
            energyFoodcalorie: {
                one: "{0} Cal",
                other: "{0} Cal"
            },
            energyKilojoule: {
                one: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: _g98t34,
            lengthMeter: _g98t19,
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: _g98t35,
            lengthMillimeter: _g98t36,
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: _g98t37,
            lengthMile: _g98t38,
            lengthYard: _g98t39,
            lengthFoot: _g98t40,
            lengthInch: _g98t41,
            lengthParsec: {
                one: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: _g98t42,
            lengthAstronomicalUnit: {
                one: "{0} au",
                other: "{0} au"
            },
            lengthNauticalMile: {
                one: "{0} nmi",
                other: "{0} nmi"
            },
            lightLux: {
                one: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: {
                one: "{0} t",
                other: "{0} t"
            },
            massKilogram: _g98t43,
            massGram: _g98t20,
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} µg",
                other: "{0} µg"
            },
            massTon: {
                one: "{0} tn",
                other: "{0} tn"
            },
            massPound: _g98t44,
            massOunce: _g98t45,
            massOunceTroy: {
                one: "{0} oz t",
                other: "{0} oz t"
            },
            massCarat: {
                one: "{0} CD",
                other: "{0} CD"
            },
            powerGigawatt: {
                one: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: _g98t46,
            powerWatt: _g98t21,
            powerMilliwatt: {
                one: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: _g98t47,
            pressureHectopascal: _g98t62,
            pressureMillimeterOfMercury: {
                one: "{0} mm Hg",
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0} psi",
                other: "{0} psi"
            },
            pressureInchHg: _g98t77,
            pressureMillibar: _g98t48,
            speedKilometerPerHour: _g98t78,
            speedMeterPerSecond: _g98t63,
            speedMilePerHour: _g98t64,
            temperatureCelsius: {
                one: "{0}°C",
                other: "{0}°C"
            },
            temperatureFahrenheit: _g98t22,
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: _g98t65,
            volumeCubicMeter: {
                one: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: _g98t66,
            volumeCubicYard: {
                one: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: {
                one: "{0} in³",
                other: "{0} in³"
            },
            volumeMegaliter: {
                one: "{0} Ml",
                other: "{0} Ml"
            },
            volumeHectoliter: {
                one: "{0} hl",
                other: "{0} hl"
            },
            volumeLiter: _g98t23,
            volumeDeciliter: {
                one: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} cl",
                other: "{0} cl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                other: "{0} ml"
            },
            volumeAcreFoot: {
                one: "{0} ac ft",
                other: "{0} ac ft"
            },
            volumeGallon: {
                one: "{0} gal",
                other: "{0} gal"
            },
            volumeQuart: {
                one: "{0} qt",
                other: "{0} qt"
            },
            volumePint: {
                one: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: {
                one: "{0} c",
                other: "{0} c"
            },
            volumeFluidOunce: {
                one: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} tbsp",
                other: "{0} tbsp"
            },
            volumeTeaspoon: {
                one: "{0} tsp",
                other: "{0} tsp"
            },
            angleRevolution: {
                other: "{0} rev"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            "consumptionLiterPer-100kilometers": {
                other: "{0} L/100km"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            durationCentury: {
                other: "{0} c"
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            lengthMileScandinavian: {
                other: "{0} smi"
            },
            massStone: {
                other: "{0} st"
            },
            speedKnot: {
                other: "{0} kn"
            },
            temperatureGeneric: {
                other: "{0}°"
            },
            volumePintMetric: {
                other: "{0} mpt"
            },
            volumeCupMetric: {
                other: "{0} mc"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: _g98t16,
            angleDegree: _g98t7,
            angleArcMinute: _g98t8,
            angleArcSecond: _g98t9,
            areaSquareKilometer: _g98t58,
            areaHectare: _g98t30,
            areaSquareMeter: _g98t31,
            areaSquareMile: _g98t59,
            areaAcre: _g98t32,
            areaSquareFoot: _g98t60,
            durationYear: _g98t74,
            durationMonth: {
                one: "{0} hil.",
                other: "{0} hil."
            },
            durationWeek: _g98t75,
            durationDay: _g98t76,
            durationHour: _g98t17,
            durationMinute: _g98t61,
            durationSecond: _g98t18,
            durationMillisecond: _g98t33,
            lengthKilometer: _g98t34,
            lengthMeter: _g98t19,
            lengthCentimeter: _g98t35,
            lengthMillimeter: _g98t36,
            lengthPicometer: _g98t37,
            lengthMile: _g98t38,
            lengthYard: _g98t39,
            lengthFoot: _g98t40,
            lengthInch: _g98t41,
            lengthLightYear: _g98t42,
            massKilogram: _g98t43,
            massGram: _g98t20,
            massPound: _g98t44,
            massOunce: _g98t45,
            powerKilowatt: _g98t46,
            powerWatt: _g98t21,
            powerHorsepower: _g98t47,
            pressureHectopascal: _g98t62,
            pressureInchHg: _g98t77,
            pressureMillibar: _g98t48,
            speedKilometerPerHour: _g98t78,
            speedMeterPerSecond: _g98t63,
            speedMilePerHour: _g98t64,
            temperatureCelsius: _g98t7,
            temperatureFahrenheit: _g98t22,
            volumeCubicKilometer: _g98t65,
            volumeCubicMile: _g98t66,
            volumeLiter: _g98t23
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "{0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "{0} (udako ordua)",
        standard: "{0} (ordu estandarra)"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "b", "c", "ç", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "ñ", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z" ],
        auxiliary: [ "á", "à", "ă", "â", "å", "ä", "ã", "ā", "æ", "é", "è", "ĕ", "ê", "ë", "ē", "í", "ì", "ĭ", "î", "ï", "ī", "ó", "ò", "ŏ", "ô", "ö", "ø", "ō", "œ", "ú", "ù", "ŭ", "û", "ü", "ū", "ÿ" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ],
        punctuation: [ "\\-", ",", ";", "\\:", "!", "?", ".", "(", ")", "\\[", "\\]", "\\{", "\\}" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0}…",
        "word-initial": "…{0}",
        "word-medial": "{0}…{1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _g98t487,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _g98t537,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _g98t537,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _g98t487,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _g98t487,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _g98t487,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _g98t487,
        digits: "renderEthiopic"
    },
    finance: _g98t489,
    fullwide: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _g98t487,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _g98t487,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _g98t487,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _g98t487,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _g98t495,
    hansfin: _g98t497,
    hant: _g98t495,
    hantfin: _g98t497,
    hebr: {
        symbols: _g98t487,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _g98t487,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _g98t495,
    jpanfin: _g98t497,
    kali: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _g98t487,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _g98t487,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _g98t487,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _g98t487,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _g98t487,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _g98t487,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _g98t487,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _g98t487,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _g98t489,
    nkoo: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _g98t487,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _g98t487,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _g98t487,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _g98t487,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _g98t487,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _g98t487,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _g98t489,
    vaii: {
        symbols: _g98t487,
        formats: _g98t537,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _g98t487,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _g98t533,
        datePartsOrder: "ymd",
        dateIntervalFormats: _g98t532,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _g98t521,
        dayPeriods: _g98t511,
        monthNames: _g98t524,
        eraNames: {
            wide: [ "BG" ],
            abbreviated: [ "BG" ]
        },
        quarterNames: _g98t509,
        fields: _g98t540
    },
    chinese: _g98t543,
    coptic: {
        dateFormats: _g98t533,
        datePartsOrder: "ymd",
        dateIntervalFormats: _g98t532,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _g98t521,
        dayPeriods: _g98t511,
        monthNames: {
            format: _g98t510,
            standAlone: _g98t510
        },
        eraNames: _g98t122,
        quarterNames: _g98t509,
        fields: _g98t540
    },
    dangi: _g98t543,
    ethioaa: _g98t541,
    ethiopic: {
        dateFormats: _g98t533,
        datePartsOrder: "ymd",
        dateIntervalFormats: _g98t532,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _g98t521,
        dayPeriods: _g98t511,
        monthNames: {
            format: _g98t513,
            standAlone: _g98t513
        },
        eraNames: _g98t122,
        quarterNames: _g98t509,
        fields: _g98t540
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "y('e')'ko' MMMM d, EEEE",
                longDate: "y('e')'ko' MMMM d",
                mediumDate: "y MMM d",
                shortDate: "y/MM/dd",
                fullTime: "HH:mm:ss (zzzz)",
                longTime: "HH:mm:ss (z)",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "y/MM/dd HH:mm",
                mediumDateTime: "y MMM d HH:mm:ss",
                longDateTime: "y('e')'ko' MMMM d HH:mm:ss (z)",
                fullDateTime: "y('e')'ko' MMMM d, EEEE HH:mm:ss (zzzz)"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "d, E",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "G y",
                GyMMM: "G y. 'urteko' MMM",
                GyMMMd: "G y. 'urteko' MMM d",
                GyMMMEd: "G y. 'urteko' MMM d, E",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                M: "L",
                Md: "M/d",
                MEd: "M/d, E",
                MMM: "LLL",
                MMMd: "MMM d",
                MMMEd: "MMM d, E",
                ms: "mm:ss",
                y: "y",
                yM: "y/M",
                yMd: "y/M/d",
                yMEd: "y/M/d, E",
                yMMM: "y MMM",
                yMMMd: "y MMM d",
                yMMMEd: "y MMM d, E",
                yMMMM: "y('e')'ko' MMMM",
                yMMMMd: "y('e')'ko' MMMM d",
                yMMMMEd: "y('e')'ko' MMMM d, E",
                yQQQ: "y('e')'ko' QQQ",
                yQQQQ: "y('e')'ko' QQQQ",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                MMMMd: "MMMM d"
            }
        },
        datePartsOrder: "ymd",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _g98t13,
            H: {
                H: "HH–HH"
            },
            hm: _g98t132,
            Hm: _g98t84,
            hmv: _g98t144,
            Hmv: _g98t96,
            hv: _g98t54,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            Md: {
                d: "M/d – M/d",
                M: "M/d – M/d"
            },
            MEd: {
                d: "M/d, E – M/d, E",
                M: "M/d, E – M/d, E"
            },
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _g98t71,
            MMMEd: _g98t121,
            y: {
                y: "y–y"
            },
            yM: {
                M: "y/M – y/M",
                y: "y/M – y/M"
            },
            yMd: {
                d: "y/M/d – y/M/d",
                M: "y/M/d – y/M/d",
                y: "y/M/d – y/M/d"
            },
            yMEd: {
                d: "y/M/d, E – y/M/d, E",
                M: "y/M/d, E – y/M/d, E",
                y: "y/M/d, E – y/M/d, E"
            },
            yMMM: {
                M: "y('e')'ko' MMM–MMM",
                y: "y('e')'ko' MMM – y('e')'ko' MMM"
            },
            yMMMd: {
                d: "y('e')'ko' MMM d–d",
                M: "y('e')'ko' MMM d – MMM d",
                y: "y('e')'ko' MMM d – y('e')'ko' MMM d"
            },
            yMMMEd: {
                d: "y('e')'ko' MMM d, E – y('e')'ko' MMM d, E",
                M: "y('e')'ko' MMM d, E – MMM d, E",
                y: "y('e')'ko' MMM d, E – y('e')'ko' MMM d, E"
            },
            yMMMM: {
                M: "y('e')'ko' MMMM–MMMM",
                y: "y('e')'ko' MMMM – y('e')'ko' MMMM"
            }
        },
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _g98t521,
        dayPeriods: _g98t511,
        monthNames: _g98t524,
        eraNames: {
            wide: [ "K.a.", "K.o." ],
            abbreviated: [ "K.a.", "K.o." ]
        },
        quarterNames: _g98t509,
        fields: _g98t540
    },
    hebrew: {
        dateFormats: _g98t533,
        datePartsOrder: "ymd",
        dateIntervalFormats: _g98t532,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _g98t521,
        dayPeriods: _g98t511,
        monthNames: {
            format: _g98t507,
            standAlone: _g98t507
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _g98t509,
        fields: _g98t540
    },
    indian: {
        dateFormats: _g98t533,
        datePartsOrder: "ymd",
        dateIntervalFormats: _g98t532,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _g98t521,
        dayPeriods: _g98t511,
        monthNames: {
            format: _g98t514,
            standAlone: _g98t514
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _g98t509,
        fields: _g98t540
    },
    islamic: _g98t542,
    "islamic-umalqura": _g98t542,
    "islamic-tbla": _g98t542,
    "islamic-civil": _g98t542,
    "islamic-rgsa": _g98t542,
    iso8601: _g98t541,
    japanese: {
        dateFormats: _g98t533,
        datePartsOrder: "ymd",
        dateIntervalFormats: _g98t532,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _g98t521,
        dayPeriods: _g98t511,
        monthNames: _g98t524,
        eraNames: {
            wide: _g98t538,
            abbreviated: _g98t538
        },
        quarterNames: _g98t509,
        fields: _g98t540
    },
    persian: {
        dateFormats: _g98t533,
        datePartsOrder: "ymd",
        dateIntervalFormats: _g98t532,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _g98t521,
        dayPeriods: _g98t511,
        monthNames: {
            format: _g98t508,
            standAlone: _g98t508
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _g98t509,
        fields: _g98t540
    },
    roc: {
        dateFormats: _g98t533,
        datePartsOrder: "ymd",
        dateIntervalFormats: _g98t532,
        dateIntervalFallbackFormat: "{0} – {1}",
        dayNames: _g98t521,
        dayPeriods: _g98t511,
        monthNames: _g98t524,
        eraNames: {
            wide: _g98t29,
            abbreviated: _g98t29
        },
        quarterNames: _g98t509,
        fields: _g98t540
    },
    islamicc: _g98t541
};

inter.pluralRule = function(n) {
    if (typeof n === "string") n = parseInt(n, 10);
    if (n === 1) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + ".";
};

inter.renderSpelloutNumbering = function(n) {
    if (n < 0) return "−" + this.renderSpelloutNumbering(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 36), {
    id: "America/North_Dakota/Beulah",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Beulah, Ipar Dakota",
    countryId: "US"
}, P.timeZones.slice(38, 43), {
    id: "America/North_Dakota/Center",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Erdialdea, Ipar Dakota",
    countryId: "US"
}, {
    id: "Pacific/Galapagos",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Galapagoak",
    countryId: "EC"
}, P.timeZones.slice(44, 50), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mexico Hiria",
    countryId: "MX"
}, P.timeZones[51], {
    id: "America/North_Dakota/New_Salem",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "New Salem, Ipar Dakota",
    countryId: "US"
}, P.timeZones.slice(53, 72), {
    id: "America/Jamaica",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Jamaika",
    countryId: "JM"
}, P.timeZones.slice(73, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones.slice(91, 98), {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, {
    id: "America/Dominica",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Dominika",
    countryId: "DM"
}, P.timeZones.slice(100, 103), {
    id: "America/Guadeloupe",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Guadalupe",
    countryId: "GP"
}, P.timeZones.slice(104, 111), {
    id: "America/Martinique",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Martinika",
    countryId: "MQ"
}, P.timeZones.slice(112, 117), {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Barthélemy",
    countryId: "BL"
}, P.timeZones.slice(117, 119), P.timeZones.slice(120, 139), {
    id: "America/Miquelon",
    regionId: "021",
    utcStandardOffsetSeconds: -10800,
    displayName: "Mikelune",
    countryId: "PM"
}, P.timeZones.slice(140, 158), {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azoreak",
    countryId: "PT"
}, {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Cabo Verde",
    countryId: "CV"
}, P.timeZones.slice(160, 166), P.timeZones.slice(167, 174), P.timeZones[175], {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Kanariak",
    countryId: "ES"
}, {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lisboa",
    countryId: "PT"
}, P.timeZones[177], {
    id: "Europe/London",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Londres",
    countryId: "GB"
}, P.timeZones[179], {
    id: "Europe/Isle_of_Man",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Man uhartea",
    countryId: "IM"
}, P.timeZones.slice(180, 184), P.timeZones[185], {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Aljer",
    countryId: "DZ"
}, P.timeZones.slice(188, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrado",
    countryId: "RS"
}, P.timeZones.slice(192, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Brusela",
    countryId: "BE"
}, P.timeZones.slice(196, 200), P.timeZones.slice(201, 203), {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Erroma",
    countryId: "IT"
}, P.timeZones.slice(203, 205), {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Kopenhage",
    countryId: "DK"
}, P.timeZones.slice(205, 210), {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Luxenburgo",
    countryId: "LU"
}, {
    id: "Europe/Madrid",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Madril",
    countryId: "ES"
}, P.timeZones.slice(212, 214), {
    id: "Europe/Monaco",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Monako",
    countryId: "MC"
}, P.timeZones.slice(215, 221), {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Praga",
    countryId: "CZ"
}, P.timeZones.slice(223, 227), {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, P.timeZones.slice(228, 230), {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Varsovia",
    countryId: "PL"
}, {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Vaticano Hiria",
    countryId: "VA"
}, {
    id: "Europe/Vienna",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Viena",
    countryId: "AT"
}, P.timeZones.slice(233, 235), {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Atenas",
    countryId: "GR"
}, P.timeZones.slice(236, 238), P.timeZones[239], {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bukarest",
    countryId: "RO"
}, P.timeZones.slice(241, 249), {
    id: "Africa/Johannesburg",
    regionId: "018",
    utcStandardOffsetSeconds: 7200,
    displayName: "Johannesburgo",
    countryId: "ZA"
}, P.timeZones[250], {
    id: "Africa/Cairo",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Kairo",
    countryId: "EG"
}, P.timeZones.slice(251, 268), {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Addis Abeba",
    countryId: "ET"
}, P.timeZones.slice(269, 276), {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damasko",
    countryId: "SY"
}, P.timeZones.slice(277, 286), {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Mosku",
    countryId: "RU"
}, P.timeZones.slice(287, 298), {
    id: "Indian/Mauritius",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "Maurizio",
    countryId: "MU"
}, P.timeZones.slice(299, 314), {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Maldivak",
    countryId: "MV"
}, P.timeZones.slice(315, 360), {
    id: "Asia/Singapore",
    regionId: "035",
    utcStandardOffsetSeconds: 28800,
    displayName: "Singapur",
    countryId: "SG"
}, P.timeZones[361], {
    id: "Asia/Ulaanbaatar",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Ulan Bator",
    countryId: "MN"
}, P.timeZones.slice(363, 370), {
    id: "Asia/Seoul",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Seul",
    countryId: "KR"
}, {
    id: "Asia/Tokyo",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Tokio",
    countryId: "JP"
}, P.timeZones[372], {
    id: "Australia/Adelaide",
    regionId: "053",
    utcStandardOffsetSeconds: 34200,
    displayName: "Adelaida",
    countryId: "AU"
}, P.timeZones.slice(374, 419));

inter.territories = [ _g98t316, _g98t367, _g98t431, _g98t422, _g98t427, _g98t432, _g98t439, _g98t368, _g98t219, _g98t264, _g98t220, _g98t375, _g98t440, _g98t369, _g98t433, _g98t455, _g98t221, _g98t189, _g98t190, _g98t126, _g98t400, _g98t423, _g98t296, _g98t222, _g98t164, _g98t148, _g98t351, _g98t413, _g98t417, _g98t441, _g98t418, _g98t428, _g98t401, _g98t297, _g98t223, _g98t317, _g98t224, _g98t225, _g98t318, _g98t265, _g98t226, _g98t191, _g98t165, _g98t227, _g98t192, _g98t338, _g98t442, _g98t448, _g98t319, _g98t228, _g98t397, _g98t266, _g98t142, _g98t193, _g98t194, _g98t267, _g98t352, _g98t229, _g98t320, _g98t149, _g98t145, _g98t151, _g98t137, _g98t362, _g98t321, _g98t230, _g98t298, _g98t136, _g98t231, _g98t268, _g98t414, _g98t195, _g98t376, _g98t232, _g98t370, _g98t339, _g98t434, _g98t443, _g98t233, _g98t371, _g98t299, _g98t234, _g98t300, _g98t301, _g98t269, _g98t235, _g98t236, _g98t372, _g98t424, _g98t429, _g98t435, _g98t444, _g98t373, _g98t152, _g98t302, _g98t303, _g98t270, _g98t166, _g98t196, _g98t237, _g98t167, _g98t304, _g98t168, _g98t353, _g98t238, _g98t197, _g98t340, _g98t305, _g98t153, _g98t306, _g98t307, _g98t198, _g98t386, _g98t169, _g98t363, _g98t411, _g98t322, _g98t323, _g98t324, _g98t454, _g98t377, _g98t341, _g98t271, _g98t402, _g98t272, _g98t170, _g98t425, _g98t308, _g98t325, _g98t449, _g98t154, _g98t155, _g98t239, _g98t273, _g98t199, _g98t200, _g98t240, _g98t241, _g98t201, _g98t274, _g98t378, _g98t387, _g98t242, _g98t202, _g98t127, _g98t275, _g98t379, _g98t412, _g98t326, _g98t171, _g98t342, _g98t276, _g98t277, _g98t278, _g98t403, _g98t453, _g98t243, _g98t244, _g98t156, _g98t203, _g98t157, _g98t245, _g98t246, _g98t204, _g98t247, _g98t172, _g98t364, _g98t279, _g98t327, _g98t380, _g98t328, _g98t205, _g98t280, _g98t281, _g98t158, _g98t173, _g98t282, _g98t343, _g98t206, _g98t392, _g98t309, _g98t329, _g98t283, _g98t248, _g98t310, _g98t393, _g98t404, _g98t207, _g98t330, _g98t450, _g98t284, _g98t208, _g98t285, _g98t331, _g98t332, _g98t311, {
    id: "QO",
    displayName: "Mugaz kanpoko Ozeania",
    regionId: "009",
    hasTimeZones: false
}, _g98t123, _g98t249, _g98t250, _g98t174, _g98t175, _g98t176, _g98t251, _g98t312, _g98t159, _g98t381, _g98t286, _g98t160, _g98t382, _g98t287, _g98t177, _g98t419, _g98t209, _g98t398, _g98t288, _g98t161, _g98t394, _g98t395, _g98t405, _g98t252, _g98t289, _g98t344, _g98t178, _g98t253, _g98t210, _g98t388, _g98t354, _g98t415, _g98t355, _g98t451, _g98t436, _g98t389, _g98t179, _g98t333, _g98t345, _g98t416, _g98t356, _g98t254, _g98t211, _g98t346, _g98t357, _g98t290, _g98t358, _g98t180, _g98t255, _g98t313, _g98t181, _g98t212, _g98t213, _g98t256, _g98t452, _g98t347, _g98t214, _g98t334, _g98t291, _g98t335, _g98t162, _g98t257, _g98t182, _g98t406, _g98t146, _g98t258, _g98t430, _g98t215, _g98t359, _g98t216, _g98t163, _g98t407, _g98t183, _g98t184, _g98t217, _g98t259, _g98t260, _g98t336, _g98t261, _g98t374, _g98t314, _g98t262, _g98t396, _g98t185, _g98t218, _g98t383, _g98t292, _g98t186 ];

inter.regions = [ _g98t367, _g98t422, _g98t427, _g98t432, _g98t439, _g98t375, _g98t440, _g98t351, _g98t413, _g98t417, _g98t441, _g98t418, _g98t428, _g98t401, _g98t434, _g98t443, _g98t372, _g98t424, _g98t429, _g98t435, _g98t444, _g98t411, _g98t379, _g98t393, _g98t450, _g98t123, _g98t382, _g98t395 ];

inter.countries = [ _g98t316, _g98t431, _g98t368, _g98t219, _g98t264, _g98t220, _g98t369, _g98t433, _g98t455, _g98t221, _g98t189, _g98t190, _g98t126, _g98t400, _g98t423, _g98t296, _g98t222, _g98t164, _g98t148, _g98t297, _g98t223, _g98t317, _g98t224, _g98t225, _g98t318, _g98t265, _g98t226, _g98t191, _g98t165, _g98t227, _g98t192, _g98t338, _g98t442, _g98t448, _g98t319, _g98t228, _g98t397, _g98t266, _g98t142, _g98t193, _g98t194, _g98t267, _g98t352, _g98t229, _g98t320, _g98t149, _g98t145, _g98t151, _g98t137, _g98t362, _g98t321, _g98t230, _g98t298, _g98t136, _g98t231, _g98t268, _g98t414, _g98t195, _g98t376, _g98t232, _g98t370, _g98t339, _g98t233, _g98t371, _g98t299, _g98t234, _g98t300, _g98t301, _g98t269, _g98t235, _g98t236, _g98t373, _g98t152, _g98t302, _g98t303, _g98t270, _g98t166, _g98t196, _g98t237, _g98t167, _g98t304, _g98t168, _g98t353, _g98t238, _g98t197, _g98t340, _g98t305, _g98t153, _g98t306, _g98t307, _g98t198, _g98t386, _g98t169, _g98t363, _g98t322, _g98t323, _g98t324, _g98t454, _g98t377, _g98t341, _g98t271, _g98t402, _g98t272, _g98t170, _g98t425, _g98t308, _g98t325, _g98t449, _g98t154, _g98t155, _g98t239, _g98t273, _g98t199, _g98t200, _g98t240, _g98t241, _g98t201, _g98t274, _g98t378, _g98t387, _g98t242, _g98t202, _g98t127, _g98t275, _g98t412, _g98t326, _g98t171, _g98t342, _g98t276, _g98t277, _g98t278, _g98t403, _g98t453, _g98t243, _g98t244, _g98t156, _g98t203, _g98t157, _g98t245, _g98t246, _g98t204, _g98t247, _g98t172, _g98t364, _g98t279, _g98t327, _g98t380, _g98t328, _g98t205, _g98t280, _g98t281, _g98t158, _g98t173, _g98t282, _g98t343, _g98t206, _g98t392, _g98t309, _g98t329, _g98t283, _g98t248, _g98t310, _g98t404, _g98t207, _g98t330, _g98t284, _g98t208, _g98t285, _g98t331, _g98t332, _g98t311, _g98t249, _g98t250, _g98t174, _g98t175, _g98t176, _g98t251, _g98t312, _g98t159, _g98t381, _g98t286, _g98t160, _g98t287, _g98t177, _g98t419, _g98t209, _g98t398, _g98t288, _g98t161, _g98t394, _g98t405, _g98t252, _g98t289, _g98t344, _g98t178, _g98t253, _g98t210, _g98t388, _g98t354, _g98t415, _g98t355, _g98t451, _g98t436, _g98t389, _g98t179, _g98t333, _g98t345, _g98t416, _g98t356, _g98t254, _g98t211, _g98t346, _g98t357, _g98t290, _g98t358, _g98t180, _g98t255, _g98t313, _g98t181, _g98t212, _g98t213, _g98t256, _g98t452, _g98t347, _g98t214, _g98t334, _g98t291, _g98t335, _g98t162, _g98t257, _g98t182, _g98t406, _g98t146, _g98t258, _g98t430, _g98t215, _g98t359, _g98t216, _g98t163, _g98t407, _g98t183, _g98t184, _g98t217, _g98t259, _g98t260, _g98t336, _g98t261, _g98t374, _g98t314, _g98t262, _g98t396, _g98t185, _g98t218, _g98t383, _g98t292, _g98t186 ];

inter.languages = [ {
    id: "ab",
    displayName: "abkhazera"
}, {
    id: "ach",
    displayName: "Acholiera"
}, {
    id: "af",
    displayName: "afrikaansa",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "aghemera",
    nativeDisplayName: "Aghem"
}, {
    id: "ay",
    displayName: "aimara"
}, {
    id: "ak",
    displayName: "akanera",
    nativeDisplayName: "Akan"
}, {
    id: "en_us",
    displayName: "ingelesa (AEB)",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "Inari samiera",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "az",
    displayName: "azerbaijanera",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "ms",
    displayName: "malaysiera",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bm",
    displayName: "bambarera",
    nativeDisplayName: "bamanakan"
}, {
    id: "ba",
    displayName: "bashkirrera"
}, {
    id: "bs",
    displayName: "bosniera",
    nativeDisplayName: "bosanski"
}, {
    id: "br",
    displayName: "bretoiera",
    nativeDisplayName: "brezhoneg"
}, {
    id: "ca",
    displayName: "katalana",
    nativeDisplayName: "català"
}, {
    id: "kde",
    displayName: "makondera",
    nativeDisplayName: "Chimakonde"
}, {
    id: "sn",
    displayName: "shonera",
    nativeDisplayName: "chiShona"
}, {
    id: "cy",
    displayName: "galesera",
    nativeDisplayName: "Cymraeg"
}, {
    id: "da",
    displayName: "daniera",
    nativeDisplayName: "dansk"
}, {
    id: "se",
    displayName: "iparraldeko samiera",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "de",
    displayName: "alemana",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luoera",
    nativeDisplayName: "Dholuo"
}, {
    id: "dv",
    displayName: "divehiera"
}, {
    id: "dsb",
    displayName: "behe-sorabiera",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dua",
    displayName: "dualera",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "estoniera",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efikera"
}, {
    id: "guz",
    displayName: "gusiiera",
    nativeDisplayName: "Ekegusii"
}, {
    id: "en",
    displayName: "ingelesa",
    nativeDisplayName: "English"
}, {
    id: "es",
    displayName: "espainiera",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "espainiera (Europa)",
    nativeDisplayName: "español de España"
}, {
    id: "eo",
    displayName: "esperantoa",
    nativeDisplayName: "esperanto"
}, {
    id: "eu",
    displayName: "euskara",
    nativeDisplayName: "euskara"
}, {
    id: "zxx",
    displayName: "ez dago eduki linguistikorik"
}, {
    id: "ee",
    displayName: "eweera",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fj",
    displayName: "fijiera"
}, {
    id: "fil",
    displayName: "tagaloga",
    nativeDisplayName: "Filipino"
}, {
    id: "fr",
    displayName: "frantsesa",
    nativeDisplayName: "français"
}, {
    id: "fo",
    displayName: "faroera",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "Ga"
}, {
    id: "ga",
    displayName: "gaelikoa",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "manxera",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "gagauzera"
}, {
    id: "gl",
    displayName: "galiziera",
    nativeDisplayName: "galego"
}, {
    id: "ki",
    displayName: "kikuyuera",
    nativeDisplayName: "Gikuyu"
}, {
    id: "gn",
    displayName: "guaraniera"
}, {
    id: "gd",
    displayName: "eskoziako gaelikoa",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "ht",
    displayName: "haitiera"
}, {
    id: "ha",
    displayName: "hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "sma",
    displayName: "hegoaldeko samiera"
}, {
    id: "st",
    displayName: "hegoaldeko sothoera"
}, {
    id: "bez",
    displayName: "benera",
    nativeDisplayName: "Hibena"
}, {
    id: "mul",
    displayName: "hizkuntza anitzak"
}, {
    id: "und",
    displayName: "hizkuntza ezezaguna"
}, {
    id: "hsb",
    displayName: "goi-sorabiera",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "kroaziera",
    nativeDisplayName: "hrvatski"
}, {
    id: "bem",
    displayName: "bembera",
    nativeDisplayName: "Ichibemba"
}, {
    id: "ig",
    displayName: "igboera",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "rundiera",
    nativeDisplayName: "Ikirundi"
}, {
    id: "id",
    displayName: "indonesiera",
    nativeDisplayName: "Indonesia"
}, {
    id: "ia",
    displayName: "Interlingua"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "iu",
    displayName: "inuitera"
}, {
    id: "sbp",
    displayName: "sanguera",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "iparraldeko ndebeleera",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "zuluera",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "italiera",
    nativeDisplayName: "italiano"
}, {
    id: "jv",
    displayName: "javera"
}, {
    id: "dyo",
    displayName: "fonyi jolera",
    nativeDisplayName: "joola"
}, {
    id: "kea",
    displayName: "Cabo Verdeko kreola",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kl",
    displayName: "kalaallisutera",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kalenjinera",
    nativeDisplayName: "Kalenjin"
}, {
    id: "kw",
    displayName: "kornubiera",
    nativeDisplayName: "kernewek"
}, {
    id: "naq",
    displayName: "namera",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "rof",
    displayName: "romboera",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kambera",
    nativeDisplayName: "Kikamba"
}, {
    id: "kg",
    displayName: "Kikongoa"
}, {
    id: "jmc",
    displayName: "machamera",
    nativeDisplayName: "Kimachame"
}, {
    id: "rw",
    displayName: "kinyaruanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asua",
    nativeDisplayName: "Kipare"
}, {
    id: "rwk",
    displayName: "rwaera",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "samburuera",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "shambalera",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "swahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "Kongoko swahilia",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "taitera",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "tesoera",
    nativeDisplayName: "Kiteso"
}, {
    id: "tlh",
    displayName: "Klingonera"
}, {
    id: "koi",
    displayName: "komi-permyakera"
}, {
    id: "co",
    displayName: "korsikera"
}, {
    id: "khq",
    displayName: "koyra chiiniera",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "koyraboro sennia",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "mfe",
    displayName: "Mauritaniako kreolera",
    nativeDisplayName: "kreol morisien"
}, {
    id: "ku",
    displayName: "kurduera"
}, {
    id: "nmg",
    displayName: "kwasiera",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "vunjoa",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ebu",
    displayName: "embua",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "meruera",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "langiera",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "quc",
    displayName: "k’iche’ra"
}, {
    id: "lkt",
    displayName: "lakotera",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "la",
    displayName: "latina"
}, {
    id: "lv",
    displayName: "letoniera",
    nativeDisplayName: "latviešu"
}, {
    id: "to",
    displayName: "tongera",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "lt",
    displayName: "lituaniera",
    nativeDisplayName: "lietuvių"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "loz",
    displayName: "Loziera"
}, {
    id: "lua",
    displayName: "Luba-lulua"
}, {
    id: "lg",
    displayName: "gandera",
    nativeDisplayName: "Luganda"
}, {
    id: "smj",
    displayName: "Lule samiera"
}, {
    id: "luy",
    displayName: "luhyera",
    nativeDisplayName: "Luluhia"
}, {
    id: "lb",
    displayName: "luxenburgera",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "masaiera",
    nativeDisplayName: "Maa"
}, {
    id: "hu",
    displayName: "hungariera",
    nativeDisplayName: "magyar"
}, {
    id: "mgh",
    displayName: "makhuwa-meettoera",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "malagasyera",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "maltera",
    nativeDisplayName: "Malti"
}, {
    id: "mi",
    displayName: "maoriera"
}, {
    id: "arn",
    displayName: "maputxea"
}, {
    id: "mgo",
    displayName: "metera",
    nativeDisplayName: "metaʼ"
}, {
    id: "moh",
    displayName: "mohawkera"
}, {
    id: "mua",
    displayName: "mudangera",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "jgo",
    displayName: "ngomba",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "nl",
    displayName: "nederlandera",
    nativeDisplayName: "Nederlands"
}, {
    id: "nb",
    displayName: "bokmala (Norvegia)",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "norvegiera"
}, {
    id: "ny",
    displayName: "nyanja"
}, {
    id: "nn",
    displayName: "nynorsk norvegiera",
    nativeDisplayName: "nynorsk"
}, {
    id: "nqo",
    displayName: "n’koera"
}, {
    id: "oc",
    displayName: "Okzitaniera"
}, {
    id: "xog",
    displayName: "sogera",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "oromoera",
    nativeDisplayName: "Oromoo"
}, {
    id: "uz",
    displayName: "uzbekera",
    nativeDisplayName: "o‘zbek"
}, {
    id: "nso",
    displayName: "pediera"
}, {
    id: "pl",
    displayName: "poloniera",
    nativeDisplayName: "polski"
}, {
    id: "pt",
    displayName: "portugesa",
    nativeDisplayName: "português"
}, {
    id: "pt_pt",
    displayName: "portugesa (Europa)",
    nativeDisplayName: "português europeu"
}, {
    id: "ksf",
    displayName: "bafiera",
    nativeDisplayName: "rikpa"
}, {
    id: "ro",
    displayName: "errumaniera",
    nativeDisplayName: "română"
}, {
    id: "cgg",
    displayName: "chigera",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "erromantxera",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "quechuera",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "ankolera",
    nativeDisplayName: "Runyankore"
}, {
    id: "sm",
    displayName: "samoera"
}, {
    id: "sa",
    displayName: "sanskritoa"
}, {
    id: "de_ch",
    displayName: "aleman garaia (Suitza)",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "alemana (Suitza)",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "seh",
    displayName: "senera",
    nativeDisplayName: "sena"
}, {
    id: "sh",
    displayName: "serbokroaziera"
}, {
    id: "sq",
    displayName: "albaniera",
    nativeDisplayName: "shqip"
}, {
    id: "sd",
    displayName: "sindhia"
}, {
    id: "sms",
    displayName: "Skolt samiera"
}, {
    id: "sk",
    displayName: "eslovakiera",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "esloveniera",
    nativeDisplayName: "slovenščina"
}, {
    id: "so",
    displayName: "somaliera",
    nativeDisplayName: "Soomaali"
}, {
    id: "su",
    displayName: "sundanera"
}, {
    id: "fi",
    displayName: "finlandiera",
    nativeDisplayName: "suomi"
}, {
    id: "sv",
    displayName: "suediera",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "swatiera"
}, {
    id: "sg",
    displayName: "sangoera",
    nativeDisplayName: "Sängö"
}, {
    id: "tl",
    displayName: "tagalog"
}, {
    id: "ty",
    displayName: "tahitiera"
}, {
    id: "tg",
    displayName: "tajikistanera"
}, {
    id: "tzm",
    displayName: "Maroko erdialdeko tamazighta",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "kabilera",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "twq",
    displayName: "tasawaqa",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "tt",
    displayName: "tatarera"
}, {
    id: "tet",
    displayName: "tetuma"
}, {
    id: "nus",
    displayName: "nuerera",
    nativeDisplayName: "Thok Nath"
}, {
    id: "vi",
    displayName: "vietnamera",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tpi",
    displayName: "tok pisina"
}, {
    id: "lu",
    displayName: "luba-katangera",
    nativeDisplayName: "Tshiluba"
}, {
    id: "ts",
    displayName: "tsongera"
}, {
    id: "tn",
    displayName: "tswanera"
}, {
    id: "tum",
    displayName: "Tumbukera"
}, {
    id: "tw",
    displayName: "twia"
}, {
    id: "tk",
    displayName: "turkmeniera",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "turkiera",
    nativeDisplayName: "Türkçe"
}, {
    id: "ve",
    displayName: "vendera"
}, {
    id: "nl_be",
    displayName: "flandriera",
    nativeDisplayName: "Vlaams"
}, {
    id: "fy",
    displayName: "frisiera",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "wolofera"
}, {
    id: "xh",
    displayName: "xhosera"
}, {
    id: "dje",
    displayName: "zarmera",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "yo",
    displayName: "yorubera",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islandiera",
    nativeDisplayName: "íslenska"
}, {
    id: "cs",
    displayName: "txekiera",
    nativeDisplayName: "čeština"
}, {
    id: "haw",
    displayName: "hawaiiera",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "greziera",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "bielorrusiera",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bulgariera",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "osetiera",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "kirgizera",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "mazedoniera",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongoliera",
    nativeDisplayName: "монгол"
}, {
    id: "ru",
    displayName: "errusiera",
    nativeDisplayName: "русский"
}, {
    id: "sr",
    displayName: "serbiera",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ukrainera",
    nativeDisplayName: "українська"
}, {
    id: "kk",
    displayName: "kazakhera",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armeniera",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "Jiddisha",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "hebreera",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uigurrera",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdua",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "arabiera",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "arabiera moderno estandarra",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "persiera",
    nativeDisplayName: "فارسی"
}, {
    id: "ps",
    displayName: "paxtuera",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "soraniera",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "kashmirera",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkaniera",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepalera",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodoera",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marathera",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindia",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "assamera",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengalera",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "punjabera",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gujaratera",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "oriyera",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamilera",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "teluguera",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannadera",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malayalamera",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "sinhala",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "thailandiera",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "laosera",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibetera",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "burmatarra",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "georgiera",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigriñera",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amharera",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "khemerera",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "tamazight estandarra",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "tachelhita",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "txinera",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "japoniera",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "txinera soildua",
    nativeDisplayName: "简体中文"
}, {
    id: "zh_hant",
    displayName: "txinera tradizionala",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "sichuan yia",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vaiera",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "txerokiera",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "koreera",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Arab",
    displayName: "arabiarra"
}, {
    id: "Armn",
    displayName: "armeniarra"
}, {
    id: "Beng",
    displayName: "bengaliarra"
}, {
    id: "Mymr",
    displayName: "birmaniarra"
}, {
    id: "Bopo",
    displayName: "bopomofoa"
}, {
    id: "Brai",
    displayName: "braillea"
}, {
    id: "Deva",
    displayName: "devanagaria"
}, {
    id: "Ethi",
    displayName: "etiopiarra"
}, {
    id: "Geor",
    displayName: "georgiarra"
}, {
    id: "Grek",
    displayName: "greziarra"
}, {
    id: "Gujr",
    displayName: "gujaratera"
}, {
    id: "Guru",
    displayName: "gurmukhia"
}, {
    id: "Hang",
    displayName: "hangula"
}, {
    id: "Hebr",
    displayName: "hebreera"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Zxxx",
    displayName: "idatzi gabea"
}, {
    id: "Zzzz",
    displayName: "idazkera ezezaguna"
}, {
    id: "Hani",
    displayName: "idazkera txinatarra"
}, {
    id: "Zsym",
    displayName: "ikurrak"
}, {
    id: "Jpan",
    displayName: "japoniarra"
}, {
    id: "Knda",
    displayName: "kanadarra"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Khmr",
    displayName: "khemerarra"
}, {
    id: "Kore",
    displayName: "korearra"
}, {
    id: "Laoo",
    displayName: "laosarra"
}, {
    id: "Latn",
    displayName: "latina"
}, {
    id: "Mlym",
    displayName: "malayalamera"
}, {
    id: "Mong",
    displayName: "mongoliarra"
}, {
    id: "Zyyy",
    displayName: "ohikoa"
}, {
    id: "Orya",
    displayName: "oriyarra"
}, {
    id: "Sinh",
    displayName: "sinhala"
}, {
    id: "Hans",
    displayName: "sinplifikatua"
}, {
    id: "Taml",
    displayName: "tamilarra"
}, {
    id: "Telu",
    displayName: "teluguarra"
}, {
    id: "Thaa",
    displayName: "thaana"
}, {
    id: "Thai",
    displayName: "thailandiarra"
}, {
    id: "Tibt",
    displayName: "tibetarra"
}, {
    id: "Hant",
    displayName: "tradizionala"
}, {
    id: "Cyrl",
    displayName: "zirilikoa"
} ];

inter.currencies = [ {
    id: "USD",
    displayName: "AEBetako dolarra",
    symbol: "US$",
    one: "AEBetako dolar",
    other: "AEBetako dolar"
}, {
    id: "AFN",
    displayName: "Afganistango afghania",
    symbol: "AFN",
    one: "Afganistango afghani",
    other: "Afganistango afghani"
}, {
    id: "XOF",
    displayName: "Afrika ekialdeko frankoa BCEAO",
    symbol: "CFA",
    one: "Afrika ekialdeko franko BCEAO",
    other: "Afrika ekialdeko franko BCEAO"
}, {
    id: "XAF",
    displayName: "Afrika erdialdeko frankoa BEAC",
    symbol: "FCFA",
    one: "Afrika erdialdeko franko BEAC",
    other: "Afrika erdialdeko franko BEAC"
}, {
    id: "ALL",
    displayName: "Albaniako leka",
    symbol: "ALL",
    one: "Albaniako lek",
    other: "Albaniako lek"
}, {
    id: "DZD",
    displayName: "Algeriako dinarra",
    symbol: "DZD",
    one: "Algeriako dinar",
    other: "Algeriako dinar"
}, {
    id: "AOA",
    displayName: "Angolako kwanza",
    symbol: "AOA",
    one: "Angolako kwanza",
    other: "Angolako kwanza"
}, {
    id: "AED",
    displayName: "Arabiar Emirerri Batuetako dirhama",
    symbol: "AED",
    one: "Arabiar Emirerri Batuetako dirham",
    other: "Arabiar Emirerri Batuetako dirham"
}, {
    id: "ARS",
    displayName: "Argentinako pesoa",
    symbol: "ARS",
    one: "Argentinako peso",
    other: "Argentinako peso"
}, {
    id: "AMD",
    displayName: "Armeniako drama",
    symbol: "AMD",
    one: "Armeniako dram",
    other: "Armeniako dram"
}, {
    id: "AWG",
    displayName: "Arubeko florina",
    symbol: "AWG",
    one: "Arubeko florin",
    other: "Arubeko florin"
}, {
    id: "AUD",
    displayName: "Australiako dolarra",
    symbol: "A$",
    one: "Australiako dolar",
    other: "Australiako dolar"
}, {
    id: "AZN",
    displayName: "Azerbaijango manata",
    symbol: "AZN",
    one: "Azerbaijango manat",
    other: "Azerbaijango manat"
}, {
    id: "BSD",
    displayName: "Bahametako dolarra",
    symbol: "BSD",
    one: "Bahametako dolar",
    other: "Bahametako dolar"
}, {
    id: "BHD",
    displayName: "Bahraingo dinarra",
    symbol: "BHD",
    one: "Bahraingo dinar",
    other: "Bahraingo dinar"
}, {
    id: "BDT",
    displayName: "Bangladesheko taka",
    symbol: "BDT",
    one: "Bangladesheko taka",
    other: "Bangladesheko taka"
}, {
    id: "BBD",
    displayName: "Barbadosetako dolarra",
    symbol: "BBD",
    one: "Barbadosetako dolar",
    other: "Barbadosetako dolar"
}, {
    id: "BZD",
    displayName: "Belizeko dolarra",
    symbol: "BZD",
    one: "Belizeko dolar",
    other: "Belizeko dolar"
}, {
    id: "BMD",
    displayName: "Bermudetako dolarra",
    symbol: "BMD",
    one: "Bermudetako dolar",
    other: "Bermudetako dolar"
}, {
    id: "BTN",
    displayName: "Bhutango ngultruma",
    symbol: "BTN",
    one: "Bhutango ngultrum",
    other: "Bhutango ngultrum"
}, {
    id: "BYR",
    displayName: "Bielorrusiako errubloa",
    symbol: "BYR",
    one: "Bielorrusiako errublo",
    other: "Bielorrusiako errublo"
}, {
    id: "BOB",
    displayName: "Boliviako bolivianoa",
    symbol: "BOB",
    one: "Boliviako boliviano",
    other: "Boliviako boliviano"
}, {
    id: "BAM",
    displayName: "Bosnia-Herzegovinako marko trukakorra",
    symbol: "BAM",
    one: "Bosnia-Herzegovinako marko trukakor",
    other: "Bosnia-Herzegovinako marko trukakor"
}, {
    id: "BWP",
    displayName: "Bosniako pula",
    symbol: "BWP",
    one: "Bosniako pula",
    other: "Bosniako pula"
}, {
    id: "BRL",
    displayName: "Brasilgo erreala",
    symbol: "R$",
    one: "Brasilgo erreal",
    other: "Brasilgo erreal"
}, {
    id: "BND",
    displayName: "Bruneiko dolarra",
    symbol: "BND",
    one: "Bruneiko dolar",
    other: "Bruneiko dolar"
}, {
    id: "BGN",
    displayName: "Bulgariako leva",
    symbol: "BGN",
    one: "Bulgariako lev",
    other: "Bulgariako lev"
}, {
    id: "BIF",
    displayName: "Burundiko frankoa",
    symbol: "BIF",
    one: "Burundiko franko",
    other: "Burundiko franko"
}, {
    id: "XPF",
    displayName: "CFP frankoa",
    symbol: "CFPF",
    one: "CFP franko",
    other: "CFP franko"
}, {
    id: "CVE",
    displayName: "Cabo Verdeko ezkutua",
    symbol: "CVE",
    one: "Cabo Verdeko ezkutu",
    other: "Cabo Verdeko ezkutu"
}, {
    id: "CRC",
    displayName: "Costa Ricako colona",
    symbol: "CRC",
    one: "Costa Ricako colon",
    other: "Costa Ricako colon"
}, {
    id: "DKK",
    displayName: "Danimarkako koroa",
    symbol: "DKK",
    one: "Danimarkako koroa",
    other: "Danimarkako koroa"
}, {
    id: "DJF",
    displayName: "Djibouteko frankoa",
    symbol: "DJF",
    one: "Djibouteko franko",
    other: "Djibouteko franko"
}, {
    id: "DOP",
    displayName: "Dominikar Errepublikako pesoa",
    symbol: "DOP",
    one: "Dominikar Errepublikako peso",
    other: "Dominikar Errepublikako peso"
}, {
    id: "EGP",
    displayName: "Egiptoko libera",
    symbol: "EGP",
    one: "Egiptoko libera",
    other: "Egiptoko libera"
}, {
    id: "ERN",
    displayName: "Eritreako nakfa",
    symbol: "ERN",
    one: "Eritreako nakfa",
    other: "Eritreako nakfa"
}, {
    id: "RON",
    displayName: "Errumaniako leua",
    symbol: "RON",
    one: "Errumaniako leu",
    other: "Errumaniako leu"
}, {
    id: "RUB",
    displayName: "Errusiako errubloa",
    symbol: "RUB",
    one: "Errusiako errublo",
    other: "Errusiako errublo"
}, {
    id: "ETB",
    displayName: "Etiopiako birra",
    symbol: "ETB",
    one: "Etiopiako birra",
    other: "Etiopiako birra"
}, {
    id: "EUR",
    displayName: "Euroa",
    symbol: "€",
    one: "euro",
    other: "euro"
}, {
    id: "FKP",
    displayName: "Falkland uharteetako libera",
    symbol: "FKP",
    one: "Falkland uharteetako libera",
    other: "Falkland uharteetako libera"
}, {
    id: "FJD",
    displayName: "Fijiko dolarra",
    symbol: "FJD",
    one: "Fijiko dolar",
    other: "Fijiko dolar"
}, {
    id: "PHP",
    displayName: "Filipinetako pesoa",
    symbol: "PHP",
    one: "Filipinetako peso",
    other: "Filipinetako peso"
}, {
    id: "GMD",
    displayName: "Ganbiako dalasia",
    symbol: "GMD",
    one: "Ganbiako dalasi",
    other: "Ganbiako dalasi"
}, {
    id: "GEL",
    displayName: "Georgiako laria",
    symbol: "GEL",
    one: "Georgiako lari",
    other: "Georgiako lari"
}, {
    id: "GHS",
    displayName: "Ghanako cedia",
    symbol: "GHS",
    one: "Ghanako cedi",
    other: "Ghanako cedi"
}, {
    id: "GIP",
    displayName: "Gibraltarreko libera",
    symbol: "GIP",
    one: "Gibraltarreko libera",
    other: "Gibraltarreko libera"
}, {
    id: "GNF",
    displayName: "Gineako frankoa",
    symbol: "GNF",
    one: "Gineako franko",
    other: "Gineako franko"
}, {
    id: "GTQ",
    displayName: "Guatemalako quetzala",
    symbol: "GTQ",
    one: "Guatemalako quetzal",
    other: "Guatemalako quetzal"
}, {
    id: "GYD",
    displayName: "Guyanako dolarra",
    symbol: "GYD",
    one: "Guyanako dolar",
    other: "Guyanako dolar"
}, {
    id: "HTG",
    displayName: "Haitiko gourdea",
    symbol: "HTG",
    one: "Haitiko gourde",
    other: "Haitiko gourde"
}, {
    id: "KRW",
    displayName: "Hego Koreako wona",
    symbol: "₩",
    one: "Hego Koreako won",
    other: "Hego Koreako won"
}, {
    id: "SSP",
    displayName: "Hego Sudango libera",
    symbol: "SSP",
    one: "Hego Sudango libera",
    other: "Hego Sudango libera"
}, {
    id: "ZAR",
    displayName: "Hegoafrikako randa",
    symbol: "ZAR",
    one: "Hegoafrikako randa",
    other: "Hegoafrikako randa"
}, {
    id: "ANG",
    displayName: "Holandarren Antilletako guilderra",
    symbol: "ANG",
    one: "Holandarren Antilletako guilder",
    other: "Holandarren Antilletako guilder"
}, {
    id: "HNL",
    displayName: "Hondurasko lempira",
    symbol: "HNL",
    one: "Hondurasko lempira",
    other: "Hondurasko lempira"
}, {
    id: "HKD",
    displayName: "Hong Kongeko dolarra",
    symbol: "HK$",
    one: "Hong Kongeko dolar",
    other: "Hong Kongeko dolar"
}, {
    id: "HUF",
    displayName: "Hungariako florina",
    symbol: "HUF",
    one: "Hungariako florin",
    other: "Hungariako florin"
}, {
    id: "INR",
    displayName: "Indiako errupia",
    symbol: "₹",
    one: "Indiako errupia",
    other: "Indiako errupia"
}, {
    id: "IDR",
    displayName: "Indonesiako errupia",
    symbol: "IDR",
    one: "Indonesiako errupia",
    other: "Indonesiako errupia"
}, {
    id: "KPW",
    displayName: "Ipar Koreako wona",
    symbol: "KPW",
    one: "Ipar Koreako won",
    other: "Ipar Koreako won"
}, {
    id: "IQD",
    displayName: "Irakeko dinarra",
    symbol: "IQD",
    one: "Irakeko dinar",
    other: "Irakeko dinar"
}, {
    id: "IRR",
    displayName: "Irango riala",
    symbol: "IRR",
    one: "Irango rial",
    other: "Irango rial"
}, {
    id: "ISK",
    displayName: "Islandiako koroa",
    symbol: "ISK",
    one: "Islandiako koroa",
    other: "Islandiako koroa"
}, {
    id: "ILS",
    displayName: "Israeleko sheqel berria",
    symbol: "₪",
    one: "Israeleko sheqel berri",
    other: "Israeleko sheqel berri"
}, {
    id: "JMD",
    displayName: "Jamaikako dolarra",
    symbol: "JMD",
    one: "Jamaikako dolar",
    other: "Jamaikako dolar"
}, {
    id: "JPY",
    displayName: "Japoniako yena",
    symbol: "JP¥",
    one: "Japoniako yen",
    other: "Japoniako yen"
}, {
    id: "JOD",
    displayName: "Jordaniako dinarra",
    symbol: "JOD",
    one: "Jordaniako dinar",
    other: "Jordaniako dinar"
}, {
    id: "KYD",
    displayName: "Kaiman uharteetako dolarra",
    symbol: "KYD",
    one: "Kaiman uharteetako dolar",
    other: "Kaiman uharteetako dolar"
}, {
    id: "CAD",
    displayName: "Kanadako dolarra",
    symbol: "CA$",
    one: "Kanadako dolar",
    other: "Kanadako dolar"
}, {
    id: "KHR",
    displayName: "Kanbodiako riela",
    symbol: "KHR",
    one: "Kanbodiako riel",
    other: "Kanbodiako riel"
}, {
    id: "XCD",
    displayName: "Karibe ekialdeko dolarra",
    symbol: "EC$",
    one: "Karibe ekialdeko dolar",
    other: "Karibe ekialdeko dolar"
}, {
    id: "KZT",
    displayName: "Kazakhstango tengea",
    symbol: "KZT",
    one: "Kazakhstango tenge",
    other: "Kazakhstango tenge"
}, {
    id: "KES",
    displayName: "Kenyako txelina",
    symbol: "KES",
    one: "Kenyako txelin",
    other: "Kenyako txelin"
}, {
    id: "KGS",
    displayName: "Kirgizistango soma",
    symbol: "KGS",
    one: "Kirgizistango som",
    other: "Kirgizistango som"
}, {
    id: "COP",
    displayName: "Kolonbiako pesoa",
    symbol: "COP",
    one: "Kolonbiako peso",
    other: "Kolonbiako peso"
}, {
    id: "KMF",
    displayName: "Komoreetako frankoa",
    symbol: "KMF",
    one: "Komoreetako franko",
    other: "Komoreetako franko"
}, {
    id: "CDF",
    displayName: "Kongoko frankoa",
    symbol: "CDF",
    one: "Kongoko franko",
    other: "Kongoko franko"
}, {
    id: "HRK",
    displayName: "Kroaziako kuna",
    symbol: "HRK",
    one: "Kroaziako kuna",
    other: "Kroaziako kuna"
}, {
    id: "CUC",
    displayName: "Kubako peso trukakorra",
    symbol: "CUC",
    one: "Kubako peso trukakor",
    other: "Kubako peso trukakor"
}, {
    id: "CUP",
    displayName: "Kubako pesoa",
    symbol: "CUP",
    one: "Kubako peso",
    other: "Kubako peso"
}, {
    id: "KWD",
    displayName: "Kuwaiteko dinarra",
    symbol: "KWD",
    one: "Kuwaiteko dinar",
    other: "Kuwaiteko dinar"
}, {
    id: "LAK",
    displayName: "Laoseko kipa",
    symbol: "LAK",
    one: "Laoseko kip",
    other: "Laoseko kip"
}, {
    id: "LSL",
    displayName: "Lesothoko lotia"
}, {
    id: "LVL",
    displayName: "Letoniako latsa",
    symbol: "LVL",
    one: "Letoniako lats",
    other: "Letoniako lats"
}, {
    id: "LBP",
    displayName: "Libanoko libera",
    symbol: "LBP",
    one: "Libanoko libera",
    other: "Libanoko libera"
}, {
    id: "GBP",
    displayName: "Libera esterlina",
    symbol: "£",
    one: "libera esterlina",
    other: "libera esterlina"
}, {
    id: "LRD",
    displayName: "Liberiako dolarra",
    symbol: "LRD",
    one: "Liberiako dolar",
    other: "Liberiako dolar"
}, {
    id: "LYD",
    displayName: "Libiako dinarra",
    symbol: "LYD",
    one: "Libiako dinar",
    other: "Libiako dinar"
}, {
    id: "LTL",
    displayName: "Lituaniako litasa",
    symbol: "LTL",
    one: "Lituaniako litas",
    other: "Lituaniako litas"
}, {
    id: "MOP",
    displayName: "Macanako pataca",
    symbol: "MOP",
    one: "Macanako pataca",
    other: "Macanako pataca"
}, {
    id: "MGA",
    displayName: "Madagaskarreko ariarya",
    symbol: "MGA",
    one: "Madagaskarreko ariary",
    other: "Madagaskarreko ariary"
}, {
    id: "MWK",
    displayName: "Malawiko kwacha",
    symbol: "MWK",
    one: "Malawiko kwacha",
    other: "Malawiko kwacha"
}, {
    id: "MYR",
    displayName: "Malaysiako ringgita",
    symbol: "MYR",
    one: "Malaysiako ringgit",
    other: "Malaysiako ringgit"
}, {
    id: "MVR",
    displayName: "Maldivetako rufiyaa",
    symbol: "MVR",
    one: "Maldivetako rufiyaa",
    other: "Maldivetako rufiyaa"
}, {
    id: "MAD",
    displayName: "Marokoko dirhama",
    symbol: "MAD",
    one: "Marokoko dirham",
    other: "Marokoko dirham"
}, {
    id: "MRO",
    displayName: "Mauritaniako ouguiya",
    symbol: "MRO",
    one: "Mauritaniako ouguiya",
    other: "Mauritaniako ouguiya"
}, {
    id: "MUR",
    displayName: "Maurizio uharteetako errupia",
    symbol: "MUR",
    one: "Maurizio uharteetako errupia",
    other: "Maurizio uharteetako errupia"
}, {
    id: "MKD",
    displayName: "Mazedoniako denara",
    symbol: "MKD",
    one: "Mazedoniako dinar",
    other: "Mazedoniako dinar"
}, {
    id: "MXN",
    displayName: "Mexikoko pesoa",
    symbol: "MX$",
    one: "Mexikoko peso",
    other: "Mexikoko peso"
}, {
    id: "MDL",
    displayName: "Moldaviako leua",
    symbol: "MDL",
    one: "Moldaviako leu",
    other: "Moldaviako leu"
}, {
    id: "XXX",
    displayName: "Moneta ezezaguna",
    one: "(moneta ezezaguna)",
    other: "(moneta ezezaguna)"
}, {
    id: "MNT",
    displayName: "Mongoliako tugrika",
    symbol: "MNT",
    one: "Mongoliako tugrik",
    other: "Mongoliako tugrik"
}, {
    id: "MZN",
    displayName: "Mozambikeko metikala",
    symbol: "MZN",
    one: "Mozambikeko metikal",
    other: "Mozambikeko metikal"
}, {
    id: "MMK",
    displayName: "Myanmarreko kyata",
    symbol: "MMK",
    one: "Myanmarreko kyat",
    other: "Myanmarreko kyat"
}, {
    id: "NAD",
    displayName: "Namibiako dolarra",
    symbol: "NAD",
    one: "Namibiako dolar",
    other: "Namibiako dolar"
}, {
    id: "NPR",
    displayName: "Nepalgo errupia",
    symbol: "NPR",
    one: "Nepalgo errupia",
    other: "Nepalgo errupia"
}, {
    id: "NGN",
    displayName: "Nigeriako naira",
    symbol: "NGN",
    one: "Nigeriako naira",
    other: "Nigeriako naira"
}, {
    id: "NIO",
    displayName: "Nikaraguako cordoba",
    symbol: "NIO",
    one: "Nikaraguako cordoba",
    other: "Nikaraguako cordoba"
}, {
    id: "NOK",
    displayName: "Norvegiako koroa",
    symbol: "NOK",
    one: "Norvegiako koroa",
    other: "Norvegiako koroa"
}, {
    id: "OMR",
    displayName: "Omango riala",
    symbol: "OMR",
    one: "Omango rial",
    other: "Omango rial"
}, {
    id: "PKR",
    displayName: "Pakistango errupia",
    symbol: "PKR",
    one: "Pakistango errupia",
    other: "Pakistango errupia"
}, {
    id: "PAB",
    displayName: "Panamako balboa",
    symbol: "PAB",
    one: "Panamako balboa",
    other: "Panamako balboa"
}, {
    id: "PGK",
    displayName: "Papua Ginea Berriko kina",
    symbol: "PGK",
    one: "Papua Ginea Berriko kina",
    other: "Papua Ginea Berriko kina"
}, {
    id: "PYG",
    displayName: "Paraguaiko guarania",
    symbol: "PYG",
    one: "Paraguaiko guarani",
    other: "Paraguaiko guarani"
}, {
    id: "PEN",
    displayName: "Peruko sol berria",
    symbol: "PEN",
    one: "Peruko sol berri",
    other: "Peruko sol berri"
}, {
    id: "PLN",
    displayName: "Poloniako zlotya",
    symbol: "PLN",
    one: "Poloniako zloty",
    other: "Poloniako zloty"
}, {
    id: "QAR",
    displayName: "Qatarreko riala",
    symbol: "QAR",
    one: "Qatarreko rial",
    other: "Qatarreko rial"
}, {
    id: "RWF",
    displayName: "Ruandako frankoa",
    symbol: "RWF",
    one: "Ruandako franko",
    other: "Ruandako franko"
}, {
    id: "SBD",
    displayName: "Salomon uharteetako dolarra",
    symbol: "SBD",
    one: "Salomon uharteetako dolar",
    other: "Salomon uharteetako dolar"
}, {
    id: "WST",
    displayName: "Samoko tala",
    symbol: "WST",
    one: "Samoko tala",
    other: "Samoko tala"
}, {
    id: "SHP",
    displayName: "Santa Helenako libera",
    symbol: "SHP",
    one: "Santa Helenako libera",
    other: "Santa Helenako libera"
}, {
    id: "STD",
    displayName: "Sao Tomeko eta Principeko dobra",
    symbol: "STD",
    one: "Sao Tomeko eta Principeko dobra",
    other: "Sao Tomeko eta Principeko dobra"
}, {
    id: "SAR",
    displayName: "Saudiko riala",
    symbol: "SAR",
    one: "Saudiko rial",
    other: "Saudiko rial"
}, {
    id: "RSD",
    displayName: "Serbiako dinarra",
    symbol: "RSD",
    one: "Serbiako dinar",
    other: "Serbiako dinar"
}, {
    id: "SCR",
    displayName: "Seychelleetako errupia",
    symbol: "SCR",
    one: "Seychelleetako errupia",
    other: "Seychelleetako errupia"
}, {
    id: "SLL",
    displayName: "Sierra Leonako leona",
    symbol: "SLL",
    one: "Sierra Leonako leona",
    other: "Sierra Leonako leona"
}, {
    id: "SGD",
    displayName: "Singapurreko dolarra",
    symbol: "SGD",
    one: "Singapurreko dolar",
    other: "Singapurreko dolar"
}, {
    id: "SYP",
    displayName: "Siriako libera",
    symbol: "SYP",
    one: "Siriako libera",
    other: "Siriako libera"
}, {
    id: "SOS",
    displayName: "Somaliako txelina",
    symbol: "SOS",
    one: "Somaliako txelin",
    other: "Somaliako txelin"
}, {
    id: "LKR",
    displayName: "Sri Lankako errupia",
    symbol: "LKR",
    one: "Sri Lankako errupia",
    other: "Sri Lankako errupia"
}, {
    id: "SDG",
    displayName: "Sudango libera",
    symbol: "SDG",
    one: "Sudango libera",
    other: "Sudango libera"
}, {
    id: "SEK",
    displayName: "Suediako koroa",
    symbol: "SEK",
    one: "Suediako koroa",
    other: "Suediako koroa"
}, {
    id: "CHF",
    displayName: "Suitzako frankoa",
    symbol: "CHF",
    one: "Suitzako franko",
    other: "Suitzako franko"
}, {
    id: "SRD",
    displayName: "Surinameko dolarra",
    symbol: "SRD",
    one: "Surinameko dolar",
    other: "Surinameko dolar"
}, {
    id: "SZL",
    displayName: "Swaziko lilangenia",
    symbol: "SZL",
    one: "Swaziko lilangeni",
    other: "Swaziko lilangeni"
}, {
    id: "TWD",
    displayName: "Taiwango dolar berria",
    symbol: "NT$",
    one: "Taiwango dolar berri",
    other: "Taiwango dolar berri"
}, {
    id: "TJS",
    displayName: "Tajikistango somonia",
    symbol: "TJS",
    one: "Tajikistango somoni",
    other: "Tajikistango somoni"
}, {
    id: "TZS",
    displayName: "Tanzaniako txelina",
    symbol: "TZS",
    one: "Tanzaniako txelin",
    other: "Tanzaniako txelin"
}, {
    id: "THB",
    displayName: "Thailandiako bahta",
    symbol: "฿",
    one: "Thailandiako baht",
    other: "Thailandiako baht"
}, {
    id: "TOP",
    displayName: "Tongako Paʻanga",
    symbol: "TOP",
    one: "Tongako Paʻanga",
    other: "Tongako Paʻanga"
}, {
    id: "TTD",
    displayName: "Trinidadeko eta Tobagoko dolarra",
    symbol: "TTD",
    one: "Trinidadeko eta Tobagoko dolar",
    other: "Trinidadeko eta Tobagoko dolar"
}, {
    id: "TND",
    displayName: "Tunisiako dinarra",
    symbol: "TND",
    one: "Tunisiako dinar",
    other: "Tunisiako dinar"
}, {
    id: "TRY",
    displayName: "Turkiako lira",
    symbol: "TRY",
    one: "Turkiako lira",
    other: "Turkiako lira"
}, {
    id: "TMT",
    displayName: "Turkmenistango manata",
    symbol: "TMT",
    one: "Turkmenistango manat",
    other: "Turkmenistango manat"
}, {
    id: "CZK",
    displayName: "Txekiar Errepublikako koroa",
    symbol: "CZK",
    one: "Txekiar Errepublikako koroa",
    other: "Txekiar Errepublikako koroa"
}, {
    id: "CLP",
    displayName: "Txileko pesoa",
    symbol: "CLP",
    one: "Txileko peso",
    other: "Txileko peso"
}, {
    id: "CNY",
    displayName: "Txinako yuana",
    symbol: "CN¥",
    one: "Txinako yuan",
    other: "Txinako yuan"
}, {
    id: "UGX",
    displayName: "Ugandako txelina",
    symbol: "UGX",
    one: "Ugandako txelin",
    other: "Ugandako txelin"
}, {
    id: "UAH",
    displayName: "Ukrainako hryvnia",
    symbol: "UAH",
    one: "Ukrainako hryvnia",
    other: "Ukrainako hryvnia"
}, {
    id: "UYU",
    displayName: "Uruguaiko pesoa",
    symbol: "UYU",
    one: "Uruguaiko peso",
    other: "Uruguaiko peso"
}, {
    id: "UZS",
    displayName: "Uzbekistango soma",
    symbol: "UZS",
    one: "Uzbekistango som",
    other: "Uzbekistango som"
}, {
    id: "VUV",
    displayName: "Vanuatuko vatua",
    symbol: "VUV",
    one: "Vanuatuko vatu",
    other: "Vanuatuko vatu"
}, {
    id: "VEF",
    displayName: "Venezuelako bolivarra",
    symbol: "VEF",
    one: "Venezuelako bolivar",
    other: "Venezuelako bolivar"
}, {
    id: "VND",
    displayName: "Vietnameko donga",
    symbol: "₫",
    one: "Vietnameko dong",
    other: "Vietnameko dong"
}, {
    id: "YER",
    displayName: "Yemengo riala",
    symbol: "YER",
    one: "Yemengo rial",
    other: "Yemengo rial"
}, {
    id: "ZMW",
    displayName: "Zambiako kwacha",
    symbol: "ZMW",
    one: "Zambiako kwacha",
    other: "Zambiako kwacha"
}, {
    id: "ZMK",
    displayName: "Zambiako kwacha (1968–2012)"
}, {
    id: "NZD",
    displayName: "Zeelanda Berriko dolarra",
    symbol: "NZ$",
    one: "Zeelanda Berriko dolar",
    other: "Zeelanda Berriko dolar"
} ];

module.exports = inter;