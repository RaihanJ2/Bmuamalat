function defaults(targetObj) {
    for (var i = 1; i < arguments.length; i += 1) {
        if (arguments[i] && typeof arguments[i] === "object") {
            for (var propertyName in arguments[i]) {
                if (typeof targetObj[propertyName] === "undefined") {
                    targetObj[propertyName] = arguments[i][propertyName];
                }
            }
        }
    }
    return targetObj;
}

var P = require("./root.js"), inter = defaults({
    renderers: {}
}, P);

var _c5je1 = [ "T1", "T2", "T3", "T4" ], _c5je2 = {
    displayName: "AM/PM"
}, _c5je3 = {
    all: {
        leap: "{0}bis"
    }
}, _c5je4 = {
    one: "0 ¤",
    other: "0 ¤"
}, _c5je5 = {
    one: "{0}°",
    other: "{0}°"
}, _c5je6 = {
    one: "{0}″",
    other: "{0}″"
}, _c5je7 = {
    one: "{0}s",
    other: "{0}s"
}, _c5je8 = {
    one: "00 ¤",
    other: "00 ¤"
}, _c5je9 = {
    a: "h a – h a",
    h: "h–h a"
}, _c5je10 = {
    one: "0 Mln",
    other: "0 Mln"
}, _c5je11 = {
    one: "0 Mld",
    other: "0 Mld"
}, _c5je12 = {
    one: "0 Bln",
    other: "0 Bln"
}, _c5je13 = {
    one: "000 ¤",
    other: "000 ¤"
}, _c5je14 = {
    displayName: "fuso orario"
}, _c5je15 = [ "Prima di R.O.C.", "Minguo" ], _c5je16 = {
    one: "{0} kt",
    other: "{0} kt"
}, _c5je17 = {
    one: "{0} °C",
    other: "{0} °C"
}, _c5je18 = {
    one: "{0}min",
    other: "{0}min"
}, _c5je19 = {
    one: "00 Mln",
    other: "00 Mln"
}, _c5je20 = {
    one: "00 Mld",
    other: "00 Mld"
}, _c5je21 = {
    one: "00 Bln",
    other: "00 Bln"
}, _c5je22 = {
    a: "h a – h a v",
    h: "h–h a v"
}, _c5je23 = [ "D", "L", "M", "M", "G", "V", "S" ], _c5je24 = {
    one: "0 mille",
    other: "0 mila"
}, _c5je25 = {
    one: "{0} bit",
    other: "{0} bit"
}, _c5je26 = {
    one: "00 mila",
    other: "00 mila"
}, _c5je27 = {
    one: "000 Mln",
    other: "000 Mln"
}, _c5je28 = {
    one: "000 Mld",
    other: "000 Mld"
}, _c5je29 = {
    one: "000 Bln",
    other: "000 Bln"
}, _c5je30 = {
    one: "0 Mio ¤",
    other: "0 Mio ¤"
}, _c5je31 = {
    one: "0 Mrd ¤",
    other: "0 Mrd ¤"
}, _c5je32 = {
    one: "0 Bln ¤",
    other: "0 Bln ¤"
}, _c5je33 = {
    d: "MMM d–d",
    M: "MMM d – MMM d"
}, _c5je34 = {
    wide: [ "AH" ],
    abbreviated: [ "AH" ]
}, _c5je35 = {
    one: "{0} byte",
    other: "{0} byte"
}, _c5je36 = {
    one: "{0} anno",
    other: "{0} anni"
}, _c5je37 = {
    one: "{0} mese",
    other: "{0} mesi"
}, _c5je38 = {
    one: "000 mila",
    other: "000 mila"
}, _c5je39 = {
    one: "00 Mio ¤",
    other: "00 Mio ¤"
}, _c5je40 = {
    one: "00 Mrd ¤",
    other: "00 Mrd ¤"
}, _c5je41 = {
    one: "00 Bln ¤",
    other: "00 Bln ¤"
}, _c5je42 = {
    H: "HH:mm–HH:mm",
    m: "HH:mm–HH:mm"
}, _c5je43 = {
    one: "{0} h fa",
    other: "{0} h fa"
}, _c5je44 = {
    one: "{0} s fa",
    other: "{0} s fa"
}, _c5je45 = {
    M: "y-MM – y-MM",
    y: "y-MM – y-MM"
}, _c5je46 = {
    M: "U MMM–MMM",
    y: "U MMM – U MMM"
}, _c5je47 = {
    one: "{0} g fa",
    other: "{0} gg fa"
}, _c5je48 = {
    one: "0 milione",
    other: "0 milioni"
}, _c5je49 = {
    one: "000 Mio ¤",
    other: "000 Mio ¤"
}, _c5je50 = {
    one: "000 Mrd ¤",
    other: "000 Mrd ¤"
}, _c5je51 = {
    one: "000 Bln ¤",
    other: "000 Bln ¤"
}, _c5je52 = {
    d: "dd–dd MMM",
    M: "dd MMM – dd MMM"
}, _c5je53 = {
    one: "{0} h. fa",
    other: "{0} h. fa"
}, _c5je54 = {
    one: "tra {0} h",
    other: "tra {0} h"
}, _c5je55 = {
    one: "tra {0} s",
    other: "tra {0} s"
}, _c5je56 = {
    one: "tra {0} g",
    other: "tra {0} gg"
}, _c5je57 = {
    one: "{0} carato",
    other: "{0} carati"
}, _c5je58 = {
    one: "{0} giorno",
    other: "{0} giorni"
}, _c5je59 = {
    one: "00 milioni",
    other: "00 milioni"
}, _c5je60 = {
    one: "0 miliardo",
    other: "0 miliardi"
}, _c5je61 = {
    H: "HH:mm–HH:mm v",
    m: "HH:mm–HH:mm v"
}, _c5je62 = {
    d: "dd/MM – dd/MM",
    M: "dd/MM – dd/MM"
}, _c5je63 = {
    M: "MM/y – MM/y G",
    y: "MM/y – MM/y G"
}, _c5je64 = {
    M: "MMM–MMM y G",
    y: "MMM y – MMM y G"
}, _c5je65 = {
    one: "{0} ora fa",
    other: "{0} ore fa"
}, _c5je66 = {
    one: "tra {0} h.",
    other: "tra {0} h."
}, _c5je67 = {
    one: "{0} min fa",
    other: "{0} min fa"
}, _c5je68 = {
    d: "MM-dd – MM-dd",
    M: "MM-dd – MM-dd"
}, _c5je69 = {
    M: "U MMMM–MMMM",
    y: "U MMMM – U MMMM"
}, _c5je70 = {
    displayName: "giorno della settimana"
}, _c5je71 = {
    one: "{0} caloria",
    other: "{0} calorie"
}, _c5je72 = {
    one: "{0} L/100km",
    other: "{0} L/100km"
}, _c5je73 = {
    one: "000 milioni",
    other: "000 milioni"
}, _c5je74 = {
    one: "00 miliardi",
    other: "00 miliardi"
}, _c5je75 = {
    one: "{0} anno fa",
    other: "{0} anni fa"
}, _c5je76 = {
    one: "{0} mese fa",
    other: "{0} mesi fa"
}, _c5je77 = {
    one: "tra {0} ora",
    other: "tra {0} ore"
}, _c5je78 = {
    one: "{0} min. fa",
    other: "{0} min. fa"
}, _c5je79 = {
    one: "tra {0} min",
    other: "tra {0} min"
}, _c5je80 = {
    one: "{0} sec. fa",
    other: "{0} sec. fa"
}, _c5je81 = {
    one: "000 miliardi",
    other: "000 miliardi"
}, _c5je82 = {
    M: "MMMM–MMMM y G",
    y: "MMMM y – MMMM y G"
}, _c5je83 = {
    one: "tra {0} anno",
    other: "tra {0} anni"
}, _c5je84 = {
    one: "{0} trim. fa",
    other: "{0} trim. fa"
}, _c5je85 = {
    one: "tra {0} mese",
    other: "tra {0} mesi"
}, _c5je86 = {
    one: "{0} sett. fa",
    other: "{0} sett. fa"
}, _c5je87 = {
    one: "tra {0} min.",
    other: "tra {0} min."
}, _c5je88 = {
    one: "tra {0} sec.",
    other: "tra {0} sec."
}, _c5je89 = {
    one: "{0} settimana",
    other: "{0} settimane"
}, _c5je90 = [ "dom", "lun", "mar", "mer", "gio", "ven", "sab" ], _c5je91 = {
    one: "tra {0} trim.",
    other: "tra {0} trim."
}, _c5je92 = {
    one: "tra {0} sett.",
    other: "tra {0} sett."
}, _c5je93 = {
    one: "{0} giorno fa",
    other: "{0} giorni fa"
}, _c5je94 = {
    one: "{0} minuto fa",
    other: "{0} minuti fa"
}, _c5je95 = {
    d: "E dd/MM – E dd/MM",
    M: "E dd/MM – E dd/MM"
}, _c5je96 = {
    d: "E dd – E dd MMM",
    M: "E dd MMM – E dd MMM"
}, _c5je97 = {
    one: "tra {0} giorno",
    other: "tra {0} giorni"
}, _c5je98 = {
    one: "tra {0} minuto",
    other: "tra {0} minuti"
}, _c5je99 = {
    one: "{0} secondo fa",
    other: "{0} secondi fa"
}, _c5je100 = {
    one: "tra {0} secondo",
    other: "tra {0} secondi"
}, _c5je101 = {
    one: "0 mille miliardi",
    other: "0 mila miliardi"
}, _c5je102 = {
    "0": "questa do",
    "1": "do prossima",
    "-1": "do scorsa"
}, _c5je103 = {
    "0": "questo lu",
    "1": "lu prossimo",
    "-1": "lu scorso"
}, _c5je104 = {
    "0": "questo ma",
    "1": "ma prossimo",
    "-1": "ma scorso"
}, _c5je105 = {
    "0": "questo me",
    "1": "me prossimo",
    "-1": "me scorso"
}, _c5je106 = {
    "0": "questo gi",
    "1": "gi prossimo",
    "-1": "gi scorso"
}, _c5je107 = {
    "0": "questo ve",
    "1": "ve prossimo",
    "-1": "ve scorso"
}, _c5je108 = {
    "0": "questo sa",
    "1": "sa prossimo",
    "-1": "sa scorso"
}, _c5je109 = {
    one: "00 mila miliardi",
    other: "00 mila miliardi"
}, _c5je110 = [ "G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D" ], _c5je111 = {
    one: "{0} trimestre fa",
    other: "{0} trimestri fa"
}, _c5je112 = {
    one: "{0} settimana fa",
    other: "{0} settimane fa"
}, _c5je113 = {
    d: "MM-dd, E – MM-dd, E",
    M: "MM-dd, E – MM-dd, E"
}, _c5je114 = {
    d: "MMM d, E – MMM d, E",
    M: "MMM d, E – MMM d, E"
}, _c5je115 = {
    id: "001",
    displayName: "Mondo",
    hasTimeZones: false
}, _c5je116 = {
    wide: [ "ERA0", "ERA1" ],
    abbreviated: [ "ERA0", "ERA1" ]
}, _c5je117 = {
    one: "000 mila miliardi",
    other: "000 mila miliardi"
}, _c5je118 = {
    one: "tra {0} trimestre",
    other: "tra {0} trimestri"
}, _c5je119 = {
    one: "tra {0} settimana",
    other: "tra {0} settimane"
}, _c5je120 = {
    id: "AQ",
    displayName: "Antartide",
    hasTimeZones: true
}, _c5je121 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ], _c5je122 = {
    a: "h:mm a – h:mm a",
    h: "h:mm–h:mm a",
    m: "h:mm–h:mm a"
}, _c5je123 = {
    "0": "quest’anno",
    "1": "anno prossimo",
    "-1": "anno scorso"
}, _c5je124 = {
    "0": "questo mese",
    "1": "mese prossimo",
    "-1": "mese scorso"
}, _c5je125 = {
    "0": "questa dom.",
    "1": "dom. prossima",
    "-1": "dom. scorsa"
}, _c5je126 = {
    "0": "questo lun.",
    "1": "lun. prossimo",
    "-1": "lun. scorso"
}, _c5je127 = {
    "0": "questo mar.",
    "1": "mar. prossimo",
    "-1": "mar. scorso"
}, _c5je128 = {
    "0": "questo mer.",
    "1": "mer. prossimo",
    "-1": "mer. scorso"
}, _c5je129 = {
    "0": "questo gio.",
    "1": "gio. prossimo",
    "-1": "gio. scorso"
}, _c5je130 = {
    "0": "questo ven.",
    "1": "ven. prossimo",
    "-1": "ven. scorso"
}, _c5je131 = {
    "0": "questo sab.",
    "1": "sab. prossimo",
    "-1": "sab. scorso"
}, _c5je132 = {
    id: "DG",
    displayName: "Diego Garcia",
    hasTimeZones: false
}, _c5je133 = {
    id: "BV",
    displayName: "Isola Bouvet",
    hasTimeZones: false
}, _c5je134 = {
    id: "IC",
    displayName: "Isole Canarie",
    hasTimeZones: false
}, _c5je135 = {
    "0": "questo trim.",
    "1": "trim. prossimo",
    "-1": "trim. scorso"
}, _c5je136 = {
    d: "U MMM d–d",
    M: "U MMM d – MMM d",
    y: "U MMM d – U MMM d"
}, _c5je137 = [ "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13" ], _c5je138 = {
    id: "CX",
    displayName: "Isola Christmas",
    hasTimeZones: true
}, _c5je139 = {
    id: "EA",
    displayName: "Ceuta e Melilla",
    hasTimeZones: false
}, _c5je140 = {
    a: "h:mm a – h:mm a v",
    h: "h:mm–h:mm a v",
    m: "h:mm–h:mm a v"
}, _c5je141 = {
    relative: _c5je102
}, _c5je142 = {
    relative: _c5je103
}, _c5je143 = {
    relative: _c5je104
}, _c5je144 = {
    relative: _c5je105
}, _c5je145 = {
    relative: _c5je106
}, _c5je146 = {
    relative: _c5je107
}, _c5je147 = {
    relative: _c5je108
}, _c5je148 = {
    id: "AC",
    displayName: "Isola Ascensione",
    hasTimeZones: false
}, _c5je149 = {
    id: "TA",
    displayName: "Tristan da Cunha",
    hasTimeZones: false
}, _c5je150 = {
    "0": "questo lunedì",
    "1": "lunedì prossimo",
    "-1": "lunedì scorso"
}, _c5je151 = {
    "0": "questo sabato",
    "1": "sabato prossimo",
    "-1": "sabato scorso"
}, _c5je152 = [ "1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre" ], _c5je153 = {
    id: "TD",
    displayName: "Ciad",
    regionId: "017",
    hasTimeZones: true
}, _c5je154 = {
    id: "CL",
    displayName: "Cile",
    regionId: "005",
    hasTimeZones: true
}, _c5je155 = {
    id: "CN",
    displayName: "Cina",
    regionId: "030",
    hasTimeZones: true
}, _c5je156 = {
    id: "CU",
    displayName: "Cuba",
    regionId: "029",
    hasTimeZones: true
}, _c5je157 = {
    id: "FJ",
    displayName: "Figi",
    regionId: "054",
    hasTimeZones: true
}, _c5je158 = {
    id: "GU",
    displayName: "Guam",
    regionId: "057",
    hasTimeZones: true
}, _c5je159 = {
    id: "IR",
    displayName: "Iran",
    regionId: "034",
    hasTimeZones: true
}, _c5je160 = {
    id: "IQ",
    displayName: "Iraq",
    regionId: "145",
    hasTimeZones: true
}, _c5je161 = {
    id: "LA",
    displayName: "Laos",
    regionId: "035",
    hasTimeZones: true
}, _c5je162 = {
    id: "ML",
    displayName: "Mali",
    regionId: "011",
    hasTimeZones: true
}, _c5je163 = {
    id: "NU",
    displayName: "Niue",
    regionId: "061",
    hasTimeZones: true
}, _c5je164 = {
    id: "OM",
    displayName: "Oman",
    regionId: "145",
    hasTimeZones: true
}, _c5je165 = {
    id: "PE",
    displayName: "Perù",
    regionId: "005",
    hasTimeZones: true
}, _c5je166 = {
    id: "TG",
    displayName: "Togo",
    regionId: "011",
    hasTimeZones: true
}, _c5je167 = {
    id: "AW",
    displayName: "Aruba",
    regionId: "029",
    hasTimeZones: true
}, _c5je168 = {
    id: "BJ",
    displayName: "Benin",
    regionId: "011",
    hasTimeZones: true
}, _c5je169 = {
    id: "CY",
    displayName: "Cipro",
    regionId: "145",
    hasTimeZones: true
}, _c5je170 = {
    id: "GA",
    displayName: "Gabon",
    regionId: "017",
    hasTimeZones: true
}, _c5je171 = {
    id: "GH",
    displayName: "Ghana",
    regionId: "011",
    hasTimeZones: true
}, _c5je172 = {
    id: "HT",
    displayName: "Haiti",
    regionId: "029",
    hasTimeZones: true
}, _c5je173 = {
    id: "IN",
    displayName: "India",
    regionId: "034",
    hasTimeZones: true
}, _c5je174 = {
    id: "CP",
    displayName: "Isola di Clipperton",
    hasTimeZones: false
}, _c5je175 = {
    id: "KE",
    displayName: "Kenya",
    regionId: "014",
    hasTimeZones: true
}, _c5je176 = {
    id: "LY",
    displayName: "Libia",
    regionId: "015",
    hasTimeZones: true
}, _c5je177 = {
    id: "MT",
    displayName: "Malta",
    regionId: "039",
    hasTimeZones: true
}, _c5je178 = {
    id: "NR",
    displayName: "Nauru",
    regionId: "057",
    hasTimeZones: true
}, _c5je179 = {
    id: "NP",
    displayName: "Nepal",
    regionId: "034",
    hasTimeZones: true
}, _c5je180 = {
    id: "NE",
    displayName: "Niger",
    regionId: "011",
    hasTimeZones: true
}, _c5je181 = {
    id: "PW",
    displayName: "Palau",
    regionId: "057",
    hasTimeZones: true
}, _c5je182 = {
    id: "QA",
    displayName: "Qatar",
    regionId: "145",
    hasTimeZones: true
}, _c5je183 = {
    id: "WS",
    displayName: "Samoa",
    regionId: "061",
    hasTimeZones: true
}, _c5je184 = {
    id: "SY",
    displayName: "Siria",
    regionId: "145",
    hasTimeZones: true
}, _c5je185 = {
    id: "SD",
    displayName: "Sudan",
    regionId: "015",
    hasTimeZones: true
}, _c5je186 = {
    id: "TO",
    displayName: "Tonga",
    regionId: "061",
    hasTimeZones: true
}, _c5je187 = {
    id: "YE",
    displayName: "Yemen",
    regionId: "145",
    hasTimeZones: true
}, _c5je188 = {
    "0": "questo martedì",
    "1": "martedì prossimo",
    "-1": "martedì scorso"
}, _c5je189 = {
    "0": "questo giovedì",
    "1": "giovedì prossimo",
    "-1": "giovedì scorso"
}, _c5je190 = {
    "0": "questo venerdì",
    "1": "venerdì prossimo",
    "-1": "venerdì scorso"
}, _c5je191 = {
    id: "AO",
    displayName: "Angola",
    regionId: "017",
    hasTimeZones: true
}, _c5je192 = {
    id: "BE",
    displayName: "Belgio",
    regionId: "155",
    hasTimeZones: true
}, _c5je193 = {
    id: "BZ",
    displayName: "Belize",
    regionId: "013",
    hasTimeZones: true
}, _c5je194 = {
    id: "BT",
    displayName: "Bhutan",
    regionId: "034",
    hasTimeZones: true
}, _c5je195 = {
    id: "BN",
    displayName: "Brunei",
    regionId: "035",
    hasTimeZones: true
}, _c5je196 = {
    id: "CA",
    displayName: "Canada",
    regionId: "021",
    hasTimeZones: true
}, _c5je197 = {
    id: "KM",
    displayName: "Comore",
    regionId: "014",
    hasTimeZones: true
}, _c5je198 = {
    id: "EG",
    displayName: "Egitto",
    regionId: "015",
    hasTimeZones: true
}, _c5je199 = {
    id: "GM",
    displayName: "Gambia",
    regionId: "011",
    hasTimeZones: true
}, _c5je200 = {
    id: "DJ",
    displayName: "Gibuti",
    regionId: "014",
    hasTimeZones: true
}, _c5je201 = {
    id: "GR",
    displayName: "Grecia",
    regionId: "039",
    hasTimeZones: true
}, _c5je202 = {
    id: "GN",
    displayName: "Guinea",
    regionId: "011",
    hasTimeZones: true
}, _c5je203 = {
    id: "GY",
    displayName: "Guyana",
    regionId: "005",
    hasTimeZones: true
}, _c5je204 = {
    id: "CC",
    displayName: "Isole Cocos (Keeling)",
    hasTimeZones: true
}, _c5je205 = {
    id: "IT",
    displayName: "Italia",
    regionId: "039",
    hasTimeZones: true
}, _c5je206 = {
    id: "JE",
    displayName: "Jersey",
    regionId: "154",
    hasTimeZones: true
}, _c5je207 = {
    id: "KW",
    displayName: "Kuwait",
    regionId: "145",
    hasTimeZones: true
}, _c5je208 = {
    id: "LB",
    displayName: "Libano",
    regionId: "145",
    hasTimeZones: true
}, _c5je209 = {
    id: "MW",
    displayName: "Malawi",
    regionId: "014",
    hasTimeZones: true
}, _c5je210 = {
    id: "MC",
    displayName: "Monaco",
    regionId: "155",
    hasTimeZones: true
}, _c5je211 = {
    id: "PA",
    displayName: "Panamá",
    regionId: "013",
    hasTimeZones: true
}, _c5je212 = {
    id: "RW",
    displayName: "Ruanda",
    regionId: "014",
    hasTimeZones: true
}, _c5je213 = {
    id: "RU",
    displayName: "Russia",
    regionId: "151",
    hasTimeZones: true
}, _c5je214 = {
    id: "RS",
    displayName: "Serbia",
    regionId: "039",
    hasTimeZones: true
}, _c5je215 = {
    id: "ES",
    displayName: "Spagna",
    regionId: "039",
    hasTimeZones: true
}, _c5je216 = {
    id: "SE",
    displayName: "Svezia",
    regionId: "154",
    hasTimeZones: true
}, _c5je217 = {
    id: "TW",
    displayName: "Taiwan",
    regionId: "030",
    hasTimeZones: true
}, _c5je218 = {
    id: "TV",
    displayName: "Tuvalu",
    regionId: "061",
    hasTimeZones: true
}, _c5je219 = {
    id: "UG",
    displayName: "Uganda",
    regionId: "014",
    hasTimeZones: true
}, _c5je220 = {
    id: "ZM",
    displayName: "Zambia",
    regionId: "014",
    hasTimeZones: true
}, _c5je221 = {
    id: "AL",
    displayName: "Albania",
    regionId: "039",
    hasTimeZones: true
}, _c5je222 = {
    id: "DZ",
    displayName: "Algeria",
    regionId: "015",
    hasTimeZones: true
}, _c5je223 = {
    id: "AD",
    displayName: "Andorra",
    regionId: "039",
    hasTimeZones: true
}, _c5je224 = {
    id: "AM",
    displayName: "Armenia",
    regionId: "145",
    hasTimeZones: true
}, _c5je225 = {
    id: "AT",
    displayName: "Austria",
    regionId: "155",
    hasTimeZones: true
}, _c5je226 = {
    id: "BS",
    displayName: "Bahamas",
    regionId: "029",
    hasTimeZones: true
}, _c5je227 = {
    id: "BH",
    displayName: "Bahrein",
    regionId: "145",
    hasTimeZones: true
}, _c5je228 = {
    id: "BM",
    displayName: "Bermuda",
    regionId: "021",
    hasTimeZones: true
}, _c5je229 = {
    id: "BO",
    displayName: "Bolivia",
    regionId: "005",
    hasTimeZones: true
}, _c5je230 = {
    id: "BR",
    displayName: "Brasile",
    regionId: "005",
    hasTimeZones: true
}, _c5je231 = {
    id: "BI",
    displayName: "Burundi",
    regionId: "014",
    hasTimeZones: true
}, _c5je232 = {
    id: "CM",
    displayName: "Camerun",
    regionId: "017",
    hasTimeZones: true
}, _c5je233 = {
    id: "HR",
    displayName: "Croazia",
    regionId: "039",
    hasTimeZones: true
}, _c5je234 = {
    id: "CW",
    displayName: "Curaçao",
    regionId: "029",
    hasTimeZones: true
}, _c5je235 = {
    id: "EC",
    displayName: "Ecuador",
    regionId: "005",
    hasTimeZones: true
}, _c5je236 = {
    id: "ER",
    displayName: "Eritrea",
    regionId: "014",
    hasTimeZones: true
}, _c5je237 = {
    id: "EE",
    displayName: "Estonia",
    regionId: "154",
    hasTimeZones: true
}, _c5je238 = {
    id: "ET",
    displayName: "Etiopia",
    regionId: "014",
    hasTimeZones: true
}, _c5je239 = {
    id: "FR",
    displayName: "Francia",
    regionId: "155",
    hasTimeZones: true
}, _c5je240 = {
    id: "GE",
    displayName: "Georgia",
    regionId: "145",
    hasTimeZones: true
}, _c5je241 = {
    id: "GD",
    displayName: "Grenada",
    regionId: "029",
    hasTimeZones: true
}, _c5je242 = {
    id: "IE",
    displayName: "Irlanda",
    regionId: "154",
    hasTimeZones: true
}, _c5je243 = {
    id: "IS",
    displayName: "Islanda",
    regionId: "154",
    hasTimeZones: true
}, _c5je244 = {
    id: "IL",
    displayName: "Israele",
    regionId: "145",
    hasTimeZones: true
}, _c5je245 = {
    id: "XK",
    displayName: "Kosovo",
    regionId: "039",
    hasTimeZones: false
}, _c5je246 = {
    id: "LS",
    displayName: "Lesotho",
    regionId: "018",
    hasTimeZones: true
}, _c5je247 = {
    id: "LR",
    displayName: "Liberia",
    regionId: "011",
    hasTimeZones: true
}, _c5je248 = {
    id: "MV",
    displayName: "Maldive",
    regionId: "034",
    hasTimeZones: true
}, _c5je249 = {
    id: "MA",
    displayName: "Marocco",
    regionId: "015",
    hasTimeZones: true
}, _c5je250 = {
    id: "YT",
    displayName: "Mayotte",
    regionId: "014",
    hasTimeZones: true
}, _c5je251 = {
    id: "MX",
    displayName: "Messico",
    regionId: "013",
    hasTimeZones: true
}, _c5je252 = {
    id: "NA",
    displayName: "Namibia",
    regionId: "018",
    hasTimeZones: true
}, _c5je253 = {
    id: "NG",
    displayName: "Nigeria",
    regionId: "011",
    hasTimeZones: true
}, _c5je254 = {
    id: "PL",
    displayName: "Polonia",
    regionId: "151",
    hasTimeZones: true
}, _c5je255 = {
    id: "RO",
    displayName: "Romania",
    regionId: "151",
    hasTimeZones: true
}, _c5je256 = {
    id: "SN",
    displayName: "Senegal",
    regionId: "011",
    hasTimeZones: true
}, _c5je257 = {
    id: "SO",
    displayName: "Somalia",
    regionId: "014",
    hasTimeZones: true
}, _c5je258 = {
    id: "TK",
    displayName: "Tokelau",
    regionId: "061",
    hasTimeZones: true
}, _c5je259 = {
    id: "TN",
    displayName: "Tunisia",
    regionId: "015",
    hasTimeZones: true
}, _c5je260 = {
    id: "TR",
    displayName: "Turchia",
    regionId: "145",
    hasTimeZones: true
}, _c5je261 = {
    id: "UA",
    displayName: "Ucraina",
    regionId: "151",
    hasTimeZones: true
}, _c5je262 = {
    id: "UY",
    displayName: "Uruguay",
    regionId: "005",
    hasTimeZones: true
}, _c5je263 = {
    id: "VU",
    displayName: "Vanuatu",
    regionId: "054",
    hasTimeZones: true
}, _c5je264 = {
    id: "VN",
    displayName: "Vietnam",
    regionId: "035",
    hasTimeZones: true
}, _c5je265 = {
    relative: _c5je125
}, _c5je266 = {
    relative: _c5je126
}, _c5je267 = {
    relative: _c5je127
}, _c5je268 = {
    relative: _c5je128
}, _c5je269 = {
    relative: _c5je129
}, _c5je270 = {
    relative: _c5je130
}, _c5je271 = {
    relative: _c5je131
}, _c5je272 = {
    id: "AI",
    displayName: "Anguilla",
    regionId: "029",
    hasTimeZones: true
}, _c5je273 = {
    id: "BB",
    displayName: "Barbados",
    regionId: "029",
    hasTimeZones: true
}, _c5je274 = {
    id: "BW",
    displayName: "Botswana",
    regionId: "018",
    hasTimeZones: true
}, _c5je275 = {
    id: "BG",
    displayName: "Bulgaria",
    regionId: "151",
    hasTimeZones: true
}, _c5je276 = {
    id: "KH",
    displayName: "Cambogia",
    regionId: "035",
    hasTimeZones: true
}, _c5je277 = {
    id: "CO",
    displayName: "Colombia",
    regionId: "005",
    hasTimeZones: true
}, _c5je278 = {
    id: "DM",
    displayName: "Dominica",
    regionId: "029",
    hasTimeZones: true
}, _c5je279 = {
    id: "DE",
    displayName: "Germania",
    regionId: "155",
    hasTimeZones: true
}, _c5je280 = {
    id: "JM",
    displayName: "Giamaica",
    regionId: "029",
    hasTimeZones: true
}, _c5je281 = {
    id: "JP",
    displayName: "Giappone",
    regionId: "030",
    hasTimeZones: true
}, _c5je282 = {
    id: "GG",
    displayName: "Guernsey",
    regionId: "154",
    hasTimeZones: true
}, _c5je283 = {
    id: "HN",
    displayName: "Honduras",
    regionId: "013",
    hasTimeZones: true
}, _c5je284 = {
    id: "HM",
    displayName: "Isole Heard e McDonald",
    hasTimeZones: false
}, _c5je285 = {
    id: "KI",
    displayName: "Kiribati",
    regionId: "057",
    hasTimeZones: true
}, _c5je286 = {
    id: "LV",
    displayName: "Lettonia",
    regionId: "154",
    hasTimeZones: true
}, _c5je287 = {
    id: "LT",
    displayName: "Lituania",
    regionId: "154",
    hasTimeZones: true
}, _c5je288 = {
    id: "MY",
    displayName: "Malaysia",
    regionId: "035",
    hasTimeZones: true
}, _c5je289 = {
    id: "MD",
    displayName: "Moldavia",
    regionId: "151",
    hasTimeZones: true
}, _c5je290 = {
    id: "MN",
    displayName: "Mongolia",
    regionId: "030",
    hasTimeZones: true
}, _c5je291 = {
    id: "NO",
    displayName: "Norvegia",
    regionId: "154",
    hasTimeZones: true
}, _c5je292 = {
    id: "PK",
    displayName: "Pakistan",
    regionId: "034",
    hasTimeZones: true
}, _c5je293 = {
    id: "PY",
    displayName: "Paraguay",
    regionId: "005",
    hasTimeZones: true
}, _c5je294 = {
    id: "RE",
    displayName: "Riunione",
    regionId: "014",
    hasTimeZones: true
}, _c5je295 = {
    id: "SI",
    displayName: "Slovenia",
    regionId: "039",
    hasTimeZones: true
}, _c5je296 = {
    id: "SR",
    displayName: "Suriname",
    regionId: "005",
    hasTimeZones: true
}, _c5je297 = {
    id: "CH",
    displayName: "Svizzera",
    regionId: "155",
    hasTimeZones: true
}, _c5je298 = {
    id: "TZ",
    displayName: "Tanzania",
    regionId: "014",
    hasTimeZones: true
}, _c5je299 = {
    id: "TF",
    displayName: "Terre australi francesi",
    hasTimeZones: true
}, _c5je300 = {
    id: "HU",
    displayName: "Ungheria",
    regionId: "151",
    hasTimeZones: true
}, _c5je301 = {
    id: "ZW",
    displayName: "Zimbabwe",
    regionId: "014",
    hasTimeZones: true
}, _c5je302 = {
    "2": "{0} e {1}",
    start: "{0}, {1}",
    middle: "{0}, {1}",
    end: "{0} e {1}"
}, _c5je303 = {
    "0": "questa domenica",
    "1": "domenica prossima",
    "-1": "domenica scorsa"
}, _c5je304 = {
    id: "AR",
    displayName: "Argentina",
    regionId: "005",
    hasTimeZones: true
}, _c5je305 = {
    id: "AU",
    displayName: "Australia",
    regionId: "053",
    hasTimeZones: true
}, _c5je306 = {
    id: "DK",
    displayName: "Danimarca",
    regionId: "154",
    hasTimeZones: true
}, _c5je307 = {
    id: "PH",
    displayName: "Filippine",
    regionId: "035",
    hasTimeZones: true
}, _c5je308 = {
    id: "FI",
    displayName: "Finlandia",
    regionId: "154",
    hasTimeZones: true
}, _c5je309 = {
    id: "JO",
    displayName: "Giordania",
    regionId: "145",
    hasTimeZones: true
}, _c5je310 = {
    id: "GP",
    displayName: "Guadalupa",
    regionId: "029",
    hasTimeZones: true
}, _c5je311 = {
    id: "GT",
    displayName: "Guatemala",
    regionId: "013",
    hasTimeZones: true
}, _c5je312 = {
    id: "ID",
    displayName: "Indonesia",
    regionId: "035",
    hasTimeZones: true
}, _c5je313 = {
    id: "MQ",
    displayName: "Martinica",
    regionId: "029",
    hasTimeZones: true
}, _c5je314 = {
    id: "MU",
    displayName: "Mauritius",
    regionId: "014",
    hasTimeZones: true
}, _c5je315 = {
    id: "MZ",
    displayName: "Mozambico",
    regionId: "014",
    hasTimeZones: true
}, _c5je316 = {
    id: "NI",
    displayName: "Nicaragua",
    regionId: "013",
    hasTimeZones: true
}, _c5je317 = {
    id: "PR",
    displayName: "Portorico",
    regionId: "029",
    hasTimeZones: true
}, _c5je318 = {
    id: "SG",
    displayName: "Singapore",
    regionId: "035",
    hasTimeZones: true
}, _c5je319 = {
    id: "LK",
    displayName: "Sri Lanka",
    regionId: "034",
    hasTimeZones: true
}, _c5je320 = {
    id: "SS",
    displayName: "Sud Sudan",
    regionId: "014",
    hasTimeZones: true
}, _c5je321 = {
    id: "ZA",
    displayName: "Sudafrica",
    regionId: "018",
    hasTimeZones: true
}, _c5je322 = {
    id: "SZ",
    displayName: "Swaziland",
    regionId: "018",
    hasTimeZones: true
}, _c5je323 = {
    id: "VE",
    displayName: "Venezuela",
    regionId: "005",
    hasTimeZones: true
}, _c5je324 = {
    d: "y-MM-dd – y-MM-dd",
    M: "y-MM-dd – y-MM-dd",
    y: "y-MM-dd – y-MM-dd"
}, _c5je325 = {
    id: "BD",
    displayName: "Bangladesh",
    regionId: "034",
    hasTimeZones: true
}, _c5je326 = {
    id: "CV",
    displayName: "Capo Verde",
    regionId: "011",
    hasTimeZones: true
}, _c5je327 = {
    id: "CR",
    displayName: "Costa Rica",
    regionId: "013",
    hasTimeZones: true
}, _c5je328 = {
    id: "GI",
    displayName: "Gibilterra",
    regionId: "039",
    hasTimeZones: true
}, _c5je329 = {
    id: "CK",
    displayName: "Isole Cook",
    regionId: "061",
    hasTimeZones: true
}, _c5je330 = {
    id: "KZ",
    displayName: "Kazakistan",
    regionId: "143",
    hasTimeZones: true
}, _c5je331 = {
    id: "MG",
    displayName: "Madagascar",
    regionId: "014",
    hasTimeZones: true
}, _c5je332 = {
    id: "MR",
    displayName: "Mauritania",
    regionId: "011",
    hasTimeZones: true
}, _c5je333 = {
    id: "FM",
    displayName: "Micronesia",
    regionId: "057",
    hasTimeZones: true
}, _c5je334 = {
    id: "ME",
    displayName: "Montenegro",
    regionId: "039",
    hasTimeZones: true
}, _c5je335 = {
    id: "MS",
    displayName: "Montserrat",
    regionId: "029",
    hasTimeZones: true
}, _c5je336 = {
    id: "PT",
    displayName: "Portogallo",
    regionId: "039",
    hasTimeZones: true
}, _c5je337 = {
    id: "SM",
    displayName: "San Marino",
    regionId: "039",
    hasTimeZones: true
}, _c5je338 = {
    id: "SH",
    displayName: "Sant’Elena",
    regionId: "011",
    hasTimeZones: true
}, _c5je339 = {
    id: "SC",
    displayName: "Seychelles",
    regionId: "014",
    hasTimeZones: true
}, _c5je340 = {
    id: "SK",
    displayName: "Slovacchia",
    regionId: "151",
    hasTimeZones: true
}, _c5je341 = {
    id: "TJ",
    displayName: "Tagikistan",
    regionId: "143",
    hasTimeZones: true
}, _c5je342 = {
    id: "TH",
    displayName: "Thailandia",
    regionId: "035",
    hasTimeZones: true
}, _c5je343 = {
    id: "UZ",
    displayName: "Uzbekistan",
    regionId: "143",
    hasTimeZones: true
}, _c5je344 = {
    "0": "oggi",
    "1": "domani",
    "2": "dopodomani",
    "-2": "l’altro ieri",
    "-1": "ieri"
}, _c5je345 = {
    id: "AF",
    displayName: "Afghanistan",
    regionId: "034",
    hasTimeZones: true
}, _c5je346 = {
    id: "AZ",
    displayName: "Azerbaigian",
    regionId: "145",
    hasTimeZones: true
}, _c5je347 = {
    id: "BY",
    displayName: "Bielorussia",
    regionId: "151",
    hasTimeZones: true
}, _c5je348 = {
    id: "SV",
    displayName: "El Salvador",
    regionId: "013",
    hasTimeZones: true
}, _c5je349 = {
    id: "GL",
    displayName: "Groenlandia",
    regionId: "021",
    hasTimeZones: true
}, _c5je350 = {
    id: "AX",
    displayName: "Isole Åland",
    regionId: "154",
    hasTimeZones: true
}, _c5je351 = {
    id: "LU",
    displayName: "Lussemburgo",
    regionId: "155",
    hasTimeZones: true
}, _c5je352 = {
    id: "NL",
    displayName: "Paesi Bassi",
    regionId: "155",
    hasTimeZones: true
}, _c5je353 = {
    id: "GB",
    displayName: "Regno Unito",
    regionId: "154",
    hasTimeZones: true
}, _c5je354 = {
    id: "LC",
    displayName: "Saint Lucia",
    regionId: "029",
    hasTimeZones: true
}, _c5je355 = {
    id: "US",
    displayName: "Stati Uniti",
    regionId: "021",
    hasTimeZones: true
}, _c5je356 = {
    id: "TL",
    displayName: "Timor Leste",
    regionId: "035",
    hasTimeZones: true
}, _c5je357 = {
    d: "dd–dd MMM y G",
    M: "dd MMM – dd MMM y G",
    y: "dd MMM y – dd MMM y G"
}, _c5je358 = {
    "0": "questo trimestre",
    "1": "trimestre prossimo",
    "-1": "trimestre scorso"
}, _c5je359 = {
    "0": "questa settimana",
    "1": "settimana prossima",
    "-1": "settimana scorsa"
}, _c5je360 = {
    "0": "questo mercoledì",
    "1": "mercoledì prossimo",
    "-1": "mercoledì scorso"
}, _c5je361 = {
    id: "142",
    displayName: "Asia",
    hasTimeZones: false,
    parentRegionId: "001"
}, _c5je362 = {
    id: "BF",
    displayName: "Burkina Faso",
    regionId: "011",
    hasTimeZones: true
}, _c5je363 = {
    id: "IM",
    displayName: "Isola di Man",
    regionId: "154",
    hasTimeZones: true
}, _c5je364 = {
    id: "KY",
    displayName: "Isole Cayman",
    regionId: "029",
    hasTimeZones: true
}, _c5je365 = {
    id: "KG",
    displayName: "Kirghizistan",
    regionId: "143",
    hasTimeZones: true
}, _c5je366 = {
    id: "MO",
    displayName: "RAS di Macao",
    regionId: "030",
    hasTimeZones: true
}, _c5je367 = {
    id: "MF",
    displayName: "Saint Martin",
    regionId: "029",
    hasTimeZones: true
}, _c5je368 = {
    id: "SL",
    displayName: "Sierra Leone",
    regionId: "011",
    hasTimeZones: true
}, _c5je369 = {
    id: "SX",
    displayName: "Sint Maarten",
    regionId: "029",
    hasTimeZones: true
}, _c5je370 = {
    id: "TM",
    displayName: "Turkmenistan",
    regionId: "143",
    hasTimeZones: true
}, _c5je371 = {
    id: "KR",
    displayName: "Corea del Sud",
    regionId: "030",
    hasTimeZones: true
}, _c5je372 = {
    id: "GW",
    displayName: "Guinea-Bissau",
    regionId: "011",
    hasTimeZones: true
}, _c5je373 = {
    id: "NF",
    displayName: "Isola Norfolk",
    regionId: "053",
    hasTimeZones: true
}, _c5je374 = {
    id: "FO",
    displayName: "Isole Fær Øer",
    regionId: "154",
    hasTimeZones: true
}, _c5je375 = {
    id: "LI",
    displayName: "Liechtenstein",
    regionId: "155",
    hasTimeZones: true
}, _c5je376 = {
    id: "NZ",
    displayName: "Nuova Zelanda",
    regionId: "053",
    hasTimeZones: true
}, _c5je377 = {
    relative: _c5je150
}, _c5je378 = {
    relative: _c5je151
}, _c5je379 = {
    abbreviated: {
        leap: "{0}bis"
    },
    narrow: {
        leap: "{0}b"
    },
    wide: {
        leap: "{0}bis"
    }
}, _c5je380 = {
    id: "002",
    displayName: "Africa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _c5je381 = {
    id: "SA",
    displayName: "Arabia Saudita",
    regionId: "145",
    hasTimeZones: true
}, _c5je382 = {
    id: "KP",
    displayName: "Corea del Nord",
    regionId: "030",
    hasTimeZones: true
}, _c5je383 = {
    id: "CI",
    displayName: "Costa d’Avorio",
    regionId: "011",
    hasTimeZones: true
}, _c5je384 = {
    id: "150",
    displayName: "Europa",
    hasTimeZones: false,
    parentRegionId: "001"
}, _c5je385 = {
    id: "FK",
    displayName: "Isole Falkland",
    regionId: "005",
    hasTimeZones: true
}, _c5je386 = {
    id: "MH",
    displayName: "Isole Marshall",
    regionId: "057",
    hasTimeZones: true
}, _c5je387 = {
    id: "PN",
    displayName: "Isole Pitcairn",
    regionId: "061",
    hasTimeZones: true
}, _c5je388 = {
    id: "SB",
    displayName: "Isole Salomone",
    regionId: "054",
    hasTimeZones: true
}, _c5je389 = [ "domenica", "lunedì", "martedì", "mercoledì", "giovedì", "venerdì", "sabato" ], _c5je390 = [ "Domenica", "Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato" ], _c5je391 = {
    id: "029",
    displayName: "Caraibi",
    hasTimeZones: false,
    parentRegionId: "019"
}, _c5je392 = {
    id: "GF",
    displayName: "Guyana francese",
    regionId: "005",
    hasTimeZones: true
}, _c5je393 = {
    id: "NC",
    displayName: "Nuova Caledonia",
    regionId: "054",
    hasTimeZones: true
}, _c5je394 = {
    id: "009",
    displayName: "Oceania",
    hasTimeZones: false,
    parentRegionId: "001"
}, _c5je395 = {
    id: "CZ",
    displayName: "Repubblica Ceca",
    regionId: "151",
    hasTimeZones: true
}, _c5je396 = {
    id: "AS",
    displayName: "Samoa americane",
    regionId: "061",
    hasTimeZones: true
}, _c5je397 = {
    id: "WF",
    displayName: "Wallis e Futuna",
    regionId: "061",
    hasTimeZones: true
}, _c5je398 = {
    d: "dd/MM/y – dd/MM/y G",
    M: "dd/MM/y – dd/MM/y G",
    y: "dd/MM/y – dd/MM/y G"
}, _c5je399 = [ "gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic" ], _c5je400 = [ "M01", "M02", "M03", "M04", "M05", "M06", "M07", "M08", "M09", "M10", "M11", "M12" ], _c5je401 = {
    id: "019",
    displayName: "Americhe",
    hasTimeZones: false,
    parentRegionId: "001"
}, _c5je402 = {
    id: "BQ",
    displayName: "Caraibi Olandesi",
    regionId: "029",
    hasTimeZones: true
}, _c5je403 = {
    id: "CD",
    displayName: "Congo - Kinshasa",
    regionId: "017",
    hasTimeZones: true
}, _c5je404 = {
    id: "HK",
    displayName: "RAS di Hong Kong",
    regionId: "030",
    hasTimeZones: true
}, _c5je405 = {
    id: "BL",
    displayName: "Saint-Barthélemy",
    regionId: "029",
    hasTimeZones: true
}, _c5je406 = {
    relative: _c5je188
}, _c5je407 = {
    relative: _c5je189
}, _c5je408 = {
    relative: _c5je190
}, _c5je409 = {
    id: "AG",
    displayName: "Antigua e Barbuda",
    regionId: "029",
    hasTimeZones: true
}, _c5je410 = {
    id: "CG",
    displayName: "Congo-Brazzaville",
    regionId: "017",
    hasTimeZones: true
}, _c5je411 = {
    id: "054",
    displayName: "Melanesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _c5je412 = {
    id: "061",
    displayName: "Polinesia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _c5je413 = {
    id: "TT",
    displayName: "Trinidad e Tobago",
    regionId: "029",
    hasTimeZones: true
}, _c5je414 = {
    id: "VA",
    displayName: "Città del Vaticano",
    regionId: "039",
    hasTimeZones: true
}, _c5je415 = {
    id: "GQ",
    displayName: "Guinea Equatoriale",
    regionId: "017",
    hasTimeZones: true
}, _c5je416 = {
    id: "MM",
    displayName: "Myanmar (Birmania)",
    regionId: "035",
    hasTimeZones: true
}, _c5je417 = {
    id: "015",
    displayName: "Nordafrica",
    hasTimeZones: false,
    parentRegionId: "002"
}, _c5je418 = {
    id: "PG",
    displayName: "Papua Nuova Guinea",
    regionId: "054",
    hasTimeZones: true
}, _c5je419 = {
    id: "PF",
    displayName: "Polinesia francese",
    regionId: "061",
    hasTimeZones: true
}, _c5je420 = {
    id: "EH",
    displayName: "Sahara occidentale",
    regionId: "015",
    hasTimeZones: true
}, _c5je421 = [ undefined, "zi", "chou", "yin", "mao", "chen", "si", "wu", "wei", "shen", "you", "xu" ], _c5je422 = {
    id: "UM",
    displayName: "Altre isole americane del Pacifico",
    hasTimeZones: true
}, _c5je423 = {
    id: "053",
    displayName: "Australasia",
    hasTimeZones: false,
    parentRegionId: "009"
}, _c5je424 = {
    id: "AE",
    displayName: "Emirati Arabi Uniti",
    regionId: "145",
    hasTimeZones: true
}, _c5je425 = {
    id: "KN",
    displayName: "Saint Kitts e Nevis",
    regionId: "029",
    hasTimeZones: true
}, _c5je426 = {
    id: "ST",
    displayName: "São Tomé e Príncipe",
    regionId: "017",
    hasTimeZones: true
}, _c5je427 = {
    d: "E d – E d MMM y G",
    M: "E d MMM – E d MMM y G",
    y: "E d MMM y – E d MMM y G"
}, _c5je428 = {
    relative: _c5je303
}, _c5je429 = {
    id: "034",
    displayName: "Asia del Sud",
    hasTimeZones: false,
    parentRegionId: "142"
}, _c5je430 = {
    id: "BA",
    displayName: "Bosnia ed Erzegovina",
    regionId: "039",
    hasTimeZones: true
}, _c5je431 = {
    id: "TC",
    displayName: "Isole Turks e Caicos",
    regionId: "029",
    hasTimeZones: true
}, _c5je432 = {
    id: "SJ",
    displayName: "Svalbard e Jan Mayen",
    regionId: "154",
    hasTimeZones: true
}, _c5je433 = {
    id: "143",
    displayName: "Asia centrale",
    hasTimeZones: false,
    parentRegionId: "142"
}, _c5je434 = {
    id: "DO",
    displayName: "Repubblica Dominicana",
    regionId: "029",
    hasTimeZones: true
}, _c5je435 = {
    id: "PS",
    displayName: "Territori palestinesi",
    regionId: "145",
    hasTimeZones: true
}, _c5je436 = {
    id: "018",
    displayName: "Africa del Sud",
    hasTimeZones: false,
    parentRegionId: "002"
}, _c5je437 = {
    id: "030",
    displayName: "Asia orientale",
    hasTimeZones: false,
    parentRegionId: "142"
}, _c5je438 = {
    relative: _c5je360
}, _c5je439 = {
    id: "017",
    displayName: "Africa centrale",
    hasTimeZones: false,
    parentRegionId: "002"
}, _c5je440 = {
    id: "005",
    displayName: "America del Sud",
    hasTimeZones: false,
    parentRegionId: "019"
}, _c5je441 = {
    id: "VI",
    displayName: "Isole Vergini Americane",
    regionId: "029",
    hasTimeZones: true
}, _c5je442 = {
    id: "MK",
    displayName: "Repubblica di Macedonia",
    regionId: "039",
    hasTimeZones: true
}, _c5je443 = {
    id: "PM",
    displayName: "Saint Pierre e Miquelon",
    regionId: "021",
    hasTimeZones: true
}, _c5je444 = {
    d: "U MMM d, E – MMM d, E",
    M: "U MMM d, E – MMM d, E",
    y: "U MMM d, E – U MMM d, E"
}, _c5je445 = {
    id: "014",
    displayName: "Africa orientale",
    hasTimeZones: false,
    parentRegionId: "002"
}, _c5je446 = {
    id: "013",
    displayName: "America Centrale",
    hasTimeZones: false,
    parentRegionId: "019"
}, _c5je447 = {
    id: "021",
    displayName: "America del Nord",
    hasTimeZones: false,
    parentRegionId: "019"
}, _c5je448 = {
    id: "145",
    displayName: "Asia occidentale",
    hasTimeZones: false,
    parentRegionId: "142"
}, _c5je449 = {
    id: "151",
    displayName: "Europa orientale",
    hasTimeZones: false,
    parentRegionId: "150"
}, _c5je450 = {
    id: "CF",
    displayName: "Repubblica Centrafricana",
    regionId: "017",
    hasTimeZones: true
}, _c5je451 = {
    id: "035",
    displayName: "Sud-est asiatico",
    hasTimeZones: false,
    parentRegionId: "142"
}, _c5je452 = {
    id: "VG",
    displayName: "Isole Vergini Britanniche",
    regionId: "029",
    hasTimeZones: true
}, _c5je453 = {
    future: _c5je54,
    past: _c5je43
}, _c5je454 = {
    future: _c5je55,
    past: _c5je44
}, _c5je455 = {
    id: "011",
    displayName: "Africa occidentale",
    hasTimeZones: false,
    parentRegionId: "002"
}, _c5je456 = {
    id: "039",
    displayName: "Europa meridionale",
    hasTimeZones: false,
    parentRegionId: "150"
}, _c5je457 = {
    id: "155",
    displayName: "Europa occidentale",
    hasTimeZones: false,
    parentRegionId: "150"
}, _c5je458 = {
    id: "GS",
    displayName: "Georgia del Sud e isole Sandwich australi",
    hasTimeZones: true
}, _c5je459 = {
    id: "VC",
    displayName: "Saint Vincent e Grenadines",
    regionId: "029",
    hasTimeZones: true
}, _c5je460 = {
    id: "IO",
    displayName: "Territorio britannico dell’Oceano Indiano",
    hasTimeZones: true
}, _c5je461 = {
    d: "E dd/MM/y – E dd/MM/y G",
    M: "E dd/MM/y – E dd/MM/y G",
    y: "E dd/MM/y – E dd/MM/y G"
}, _c5je462 = {
    future: _c5je56,
    past: _c5je47
}, _c5je463 = {
    d: "y-MM-dd, E – y-MM-dd, E",
    M: "y-MM-dd, E – y-MM-dd, E",
    y: "y-MM-dd, E – y-MM-dd, E"
}, _c5je464 = {
    id: "057",
    displayName: "Regione Micronesiana",
    hasTimeZones: false,
    parentRegionId: "009"
}, _c5je465 = {
    id: "154",
    displayName: "Europa settentrionale",
    hasTimeZones: false,
    parentRegionId: "150"
}, _c5je466 = {
    id: "MP",
    displayName: "Isole Marianne settentrionali",
    regionId: "057",
    hasTimeZones: true
}, _c5je467 = {
    future: _c5je66,
    past: _c5je53
}, _c5je468 = {
    future: _c5je77,
    past: _c5je65
}, _c5je469 = {
    future: _c5je79,
    past: _c5je67
}, _c5je470 = {
    future: _c5je83,
    past: _c5je75
}, _c5je471 = {
    future: _c5je85,
    past: _c5je76
}, _c5je472 = {
    future: _c5je87,
    past: _c5je78
}, _c5je473 = {
    future: _c5je88,
    past: _c5je80
}, _c5je474 = {
    future: _c5je91,
    past: _c5je84
}, _c5je475 = {
    future: _c5je92,
    past: _c5je86
}, _c5je476 = {
    future: _c5je97,
    past: _c5je93
}, _c5je477 = {
    future: _c5je98,
    past: _c5je94
}, _c5je478 = [ "Muh.", "Saf.", "Rab. I", "Rab. II", "Jum. I", "Jum. II", "Raj.", "Sha.", "Ram.", "Shaw.", "Dhuʻl-Q.", "Dhuʻl-H." ], _c5je479 = [ "Tishri", "Heshvan", "Kislev", "Tevet", "Shevat", "Adar I", "Adar", "Nisan", "Iyar", "Sivan", "Tamuz", "Av", "Elul" ], _c5je480 = {
    future: _c5je100,
    past: _c5je99
}, _c5je481 = [ "Farvardin", "Ordibehesht", "Khordad", "Tir", "Mordad", "Shahrivar", "Mehr", "Aban", "Azar", "Dey", "Bahman", "Esfand" ], _c5je482 = [ "Tout", "Baba", "Hator", "Kiahk", "Toba", "Amshir", "Baramhat", "Baramouda", "Bashans", "Paona", "Epep", "Mesra", "Nasie" ], _c5je483 = {
    displayName: "h",
    relativeTime: _c5je453
}, _c5je484 = {
    displayName: "s",
    relativeTime: _c5je454
}, _c5je485 = {
    future: _c5je118,
    past: _c5je111
}, _c5je486 = {
    future: _c5je119,
    past: _c5je112
}, _c5je487 = {
    displayName: "g",
    relativeTime: _c5je462
}, _c5je488 = [ "Meskerem", "Tekemt", "Hedar", "Tahsas", "Ter", "Yekatit", "Megabit", "Miazia", "Genbot", "Sene", "Hamle", "Nehasse", "Pagumen" ], _c5je489 = [ "gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre" ], _c5je490 = [ "Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre" ], _c5je491 = {
    displayName: "h.",
    relativeTime: _c5je467
}, _c5je492 = [ "Chaitra", "Vaisakha", "Jyaistha", "Asadha", "Sravana", "Bhadra", "Asvina", "Kartika", "Agrahayana", "Pausa", "Magha", "Phalguna" ], _c5je493 = {
    displayName: "m",
    relativeTime: _c5je469
}, _c5je494 = {
    displayName: "ora",
    relativeTime: _c5je468
}, _c5je495 = {
    abbreviated: _c5je1,
    narrow: [ "1", "2", "3", "4" ],
    wide: _c5je152
}, _c5je496 = {
    displayName: "anno",
    relativeTime: _c5je470
}, _c5je497 = {
    displayName: "mese",
    relativeTime: _c5je471
}, _c5je498 = {
    displayName: "min.",
    relativeTime: _c5je472
}, _c5je499 = {
    displayName: "sec.",
    relativeTime: _c5je473
}, _c5je500 = {
    midnight: "mezzanotte",
    am: "AM",
    noon: "mezzogiorno",
    pm: "PM",
    morning1: "mattina",
    afternoon1: "pomeriggio",
    evening1: "sera",
    night1: "notte"
}, _c5je501 = {
    midnight: "mezzanotte",
    am: "m.",
    noon: "mezzogiorno",
    pm: "p.",
    morning1: "mattina",
    afternoon1: "pomeriggio",
    evening1: "sera",
    night1: "notte"
}, _c5je502 = [ "Muharram", "Safar", "Rabiʻ I", "Rabiʻ II", "Jumada I", "Jumada II", "Rajab", "Shaʻban", "Ramadan", "Shawwal", "Dhuʻl-Qiʻdah", "Dhuʻl-Hijjah" ], _c5je503 = {
    displayName: "sett.",
    relativeTime: _c5je475
}, _c5je504 = {
    displayName: "minuto",
    relativeTime: _c5je477
}, _c5je505 = {
    displayName: "Secondo",
    relative: [ "ora" ],
    relativeTime: _c5je480
}, _c5je506 = {
    decimal: ",",
    group: ".",
    list: ";",
    percentSign: "%",
    plusSign: "+",
    minusSign: "-",
    exponential: "E",
    superscriptingExponent: "×",
    perMille: "‰",
    infinity: "∞",
    nan: "NaN",
    timeSeparator: ":"
}, _c5je507 = {
    symbols: _c5je506
}, _c5je508 = {
    displayName: "anno",
    relative: _c5je123,
    relativeTime: _c5je470
}, _c5je509 = {
    displayName: "mese",
    relative: _c5je124,
    relativeTime: _c5je471
}, _c5je510 = {
    format: _c5je379,
    numeric: _c5je3,
    standAlone: _c5je379
}, _c5je511 = {
    displayName: "trim.",
    relative: _c5je135,
    relativeTime: _c5je474
}, _c5je512 = {
    symbols: _c5je506,
    digits: "renderSpelloutCardinal"
}, _c5je513 = {
    displayName: "giorno",
    relative: _c5je344,
    relativeTime: _c5je476
}, _c5je514 = {
    symbols: _c5je506,
    digits: "renderSpelloutCardinalFinancial"
}, _c5je515 = {
    abbreviated: _c5je90,
    narrow: _c5je23,
    wide: _c5je389,
    "short": _c5je90
}, _c5je516 = {
    abbreviated: _c5je90,
    narrow: _c5je23,
    wide: _c5je390,
    "short": _c5je90
}, _c5je517 = {
    abbreviated: _c5je400,
    narrow: _c5je121,
    wide: _c5je400
}, _c5je518 = {
    displayName: "trimestre",
    relative: _c5je358,
    relativeTime: _c5je485
}, _c5je519 = {
    displayName: "settimana",
    relative: _c5je359,
    relativeTime: _c5je486
}, _c5je520 = {
    abbreviated: _c5je421,
    narrow: _c5je421,
    wide: _c5je421
}, _c5je521 = {
    format: _c5je520
}, _c5je522 = {
    abbreviated: _c5je399,
    narrow: _c5je110,
    wide: _c5je489
}, _c5je523 = {
    abbreviated: _c5je399,
    narrow: _c5je110,
    wide: _c5je490
}, _c5je524 = {
    format: _c5je495,
    standAlone: _c5je495
}, _c5je525 = {
    abbreviated: _c5je479,
    narrow: _c5je137,
    wide: _c5je479
}, _c5je526 = {
    abbreviated: _c5je481,
    narrow: _c5je121,
    wide: _c5je481
}, _c5je527 = {
    abbreviated: _c5je482,
    narrow: _c5je137,
    wide: _c5je482
}, _c5je528 = {
    abbreviated: _c5je478,
    narrow: _c5je121,
    wide: _c5je502
}, _c5je529 = {
    abbreviated: _c5je488,
    narrow: _c5je137,
    wide: _c5je488
}, _c5je530 = {
    abbreviated: _c5je492,
    narrow: _c5je121,
    wide: _c5je492
}, _c5je531 = {
    fullDate: "EEEE d MMMM U",
    longDate: "dd MMMM U",
    mediumDate: "dd MMM U",
    shortDate: "dd/MM/yy",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd/MM/yy HH:mm",
    mediumDateTime: "dd MMM U HH:mm:ss",
    longDateTime: "dd MMMM U HH:mm:ss z",
    fullDateTime: "EEEE d MMMM U HH:mm:ss zzzz"
}, _c5je532 = {
    fullDate: "EEEE d MMMM y G",
    longDate: "dd MMMM y G",
    mediumDate: "dd MMM y G",
    shortDate: "dd/MM/yy GGGGG",
    fullTime: "HH:mm:ss zzzz",
    longTime: "HH:mm:ss z",
    mediumTime: "HH:mm:ss",
    shortTime: "HH:mm",
    shortDateTime: "dd/MM/yy GGGGG, HH:mm",
    mediumDateTime: "dd MMM y G, HH:mm:ss",
    longDateTime: "dd MMMM y G 'alle' HH:mm:ss z",
    fullDateTime: "EEEE d MMMM y G 'alle' HH:mm:ss zzzz"
}, _c5je533 = {
    "1000": {
        one: "0",
        other: "0"
    },
    "10000": {
        one: "0",
        other: "0"
    },
    "100000": {
        one: "0",
        other: "0"
    },
    "1000000": _c5je10,
    "10000000": _c5je19,
    "100000000": _c5je27,
    "1000000000": _c5je11,
    "10000000000": _c5je20,
    "100000000000": _c5je28,
    "1000000000000": _c5je12,
    "10000000000000": _c5je21,
    "100000000000000": _c5je29
}, _c5je534 = {
    abbreviated: _c5je500,
    narrow: _c5je501,
    wide: _c5je500
}, _c5je535 = {
    "1000": _c5je4,
    "10000": _c5je8,
    "100000": _c5je13,
    "1000000": _c5je30,
    "10000000": _c5je39,
    "100000000": _c5je49,
    "1000000000": _c5je31,
    "10000000000": _c5je40,
    "100000000000": _c5je50,
    "1000000000000": _c5je32,
    "10000000000000": _c5je41,
    "100000000000000": _c5je51
}, _c5je536 = {
    format: _c5je515,
    standAlone: _c5je516
}, _c5je537 = {
    format: _c5je517,
    standAlone: _c5je517
}, _c5je538 = {
    d: "d",
    E: "ccc",
    Ed: "d, E",
    Gy: "r U",
    GyMMM: "r(U) MMM",
    GyMMMd: "r MMM d",
    GyMMMEd: "r(U) MMM d, E",
    h: "h a",
    H: "HH",
    hm: "h:mm a",
    Hm: "HH:mm",
    hms: "h:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "MM-dd",
    MEd: "MM-dd, E",
    MMM: "LLL",
    MMMd: "MMM d",
    MMMEd: "MMM d, E",
    MMMMd: "MMMM d",
    ms: "mm:ss",
    UM: "U MM",
    UMd: "U MM-d",
    UMMM: "U MMM",
    UMMMd: "U MMM d",
    y: "r(U)",
    yMd: "r-MM-dd",
    yyyy: "r(U)",
    yyyyM: "r-MM",
    yyyyMd: "r-MM-dd",
    yyyyMEd: "r-MM-dd, E",
    yyyyMMM: "r(U) MMM",
    yyyyMMMd: "r MMM d",
    yyyyMMMEd: "r(U) MMM d, E",
    yyyyMMMM: "r(U) MMMM",
    yyyyQQQ: "r(U) QQQ",
    yyyyQQQQ: "r(U) QQQQ"
}, _c5je539 = {
    d: "d",
    E: "ccc",
    Ed: "E d",
    Gy: "y G",
    GyMMM: "MMM y G",
    GyMMMd: "d MMM y G",
    GyMMMEd: "E d MMM y G",
    h: "hh a",
    H: "HH",
    hm: "hh:mm a",
    Hm: "HH:mm",
    hms: "hh:mm:ss a",
    Hms: "HH:mm:ss",
    M: "L",
    Md: "d/M",
    MEd: "E d/M",
    MMM: "LLL",
    MMMd: "d MMM",
    MMMEd: "E d MMM",
    MMMMd: "d MMMM",
    ms: "mm:ss",
    y: "y G",
    yyyy: "y G",
    yyyyM: "M/y GGGGG",
    yyyyMd: "d/M/y GGGGG",
    yyyyMEd: "E d/M/y GGGGG",
    yyyyMMM: "MMM y G",
    yyyyMMMd: "d MMM y G",
    yyyyMMMEd: "E d MMM y G",
    yyyyMMMM: "MMMM y G",
    yyyyQQQ: "QQQ y G",
    yyyyQQQQ: "QQQQ y G",
    Ehm: "E h:mm a",
    EHm: "E HH:mm",
    Ehms: "E h:mm:ss a",
    EHms: "E HH:mm:ss"
}, _c5je540 = {
    "1000": _c5je24,
    "10000": _c5je26,
    "100000": _c5je38,
    "1000000": _c5je48,
    "10000000": _c5je59,
    "100000000": _c5je73,
    "1000000000": _c5je60,
    "10000000000": _c5je74,
    "100000000000": _c5je81,
    "1000000000000": _c5je101,
    "10000000000000": _c5je109,
    "100000000000000": _c5je117
}, _c5je541 = {
    format: _c5je522,
    standAlone: _c5je523
}, _c5je542 = {
    currencyMatch: /[^\u0024+<->\u005E`\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/,
    surroundingMatch: /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/,
    insertBetween: " "
}, _c5je543 = [ undefined, "jia-zi", "yi-chou", "bing-yin", "ding-mao", "wu-chen", "ji-si", "geng-wu", "xin-wei", "ren-shen", "gui-you", "jia-xu", "yi-hai", "bing-zi", "ding-chou", "wu-yin", "ji-mao", "geng-chen", "xin-si", "ren-wu", "gui-wei", "jia-shen", "yi-you", "bing-xu", "ding-hai", "wu-zi", "ji-chou", "geng-yin", "xin-mao", "ren-chen", "gui-si", "jia-wu", "yi-wei", "bing-shen", "ding-you", "wu-xu", "ji-hai", "geng-zi", "xin-chou", "ren-yin", "gui-mao", "jia-chen", "yi-si", "bing-wu", "ding-wei", "wu-shen", "ji-you", "geng-xu", "xin-hai", "ren-zi", "gui-chou", "jia-yin", "yi-mao", "bing-chen", "ding-si", "wu-wu", "ji-wei", "geng-shen", "xin-you", "ren-xu" ], _c5je544 = {
    format: _c5je528,
    standAlone: _c5je528
}, _c5je545 = {
    basic: _c5je531,
    cldr: _c5je538
}, _c5je546 = {
    format: _c5je534,
    standAlone: _c5je534
}, _c5je547 = {
    basic: _c5je532,
    cldr: _c5je539
}, _c5je548 = {
    "long": _c5je540,
    "short": _c5je533,
    "default": "#,##0.###"
}, _c5je549 = {
    d: {
        d: "d–d"
    },
    h: _c5je9,
    H: {
        H: "HH–HH"
    },
    hm: _c5je122,
    Hm: _c5je42,
    hmv: _c5je140,
    Hmv: _c5je61,
    hv: _c5je22,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "MM–MM"
    },
    Md: _c5je68,
    MEd: _c5je113,
    MMM: {
        M: "LLL–LLL"
    },
    MMMd: _c5je33,
    MMMEd: _c5je114,
    y: {
        y: "U–U"
    },
    yM: _c5je45,
    yMd: _c5je324,
    yMEd: _c5je463,
    yMMM: _c5je46,
    yMMMd: _c5je136,
    yMMMEd: _c5je444,
    yMMMM: _c5je69
}, _c5je550 = {
    d: {
        d: "d–d"
    },
    h: _c5je9,
    H: {
        H: "HH–HH"
    },
    hm: _c5je122,
    Hm: _c5je42,
    hmv: _c5je140,
    Hmv: _c5je61,
    hv: _c5je22,
    Hv: {
        H: "HH–HH v"
    },
    M: {
        M: "M–M"
    },
    Md: _c5je62,
    MEd: _c5je95,
    MMM: {
        M: "MMM–MMM"
    },
    MMMd: _c5je52,
    MMMEd: _c5je96,
    y: {
        y: "y–y G"
    },
    yM: _c5je63,
    yMd: _c5je398,
    yMEd: _c5je461,
    yMMM: _c5je64,
    yMMMd: _c5je357,
    yMMMEd: _c5je427,
    yMMMM: _c5je82
}, _c5je551 = {
    beforeCurrency: _c5je542,
    afterCurrency: _c5je542
}, _c5je552 = {
    "short": _c5je535,
    "default": "#,##0.00 ¤",
    one: "{0} {1}",
    other: "{0} {1}",
    currencySpacing: _c5je551
}, _c5je553 = {
    abbreviated: _c5je543,
    narrow: _c5je543,
    wide: _c5je543
}, _c5je554 = {
    format: _c5je553
}, _c5je555 = {
    scientific: {
        "default": "#E0"
    },
    decimal: _c5je548,
    currency: _c5je552,
    percent: {
        "default": "#,##0%"
    }
}, _c5je556 = [ "Taika (645–650)", "Hakuchi (650–671)", "Hakuhō (672–686)", "Shuchō (686–701)", "Taihō (701–704)", "Keiun (704–708)", "Wadō (708–715)", "Reiki (715–717)", "Yōrō (717–724)", "Jinki (724–729)", "Tenpyō (729–749)", "Tenpyō-kampō (749-749)", "Tenpyō-shōhō (749-757)", "Tenpyō-hōji (757-765)", "Tenpyō-jingo (765-767)", "Jingo-keiun (767-770)", "Hōki (770–780)", "Ten-ō (781-782)", "Enryaku (782–806)", "Daidō (806–810)", "Kōnin (810–824)", "Tenchō (824–834)", "Jōwa (834–848)", "Kajō (848–851)", "Ninju (851–854)", "Saikō (854–857)", "Ten-an (857-859)", "Jōgan (859–877)", "Gangyō (877–885)", "Ninna (885–889)", "Kanpyō (889–898)", "Shōtai (898–901)", "Engi (901–923)", "Enchō (923–931)", "Jōhei (931–938)", "Tengyō (938–947)", "Tenryaku (947–957)", "Tentoku (957–961)", "Ōwa (961–964)", "Kōhō (964–968)", "Anna (968–970)", "Tenroku (970–973)", "Ten’en (973–976)", "Jōgen (976–978)", "Tengen (978–983)", "Eikan (983–985)", "Kanna (985–987)", "Eien (987–989)", "Eiso (989–990)", "Shōryaku (990–995)", "Chōtoku (995–999)", "Chōhō (999–1004)", "Kankō (1004–1012)", "Chōwa (1012–1017)", "Kannin (1017–1021)", "Jian (1021–1024)", "Manju (1024–1028)", "Chōgen (1028–1037)", "Chōryaku (1037–1040)", "Chōkyū (1040–1044)", "Kantoku (1044–1046)", "Eishō (1046–1053)", "Tengi (1053–1058)", "Kōhei (1058–1065)", "Jiryaku (1065–1069)", "Enkyū (1069–1074)", "Shōho (1074–1077)", "Shōryaku (1077–1081)", "Eihō (1081–1084)", "Ōtoku (1084–1087)", "Kanji (1087–1094)", "Kahō (1094–1096)", "Eichō (1096–1097)", "Jōtoku (1097–1099)", "Kōwa (1099–1104)", "Chōji (1104–1106)", "Kashō (1106–1108)", "Tennin (1108–1110)", "Ten-ei (1110-1113)", "Eikyū (1113–1118)", "Gen’ei (1118–1120)", "Hōan (1120–1124)", "Tenji (1124–1126)", "Daiji (1126–1131)", "Tenshō (1131–1132)", "Chōshō (1132–1135)", "Hōen (1135–1141)", "Eiji (1141–1142)", "Kōji (1142–1144)", "Ten’yō (1144–1145)", "Kyūan (1145–1151)", "Ninpei (1151–1154)", "Kyūju (1154–1156)", "Hōgen (1156–1159)", "Heiji (1159–1160)", "Eiryaku (1160–1161)", "Ōho (1161–1163)", "Chōkan (1163–1165)", "Eiman (1165–1166)", "Nin’an (1166–1169)", "Kaō (1169–1171)", "Shōan (1171–1175)", "Angen (1175–1177)", "Jishō (1177–1181)", "Yōwa (1181–1182)", "Juei (1182–1184)", "Genryaku (1184–1185)", "Bunji (1185–1190)", "Kenkyū (1190–1199)", "Shōji (1199–1201)", "Kennin (1201–1204)", "Genkyū (1204–1206)", "Ken’ei (1206–1207)", "Jōgen (1207–1211)", "Kenryaku (1211–1213)", "Kenpō (1213–1219)", "Jōkyū (1219–1222)", "Jōō (1222–1224)", "Gennin (1224–1225)", "Karoku (1225–1227)", "Antei (1227–1229)", "Kanki (1229–1232)", "Jōei (1232–1233)", "Tenpuku (1233–1234)", "Bunryaku (1234–1235)", "Katei (1235–1238)", "Ryakunin (1238–1239)", "En’ō (1239–1240)", "Ninji (1240–1243)", "Kangen (1243–1247)", "Hōji (1247–1249)", "Kenchō (1249–1256)", "Kōgen (1256–1257)", "Shōka (1257–1259)", "Shōgen (1259–1260)", "Bun’ō (1260–1261)", "Kōchō (1261–1264)", "Bun’ei (1264–1275)", "Kenji (1275–1278)", "Kōan (1278–1288)", "Shōō (1288–1293)", "Einin (1293–1299)", "Shōan (1299–1302)", "Kengen (1302–1303)", "Kagen (1303–1306)", "Tokuji (1306–1308)", "Enkyō (1308–1311)", "Ōchō (1311–1312)", "Shōwa (1312–1317)", "Bunpō (1317–1319)", "Genō (1319–1321)", "Genkō (1321–1324)", "Shōchū (1324–1326)", "Karyaku (1326–1329)", "Gentoku (1329–1331)", "Genkō (1331–1334)", "Kenmu (1334–1336)", "Engen (1336–1340)", "Kōkoku (1340–1346)", "Shōhei (1346–1370)", "Kentoku (1370–1372)", "Bunchū (1372–1375)", "Tenju (1375–1379)", "Kōryaku (1379–1381)", "Kōwa (1381–1384)", "Genchū (1384–1392)", "Meitoku (1384–1387)", "Kakei (1387–1389)", "Kōō (1389–1390)", "Meitoku (1390–1394)", "Ōei (1394–1428)", "Shōchō (1428–1429)", "Eikyō (1429–1441)", "Kakitsu (1441–1444)", "Bun’an (1444–1449)", "Hōtoku (1449–1452)", "Kyōtoku (1452–1455)", "Kōshō (1455–1457)", "Chōroku (1457–1460)", "Kanshō (1460–1466)", "Bunshō (1466–1467)", "Ōnin (1467–1469)", "Bunmei (1469–1487)", "Chōkyō (1487–1489)", "Entoku (1489–1492)", "Meiō (1492–1501)", "Bunki (1501–1504)", "Eishō (1504–1521)", "Taiei (1521–1528)", "Kyōroku (1528–1532)", "Tenbun (1532–1555)", "Kōji (1555–1558)", "Eiroku (1558–1570)", "Genki (1570–1573)", "Tenshō (1573–1592)", "Bunroku (1592–1596)", "Keichō (1596–1615)", "Genna (1615–1624)", "Kan’ei (1624–1644)", "Shōho (1644–1648)", "Keian (1648–1652)", "Jōō (1652–1655)", "Meireki (1655–1658)", "Manji (1658–1661)", "Kanbun (1661–1673)", "Enpō (1673–1681)", "Tenna (1681–1684)", "Jōkyō (1684–1688)", "Genroku (1688–1704)", "Hōei (1704–1711)", "Shōtoku (1711–1716)", "Kyōhō (1716–1736)", "Genbun (1736–1741)", "Kanpō (1741–1744)", "Enkyō (1744–1748)", "Kan’en (1748–1751)", "Hōreki (1751–1764)", "Meiwa (1764–1772)", "An’ei (1772–1781)", "Tenmei (1781–1789)", "Kansei (1789–1801)", "Kyōwa (1801–1804)", "Bunka (1804–1818)", "Bunsei (1818–1830)", "Tenpō (1830–1844)", "Kōka (1844–1848)", "Kaei (1848–1854)", "Ansei (1854–1860)", "Man’en (1860–1861)", "Bunkyū (1861–1864)", "Genji (1864–1865)", "Keiō (1865–1868)", "Meiji", "Taishō", "Shōwa", "Heisei" ], _c5je557 = {
    era: {
        displayName: "era"
    },
    year: _c5je508,
    "year-short": _c5je496,
    "year-narrow": _c5je496,
    quarter: _c5je518,
    "quarter-short": _c5je511,
    "quarter-narrow": _c5je511,
    month: _c5je509,
    "month-short": _c5je497,
    "month-narrow": _c5je497,
    week: _c5je519,
    "week-short": _c5je503,
    "week-narrow": _c5je503,
    day: _c5je513,
    "day-short": _c5je487,
    "day-narrow": _c5je487,
    weekday: _c5je70,
    dayperiod: _c5je2,
    hour: _c5je494,
    "hour-short": _c5je491,
    "hour-narrow": _c5je483,
    minute: _c5je504,
    "minute-short": _c5je498,
    "minute-narrow": _c5je493,
    second: _c5je505,
    "second-short": _c5je499,
    "second-narrow": _c5je484,
    zone: _c5je14,
    sun: _c5je428,
    "sun-short": _c5je265,
    "sun-narrow": _c5je141,
    mon: _c5je377,
    "mon-short": _c5je266,
    "mon-narrow": _c5je142,
    tue: _c5je406,
    "tue-short": _c5je267,
    "tue-narrow": _c5je143,
    wed: _c5je438,
    "wed-short": _c5je268,
    "wed-narrow": _c5je144,
    thu: _c5je407,
    "thu-short": _c5je269,
    "thu-narrow": _c5je145,
    fri: _c5je408,
    "fri-short": _c5je270,
    "fri-narrow": _c5je146,
    sat: _c5je378,
    "sat-short": _c5je271,
    "sat-narrow": _c5je147
}, _c5je558 = {
    dateFormats: {
        basic: {},
        cldr: {}
    },
    fields: _c5je557
}, _c5je559 = {
    dayParts: _c5je521,
    days: _c5je554,
    months: _c5je554,
    years: _c5je554,
    zodiacs: _c5je521
}, _c5je560 = {
    dateFormats: _c5je547,
    datePartsOrder: "dmy",
    dateIntervalFormats: _c5je550,
    dateIntervalFallbackFormat: "{0} - {1}",
    dayNames: _c5je536,
    dayPeriods: _c5je546,
    monthNames: _c5je544,
    eraNames: _c5je34,
    quarterNames: _c5je524,
    fields: _c5je557
}, _c5je561 = {
    dateFormats: _c5je545,
    datePartsOrder: "dmy",
    dateIntervalFormats: _c5je549,
    dateIntervalFallbackFormat: "{0} – {1}",
    dayNames: _c5je536,
    dayPeriods: _c5je546,
    cyclicNames: _c5je559,
    monthNames: _c5je537,
    monthPatterns: _c5je510,
    quarterNames: _c5je524,
    fields: _c5je557
};

inter.id = "it";

inter.delimiters = {
    quotationStart: "«",
    quotationEnd: "»",
    alternateQuotationStart: "“",
    alternateQuotationEnd: "”"
};

inter.listPatterns = {
    "default": _c5je302,
    unit: _c5je302,
    unitNarrow: {
        "2": "{0} {1}",
        start: "{0} {1}",
        middle: "{0} {1}",
        end: "{0} {1}"
    },
    unitShort: _c5je302
};

inter.unitPatterns = {
    "long": {
        unit: {
            accelerationGForce: {
                one: "{0} forza g",
                other: "{0} forza g"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} metro al secondo quadrato",
                other: "{0} metri al secondo quadrato"
            },
            angleRevolution: {
                one: "{0} rivoluzione",
                other: "{0} rivoluzioni"
            },
            angleRadian: {
                one: "{0} radiante",
                other: "{0} radianti"
            },
            angleDegree: {
                one: "{0} grado",
                other: "{0} gradi"
            },
            angleArcMinute: {
                one: "{0} primo d’arco",
                other: "{0} primi d’arco"
            },
            angleArcSecond: {
                one: "{0} secondo d’arco",
                other: "{0} secondi d’arco"
            },
            areaSquareKilometer: {
                one: "{0} chilometro quadrato",
                other: "{0} chilometri quadrati"
            },
            areaHectare: {
                one: "{0} ettaro",
                other: "{0} ettari"
            },
            areaSquareMeter: {
                one: "{0} metro quadrato",
                other: "{0} metri quadrati"
            },
            areaSquareCentimeter: {
                one: "{0} centimetro quadrato",
                other: "{0} centimetri quadrati"
            },
            areaSquareMile: {
                one: "{0} miglio quadrato",
                other: "{0} miglia quadrate"
            },
            areaAcre: {
                one: "{0} acro",
                other: "{0} acri"
            },
            areaSquareYard: {
                one: "{0} iarda quadrata",
                other: "{0} iarde quadrate"
            },
            areaSquareFoot: {
                one: "{0} piede quadrato",
                other: "{0} piedi quadrati"
            },
            areaSquareInch: {
                one: "{0} pollice quadrato",
                other: "{0} pollici quadrati"
            },
            concentrKarat: _c5je57,
            consumptionLiterPerKilometer: {
                one: "{0} litro per chilometro",
                other: "{0} litri per chilometro"
            },
            "consumptionLiterPer-100kilometers": {
                one: "{0} litro per 100 chilometri",
                other: "{0} litri per 100 chilometri"
            },
            consumptionMilePerGallon: {
                one: "{0} miglio per gallone",
                other: "{0} miglia per gallone"
            },
            digitalTerabyte: {
                one: "{0} terabyte",
                other: "{0} terabyte"
            },
            digitalTerabit: {
                one: "{0} terabit",
                other: "{0} terabit"
            },
            digitalGigabyte: {
                one: "{0} gigabyte",
                other: "{0} gigabyte"
            },
            digitalGigabit: {
                one: "{0} gigabit",
                other: "{0} gigabit"
            },
            digitalMegabyte: {
                one: "{0} megabyte",
                other: "{0} megabyte"
            },
            digitalMegabit: {
                one: "{0} megabit",
                other: "{0} megabit"
            },
            digitalKilobyte: {
                one: "{0} kilobyte",
                other: "{0} kilobyte"
            },
            digitalKilobit: {
                one: "{0} kilobit",
                other: "{0} kilobit"
            },
            digitalByte: _c5je35,
            digitalBit: _c5je25,
            durationCentury: {
                one: "{0} secolo",
                other: "{0} secoli"
            },
            durationYear: _c5je36,
            durationMonth: _c5je37,
            durationWeek: _c5je89,
            durationDay: _c5je58,
            durationHour: {
                one: "{0} ora",
                other: "{0} ore"
            },
            durationMinute: {
                one: "{0} minuto",
                other: "{0} minuti"
            },
            durationSecond: {
                one: "{0} secondo",
                other: "{0} secondi"
            },
            durationMillisecond: {
                one: "{0} millisecondo",
                other: "{0} millisecondi"
            },
            durationMicrosecond: {
                one: "{0} microsecondo",
                other: "{0} microsecondi"
            },
            durationNanosecond: {
                one: "{0} nanosecondo",
                other: "{0} nanosecondi"
            },
            electricAmpere: {
                one: "{0} ampere",
                other: "{0} ampere"
            },
            electricMilliampere: {
                one: "{0} milliampere",
                other: "{0} milliampere"
            },
            electricOhm: {
                one: "{0} ohm",
                other: "{0} ohm"
            },
            electricVolt: {
                one: "{0} volt",
                other: "{0} volt"
            },
            energyKilocalorie: {
                one: "{0} chilocaloria",
                other: "{0} chilocalorie"
            },
            energyCalorie: _c5je71,
            energyFoodcalorie: _c5je71,
            energyKilojoule: {
                one: "{0} kilojoule",
                other: "{0} kilojoule"
            },
            energyJoule: {
                one: "{0} joule",
                other: "{0} joule"
            },
            energyKilowattHour: {
                one: "{0} chilowattora",
                other: "{0} chilowattora"
            },
            frequencyGigahertz: {
                one: "{0} gigahertz",
                other: "{0} gigahertz"
            },
            frequencyMegahertz: {
                one: "{0} megahertz",
                other: "{0} megahertz"
            },
            frequencyKilohertz: {
                one: "{0} kilohertz",
                other: "{0} kilohertz"
            },
            frequencyHertz: {
                one: "{0} hertz",
                other: "{0} hertz"
            },
            lengthKilometer: {
                one: "{0} chilometro",
                other: "{0} chilometri"
            },
            lengthMeter: {
                one: "{0} metro",
                other: "{0} metri"
            },
            lengthDecimeter: {
                one: "{0} decimetro",
                other: "{0} decimetri"
            },
            lengthCentimeter: {
                one: "{0} centimetro",
                other: "{0} centimetri"
            },
            lengthMillimeter: {
                one: "{0} millimetro",
                other: "{0} millimetri"
            },
            lengthMicrometer: {
                one: "{0} micrometro",
                other: "{0} micrometri"
            },
            lengthNanometer: {
                one: "{0} nanometro",
                other: "{0} nanometri"
            },
            lengthPicometer: {
                one: "{0} picometro",
                other: "{0} picometri"
            },
            lengthMile: {
                one: "{0} miglio",
                other: "{0} miglia"
            },
            lengthYard: {
                one: "{0} iarda",
                other: "{0} iarde"
            },
            lengthFoot: {
                one: "{0} piede",
                other: "{0} piedi"
            },
            lengthInch: {
                one: "{0} pollice",
                other: "{0} pollici"
            },
            lengthParsec: {
                one: "{0} parsec",
                other: "{0} parsec"
            },
            lengthLightYear: {
                one: "{0} anno luce",
                other: "{0} anni luce"
            },
            lengthAstronomicalUnit: {
                one: "{0} unità astronomica",
                other: "{0} unità astronomiche"
            },
            lengthNauticalMile: {
                one: "{0} miglio nautico",
                other: "{0} miglia nautiche"
            },
            lengthMileScandinavian: {
                one: "{0} miglio scandinavo",
                other: "{0} miglia scandinave"
            },
            lightLux: {
                one: "{0} lux",
                other: "{0} lux"
            },
            massMetricTon: {
                one: "{0} tonnellata metrica",
                other: "{0} tonnellate metriche"
            },
            massKilogram: {
                one: "{0} chilogrammo",
                other: "{0} chilogrammi"
            },
            massGram: {
                one: "{0} grammo",
                other: "{0} grammi"
            },
            massMilligram: {
                one: "{0} milligrammo",
                other: "{0} milligrammi"
            },
            massMicrogram: {
                one: "{0} microgrammo",
                other: "{0} microgrammi"
            },
            massTon: {
                one: "{0} tonnellata",
                other: "{0} tonnellate"
            },
            massPound: {
                one: "{0} libbra",
                other: "{0} libbre"
            },
            massOunce: {
                one: "{0} oncia",
                other: "{0} once"
            },
            massOunceTroy: {
                one: "{0} oncia troy",
                other: "{0} once troy"
            },
            massCarat: _c5je57,
            powerGigawatt: {
                one: "{0} gigawatt",
                other: "{0} gigawatt"
            },
            powerMegawatt: {
                one: "{0} megawatt",
                other: "{0} megawatt"
            },
            powerKilowatt: {
                one: "{0} kilowatt",
                other: "{0} kilowatt"
            },
            powerWatt: {
                one: "{0} watt",
                other: "{0} watt"
            },
            powerMilliwatt: {
                one: "{0} milliwatt",
                other: "{0} milliwatt"
            },
            powerHorsepower: {
                one: "{0} cavallo vapore",
                other: "{0} cavalli vapore"
            },
            pressureHectopascal: {
                one: "{0} ettopascal",
                other: "{0} ettopascal"
            },
            pressureMillimeterOfMercury: {
                one: "{0} millimetro di mercurio",
                other: "{0} millimetri di mercurio"
            },
            pressurePoundPerSquareInch: {
                one: "{0} libbra per pollice quadrato",
                other: "{0} libbre per pollice quadrato"
            },
            pressureInchHg: {
                one: "{0} pollice di mercurio",
                other: "{0} pollici di mercurio"
            },
            pressureMillibar: {
                one: "{0} millibar",
                other: "{0} millibar"
            },
            speedKilometerPerHour: {
                one: "{0} chilometro orario",
                other: "{0} chilometri orari"
            },
            speedMeterPerSecond: {
                one: "{0} metro al secondo",
                other: "{0} metri al secondo"
            },
            speedMilePerHour: {
                one: "{0} miglio all’ora",
                other: "{0} miglia all’ora"
            },
            speedKnot: {
                one: "{0} nodo",
                other: "{0} nodi"
            },
            temperatureGeneric: _c5je5,
            temperatureCelsius: {
                one: "{0} grado Celsius",
                other: "{0} gradi Celsius"
            },
            temperatureFahrenheit: {
                one: "{0} grado Fahrenheit",
                other: "{0} gradi Fahrenheit"
            },
            temperatureKelvin: {
                one: "{0} Kelvin",
                other: "{0} Kelvin"
            },
            volumeCubicKilometer: {
                one: "{0} chilometro cubo",
                other: "{0} chilometri cubi"
            },
            volumeCubicMeter: {
                one: "{0} metro cubo",
                other: "{0} metri cubi"
            },
            volumeCubicCentimeter: {
                one: "{0} centimetro cubo",
                other: "{0} centimetri cubi"
            },
            volumeCubicMile: {
                one: "{0} miglio cubo",
                other: "{0} miglia cube"
            },
            volumeCubicYard: {
                one: "{0} iarda cubica",
                other: "{0} iarde cubiche"
            },
            volumeCubicFoot: {
                one: "{0} piede cubo",
                other: "{0} piedi cubi"
            },
            volumeCubicInch: {
                one: "{0} pollice cubo",
                other: "{0} pollici cubi"
            },
            volumeMegaliter: {
                one: "{0} megalitro",
                other: "{0} megalitri"
            },
            volumeHectoliter: {
                one: "{0} ettolitro",
                other: "{0} ettolitri"
            },
            volumeLiter: {
                one: "{0} litro",
                other: "{0} litri"
            },
            volumeDeciliter: {
                one: "{0} decilitro",
                other: "{0} decilitri"
            },
            volumeCentiliter: {
                one: "{0} centilitro",
                other: "{0} centilitri"
            },
            volumeMilliliter: {
                one: "{0} millilitro",
                other: "{0} millilitri"
            },
            volumePintMetric: {
                one: "{0} pinta metrica",
                other: "{0} pinte metriche"
            },
            volumeCupMetric: {
                one: "{0} tazza metrica",
                other: "{0} tazze metriche"
            },
            volumeAcreFoot: {
                one: "{0} acre-foot",
                other: "{0} acre-feet"
            },
            volumeGallon: {
                one: "{0} gallone",
                other: "{0} galloni"
            },
            volumeQuart: {
                one: "{0} quarto",
                other: "{0} quarti"
            },
            volumePint: {
                one: "{0} pinta",
                other: "{0} pinte"
            },
            volumeCup: {
                one: "{0} tazza",
                other: "{0} tazze"
            },
            volumeFluidOunce: {
                one: "{0} oncia fluida",
                other: "{0} once fluide"
            },
            volumeTablespoon: {
                one: "{0} cucchiaio da tavola",
                other: "{0} cucchiai da tavola"
            },
            volumeTeaspoon: {
                one: "{0} cucchiaio da tè",
                other: "{0} cucchiai da tè"
            }
        },
        compoundUnit: {
            per: "{0} al {1}"
        }
    },
    "short": {
        unit: {
            accelerationGForce: {
                one: "{0} G",
                other: "{0} G"
            },
            accelerationMeterPerSecondSquared: {
                one: "{0} m/s²",
                other: "{0} m/s²"
            },
            angleRevolution: {
                one: "{0} riv",
                other: "{0} riv"
            },
            angleRadian: {
                one: "{0} rad",
                other: "{0} rad"
            },
            angleDegree: _c5je5,
            angleArcMinute: {
                one: "{0}′",
                other: "{0}′"
            },
            angleArcSecond: _c5je6,
            areaSquareKilometer: {
                one: "{0} km²",
                other: "{0} km²"
            },
            areaHectare: {
                one: "{0} ha",
                other: "{0} ha"
            },
            areaSquareMeter: {
                one: "{0} m²",
                other: "{0} m²"
            },
            areaSquareCentimeter: {
                one: "{0} cm²",
                other: "{0} cm²"
            },
            areaSquareMile: {
                one: "{0} mi²",
                other: "{0} mi²"
            },
            areaAcre: {
                one: "{0} ac",
                other: "{0} ac"
            },
            areaSquareYard: {
                one: "{0} yd²",
                other: "{0} yd²"
            },
            areaSquareFoot: {
                one: "{0} ft²",
                other: "{0} ft²"
            },
            areaSquareInch: {
                one: "{0} in²",
                other: "{0} in²"
            },
            concentrKarat: _c5je16,
            consumptionLiterPerKilometer: {
                one: "{0} L/km",
                other: "{0} L/km"
            },
            "consumptionLiterPer-100kilometers": _c5je72,
            consumptionMilePerGallon: {
                one: "{0} mpg",
                other: "{0} mpg"
            },
            digitalTerabyte: {
                one: "{0} TB",
                other: "{0} TB"
            },
            digitalTerabit: {
                one: "{0} Tb",
                other: "{0} Tb"
            },
            digitalGigabyte: {
                one: "{0} GB",
                other: "{0} GB"
            },
            digitalGigabit: {
                one: "{0} Gb",
                other: "{0} Gb"
            },
            digitalMegabyte: {
                one: "{0} MB",
                other: "{0} MB"
            },
            digitalMegabit: {
                one: "{0} Mb",
                other: "{0} Mb"
            },
            digitalKilobyte: {
                one: "{0} kB",
                other: "{0} kB"
            },
            digitalKilobit: {
                one: "{0} kb",
                other: "{0} kb"
            },
            digitalByte: _c5je35,
            digitalBit: _c5je25,
            durationCentury: {
                one: "{0} sec.",
                other: "{0} secc."
            },
            durationYear: _c5je36,
            durationMonth: _c5je37,
            durationWeek: _c5je89,
            durationDay: _c5je58,
            durationHour: {
                one: "{0} h",
                other: "{0} h"
            },
            durationMinute: {
                one: "{0} min",
                other: "{0} min"
            },
            durationSecond: {
                one: "{0} s",
                other: "{0} s"
            },
            durationMillisecond: {
                one: "{0} ms",
                other: "{0} ms"
            },
            durationMicrosecond: {
                one: "{0} μs",
                other: "{0} μs"
            },
            durationNanosecond: {
                one: "{0} ns",
                other: "{0} ns"
            },
            electricAmpere: {
                one: "{0} A",
                other: "{0} A"
            },
            electricMilliampere: {
                one: "{0} mA",
                other: "{0} mA"
            },
            electricOhm: {
                one: "{0} Ω",
                other: "{0} Ω"
            },
            electricVolt: {
                one: "{0} V",
                other: "{0} V"
            },
            energyKilocalorie: {
                one: "{0} kcal",
                other: "{0} kcal"
            },
            energyCalorie: {
                one: "{0} cal",
                other: "{0} cal"
            },
            energyFoodcalorie: {
                one: "{0} Cal",
                other: "{0} Cal"
            },
            energyKilojoule: {
                one: "{0} kJ",
                other: "{0} kJ"
            },
            energyJoule: {
                one: "{0} J",
                other: "{0} J"
            },
            energyKilowattHour: {
                one: "{0} kWh",
                other: "{0} kWh"
            },
            frequencyGigahertz: {
                one: "{0} GHz",
                other: "{0} GHz"
            },
            frequencyMegahertz: {
                one: "{0} MHz",
                other: "{0} MHz"
            },
            frequencyKilohertz: {
                one: "{0} kHz",
                other: "{0} kHz"
            },
            frequencyHertz: {
                one: "{0} Hz",
                other: "{0} Hz"
            },
            lengthKilometer: {
                one: "{0} km",
                other: "{0} km"
            },
            lengthMeter: {
                one: "{0} m",
                other: "{0} m"
            },
            lengthDecimeter: {
                one: "{0} dm",
                other: "{0} dm"
            },
            lengthCentimeter: {
                one: "{0} cm",
                other: "{0} cm"
            },
            lengthMillimeter: {
                one: "{0} mm",
                other: "{0} mm"
            },
            lengthMicrometer: {
                one: "{0} µm",
                other: "{0} µm"
            },
            lengthNanometer: {
                one: "{0} nm",
                other: "{0} nm"
            },
            lengthPicometer: {
                one: "{0} pm",
                other: "{0} pm"
            },
            lengthMile: {
                one: "{0} mi",
                other: "{0} mi"
            },
            lengthYard: {
                one: "{0} yd",
                other: "{0} yd"
            },
            lengthFoot: {
                one: "{0} ft",
                other: "{0} ft"
            },
            lengthInch: {
                one: "{0} in",
                other: "{0} in"
            },
            lengthParsec: {
                one: "{0} pc",
                other: "{0} pc"
            },
            lengthLightYear: {
                one: "{0} al",
                other: "{0} al"
            },
            lengthAstronomicalUnit: {
                one: "{0} au",
                other: "{0} au"
            },
            lengthNauticalMile: {
                one: "{0} nmi",
                other: "{0} nmi"
            },
            lengthMileScandinavian: {
                one: "{0} smi",
                other: "{0} smi"
            },
            lightLux: {
                one: "{0} lx",
                other: "{0} lx"
            },
            massMetricTon: {
                one: "{0} t",
                other: "{0} t"
            },
            massKilogram: {
                one: "{0} kg",
                other: "{0} kg"
            },
            massGram: {
                one: "{0} g",
                other: "{0} g"
            },
            massMilligram: {
                one: "{0} mg",
                other: "{0} mg"
            },
            massMicrogram: {
                one: "{0} µg",
                other: "{0} µg"
            },
            massTon: {
                one: "{0} tn",
                other: "{0} tn"
            },
            massPound: {
                one: "{0} lb",
                other: "{0} lb"
            },
            massOunce: {
                one: "{0} oz",
                other: "{0} oz"
            },
            massOunceTroy: {
                one: "{0} ozt",
                other: "{0} ozt"
            },
            massCarat: _c5je16,
            powerGigawatt: {
                one: "{0} GW",
                other: "{0} GW"
            },
            powerMegawatt: {
                one: "{0} MW",
                other: "{0} MW"
            },
            powerKilowatt: {
                one: "{0} kW",
                other: "{0} kW"
            },
            powerWatt: {
                one: "{0} W",
                other: "{0} W"
            },
            powerMilliwatt: {
                one: "{0} mW",
                other: "{0} mW"
            },
            powerHorsepower: {
                one: "{0} hp",
                other: "{0} hp"
            },
            pressureHectopascal: {
                one: "{0} hPa",
                other: "{0} hPa"
            },
            pressureMillimeterOfMercury: {
                one: "{0} mm Hg",
                other: "{0} mm Hg"
            },
            pressurePoundPerSquareInch: {
                one: "{0} psi",
                other: "{0} psi"
            },
            pressureInchHg: {
                one: "{0} inHg",
                other: "{0} inHg"
            },
            pressureMillibar: {
                one: "{0} mbar",
                other: "{0} mbar"
            },
            speedKilometerPerHour: {
                one: "{0} km/h",
                other: "{0} km/h"
            },
            speedMeterPerSecond: {
                one: "{0} m/s",
                other: "{0} m/s"
            },
            speedMilePerHour: {
                one: "{0} mi/h",
                other: "{0} mi/h"
            },
            speedKnot: {
                one: "{0} kn",
                other: "{0} kn"
            },
            temperatureGeneric: _c5je5,
            temperatureCelsius: _c5je17,
            temperatureFahrenheit: {
                one: "{0} °F",
                other: "{0} °F"
            },
            temperatureKelvin: {
                one: "{0} K",
                other: "{0} K"
            },
            volumeCubicKilometer: {
                one: "{0} km³",
                other: "{0} km³"
            },
            volumeCubicMeter: {
                one: "{0} m³",
                other: "{0} m³"
            },
            volumeCubicCentimeter: {
                one: "{0} cm³",
                other: "{0} cm³"
            },
            volumeCubicMile: {
                one: "{0} mi³",
                other: "{0} mi³"
            },
            volumeCubicYard: {
                one: "{0} yd³",
                other: "{0} yd³"
            },
            volumeCubicFoot: {
                one: "{0} ft³",
                other: "{0} ft³"
            },
            volumeCubicInch: {
                one: "{0} in³",
                other: "{0} in³"
            },
            volumeMegaliter: {
                one: "{0} Ml",
                other: "{0} Ml"
            },
            volumeHectoliter: {
                one: "{0} hl",
                other: "{0} hl"
            },
            volumeLiter: {
                one: "{0} l",
                other: "{0} l"
            },
            volumeDeciliter: {
                one: "{0} dl",
                other: "{0} dl"
            },
            volumeCentiliter: {
                one: "{0} cl",
                other: "{0} cl"
            },
            volumeMilliliter: {
                one: "{0} ml",
                other: "{0} ml"
            },
            volumePintMetric: {
                one: "{0} mpt",
                other: "{0} mpt"
            },
            volumeCupMetric: {
                one: "{0} mc",
                other: "{0} mc"
            },
            volumeAcreFoot: {
                one: "{0} ac ft",
                other: "{0} ac ft"
            },
            volumeGallon: {
                one: "{0} gal",
                other: "{0} gal"
            },
            volumeQuart: {
                one: "{0} qt",
                other: "{0} qt"
            },
            volumePint: {
                one: "{0} pt",
                other: "{0} pt"
            },
            volumeCup: {
                one: "{0} c",
                other: "{0} c"
            },
            volumeFluidOunce: {
                one: "{0} fl oz",
                other: "{0} fl oz"
            },
            volumeTablespoon: {
                one: "{0} tbsp",
                other: "{0} tbsp"
            },
            volumeTeaspoon: {
                one: "{0} tsp",
                other: "{0} tsp"
            },
            concentrMilligramPerDeciliter: {
                other: "{0} mg/dL"
            },
            concentrMillimolePerLiter: {
                other: "{0} mmol/L"
            },
            concentrPartPerMillion: {
                other: "{0} ppm"
            },
            consumptionMilePerGallonImperial: {
                other: "{0} mpg Imp."
            },
            lengthFurlong: {
                other: "{0} fur"
            },
            lengthFathom: {
                other: "{0} fm"
            },
            massStone: {
                other: "{0} st"
            },
            volumeBushel: {
                other: "{0} bu"
            },
            volumeGallonImperial: {
                other: "{0} gal Imp."
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    },
    narrow: {
        unit: {
            accelerationGForce: {
                one: "{0}G",
                other: "{0}G"
            },
            angleDegree: _c5je5,
            angleArcMinute: _c5je18,
            angleArcSecond: _c5je7,
            areaSquareKilometer: {
                one: "{0}km²",
                other: "{0}km²"
            },
            areaHectare: {
                one: "{0}ha",
                other: "{0}ha"
            },
            areaSquareMeter: {
                one: "{0}m²",
                other: "{0}m²"
            },
            areaSquareMile: {
                one: "{0}mi²",
                other: "{0}mi²"
            },
            areaAcre: {
                one: "{0}ac",
                other: "{0}ac"
            },
            areaSquareFoot: {
                one: "{0}ft²",
                other: "{0}ft²"
            },
            "consumptionLiterPer-100kilometers": _c5je72,
            durationYear: {
                one: "{0}anno",
                other: "{0}anni"
            },
            durationMonth: {
                one: "{0}mesi",
                other: "{0}mesi"
            },
            durationWeek: {
                one: "{0}sett.",
                other: "{0}sett."
            },
            durationDay: {
                one: "{0}gg",
                other: "{0}gg"
            },
            durationHour: {
                one: "{0}h",
                other: "{0}h"
            },
            durationMinute: _c5je18,
            durationSecond: _c5je7,
            durationMillisecond: {
                one: "{0}ms",
                other: "{0}ms"
            },
            lengthKilometer: {
                one: "{0}km",
                other: "{0}km"
            },
            lengthMeter: {
                one: "{0}m",
                other: "{0}m"
            },
            lengthCentimeter: {
                one: "{0}cm",
                other: "{0}cm"
            },
            lengthMillimeter: {
                one: "{0}mm",
                other: "{0}mm"
            },
            lengthPicometer: {
                one: "{0}pm",
                other: "{0}pm"
            },
            lengthMile: {
                one: "{0}mi",
                other: "{0}mi"
            },
            lengthYard: {
                one: "{0}yd",
                other: "{0}yd"
            },
            lengthFoot: {
                one: "{0}ft",
                other: "{0}ft"
            },
            lengthInch: _c5je6,
            lengthLightYear: {
                one: "{0}al",
                other: "{0}al"
            },
            massKilogram: {
                one: "{0}kg",
                other: "{0}kg"
            },
            massGram: {
                one: "{0}g",
                other: "{0}g"
            },
            massPound: {
                one: "{0}lb",
                other: "{0}lb"
            },
            massOunce: {
                one: "{0}oz",
                other: "{0}oz"
            },
            powerKilowatt: {
                one: "{0}kW",
                other: "{0}kW"
            },
            powerWatt: {
                one: "{0}W",
                other: "{0}W"
            },
            powerHorsepower: {
                one: "{0}hp",
                other: "{0}hp"
            },
            pressureHectopascal: {
                one: "{0}hPa",
                other: "{0}hPa"
            },
            pressureInchHg: {
                one: "{0}inHg",
                other: "{0}inHg"
            },
            pressureMillibar: {
                one: "{0}mbar",
                other: "{0}mbar"
            },
            speedKilometerPerHour: {
                one: "{0}km/h",
                other: "{0}km/h"
            },
            speedMeterPerSecond: {
                one: "{0}m/s",
                other: "{0}m/s"
            },
            speedMilePerHour: {
                one: "{0}mi/h",
                other: "{0}mi/h"
            },
            temperatureCelsius: _c5je17,
            temperatureFahrenheit: {
                one: "{0}°F",
                other: "{0}°F"
            },
            volumeCubicKilometer: {
                one: "{0}km³",
                other: "{0}km³"
            },
            volumeCubicMile: {
                one: "{0}mi³",
                other: "{0}mi³"
            },
            volumeLiter: {
                one: "{0}l",
                other: "{0}l"
            }
        },
        compoundUnit: {
            per: "{0}/{1}"
        }
    }
};

inter.timeZoneFormats = {
    hour: [ "+HH:mm", "-HH:mm" ],
    gmt: "GMT{0}",
    gmtZero: "GMT",
    region: "Ora {0}",
    fallback: "{1} ({0})",
    regions: {
        daylight: "Ora legale: {0}",
        standard: "Ora standard: {0}"
    }
};

inter.characters = {
    exemplar: {
        "default": [ "a", "à", "b", "c", "d", "e", "é", "è", "f", "g", "h", "i", "ì", "j", "k", "l", "m", "n", "o", "ó", "ò", "p", "q", "r", "s", "t", "u", "ù", "v", "w", "x", "y", "z" ],
        auxiliary: [ "ª", "á", "â", "å", "ä", "ã", "æ", "ç", "ê", "ë", "í", "î", "ï", "ñ", "º", "ô", "ö", "õ", "ø", "œ", "ß", "ú", "û", "ü", "ÿ" ],
        index: [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" ],
        punctuation: [ "\\-", "—", ",", ";", "\\:", "!", "?", ".", "…", "'", "’", '"', "“", "”", "«", "»", "(", ")", "\\[", "\\]", "\\{", "\\}", "@", "/" ]
    },
    ellipsis: {
        "final": "{0}…",
        initial: "…{0}",
        medial: "{0}…{1}",
        "word-final": "{0} …",
        "word-initial": "… {0}",
        "word-medial": "{0} … {1}"
    },
    moreInformation: "?"
};

inter.numbers = {
    ahom: {
        symbols: _c5je506,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    arab: {
        symbols: P.numbers.ahom.symbols,
        formats: _c5je555,
        digits: [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]
    },
    arabext: {
        symbols: {
            decimal: "٫",
            group: "٬",
            list: "؛",
            percentSign: "٪",
            plusSign: "‎+‎",
            minusSign: "‎-‎",
            exponential: "×۱۰^",
            superscriptingExponent: "×",
            perMille: "؉",
            infinity: "∞",
            nan: "NaN",
            timeSeparator: "٫"
        },
        formats: _c5je555,
        digits: [ "۰", "۱", "۲", "۳", "۴", "۵", "۶", "۷", "۸", "۹" ]
    },
    armn: {
        symbols: _c5je506,
        digits: "renderArmenianUpper"
    },
    armnlow: {
        symbols: _c5je506,
        digits: "renderArmenianLower"
    },
    bali: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "᭐", "᭑", "᭒", "᭓", "᭔", "᭕", "᭖", "᭗", "᭘", "᭙" ]
    },
    beng: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "০", "১", "২", "৩", "৪", "৫", "৬", "৭", "৮", "৯" ]
    },
    brah: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cakm: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    cham: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "꩐", "꩑", "꩒", "꩓", "꩔", "꩕", "꩖", "꩗", "꩘", "꩙" ]
    },
    cyrl: {
        symbols: _c5je506,
        digits: "renderCyrillicLower"
    },
    deva: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "०", "१", "२", "३", "४", "५", "६", "७", "८", "९" ]
    },
    ethi: {
        symbols: _c5je506,
        digits: "renderEthiopic"
    },
    finance: _c5je507,
    fullwide: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "０", "１", "２", "３", "４", "５", "６", "７", "８", "９" ]
    },
    geor: {
        symbols: _c5je506,
        digits: "renderGeorgian"
    },
    grek: {
        symbols: _c5je506,
        digits: "renderGreekUpper"
    },
    greklow: {
        symbols: _c5je506,
        digits: "renderGreekLower"
    },
    gujr: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "૦", "૧", "૨", "૩", "૪", "૫", "૬", "૭", "૮", "૯" ]
    },
    guru: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "੦", "੧", "੨", "੩", "੪", "੫", "੬", "੭", "੮", "੯" ]
    },
    hanidays: {
        symbols: _c5je506,
        digits: "renderSpelloutNumberingDays"
    },
    hanidec: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "〇", "一", "二", "三", "四", "五", "六", "七", "八", "九" ]
    },
    hans: _c5je512,
    hansfin: _c5je514,
    hant: _c5je512,
    hantfin: _c5je514,
    hebr: {
        symbols: _c5je506,
        digits: "renderHebrew"
    },
    hmng: {
        symbols: _c5je506,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    java: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "꧐", "꧑", "꧒", "꧓", "꧔", "꧕", "꧖", "꧗", "꧘", "꧙" ]
    },
    jpan: _c5je512,
    jpanfin: _c5je514,
    kali: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "꤀", "꤁", "꤂", "꤃", "꤄", "꤅", "꤆", "꤇", "꤈", "꤉" ]
    },
    khmr: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "០", "១", "២", "៣", "៤", "៥", "៦", "៧", "៨", "៩" ]
    },
    knda: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "೦", "೧", "೨", "೩", "೪", "೫", "೬", "೭", "೮", "೯" ]
    },
    lana: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "᪀", "᪁", "᪂", "᪃", "᪄", "᪅", "᪆", "᪇", "᪈", "᪉" ]
    },
    lanatham: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "᪐", "᪑", "᪒", "᪓", "᪔", "᪕", "᪖", "᪗", "᪘", "᪙" ]
    },
    laoo: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "໐", "໑", "໒", "໓", "໔", "໕", "໖", "໗", "໘", "໙" ]
    },
    latn: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" ]
    },
    lepc: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "᱀", "᱁", "᱂", "᱃", "᱄", "᱅", "᱆", "᱇", "᱈", "᱉" ]
    },
    limb: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "᥆", "᥇", "᥈", "᥉", "᥊", "᥋", "᥌", "᥍", "᥎", "᥏" ]
    },
    mathbold: {
        symbols: _c5je506,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathdbl: {
        symbols: _c5je506,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathmono: {
        symbols: _c5je506,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsanb: {
        symbols: _c5je506,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mathsans: {
        symbols: _c5je506,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mlym: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "൦", "൧", "൨", "൩", "൪", "൫", "൬", "൭", "൮", "൯" ]
    },
    modi: {
        symbols: _c5je506,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mong: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "᠐", "᠑", "᠒", "᠓", "᠔", "᠕", "᠖", "᠗", "᠘", "᠙" ]
    },
    mroo: {
        symbols: _c5je506,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    mtei: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "꯰", "꯱", "꯲", "꯳", "꯴", "꯵", "꯶", "꯷", "꯸", "꯹" ]
    },
    mymr: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "၀", "၁", "၂", "၃", "၄", "၅", "၆", "၇", "၈", "၉" ]
    },
    mymrshan: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "႐", "႑", "႒", "႓", "႔", "႕", "႖", "႗", "႘", "႙" ]
    },
    mymrtlng: {
        symbols: _c5je506,
        digits: [ "꧰", "꧱", "꧲", "꧳", "꧴", "꧵", "꧶", "꧷", "꧸", "꧹" ]
    },
    "native": _c5je507,
    nkoo: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "߀", "߁", "߂", "߃", "߄", "߅", "߆", "߇", "߈", "߉" ]
    },
    olck: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "᱐", "᱑", "᱒", "᱓", "᱔", "᱕", "᱖", "᱗", "᱘", "᱙" ]
    },
    orya: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "୦", "୧", "୨", "୩", "୪", "୫", "୬", "୭", "୮", "୯" ]
    },
    osma: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    roman: {
        symbols: _c5je506,
        digits: "renderRomanUpper"
    },
    romanlow: {
        symbols: _c5je506,
        digits: "renderRomanLower"
    },
    saur: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "꣐", "꣑", "꣒", "꣓", "꣔", "꣕", "꣖", "꣗", "꣘", "꣙" ]
    },
    shrd: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sind: {
        symbols: _c5je506,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sinh: {
        symbols: _c5je506,
        digits: [ "෦", "෧", "෨", "෩", "෪", "෫", "෬", "෭", "෮", "෯" ]
    },
    sora: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    sund: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "᮰", "᮱", "᮲", "᮳", "᮴", "᮵", "᮶", "᮷", "᮸", "᮹" ]
    },
    takr: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    talu: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "᧐", "᧑", "᧒", "᧓", "᧔", "᧕", "᧖", "᧗", "᧘", "᧙" ]
    },
    taml: {
        symbols: _c5je506,
        digits: "renderTamil"
    },
    tamldec: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "௦", "௧", "௨", "௩", "௪", "௫", "௬", "௭", "௮", "௯" ]
    },
    telu: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "౦", "౧", "౨", "౩", "౪", "౫", "౬", "౭", "౮", "౯" ]
    },
    thai: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "๐", "๑", "๒", "๓", "๔", "๕", "๖", "๗", "๘", "๙" ]
    },
    tirh: {
        symbols: _c5je506,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    },
    tibt: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "༠", "༡", "༢", "༣", "༤", "༥", "༦", "༧", "༨", "༩" ]
    },
    traditio: _c5je507,
    vaii: {
        symbols: _c5je506,
        formats: _c5je555,
        digits: [ "꘠", "꘡", "꘢", "꘣", "꘤", "꘥", "꘦", "꘧", "꘨", "꘩" ]
    },
    wara: {
        symbols: _c5je506,
        digits: [ "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�" ]
    }
};

inter.calendars = {
    buddhist: {
        dateFormats: _c5je547,
        datePartsOrder: "dmy",
        dateIntervalFormats: _c5je550,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _c5je536,
        dayPeriods: _c5je546,
        monthNames: _c5je541,
        eraNames: {
            wide: [ "EB" ],
            abbreviated: [ "EB" ]
        },
        quarterNames: _c5je524,
        fields: _c5je557
    },
    chinese: _c5je561,
    coptic: {
        dateFormats: _c5je547,
        datePartsOrder: "dmy",
        dateIntervalFormats: _c5je550,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _c5je536,
        dayPeriods: _c5je546,
        monthNames: {
            format: _c5je527,
            standAlone: _c5je527
        },
        eraNames: _c5je116,
        quarterNames: _c5je524,
        fields: _c5je557
    },
    dangi: _c5je561,
    ethioaa: _c5je558,
    ethiopic: {
        dateFormats: _c5je547,
        datePartsOrder: "dmy",
        dateIntervalFormats: _c5je550,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _c5je536,
        dayPeriods: _c5je546,
        monthNames: {
            format: _c5je529,
            standAlone: _c5je529
        },
        eraNames: _c5je116,
        quarterNames: _c5je524,
        fields: _c5je557
    },
    gregorian: {
        dateFormats: {
            basic: {
                fullDate: "EEEE d MMMM y",
                longDate: "d MMMM y",
                mediumDate: "dd MMM y",
                shortDate: "dd/MM/yy",
                fullTime: "HH:mm:ss zzzz",
                longTime: "HH:mm:ss z",
                mediumTime: "HH:mm:ss",
                shortTime: "HH:mm",
                shortDateTime: "dd/MM/yy, HH:mm",
                mediumDateTime: "dd MMM y, HH:mm:ss",
                longDateTime: "d MMMM y HH:mm:ss z",
                fullDateTime: "EEEE d MMMM y HH:mm:ss zzzz"
            },
            cldr: {
                d: "d",
                E: "ccc",
                Ed: "E d",
                Ehm: "E h:mm a",
                EHm: "E HH:mm",
                Ehms: "E h:mm:ss a",
                EHms: "E HH:mm:ss",
                Gy: "y G",
                GyMMM: "MMM y G",
                GyMMMd: "d MMM y G",
                GyMMMEd: "E d MMM y G",
                h: "h a",
                H: "HH",
                hm: "h:mm a",
                Hm: "HH:mm",
                hms: "h:mm:ss a",
                Hms: "HH:mm:ss",
                hmsv: "h:mm:ss a v",
                Hmsv: "HH:mm:ss v",
                hmv: "h:mm a v",
                Hmv: "HH:mm v",
                M: "L",
                Md: "d/M",
                MEd: "E d/M",
                MMM: "LLL",
                MMMd: "d MMM",
                MMMEd: "E d MMM",
                MMMMd: "d MMMM",
                ms: "mm:ss",
                y: "y",
                yM: "M/y",
                yMd: "d/M/y",
                yMEd: "E d/M/y",
                yMMM: "MMM y",
                yMMMd: "d MMM y",
                yMMMEd: "E d MMM y",
                yMMMM: "MMMM y",
                yQQQ: "QQQ y",
                yQQQQ: "QQQQ y"
            }
        },
        datePartsOrder: "dmy",
        dateIntervalFormats: {
            d: {
                d: "d–d"
            },
            h: _c5je9,
            H: {
                H: "HH–HH"
            },
            hm: _c5je122,
            Hm: _c5je42,
            hmv: _c5je140,
            Hmv: _c5je61,
            hv: _c5je22,
            Hv: {
                H: "HH–HH v"
            },
            M: {
                M: "M–M"
            },
            Md: _c5je62,
            MEd: _c5je95,
            MMM: {
                M: "MMM–MMM"
            },
            MMMd: _c5je52,
            MMMEd: _c5je96,
            y: {
                y: "y–y"
            },
            yM: {
                M: "MM/y – MM/y",
                y: "MM/y – MM/y"
            },
            yMd: {
                d: "dd/MM/y – dd/MM/y",
                M: "dd/MM/y – dd/MM/y",
                y: "dd/MM/y – dd/MM/y"
            },
            yMEd: {
                d: "E dd/MM/y – E dd/MM/y",
                M: "E dd/MM/y – E dd/MM/y",
                y: "E dd/MM/y – E dd/MM/y"
            },
            yMMM: {
                M: "MMM–MMM y",
                y: "MMM y – MMM y"
            },
            yMMMd: {
                d: "dd–dd MMM y",
                M: "dd MMM – dd MMM y",
                y: "dd MMM y – dd MMM y"
            },
            yMMMEd: {
                d: "E d – E d MMM y",
                M: "E d MMM – E d MMM y",
                y: "E d MMM y – E d MMM y"
            },
            yMMMM: {
                M: "MMMM–MMMM y",
                y: "MMMM y – MMMM y"
            }
        },
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _c5je536,
        dayPeriods: _c5je546,
        monthNames: _c5je541,
        eraNames: {
            wide: [ "a.C.", "d.C." ],
            abbreviated: [ "a.C.", "d.C." ]
        },
        quarterNames: _c5je524,
        fields: _c5je557
    },
    hebrew: {
        dateFormats: _c5je547,
        datePartsOrder: "dmy",
        dateIntervalFormats: _c5je550,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _c5je536,
        dayPeriods: _c5je546,
        monthNames: {
            format: _c5je525,
            standAlone: _c5je525
        },
        eraNames: {
            wide: [ "AM" ],
            abbreviated: [ "AM" ]
        },
        quarterNames: _c5je524,
        fields: _c5je557
    },
    indian: {
        dateFormats: _c5je547,
        datePartsOrder: "dmy",
        dateIntervalFormats: _c5je550,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _c5je536,
        dayPeriods: _c5je546,
        monthNames: {
            format: _c5je530,
            standAlone: _c5je530
        },
        eraNames: {
            wide: [ "Saka" ],
            abbreviated: [ "Saka" ]
        },
        quarterNames: _c5je524,
        fields: _c5je557
    },
    islamic: _c5je560,
    "islamic-umalqura": _c5je560,
    "islamic-tbla": _c5je560,
    "islamic-civil": _c5je560,
    "islamic-rgsa": _c5je560,
    iso8601: _c5je558,
    japanese: {
        dateFormats: _c5je547,
        datePartsOrder: "dmy",
        dateIntervalFormats: _c5je550,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _c5je536,
        dayPeriods: _c5je546,
        monthNames: _c5je541,
        eraNames: {
            wide: _c5je556,
            abbreviated: _c5je556
        },
        quarterNames: _c5je524,
        fields: _c5je557
    },
    persian: {
        dateFormats: _c5je547,
        datePartsOrder: "dmy",
        dateIntervalFormats: _c5je550,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _c5je536,
        dayPeriods: _c5je546,
        monthNames: {
            format: _c5je526,
            standAlone: _c5je526
        },
        eraNames: {
            wide: [ "AP" ],
            abbreviated: [ "AP" ]
        },
        quarterNames: _c5je524,
        fields: _c5je557
    },
    roc: {
        dateFormats: _c5je547,
        datePartsOrder: "dmy",
        dateIntervalFormats: _c5je550,
        dateIntervalFallbackFormat: "{0} - {1}",
        dayNames: _c5je536,
        dayPeriods: _c5je546,
        monthNames: _c5je541,
        eraNames: {
            wide: _c5je15,
            abbreviated: _c5je15
        },
        quarterNames: _c5je524,
        fields: _c5je557
    },
    islamicc: _c5je558
};

inter.pluralRule = function(n) {
    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\.?/, "").length;
    if (typeof n === "string") n = parseInt(n, 10);
    if (i === 1 && v === 0) return "one";
    return "other";
};

inter.renderDigitsOrdinal = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinal(-n);
    if (n >= 0) return this.renderDigitsOrdinalMasculine(n);
};

inter.renderSpelloutNumbering = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "meno " + this.renderSpelloutNumbering(-n);
    if (isFractional && n > 1) return this.renderSpelloutNumbering(Math.floor(n)) + " virgola " + this.renderSpelloutNumbering(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " biliardi" + (n === 2e15 ? "" : " " + this.renderSpelloutNumbering(n % 1e15));
    if (n >= 1e15) return "un biliardo" + (n === 1e15 ? "" : " " + this.renderSpelloutNumbering(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " bilioni" + (n === 2e12 ? "" : " " + this.renderSpelloutNumbering(n % 1e12));
    if (n >= 1e12) return "un bilione" + (n === 1e12 ? "" : " " + this.renderSpelloutNumbering(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " miliardi" + (n === 2e9 ? "" : " " + this.renderSpelloutNumbering(n % 1e9));
    if (n >= 1e9) return "un miliardo" + (n === 1e9 ? "" : " " + this.renderSpelloutNumbering(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " milioni" + (n === 2e6 ? "" : " " + this.renderSpelloutNumbering(n % 1e6));
    if (n >= 1e6) return "un milione" + (n === 1e6 ? "" : " " + this.renderSpelloutNumbering(n % 1e6));
    if (n >= 2e3) return this.renderMscNoFinal(Math.floor(n / 1e3)) + "­mila" + (n === 2e3 ? "" : "­" + this.renderSpelloutNumbering(n % 1e3));
    if (n >= 1e3) return "mille" + (n === 1e3 ? "" : "­" + this.renderSpelloutNumbering(n % 1e3));
    if (n >= 200) return this.renderSpelloutNumbering(Math.floor(n / 100)) + "­cent" + this.renderMscoWithO(n % 100);
    if (n >= 100) return "cent" + this.renderMscoWithO(n % 100);
    if (n >= 90) return "novant" + this.renderMscoWithA(n % 10);
    if (n >= 80) return "ottant" + this.renderMscoWithA(n % 10);
    if (n >= 70) return "settant" + this.renderMscoWithA(n % 10);
    if (n >= 60) return "sessant" + this.renderMscoWithA(n % 10);
    if (n >= 50) return "cinquant" + this.renderMscoWithA(n % 10);
    if (n >= 40) return "quarant" + this.renderMscoWithA(n % 10);
    if (n >= 30) return "trent" + this.renderMscoWithA(n % 10);
    if (n >= 20) return "vent" + this.renderMscoWithI(n % 10);
    if (n >= 19) return "diciannove";
    if (n >= 18) return "diciotto";
    if (n >= 17) return "diciassette";
    if (n >= 16) return "sedici";
    if (n >= 15) return "quindici";
    if (n >= 14) return "quattordici";
    if (n >= 13) return "tredici";
    if (n >= 12) return "dodici";
    if (n >= 11) return "undici";
    if (n >= 10) return "dieci";
    if (n >= 9) return "nove";
    if (n >= 8) return "otto";
    if (n >= 7) return "sette";
    if (n >= 6) return "sei";
    if (n >= 5) return "cinque";
    if (n >= 4) return "quattro";
    if (n >= 3) return "tre";
    if (n >= 2) return "due";
    if (n >= 1) return "uno";
    if (n >= 0) return "zero";
};

inter.renderArmenianUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "Ք" + (n === 9e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 8e3) return "Փ" + (n === 8e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 7e3) return "Ւ" + (n === 7e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 6e3) return "Ց" + (n === 6e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 5e3) return "Ր" + (n === 5e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 4e3) return "Տ" + (n === 4e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 3e3) return "Վ" + (n === 3e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 2e3) return "Ս" + (n === 2e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 1e3) return "Ռ" + (n === 1e3 ? "" : this.renderArmenianUpper(n % 1e3));
    if (n >= 900) return "Ջ" + (n === 900 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 800) return "Պ" + (n === 800 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 700) return "Չ" + (n === 700 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 600) return "Ո" + (n === 600 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 500) return "Շ" + (n === 500 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 400) return "Ն" + (n === 400 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 300) return "Յ" + (n === 300 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 200) return "Մ" + (n === 200 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 100) return "Ճ" + (n === 100 ? "" : this.renderArmenianUpper(n % 100));
    if (n >= 90) return "Ղ" + (n === 90 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 80) return "Ձ" + (n === 80 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 70) return "Հ" + (n === 70 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 60) return "Կ" + (n === 60 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 50) return "Ծ" + (n === 50 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 40) return "Խ" + (n === 40 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 30) return "Լ" + (n === 30 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 20) return "Ի" + (n === 20 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 10) return "Ժ" + (n === 10 ? "" : this.renderArmenianUpper(n % 10));
    if (n >= 9) return "Թ";
    if (n >= 8) return "Ը";
    if (n >= 7) return "Է";
    if (n >= 6) return "Զ";
    if (n >= 5) return "Ե";
    if (n >= 4) return "Դ";
    if (n >= 3) return "Գ";
    if (n >= 2) return "Բ";
    if (n >= 1) return "Ա";
    if (n >= 0) return "0";
};

inter.renderArmenianLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderArmenianLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e4) return this.renderNumber(n, "#,##0");
    if (n >= 9e3) return "ք" + (n === 9e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 8e3) return "փ" + (n === 8e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 7e3) return "ւ" + (n === 7e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 6e3) return "ց" + (n === 6e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 5e3) return "ր" + (n === 5e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 4e3) return "տ" + (n === 4e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 3e3) return "վ" + (n === 3e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 2e3) return "ս" + (n === 2e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 1e3) return "ռ" + (n === 1e3 ? "" : this.renderArmenianLower(n % 1e3));
    if (n >= 900) return "ջ" + (n === 900 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 800) return "պ" + (n === 800 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 700) return "չ" + (n === 700 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 600) return "ո" + (n === 600 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 500) return "շ" + (n === 500 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 400) return "ն" + (n === 400 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 300) return "յ" + (n === 300 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 200) return "մ" + (n === 200 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 100) return "ճ" + (n === 100 ? "" : this.renderArmenianLower(n % 100));
    if (n >= 90) return "ղ" + (n === 90 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 80) return "ձ" + (n === 80 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 70) return "հ" + (n === 70 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 60) return "կ" + (n === 60 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 50) return "ծ" + (n === 50 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 40) return "խ" + (n === 40 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 30) return "լ" + (n === 30 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 20) return "ի" + (n === 20 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 10) return "ժ" + (n === 10 ? "" : this.renderArmenianLower(n % 10));
    if (n >= 9) return "թ";
    if (n >= 8) return "ը";
    if (n >= 7) return "է";
    if (n >= 6) return "զ";
    if (n >= 5) return "ե";
    if (n >= 4) return "դ";
    if (n >= 3) return "գ";
    if (n >= 2) return "բ";
    if (n >= 1) return "ա";
    if (n >= 0) return "0";
};

inter.renderCyrillicLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderCyrillicLower(-n);
    if (isFractional && n > 1) return this.renderCyrillicLower(Math.floor(n)) + "." + this.renderCyrillicLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e15) return "҂҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e15)) + (n === 1e15 ? "" : " " + this.renderCyrillicLower(n % 1e15));
    if (n >= 1e12) return "҂҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e12)) + (n === 1e12 ? "" : " " + this.renderCyrillicLower(n % 1e12));
    if (n >= 1e9) return "҂҂҂" + this.renderCyrillicLower(Math.floor(n / 1e9)) + (n === 1e9 ? "" : " " + this.renderCyrillicLower(n % 1e9));
    if (n >= 1e6) return "҂҂" + this.renderCyrillicLower(Math.floor(n / 1e6)) + (n === 1e6 ? "" : " " + this.renderCyrillicLower(n % 1e6));
    if (n >= 11e3) return this.renderCyrillicLowerThousands(Math.floor(n / 1e4)) + (n === 11e3 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e4) return "҂" + this.renderCyrillicLower(Math.floor(n / 1e4)) + (n === 1e4 ? "" : " " + this.renderCyrillicLower(n % 1e4));
    if (n >= 1e3) return "҂" + this.renderCyrillicLower110(Math.floor(n / 1e3)) + this.renderCyrillicLowerPost(n % 1e3);
    if (n >= 900) return "ц" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 801) return "ѿ" + this.renderCyrillicLower(n % 100);
    if (n >= 800) return "ѿ҃";
    if (n >= 700) return "ѱ" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 600) return "х" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 500) return "ф" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 400) return "у" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 300) return "т" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 200) return "с" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 100) return "р" + this.renderCyrillicLowerFinal(n % 100);
    if (n >= 90) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return this.renderCyrillicLower110(n) + "҃";
    if (n >= 0) return "0҃";
};

inter.renderEthiopic = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderEthiopic(-n);
    if (isFractional && n > 1) return this.renderEthiopic(Math.floor(n)) + "፡" + this.renderEthiopic(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,###0");
    if (n >= 2e16) return this.renderEthiopic(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e16) return "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 2e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e12) return "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 2e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e8) return "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 2e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 2e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1e4) return "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 200) return this.renderEthiopic(Math.floor(n / 100)) + "፻" + (n === 200 ? "" : this.renderEthiopic(n % 100));
    if (n >= 100) return "፻" + (n === 100 ? "" : this.renderEthiopic(n % 100));
    if (n >= 90) return "፺" + (n === 90 ? "" : this.renderEthiopic(n % 10));
    if (n >= 80) return "፹" + (n === 80 ? "" : this.renderEthiopic(n % 10));
    if (n >= 70) return "፸" + (n === 70 ? "" : this.renderEthiopic(n % 10));
    if (n >= 60) return "፷" + (n === 60 ? "" : this.renderEthiopic(n % 10));
    if (n >= 50) return "፶" + (n === 50 ? "" : this.renderEthiopic(n % 10));
    if (n >= 40) return "፵" + (n === 40 ? "" : this.renderEthiopic(n % 10));
    if (n >= 30) return "፴" + (n === 30 ? "" : this.renderEthiopic(n % 10));
    if (n >= 20) return "፳" + (n === 20 ? "" : this.renderEthiopic(n % 10));
    if (n >= 10) return "፲" + (n === 10 ? "" : this.renderEthiopic(n % 10));
    if (n >= 9) return "፱";
    if (n >= 8) return "፰";
    if (n >= 7) return "፯";
    if (n >= 6) return "፮";
    if (n >= 5) return "፭";
    if (n >= 4) return "፬";
    if (n >= 3) return "፫";
    if (n >= 2) return "፪";
    if (n >= 1) return "፩";
    if (n >= 0) return "ባዶ";
};

inter.renderGeorgian = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGeorgian(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2e4) return this.renderNumber(n, "#,##0");
    if (n >= 1e4) return "ჯ" + (n === 1e4 ? "" : this.renderGeorgian(n % 1e4));
    if (n >= 9e3) return "ჵ" + (n === 9e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 8e3) return "ჴ" + (n === 8e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 7e3) return "ხ" + (n === 7e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 6e3) return "ჭ" + (n === 6e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 5e3) return "წ" + (n === 5e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 4e3) return "ძ" + (n === 4e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 3e3) return "ც" + (n === 3e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 2e3) return "ჩ" + (n === 2e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 1e3) return "შ" + (n === 1e3 ? "" : this.renderGeorgian(n % 1e3));
    if (n >= 900) return "ყ" + (n === 900 ? "" : this.renderGeorgian(n % 100));
    if (n >= 800) return "ღ" + (n === 800 ? "" : this.renderGeorgian(n % 100));
    if (n >= 700) return "ქ" + (n === 700 ? "" : this.renderGeorgian(n % 100));
    if (n >= 600) return "ფ" + (n === 600 ? "" : this.renderGeorgian(n % 100));
    if (n >= 500) return "ჳ" + (n === 500 ? "" : this.renderGeorgian(n % 100));
    if (n >= 400) return "უ" + (n === 400 ? "" : this.renderGeorgian(n % 100));
    if (n >= 300) return "ტ" + (n === 300 ? "" : this.renderGeorgian(n % 100));
    if (n >= 200) return "ს" + (n === 200 ? "" : this.renderGeorgian(n % 100));
    if (n >= 100) return "რ" + (n === 100 ? "" : this.renderGeorgian(n % 100));
    if (n >= 90) return "ჟ" + (n === 90 ? "" : this.renderGeorgian(n % 10));
    if (n >= 80) return "პ" + (n === 80 ? "" : this.renderGeorgian(n % 10));
    if (n >= 70) return "ო" + (n === 70 ? "" : this.renderGeorgian(n % 10));
    if (n >= 60) return "ჲ" + (n === 60 ? "" : this.renderGeorgian(n % 10));
    if (n >= 50) return "ნ" + (n === 50 ? "" : this.renderGeorgian(n % 10));
    if (n >= 40) return "მ" + (n === 40 ? "" : this.renderGeorgian(n % 10));
    if (n >= 30) return "ლ" + (n === 30 ? "" : this.renderGeorgian(n % 10));
    if (n >= 20) return "კ" + (n === 20 ? "" : this.renderGeorgian(n % 10));
    if (n >= 10) return "ი" + (n === 10 ? "" : this.renderGeorgian(n % 10));
    if (n >= 9) return "თ";
    if (n >= 8) return "ჱ";
    if (n >= 7) return "ზ";
    if (n >= 6) return "ვ";
    if (n >= 5) return "ე";
    if (n >= 4) return "დ";
    if (n >= 3) return "გ";
    if (n >= 2) return "ბ";
    if (n >= 1) return "ა";
    if (n >= 0) return this.renderNumber(n, "#,##0");
};

inter.renderGreekUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekUpper(-n);
    if (isFractional && n > 1) return this.renderGreekUpper(Math.floor(n)) + "." + this.renderGreekUpper(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMajuscules(n) + "´";
};

inter.renderGreekLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderGreekLower(-n);
    if (isFractional && n > 1) return this.renderGreekLower(Math.floor(n)) + "." + this.renderGreekLower(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 0) return this.renderGreekNumeralMinuscules(n) + "´";
};

inter.renderSpelloutCardinal = function(n) {
    if (n < 0) return "−" + this.renderSpelloutCardinal(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0.#");
};

inter.renderHebrew = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrew(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1000001) return this.renderNumber(n, "#,##0");
    if (n >= 1e6) return "אלף אלפים";
    if (n >= 3001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 3001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 3e3) return this.renderHebrew(Math.floor(n / 1e3)) + " אלפים";
    if (n >= 2001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 2001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 2e3) return "אלפיים";
    if (n >= 1001) return this.renderHebrewThousands(Math.floor(n / 1e3)) + (n === 1001 ? "" : this.renderHebrew(n % 1e3));
    if (n >= 1e3) return "אלף";
    if (n >= 901) return "תתק" + this.renderHebrew099(n % 100);
    if (n >= 900) return "תת״ק";
    if (n >= 801) return "תת" + this.renderHebrew099(n % 100);
    if (n >= 800) return "ת״ת";
    if (n >= 745) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 744) return "תשד״מ";
    if (n >= 701) return "תש" + this.renderHebrew099(n % 100);
    if (n >= 700) return "ת״ש";
    if (n >= 699) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 698) return "תרח״צ";
    if (n >= 601) return "תר" + this.renderHebrew099(n % 100);
    if (n >= 600) return "ת״ר";
    if (n >= 501) return "תק" + this.renderHebrew099(n % 100);
    if (n >= 500) return "ת״ק";
    if (n >= 400) return "ת" + this.renderHebrew099(n % 100);
    if (n >= 345) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 344) return "שד״מ";
    if (n >= 305) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 304) return "ד״ש";
    if (n >= 300) return "ש" + this.renderHebrew099(n % 100);
    if (n >= 299) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 298) return "רח״צ";
    if (n >= 200) return "ר" + this.renderHebrew099(n % 100);
    if (n >= 100) return "ק" + this.renderHebrew099(n % 100);
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "צ׳";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "פ׳";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "ע׳";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "ס׳";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "נ׳";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "מ׳";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "ל׳";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "כ׳";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 0) return this.renderHebrewItem(n) + "׳";
};

inter.renderRomanUpper = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanUpper(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 4e5) return this.renderNumber(n, "#,##0");
    if (n >= 3e5) return "ↈↈↈ" + (n === 3e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 2e5) return "ↈↈ" + (n === 2e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 1e5) return "ↈ" + (n === 1e5 ? "" : this.renderRomanUpper(n % 1e5));
    if (n >= 9e4) return "ↂↈ" + (n === 9e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 8e4) return "ↇↂↂↂ" + (n === 8e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 7e4) return "ↇↂↂ" + (n === 7e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 6e4) return "ↇↂ" + (n === 6e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 5e4) return "ↇ" + (n === 5e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 4e4) return "ↂↇ" + (n === 4e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 3e4) return "ↂↂↂ" + (n === 3e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 2e4) return "ↂↂ" + (n === 2e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 1e4) return "ↂ" + (n === 1e4 ? "" : this.renderRomanUpper(n % 1e4));
    if (n >= 9e3) return "Mↂ" + (n === 9e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 8e3) return "ↁMMM" + (n === 8e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 7e3) return "ↁMM" + (n === 7e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 6e3) return "ↁM" + (n === 6e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 5e3) return "ↁ" + (n === 5e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 4e3) return "Mↁ" + (n === 4e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 3e3) return "MMM" + (n === 3e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 2e3) return "MM" + (n === 2e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 1e3) return "M" + (n === 1e3 ? "" : this.renderRomanUpper(n % 1e3));
    if (n >= 900) return "CM" + (n === 900 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 800) return "DCCC" + (n === 800 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 700) return "DCC" + (n === 700 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 600) return "DC" + (n === 600 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 500) return "D" + (n === 500 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 400) return "CD" + (n === 400 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 300) return "CCC" + (n === 300 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 200) return "CC" + (n === 200 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 100) return "C" + (n === 100 ? "" : this.renderRomanUpper(n % 100));
    if (n >= 90) return "XC" + (n === 90 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 80) return "LXXX" + (n === 80 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 70) return "LXX" + (n === 70 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 60) return "LX" + (n === 60 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 50) return "L" + (n === 50 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 40) return "XL" + (n === 40 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 30) return "XXX" + (n === 30 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 20) return "XX" + (n === 20 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 10) return "X" + (n === 10 ? "" : this.renderRomanUpper(n % 10));
    if (n >= 9) return "IX";
    if (n >= 8) return "VIII";
    if (n >= 7) return "VII";
    if (n >= 6) return "VI";
    if (n >= 5) return "V";
    if (n >= 4) return "IV";
    if (n >= 3) return "III";
    if (n >= 2) return "II";
    if (n >= 1) return "I";
    if (n >= 0) return "N";
};

inter.renderRomanLower = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderRomanLower(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 5e3) return this.renderNumber(n, "#,##0");
    if (n >= 4e3) return "mmmm" + (n === 4e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 3e3) return "mmm" + (n === 3e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 2e3) return "mm" + (n === 2e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 1e3) return "m" + (n === 1e3 ? "" : this.renderRomanLower(n % 1e3));
    if (n >= 900) return "cm" + (n === 900 ? "" : this.renderRomanLower(n % 100));
    if (n >= 800) return "dccc" + (n === 800 ? "" : this.renderRomanLower(n % 100));
    if (n >= 700) return "dcc" + (n === 700 ? "" : this.renderRomanLower(n % 100));
    if (n >= 600) return "dc" + (n === 600 ? "" : this.renderRomanLower(n % 100));
    if (n >= 500) return "d" + (n === 500 ? "" : this.renderRomanLower(n % 100));
    if (n >= 400) return "cd" + (n === 400 ? "" : this.renderRomanLower(n % 100));
    if (n >= 300) return "ccc" + (n === 300 ? "" : this.renderRomanLower(n % 100));
    if (n >= 200) return "cc" + (n === 200 ? "" : this.renderRomanLower(n % 100));
    if (n >= 100) return "c" + (n === 100 ? "" : this.renderRomanLower(n % 100));
    if (n >= 90) return "xc" + (n === 90 ? "" : this.renderRomanLower(n % 10));
    if (n >= 80) return "lxxx" + (n === 80 ? "" : this.renderRomanLower(n % 10));
    if (n >= 70) return "lxx" + (n === 70 ? "" : this.renderRomanLower(n % 10));
    if (n >= 60) return "lx" + (n === 60 ? "" : this.renderRomanLower(n % 10));
    if (n >= 50) return "l" + (n === 50 ? "" : this.renderRomanLower(n % 10));
    if (n >= 40) return "xl" + (n === 40 ? "" : this.renderRomanLower(n % 10));
    if (n >= 30) return "xxx" + (n === 30 ? "" : this.renderRomanLower(n % 10));
    if (n >= 20) return "xx" + (n === 20 ? "" : this.renderRomanLower(n % 10));
    if (n >= 10) return "x" + (n === 10 ? "" : this.renderRomanLower(n % 10));
    if (n >= 9) return "ix";
    if (n >= 8) return "viii";
    if (n >= 7) return "vii";
    if (n >= 6) return "vi";
    if (n >= 5) return "v";
    if (n >= 4) return "iv";
    if (n >= 3) return "iii";
    if (n >= 2) return "ii";
    if (n >= 1) return "i";
    if (n >= 0) return "n";
};

inter.renderTamil = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderTamil(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 1e8) return this.renderNumber(n, "#,##,##0");
    if (n >= 1e6) return this.renderTamil(Math.floor(n / 1e6)) + "௱௲" + (n === 1e6 ? "" : this.renderTamilThousands(n % 1e6));
    if (n >= 2e3) return this.renderTamil(Math.floor(n / 1e3)) + "௲" + (n === 2e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 1e3) return "௲" + (n === 1e3 ? "" : this.renderTamil(n % 1e3));
    if (n >= 200) return this.renderTamil(Math.floor(n / 100)) + "௱" + (n === 200 ? "" : this.renderTamil(n % 100));
    if (n >= 100) return "௱" + (n === 100 ? "" : this.renderTamil(n % 100));
    if (n >= 20) return this.renderTamil(Math.floor(n / 10)) + "௰" + (n === 20 ? "" : this.renderTamil(n % 10));
    if (n >= 10) return "௰" + (n === 10 ? "" : this.renderTamil(n % 10));
    if (n >= 9) return "௯";
    if (n >= 8) return "௮";
    if (n >= 7) return "௭";
    if (n >= 6) return "௬";
    if (n >= 5) return "௫";
    if (n >= 4) return "௪";
    if (n >= 3) return "௩";
    if (n >= 2) return "௨";
    if (n >= 1) return "௧";
    if (n >= 0) return "௦";
};

inter.renderDigitsOrdinalMasculine = function(n) {
    if (n < 0) return "−" + this.renderDigitsOrdinalMasculine(-n);
    if (n >= 0) return this.renderNumber(n, "#,##0") + this.renderDordMascabbrev(n);
};

inter.renderSpelloutCardinalMasculine = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "meno " + this.renderSpelloutCardinalMasculine(-n);
    if (isFractional && n > 1) return this.renderSpelloutCardinalMasculine(Math.floor(n)) + " virgola " + this.renderSpelloutCardinalMasculine(parseInt(String(n).replace(/\d*\./, ""), 10));
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 2e15) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e15)) + " biliardi" + (n === 2e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 1e15) return "un biliardo" + (n === 1e15 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e15));
    if (n >= 2e12) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e12)) + " bilioni" + (n === 2e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 1e12) return "un bilione" + (n === 1e12 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e12));
    if (n >= 2e9) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e9)) + " miliardi" + (n === 2e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 1e9) return "un miliardo" + (n === 1e9 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e9));
    if (n >= 2e6) return this.renderSpelloutCardinalMasculine(Math.floor(n / 1e6)) + " milioni" + (n === 2e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 1e6) return "un milione" + (n === 1e6 ? "" : " " + this.renderSpelloutCardinalMasculine(n % 1e6));
    if (n >= 2e3) return this.renderMscNoFinal(Math.floor(n / 1e3)) + "­mila" + (n === 2e3 ? "" : "­" + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 1e3) return "mille" + (n === 1e3 ? "" : "­" + this.renderSpelloutCardinalMasculine(n % 1e3));
    if (n >= 200) return this.renderSpelloutCardinalMasculine(Math.floor(n / 100)) + "­cent" + this.renderMscWithO(n % 100);
    if (n >= 100) return "cent" + this.renderMscWithO(n % 100);
    if (n >= 90) return "novant" + this.renderMscWithA(n % 10);
    if (n >= 80) return "ottant" + this.renderMscWithA(n % 10);
    if (n >= 70) return "settant" + this.renderMscWithA(n % 10);
    if (n >= 60) return "sessant" + this.renderMscWithA(n % 10);
    if (n >= 50) return "cinquant" + this.renderMscWithA(n % 10);
    if (n >= 40) return "quarant" + this.renderMscWithA(n % 10);
    if (n >= 30) return "trent" + this.renderMscWithA(n % 10);
    if (n >= 20) return "vent" + this.renderMscWithI(n % 10);
    if (n >= 2) return this.renderSpelloutNumbering(n);
    if (n >= 1) return "un";
    if (n >= 0) return "zero";
};

inter.renderMscNoFinal = function(n) {
    if (n >= 200) return this.renderMscNoFinal(Math.floor(n / 100)) + "­cent" + this.renderMscWithONofinal(n % 100);
    if (n >= 100) return "cent" + this.renderMscWithONofinal(n % 100);
    if (n >= 90) return "novant" + this.renderMscWithANofinal(n % 10);
    if (n >= 80) return "ottant" + this.renderMscWithANofinal(n % 10);
    if (n >= 70) return "settant" + this.renderMscWithANofinal(n % 10);
    if (n >= 60) return "sessant" + this.renderMscWithANofinal(n % 10);
    if (n >= 50) return "cinquant" + this.renderMscWithANofinal(n % 10);
    if (n >= 40) return "quarant" + this.renderMscWithANofinal(n % 10);
    if (n >= 30) return "trent" + this.renderMscWithANofinal(n % 10);
    if (n >= 20) return "vent" + this.renderMscWithINofinal(n % 10);
    if (n >= 0) return this.renderSpelloutCardinalMasculine(n);
};

inter.renderMscoWithO = function(n) {
    if (n >= 90) return "o­" + this.renderSpelloutNumbering(n);
    if (n >= 80) return "­" + this.renderSpelloutNumbering(n);
    if (n >= 9) return "o­" + this.renderSpelloutNumbering(n);
    if (n >= 8) return "­otto";
    if (n >= 4) return "o­" + this.renderSpelloutNumbering(n);
    if (n >= 3) return "o­tré";
    if (n >= 2) return "o­due";
    if (n >= 1) return "o­uno";
    if (n >= 0) return "o";
};

inter.renderMscoWithA = function(n) {
    if (n >= 9) return "a­nove";
    if (n >= 8) return "­otto";
    if (n >= 4) return "a­" + this.renderSpelloutNumbering(n);
    if (n >= 3) return "a­tré";
    if (n >= 2) return "a­due";
    if (n >= 1) return "­uno";
    if (n >= 0) return "a";
};

inter.renderMscoWithI = function(n) {
    if (n >= 9) return "i­nove";
    if (n >= 8) return "­otto";
    if (n >= 4) return "i­" + this.renderSpelloutNumbering(n);
    if (n >= 3) return "i­tré";
    if (n >= 2) return "i­due";
    if (n >= 1) return "­uno";
    if (n >= 0) return "i";
};

inter.renderCyrillicLowerThousands = function(n) {
    if (n >= 900) return "҂ц" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 800) return "҂ѿ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 700) return "҂ѱ" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 600) return "҂х" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 500) return "҂ф" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 400) return "҂у" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 300) return "҂т" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 200) return "҂с" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 100) return "҂р" + this.renderCyrillicLowerThousands(n % 100);
    if (n >= 90) return "҂ч" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 80) return "҂п" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 70) return "҂ѻ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 60) return "҂ѯ" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 50) return "҂н" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 40) return "҂м" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 30) return "҂л" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 20) return "҂к" + this.renderCyrillicLowerThousands(n % 10);
    if (n >= 19) return "҂ѳ҃҂і";
    if (n >= 18) return "҂и҃҂і";
    if (n >= 17) return "҂з҃҂і";
    if (n >= 16) return "҂ѕ҃҂і";
    if (n >= 15) return "҂є҃҂і";
    if (n >= 14) return "҂д҃҂і";
    if (n >= 13) return "҂г҃҂і";
    if (n >= 12) return "҂в҃҂і";
    if (n >= 11) return "҂а҃҂і";
    if (n >= 10) return "҃҂і";
    if (n >= 9) return "҃҂ѳ";
    if (n >= 8) return "҃҂и";
    if (n >= 7) return "҃҂з";
    if (n >= 6) return "҃҂ѕ";
    if (n >= 5) return "҃҂є";
    if (n >= 4) return "҃҂д";
    if (n >= 3) return "҃҂г";
    if (n >= 2) return "҃҂в";
    if (n >= 1) return "҃҂а";
    if (n >= 0) return "҃";
};

inter.renderCyrillicLower110 = function(n) {
    if (n >= 10) return "і";
    if (n >= 9) return "ѳ";
    if (n >= 8) return "и";
    if (n >= 7) return "з";
    if (n >= 6) return "ѕ";
    if (n >= 5) return "є";
    if (n >= 4) return "д";
    if (n >= 3) return "г";
    if (n >= 2) return "в";
    if (n >= 1) return "а";
};

inter.renderCyrillicLowerPost = function(n) {
    if (n >= 1) return this.renderCyrillicLower(n);
    if (n >= 0) return "҃";
};

inter.renderCyrillicLowerFinal = function(n) {
    if (n >= 91) return "ч" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 90) return "҃ч";
    if (n >= 81) return "п" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 80) return "҃п";
    if (n >= 71) return "ѻ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 70) return "҃ѻ";
    if (n >= 61) return "ѯ" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 60) return "҃ѯ";
    if (n >= 51) return "н" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 50) return "҃н";
    if (n >= 41) return "м" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 40) return "҃м";
    if (n >= 31) return "л" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 30) return "҃л";
    if (n >= 21) return "к" + this.renderCyrillicLowerFinal(n % 10);
    if (n >= 20) return "҃к";
    if (n >= 19) return "ѳ҃і";
    if (n >= 18) return "и҃і";
    if (n >= 17) return "з҃і";
    if (n >= 16) return "ѕ҃і";
    if (n >= 15) return "є҃і";
    if (n >= 14) return "д҃і";
    if (n >= 13) return "г҃і";
    if (n >= 12) return "в҃і";
    if (n >= 11) return "а҃і";
    if (n >= 1) return "҃" + this.renderCyrillicLower110(n);
    if (n >= 0) return "҃";
};

inter.renderEthiopicP3 = function(n) {
    if (n >= 1e12) return this.renderEthiopic(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1) return "፼፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼፼";
};

inter.renderEthiopicP2 = function(n) {
    if (n >= 1e8) return this.renderEthiopic(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1) return "፼፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼፼";
};

inter.renderEthiopicP1 = function(n) {
    if (n >= 1e4) return this.renderEthiopic(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopic(n % 1e4));
    if (n >= 1) return "፼" + this.renderEthiopicP(n);
    if (n >= 0) return "፼";
};

inter.renderGreekNumeralMajuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e16)) + "ΜΜΜΜ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e12)) + "ΜΜΜ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e8)) + "ΜΜ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMajuscules(Math.floor(n / 1e4)) + "Μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMajuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMajuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMajuscules(n % 1e3));
    if (n >= 900) return "Ϡ" + (n === 900 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 800) return "Ω" + (n === 800 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 700) return "Ψ" + (n === 700 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 600) return "Χ" + (n === 600 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 500) return "Φ" + (n === 500 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 400) return "Υ" + (n === 400 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 300) return "Τ" + (n === 300 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 200) return "Σ" + (n === 200 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 100) return "Ρ" + (n === 100 ? "" : this.renderGreekNumeralMajuscules(n % 100));
    if (n >= 90) return "Ϟ" + (n === 90 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 80) return "Π" + (n === 80 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 70) return "Ο" + (n === 70 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 60) return "Ξ" + (n === 60 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 50) return "Ν" + (n === 50 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 40) return "Μ" + (n === 40 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 30) return "Λ" + (n === 30 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 20) return "Κ" + (n === 20 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 10) return "Ι" + (n === 10 ? "" : this.renderGreekNumeralMajuscules(n % 10));
    if (n >= 9) return "Θ";
    if (n >= 8) return "Η";
    if (n >= 7) return "Ζ";
    if (n >= 6) return "Ϝ";
    if (n >= 5) return "Ε";
    if (n >= 4) return "Δ";
    if (n >= 3) return "Γ";
    if (n >= 2) return "Β";
    if (n >= 1) return "Α";
    if (n >= 0) return "𐆊";
};

inter.renderGreekNumeralMinuscules = function(n) {
    if (n >= 1e18) return this.renderNumber(n, "#,##0");
    if (n >= 1e16) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e16)) + "μμμμ" + (n === 1e16 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e16));
    if (n >= 1e12) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e12)) + "μμμ" + (n === 1e12 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e12));
    if (n >= 1e8) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e8)) + "μμ" + (n === 1e8 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e8));
    if (n >= 1e4) return this.renderGreekNumeralMinuscules(Math.floor(n / 1e4)) + "μ" + (n === 1e4 ? "" : " " + this.renderGreekNumeralMinuscules(n % 1e4));
    if (n >= 1e3) return "͵" + this.renderGreekNumeralMinuscules(Math.floor(n / 1e3)) + (n === 1e3 ? "" : this.renderGreekNumeralMinuscules(n % 1e3));
    if (n >= 900) return "ϡ" + (n === 900 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 800) return "ω" + (n === 800 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 700) return "ψ" + (n === 700 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 600) return "χ" + (n === 600 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 500) return "φ" + (n === 500 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 400) return "υ" + (n === 400 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 300) return "τ" + (n === 300 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 200) return "σ" + (n === 200 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 100) return "ρ" + (n === 100 ? "" : this.renderGreekNumeralMinuscules(n % 100));
    if (n >= 90) return "ϟ" + (n === 90 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 80) return "π" + (n === 80 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 70) return "ο" + (n === 70 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 60) return "ξ" + (n === 60 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 50) return "ν" + (n === 50 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 40) return "μ" + (n === 40 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 30) return "λ" + (n === 30 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 20) return "κ" + (n === 20 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 10) return "ι" + (n === 10 ? "" : this.renderGreekNumeralMinuscules(n % 10));
    if (n >= 9) return "θ";
    if (n >= 8) return "η";
    if (n >= 7) return "ζ";
    if (n >= 6) return "ϝ";
    if (n >= 5) return "ε";
    if (n >= 4) return "δ";
    if (n >= 3) return "γ";
    if (n >= 2) return "β";
    if (n >= 1) return "α";
    if (n >= 0) return "𐆊";
};

inter.renderHebrewThousands = function(n) {
    if (n >= 401) return this.renderHebrew(n) + "׳";
    if (n >= 100) return this.renderHebrew(n) + (n === 100 ? "" : "׳");
    if (n >= 10) return this.renderHebrew(n) + (n === 10 ? "" : "׳");
    if (n >= 0) return this.renderHebrew(n);
};

inter.renderHebrew099 = function(n) {
    if (n >= 91) return "צ״" + this.renderHebrewItem(n % 10);
    if (n >= 90) return "״צ";
    if (n >= 81) return "פ״" + this.renderHebrewItem(n % 10);
    if (n >= 80) return "״פ";
    if (n >= 71) return "ע״" + this.renderHebrewItem(n % 10);
    if (n >= 70) return "״ע";
    if (n >= 61) return "ס״" + this.renderHebrewItem(n % 10);
    if (n >= 60) return "״ס";
    if (n >= 51) return "נ״" + this.renderHebrewItem(n % 10);
    if (n >= 50) return "״נ";
    if (n >= 41) return "מ״" + this.renderHebrewItem(n % 10);
    if (n >= 40) return "״מ";
    if (n >= 31) return "ל״" + this.renderHebrewItem(n % 10);
    if (n >= 30) return "״ל";
    if (n >= 21) return "כ״" + this.renderHebrewItem(n % 10);
    if (n >= 20) return "״כ";
    if (n >= 17) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "ט״ז";
    if (n >= 15) return "ט״ו";
    if (n >= 11) return "י״" + this.renderHebrewItem(n % 10);
    if (n >= 1) return "״" + this.renderHebrewItem(n);
    if (n >= 0) return "׳";
};

inter.renderHebrewItem = function(n) {
    var isFractional = n !== Math.floor(n);
    if (n < 0) return "−" + this.renderHebrewItem(-n);
    if (isFractional && n > 1) return this.renderNumber(n, "#,##0.00");
    if (n >= 2100) return this.renderNumber(n, "#,##0");
    if (n >= 2e3) return "תתתתת" + (n === 2e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1900) return "תתתתש" + (n === 1900 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1800) return "תתתתר" + (n === 1800 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1700) return "תתתתק" + (n === 1700 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1600) return "תתתת" + (n === 1600 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1500) return "תתתש" + (n === 1500 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1400) return "תתתר" + (n === 1400 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1300) return "תתתק" + (n === 1300 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1200) return "תתת" + (n === 1200 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1100) return "תתש" + (n === 1100 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 1e3) return "תתר" + (n === 1e3 ? "" : this.renderHebrewItem(n % 1e3));
    if (n >= 900) return "תתק" + (n === 900 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 800) return "תת" + (n === 800 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 745) return "תש" + this.renderHebrewItem(n % 100);
    if (n >= 744) return "תשדמ";
    if (n >= 700) return "תש" + (n === 700 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 699) return "תר" + this.renderHebrewItem(n % 100);
    if (n >= 698) return "תרחצ";
    if (n >= 600) return "תר" + (n === 600 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 500) return "תק" + (n === 500 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 400) return "ת" + (n === 400 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 345) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 344) return "שדמ";
    if (n >= 305) return "ש" + this.renderHebrewItem(n % 100);
    if (n >= 304) return "דש";
    if (n >= 300) return "ש" + (n === 300 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 299) return "ר" + this.renderHebrewItem(n % 100);
    if (n >= 298) return "רחצ";
    if (n >= 200) return "ר" + (n === 200 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 100) return "ק" + (n === 100 ? "" : this.renderHebrewItem(n % 100));
    if (n >= 90) return "צ" + (n === 90 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 80) return "פ" + (n === 80 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 70) return "ע" + (n === 70 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 60) return "ס" + (n === 60 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 50) return "נ" + (n === 50 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 40) return "מ" + (n === 40 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 30) return "ל" + (n === 30 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 20) return "כ" + (n === 20 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 17) return "י" + this.renderHebrewItem(n % 10);
    if (n >= 16) return "טז";
    if (n >= 15) return "טו";
    if (n >= 10) return "י" + (n === 10 ? "" : this.renderHebrewItem(n % 10));
    if (n >= 9) return "ט";
    if (n >= 8) return "ח";
    if (n >= 7) return "ז";
    if (n >= 6) return "ו";
    if (n >= 5) return "ה";
    if (n >= 4) return "ד";
    if (n >= 3) return "ג";
    if (n >= 2) return "ב";
    if (n >= 1) return "א";
    if (n >= 0) return "״";
};

inter.renderTamilThousands = function(n) {
    if (n >= 1e3) return this.renderTamilThousands(Math.floor(n / 1e3)) + "௲" + (n === 1e3 ? "" : this.renderTamilThousands(n % 1e3));
    if (n >= 0) return this.renderTamil(n);
};

inter.renderDordMascabbrev = function(n) {
    if (n >= 0) return "º";
};

inter.renderMscWithO = function(n) {
    if (n >= 90) return "o­" + this.renderSpelloutNumbering(n);
    if (n >= 80) return "­" + this.renderSpelloutNumbering(n);
    if (n >= 9) return "o­" + this.renderSpelloutNumbering(n);
    if (n >= 8) return "­otto";
    if (n >= 4) return "o­" + this.renderSpelloutNumbering(n);
    if (n >= 3) return "o­tré";
    if (n >= 2) return "o­due";
    if (n >= 1) return "o­uno";
    if (n >= 0) return "o";
};

inter.renderMscWithA = function(n) {
    if (n >= 2) return this.renderMscoWithA(n);
    if (n >= 1) return "­un";
    if (n >= 0) return "a";
};

inter.renderMscWithI = function(n) {
    if (n >= 2) return this.renderMscoWithI(n);
    if (n >= 1) return "­un";
    if (n >= 0) return "i";
};

inter.renderMscWithONofinal = function(n) {
    if (n >= 4) return this.renderMscWithO(n);
    if (n >= 3) return "o­tre";
    if (n >= 0) return this.renderMscWithO(n);
};

inter.renderMscWithANofinal = function(n) {
    if (n >= 4) return this.renderMscWithA(n);
    if (n >= 3) return "a­tre";
    if (n >= 0) return this.renderMscWithA(n);
};

inter.renderMscWithINofinal = function(n) {
    if (n >= 4) return this.renderMscWithI(n);
    if (n >= 3) return "a­tre";
    if (n >= 0) return this.renderMscWithI(n);
};

inter.renderEthiopicP = function(n) {
    if (n >= 1e16) return this.renderEthiopicP(Math.floor(n / 1e16)) + "፼" + this.renderEthiopicP3(n % 1e16);
    if (n >= 1e12) return this.renderEthiopicP(Math.floor(n / 1e12)) + "፼" + this.renderEthiopicP2(n % 1e12);
    if (n >= 1e8) return this.renderEthiopicP(Math.floor(n / 1e8)) + "፼" + this.renderEthiopicP1(n % 1e8);
    if (n >= 1e4) return this.renderEthiopicP(Math.floor(n / 1e4)) + "፼" + (n === 1e4 ? "" : this.renderEthiopicP(n % 1e4));
    if (n >= 1) return this.renderEthiopic(n);
};

inter.timeZones = [].concat(P.timeZones.slice(0, 7), {
    id: "Pacific/Marquesas",
    regionId: "061",
    utcStandardOffsetSeconds: -34200,
    displayName: "Marchesi",
    countryId: "PF"
}, P.timeZones.slice(8, 34), {
    id: "America/Bahia_Banderas",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Bahía de Banderas",
    countryId: "MX"
}, P.timeZones[35], {
    id: "America/North_Dakota/Beulah",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Beulah, Dakota del nord",
    countryId: "US"
}, {
    id: "America/North_Dakota/Center",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "Center, Dakota del nord",
    countryId: "US"
}, P.timeZones.slice(38, 40), {
    id: "America/Mexico_City",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Città del Messico",
    countryId: "MX"
}, P.timeZones[40], P.timeZones.slice(42, 49), P.timeZones[51], {
    id: "America/Merida",
    regionId: "013",
    utcStandardOffsetSeconds: -21600,
    displayName: "Mérida",
    countryId: "MX"
}, {
    id: "America/North_Dakota/New_Salem",
    regionId: "021",
    utcStandardOffsetSeconds: -21600,
    displayName: "New Salem, Dakota del nord",
    countryId: "US"
}, P.timeZones[53], {
    id: "Pacific/Easter",
    regionId: "005",
    utcStandardOffsetSeconds: -21600,
    displayName: "Pasqua",
    countryId: "CL"
}, P.timeZones.slice(54, 62), {
    id: "America/Bogota",
    regionId: "005",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Bogotá",
    countryId: "CO"
}, {
    id: "America/Cancun",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Cancún",
    countryId: "MX"
}, P.timeZones.slice(64, 67), {
    id: "America/Jamaica",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Giamaica",
    countryId: "JM"
}, P.timeZones.slice(67, 69), P.timeZones.slice(70, 72), P.timeZones.slice(73, 75), {
    id: "America/Havana",
    regionId: "029",
    utcStandardOffsetSeconds: -18e3,
    displayName: "L’Avana",
    countryId: "CU"
}, P.timeZones.slice(75, 79), {
    id: "America/Panama",
    regionId: "013",
    utcStandardOffsetSeconds: -18e3,
    displayName: "Panamá",
    countryId: "PA"
}, P.timeZones.slice(80, 90), {
    id: "America/Asuncion",
    regionId: "005",
    utcStandardOffsetSeconds: -14400,
    displayName: "Asunción",
    countryId: "PY"
}, P.timeZones.slice(91, 98), {
    id: "America/Curacao",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Curaçao",
    countryId: "CW"
}, P.timeZones.slice(99, 103), {
    id: "America/Guadeloupe",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Guadalupa",
    countryId: "GP"
}, P.timeZones.slice(104, 111), {
    id: "America/Martinique",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Martinica",
    countryId: "MQ"
}, P.timeZones.slice(112, 116), {
    id: "America/Puerto_Rico",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Portorico",
    countryId: "PR"
}, {
    id: "America/St_Thomas",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Thomas",
    countryId: "VI"
}, {
    id: "America/St_Vincent",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint Vincent",
    countryId: "VC"
}, {
    id: "America/St_Barthelemy",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Saint-Barthélemy",
    countryId: "BL"
}, {
    id: "America/St_Lucia",
    regionId: "029",
    utcStandardOffsetSeconds: -14400,
    displayName: "Santa Lucia",
    countryId: "LC"
}, P.timeZones.slice(117, 119), P.timeZones[120], P.timeZones.slice(124, 131), {
    id: "America/Cayenne",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Caienna",
    countryId: "GF"
}, P.timeZones[131], P.timeZones.slice(133, 150), {
    id: "America/Sao_Paulo",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "San Paolo",
    countryId: "BR"
}, {
    id: "America/Santarem",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Santarém",
    countryId: "BR"
}, P.timeZones[152], {
    id: "America/Argentina/Tucuman",
    regionId: "005",
    utcStandardOffsetSeconds: -10800,
    displayName: "Tucumán",
    countryId: "AR"
}, P.timeZones[154], {
    id: "Atlantic/South_Georgia",
    utcStandardOffsetSeconds: -7200,
    displayName: "Georgia del Sud",
    countryId: "GS"
}, P.timeZones.slice(155, 157), {
    id: "Atlantic/Azores",
    regionId: "039",
    utcStandardOffsetSeconds: -3600,
    displayName: "Azzorre",
    countryId: "PT"
}, {
    id: "Atlantic/Cape_Verde",
    regionId: "011",
    utcStandardOffsetSeconds: -3600,
    displayName: "Capo Verde",
    countryId: "CV"
}, P.timeZones.slice(160, 166), {
    id: "Atlantic/Canary",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Canarie",
    countryId: "ES"
}, P.timeZones.slice(167, 170), {
    id: "Europe/Dublin",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Dublino",
    countryId: "IE"
}, P.timeZones.slice(171, 174), {
    id: "Europe/Isle_of_Man",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Isola di Man",
    countryId: "IM"
}, P.timeZones[175], {
    id: "Europe/Lisbon",
    regionId: "039",
    utcStandardOffsetSeconds: 0,
    displayName: "Lisbona",
    countryId: "PT"
}, {
    id: "Africa/Lome",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Lomé",
    countryId: "TG"
}, {
    id: "Europe/London",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Londra",
    countryId: "GB"
}, P.timeZones.slice(179, 183), {
    id: "Atlantic/Reykjavik",
    regionId: "154",
    utcStandardOffsetSeconds: 0,
    displayName: "Reykjavík",
    countryId: "IS"
}, {
    id: "Atlantic/St_Helena",
    regionId: "011",
    utcStandardOffsetSeconds: 0,
    displayName: "Sant’Elena",
    countryId: "SH"
}, {
    id: "Africa/Sao_Tome",
    regionId: "017",
    utcStandardOffsetSeconds: 0,
    displayName: "São Tomé",
    countryId: "ST"
}, P.timeZones[186], {
    id: "Africa/Algiers",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Algeri",
    countryId: "DZ"
}, P.timeZones.slice(188, 191), {
    id: "Europe/Belgrade",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Belgrado",
    countryId: "RS"
}, {
    id: "Europe/Berlin",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Berlino",
    countryId: "DE"
}, P.timeZones.slice(193, 195), {
    id: "Europe/Brussels",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Bruxelles",
    countryId: "BE"
}, P.timeZones[196], {
    id: "Europe/Busingen",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Büsingen",
    countryId: "DE"
}, P.timeZones.slice(198, 200), {
    id: "Europe/Vatican",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Città del Vaticano",
    countryId: "VA"
}, {
    id: "Europe/Copenhagen",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Copenaghen",
    countryId: "DK"
}, P.timeZones[201], {
    id: "Africa/El_Aaiun",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "El Ayun",
    countryId: "EH"
}, {
    id: "Europe/Gibraltar",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Gibilterra",
    countryId: "GI"
}, P.timeZones.slice(204, 207), P.timeZones.slice(208, 210), {
    id: "Europe/Ljubljana",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Lubiana",
    countryId: "SI"
}, {
    id: "Europe/Luxembourg",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Lussemburgo",
    countryId: "LU"
}, P.timeZones.slice(211, 215), P.timeZones[216], {
    id: "Africa/Ndjamena",
    regionId: "017",
    utcStandardOffsetSeconds: 3600,
    displayName: "N’Djamena",
    countryId: "TD"
}, P.timeZones[217], {
    id: "Europe/Paris",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Parigi",
    countryId: "FR"
}, P.timeZones.slice(219, 221), {
    id: "Europe/Prague",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Praga",
    countryId: "CZ"
}, {
    id: "Europe/Rome",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Roma",
    countryId: "IT"
}, P.timeZones.slice(223, 226), {
    id: "Europe/Stockholm",
    regionId: "154",
    utcStandardOffsetSeconds: 3600,
    displayName: "Stoccolma",
    countryId: "SE"
}, {
    id: "Europe/Tirane",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tirana",
    countryId: "AL"
}, {
    id: "Africa/Tunis",
    regionId: "015",
    utcStandardOffsetSeconds: 3600,
    displayName: "Tunisi",
    countryId: "TN"
}, P.timeZones[229], {
    id: "Europe/Warsaw",
    regionId: "151",
    utcStandardOffsetSeconds: 3600,
    displayName: "Varsavia",
    countryId: "PL"
}, P.timeZones[231], {
    id: "Europe/Zagreb",
    regionId: "039",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zagabria",
    countryId: "HR"
}, {
    id: "Europe/Zurich",
    regionId: "155",
    utcStandardOffsetSeconds: 3600,
    displayName: "Zurigo",
    countryId: "CH"
}, {
    id: "Europe/Athens",
    regionId: "039",
    utcStandardOffsetSeconds: 7200,
    displayName: "Atene",
    countryId: "GR"
}, P.timeZones.slice(236, 238), {
    id: "Europe/Bucharest",
    regionId: "151",
    utcStandardOffsetSeconds: 7200,
    displayName: "Bucarest",
    countryId: "RO"
}, P.timeZones[239], P.timeZones.slice(241, 245), {
    id: "Asia/Jerusalem",
    regionId: "145",
    utcStandardOffsetSeconds: 7200,
    displayName: "Gerusalemme",
    countryId: "IL"
}, {
    id: "Africa/Juba",
    regionId: "014",
    utcStandardOffsetSeconds: 7200,
    displayName: "Giuba",
    countryId: "SS"
}, P.timeZones.slice(245, 248), {
    id: "Africa/Cairo",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Il Cairo",
    countryId: "EG"
}, P.timeZones[249], P.timeZones[251], {
    id: "Africa/Khartoum",
    regionId: "015",
    utcStandardOffsetSeconds: 7200,
    displayName: "Khartum",
    countryId: "SD"
}, P.timeZones.slice(253, 268), {
    id: "Africa/Addis_Ababa",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Addis Abeba",
    countryId: "ET"
}, P.timeZones.slice(269, 274), {
    id: "Asia/Bahrain",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Bahrein",
    countryId: "BH"
}, {
    id: "Indian/Comoro",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Comore",
    countryId: "KM"
}, {
    id: "Asia/Damascus",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Damasco",
    countryId: "SY"
}, P.timeZones[277], {
    id: "Africa/Djibouti",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Gibuti",
    countryId: "DJ"
}, P.timeZones.slice(279, 285), {
    id: "Africa/Mogadishu",
    regionId: "014",
    utcStandardOffsetSeconds: 10800,
    displayName: "Mogadiscio",
    countryId: "SO"
}, {
    id: "Europe/Moscow",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Mosca",
    countryId: "RU"
}, P.timeZones.slice(287, 289), {
    id: "Asia/Riyadh",
    regionId: "145",
    utcStandardOffsetSeconds: 10800,
    displayName: "Riyad",
    countryId: "SA"
}, {
    id: "Europe/Simferopol",
    regionId: "151",
    utcStandardOffsetSeconds: 10800,
    displayName: "Sinferopoli",
    countryId: "UA"
}, P.timeZones.slice(291, 293), {
    id: "Asia/Tehran",
    regionId: "034",
    utcStandardOffsetSeconds: 12600,
    displayName: "Teheran",
    countryId: "IR"
}, P.timeZones.slice(294, 297), {
    id: "Indian/Reunion",
    regionId: "014",
    utcStandardOffsetSeconds: 14400,
    displayName: "La Riunione",
    countryId: "RE"
}, P.timeZones[297], {
    id: "Asia/Muscat",
    regionId: "145",
    utcStandardOffsetSeconds: 14400,
    displayName: "Mascate",
    countryId: "OM"
}, P.timeZones[298], P.timeZones.slice(301, 308), {
    id: "Asia/Aqtobe",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Aqtöbe",
    countryId: "KZ"
}, P.timeZones.slice(309, 312), {
    id: "Asia/Yekaterinburg",
    regionId: "151",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Ekaterinburg",
    countryId: "RU"
}, P.timeZones.slice(312, 314), {
    id: "Indian/Maldives",
    regionId: "034",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Maldive",
    countryId: "MV"
}, P.timeZones.slice(315, 318), {
    id: "Asia/Samarkand",
    regionId: "143",
    utcStandardOffsetSeconds: 18e3,
    displayName: "Samarcanda",
    countryId: "UZ"
}, P.timeZones[319], P.timeZones.slice(321, 327), {
    id: "Asia/Dhaka",
    regionId: "034",
    utcStandardOffsetSeconds: 21600,
    displayName: "Dacca",
    countryId: "BD"
}, P.timeZones.slice(328, 337), P.timeZones[338], {
    id: "Asia/Jakarta",
    regionId: "035",
    utcStandardOffsetSeconds: 25200,
    displayName: "Giacarta",
    countryId: "ID"
}, P.timeZones.slice(339, 341), {
    id: "Asia/Krasnoyarsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Krasnojarsk",
    countryId: "RU"
}, {
    id: "Indian/Christmas",
    utcStandardOffsetSeconds: 25200,
    displayName: "Natale",
    countryId: "CX"
}, {
    id: "Asia/Novokuznetsk",
    regionId: "151",
    utcStandardOffsetSeconds: 25200,
    displayName: "Novokuzneck",
    countryId: "RU"
}, P.timeZones.slice(344, 355), {
    id: "Asia/Macau",
    regionId: "030",
    utcStandardOffsetSeconds: 28800,
    displayName: "Macao",
    countryId: "MO"
}, P.timeZones.slice(356, 364), {
    id: "Asia/Khandyga",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Chandyga",
    countryId: "RU"
}, P.timeZones[365], {
    id: "Asia/Yakutsk",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Jakutsk",
    countryId: "RU"
}, P.timeZones[366], P.timeZones.slice(368, 370), {
    id: "Asia/Seoul",
    regionId: "030",
    utcStandardOffsetSeconds: 32400,
    displayName: "Seul",
    countryId: "KR"
}, P.timeZones[371], {
    id: "Asia/Chita",
    regionId: "151",
    utcStandardOffsetSeconds: 32400,
    displayName: "Čita",
    countryId: "RU"
}, P.timeZones.slice(373, 387), {
    id: "Asia/Ust-Nera",
    regionId: "151",
    utcStandardOffsetSeconds: 36e3,
    displayName: "Ust’-Nera",
    countryId: "RU"
}, P.timeZones.slice(388, 399), {
    id: "Asia/Sakhalin",
    regionId: "151",
    utcStandardOffsetSeconds: 39600,
    displayName: "Sachalin",
    countryId: "RU"
}, P.timeZones[400], {
    id: "Asia/Anadyr",
    regionId: "151",
    utcStandardOffsetSeconds: 43200,
    displayName: "Anadyr’",
    countryId: "RU"
}, P.timeZones[402], {
    id: "Pacific/Fiji",
    regionId: "054",
    utcStandardOffsetSeconds: 43200,
    displayName: "Figi",
    countryId: "FJ"
}, P.timeZones.slice(404, 419));

inter.territories = [ _c5je345, _c5je380, _c5je439, _c5je436, _c5je455, _c5je445, _c5je221, _c5je222, _c5je422, _c5je446, _c5je447, _c5je440, _c5je401, _c5je223, _c5je191, _c5je272, _c5je120, _c5je409, _c5je381, _c5je304, _c5je224, _c5je167, _c5je361, _c5je433, _c5je429, _c5je448, _c5je437, _c5je423, _c5je305, _c5je225, _c5je346, _c5je226, _c5je227, _c5je325, _c5je273, _c5je192, _c5je193, _c5je168, _c5je228, _c5je194, _c5je347, _c5je229, _c5je430, _c5je274, _c5je230, _c5je195, _c5je275, _c5je362, _c5je231, _c5je276, _c5je232, _c5je196, _c5je326, _c5je391, _c5je402, _c5je139, _c5je153, _c5je154, _c5je155, _c5je169, _c5je414, _c5je277, _c5je197, _c5je403, _c5je410, _c5je382, _c5je371, _c5je327, _c5je383, _c5je233, _c5je156, _c5je234, _c5je306, _c5je132, _c5je278, _c5je235, _c5je198, _c5je348, _c5je424, _c5je236, _c5je237, _c5je238, _c5je384, _c5je456, _c5je457, _c5je449, _c5je465, _c5je157, _c5je307, _c5je308, _c5je239, _c5je170, _c5je199, _c5je240, _c5je458, _c5je279, _c5je171, _c5je280, _c5je281, _c5je328, _c5je200, _c5je309, _c5je201, _c5je241, _c5je349, _c5je310, _c5je158, _c5je311, _c5je282, _c5je202, _c5je415, _c5je372, _c5je203, _c5je392, _c5je172, _c5je283, _c5je173, _c5je312, _c5je159, _c5je160, _c5je242, _c5je243, _c5je148, _c5je133, _c5je138, _c5je373, _c5je174, _c5je363, _c5je134, _c5je364, _c5je204, _c5je329, _c5je385, _c5je374, _c5je284, _c5je466, _c5je386, _c5je387, _c5je388, _c5je431, _c5je441, _c5je452, _c5je350, _c5je244, _c5je205, _c5je206, _c5je330, _c5je175, _c5je365, _c5je285, _c5je245, _c5je207, _c5je161, _c5je246, _c5je286, _c5je208, _c5je247, _c5je176, _c5je375, _c5je287, _c5je351, _c5je331, _c5je209, _c5je288, _c5je248, _c5je162, _c5je177, _c5je249, _c5je313, _c5je332, _c5je314, _c5je250, _c5je411, _c5je251, _c5je333, _c5je289, _c5je210, _c5je115, _c5je290, _c5je334, _c5je335, _c5je315, _c5je416, _c5je252, _c5je178, _c5je179, _c5je316, _c5je180, _c5je253, _c5je163, _c5je417, _c5je291, _c5je393, _c5je376, _c5je394, {
    id: "QO",
    displayName: "Oceania lontana",
    regionId: "009",
    hasTimeZones: false
}, _c5je164, _c5je352, _c5je292, _c5je181, _c5je211, _c5je418, _c5je293, _c5je165, _c5je412, _c5je419, _c5je254, _c5je336, _c5je317, _c5je182, _c5je404, _c5je366, _c5je464, _c5je353, _c5je395, _c5je450, _c5je434, _c5je442, _c5je294, _c5je255, _c5je212, _c5je213, _c5je420, _c5je425, _c5je354, _c5je367, _c5je443, _c5je459, _c5je405, _c5je183, _c5je396, _c5je337, _c5je338, _c5je256, _c5je214, _c5je339, _c5je368, _c5je318, _c5je369, _c5je184, _c5je340, _c5je295, _c5je257, _c5je215, _c5je319, _c5je355, _c5je320, _c5je451, _c5je321, _c5je185, _c5je296, _c5je432, _c5je216, _c5je297, _c5je322, _c5je426, _c5je341, _c5je217, _c5je298, _c5je299, _c5je435, _c5je460, _c5je342, _c5je356, _c5je166, _c5je258, _c5je186, _c5je413, _c5je149, _c5je259, _c5je260, _c5je370, _c5je218, _c5je261, _c5je219, _c5je300, _c5je262, _c5je343, _c5je263, _c5je323, _c5je264, _c5je397, _c5je187, _c5je220, _c5je301 ];

inter.regions = [ _c5je380, _c5je439, _c5je436, _c5je455, _c5je445, _c5je446, _c5je447, _c5je440, _c5je401, _c5je361, _c5je433, _c5je429, _c5je448, _c5je437, _c5je423, _c5je391, _c5je384, _c5je456, _c5je457, _c5je449, _c5je465, _c5je411, _c5je115, _c5je417, _c5je394, _c5je412, _c5je464, _c5je451 ];

inter.countries = [ _c5je345, _c5je221, _c5je222, _c5je422, _c5je223, _c5je191, _c5je272, _c5je120, _c5je409, _c5je381, _c5je304, _c5je224, _c5je167, _c5je305, _c5je225, _c5je346, _c5je226, _c5je227, _c5je325, _c5je273, _c5je192, _c5je193, _c5je168, _c5je228, _c5je194, _c5je347, _c5je229, _c5je430, _c5je274, _c5je230, _c5je195, _c5je275, _c5je362, _c5je231, _c5je276, _c5je232, _c5je196, _c5je326, _c5je402, _c5je139, _c5je153, _c5je154, _c5je155, _c5je169, _c5je414, _c5je277, _c5je197, _c5je403, _c5je410, _c5je382, _c5je371, _c5je327, _c5je383, _c5je233, _c5je156, _c5je234, _c5je306, _c5je132, _c5je278, _c5je235, _c5je198, _c5je348, _c5je424, _c5je236, _c5je237, _c5je238, _c5je157, _c5je307, _c5je308, _c5je239, _c5je170, _c5je199, _c5je240, _c5je458, _c5je279, _c5je171, _c5je280, _c5je281, _c5je328, _c5je200, _c5je309, _c5je201, _c5je241, _c5je349, _c5je310, _c5je158, _c5je311, _c5je282, _c5je202, _c5je415, _c5je372, _c5je203, _c5je392, _c5je172, _c5je283, _c5je173, _c5je312, _c5je159, _c5je160, _c5je242, _c5je243, _c5je148, _c5je133, _c5je138, _c5je373, _c5je174, _c5je363, _c5je134, _c5je364, _c5je204, _c5je329, _c5je385, _c5je374, _c5je284, _c5je466, _c5je386, _c5je387, _c5je388, _c5je431, _c5je441, _c5je452, _c5je350, _c5je244, _c5je205, _c5je206, _c5je330, _c5je175, _c5je365, _c5je285, _c5je245, _c5je207, _c5je161, _c5je246, _c5je286, _c5je208, _c5je247, _c5je176, _c5je375, _c5je287, _c5je351, _c5je331, _c5je209, _c5je288, _c5je248, _c5je162, _c5je177, _c5je249, _c5je313, _c5je332, _c5je314, _c5je250, _c5je251, _c5je333, _c5je289, _c5je210, _c5je290, _c5je334, _c5je335, _c5je315, _c5je416, _c5je252, _c5je178, _c5je179, _c5je316, _c5je180, _c5je253, _c5je163, _c5je291, _c5je393, _c5je376, _c5je164, _c5je352, _c5je292, _c5je181, _c5je211, _c5je418, _c5je293, _c5je165, _c5je419, _c5je254, _c5je336, _c5je317, _c5je182, _c5je404, _c5je366, _c5je353, _c5je395, _c5je450, _c5je434, _c5je442, _c5je294, _c5je255, _c5je212, _c5je213, _c5je420, _c5je425, _c5je354, _c5je367, _c5je443, _c5je459, _c5je405, _c5je183, _c5je396, _c5je337, _c5je338, _c5je256, _c5je214, _c5je339, _c5je368, _c5je318, _c5je369, _c5je184, _c5je340, _c5je295, _c5je257, _c5je215, _c5je319, _c5je355, _c5je320, _c5je321, _c5je185, _c5je296, _c5je432, _c5je216, _c5je297, _c5je322, _c5je426, _c5je341, _c5je217, _c5je298, _c5je299, _c5je435, _c5je460, _c5je342, _c5je356, _c5je166, _c5je258, _c5je186, _c5je413, _c5je149, _c5je259, _c5je260, _c5je370, _c5je218, _c5je261, _c5je219, _c5je300, _c5je262, _c5je343, _c5je263, _c5je323, _c5je264, _c5je397, _c5je187, _c5je220, _c5je301 ];

inter.languages = [ {
    id: "ab",
    displayName: "abcaso"
}, {
    id: "akk",
    displayName: "accado"
}, {
    id: "ace",
    displayName: "accinese"
}, {
    id: "ach",
    displayName: "acioli"
}, {
    id: "ada",
    displayName: "adangme"
}, {
    id: "ady",
    displayName: "adyghe"
}, {
    id: "aa",
    displayName: "afar"
}, {
    id: "afh",
    displayName: "afrihili"
}, {
    id: "af",
    displayName: "afrikaans",
    nativeDisplayName: "Afrikaans"
}, {
    id: "agq",
    displayName: "aghem",
    nativeDisplayName: "Aghem"
}, {
    id: "ain",
    displayName: "ainu"
}, {
    id: "ak",
    displayName: "akan",
    nativeDisplayName: "Akan"
}, {
    id: "bss",
    displayName: "akoose"
}, {
    id: "akz",
    displayName: "alabama"
}, {
    id: "aln",
    displayName: "albanese ghego"
}, {
    id: "ale",
    displayName: "aleuto"
}, {
    id: "alt",
    displayName: "altai meridionale"
}, {
    id: "en_us",
    displayName: "inglese americano",
    nativeDisplayName: "American English"
}, {
    id: "smn",
    displayName: "sami di Inari",
    nativeDisplayName: "anarâškielâ"
}, {
    id: "anp",
    displayName: "angika"
}, {
    id: "njo",
    displayName: "ao"
}, {
    id: "arq",
    displayName: "arabo algerino"
}, {
    id: "arz",
    displayName: "arabo egiziano"
}, {
    id: "ary",
    displayName: "arabo marocchino"
}, {
    id: "aeb",
    displayName: "arabo tunisino"
}, {
    id: "an",
    displayName: "aragonese"
}, {
    id: "arc",
    displayName: "aramaico"
}, {
    id: "sam",
    displayName: "aramaico samaritano"
}, {
    id: "aro",
    displayName: "araona"
}, {
    id: "arp",
    displayName: "arapaho"
}, {
    id: "arn",
    displayName: "araucano"
}, {
    id: "arw",
    displayName: "aruaco"
}, {
    id: "rup",
    displayName: "arumeno"
}, {
    id: "ast",
    displayName: "asturiano",
    nativeDisplayName: "asturianu"
}, {
    id: "cch",
    displayName: "atsam"
}, {
    id: "en_au",
    displayName: "inglese australiano",
    nativeDisplayName: "Australian English"
}, {
    id: "av",
    displayName: "avaro"
}, {
    id: "ae",
    displayName: "avestan"
}, {
    id: "awa",
    displayName: "awadhi"
}, {
    id: "ay",
    displayName: "aymara"
}, {
    id: "az",
    displayName: "azerbaigiano",
    nativeDisplayName: "azərbaycan dili"
}, {
    id: "bfq",
    displayName: "badaga"
}, {
    id: "bfd",
    displayName: "bafut"
}, {
    id: "ms",
    displayName: "malese",
    nativeDisplayName: "Bahasa Melayu"
}, {
    id: "bqi",
    displayName: "bakhtiari"
}, {
    id: "ban",
    displayName: "balinese"
}, {
    id: "bm",
    displayName: "bambara",
    nativeDisplayName: "bamanakan"
}, {
    id: "bax",
    displayName: "bamun"
}, {
    id: "bjn",
    displayName: "banjar"
}, {
    id: "ba",
    displayName: "baschiro"
}, {
    id: "nds",
    displayName: "basso tedesco"
}, {
    id: "nds_nl",
    displayName: "basso tedesco olandese"
}, {
    id: "bbc",
    displayName: "batak toba"
}, {
    id: "bar",
    displayName: "bavarese"
}, {
    id: "bej",
    displayName: "begia"
}, {
    id: "bal",
    displayName: "beluci"
}, {
    id: "bgn",
    displayName: "beluci occidentale"
}, {
    id: "bew",
    displayName: "betawi"
}, {
    id: "bho",
    displayName: "bhojpuri"
}, {
    id: "bik",
    displayName: "bicol"
}, {
    id: "bin",
    displayName: "bini"
}, {
    id: "bpy",
    displayName: "bishnupriya"
}, {
    id: "bi",
    displayName: "bislama"
}, {
    id: "byn",
    displayName: "blin"
}, {
    id: "zbl",
    displayName: "blissymbol"
}, {
    id: "bs",
    displayName: "bosniaco",
    nativeDisplayName: "bosanski"
}, {
    id: "brh",
    displayName: "brahui"
}, {
    id: "bra",
    displayName: "braj"
}, {
    id: "br",
    displayName: "bretone",
    nativeDisplayName: "brezhoneg"
}, {
    id: "en_gb",
    displayName: "inglese britannico",
    nativeDisplayName: "British English"
}, {
    id: "bug",
    displayName: "bugi"
}, {
    id: "bum",
    displayName: "bulu"
}, {
    id: "bua",
    displayName: "buriat"
}, {
    id: "cad",
    displayName: "caddo"
}, {
    id: "en_ca",
    displayName: "inglese canadese",
    nativeDisplayName: "Canadian English"
}, {
    id: "cps",
    displayName: "capiznon"
}, {
    id: "krl",
    displayName: "careliano"
}, {
    id: "car",
    displayName: "caribico"
}, {
    id: "ca",
    displayName: "catalano",
    nativeDisplayName: "català"
}, {
    id: "cay",
    displayName: "cayuga"
}, {
    id: "ceb",
    displayName: "cebuano"
}, {
    id: "shu",
    displayName: "chadian arabic"
}, {
    id: "ch",
    displayName: "chamorro"
}, {
    id: "chy",
    displayName: "cheyenne"
}, {
    id: "chb",
    displayName: "chibcha"
}, {
    id: "kde",
    displayName: "makonde",
    nativeDisplayName: "Chimakonde"
}, {
    id: "chp",
    displayName: "chipewyan"
}, {
    id: "sn",
    displayName: "shona",
    nativeDisplayName: "chiShona"
}, {
    id: "cho",
    displayName: "choctaw"
}, {
    id: "chk",
    displayName: "chuukese"
}, {
    id: "tw",
    displayName: "ci"
}, {
    id: "chg",
    displayName: "ciagataico"
}, {
    id: "lzh",
    displayName: "cinese classico"
}, {
    id: "cv",
    displayName: "ciuvascio"
}, {
    id: "swb",
    displayName: "comoriano"
}, {
    id: "cop",
    displayName: "copto"
}, {
    id: "co",
    displayName: "corso"
}, {
    id: "cr",
    displayName: "cree"
}, {
    id: "mus",
    displayName: "creek"
}, {
    id: "jam",
    displayName: "creolo giamaicano"
}, {
    id: "ku",
    displayName: "curdo"
}, {
    id: "sdh",
    displayName: "curdo meridionale"
}, {
    id: "cy",
    displayName: "gallese",
    nativeDisplayName: "Cymraeg"
}, {
    id: "dak",
    displayName: "dakota"
}, {
    id: "da",
    displayName: "danese",
    nativeDisplayName: "dansk"
}, {
    id: "dar",
    displayName: "dargwa"
}, {
    id: "gbz",
    displayName: "dari zoroastriano"
}, {
    id: "se",
    displayName: "sami del nord",
    nativeDisplayName: "davvisámegiella"
}, {
    id: "dzg",
    displayName: "dazaga"
}, {
    id: "del",
    displayName: "delaware"
}, {
    id: "de",
    displayName: "tedesco",
    nativeDisplayName: "Deutsch"
}, {
    id: "luo",
    displayName: "luo",
    nativeDisplayName: "Dholuo"
}, {
    id: "din",
    displayName: "dinca"
}, {
    id: "dyu",
    displayName: "diula"
}, {
    id: "dv",
    displayName: "divehi"
}, {
    id: "doi",
    displayName: "dogri"
}, {
    id: "dgr",
    displayName: "dogrib"
}, {
    id: "dsb",
    displayName: "basso sorabo",
    nativeDisplayName: "dolnoserbšćina"
}, {
    id: "dtp",
    displayName: "dusun centrale"
}, {
    id: "dua",
    displayName: "duala",
    nativeDisplayName: "duálá"
}, {
    id: "et",
    displayName: "estone",
    nativeDisplayName: "eesti"
}, {
    id: "efi",
    displayName: "efik"
}, {
    id: "egy",
    displayName: "egiziano antico"
}, {
    id: "eka",
    displayName: "ekajuka"
}, {
    id: "guz",
    displayName: "gusii",
    nativeDisplayName: "Ekegusii"
}, {
    id: "elx",
    displayName: "elamitico"
}, {
    id: "egl",
    displayName: "emiliano"
}, {
    id: "en",
    displayName: "inglese",
    nativeDisplayName: "English"
}, {
    id: "myv",
    displayName: "erzya"
}, {
    id: "es",
    displayName: "spagnolo",
    nativeDisplayName: "español"
}, {
    id: "es_es",
    displayName: "spagnolo europeo",
    nativeDisplayName: "español de España"
}, {
    id: "es_mx",
    displayName: "spagnolo messicano",
    nativeDisplayName: "español de México"
}, {
    id: "es_419",
    displayName: "spagnolo latinoamericano",
    nativeDisplayName: "español latinoamericano"
}, {
    id: "eo",
    displayName: "esperanto",
    nativeDisplayName: "esperanto"
}, {
    id: "ext",
    displayName: "estremegno"
}, {
    id: "eu",
    displayName: "basco",
    nativeDisplayName: "euskara"
}, {
    id: "ewo",
    displayName: "ewondo",
    nativeDisplayName: "ewondo"
}, {
    id: "ee",
    displayName: "ewe",
    nativeDisplayName: "Eʋegbe"
}, {
    id: "fan",
    displayName: "fang"
}, {
    id: "fat",
    displayName: "fanti"
}, {
    id: "phn",
    displayName: "fenicio"
}, {
    id: "vls",
    displayName: "fiammingo occidentale"
}, {
    id: "fj",
    displayName: "figiano"
}, {
    id: "fil",
    displayName: "filippino",
    nativeDisplayName: "Filipino"
}, {
    id: "fit",
    displayName: "finlandese del Tornedalen"
}, {
    id: "fon",
    displayName: "fon"
}, {
    id: "fro",
    displayName: "francese antico"
}, {
    id: "frc",
    displayName: "francese cajun"
}, {
    id: "frm",
    displayName: "francese medio"
}, {
    id: "frp",
    displayName: "francoprovenzale"
}, {
    id: "fr",
    displayName: "francese",
    nativeDisplayName: "français"
}, {
    id: "fr_ca",
    displayName: "francese canadese",
    nativeDisplayName: "français canadien"
}, {
    id: "fr_ch",
    displayName: "francese svizzero",
    nativeDisplayName: "français suisse"
}, {
    id: "frs",
    displayName: "frisone orientale"
}, {
    id: "frr",
    displayName: "frisone settentrionale"
}, {
    id: "fur",
    displayName: "friulano",
    nativeDisplayName: "furlan"
}, {
    id: "fo",
    displayName: "faroese",
    nativeDisplayName: "føroyskt"
}, {
    id: "gaa",
    displayName: "ga"
}, {
    id: "ga",
    displayName: "irlandese",
    nativeDisplayName: "Gaeilge"
}, {
    id: "gv",
    displayName: "mannese",
    nativeDisplayName: "Gaelg"
}, {
    id: "gag",
    displayName: "gagauzo"
}, {
    id: "gl",
    displayName: "galiziano",
    nativeDisplayName: "galego"
}, {
    id: "gan",
    displayName: "gan"
}, {
    id: "gay",
    displayName: "gayo"
}, {
    id: "gba",
    displayName: "gbaya"
}, {
    id: "gez",
    displayName: "geez"
}, {
    id: "grb",
    displayName: "gerbo"
}, {
    id: "chn",
    displayName: "gergo chinook"
}, {
    id: "bbj",
    displayName: "ghomala"
}, {
    id: "jv",
    displayName: "giavanese"
}, {
    id: "ki",
    displayName: "kikuyu",
    nativeDisplayName: "Gikuyu"
}, {
    id: "glk",
    displayName: "gilaki"
}, {
    id: "gil",
    displayName: "gilbertese"
}, {
    id: "jrb",
    displayName: "giudeo arabo"
}, {
    id: "jpr",
    displayName: "giudeo persiano"
}, {
    id: "lad",
    displayName: "giudeo-spagnolo"
}, {
    id: "gon",
    displayName: "gondi"
}, {
    id: "gor",
    displayName: "gorontalo"
}, {
    id: "got",
    displayName: "gotico"
}, {
    id: "grc",
    displayName: "greco antico"
}, {
    id: "gn",
    displayName: "guaraní"
}, {
    id: "gwi",
    displayName: "gwichʼin"
}, {
    id: "gd",
    displayName: "gaelico scozzese",
    nativeDisplayName: "Gàidhlig"
}, {
    id: "hai",
    displayName: "haida"
}, {
    id: "ht",
    displayName: "haitiano"
}, {
    id: "hak",
    displayName: "hakka"
}, {
    id: "ha",
    displayName: "hausa",
    nativeDisplayName: "Hausa"
}, {
    id: "hz",
    displayName: "herero"
}, {
    id: "bez",
    displayName: "bena",
    nativeDisplayName: "Hibena"
}, {
    id: "hil",
    displayName: "hiligayna"
}, {
    id: "hif",
    displayName: "hindi figiano"
}, {
    id: "ho",
    displayName: "hiri motu"
}, {
    id: "hit",
    displayName: "hittite"
}, {
    id: "hmn",
    displayName: "hmong"
}, {
    id: "hsb",
    displayName: "alto sorabo",
    nativeDisplayName: "hornjoserbšćina"
}, {
    id: "hr",
    displayName: "croato",
    nativeDisplayName: "hrvatski"
}, {
    id: "hup",
    displayName: "hupa"
}, {
    id: "iba",
    displayName: "iban"
}, {
    id: "ibb",
    displayName: "ibibio"
}, {
    id: "bem",
    displayName: "wemba",
    nativeDisplayName: "Ichibemba"
}, {
    id: "io",
    displayName: "ido"
}, {
    id: "ig",
    displayName: "igbo",
    nativeDisplayName: "Igbo"
}, {
    id: "rn",
    displayName: "rundi",
    nativeDisplayName: "Ikirundi"
}, {
    id: "ilo",
    displayName: "ilocano"
}, {
    id: "id",
    displayName: "indonesiano",
    nativeDisplayName: "Indonesia"
}, {
    id: "ang",
    displayName: "inglese antico"
}, {
    id: "enm",
    displayName: "inglese medio"
}, {
    id: "izh",
    displayName: "ingrico"
}, {
    id: "inh",
    displayName: "ingush"
}, {
    id: "ia",
    displayName: "interlingua"
}, {
    id: "ie",
    displayName: "interlingue"
}, {
    id: "iu",
    displayName: "inuktitut"
}, {
    id: "ik",
    displayName: "inupiak"
}, {
    id: "sga",
    displayName: "irlandese antico"
}, {
    id: "mga",
    displayName: "irlandese medio"
}, {
    id: "sbp",
    displayName: "sangu",
    nativeDisplayName: "Ishisangu"
}, {
    id: "nd",
    displayName: "ndebele del nord",
    nativeDisplayName: "isiNdebele"
}, {
    id: "zu",
    displayName: "zulu",
    nativeDisplayName: "isiZulu"
}, {
    id: "it",
    displayName: "italiano",
    nativeDisplayName: "italiano"
}, {
    id: "dyo",
    displayName: "jola-fony",
    nativeDisplayName: "joola"
}, {
    id: "jut",
    displayName: "jutlandico"
}, {
    id: "kbd",
    displayName: "kabardia"
}, {
    id: "kea",
    displayName: "capoverdiano",
    nativeDisplayName: "kabuverdianu"
}, {
    id: "kac",
    displayName: "kachin"
}, {
    id: "kaj",
    displayName: "kai"
}, {
    id: "kgp",
    displayName: "kaingang"
}, {
    id: "kkj",
    displayName: "kako",
    nativeDisplayName: "kakɔ"
}, {
    id: "kl",
    displayName: "groenlandese",
    nativeDisplayName: "kalaallisut"
}, {
    id: "kln",
    displayName: "kalenjin",
    nativeDisplayName: "Kalenjin"
}, {
    id: "xal",
    displayName: "kalmyk"
}, {
    id: "kbl",
    displayName: "kanembu"
}, {
    id: "kr",
    displayName: "kanuri"
}, {
    id: "kaa",
    displayName: "kara-kalpak"
}, {
    id: "krc",
    displayName: "karachay-Balkar"
}, {
    id: "csb",
    displayName: "kashubian"
}, {
    id: "kaw",
    displayName: "kawi"
}, {
    id: "kw",
    displayName: "cornico",
    nativeDisplayName: "kernewek"
}, {
    id: "kha",
    displayName: "khasi"
}, {
    id: "naq",
    displayName: "nama",
    nativeDisplayName: "Khoekhoegowab"
}, {
    id: "kho",
    displayName: "khotanese"
}, {
    id: "khw",
    displayName: "khowar"
}, {
    id: "rof",
    displayName: "rombo",
    nativeDisplayName: "Kihorombo"
}, {
    id: "kam",
    displayName: "kamba",
    nativeDisplayName: "Kikamba"
}, {
    id: "jmc",
    displayName: "machame",
    nativeDisplayName: "Kimachame"
}, {
    id: "kmb",
    displayName: "kimbundu"
}, {
    id: "rw",
    displayName: "kinyarwanda",
    nativeDisplayName: "Kinyarwanda"
}, {
    id: "asa",
    displayName: "asu",
    nativeDisplayName: "Kipare"
}, {
    id: "kiu",
    displayName: "kirmanjki"
}, {
    id: "rwk",
    displayName: "rwa",
    nativeDisplayName: "Kiruwa"
}, {
    id: "saq",
    displayName: "samburu",
    nativeDisplayName: "Kisampur"
}, {
    id: "ksb",
    displayName: "shambala",
    nativeDisplayName: "Kishambaa"
}, {
    id: "sw",
    displayName: "swahili",
    nativeDisplayName: "Kiswahili"
}, {
    id: "sw_cd",
    displayName: "congo swahili",
    nativeDisplayName: "Kiswahili ya Kongo"
}, {
    id: "dav",
    displayName: "taita",
    nativeDisplayName: "Kitaita"
}, {
    id: "teo",
    displayName: "teso",
    nativeDisplayName: "Kiteso"
}, {
    id: "tlh",
    displayName: "klingon"
}, {
    id: "bkm",
    displayName: "kom"
}, {
    id: "kv",
    displayName: "komi"
}, {
    id: "kg",
    displayName: "kongo"
}, {
    id: "gom",
    displayName: "konkani goano"
}, {
    id: "kfo",
    displayName: "koro"
}, {
    id: "kos",
    displayName: "kosraean"
}, {
    id: "avk",
    displayName: "kotava"
}, {
    id: "khq",
    displayName: "koyra chiini",
    nativeDisplayName: "Koyra ciini"
}, {
    id: "ses",
    displayName: "koyraboro senni",
    nativeDisplayName: "Koyraboro senni"
}, {
    id: "kpe",
    displayName: "kpelle"
}, {
    id: "mfe",
    displayName: "creolo mauriziano",
    nativeDisplayName: "kreol morisien"
}, {
    id: "kj",
    displayName: "kuanyama"
}, {
    id: "kum",
    displayName: "kumyk"
}, {
    id: "kru",
    displayName: "kurukh"
}, {
    id: "kut",
    displayName: "kutenai"
}, {
    id: "nmg",
    displayName: "kwasio",
    nativeDisplayName: "Kwasio"
}, {
    id: "vun",
    displayName: "vunjo",
    nativeDisplayName: "Kyivunjo"
}, {
    id: "ksh",
    displayName: "coloniese",
    nativeDisplayName: "Kölsch"
}, {
    id: "ebu",
    displayName: "embu",
    nativeDisplayName: "Kĩembu"
}, {
    id: "mer",
    displayName: "meru",
    nativeDisplayName: "Kĩmĩrũ"
}, {
    id: "lag",
    displayName: "langi",
    nativeDisplayName: "Kɨlaangi"
}, {
    id: "quc",
    displayName: "k’iche’"
}, {
    id: "lah",
    displayName: "lahnda"
}, {
    id: "lkt",
    displayName: "lakota",
    nativeDisplayName: "Lakȟólʼiyapi"
}, {
    id: "lam",
    displayName: "lamba"
}, {
    id: "la",
    displayName: "latino"
}, {
    id: "lv",
    displayName: "lettone",
    nativeDisplayName: "latviešu"
}, {
    id: "lzz",
    displayName: "laz"
}, {
    id: "to",
    displayName: "tongano",
    nativeDisplayName: "lea fakatonga"
}, {
    id: "ltg",
    displayName: "letgallo"
}, {
    id: "lez",
    displayName: "lezghian"
}, {
    id: "lt",
    displayName: "lituano",
    nativeDisplayName: "lietuvių"
}, {
    id: "lij",
    displayName: "ligure"
}, {
    id: "li",
    displayName: "limburgese"
}, {
    id: "ase",
    displayName: "lingua dei segni americana"
}, {
    id: "lfn",
    displayName: "Lingua Franca Nova"
}, {
    id: "und",
    displayName: "lingua imprecisata"
}, {
    id: "ln",
    displayName: "lingala",
    nativeDisplayName: "lingála"
}, {
    id: "liv",
    displayName: "livone"
}, {
    id: "jbo",
    displayName: "lojban"
}, {
    id: "lol",
    displayName: "lolo bantu"
}, {
    id: "lmo",
    displayName: "lombardo"
}, {
    id: "loz",
    displayName: "lozi"
}, {
    id: "lua",
    displayName: "luba-lulua"
}, {
    id: "lg",
    displayName: "ganda",
    nativeDisplayName: "Luganda"
}, {
    id: "lui",
    displayName: "luiseno"
}, {
    id: "luy",
    displayName: "luyia",
    nativeDisplayName: "Luluhia"
}, {
    id: "lun",
    displayName: "lunda"
}, {
    id: "lus",
    displayName: "lushai"
}, {
    id: "lb",
    displayName: "lussemburghese",
    nativeDisplayName: "Lëtzebuergesch"
}, {
    id: "mas",
    displayName: "masai",
    nativeDisplayName: "Maa"
}, {
    id: "mde",
    displayName: "maba"
}, {
    id: "mad",
    displayName: "madurese"
}, {
    id: "maf",
    displayName: "mafa"
}, {
    id: "mag",
    displayName: "magahi"
}, {
    id: "hu",
    displayName: "ungherese",
    nativeDisplayName: "magyar"
}, {
    id: "mai",
    displayName: "maithili"
}, {
    id: "mak",
    displayName: "makasar"
}, {
    id: "mgh",
    displayName: "makhuwa-meetto",
    nativeDisplayName: "Makua"
}, {
    id: "mg",
    displayName: "malgascio",
    nativeDisplayName: "Malagasy"
}, {
    id: "mt",
    displayName: "maltese",
    nativeDisplayName: "Malti"
}, {
    id: "mnc",
    displayName: "manchu"
}, {
    id: "mdr",
    displayName: "mandar"
}, {
    id: "man",
    displayName: "mandingo"
}, {
    id: "mni",
    displayName: "manipuri"
}, {
    id: "mi",
    displayName: "maori"
}, {
    id: "chm",
    displayName: "mari"
}, {
    id: "mrj",
    displayName: "mari occidentale"
}, {
    id: "mh",
    displayName: "marshallese"
}, {
    id: "mwr",
    displayName: "marwari"
}, {
    id: "umb",
    displayName: "mbundu"
}, {
    id: "byv",
    displayName: "medumba"
}, {
    id: "min",
    displayName: "menangkabau"
}, {
    id: "men",
    displayName: "mende"
}, {
    id: "xmf",
    displayName: "mengrelio"
}, {
    id: "mwv",
    displayName: "mentawai"
}, {
    id: "mgo",
    displayName: "meta’",
    nativeDisplayName: "metaʼ"
}, {
    id: "mic",
    displayName: "micmac"
}, {
    id: "nan",
    displayName: "min nan"
}, {
    id: "mwl",
    displayName: "mirandese"
}, {
    id: "moh",
    displayName: "mohawk"
}, {
    id: "mdf",
    displayName: "moksha"
}, {
    id: "ro_md",
    displayName: "moldavo",
    nativeDisplayName: "moldovenească"
}, {
    id: "mos",
    displayName: "mossi"
}, {
    id: "mul",
    displayName: "multilingua"
}, {
    id: "mua",
    displayName: "mundang",
    nativeDisplayName: "MUNDAŊ"
}, {
    id: "mye",
    displayName: "myene"
}, {
    id: "nap",
    displayName: "napoletano"
}, {
    id: "na",
    displayName: "nauru"
}, {
    id: "nv",
    displayName: "navajo"
}, {
    id: "jgo",
    displayName: "ngamambo",
    nativeDisplayName: "Ndaꞌa"
}, {
    id: "nr",
    displayName: "ndebele del sud"
}, {
    id: "ng",
    displayName: "ndonga"
}, {
    id: "nl",
    displayName: "olandese",
    nativeDisplayName: "Nederlands"
}, {
    id: "zxx",
    displayName: "nessun contenuto linguistico"
}, {
    id: "new",
    displayName: "newari"
}, {
    id: "nwc",
    displayName: "newari classico"
}, {
    id: "sba",
    displayName: "ngambay"
}, {
    id: "yrl",
    displayName: "nheengatu"
}, {
    id: "nia",
    displayName: "nias"
}, {
    id: "niu",
    displayName: "niue"
}, {
    id: "nog",
    displayName: "nogai"
}, {
    id: "non",
    displayName: "norse antico"
}, {
    id: "nb",
    displayName: "norvegese bokmål",
    nativeDisplayName: "norsk bokmål"
}, {
    id: "no",
    displayName: "norvegese"
}, {
    id: "nov",
    displayName: "novial"
}, {
    id: "yav",
    displayName: "yangben",
    nativeDisplayName: "nuasue"
}, {
    id: "nym",
    displayName: "nyamwezi"
}, {
    id: "ny",
    displayName: "nyanja"
}, {
    id: "tog",
    displayName: "nyasa del Tonga"
}, {
    id: "nn",
    displayName: "norvegese nynorsk",
    nativeDisplayName: "nynorsk"
}, {
    id: "nyo",
    displayName: "nyoro"
}, {
    id: "nzi",
    displayName: "nzima"
}, {
    id: "nqo",
    displayName: "n’ko"
}, {
    id: "oc",
    displayName: "occitano"
}, {
    id: "oj",
    displayName: "ojibwa"
}, {
    id: "dum",
    displayName: "olandese medio"
}, {
    id: "xog",
    displayName: "soga",
    nativeDisplayName: "Olusoga"
}, {
    id: "om",
    displayName: "oromo",
    nativeDisplayName: "Oromoo"
}, {
    id: "osa",
    displayName: "osage"
}, {
    id: "uz",
    displayName: "usbeco",
    nativeDisplayName: "o‘zbek"
}, {
    id: "pal",
    displayName: "pahlavi"
}, {
    id: "pau",
    displayName: "palau"
}, {
    id: "pi",
    displayName: "pali"
}, {
    id: "pam",
    displayName: "pampanga"
}, {
    id: "pag",
    displayName: "pangasinan"
}, {
    id: "pap",
    displayName: "papiamento"
}, {
    id: "koi",
    displayName: "permiaco"
}, {
    id: "peo",
    displayName: "persiano antico"
}, {
    id: "pcd",
    displayName: "piccardo"
}, {
    id: "pms",
    displayName: "piemontese"
}, {
    id: "pl",
    displayName: "polacco",
    nativeDisplayName: "polski"
}, {
    id: "pon",
    displayName: "ponape"
}, {
    id: "pnt",
    displayName: "pontico"
}, {
    id: "pt",
    displayName: "portoghese",
    nativeDisplayName: "português"
}, {
    id: "pt_br",
    displayName: "portoghese brasiliano",
    nativeDisplayName: "português do Brasil"
}, {
    id: "pt_pt",
    displayName: "portoghese europeo",
    nativeDisplayName: "português europeu"
}, {
    id: "pro",
    displayName: "provenzale antico"
}, {
    id: "prg",
    displayName: "prussiano",
    nativeDisplayName: "prūsiskan"
}, {
    id: "ff",
    displayName: "fulah",
    nativeDisplayName: "Pulaar"
}, {
    id: "qug",
    displayName: "quechua dell’altopiano del Chimborazo"
}, {
    id: "raj",
    displayName: "rajasthani"
}, {
    id: "rap",
    displayName: "rapanui"
}, {
    id: "rar",
    displayName: "rarotonga"
}, {
    id: "ksf",
    displayName: "bafia",
    nativeDisplayName: "rikpa"
}, {
    id: "rgn",
    displayName: "romagnolo"
}, {
    id: "rom",
    displayName: "romani"
}, {
    id: "ro",
    displayName: "rumeno",
    nativeDisplayName: "română"
}, {
    id: "root",
    displayName: "root"
}, {
    id: "rtm",
    displayName: "rotumano"
}, {
    id: "rug",
    displayName: "roviana"
}, {
    id: "cgg",
    displayName: "chiga",
    nativeDisplayName: "Rukiga"
}, {
    id: "rm",
    displayName: "romancio",
    nativeDisplayName: "rumantsch"
}, {
    id: "qu",
    displayName: "quechua",
    nativeDisplayName: "Runasimi"
}, {
    id: "nyn",
    displayName: "nyankole",
    nativeDisplayName: "Runyankore"
}, {
    id: "rue",
    displayName: "ruteno"
}, {
    id: "ssy",
    displayName: "saho"
}, {
    id: "sma",
    displayName: "sami del sud"
}, {
    id: "smj",
    displayName: "sami di Lule"
}, {
    id: "sms",
    displayName: "sami skolt"
}, {
    id: "sm",
    displayName: "samoano"
}, {
    id: "sgs",
    displayName: "samogitico"
}, {
    id: "sad",
    displayName: "sandawe"
}, {
    id: "sa",
    displayName: "sanscrito"
}, {
    id: "sat",
    displayName: "santali"
}, {
    id: "sc",
    displayName: "sardo"
}, {
    id: "sas",
    displayName: "sasak"
}, {
    id: "sdc",
    displayName: "sassarese"
}, {
    id: "stq",
    displayName: "saterfriesisch"
}, {
    id: "saz",
    displayName: "saurashtra"
}, {
    id: "de_ch",
    displayName: "alto tedesco svizzero",
    nativeDisplayName: "Schweizer Hochdeutsch"
}, {
    id: "gsw",
    displayName: "tedesco svizzero",
    nativeDisplayName: "Schwiizertüütsch"
}, {
    id: "sco",
    displayName: "scozzese"
}, {
    id: "sly",
    displayName: "selayar"
}, {
    id: "sel",
    displayName: "selkup"
}, {
    id: "seh",
    displayName: "sena",
    nativeDisplayName: "sena"
}, {
    id: "see",
    displayName: "seneca"
}, {
    id: "sh",
    displayName: "serbo-croato"
}, {
    id: "srr",
    displayName: "serer"
}, {
    id: "sei",
    displayName: "seri"
}, {
    id: "shn",
    displayName: "shan"
}, {
    id: "sq",
    displayName: "albanese",
    nativeDisplayName: "shqip"
}, {
    id: "nnh",
    displayName: "ngiemboon",
    nativeDisplayName: "Shwóŋò ngiembɔɔn"
}, {
    id: "scn",
    displayName: "siciliano"
}, {
    id: "sid",
    displayName: "sidamo"
}, {
    id: "bla",
    displayName: "siksika"
}, {
    id: "sd",
    displayName: "sindhi"
}, {
    id: "syr",
    displayName: "siriaco"
}, {
    id: "syc",
    displayName: "siriaco classico"
}, {
    id: "den",
    displayName: "slave"
}, {
    id: "szl",
    displayName: "slesiano"
}, {
    id: "sk",
    displayName: "slovacco",
    nativeDisplayName: "slovenčina"
}, {
    id: "sl",
    displayName: "sloveno",
    nativeDisplayName: "slovenščina"
}, {
    id: "sog",
    displayName: "sogdiano"
}, {
    id: "snk",
    displayName: "soninke"
}, {
    id: "so",
    displayName: "somalo",
    nativeDisplayName: "Soomaali"
}, {
    id: "nso",
    displayName: "sotho del nord"
}, {
    id: "st",
    displayName: "sotho del sud"
}, {
    id: "srn",
    displayName: "sranan tongo"
}, {
    id: "suk",
    displayName: "sukuma"
}, {
    id: "sux",
    displayName: "sumero"
}, {
    id: "su",
    displayName: "sundanese"
}, {
    id: "fi",
    displayName: "finlandese",
    nativeDisplayName: "suomi"
}, {
    id: "sus",
    displayName: "susu"
}, {
    id: "sv",
    displayName: "svedese",
    nativeDisplayName: "svenska"
}, {
    id: "ss",
    displayName: "swati"
}, {
    id: "sg",
    displayName: "sango",
    nativeDisplayName: "Sängö"
}, {
    id: "tl",
    displayName: "tagalog"
}, {
    id: "tg",
    displayName: "tagico"
}, {
    id: "ty",
    displayName: "taitiano"
}, {
    id: "tly",
    displayName: "taliscio"
}, {
    id: "tmh",
    displayName: "tamashek"
}, {
    id: "tzm",
    displayName: "tamazight",
    nativeDisplayName: "Tamaziɣt n laṭlaṣ"
}, {
    id: "kab",
    displayName: "cabilo",
    nativeDisplayName: "Taqbaylit"
}, {
    id: "rif",
    displayName: "tarifit"
}, {
    id: "trv",
    displayName: "taroko"
}, {
    id: "twq",
    displayName: "tasawaq",
    nativeDisplayName: "Tasawaq senni"
}, {
    id: "ttt",
    displayName: "tat islamico"
}, {
    id: "tt",
    displayName: "tataro"
}, {
    id: "goh",
    displayName: "tedesco antico alto"
}, {
    id: "pdc",
    displayName: "tedesco della Pennsylvania"
}, {
    id: "gmh",
    displayName: "tedesco medio alto"
}, {
    id: "pfl",
    displayName: "tedesco palatino"
}, {
    id: "sli",
    displayName: "tedesco slesiano"
}, {
    id: "tem",
    displayName: "temne"
}, {
    id: "ter",
    displayName: "tereno"
}, {
    id: "tet",
    displayName: "tetum"
}, {
    id: "nus",
    displayName: "nuer",
    nativeDisplayName: "Thok Nath"
}, {
    id: "tig",
    displayName: "tigre"
}, {
    id: "tiv",
    displayName: "tiv"
}, {
    id: "vi",
    displayName: "vietnamita",
    nativeDisplayName: "Tiếng Việt"
}, {
    id: "tli",
    displayName: "tlingit"
}, {
    id: "tpi",
    displayName: "tok pisin"
}, {
    id: "tkl",
    displayName: "tokelau"
}, {
    id: "tkr",
    displayName: "tsakhur"
}, {
    id: "lu",
    displayName: "luba-katanga",
    nativeDisplayName: "Tshiluba"
}, {
    id: "tsi",
    displayName: "tsimshian"
}, {
    id: "ts",
    displayName: "tsonga"
}, {
    id: "tn",
    displayName: "tswana"
}, {
    id: "tcy",
    displayName: "tulu"
}, {
    id: "tum",
    displayName: "tumbuka"
}, {
    id: "crh",
    displayName: "turco crimeo"
}, {
    id: "ota",
    displayName: "turco ottomano"
}, {
    id: "tru",
    displayName: "turoyo"
}, {
    id: "tvl",
    displayName: "tuvalu"
}, {
    id: "tyv",
    displayName: "tuvinian"
}, {
    id: "kcg",
    displayName: "tyap"
}, {
    id: "tk",
    displayName: "turcomanno",
    nativeDisplayName: "türkmençe"
}, {
    id: "tr",
    displayName: "turco",
    nativeDisplayName: "Türkçe"
}, {
    id: "udm",
    displayName: "udmurt"
}, {
    id: "uga",
    displayName: "ugaritico"
}, {
    id: "wa",
    displayName: "vallone"
}, {
    id: "ve",
    displayName: "venda"
}, {
    id: "vec",
    displayName: "veneto"
}, {
    id: "vep",
    displayName: "vepso"
}, {
    id: "nl_be",
    displayName: "fiammingo",
    nativeDisplayName: "Vlaams"
}, {
    id: "vo",
    displayName: "volapük",
    nativeDisplayName: "Volapük"
}, {
    id: "vot",
    displayName: "voto"
}, {
    id: "vro",
    displayName: "võro"
}, {
    id: "wal",
    displayName: "walamo"
}, {
    id: "wae",
    displayName: "walser",
    nativeDisplayName: "Walser"
}, {
    id: "war",
    displayName: "waray"
}, {
    id: "wbp",
    displayName: "warlpiri"
}, {
    id: "was",
    displayName: "washo"
}, {
    id: "guc",
    displayName: "wayuu"
}, {
    id: "fy",
    displayName: "frisone occidentale",
    nativeDisplayName: "West-Frysk"
}, {
    id: "wo",
    displayName: "wolof"
}, {
    id: "wuu",
    displayName: "wu"
}, {
    id: "xh",
    displayName: "xhosa"
}, {
    id: "hsn",
    displayName: "xiang"
}, {
    id: "yao",
    displayName: "yao (bantu)"
}, {
    id: "yap",
    displayName: "yapese"
}, {
    id: "ybb",
    displayName: "yemba"
}, {
    id: "esu",
    displayName: "yupik centrale"
}, {
    id: "tsd",
    displayName: "zaconico"
}, {
    id: "zap",
    displayName: "zapotec"
}, {
    id: "dje",
    displayName: "zarma",
    nativeDisplayName: "Zarmaciine"
}, {
    id: "zza",
    displayName: "zaza"
}, {
    id: "zea",
    displayName: "zelandese"
}, {
    id: "zen",
    displayName: "zenaga"
}, {
    id: "za",
    displayName: "zhuang"
}, {
    id: "zun",
    displayName: "zuni"
}, {
    id: "yo",
    displayName: "yoruba",
    nativeDisplayName: "Èdè Yorùbá"
}, {
    id: "is",
    displayName: "islandese",
    nativeDisplayName: "íslenska"
}, {
    id: "de_at",
    displayName: "tedesco austriaco",
    nativeDisplayName: "Österreichisches Deutsch"
}, {
    id: "cs",
    displayName: "ceco",
    nativeDisplayName: "čeština"
}, {
    id: "bas",
    displayName: "basa",
    nativeDisplayName: "Ɓàsàa"
}, {
    id: "haw",
    displayName: "hawaiano",
    nativeDisplayName: "ʻŌlelo Hawaiʻi"
}, {
    id: "el",
    displayName: "greco",
    nativeDisplayName: "Ελληνικά"
}, {
    id: "be",
    displayName: "bielorusso",
    nativeDisplayName: "беларуская"
}, {
    id: "bg",
    displayName: "bulgaro",
    nativeDisplayName: "български"
}, {
    id: "os",
    displayName: "ossetico",
    nativeDisplayName: "ирон"
}, {
    id: "ky",
    displayName: "chirghiso",
    nativeDisplayName: "кыргызча"
}, {
    id: "mk",
    displayName: "macedone",
    nativeDisplayName: "македонски"
}, {
    id: "mn",
    displayName: "mongolo",
    nativeDisplayName: "монгол"
}, {
    id: "ce",
    displayName: "ceceno",
    nativeDisplayName: "нохчийн"
}, {
    id: "ru",
    displayName: "russo",
    nativeDisplayName: "русский"
}, {
    id: "sah",
    displayName: "yakut",
    nativeDisplayName: "саха тыла"
}, {
    id: "sr",
    displayName: "serbo",
    nativeDisplayName: "српски"
}, {
    id: "uk",
    displayName: "ucraino",
    nativeDisplayName: "українська"
}, {
    id: "cu",
    displayName: "slavo della Chiesa",
    nativeDisplayName: "церковнослове́нскїй"
}, {
    id: "kk",
    displayName: "kazako",
    nativeDisplayName: "қазақ тілі"
}, {
    id: "hy",
    displayName: "armeno",
    nativeDisplayName: "հայերեն"
}, {
    id: "yi",
    displayName: "yiddish",
    nativeDisplayName: "ייִדיש"
}, {
    id: "he",
    displayName: "ebraico",
    nativeDisplayName: "עברית"
}, {
    id: "ug",
    displayName: "uiguro",
    nativeDisplayName: "ئۇيغۇرچە"
}, {
    id: "ur",
    displayName: "urdu",
    nativeDisplayName: "اردو"
}, {
    id: "ar",
    displayName: "arabo",
    nativeDisplayName: "العربية"
}, {
    id: "ar_001",
    displayName: "arabo moderno standard",
    nativeDisplayName: "العربية الرسمية الحديثة"
}, {
    id: "fa",
    displayName: "persiano",
    nativeDisplayName: "فارسی"
}, {
    id: "lrc",
    displayName: "luri settentrionale",
    nativeDisplayName: "لۊری شومالی"
}, {
    id: "mzn",
    displayName: "mazandarani",
    nativeDisplayName: "مازرونی"
}, {
    id: "ps",
    displayName: "pashto",
    nativeDisplayName: "پښتو"
}, {
    id: "ckb",
    displayName: "curdo sorani",
    nativeDisplayName: "کوردیی ناوەندی"
}, {
    id: "ks",
    displayName: "kashmiri",
    nativeDisplayName: "کٲشُر"
}, {
    id: "kok",
    displayName: "konkani",
    nativeDisplayName: "कोंकणी"
}, {
    id: "ne",
    displayName: "nepalese",
    nativeDisplayName: "नेपाली"
}, {
    id: "brx",
    displayName: "bodo",
    nativeDisplayName: "बड़ो"
}, {
    id: "mr",
    displayName: "marathi",
    nativeDisplayName: "मराठी"
}, {
    id: "hi",
    displayName: "hindi",
    nativeDisplayName: "हिन्दी"
}, {
    id: "as",
    displayName: "assamese",
    nativeDisplayName: "অসমীয়া"
}, {
    id: "bn",
    displayName: "bengalese",
    nativeDisplayName: "বাংলা"
}, {
    id: "pa",
    displayName: "punjabi",
    nativeDisplayName: "ਪੰਜਾਬੀ"
}, {
    id: "gu",
    displayName: "gujarati",
    nativeDisplayName: "ગુજરાતી"
}, {
    id: "or",
    displayName: "oriya",
    nativeDisplayName: "ଓଡ଼ିଆ"
}, {
    id: "ta",
    displayName: "tamil",
    nativeDisplayName: "தமிழ்"
}, {
    id: "te",
    displayName: "telugu",
    nativeDisplayName: "తెలుగు"
}, {
    id: "kn",
    displayName: "kannada",
    nativeDisplayName: "ಕನ್ನಡ"
}, {
    id: "ml",
    displayName: "malayalam",
    nativeDisplayName: "മലയാളം"
}, {
    id: "si",
    displayName: "singalese",
    nativeDisplayName: "සිංහල"
}, {
    id: "th",
    displayName: "thai",
    nativeDisplayName: "ไทย"
}, {
    id: "lo",
    displayName: "lao",
    nativeDisplayName: "ລາວ"
}, {
    id: "bo",
    displayName: "tibetano",
    nativeDisplayName: "བོད་སྐད་"
}, {
    id: "dz",
    displayName: "dzongkha",
    nativeDisplayName: "རྫོང་ཁ"
}, {
    id: "my",
    displayName: "birmano",
    nativeDisplayName: "ဗမာ"
}, {
    id: "ka",
    displayName: "georgiano",
    nativeDisplayName: "ქართული"
}, {
    id: "ti",
    displayName: "tigrino",
    nativeDisplayName: "ትግርኛ"
}, {
    id: "am",
    displayName: "amarico",
    nativeDisplayName: "አማርኛ"
}, {
    id: "km",
    displayName: "khmer",
    nativeDisplayName: "ខ្មែរ"
}, {
    id: "zgh",
    displayName: "tamazight del Marocco standard",
    nativeDisplayName: "ⵜⴰⵎⴰⵣⵉⵖⵜ"
}, {
    id: "shi",
    displayName: "tashelhit",
    nativeDisplayName: "ⵜⴰⵛⵍⵃⵉⵜ"
}, {
    id: "zh",
    displayName: "cinese",
    nativeDisplayName: "中文"
}, {
    id: "ja",
    displayName: "giapponese",
    nativeDisplayName: "日本語"
}, {
    id: "zh_hans",
    displayName: "cinese semplificato",
    nativeDisplayName: "简体中文"
}, {
    id: "yue",
    displayName: "cantonese",
    nativeDisplayName: "粵語"
}, {
    id: "zh_hant",
    displayName: "cinese tradizionale",
    nativeDisplayName: "繁體中文"
}, {
    id: "ii",
    displayName: "sichuan yi",
    nativeDisplayName: "ꆈꌠꉙ"
}, {
    id: "vai",
    displayName: "vai",
    nativeDisplayName: "ꕙꔤ"
}, {
    id: "chr",
    displayName: "cherokee",
    nativeDisplayName: "ᏣᎳᎩ"
}, {
    id: "ko",
    displayName: "coreano",
    nativeDisplayName: "한국어"
} ];

inter.scripts = [ {
    id: "Bass",
    displayName: "Bassa Vah"
}, {
    id: "Kpel",
    displayName: "Kpelle"
}, {
    id: "Afak",
    displayName: "afaka"
}, {
    id: "Aghb",
    displayName: "albanese caucasico"
}, {
    id: "Visp",
    displayName: "alfabeto visivo"
}, {
    id: "Hung",
    displayName: "antico ungherese"
}, {
    id: "Arab",
    displayName: "arabo"
}, {
    id: "Sarb",
    displayName: "arabo meridionale antico"
}, {
    id: "Narb",
    displayName: "arabo settentrionale antico"
}, {
    id: "Armi",
    displayName: "aramaico imperiale"
}, {
    id: "Armn",
    displayName: "armeno"
}, {
    id: "Avst",
    displayName: "avestico"
}, {
    id: "Bali",
    displayName: "balinese"
}, {
    id: "Bamu",
    displayName: "bamum"
}, {
    id: "Batk",
    displayName: "batak"
}, {
    id: "Beng",
    displayName: "bengalese"
}, {
    id: "Mymr",
    displayName: "birmano"
}, {
    id: "Bopo",
    displayName: "bopomofo"
}, {
    id: "Brah",
    displayName: "brahmi"
}, {
    id: "Brai",
    displayName: "braille"
}, {
    id: "Bugi",
    displayName: "buginese"
}, {
    id: "Buhd",
    displayName: "buhid"
}, {
    id: "Cari",
    displayName: "carian"
}, {
    id: "Cakm",
    displayName: "chakma"
}, {
    id: "Cham",
    displayName: "cham"
}, {
    id: "Cher",
    displayName: "cherokee"
}, {
    id: "Cprt",
    displayName: "cipriota"
}, {
    id: "Cyrl",
    displayName: "cirillico"
}, {
    id: "Cyrs",
    displayName: "cirillico antica chiesa slavonica"
}, {
    id: "Cirt",
    displayName: "cirth"
}, {
    id: "Zyyy",
    displayName: "comune"
}, {
    id: "Copt",
    displayName: "copto"
}, {
    id: "Kore",
    displayName: "coreano"
}, {
    id: "Merc",
    displayName: "corsivo meroitico"
}, {
    id: "Dsrt",
    displayName: "deseret"
}, {
    id: "Deva",
    displayName: "devanagari"
}, {
    id: "Hebr",
    displayName: "ebraico"
}, {
    id: "Egyd",
    displayName: "egiziano demotico"
}, {
    id: "Zinh",
    displayName: "ereditato"
}, {
    id: "Ethi",
    displayName: "etiope"
}, {
    id: "Phnx",
    displayName: "fenicio"
}, {
    id: "Plrd",
    displayName: "fonetica di pollard"
}, {
    id: "Nkgb",
    displayName: "geba naxi"
}, {
    id: "Geor",
    displayName: "georgiano"
}, {
    id: "Hluw",
    displayName: "geroglifici anatolici"
}, {
    id: "Egyp",
    displayName: "geroglifici egiziani"
}, {
    id: "Maya",
    displayName: "geroglifici maya"
}, {
    id: "Jpan",
    displayName: "giapponese"
}, {
    id: "Glag",
    displayName: "glagolitico"
}, {
    id: "Goth",
    displayName: "gotico"
}, {
    id: "Gran",
    displayName: "grantha"
}, {
    id: "Grek",
    displayName: "greco"
}, {
    id: "Gujr",
    displayName: "gujarati"
}, {
    id: "Guru",
    displayName: "gurmukhi"
}, {
    id: "Hani",
    displayName: "han"
}, {
    id: "Hang",
    displayName: "hangul"
}, {
    id: "Hano",
    displayName: "hanunoo"
}, {
    id: "Hira",
    displayName: "hiragana"
}, {
    id: "Egyh",
    displayName: "ieratico egiziano"
}, {
    id: "Inds",
    displayName: "indu"
}, {
    id: "Ital",
    displayName: "italico antico"
}, {
    id: "Java",
    displayName: "javanese"
}, {
    id: "Jurc",
    displayName: "jurchen"
}, {
    id: "Kthi",
    displayName: "kaithi"
}, {
    id: "Knda",
    displayName: "kannada"
}, {
    id: "Kana",
    displayName: "katakana"
}, {
    id: "Hrkt",
    displayName: "katanaka o hiragana"
}, {
    id: "Kali",
    displayName: "kayah li"
}, {
    id: "Khar",
    displayName: "kharoshthi"
}, {
    id: "Khmr",
    displayName: "khmer"
}, {
    id: "Khoj",
    displayName: "khojki"
}, {
    id: "Sind",
    displayName: "khudawadi"
}, {
    id: "Geok",
    displayName: "kutsuri"
}, {
    id: "Lana",
    displayName: "lanna"
}, {
    id: "Laoo",
    displayName: "lao"
}, {
    id: "Latn",
    displayName: "latino"
}, {
    id: "Lepc",
    displayName: "lepcha"
}, {
    id: "Limb",
    displayName: "limbu"
}, {
    id: "Lina",
    displayName: "lineare A"
}, {
    id: "Linb",
    displayName: "lineare B"
}, {
    id: "Sgnw",
    displayName: "linguaggio dei segni"
}, {
    id: "Lisu",
    displayName: "lisu"
}, {
    id: "Loma",
    displayName: "loma"
}, {
    id: "Lyci",
    displayName: "lyci"
}, {
    id: "Lydi",
    displayName: "lydi"
}, {
    id: "Mlym",
    displayName: "malayalam"
}, {
    id: "Mand",
    displayName: "mandaico"
}, {
    id: "Mani",
    displayName: "manicheo"
}, {
    id: "Mtei",
    displayName: "meetei mayek"
}, {
    id: "Mend",
    displayName: "mende"
}, {
    id: "Mero",
    displayName: "meroitico"
}, {
    id: "Mong",
    displayName: "mongolo"
}, {
    id: "Moon",
    displayName: "moon"
}, {
    id: "Mroo",
    displayName: "mro"
}, {
    id: "Nbat",
    displayName: "nabateo"
}, {
    id: "Zxxx",
    displayName: "non scritto"
}, {
    id: "Zmth",
    displayName: "notazione matematica"
}, {
    id: "Nshu",
    displayName: "nushu"
}, {
    id: "Nkoo",
    displayName: "n’ko"
}, {
    id: "Ogam",
    displayName: "ogham"
}, {
    id: "Olck",
    displayName: "ol chiki"
}, {
    id: "Orya",
    displayName: "oriya"
}, {
    id: "Orkh",
    displayName: "orkhon"
}, {
    id: "Osma",
    displayName: "osmanya"
}, {
    id: "Hmng",
    displayName: "pahawn hmong"
}, {
    id: "Phlv",
    displayName: "pahlavi book"
}, {
    id: "Phli",
    displayName: "pahlavi delle iscrizioni"
}, {
    id: "Phlp",
    displayName: "pahlavi psalter"
}, {
    id: "Palm",
    displayName: "palmireno"
}, {
    id: "Prti",
    displayName: "partico delle iscrizioni"
}, {
    id: "Perm",
    displayName: "permico antico"
}, {
    id: "Xpeo",
    displayName: "persiano antico"
}, {
    id: "Phag",
    displayName: "phags-pa"
}, {
    id: "Rjng",
    displayName: "rejang"
}, {
    id: "Roro",
    displayName: "rongorongo"
}, {
    id: "Runr",
    displayName: "runico"
}, {
    id: "Samr",
    displayName: "samaritano"
}, {
    id: "Sara",
    displayName: "sarati"
}, {
    id: "Saur",
    displayName: "saurashtra"
}, {
    id: "Zzzz",
    displayName: "scrittura sconosciuta"
}, {
    id: "Hans",
    displayName: "semplificato"
}, {
    id: "Shrd",
    displayName: "sharada"
}, {
    id: "Shaw",
    displayName: "shaviano"
}, {
    id: "Zsym",
    displayName: "simboli"
}, {
    id: "Cans",
    displayName: "simboli aborigeni canadesi unificati"
}, {
    id: "Blis",
    displayName: "simboli bliss"
}, {
    id: "Sinh",
    displayName: "singalese"
}, {
    id: "Syre",
    displayName: "siriaco estrangelo"
}, {
    id: "Syrj",
    displayName: "siriaco occidentale"
}, {
    id: "Syrn",
    displayName: "siriaco orientale"
}, {
    id: "Syrc",
    displayName: "siriano"
}, {
    id: "Sora",
    displayName: "sora sompeng"
}, {
    id: "Dupl",
    displayName: "stenografia duployan"
}, {
    id: "Xsux",
    displayName: "sumero-accadiano cuneiforme"
}, {
    id: "Sund",
    displayName: "sundanese"
}, {
    id: "Sylo",
    displayName: "syloti nagri"
}, {
    id: "Tglg",
    displayName: "tagalog"
}, {
    id: "Tagb",
    displayName: "tagbanwa"
}, {
    id: "Tale",
    displayName: "tai le"
}, {
    id: "Talu",
    displayName: "tai lue"
}, {
    id: "Tavt",
    displayName: "tai viet"
}, {
    id: "Takr",
    displayName: "takri"
}, {
    id: "Taml",
    displayName: "tamil"
}, {
    id: "Tang",
    displayName: "tangut"
}, {
    id: "Telu",
    displayName: "telugu"
}, {
    id: "Teng",
    displayName: "tengwar"
}, {
    id: "Thaa",
    displayName: "thaana"
}, {
    id: "Thai",
    displayName: "thailandese"
}, {
    id: "Tibt",
    displayName: "tibetano"
}, {
    id: "Tfng",
    displayName: "tifinagh"
}, {
    id: "Tirh",
    displayName: "tirhuta"
}, {
    id: "Hant",
    displayName: "tradizionale"
}, {
    id: "Ugar",
    displayName: "ugarita"
}, {
    id: "Vaii",
    displayName: "vaii"
}, {
    id: "Wara",
    displayName: "varang kshiti"
}, {
    id: "Latf",
    displayName: "variante fraktur del latino"
}, {
    id: "Latg",
    displayName: "variante gaelica del latino"
}, {
    id: "Wole",
    displayName: "woleai"
}, {
    id: "Yiii",
    displayName: "yi"
} ];

inter.currencies = [ {
    id: "AFA",
    displayName: "afgani (1927–2002)"
}, {
    id: "AFN",
    displayName: "afghani",
    symbol: "AFN",
    one: "afghani",
    other: "afghani"
}, {
    id: "CSD",
    displayName: "antico dinaro serbo"
}, {
    id: "XAG",
    displayName: "argento"
}, {
    id: "MGA",
    displayName: "ariary malgascio",
    symbol: "MGA",
    one: "ariary malgascio",
    other: "ariary malgasci"
}, {
    id: "ARA",
    displayName: "austral argentino"
}, {
    id: "THB",
    displayName: "baht thailandese",
    symbol: "฿",
    one: "baht thailandese",
    other: "baht thailandesi"
}, {
    id: "PAB",
    displayName: "balboa panamense",
    symbol: "PAB",
    one: "balboa panamense",
    other: "balboa panamensi"
}, {
    id: "ETB",
    displayName: "birr etiope",
    symbol: "ETB",
    one: "birr etiope",
    other: "birr etiopi"
}, {
    id: "VEB",
    displayName: "bolivar venezuelano (1871–2008)",
    one: "bolivar venezuelano (1871–2008)",
    other: "bolivares venezuelani (1871–2008)"
}, {
    id: "BOB",
    displayName: "boliviano",
    symbol: "BOB",
    one: "boliviano",
    other: "boliviani"
}, {
    id: "VEF",
    displayName: "bolívar venezuelano",
    symbol: "VEF",
    one: "bolívar venezuelano",
    other: "bolívares venezuelani"
}, {
    id: "GHC",
    displayName: "cedi del Ghana"
}, {
    id: "GHS",
    displayName: "cedi ghanese",
    symbol: "GHS",
    one: "cedi ghanese",
    other: "cedi ghanesi"
}, {
    id: "XTS",
    displayName: "codice di verifica della valuta"
}, {
    id: "CRC",
    displayName: "colón costaricano",
    symbol: "CRC",
    one: "colón costaricano",
    other: "colón costaricani"
}, {
    id: "SVC",
    displayName: "colón salvadoregno"
}, {
    id: "NIC",
    displayName: "cordoba nicaraguense",
    one: "cordoba nicaraguense",
    other: "cordoba nicaraguense"
}, {
    id: "CZK",
    displayName: "corona ceca",
    symbol: "CZK",
    one: "corona ceca",
    other: "corone ceche"
}, {
    id: "DKK",
    displayName: "corona danese",
    symbol: "DKK",
    one: "corona danese",
    other: "corone danesi"
}, {
    id: "EEK",
    displayName: "corona dell’Estonia"
}, {
    id: "CSK",
    displayName: "corona forte cecoslovacca"
}, {
    id: "ISK",
    displayName: "corona islandese",
    symbol: "ISK",
    one: "corona islandese",
    other: "corone islandesi"
}, {
    id: "NOK",
    displayName: "corona norvegese",
    symbol: "NOK",
    one: "corona norvegese",
    other: "corone norvegesi"
}, {
    id: "SKK",
    displayName: "corona slovacca"
}, {
    id: "SEK",
    displayName: "corona svedese",
    symbol: "SEK",
    one: "corona svedese",
    other: "corone svedesi"
}, {
    id: "BRC",
    displayName: "cruzado brasiliano"
}, {
    id: "BRN",
    displayName: "cruzado novo brasiliano"
}, {
    id: "BRR",
    displayName: "cruzeiro brasiliano"
}, {
    id: "BRE",
    displayName: "cruzeiro brasiliano (1990–1993)"
}, {
    id: "BRB",
    displayName: "cruzeiro novo brasiliano (1967–1986)"
}, {
    id: "NIO",
    displayName: "córdoba nicaraguense",
    symbol: "NIO",
    one: "córdoba nicaraguense",
    other: "córdoba nicaraguensi"
}, {
    id: "GMD",
    displayName: "dalasi gambiano",
    symbol: "GMD",
    one: "dalasi gambiano",
    other: "dalasi gambiani"
}, {
    id: "MKD",
    displayName: "denar macedone",
    symbol: "MKD",
    one: "dinaro macedone",
    other: "dinari macedoni"
}, {
    id: "BAD",
    displayName: "dinar Bosnia-Herzegovina"
}, {
    id: "DZD",
    displayName: "dinaro algerino",
    symbol: "DZD",
    one: "dinaro algerino",
    other: "dinari algerini"
}, {
    id: "YUN",
    displayName: "dinaro convertibile yugoslavo"
}, {
    id: "HRD",
    displayName: "dinaro croato"
}, {
    id: "BHD",
    displayName: "dinaro del Bahrein",
    symbol: "BHD",
    one: "dinaro del Bahrein",
    other: "dinari del Bahrein"
}, {
    id: "YDD",
    displayName: "dinaro dello Yemen"
}, {
    id: "YUD",
    displayName: "dinaro forte yugoslavo"
}, {
    id: "JOD",
    displayName: "dinaro giordano",
    symbol: "JOD",
    one: "dinaro giordano",
    other: "dinari giordani"
}, {
    id: "IQD",
    displayName: "dinaro iracheno",
    symbol: "IQD",
    one: "dinaro iracheno",
    other: "dinari iracheni"
}, {
    id: "KWD",
    displayName: "dinaro kuwaitiano",
    symbol: "KWD",
    one: "dinaro kuwaitiano",
    other: "dinari kuwaitiani"
}, {
    id: "LYD",
    displayName: "dinaro libico",
    symbol: "LYD",
    one: "dinaro libico",
    other: "dinari libici"
}, {
    id: "YUM",
    displayName: "dinaro noviy yugoslavo"
}, {
    id: "RSD",
    displayName: "dinaro serbo",
    symbol: "RSD",
    one: "dinaro serbo",
    other: "dinara serbi"
}, {
    id: "SDD",
    displayName: "dinaro sudanese"
}, {
    id: "TND",
    displayName: "dinaro tunisino",
    symbol: "TND",
    one: "dinaro tunisino",
    other: "dinari tunisini"
}, {
    id: "AED",
    displayName: "dirham degli Emirati Arabi Uniti",
    symbol: "AED",
    one: "dirham degli EAU",
    other: "dirham degli EAU"
}, {
    id: "MAD",
    displayName: "dirham marocchino",
    symbol: "MAD",
    one: "dirham marocchino",
    other: "dirham marocchini"
}, {
    id: "XDR",
    displayName: "diritti speciali di incasso"
}, {
    id: "STD",
    displayName: "dobra di Sao Tomé e Principe",
    symbol: "STD",
    one: "dobra di Sao Tomé e Principe",
    other: "dobra di Sao Tomé e Principe"
}, {
    id: "AUD",
    displayName: "dollaro australiano",
    symbol: "A$",
    one: "dollaro australiano",
    other: "dollari australiani"
}, {
    id: "CAD",
    displayName: "dollaro canadese",
    symbol: "CA$",
    one: "dollaro canadese",
    other: "dollari canadesi"
}, {
    id: "XCD",
    displayName: "dollaro dei Caraibi orientali",
    symbol: "EC$",
    one: "dollaro dei Caraibi orientali",
    other: "dollari dei Caraibi orientali"
}, {
    id: "BZD",
    displayName: "dollaro del Belize",
    symbol: "BZD",
    one: "dollaro del Belize",
    other: "dollari del Belize"
}, {
    id: "BND",
    displayName: "dollaro del Brunei",
    symbol: "BND",
    one: "dollaro del Brunei",
    other: "dollari del Brunei"
}, {
    id: "SRD",
    displayName: "dollaro del Suriname",
    symbol: "SRD",
    one: "dollaro del Suriname",
    other: "dollari del Suriname"
}, {
    id: "GYD",
    displayName: "dollaro della Guyana",
    symbol: "GYD",
    one: "dollaro della Guyana",
    other: "dollari della Guyana"
}, {
    id: "RHD",
    displayName: "dollaro della Rhodesia"
}, {
    id: "BSD",
    displayName: "dollaro delle Bahamas",
    symbol: "BSD",
    one: "dollaro delle Bahamas",
    other: "dollari delle Bahamas"
}, {
    id: "BMD",
    displayName: "dollaro delle Bermuda",
    symbol: "BMD",
    one: "dollaro delle Bermuda",
    other: "dollari delle Bermuda"
}, {
    id: "FJD",
    displayName: "dollaro delle Figi",
    symbol: "FJD",
    one: "dollaro delle Figi",
    other: "dollari delle Figi"
}, {
    id: "KYD",
    displayName: "dollaro delle Isole Cayman",
    symbol: "KYD",
    one: "dollaro delle Isole Cayman",
    other: "dollari delle Isole Cayman"
}, {
    id: "SBD",
    displayName: "dollaro delle Isole Salomone",
    symbol: "SBD",
    one: "dollaro delle Isole Salomone",
    other: "dollari delle Isole Salomone"
}, {
    id: "ZWD",
    displayName: "dollaro dello Zimbabwe"
}, {
    id: "BBD",
    displayName: "dollaro di Barbados",
    symbol: "BBD",
    one: "dollaro di Barbados",
    other: "dollari di Barbados"
}, {
    id: "HKD",
    displayName: "dollaro di Hong Kong",
    symbol: "HKD",
    one: "dollaro di Hong Kong",
    other: "dollari di Hong Kong"
}, {
    id: "SGD",
    displayName: "dollaro di Singapore",
    symbol: "SGD",
    one: "dollaro di Singapore",
    other: "dollari di Singapore"
}, {
    id: "TTD",
    displayName: "dollaro di Trinidad e Tobago",
    symbol: "TTD",
    one: "dollaro di Trinidad e Tobago",
    other: "dollari di Trinidad e Tobago"
}, {
    id: "JMD",
    displayName: "dollaro giamaicano",
    symbol: "JMD",
    one: "dollaro giamaicano",
    other: "dollari giamaicani"
}, {
    id: "LRD",
    displayName: "dollaro liberiano",
    symbol: "LRD",
    one: "dollaro liberiano",
    other: "dollari liberiani"
}, {
    id: "NAD",
    displayName: "dollaro namibiano",
    symbol: "NAD",
    one: "dollaro namibiano",
    other: "dollari namibiani"
}, {
    id: "NZD",
    displayName: "dollaro neozelandese",
    symbol: "NZ$",
    one: "dollaro neozelandese",
    other: "dollari neozelandesi"
}, {
    id: "USD",
    displayName: "dollaro statunitense",
    symbol: "US$",
    one: "dollaro statunitense",
    other: "dollari statunitensi"
}, {
    id: "USN",
    displayName: "dollaro statunitense (next day)"
}, {
    id: "USS",
    displayName: "dollaro statunitense (same day)"
}, {
    id: "ZWL",
    displayName: "dollaro zimbabwiano (2009)"
}, {
    id: "VND",
    displayName: "dong vietnamita",
    symbol: "₫",
    one: "dong vietnamita",
    other: "dong vietnamiti"
}, {
    id: "GRD",
    displayName: "dracma greca"
}, {
    id: "AMD",
    displayName: "dram armeno",
    symbol: "AMD",
    one: "dram armeno",
    other: "dram armeni"
}, {
    id: "GQE",
    displayName: "ekwele della Guinea Equatoriale"
}, {
    id: "CVE",
    displayName: "escudo capoverdiano",
    symbol: "CVE",
    one: "escudo capoverdiano",
    other: "escudos capoverdiani"
}, {
    id: "MZE",
    displayName: "escudo del Mozambico"
}, {
    id: "GWE",
    displayName: "escudo della Guinea portoghese"
}, {
    id: "TPE",
    displayName: "escudo di Timor"
}, {
    id: "PTE",
    displayName: "escudo portoghese"
}, {
    id: "EUR",
    displayName: "euro",
    symbol: "€",
    one: "euro",
    other: "euro"
}, {
    id: "SRG",
    displayName: "fiorino del Suriname"
}, {
    id: "ANG",
    displayName: "fiorino delle Antille olandesi",
    symbol: "ANG",
    one: "fiorino delle Antille olandesi",
    other: "fiorino delle Antille olandesi"
}, {
    id: "AWG",
    displayName: "fiorino di Aruba",
    symbol: "AWG",
    one: "fiorino di Aruba",
    other: "fiorini di Aruba"
}, {
    id: "NLG",
    displayName: "fiorino olandese"
}, {
    id: "HUF",
    displayName: "fiorino ungherese",
    symbol: "HUF",
    one: "fiorino ungherese",
    other: "fiorini ungheresi"
}, {
    id: "XRE",
    displayName: "fondi RINET"
}, {
    id: "XOF",
    displayName: "franco CFA BCEAO",
    symbol: "CFA",
    one: "franco CFA BCEAO",
    other: "franchi CFA BCEAO"
}, {
    id: "XAF",
    displayName: "franco CFA BEAC",
    symbol: "FCFA",
    one: "franco CFA BEAC",
    other: "franchi CFA BEAC"
}, {
    id: "XPF",
    displayName: "franco CFP",
    symbol: "CFPF",
    one: "franco CFP",
    other: "franchi CFP"
}, {
    id: "XFU",
    displayName: "franco UIC francese"
}, {
    id: "BEF",
    displayName: "franco belga"
}, {
    id: "BEC",
    displayName: "franco belga (convertibile)"
}, {
    id: "BEL",
    displayName: "franco belga (finanziario)"
}, {
    id: "KMF",
    displayName: "franco comoriano",
    symbol: "KMF",
    one: "franco comoriano",
    other: "franchi comoriani"
}, {
    id: "CDF",
    displayName: "franco congolese",
    symbol: "CDF",
    one: "franco congolese",
    other: "franchi congolesi"
}, {
    id: "LUC",
    displayName: "franco convertibile del Lussemburgo"
}, {
    id: "BIF",
    displayName: "franco del Burundi",
    symbol: "BIF",
    one: "franco del Burundi",
    other: "franchi del Burundi"
}, {
    id: "LUF",
    displayName: "franco del Lussemburgo"
}, {
    id: "GNF",
    displayName: "franco della Guinea",
    symbol: "GNF",
    one: "franco della Guinea",
    other: "franchi della Guinea"
}, {
    id: "DJF",
    displayName: "franco di Gibuti",
    symbol: "DJF",
    one: "franco di Gibuti",
    other: "franchi di Gibuti"
}, {
    id: "MLF",
    displayName: "franco di Mali"
}, {
    id: "LUL",
    displayName: "franco finanziario del Lussemburgo"
}, {
    id: "FRF",
    displayName: "franco francese"
}, {
    id: "MGF",
    displayName: "franco malgascio"
}, {
    id: "MAF",
    displayName: "franco marocchino"
}, {
    id: "XFO",
    displayName: "franco oro francese"
}, {
    id: "RWF",
    displayName: "franco ruandese",
    symbol: "RWF",
    one: "franco ruandese",
    other: "franchi ruandesi"
}, {
    id: "CHF",
    displayName: "franco svizzero",
    symbol: "CHF",
    one: "franco svizzero",
    other: "franchi svizzeri"
}, {
    id: "HTG",
    displayName: "gourde haitiano",
    symbol: "HTG",
    one: "gourde haitiano",
    other: "gourde haitiani"
}, {
    id: "UAH",
    displayName: "grivnia ucraina",
    symbol: "UAH",
    one: "grivnia ucraina",
    other: "grivnie ucraine"
}, {
    id: "PYG",
    displayName: "guaraní paraguayano",
    symbol: "PYG",
    one: "guaraní paraguayano",
    other: "guaraní paraguayani"
}, {
    id: "PEI",
    displayName: "inti peruviano"
}, {
    id: "UAK",
    displayName: "karbovanetz ucraino"
}, {
    id: "PGK",
    displayName: "kina papuana",
    symbol: "PGK",
    one: "kina papuana",
    other: "kina papuane"
}, {
    id: "LAK",
    displayName: "kip laotiano",
    symbol: "LAK",
    one: "kip laotiano",
    other: "kip laotiani"
}, {
    id: "HRK",
    displayName: "kuna croata",
    symbol: "HRK",
    one: "kuna croata",
    other: "kune croate"
}, {
    id: "GEK",
    displayName: "kupon larit georgiano"
}, {
    id: "ZMW",
    displayName: "kwacha dello Zambia",
    symbol: "ZMW",
    one: "kwacha zambiano",
    other: "kwacha zambiani"
}, {
    id: "ZMK",
    displayName: "kwacha dello Zambia (1968–2012)",
    one: "kwacha zambiano (1968–2012)",
    other: "kwacha zambiani (1968–2012)"
}, {
    id: "MWK",
    displayName: "kwacha malawiano",
    symbol: "MWK",
    one: "kwacha malawiano",
    other: "kwacha malawiani"
}, {
    id: "AOA",
    displayName: "kwanza angolano",
    symbol: "AOA",
    one: "kwanza angolano",
    other: "kwanzas angolani"
}, {
    id: "AOK",
    displayName: "kwanza angolano (1977–1990)"
}, {
    id: "AOR",
    displayName: "kwanza reajustado angolano (1995–1999)"
}, {
    id: "BUK",
    displayName: "kyat birmano"
}, {
    id: "MMK",
    displayName: "kyat di Myanmar",
    symbol: "MMK",
    one: "kyat di Myanmar",
    other: "kyat di Myanmar"
}, {
    id: "GEL",
    displayName: "lari georgiano",
    symbol: "GEL",
    one: "lari georgiano",
    other: "lari georgiani"
}, {
    id: "LVL",
    displayName: "lats lettone",
    symbol: "LVL",
    one: "lats lettone",
    other: "lati lettoni"
}, {
    id: "ALL",
    displayName: "lek albanese",
    symbol: "ALL",
    one: "lek albanese",
    other: "lekë albanesi"
}, {
    id: "HNL",
    displayName: "lempira honduregna",
    symbol: "HNL",
    one: "lempira honduregna",
    other: "lempire honduregne"
}, {
    id: "SLL",
    displayName: "leone della Sierra Leone",
    symbol: "SLL",
    one: "leone della Sierra Leone",
    other: "leoni della Sierra Leone"
}, {
    id: "ROL",
    displayName: "leu della Romania"
}, {
    id: "MDL",
    displayName: "leu moldavo",
    symbol: "MDL",
    one: "leu moldavo",
    other: "lei moldavi"
}, {
    id: "RON",
    displayName: "leu rumeno",
    symbol: "RON",
    one: "leu rumeno",
    other: "lei rumeni"
}, {
    id: "BGN",
    displayName: "lev bulgaro",
    symbol: "BGN",
    one: "lev bulgaro",
    other: "leva bulgari"
}, {
    id: "BGL",
    displayName: "lev bulgaro (1962–1999)",
    one: "lev bulgaro (1962–1999)",
    other: "leva bulgari (1962–1999)"
}, {
    id: "SZL",
    displayName: "lilangeni dello Swaziland",
    symbol: "SZL",
    one: "lilangeni dello Swaziland",
    other: "lilangeni dello Swaziland"
}, {
    id: "ITL",
    displayName: "lira italiana"
}, {
    id: "LBP",
    displayName: "lira libanese",
    symbol: "LBP",
    one: "lira libanese",
    other: "lire libanesi"
}, {
    id: "MTL",
    displayName: "lira maltese"
}, {
    id: "SYP",
    displayName: "lira siriana",
    symbol: "SYP",
    one: "lira siriana",
    other: "lire siriane"
}, {
    id: "TRY",
    displayName: "lira turca",
    symbol: "TRY",
    one: "lira turca",
    other: "lire turche"
}, {
    id: "TRL",
    displayName: "lira turca (1922–2005)",
    one: "lira turca (1922–2005)",
    other: "lire turche (1922–2005)"
}, {
    id: "LTL",
    displayName: "litas lituano",
    symbol: "LTL",
    one: "litas lituano",
    other: "litas lituani"
}, {
    id: "LSL",
    displayName: "loti del Lesotho"
}, {
    id: "AZN",
    displayName: "manat azero",
    symbol: "AZN",
    one: "manat azero",
    other: "manat azeri"
}, {
    id: "AZM",
    displayName: "manat azero (1993–2006)"
}, {
    id: "TMT",
    displayName: "manat turkmeno",
    symbol: "TMT",
    one: "manat turkmeno",
    other: "manat turkmeni"
}, {
    id: "TMM",
    displayName: "manat turkmeno (1993–2009)"
}, {
    id: "BAM",
    displayName: "marco convertibile della Bosnia-Herzegovina",
    symbol: "BAM",
    one: "marco convertibile della Bosnia-Herzegovina",
    other: "marchi convertibili della Bosnia-Herzegovina"
}, {
    id: "DEM",
    displayName: "marco tedesco"
}, {
    id: "FIM",
    displayName: "markka finlandese"
}, {
    id: "MZN",
    displayName: "metical mozambicano",
    symbol: "MZN",
    one: "metical mozambicano",
    other: "metical mozambicani"
}, {
    id: "BOV",
    displayName: "mvdol boliviano"
}, {
    id: "NGN",
    displayName: "naira nigeriana",
    symbol: "NGN",
    one: "naira nigeriana",
    other: "naire nigeriane"
}, {
    id: "ERN",
    displayName: "nakfa eritreo",
    symbol: "ERN",
    one: "nakfa eritreo",
    other: "nakfa eritrei"
}, {
    id: "BTN",
    displayName: "ngultrum bhutanese",
    symbol: "BTN",
    one: "ngultrum bhutanese",
    other: "ngultrum bhutanesi"
}, {
    id: "TWD",
    displayName: "nuovo dollaro taiwanese",
    symbol: "TWD",
    one: "nuovo dollaro taiwanese",
    other: "nuovi dollari taiwanesi"
}, {
    id: "AON",
    displayName: "nuovo kwanza angolano (1990–2000)"
}, {
    id: "BYB",
    displayName: "nuovo rublo bielorusso (1994–1999)"
}, {
    id: "ILS",
    displayName: "nuovo siclo israeliano",
    symbol: "₪",
    one: "nuovo siclo israeliano",
    other: "nuovi sicli israeliani"
}, {
    id: "PEN",
    displayName: "nuovo sol peruviano",
    symbol: "PEN",
    one: "nuovo sol peruviano",
    other: "nuovi sol peruviani"
}, {
    id: "ZRN",
    displayName: "nuovo zaire dello Zaire"
}, {
    id: "XAU",
    displayName: "oro"
}, {
    id: "DDM",
    displayName: "ostmark della Germania Orientale"
}, {
    id: "MRO",
    displayName: "ouguiya della Mauritania",
    symbol: "MRO",
    one: "ouguiya della Mauritania",
    other: "ouguiya della Mauritania"
}, {
    id: "XPD",
    displayName: "palladio"
}, {
    id: "MOP",
    displayName: "pataca di Macao",
    symbol: "MOP",
    one: "pataca di Macao",
    other: "patacas di Macao"
}, {
    id: "TOP",
    displayName: "paʻanga tongano",
    symbol: "TOP",
    one: "paʻanga tongano",
    other: "paʻanga tongani"
}, {
    id: "ADP",
    displayName: "peseta andorrana"
}, {
    id: "ESP",
    displayName: "peseta spagnola",
    symbol: "₧"
}, {
    id: "ESA",
    displayName: "peseta spagnola account"
}, {
    id: "ESB",
    displayName: "peseta spagnola account convertibile"
}, {
    id: "ARS",
    displayName: "peso argentino",
    symbol: "ARS",
    one: "peso argentino",
    other: "pesos argentini"
}, {
    id: "ARP",
    displayName: "peso argentino (vecchio Cod.)"
}, {
    id: "BOP",
    displayName: "peso boliviano"
}, {
    id: "CLP",
    displayName: "peso cileno",
    symbol: "CLP",
    one: "peso cileno",
    other: "pesos cileni"
}, {
    id: "COP",
    displayName: "peso colombiano",
    symbol: "COP",
    one: "peso colombiano",
    other: "pesos colombiani"
}, {
    id: "CUP",
    displayName: "peso cubano",
    symbol: "CUP",
    one: "peso cubano",
    other: "pesos cubani"
}, {
    id: "CUC",
    displayName: "peso cubano convertibile",
    symbol: "CUC",
    one: "peso cubano convertibile",
    other: "pesos cubani convertibili"
}, {
    id: "GWP",
    displayName: "peso della Guinea-Bissau"
}, {
    id: "DOP",
    displayName: "peso dominicano",
    symbol: "DOP",
    one: "peso dominicano",
    other: "pesos dominicani"
}, {
    id: "PHP",
    displayName: "peso filippino",
    symbol: "PHP",
    one: "peso filippino",
    other: "pesos filippini"
}, {
    id: "MXN",
    displayName: "peso messicano",
    symbol: "MXN",
    one: "peso messicano",
    other: "pesos messicani"
}, {
    id: "MXP",
    displayName: "peso messicano d’argento (1861–1992)"
}, {
    id: "UYP",
    displayName: "peso uruguaiano (1975–1993)"
}, {
    id: "UYI",
    displayName: "peso uruguaiano in unità indicizzate"
}, {
    id: "UYU",
    displayName: "peso uruguayano",
    symbol: "UYU",
    one: "peso uruguayano",
    other: "pesos uruguayani"
}, {
    id: "XPT",
    displayName: "platino"
}, {
    id: "BWP",
    displayName: "pula del Botswana",
    symbol: "BWP",
    one: "pula del Botswana",
    other: "pula del Botswana"
}, {
    id: "GTQ",
    displayName: "quetzal guatemalteco",
    symbol: "GTQ",
    one: "quetzal guatemalteco",
    other: "quetzal guatemaltechi"
}, {
    id: "ZAR",
    displayName: "rand sudafricano",
    symbol: "ZAR",
    one: "rand sudafricano",
    other: "rand sudafricani"
}, {
    id: "ZAL",
    displayName: "rand sudafricano (finanziario)"
}, {
    id: "BRL",
    displayName: "real brasiliano",
    symbol: "BRL",
    one: "real brasiliano",
    other: "real brasiliani"
}, {
    id: "CNY",
    displayName: "renminbi cinese",
    symbol: "CN¥",
    one: "renmimbi cinese",
    other: "renmimbi cinesi"
}, {
    id: "IRR",
    displayName: "rial iraniano",
    symbol: "IRR",
    one: "rial iraniano",
    other: "rial iraniani"
}, {
    id: "OMR",
    displayName: "rial omanita",
    symbol: "OMR",
    one: "rial omanita",
    other: "rial omaniti"
}, {
    id: "QAR",
    displayName: "rial qatariano",
    symbol: "QAR",
    one: "rial qatariano",
    other: "rial qatariani"
}, {
    id: "KHR",
    displayName: "riel cambogiano",
    symbol: "KHR",
    one: "riel cambogiano",
    other: "riel cambogiani"
}, {
    id: "MYR",
    displayName: "ringgit malese",
    symbol: "MYR",
    one: "ringgit malese",
    other: "ringgit malesi"
}, {
    id: "SAR",
    displayName: "riyal saudita",
    symbol: "SAR",
    one: "riyal saudita",
    other: "riyal sauditi"
}, {
    id: "YER",
    displayName: "riyal yemenita",
    symbol: "YER",
    one: "rial yemenita",
    other: "rial yemeniti"
}, {
    id: "BYR",
    displayName: "rublo bielorusso",
    symbol: "BYR",
    one: "rublo bielorusso",
    other: "rubli bielorussi"
}, {
    id: "TJR",
    displayName: "rublo del Tajikistan"
}, {
    id: "RUR",
    displayName: "rublo della CSI",
    symbol: "р."
}, {
    id: "LVR",
    displayName: "rublo lettone"
}, {
    id: "RUB",
    displayName: "rublo russo",
    symbol: "RUB",
    one: "rublo russo",
    other: "rubli russi"
}, {
    id: "SUR",
    displayName: "rublo sovietico"
}, {
    id: "MVR",
    displayName: "rufiyaa delle Maldive",
    symbol: "MVR",
    one: "rufiyaa delle Maldive",
    other: "rufiyaa delle Maldive"
}, {
    id: "SCR",
    displayName: "rupia delle Seychelles",
    symbol: "SCR",
    one: "rupia delle Seychelles",
    other: "rupie delle Seychelles"
}, {
    id: "LKR",
    displayName: "rupia di Sri Lanka",
    symbol: "LKR",
    one: "rupia di Sri Lanka",
    other: "rupie di Sri Lanka"
}, {
    id: "INR",
    displayName: "rupia indiana",
    symbol: "₹",
    one: "rupia indiana",
    other: "rupie indiane"
}, {
    id: "IDR",
    displayName: "rupia indonesiana",
    symbol: "IDR",
    one: "rupia indonesiana",
    other: "rupie indonesiane"
}, {
    id: "MUR",
    displayName: "rupia mauriziana",
    symbol: "MUR",
    one: "rupia mauriziana",
    other: "rupie mauriziane"
}, {
    id: "NPR",
    displayName: "rupia nepalese",
    symbol: "NPR",
    one: "rupia nepalese",
    other: "rupie nepalesi"
}, {
    id: "PKR",
    displayName: "rupia pakistana",
    symbol: "PKR",
    one: "rupia pakistana",
    other: "rupie pakistane"
}, {
    id: "ATS",
    displayName: "scellino austriaco"
}, {
    id: "TZS",
    displayName: "scellino della Tanzania",
    symbol: "TZS",
    one: "scellino della Tanzania",
    other: "scellini della Tanzania"
}, {
    id: "KES",
    displayName: "scellino keniota",
    symbol: "KES",
    one: "scellino keniota",
    other: "scellini keniota"
}, {
    id: "SOS",
    displayName: "scellino somalo",
    symbol: "SOS",
    one: "scellino somalo",
    other: "scellini somali"
}, {
    id: "UGX",
    displayName: "scellino ugandese",
    symbol: "UGX",
    one: "scellino ugandese",
    other: "scellini ugandesi"
}, {
    id: "UGS",
    displayName: "scellino ugandese (1966–1987)"
}, {
    id: "PES",
    displayName: "sol peruviano"
}, {
    id: "KGS",
    displayName: "som kirghiso",
    symbol: "KGS",
    one: "som kirghiso",
    other: "som kirghisi"
}, {
    id: "TJS",
    displayName: "somoni tagiko",
    symbol: "TJS",
    one: "somoni tagiko",
    other: "somoni tagiki"
}, {
    id: "GBP",
    displayName: "sterlina britannica",
    symbol: "£",
    one: "sterlina britannica",
    other: "sterline britanniche"
}, {
    id: "CYP",
    displayName: "sterlina cipriota"
}, {
    id: "FKP",
    displayName: "sterlina delle Falkland",
    symbol: "FKP",
    one: "sterlina delle Falkland",
    other: "sterline delle Falkland"
}, {
    id: "GIP",
    displayName: "sterlina di Gibilterra",
    symbol: "GIP",
    one: "sterlina di Gibilterra",
    other: "sterline di Gibilterra"
}, {
    id: "SHP",
    displayName: "sterlina di Sant’Elena",
    symbol: "SHP",
    one: "sterlina di Sant’Elena",
    other: "sterline di Sant’Elena"
}, {
    id: "EGP",
    displayName: "sterlina egiziana",
    symbol: "EGP",
    one: "sterlina egiziana",
    other: "sterline egiziane"
}, {
    id: "IEP",
    displayName: "sterlina irlandese"
}, {
    id: "ILP",
    displayName: "sterlina israeliana"
}, {
    id: "MTP",
    displayName: "sterlina maltese"
}, {
    id: "SSP",
    displayName: "sterlina sud-sudanese",
    symbol: "SSP",
    one: "sterlina sud-sudanese",
    other: "sterline sud-sudanesi"
}, {
    id: "SDG",
    displayName: "sterlina sudanese",
    symbol: "SDG",
    one: "sterlina sudanese",
    other: "sterline sudanesi"
}, {
    id: "ECS",
    displayName: "sucre dell’Ecuador"
}, {
    id: "UZS",
    displayName: "sum uzbeco",
    symbol: "UZS",
    one: "sum uzbeco",
    other: "sum uzbechi"
}, {
    id: "GNS",
    displayName: "syli della Guinea"
}, {
    id: "BDT",
    displayName: "taka bangladese",
    symbol: "BDT",
    one: "taka bengalese",
    other: "taka bengalesi"
}, {
    id: "WST",
    displayName: "tala samoano",
    symbol: "WST",
    one: "tala samoano",
    other: "tala samoani"
}, {
    id: "SIT",
    displayName: "tallero sloveno"
}, {
    id: "LTT",
    displayName: "talonas lituani"
}, {
    id: "KZT",
    displayName: "tenge kazako",
    symbol: "KZT",
    one: "tenge kazako",
    other: "tenge kazaki"
}, {
    id: "MNT",
    displayName: "tugrik mongolo",
    symbol: "MNT",
    one: "tugrik mongolo",
    other: "tugrik mongoli"
}, {
    id: "MXV",
    displayName: "unidad de inversion (UDI) messicana"
}, {
    id: "ECV",
    displayName: "unidad de valor constante (UVC) dell’Ecuador"
}, {
    id: "CLF",
    displayName: "unidades de fomento chilene"
}, {
    id: "XBA",
    displayName: "unità composita europea"
}, {
    id: "XBC",
    displayName: "unità di acconto europea (XBC)"
}, {
    id: "XBD",
    displayName: "unità di acconto europea (XBD)"
}, {
    id: "XBB",
    displayName: "unità monetaria europea"
}, {
    id: "XXX",
    displayName: "valuta sconosciuta",
    one: "(valuta sconosciuta)",
    other: "(valute sconosciute)"
}, {
    id: "VUV",
    displayName: "vatu di Vanuatu",
    symbol: "VUV",
    one: "vatu di Vanuatu",
    other: "vatu di Vanuatu"
}, {
    id: "KPW",
    displayName: "won nordcoreano",
    symbol: "KPW",
    one: "won nordcoreano",
    other: "won nordcoreani"
}, {
    id: "KRW",
    displayName: "won sudcoreano",
    symbol: "KRW",
    one: "won sudcoreano",
    other: "won sudcoreani"
}, {
    id: "JPY",
    displayName: "yen giapponese",
    symbol: "JPY",
    one: "yen giapponese",
    other: "yen giapponesi"
}, {
    id: "ZRZ",
    displayName: "zaire dello Zaire"
}, {
    id: "PLZ",
    displayName: "złoty Polacco (1950–1995)",
    one: "złoty polacco (1950–1995)",
    other: "złoty polacchi (1950–1995)"
}, {
    id: "PLN",
    displayName: "złoty polacco",
    symbol: "PLN",
    one: "złoty polacco",
    other: "złoty polacchi"
} ];

module.exports = inter;